    TEST(gbcemu, opcode_cb_fa) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB FA 0000
        gbc.setState(0x1e60, 0xc421, 0x49e0, 0x1051, 0xe75d, 0xb562, 0x0, 0x0);
        gbc.writeMem(0x1e60, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xc421);
        EXPECT(gbc.pc(), 0x1e62);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FA 0001
        gbc.setState(0x254, 0x8add, 0x9ce0, 0x2f83, 0xbe46, 0xffc7, 0x1, 0x1);
        gbc.writeMem(0x254, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x8add);
        EXPECT(gbc.pc(), 0x256);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FA 0002
        gbc.setState(0x54a, 0xc7ef, 0xa80, 0x18a3, 0xa8b5, 0x5ee4, 0x1, 0x0);
        gbc.writeMem(0x54a, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0xc7ef);
        EXPECT(gbc.pc(), 0x54c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FA 0003
        gbc.setState(0x4bbe, 0x3b8e, 0xd730, 0x4eec, 0x9cb, 0xf1b2, 0x0, 0x1);
        gbc.writeMem(0x4bbe, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x3b8e);
        EXPECT(gbc.pc(), 0x4bc0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FA 0004
        gbc.setState(0x120a, 0x4fb, 0x1f50, 0x698d, 0x92a5, 0x491f, 0x0, 0x0);
        gbc.writeMem(0x120a, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x4fb);
        EXPECT(gbc.pc(), 0x120c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FA 0005
        gbc.setState(0x4a7a, 0xe947, 0xc320, 0xb1c0, 0x53a8, 0xa228, 0x1, 0x0);
        gbc.writeMem(0x4a7a, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xe947);
        EXPECT(gbc.pc(), 0x4a7c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FA 0006
        gbc.setState(0xef12, 0xc3d2, 0x3820, 0x6480, 0x8afc, 0xc32d, 0x0, 0x0);
        gbc.writeMem(0xef12, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0xc3d2);
        EXPECT(gbc.pc(), 0xef14);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xef12), 0xcb);
        EXPECT(gbc.readMem(0xef13), 0xfa);
        // CB FA 0007
        gbc.setState(0xed2c, 0xe9df, 0x7ec0, 0xbaa, 0x5300, 0x74d7, 0x1, 0x1);
        gbc.writeMem(0xed2c, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0xe9df);
        EXPECT(gbc.pc(), 0xed2e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xed2c), 0xcb);
        EXPECT(gbc.readMem(0xed2d), 0xfa);
        // CB FA 0008
        gbc.setState(0x62a9, 0xb14d, 0xa170, 0xabb2, 0xb789, 0x3bae, 0x0, 0x1);
        gbc.writeMem(0x62a9, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0xb14d);
        EXPECT(gbc.pc(), 0x62ab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FA 0009
        gbc.setState(0xa4bb, 0x9ed, 0x6e70, 0x6cd6, 0x8a7a, 0xc6d4, 0x1, 0x0);
        gbc.writeMem(0xa4bb, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x9ed);
        EXPECT(gbc.pc(), 0xa4bd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa4bb), 0xcb);
        EXPECT(gbc.readMem(0xa4bc), 0xfa);
        // CB FA 000A
        gbc.setState(0x70db, 0xc898, 0xacc0, 0x92dc, 0x71cd, 0x8605, 0x0, 0x0);
        gbc.writeMem(0x70db, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0xc898);
        EXPECT(gbc.pc(), 0x70dd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FA 000B
        gbc.setState(0xd8aa, 0xd102, 0xbfd0, 0x2aad, 0x5d31, 0x5dbc, 0x0, 0x0);
        gbc.writeMem(0xd8aa, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0xd102);
        EXPECT(gbc.pc(), 0xd8ac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd8aa), 0xcb);
        EXPECT(gbc.readMem(0xd8ab), 0xfa);
        // CB FA 000C
        gbc.setState(0x559f, 0xfa9, 0xd6e0, 0xab22, 0x23b5, 0xabc7, 0x0, 0x1);
        gbc.writeMem(0x559f, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0xfa9);
        EXPECT(gbc.pc(), 0x55a1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FA 000E
        gbc.setState(0xc9e5, 0xfd1b, 0xb0, 0x1696, 0x5f1c, 0xfe9, 0x1, 0x1);
        gbc.writeMem(0xc9e5, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0xfd1b);
        EXPECT(gbc.pc(), 0xc9e7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc9e5), 0xcb);
        EXPECT(gbc.readMem(0xc9e6), 0xfa);
        // CB FA 000F
        gbc.setState(0x713e, 0xc19d, 0xd220, 0xe9b1, 0x7e6c, 0xb3b2, 0x0, 0x1);
        gbc.writeMem(0x713e, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0xc19d);
        EXPECT(gbc.pc(), 0x7140);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FA 0010
        gbc.setState(0xd156, 0x145b, 0xeb20, 0x319d, 0x84df, 0xb35a, 0x0, 0x1);
        gbc.writeMem(0xd156, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x145b);
        EXPECT(gbc.pc(), 0xd158);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd156), 0xcb);
        EXPECT(gbc.readMem(0xd157), 0xfa);
        // CB FA 0011
        gbc.setState(0x908c, 0x39d3, 0xbd90, 0x2f5d, 0x7492, 0x420e, 0x1, 0x0);
        gbc.writeMem(0x908c, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x39d3);
        EXPECT(gbc.pc(), 0x908e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x908c), 0xcb);
        EXPECT(gbc.readMem(0x908d), 0xfa);
        // CB FA 0012
        gbc.setState(0x6188, 0x8b6b, 0x7100, 0x2684, 0xc256, 0xa47c, 0x0, 0x1);
        gbc.writeMem(0x6188, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x8b6b);
        EXPECT(gbc.pc(), 0x618a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FA 0013
        gbc.setState(0xe47b, 0x2dbd, 0xea0, 0x7b54, 0xafa5, 0x6ee8, 0x0, 0x0);
        gbc.writeMem(0xe47b, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x2dbd);
        EXPECT(gbc.pc(), 0xe47d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe47b), 0xcb);
        EXPECT(gbc.readMem(0xe47c), 0xfa);
        // CB FA 0014
        gbc.setState(0x1c52, 0x11d0, 0x96c0, 0xb877, 0x79ba, 0xc59a, 0x1, 0x0);
        gbc.writeMem(0x1c52, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x11d0);
        EXPECT(gbc.pc(), 0x1c54);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FA 0015
        gbc.setState(0x8436, 0x4410, 0x1110, 0x86f, 0x8881, 0xd4d1, 0x0, 0x0);
        gbc.writeMem(0x8436, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x4410);
        EXPECT(gbc.pc(), 0x8438);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8436), 0xcb);
        EXPECT(gbc.readMem(0x8437), 0xfa);
        // CB FA 0016
        gbc.setState(0xdce2, 0xdc0, 0xff60, 0x8d6c, 0x251c, 0x3947, 0x0, 0x0);
        gbc.writeMem(0xdce2, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0xdc0);
        EXPECT(gbc.pc(), 0xdce4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdce2), 0xcb);
        EXPECT(gbc.readMem(0xdce3), 0xfa);
        // CB FA 0017
        gbc.setState(0x15c8, 0x300f, 0x1020, 0x66dc, 0xe941, 0xb5ff, 0x0, 0x0);
        gbc.writeMem(0x15c8, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x300f);
        EXPECT(gbc.pc(), 0x15ca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FA 0018
        gbc.setState(0x6b3e, 0xbc04, 0xb990, 0xa69c, 0x492d, 0xf6df, 0x1, 0x1);
        gbc.writeMem(0x6b3e, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0xbc04);
        EXPECT(gbc.pc(), 0x6b40);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FA 0019
        gbc.setState(0x95ce, 0x463b, 0xa9a0, 0xb4e9, 0x7aef, 0xe5af, 0x0, 0x0);
        gbc.writeMem(0x95ce, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x463b);
        EXPECT(gbc.pc(), 0x95d0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x95ce), 0xcb);
        EXPECT(gbc.readMem(0x95cf), 0xfa);
        // CB FA 001A
        gbc.setState(0x2d5a, 0xbc5b, 0x59d0, 0xd741, 0x4b5b, 0x33c5, 0x1, 0x1);
        gbc.writeMem(0x2d5a, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0xbc5b);
        EXPECT(gbc.pc(), 0x2d5c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FA 001B
        gbc.setState(0x92a5, 0x471e, 0x38b0, 0x509b, 0xc5b, 0x4ca9, 0x0, 0x1);
        gbc.writeMem(0x92a5, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x471e);
        EXPECT(gbc.pc(), 0x92a7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x92a5), 0xcb);
        EXPECT(gbc.readMem(0x92a6), 0xfa);
        // CB FA 001C
        gbc.setState(0x2fd0, 0xaa5f, 0x2aa0, 0xc34, 0xf442, 0x3e15, 0x0, 0x0);
        gbc.writeMem(0x2fd0, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0xaa5f);
        EXPECT(gbc.pc(), 0x2fd2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FA 001D
        gbc.setState(0xfcb, 0xf1c0, 0x7520, 0x5227, 0x44cd, 0x78, 0x1, 0x0);
        gbc.writeMem(0xfcb, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0xf1c0);
        EXPECT(gbc.pc(), 0xfcd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FA 001E
        gbc.setState(0xde49, 0x2126, 0x7bd0, 0x60e9, 0xd0ee, 0x161b, 0x1, 0x1);
        gbc.writeMem(0xde49, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x2126);
        EXPECT(gbc.pc(), 0xde4b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xde49), 0xcb);
        EXPECT(gbc.readMem(0xde4a), 0xfa);
        // CB FA 001F
        gbc.setState(0xa1e3, 0xfbf4, 0xe580, 0xd7c7, 0x5189, 0x1fd5, 0x1, 0x0);
        gbc.writeMem(0xa1e3, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0xfbf4);
        EXPECT(gbc.pc(), 0xa1e5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa1e3), 0xcb);
        EXPECT(gbc.readMem(0xa1e4), 0xfa);
        // CB FA 0020
        gbc.setState(0x2c09, 0xfa2d, 0x18a0, 0x185, 0x47c6, 0xfb57, 0x0, 0x1);
        gbc.writeMem(0x2c09, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0xfa2d);
        EXPECT(gbc.pc(), 0x2c0b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FA 0021
        gbc.setState(0x3f67, 0x9e0d, 0xac60, 0x3ec7, 0x2742, 0x4eda, 0x0, 0x1);
        gbc.writeMem(0x3f67, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x9e0d);
        EXPECT(gbc.pc(), 0x3f69);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FA 0022
        gbc.setState(0x880, 0xded7, 0x1bf0, 0x1534, 0x5a4d, 0x3da6, 0x0, 0x0);
        gbc.writeMem(0x880, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0xded7);
        EXPECT(gbc.pc(), 0x882);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FA 0025
        gbc.setState(0x50ed, 0xd39a, 0x1ae0, 0x9e9f, 0xfaa1, 0x8213, 0x0, 0x1);
        gbc.writeMem(0x50ed, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0xd39a);
        EXPECT(gbc.pc(), 0x50ef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FA 0026
        gbc.setState(0xe6ec, 0x1d0f, 0xee90, 0x21ae, 0x99a, 0x1c8, 0x0, 0x0);
        gbc.writeMem(0xe6ec, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x1d0f);
        EXPECT(gbc.pc(), 0xe6ee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe6ec), 0xcb);
        EXPECT(gbc.readMem(0xe6ed), 0xfa);
        // CB FA 0027
        gbc.setState(0xe260, 0xa8a2, 0xc9d0, 0x769b, 0x6b4, 0xabdd, 0x0, 0x1);
        gbc.writeMem(0xe260, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0xa8a2);
        EXPECT(gbc.pc(), 0xe262);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe260), 0xcb);
        EXPECT(gbc.readMem(0xe261), 0xfa);
        // CB FA 0028
        gbc.setState(0xb39, 0xbd86, 0x3790, 0xc076, 0x72fc, 0xdec6, 0x0, 0x1);
        gbc.writeMem(0xb39, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0xbd86);
        EXPECT(gbc.pc(), 0xb3b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FA 0029
        gbc.setState(0x264e, 0x5122, 0xa980, 0xa31d, 0x7258, 0x186c, 0x1, 0x0);
        gbc.writeMem(0x264e, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x5122);
        EXPECT(gbc.pc(), 0x2650);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FA 002A
        gbc.setState(0xa6ee, 0xa108, 0xe8e0, 0xe4c8, 0x130, 0x164a, 0x0, 0x0);
        gbc.writeMem(0xa6ee, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xa108);
        EXPECT(gbc.pc(), 0xa6f0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa6ee), 0xcb);
        EXPECT(gbc.readMem(0xa6ef), 0xfa);
        // CB FA 002B
        gbc.setState(0x294e, 0xcf07, 0xca40, 0x3bb3, 0x29dc, 0x6039, 0x1, 0x1);
        gbc.writeMem(0x294e, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0xcf07);
        EXPECT(gbc.pc(), 0x2950);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FA 002C
        gbc.setState(0x93b, 0x2d7c, 0x1660, 0x5173, 0xff23, 0xcdcf, 0x0, 0x1);
        gbc.writeMem(0x93b, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x2d7c);
        EXPECT(gbc.pc(), 0x93d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FA 002D
        gbc.setState(0xd647, 0xf18d, 0xfe80, 0x595c, 0x7adf, 0x42bc, 0x0, 0x0);
        gbc.writeMem(0xd647, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0xf18d);
        EXPECT(gbc.pc(), 0xd649);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd647), 0xcb);
        EXPECT(gbc.readMem(0xd648), 0xfa);
        // CB FA 002E
        gbc.setState(0x685c, 0x4199, 0x4380, 0x7ff0, 0x17b4, 0x25d3, 0x1, 0x1);
        gbc.writeMem(0x685c, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x4199);
        EXPECT(gbc.pc(), 0x685e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FA 002F
        gbc.setState(0xe16b, 0x8f3f, 0xa560, 0x1593, 0xf7f6, 0x6995, 0x1, 0x1);
        gbc.writeMem(0xe16b, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x8f3f);
        EXPECT(gbc.pc(), 0xe16d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe16b), 0xcb);
        EXPECT(gbc.readMem(0xe16c), 0xfa);
        // CB FA 0030
        gbc.setState(0x5993, 0xa9bb, 0x4490, 0x4a13, 0x2f6a, 0x5ec0, 0x1, 0x1);
        gbc.writeMem(0x5993, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0xa9bb);
        EXPECT(gbc.pc(), 0x5995);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FA 0031
        gbc.setState(0x7a92, 0x8ec3, 0x7a40, 0x6bde, 0x1193, 0xb08b, 0x0, 0x0);
        gbc.writeMem(0x7a92, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x8ec3);
        EXPECT(gbc.pc(), 0x7a94);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FA 0032
        gbc.setState(0x1511, 0x4ca0, 0xfa10, 0x62ff, 0x9a8a, 0x8a56, 0x0, 0x1);
        gbc.writeMem(0x1511, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x4ca0);
        EXPECT(gbc.pc(), 0x1513);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FA 0033
        gbc.setState(0x7507, 0xf33e, 0xd1d0, 0xbf87, 0x42f5, 0x6575, 0x0, 0x1);
        gbc.writeMem(0x7507, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xf33e);
        EXPECT(gbc.pc(), 0x7509);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FA 0034
        gbc.setState(0xe1a5, 0xa0ee, 0xe380, 0x4c94, 0x40, 0x1c1, 0x0, 0x0);
        gbc.writeMem(0xe1a5, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0xa0ee);
        EXPECT(gbc.pc(), 0xe1a7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe1a5), 0xcb);
        EXPECT(gbc.readMem(0xe1a6), 0xfa);
        // CB FA 0035
        gbc.setState(0xefeb, 0x3b34, 0x7710, 0x654c, 0x5b4a, 0xf8c5, 0x1, 0x0);
        gbc.writeMem(0xefeb, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x3b34);
        EXPECT(gbc.pc(), 0xefed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xefeb), 0xcb);
        EXPECT(gbc.readMem(0xefec), 0xfa);
        // CB FA 0036
        gbc.setState(0x87e9, 0x7f4c, 0x1c30, 0x77ca, 0xd2f3, 0x5cd8, 0x1, 0x1);
        gbc.writeMem(0x87e9, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x7f4c);
        EXPECT(gbc.pc(), 0x87eb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x87e9), 0xcb);
        EXPECT(gbc.readMem(0x87ea), 0xfa);
        // CB FA 0037
        gbc.setState(0x2c48, 0xe0b9, 0x3b10, 0x778b, 0xf9cf, 0x637a, 0x0, 0x0);
        gbc.writeMem(0x2c48, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xe0b9);
        EXPECT(gbc.pc(), 0x2c4a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FA 0038
        gbc.setState(0x6f00, 0x8135, 0xe8a0, 0x62df, 0x15d8, 0xc5ff, 0x1, 0x0);
        gbc.writeMem(0x6f00, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x8135);
        EXPECT(gbc.pc(), 0x6f02);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FA 0039
        gbc.setState(0xd57a, 0x9f66, 0x4770, 0x51f3, 0x36c9, 0xde3d, 0x1, 0x0);
        gbc.writeMem(0xd57a, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x9f66);
        EXPECT(gbc.pc(), 0xd57c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd57a), 0xcb);
        EXPECT(gbc.readMem(0xd57b), 0xfa);
        // CB FA 003A
        gbc.setState(0x63f3, 0x8aaf, 0x940, 0x975f, 0x3ab9, 0x16a0, 0x1, 0x0);
        gbc.writeMem(0x63f3, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x8aaf);
        EXPECT(gbc.pc(), 0x63f5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FA 003B
        gbc.setState(0x39f7, 0x6d13, 0x7110, 0x548e, 0x4a17, 0x70fe, 0x0, 0x1);
        gbc.writeMem(0x39f7, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x6d13);
        EXPECT(gbc.pc(), 0x39f9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FA 003C
        gbc.setState(0x9c2f, 0x8138, 0x2a50, 0x72e6, 0x2b6, 0xf5a8, 0x1, 0x0);
        gbc.writeMem(0x9c2f, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x8138);
        EXPECT(gbc.pc(), 0x9c31);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9c2f), 0xcb);
        EXPECT(gbc.readMem(0x9c30), 0xfa);
        // CB FA 003D
        gbc.setState(0x70de, 0xdca9, 0x3300, 0x8317, 0x6be3, 0xc434, 0x1, 0x0);
        gbc.writeMem(0x70de, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xdca9);
        EXPECT(gbc.pc(), 0x70e0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FA 003E
        gbc.setState(0xe54c, 0x29a5, 0xa480, 0x610e, 0x9e61, 0x3263, 0x0, 0x0);
        gbc.writeMem(0xe54c, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x29a5);
        EXPECT(gbc.pc(), 0xe54e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe54c), 0xcb);
        EXPECT(gbc.readMem(0xe54d), 0xfa);
        // CB FA 003F
        gbc.setState(0x55fe, 0x6046, 0xc040, 0xdc40, 0x9a3, 0x6444, 0x1, 0x0);
        gbc.writeMem(0x55fe, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x6046);
        EXPECT(gbc.pc(), 0x5600);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FA 0040
        gbc.setState(0x1d00, 0x10be, 0x5010, 0x660c, 0x35dd, 0x88d8, 0x0, 0x0);
        gbc.writeMem(0x1d00, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x10be);
        EXPECT(gbc.pc(), 0x1d02);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FA 0041
        gbc.setState(0x29fb, 0x7907, 0x1e40, 0xfab5, 0x1628, 0x9ee2, 0x1, 0x0);
        gbc.writeMem(0x29fb, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x7907);
        EXPECT(gbc.pc(), 0x29fd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FA 0042
        gbc.setState(0x424, 0x38f0, 0x8a70, 0x6514, 0xaaac, 0x42da, 0x1, 0x1);
        gbc.writeMem(0x424, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x38f0);
        EXPECT(gbc.pc(), 0x426);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FA 0043
        gbc.setState(0x4f91, 0xc7f9, 0xb330, 0x3fa8, 0x1e92, 0x3d11, 0x1, 0x1);
        gbc.writeMem(0x4f91, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0xc7f9);
        EXPECT(gbc.pc(), 0x4f93);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FA 0044
        gbc.setState(0xe8c8, 0x8eb1, 0x3b70, 0xc51, 0x9c2e, 0xa546, 0x0, 0x0);
        gbc.writeMem(0xe8c8, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x8eb1);
        EXPECT(gbc.pc(), 0xe8ca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe8c8), 0xcb);
        EXPECT(gbc.readMem(0xe8c9), 0xfa);
        // CB FA 0045
        gbc.setState(0x86c8, 0xa193, 0x9690, 0x52c1, 0x33cd, 0xab78, 0x0, 0x1);
        gbc.writeMem(0x86c8, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0xa193);
        EXPECT(gbc.pc(), 0x86ca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x86c8), 0xcb);
        EXPECT(gbc.readMem(0x86c9), 0xfa);
        // CB FA 0046
        gbc.setState(0x25c7, 0xcb04, 0x57b0, 0xc0f0, 0x663d, 0x965, 0x1, 0x0);
        gbc.writeMem(0x25c7, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0xcb04);
        EXPECT(gbc.pc(), 0x25c9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FA 0047
        gbc.setState(0x5392, 0x31fb, 0xca00, 0xbb0c, 0xf416, 0x3e53, 0x1, 0x1);
        gbc.writeMem(0x5392, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x31fb);
        EXPECT(gbc.pc(), 0x5394);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FA 0048
        gbc.setState(0xb4b5, 0xdb2a, 0xfc10, 0xe32a, 0x9dfd, 0x623b, 0x1, 0x1);
        gbc.writeMem(0xb4b5, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0xdb2a);
        EXPECT(gbc.pc(), 0xb4b7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb4b5), 0xcb);
        EXPECT(gbc.readMem(0xb4b6), 0xfa);
        // CB FA 0049
        gbc.setState(0x583f, 0x621, 0x19a0, 0xe2c1, 0xfef9, 0x78fe, 0x1, 0x0);
        gbc.writeMem(0x583f, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x621);
        EXPECT(gbc.pc(), 0x5841);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FA 004A
        gbc.setState(0xe644, 0x7a0f, 0x6560, 0x5063, 0x15f, 0x69e1, 0x0, 0x0);
        gbc.writeMem(0xe644, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x7a0f);
        EXPECT(gbc.pc(), 0xe646);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe644), 0xcb);
        EXPECT(gbc.readMem(0xe645), 0xfa);
        // CB FA 004B
        gbc.setState(0x626f, 0x143e, 0x5e50, 0x5cf2, 0xc8b, 0xf5f9, 0x1, 0x1);
        gbc.writeMem(0x626f, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x143e);
        EXPECT(gbc.pc(), 0x6271);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FA 004D
        gbc.setState(0x7bc1, 0x135c, 0x9190, 0x7981, 0x8305, 0x8ec, 0x1, 0x1);
        gbc.writeMem(0x7bc1, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x135c);
        EXPECT(gbc.pc(), 0x7bc3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FA 004E
        gbc.setState(0xc252, 0xf4a2, 0xfef0, 0x5255, 0x861f, 0x2db1, 0x1, 0x1);
        gbc.writeMem(0xc252, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0xf4a2);
        EXPECT(gbc.pc(), 0xc254);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc252), 0xcb);
        EXPECT(gbc.readMem(0xc253), 0xfa);
        // CB FA 004F
        gbc.setState(0x6dd1, 0xa72, 0xce0, 0x7278, 0x1d2c, 0x3ca7, 0x0, 0x1);
        gbc.writeMem(0x6dd1, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xa72);
        EXPECT(gbc.pc(), 0x6dd3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FA 0050
        gbc.setState(0xbce4, 0x38b5, 0x87e0, 0xcfae, 0x6593, 0x40fe, 0x1, 0x1);
        gbc.writeMem(0xbce4, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x38b5);
        EXPECT(gbc.pc(), 0xbce6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbce4), 0xcb);
        EXPECT(gbc.readMem(0xbce5), 0xfa);
        // CB FA 0051
        gbc.setState(0xe29a, 0xe56b, 0x5010, 0xca27, 0xc0b4, 0xd135, 0x0, 0x0);
        gbc.writeMem(0xe29a, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0xe56b);
        EXPECT(gbc.pc(), 0xe29c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe29a), 0xcb);
        EXPECT(gbc.readMem(0xe29b), 0xfa);
        // CB FA 0052
        gbc.setState(0x36e2, 0xec0b, 0x4810, 0x8655, 0x6c7e, 0x1239, 0x0, 0x1);
        gbc.writeMem(0x36e2, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0xec0b);
        EXPECT(gbc.pc(), 0x36e4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FA 0053
        gbc.setState(0x94bf, 0x2fd7, 0x9230, 0x4f59, 0xa1af, 0xf044, 0x1, 0x1);
        gbc.writeMem(0x94bf, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x2fd7);
        EXPECT(gbc.pc(), 0x94c1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x94bf), 0xcb);
        EXPECT(gbc.readMem(0x94c0), 0xfa);
        // CB FA 0054
        gbc.setState(0x7125, 0x5c97, 0x60a0, 0xdb95, 0x34cd, 0xdc20, 0x0, 0x1);
        gbc.writeMem(0x7125, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x5c97);
        EXPECT(gbc.pc(), 0x7127);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FA 0055
        gbc.setState(0xab96, 0x2388, 0x1a60, 0x57bf, 0xbea5, 0x4e6, 0x0, 0x0);
        gbc.writeMem(0xab96, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x2388);
        EXPECT(gbc.pc(), 0xab98);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xab96), 0xcb);
        EXPECT(gbc.readMem(0xab97), 0xfa);
        // CB FA 0056
        gbc.setState(0xbf30, 0x1a9c, 0x4850, 0x590f, 0x21e6, 0xf4ec, 0x0, 0x0);
        gbc.writeMem(0xbf30, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x1a9c);
        EXPECT(gbc.pc(), 0xbf32);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbf30), 0xcb);
        EXPECT(gbc.readMem(0xbf31), 0xfa);
        // CB FA 0057
        gbc.setState(0xef48, 0x7452, 0x7d10, 0x8ab5, 0x613, 0x1a5f, 0x0, 0x1);
        gbc.writeMem(0xef48, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x7452);
        EXPECT(gbc.pc(), 0xef4a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xef48), 0xcb);
        EXPECT(gbc.readMem(0xef49), 0xfa);
        // CB FA 0058
        gbc.setState(0x1239, 0x51bc, 0x1c10, 0x6163, 0xb7ff, 0x1bf3, 0x0, 0x1);
        gbc.writeMem(0x1239, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x51bc);
        EXPECT(gbc.pc(), 0x123b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FA 0059
        gbc.setState(0xd169, 0xd602, 0xcca0, 0x2b4b, 0xa623, 0x97b7, 0x0, 0x1);
        gbc.writeMem(0xd169, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0xd602);
        EXPECT(gbc.pc(), 0xd16b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd169), 0xcb);
        EXPECT(gbc.readMem(0xd16a), 0xfa);
        // CB FA 005A
        gbc.setState(0x7d9e, 0x9b77, 0x3e50, 0x319a, 0x1924, 0xf5c4, 0x1, 0x0);
        gbc.writeMem(0x7d9e, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x9b77);
        EXPECT(gbc.pc(), 0x7da0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FA 005B
        gbc.setState(0x4538, 0xefa2, 0x4460, 0xa4dc, 0x37b5, 0xe397, 0x0, 0x0);
        gbc.writeMem(0x4538, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0xefa2);
        EXPECT(gbc.pc(), 0x453a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FA 005C
        gbc.setState(0x5084, 0x90af, 0xc1f0, 0x308b, 0x267, 0x8b1b, 0x0, 0x0);
        gbc.writeMem(0x5084, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x90af);
        EXPECT(gbc.pc(), 0x5086);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FA 005D
        gbc.setState(0x7dd4, 0x3257, 0x59a0, 0xcfa7, 0xdcc7, 0x1034, 0x1, 0x0);
        gbc.writeMem(0x7dd4, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x3257);
        EXPECT(gbc.pc(), 0x7dd6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FA 005E
        gbc.setState(0x1e36, 0xc444, 0xa6b0, 0x88f, 0xe590, 0xf898, 0x1, 0x0);
        gbc.writeMem(0x1e36, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xc444);
        EXPECT(gbc.pc(), 0x1e38);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FA 005F
        gbc.setState(0x6ba5, 0x1606, 0x2f80, 0x4fa9, 0xbdf4, 0xf013, 0x1, 0x0);
        gbc.writeMem(0x6ba5, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x1606);
        EXPECT(gbc.pc(), 0x6ba7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FA 0060
        gbc.setState(0xd444, 0xaae8, 0x5780, 0x84db, 0x7844, 0x6472, 0x0, 0x0);
        gbc.writeMem(0xd444, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0xaae8);
        EXPECT(gbc.pc(), 0xd446);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd444), 0xcb);
        EXPECT(gbc.readMem(0xd445), 0xfa);
        // CB FA 0062
        gbc.setState(0x819f, 0xa6e7, 0xd1d0, 0x94f1, 0x718d, 0xd4a, 0x1, 0x1);
        gbc.writeMem(0x819f, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xa6e7);
        EXPECT(gbc.pc(), 0x81a1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x819f), 0xcb);
        EXPECT(gbc.readMem(0x81a0), 0xfa);
        // CB FA 0063
        gbc.setState(0x29dd, 0x3a61, 0x90c0, 0x4e4e, 0x72be, 0x571c, 0x0, 0x1);
        gbc.writeMem(0x29dd, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x3a61);
        EXPECT(gbc.pc(), 0x29df);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FA 0064
        gbc.setState(0x61c2, 0x1b84, 0x5470, 0x3ffb, 0xdd33, 0x69fa, 0x1, 0x1);
        gbc.writeMem(0x61c2, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x1b84);
        EXPECT(gbc.pc(), 0x61c4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FA 0066
        gbc.setState(0x78, 0xd91b, 0x16c0, 0xfe05, 0x6c87, 0x72e1, 0x0, 0x0);
        gbc.writeMem(0x78, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xd91b);
        EXPECT(gbc.pc(), 0x7a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FA 0067
        gbc.setState(0x678c, 0x5daf, 0x4fe0, 0x4797, 0x2b0e, 0x63bc, 0x1, 0x1);
        gbc.writeMem(0x678c, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x5daf);
        EXPECT(gbc.pc(), 0x678e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FA 0068
        gbc.setState(0x12a7, 0x987e, 0x9a10, 0xdd84, 0x6e2c, 0x2e5, 0x0, 0x1);
        gbc.writeMem(0x12a7, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x987e);
        EXPECT(gbc.pc(), 0x12a9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FA 0069
        gbc.setState(0x5d33, 0xc822, 0x4830, 0xf8ba, 0xfb4e, 0x9cf5, 0x0, 0x0);
        gbc.writeMem(0x5d33, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0xc822);
        EXPECT(gbc.pc(), 0x5d35);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FA 006A
        gbc.setState(0x47ef, 0x6920, 0x5c70, 0x1db0, 0x1229, 0xa430, 0x0, 0x0);
        gbc.writeMem(0x47ef, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x6920);
        EXPECT(gbc.pc(), 0x47f1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FA 006C
        gbc.setState(0x2d73, 0x8063, 0x2100, 0x1ca8, 0x8196, 0x2c73, 0x0, 0x0);
        gbc.writeMem(0x2d73, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x8063);
        EXPECT(gbc.pc(), 0x2d75);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FA 006D
        gbc.setState(0x852, 0x781b, 0x63b0, 0xb6fb, 0x7415, 0x6932, 0x1, 0x1);
        gbc.writeMem(0x852, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x781b);
        EXPECT(gbc.pc(), 0x854);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FA 006E
        gbc.setState(0x856a, 0xac39, 0x9700, 0xb663, 0x6728, 0x3611, 0x0, 0x0);
        gbc.writeMem(0x856a, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0xac39);
        EXPECT(gbc.pc(), 0x856c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x856a), 0xcb);
        EXPECT(gbc.readMem(0x856b), 0xfa);
        // CB FA 006F
        gbc.setState(0x8ea5, 0x95e7, 0xefa0, 0x6ff9, 0x7f56, 0x1a51, 0x0, 0x0);
        gbc.writeMem(0x8ea5, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x95e7);
        EXPECT(gbc.pc(), 0x8ea7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ea5), 0xcb);
        EXPECT(gbc.readMem(0x8ea6), 0xfa);
        // CB FA 0070
        gbc.setState(0x4099, 0x3e05, 0xfdf0, 0x2a64, 0x8e7f, 0x95c1, 0x1, 0x1);
        gbc.writeMem(0x4099, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x3e05);
        EXPECT(gbc.pc(), 0x409b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FA 0071
        gbc.setState(0xa170, 0x829, 0x3fe0, 0x5bed, 0x9ca7, 0xa92e, 0x1, 0x1);
        gbc.writeMem(0xa170, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x829);
        EXPECT(gbc.pc(), 0xa172);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa170), 0xcb);
        EXPECT(gbc.readMem(0xa171), 0xfa);
        // CB FA 0072
        gbc.setState(0xba20, 0xb869, 0xecd0, 0x606a, 0x9448, 0x44aa, 0x0, 0x1);
        gbc.writeMem(0xba20, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0xb869);
        EXPECT(gbc.pc(), 0xba22);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xba20), 0xcb);
        EXPECT(gbc.readMem(0xba21), 0xfa);
        // CB FA 0073
        gbc.setState(0x1dc7, 0x6691, 0xac60, 0x4ae9, 0xe56b, 0x3d04, 0x0, 0x0);
        gbc.writeMem(0x1dc7, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x6691);
        EXPECT(gbc.pc(), 0x1dc9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FA 0074
        gbc.setState(0xb291, 0x246, 0x5aa0, 0x13fa, 0x5fd6, 0x726a, 0x1, 0x1);
        gbc.writeMem(0xb291, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x246);
        EXPECT(gbc.pc(), 0xb293);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb291), 0xcb);
        EXPECT(gbc.readMem(0xb292), 0xfa);
        // CB FA 0075
        gbc.setState(0x8c5d, 0x782, 0x2600, 0xb16a, 0x4222, 0xce14, 0x1, 0x0);
        gbc.writeMem(0x8c5d, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x782);
        EXPECT(gbc.pc(), 0x8c5f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c5d), 0xcb);
        EXPECT(gbc.readMem(0x8c5e), 0xfa);
        // CB FA 0076
        gbc.setState(0x2e28, 0x77a6, 0x5b50, 0xb003, 0x8f99, 0xe5ab, 0x0, 0x0);
        gbc.writeMem(0x2e28, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x77a6);
        EXPECT(gbc.pc(), 0x2e2a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FA 0077
        gbc.setState(0xad61, 0x1d6c, 0x9bb0, 0x9210, 0x229d, 0xdf0c, 0x0, 0x1);
        gbc.writeMem(0xad61, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x1d6c);
        EXPECT(gbc.pc(), 0xad63);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xad61), 0xcb);
        EXPECT(gbc.readMem(0xad62), 0xfa);
        // CB FA 0078
        gbc.setState(0x77d4, 0x784e, 0x1be0, 0x8b9, 0x55db, 0x26ba, 0x1, 0x0);
        gbc.writeMem(0x77d4, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x784e);
        EXPECT(gbc.pc(), 0x77d6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FA 0079
        gbc.setState(0x1a1c, 0xc0f8, 0x750, 0x335e, 0xede0, 0x84d0, 0x0, 0x1);
        gbc.writeMem(0x1a1c, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0xc0f8);
        EXPECT(gbc.pc(), 0x1a1e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FA 007A
        gbc.setState(0xb37c, 0x4d7a, 0x6180, 0x2079, 0x66fb, 0x1f7e, 0x1, 0x1);
        gbc.writeMem(0xb37c, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x4d7a);
        EXPECT(gbc.pc(), 0xb37e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb37c), 0xcb);
        EXPECT(gbc.readMem(0xb37d), 0xfa);
        // CB FA 007B
        gbc.setState(0xdfe4, 0xf58b, 0x62f0, 0x5ae1, 0x7199, 0x3805, 0x1, 0x0);
        gbc.writeMem(0xdfe4, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0xf58b);
        EXPECT(gbc.pc(), 0xdfe6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdfe4), 0xcb);
        EXPECT(gbc.readMem(0xdfe5), 0xfa);
        // CB FA 007C
        gbc.setState(0x15f2, 0x1cff, 0x87d0, 0xac4e, 0xa0e5, 0xf25f, 0x0, 0x1);
        gbc.writeMem(0x15f2, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x1cff);
        EXPECT(gbc.pc(), 0x15f4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FA 007D
        gbc.setState(0x1649, 0xe9e7, 0x7430, 0x87ba, 0x6ea4, 0x9267, 0x1, 0x0);
        gbc.writeMem(0x1649, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0xe9e7);
        EXPECT(gbc.pc(), 0x164b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FA 007E
        gbc.setState(0xbdb7, 0x9b18, 0x6d0, 0xab82, 0x7c80, 0xe718, 0x1, 0x1);
        gbc.writeMem(0xbdb7, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x9b18);
        EXPECT(gbc.pc(), 0xbdb9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbdb7), 0xcb);
        EXPECT(gbc.readMem(0xbdb8), 0xfa);
        // CB FA 0080
        gbc.setState(0x32bc, 0x680b, 0xf140, 0xbc68, 0x62d2, 0x6102, 0x1, 0x0);
        gbc.writeMem(0x32bc, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x680b);
        EXPECT(gbc.pc(), 0x32be);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FA 0081
        gbc.setState(0xbbdb, 0xd670, 0xf500, 0xa5f1, 0xdade, 0xa333, 0x1, 0x0);
        gbc.writeMem(0xbbdb, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0xd670);
        EXPECT(gbc.pc(), 0xbbdd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbbdb), 0xcb);
        EXPECT(gbc.readMem(0xbbdc), 0xfa);
        // CB FA 0082
        gbc.setState(0x362, 0x9756, 0x4260, 0x3ba7, 0x7ace, 0xd3de, 0x0, 0x0);
        gbc.writeMem(0x362, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x9756);
        EXPECT(gbc.pc(), 0x364);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FA 0083
        gbc.setState(0xde6d, 0xe5f9, 0x4160, 0x2566, 0xc100, 0x116d, 0x0, 0x0);
        gbc.writeMem(0xde6d, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0xe5f9);
        EXPECT(gbc.pc(), 0xde6f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xde6d), 0xcb);
        EXPECT(gbc.readMem(0xde6e), 0xfa);
        // CB FA 0084
        gbc.setState(0x1dd2, 0x161a, 0xdef0, 0x4b9d, 0xb838, 0x8fea, 0x0, 0x0);
        gbc.writeMem(0x1dd2, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x161a);
        EXPECT(gbc.pc(), 0x1dd4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FA 0085
        gbc.setState(0xd269, 0xc73e, 0xc250, 0x5fae, 0xc3c9, 0xf2dd, 0x0, 0x1);
        gbc.writeMem(0xd269, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0xc73e);
        EXPECT(gbc.pc(), 0xd26b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd269), 0xcb);
        EXPECT(gbc.readMem(0xd26a), 0xfa);
        // CB FA 0086
        gbc.setState(0x78ef, 0xf26c, 0xd140, 0x88e, 0x3471, 0xd573, 0x0, 0x1);
        gbc.writeMem(0x78ef, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0xf26c);
        EXPECT(gbc.pc(), 0x78f1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FA 0087
        gbc.setState(0x594c, 0x3c3e, 0x7650, 0xd937, 0xd200, 0xe32d, 0x0, 0x0);
        gbc.writeMem(0x594c, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x3c3e);
        EXPECT(gbc.pc(), 0x594e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FA 0088
        gbc.setState(0x761d, 0xe641, 0xc100, 0x1c0b, 0xb887, 0x4ddf, 0x0, 0x0);
        gbc.writeMem(0x761d, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0xe641);
        EXPECT(gbc.pc(), 0x761f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FA 0089
        gbc.setState(0x119d, 0x7867, 0x5ea0, 0x1de9, 0x86f4, 0x6df5, 0x1, 0x1);
        gbc.writeMem(0x119d, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x7867);
        EXPECT(gbc.pc(), 0x119f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FA 008A
        gbc.setState(0x5047, 0xe861, 0xe130, 0xd2cc, 0x5a7e, 0x8489, 0x0, 0x1);
        gbc.writeMem(0x5047, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0xe861);
        EXPECT(gbc.pc(), 0x5049);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FA 008B
        gbc.setState(0x86e0, 0x959a, 0xe840, 0x58c0, 0xf6ac, 0xf3ca, 0x1, 0x1);
        gbc.writeMem(0x86e0, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x959a);
        EXPECT(gbc.pc(), 0x86e2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x86e0), 0xcb);
        EXPECT(gbc.readMem(0x86e1), 0xfa);
        // CB FA 008C
        gbc.setState(0xb64b, 0x3e1c, 0xc660, 0x9592, 0xd4da, 0x251e, 0x0, 0x1);
        gbc.writeMem(0xb64b, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x3e1c);
        EXPECT(gbc.pc(), 0xb64d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb64b), 0xcb);
        EXPECT(gbc.readMem(0xb64c), 0xfa);
        // CB FA 008D
        gbc.setState(0xd850, 0x5856, 0x7980, 0x9cd9, 0x7b05, 0x551b, 0x0, 0x0);
        gbc.writeMem(0xd850, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x5856);
        EXPECT(gbc.pc(), 0xd852);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd850), 0xcb);
        EXPECT(gbc.readMem(0xd851), 0xfa);
        // CB FA 008E
        gbc.setState(0x71c1, 0x5b6b, 0x2c20, 0x5b6a, 0x1fb2, 0x1c89, 0x1, 0x1);
        gbc.writeMem(0x71c1, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x5b6b);
        EXPECT(gbc.pc(), 0x71c3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FA 008F
        gbc.setState(0xe78a, 0xdbfa, 0x5de0, 0x7ad5, 0xb783, 0x50e9, 0x0, 0x1);
        gbc.writeMem(0xe78a, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0xdbfa);
        EXPECT(gbc.pc(), 0xe78c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe78a), 0xcb);
        EXPECT(gbc.readMem(0xe78b), 0xfa);
        // CB FA 0090
        gbc.setState(0x74c, 0xfc23, 0x9a50, 0x6fa0, 0xeadb, 0x3e3, 0x0, 0x0);
        gbc.writeMem(0x74c, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xfc23);
        EXPECT(gbc.pc(), 0x74e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FA 0091
        gbc.setState(0x447d, 0x687d, 0x3970, 0xb32c, 0x3f1c, 0xae52, 0x0, 0x1);
        gbc.writeMem(0x447d, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x687d);
        EXPECT(gbc.pc(), 0x447f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FA 0092
        gbc.setState(0x9a6e, 0xf42d, 0x38c0, 0xa66a, 0xb60a, 0xc8bd, 0x1, 0x1);
        gbc.writeMem(0x9a6e, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0xf42d);
        EXPECT(gbc.pc(), 0x9a70);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9a6e), 0xcb);
        EXPECT(gbc.readMem(0x9a6f), 0xfa);
        // CB FA 0094
        gbc.setState(0xe34c, 0x51c2, 0x9990, 0xa62a, 0xb2cd, 0x10cf, 0x0, 0x1);
        gbc.writeMem(0xe34c, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x51c2);
        EXPECT(gbc.pc(), 0xe34e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe34c), 0xcb);
        EXPECT(gbc.readMem(0xe34d), 0xfa);
        // CB FA 0095
        gbc.setState(0x7d95, 0x214f, 0xcd20, 0xc420, 0x4fca, 0x9a1f, 0x0, 0x0);
        gbc.writeMem(0x7d95, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x214f);
        EXPECT(gbc.pc(), 0x7d97);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FA 0096
        gbc.setState(0x56fa, 0x30d1, 0x29b0, 0xd290, 0xc847, 0x6e25, 0x0, 0x1);
        gbc.writeMem(0x56fa, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x30d1);
        EXPECT(gbc.pc(), 0x56fc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FA 0097
        gbc.setState(0xade9, 0xb3c, 0x70, 0x41d2, 0xce7c, 0xc62d, 0x0, 0x0);
        gbc.writeMem(0xade9, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0xb3c);
        EXPECT(gbc.pc(), 0xadeb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xade9), 0xcb);
        EXPECT(gbc.readMem(0xadea), 0xfa);
        // CB FA 0098
        gbc.setState(0xc17e, 0xbe56, 0xb8f0, 0x8cd7, 0xa893, 0x4b89, 0x0, 0x0);
        gbc.writeMem(0xc17e, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0xbe56);
        EXPECT(gbc.pc(), 0xc180);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc17e), 0xcb);
        EXPECT(gbc.readMem(0xc17f), 0xfa);
        // CB FA 0099
        gbc.setState(0x82f6, 0x6778, 0xee40, 0xb875, 0xd7b0, 0xb64e, 0x0, 0x1);
        gbc.writeMem(0x82f6, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x6778);
        EXPECT(gbc.pc(), 0x82f8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x82f6), 0xcb);
        EXPECT(gbc.readMem(0x82f7), 0xfa);
        // CB FA 009A
        gbc.setState(0xe253, 0xf830, 0x1e80, 0x40b0, 0xc849, 0x3a72, 0x1, 0x0);
        gbc.writeMem(0xe253, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0xf830);
        EXPECT(gbc.pc(), 0xe255);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe253), 0xcb);
        EXPECT(gbc.readMem(0xe254), 0xfa);
        // CB FA 009B
        gbc.setState(0xb021, 0x7f55, 0xa450, 0xf433, 0xe323, 0xb422, 0x0, 0x1);
        gbc.writeMem(0xb021, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x7f55);
        EXPECT(gbc.pc(), 0xb023);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb021), 0xcb);
        EXPECT(gbc.readMem(0xb022), 0xfa);
        // CB FA 009C
        gbc.setState(0xd8eb, 0x7f79, 0x1440, 0x500b, 0x1c3a, 0x5f68, 0x0, 0x0);
        gbc.writeMem(0xd8eb, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x7f79);
        EXPECT(gbc.pc(), 0xd8ed);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd8eb), 0xcb);
        EXPECT(gbc.readMem(0xd8ec), 0xfa);
        // CB FA 009D
        gbc.setState(0x1664, 0xb383, 0x17d0, 0x8c8b, 0x61, 0x5830, 0x1, 0x0);
        gbc.writeMem(0x1664, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0xb383);
        EXPECT(gbc.pc(), 0x1666);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FA 009E
        gbc.setState(0xf57, 0xfc10, 0x96d0, 0xf406, 0x3465, 0xf6e0, 0x1, 0x1);
        gbc.writeMem(0xf57, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0xfc10);
        EXPECT(gbc.pc(), 0xf59);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FA 009F
        gbc.setState(0x91ed, 0x1a7a, 0xf400, 0xad23, 0x9022, 0x6fc1, 0x1, 0x0);
        gbc.writeMem(0x91ed, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x1a7a);
        EXPECT(gbc.pc(), 0x91ef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x91ed), 0xcb);
        EXPECT(gbc.readMem(0x91ee), 0xfa);
        // CB FA 00A0
        gbc.setState(0x79da, 0x4f63, 0x5710, 0x266a, 0xddbb, 0xa325, 0x0, 0x0);
        gbc.writeMem(0x79da, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x4f63);
        EXPECT(gbc.pc(), 0x79dc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FA 00A1
        gbc.setState(0x21c0, 0x4990, 0x9270, 0x1621, 0xf51b, 0xb05e, 0x0, 0x0);
        gbc.writeMem(0x21c0, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x4990);
        EXPECT(gbc.pc(), 0x21c2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FA 00A2
        gbc.setState(0xd90, 0x7a86, 0xb850, 0x2a22, 0x1ec9, 0xa632, 0x0, 0x0);
        gbc.writeMem(0xd90, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x7a86);
        EXPECT(gbc.pc(), 0xd92);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FA 00A3
        gbc.setState(0x39ec, 0xe21, 0xe3a0, 0x5acc, 0x6eef, 0x43e9, 0x1, 0x1);
        gbc.writeMem(0x39ec, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0xe21);
        EXPECT(gbc.pc(), 0x39ee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FA 00A4
        gbc.setState(0x3b5a, 0x43c7, 0xeb30, 0x2688, 0x53bf, 0xb70e, 0x1, 0x1);
        gbc.writeMem(0x3b5a, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x43c7);
        EXPECT(gbc.pc(), 0x3b5c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FA 00A5
        gbc.setState(0xe081, 0x1f28, 0xaf70, 0x6e6, 0x8233, 0xb105, 0x1, 0x1);
        gbc.writeMem(0xe081, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x1f28);
        EXPECT(gbc.pc(), 0xe083);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe081), 0xcb);
        EXPECT(gbc.readMem(0xe082), 0xfa);
        // CB FA 00A6
        gbc.setState(0xd61f, 0x9dce, 0xb190, 0xc747, 0xec55, 0xa0bd, 0x1, 0x1);
        gbc.writeMem(0xd61f, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x9dce);
        EXPECT(gbc.pc(), 0xd621);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd61f), 0xcb);
        EXPECT(gbc.readMem(0xd620), 0xfa);
        // CB FA 00A7
        gbc.setState(0x1bca, 0xd917, 0xf6a0, 0xe106, 0xea9c, 0x3f06, 0x0, 0x1);
        gbc.writeMem(0x1bca, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0xd917);
        EXPECT(gbc.pc(), 0x1bcc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FA 00A8
        gbc.setState(0x4773, 0x5f80, 0xb150, 0xe064, 0x3822, 0xb4fa, 0x0, 0x0);
        gbc.writeMem(0x4773, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x5f80);
        EXPECT(gbc.pc(), 0x4775);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FA 00A9
        gbc.setState(0x9631, 0x855d, 0x5840, 0xe6a, 0x1d9a, 0x1e34, 0x0, 0x1);
        gbc.writeMem(0x9631, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x855d);
        EXPECT(gbc.pc(), 0x9633);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9631), 0xcb);
        EXPECT(gbc.readMem(0x9632), 0xfa);
        // CB FA 00AA
        gbc.setState(0x3c97, 0xaee8, 0x8e80, 0x876c, 0x4ea0, 0x89fd, 0x0, 0x1);
        gbc.writeMem(0x3c97, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xaee8);
        EXPECT(gbc.pc(), 0x3c99);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FA 00AB
        gbc.setState(0x61db, 0x6d4f, 0xa870, 0x31f2, 0xe558, 0x81e3, 0x1, 0x0);
        gbc.writeMem(0x61db, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x6d4f);
        EXPECT(gbc.pc(), 0x61dd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FA 00AC
        gbc.setState(0xa9c2, 0xef3f, 0x4ee0, 0x927f, 0x119a, 0x5202, 0x1, 0x0);
        gbc.writeMem(0xa9c2, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xef3f);
        EXPECT(gbc.pc(), 0xa9c4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa9c2), 0xcb);
        EXPECT(gbc.readMem(0xa9c3), 0xfa);
        // CB FA 00AD
        gbc.setState(0x176, 0x60d, 0xf390, 0x4cd5, 0xafdc, 0xdcbe, 0x1, 0x0);
        gbc.writeMem(0x176, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x60d);
        EXPECT(gbc.pc(), 0x178);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FA 00AE
        gbc.setState(0x6f77, 0x9677, 0x4ea0, 0xf0aa, 0xd6d0, 0x84c9, 0x0, 0x1);
        gbc.writeMem(0x6f77, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x9677);
        EXPECT(gbc.pc(), 0x6f79);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FA 00AF
        gbc.setState(0x9f9b, 0x3ad2, 0xeb0, 0x8ccc, 0x268f, 0x9770, 0x1, 0x1);
        gbc.writeMem(0x9f9b, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x3ad2);
        EXPECT(gbc.pc(), 0x9f9d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9f9b), 0xcb);
        EXPECT(gbc.readMem(0x9f9c), 0xfa);
        // CB FA 00B0
        gbc.setState(0xacd1, 0x5c54, 0x960, 0x9c2a, 0x834e, 0xb2a4, 0x0, 0x1);
        gbc.writeMem(0xacd1, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x5c54);
        EXPECT(gbc.pc(), 0xacd3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xacd1), 0xcb);
        EXPECT(gbc.readMem(0xacd2), 0xfa);
        // CB FA 00B1
        gbc.setState(0x27c7, 0x9e5d, 0xb50, 0xd06d, 0xea76, 0xba00, 0x1, 0x0);
        gbc.writeMem(0x27c7, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x9e5d);
        EXPECT(gbc.pc(), 0x27c9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FA 00B2
        gbc.setState(0xc6d5, 0xe09d, 0xd4f0, 0xa24e, 0x37c7, 0x12d9, 0x1, 0x1);
        gbc.writeMem(0xc6d5, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0xe09d);
        EXPECT(gbc.pc(), 0xc6d7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc6d5), 0xcb);
        EXPECT(gbc.readMem(0xc6d6), 0xfa);
        // CB FA 00B3
        gbc.setState(0x4bea, 0x6c1, 0x13d0, 0xc485, 0x724f, 0x63f9, 0x1, 0x1);
        gbc.writeMem(0x4bea, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x6c1);
        EXPECT(gbc.pc(), 0x4bec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FA 00B4
        gbc.setState(0xa7af, 0xf40f, 0x5530, 0x91b6, 0x45f1, 0x34ed, 0x0, 0x1);
        gbc.writeMem(0xa7af, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0xf40f);
        EXPECT(gbc.pc(), 0xa7b1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa7af), 0xcb);
        EXPECT(gbc.readMem(0xa7b0), 0xfa);
        // CB FA 00B5
        gbc.setState(0x4f1b, 0xc99c, 0x47b0, 0x4a24, 0xdb13, 0x1a16, 0x1, 0x0);
        gbc.writeMem(0x4f1b, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xc99c);
        EXPECT(gbc.pc(), 0x4f1d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FA 00B6
        gbc.setState(0x224, 0xd078, 0x3e40, 0x9d51, 0xe8db, 0x1d0b, 0x0, 0x1);
        gbc.writeMem(0x224, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0xd078);
        EXPECT(gbc.pc(), 0x226);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FA 00B7
        gbc.setState(0xe227, 0xd4ac, 0x3f50, 0x3ef0, 0x7803, 0x92fd, 0x1, 0x0);
        gbc.writeMem(0xe227, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xd4ac);
        EXPECT(gbc.pc(), 0xe229);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe227), 0xcb);
        EXPECT(gbc.readMem(0xe228), 0xfa);
        // CB FA 00B8
        gbc.setState(0x8a0b, 0x53fd, 0xb370, 0xf1f5, 0x5465, 0x4d26, 0x0, 0x0);
        gbc.writeMem(0x8a0b, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x53fd);
        EXPECT(gbc.pc(), 0x8a0d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8a0b), 0xcb);
        EXPECT(gbc.readMem(0x8a0c), 0xfa);
        // CB FA 00B9
        gbc.setState(0x810c, 0x1846, 0x6610, 0x3b86, 0x7540, 0xbfc9, 0x1, 0x0);
        gbc.writeMem(0x810c, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x1846);
        EXPECT(gbc.pc(), 0x810e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x810c), 0xcb);
        EXPECT(gbc.readMem(0x810d), 0xfa);
        // CB FA 00BA
        gbc.setState(0x772c, 0x5758, 0x5410, 0xced2, 0xeabe, 0x3639, 0x0, 0x0);
        gbc.writeMem(0x772c, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x5758);
        EXPECT(gbc.pc(), 0x772e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FA 00BB
        gbc.setState(0x921b, 0x3f70, 0x17a0, 0x2450, 0xa0f9, 0x936d, 0x1, 0x1);
        gbc.writeMem(0x921b, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x3f70);
        EXPECT(gbc.pc(), 0x921d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x921b), 0xcb);
        EXPECT(gbc.readMem(0x921c), 0xfa);
        // CB FA 00BC
        gbc.setState(0x9783, 0xa327, 0x3e10, 0xd839, 0xdb09, 0x4355, 0x0, 0x0);
        gbc.writeMem(0x9783, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0xa327);
        EXPECT(gbc.pc(), 0x9785);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9783), 0xcb);
        EXPECT(gbc.readMem(0x9784), 0xfa);
        // CB FA 00BD
        gbc.setState(0x45f2, 0x97fd, 0x560, 0x1bda, 0x4193, 0x2497, 0x0, 0x0);
        gbc.writeMem(0x45f2, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x97fd);
        EXPECT(gbc.pc(), 0x45f4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FA 00BE
        gbc.setState(0xb688, 0x15e8, 0xea80, 0xfa33, 0xf212, 0x25b0, 0x1, 0x0);
        gbc.writeMem(0xb688, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x15e8);
        EXPECT(gbc.pc(), 0xb68a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb688), 0xcb);
        EXPECT(gbc.readMem(0xb689), 0xfa);
        // CB FA 00BF
        gbc.setState(0xe124, 0x742c, 0xa10, 0xf9f5, 0xfa15, 0x2663, 0x0, 0x0);
        gbc.writeMem(0xe124, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x742c);
        EXPECT(gbc.pc(), 0xe126);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe124), 0xcb);
        EXPECT(gbc.readMem(0xe125), 0xfa);
        // CB FA 00C0
        gbc.setState(0x8ad, 0x48d3, 0x3820, 0xc11b, 0xfea1, 0xd3d5, 0x0, 0x0);
        gbc.writeMem(0x8ad, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x48d3);
        EXPECT(gbc.pc(), 0x8af);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FA 00C1
        gbc.setState(0x85d, 0x58b5, 0x3c10, 0x59b6, 0xa6b8, 0x540, 0x1, 0x0);
        gbc.writeMem(0x85d, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x58b5);
        EXPECT(gbc.pc(), 0x85f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FA 00C2
        gbc.setState(0xa890, 0xc2b6, 0xdc20, 0x419d, 0x4b0f, 0x1bba, 0x0, 0x1);
        gbc.writeMem(0xa890, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0xc2b6);
        EXPECT(gbc.pc(), 0xa892);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa890), 0xcb);
        EXPECT(gbc.readMem(0xa891), 0xfa);
        // CB FA 00C3
        gbc.setState(0x975d, 0x9910, 0x8290, 0x3cfe, 0x3d9e, 0x6306, 0x0, 0x1);
        gbc.writeMem(0x975d, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x9910);
        EXPECT(gbc.pc(), 0x975f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x975d), 0xcb);
        EXPECT(gbc.readMem(0x975e), 0xfa);
        // CB FA 00C4
        gbc.setState(0x2eb9, 0xdd20, 0x4e80, 0xdd89, 0x53cd, 0x7402, 0x0, 0x1);
        gbc.writeMem(0x2eb9, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xdd20);
        EXPECT(gbc.pc(), 0x2ebb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FA 00C5
        gbc.setState(0x1387, 0x4c67, 0x4150, 0xf844, 0x9179, 0x22cf, 0x1, 0x0);
        gbc.writeMem(0x1387, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x4c67);
        EXPECT(gbc.pc(), 0x1389);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FA 00C6
        gbc.setState(0xd290, 0xf19a, 0x2c10, 0xa72a, 0xfb6d, 0xec3c, 0x1, 0x0);
        gbc.writeMem(0xd290, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xf19a);
        EXPECT(gbc.pc(), 0xd292);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd290), 0xcb);
        EXPECT(gbc.readMem(0xd291), 0xfa);
        // CB FA 00C7
        gbc.setState(0x528a, 0xc39b, 0xa850, 0xec09, 0x7109, 0xe0f5, 0x1, 0x0);
        gbc.writeMem(0x528a, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0xc39b);
        EXPECT(gbc.pc(), 0x528c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FA 00C8
        gbc.setState(0x9d24, 0xde36, 0xe480, 0x60f4, 0x57e5, 0xa198, 0x0, 0x1);
        gbc.writeMem(0x9d24, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xde36);
        EXPECT(gbc.pc(), 0x9d26);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9d24), 0xcb);
        EXPECT(gbc.readMem(0x9d25), 0xfa);
        // CB FA 00C9
        gbc.setState(0x57f9, 0xa132, 0xd9e0, 0x8117, 0xd4ad, 0xcc35, 0x1, 0x0);
        gbc.writeMem(0x57f9, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0xa132);
        EXPECT(gbc.pc(), 0x57fb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FA 00CA
        gbc.setState(0x1280, 0x9fd6, 0x3300, 0x764a, 0x6902, 0x1747, 0x0, 0x0);
        gbc.writeMem(0x1280, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x9fd6);
        EXPECT(gbc.pc(), 0x1282);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FA 00CB
        gbc.setState(0xc873, 0xd25b, 0x2a30, 0x28a7, 0xac30, 0x49c2, 0x0, 0x0);
        gbc.writeMem(0xc873, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0xd25b);
        EXPECT(gbc.pc(), 0xc875);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc873), 0xcb);
        EXPECT(gbc.readMem(0xc874), 0xfa);
        // CB FA 00CC
        gbc.setState(0xcd60, 0xee2c, 0x6290, 0x2c94, 0x3b0, 0xe9e9, 0x1, 0x0);
        gbc.writeMem(0xcd60, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0xee2c);
        EXPECT(gbc.pc(), 0xcd62);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcd60), 0xcb);
        EXPECT(gbc.readMem(0xcd61), 0xfa);
        // CB FA 00CD
        gbc.setState(0x4af1, 0x6e01, 0x1f70, 0xe8aa, 0xc78, 0x6cae, 0x1, 0x0);
        gbc.writeMem(0x4af1, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x6e01);
        EXPECT(gbc.pc(), 0x4af3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FA 00CE
        gbc.setState(0x64, 0xaca, 0xc890, 0x37ae, 0x6337, 0xf44d, 0x0, 0x0);
        gbc.writeMem(0x64, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0xaca);
        EXPECT(gbc.pc(), 0x66);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FA 00CF
        gbc.setState(0x8f95, 0xe58d, 0xb250, 0x77d2, 0x7cbf, 0xae68, 0x1, 0x1);
        gbc.writeMem(0x8f95, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0xe58d);
        EXPECT(gbc.pc(), 0x8f97);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8f95), 0xcb);
        EXPECT(gbc.readMem(0x8f96), 0xfa);
        // CB FA 00D0
        gbc.setState(0x1594, 0xa52c, 0x5e90, 0xbe24, 0xec3e, 0xb5e5, 0x0, 0x0);
        gbc.writeMem(0x1594, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xa52c);
        EXPECT(gbc.pc(), 0x1596);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FA 00D1
        gbc.setState(0x357f, 0x78f, 0x5200, 0xd08d, 0x44ad, 0xa2c0, 0x1, 0x1);
        gbc.writeMem(0x357f, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x78f);
        EXPECT(gbc.pc(), 0x3581);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FA 00D2
        gbc.setState(0x6c56, 0xd5f6, 0x2b90, 0x6d4a, 0x462, 0x3251, 0x0, 0x0);
        gbc.writeMem(0x6c56, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xd5f6);
        EXPECT(gbc.pc(), 0x6c58);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FA 00D3
        gbc.setState(0xcd18, 0xbb6a, 0xa530, 0x8f74, 0xa65, 0x3c1e, 0x1, 0x1);
        gbc.writeMem(0xcd18, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0xbb6a);
        EXPECT(gbc.pc(), 0xcd1a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcd18), 0xcb);
        EXPECT(gbc.readMem(0xcd19), 0xfa);
        // CB FA 00D4
        gbc.setState(0x9b93, 0x558, 0x75d0, 0x5c57, 0xdeed, 0xe5e2, 0x0, 0x0);
        gbc.writeMem(0x9b93, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x558);
        EXPECT(gbc.pc(), 0x9b95);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9b93), 0xcb);
        EXPECT(gbc.readMem(0x9b94), 0xfa);
        // CB FA 00D5
        gbc.setState(0x37be, 0xcb90, 0xc690, 0x4e34, 0x6f94, 0xa411, 0x1, 0x1);
        gbc.writeMem(0x37be, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0xcb90);
        EXPECT(gbc.pc(), 0x37c0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FA 00D6
        gbc.setState(0x3b62, 0x7c3c, 0xbd20, 0x3721, 0xab97, 0x4ac2, 0x0, 0x0);
        gbc.writeMem(0x3b62, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x7c3c);
        EXPECT(gbc.pc(), 0x3b64);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FA 00D8
        gbc.setState(0x28ba, 0xa605, 0x8290, 0x8dd2, 0xd1dc, 0xbea5, 0x1, 0x1);
        gbc.writeMem(0x28ba, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xa605);
        EXPECT(gbc.pc(), 0x28bc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FA 00D9
        gbc.setState(0xc2ae, 0x5050, 0x970, 0xf263, 0xd03, 0xf01f, 0x1, 0x0);
        gbc.writeMem(0xc2ae, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x5050);
        EXPECT(gbc.pc(), 0xc2b0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc2ae), 0xcb);
        EXPECT(gbc.readMem(0xc2af), 0xfa);
        // CB FA 00DA
        gbc.setState(0x5e55, 0x3f3d, 0xfa20, 0x3c43, 0xab83, 0xcee9, 0x0, 0x0);
        gbc.writeMem(0x5e55, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x3f3d);
        EXPECT(gbc.pc(), 0x5e57);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FA 00DB
        gbc.setState(0x697f, 0xce69, 0x2350, 0xb9be, 0x1e4d, 0xb67f, 0x1, 0x1);
        gbc.writeMem(0x697f, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xce69);
        EXPECT(gbc.pc(), 0x6981);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FA 00DC
        gbc.setState(0x7a8e, 0x8ebe, 0x5b60, 0x6932, 0xa8e7, 0x3259, 0x0, 0x1);
        gbc.writeMem(0x7a8e, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x8ebe);
        EXPECT(gbc.pc(), 0x7a90);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FA 00DD
        gbc.setState(0x52e, 0x5edf, 0x5450, 0x62f8, 0x2065, 0x735b, 0x1, 0x1);
        gbc.writeMem(0x52e, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x5edf);
        EXPECT(gbc.pc(), 0x530);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FA 00DE
        gbc.setState(0xcbb9, 0x88e, 0xfcb0, 0x4279, 0xff59, 0xd63c, 0x0, 0x1);
        gbc.writeMem(0xcbb9, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x88e);
        EXPECT(gbc.pc(), 0xcbbb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcbb9), 0xcb);
        EXPECT(gbc.readMem(0xcbba), 0xfa);
        // CB FA 00DF
        gbc.setState(0xae46, 0x6cf9, 0x50c0, 0x5b46, 0x8aa7, 0xa41b, 0x0, 0x1);
        gbc.writeMem(0xae46, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x6cf9);
        EXPECT(gbc.pc(), 0xae48);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xae46), 0xcb);
        EXPECT(gbc.readMem(0xae47), 0xfa);
        // CB FA 00E1
        gbc.setState(0x8b0b, 0x74eb, 0xa690, 0xbc98, 0x5028, 0x48a7, 0x1, 0x1);
        gbc.writeMem(0x8b0b, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x74eb);
        EXPECT(gbc.pc(), 0x8b0d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b0b), 0xcb);
        EXPECT(gbc.readMem(0x8b0c), 0xfa);
        // CB FA 00E2
        gbc.setState(0x8ab2, 0xe8e8, 0x9230, 0xa77c, 0x5e05, 0x56a6, 0x1, 0x1);
        gbc.writeMem(0x8ab2, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0xe8e8);
        EXPECT(gbc.pc(), 0x8ab4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8ab2), 0xcb);
        EXPECT(gbc.readMem(0x8ab3), 0xfa);
        // CB FA 00E3
        gbc.setState(0x9da4, 0x1009, 0x8ac0, 0x630, 0xfe23, 0x4a80, 0x0, 0x0);
        gbc.writeMem(0x9da4, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x1009);
        EXPECT(gbc.pc(), 0x9da6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9da4), 0xcb);
        EXPECT(gbc.readMem(0x9da5), 0xfa);
        // CB FA 00E4
        gbc.setState(0x6e51, 0x138e, 0x2180, 0x3213, 0x8711, 0xc6d0, 0x1, 0x0);
        gbc.writeMem(0x6e51, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x138e);
        EXPECT(gbc.pc(), 0x6e53);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FA 00E5
        gbc.setState(0xcfe6, 0xabe7, 0x7820, 0x990f, 0xe7dc, 0xf9d2, 0x1, 0x1);
        gbc.writeMem(0xcfe6, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0xabe7);
        EXPECT(gbc.pc(), 0xcfe8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcfe6), 0xcb);
        EXPECT(gbc.readMem(0xcfe7), 0xfa);
        // CB FA 00E7
        gbc.setState(0x3f9c, 0x85c8, 0xdd00, 0xf41c, 0xbcc2, 0xaf3, 0x1, 0x0);
        gbc.writeMem(0x3f9c, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x85c8);
        EXPECT(gbc.pc(), 0x3f9e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FA 00E8
        gbc.setState(0xad57, 0x786, 0x27f0, 0x80f3, 0x3d63, 0xf290, 0x1, 0x0);
        gbc.writeMem(0xad57, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x786);
        EXPECT(gbc.pc(), 0xad59);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xad57), 0xcb);
        EXPECT(gbc.readMem(0xad58), 0xfa);
        // CB FA 00E9
        gbc.setState(0x3d65, 0xcd88, 0x5110, 0xd0a2, 0x6737, 0x2057, 0x0, 0x0);
        gbc.writeMem(0x3d65, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0xcd88);
        EXPECT(gbc.pc(), 0x3d67);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FA 00EA
        gbc.setState(0x80b, 0x4c17, 0xfc0, 0xb5eb, 0x15df, 0x7432, 0x1, 0x1);
        gbc.writeMem(0x80b, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x4c17);
        EXPECT(gbc.pc(), 0x80d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FA 00EB
        gbc.setState(0x62d9, 0x879c, 0x81a0, 0x77a9, 0x92b6, 0xfbdb, 0x1, 0x1);
        gbc.writeMem(0x62d9, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x879c);
        EXPECT(gbc.pc(), 0x62db);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FA 00EC
        gbc.setState(0x4ebc, 0x618, 0x4e70, 0x9133, 0x248d, 0x48ac, 0x1, 0x0);
        gbc.writeMem(0x4ebc, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x618);
        EXPECT(gbc.pc(), 0x4ebe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FA 00ED
        gbc.setState(0xc0c4, 0x807, 0xe070, 0x487a, 0xa02e, 0xd861, 0x1, 0x0);
        gbc.writeMem(0xc0c4, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x807);
        EXPECT(gbc.pc(), 0xc0c6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc0c4), 0xcb);
        EXPECT(gbc.readMem(0xc0c5), 0xfa);
        // CB FA 00EE
        gbc.setState(0x3899, 0xdfc4, 0xb5e0, 0x6660, 0x545c, 0x259a, 0x1, 0x0);
        gbc.writeMem(0x3899, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0xdfc4);
        EXPECT(gbc.pc(), 0x389b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FA 00EF
        gbc.setState(0x16d9, 0x9a1c, 0xa580, 0xd3fd, 0xf366, 0x36e4, 0x1, 0x1);
        gbc.writeMem(0x16d9, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x9a1c);
        EXPECT(gbc.pc(), 0x16db);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FA 00F0
        gbc.setState(0xd48d, 0xf22, 0x3050, 0xfc3a, 0x15de, 0x736d, 0x1, 0x0);
        gbc.writeMem(0xd48d, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0xf22);
        EXPECT(gbc.pc(), 0xd48f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd48d), 0xcb);
        EXPECT(gbc.readMem(0xd48e), 0xfa);
        // CB FA 00F2
        gbc.setState(0x7d29, 0xb07f, 0x6ae0, 0x9051, 0xf9c7, 0xe227, 0x0, 0x0);
        gbc.writeMem(0x7d29, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0xb07f);
        EXPECT(gbc.pc(), 0x7d2b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FA 00F3
        gbc.setState(0xcd17, 0x62e1, 0x2510, 0x3797, 0x46c0, 0x9c9a, 0x1, 0x0);
        gbc.writeMem(0xcd17, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x62e1);
        EXPECT(gbc.pc(), 0xcd19);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcd17), 0xcb);
        EXPECT(gbc.readMem(0xcd18), 0xfa);
        // CB FA 00F4
        gbc.setState(0x3bbc, 0xe09b, 0x2b70, 0x71f0, 0xecf4, 0x4dbf, 0x0, 0x1);
        gbc.writeMem(0x3bbc, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0xe09b);
        EXPECT(gbc.pc(), 0x3bbe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FA 00F5
        gbc.setState(0x60f5, 0x83ef, 0x95c0, 0xd3ec, 0x25d8, 0x7383, 0x0, 0x0);
        gbc.writeMem(0x60f5, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x83ef);
        EXPECT(gbc.pc(), 0x60f7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FA 00F6
        gbc.setState(0xc86d, 0x70de, 0x2760, 0xa82c, 0x1867, 0xc4f0, 0x0, 0x0);
        gbc.writeMem(0xc86d, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x70de);
        EXPECT(gbc.pc(), 0xc86f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc86d), 0xcb);
        EXPECT(gbc.readMem(0xc86e), 0xfa);
        // CB FA 00F7
        gbc.setState(0x16a2, 0x8da6, 0xf5b0, 0x7672, 0x4ca9, 0xb697, 0x0, 0x0);
        gbc.writeMem(0x16a2, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x8da6);
        EXPECT(gbc.pc(), 0x16a4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FA 00F8
        gbc.setState(0x152c, 0x5f2, 0x5eb0, 0xa076, 0xc3a0, 0x9e13, 0x1, 0x0);
        gbc.writeMem(0x152c, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x5f2);
        EXPECT(gbc.pc(), 0x152e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FA 00FA
        gbc.setState(0x3313, 0x217d, 0xbec0, 0x475b, 0x197, 0x4c21, 0x1, 0x0);
        gbc.writeMem(0x3313, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x217d);
        EXPECT(gbc.pc(), 0x3315);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FA 00FB
        gbc.setState(0xc5f, 0xe81d, 0x4fe0, 0xc0e3, 0xfd9c, 0x133c, 0x0, 0x1);
        gbc.writeMem(0xc5f, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xe81d);
        EXPECT(gbc.pc(), 0xc61);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FA 00FD
        gbc.setState(0x1d14, 0x71f, 0x4cc0, 0xf515, 0xb93f, 0xff14, 0x1, 0x1);
        gbc.writeMem(0x1d14, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x71f);
        EXPECT(gbc.pc(), 0x1d16);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FA 00FE
        gbc.setState(0x438a, 0x6f6b, 0xb220, 0x8aaa, 0x224a, 0xca1, 0x0, 0x0);
        gbc.writeMem(0x438a, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x6f6b);
        EXPECT(gbc.pc(), 0x438c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FA 00FF
        gbc.setState(0x5bd3, 0x2a1e, 0x5b80, 0x3dbd, 0x16cd, 0x8106, 0x1, 0x1);
        gbc.writeMem(0x5bd3, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x2a1e);
        EXPECT(gbc.pc(), 0x5bd5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FA 0100
        gbc.setState(0xa7cd, 0xa2f5, 0xfa70, 0x9f34, 0xced0, 0x9e21, 0x1, 0x0);
        gbc.writeMem(0xa7cd, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0xa2f5);
        EXPECT(gbc.pc(), 0xa7cf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa7cd), 0xcb);
        EXPECT(gbc.readMem(0xa7ce), 0xfa);
        // CB FA 0101
        gbc.setState(0x8ce, 0x48e6, 0xb0c0, 0x5511, 0xd84b, 0xcd01, 0x0, 0x0);
        gbc.writeMem(0x8ce, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x48e6);
        EXPECT(gbc.pc(), 0x8d0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FA 0102
        gbc.setState(0x9b00, 0x6290, 0x4260, 0x7c25, 0x5235, 0x7129, 0x1, 0x1);
        gbc.writeMem(0x9b00, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x6290);
        EXPECT(gbc.pc(), 0x9b02);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9b00), 0xcb);
        EXPECT(gbc.readMem(0x9b01), 0xfa);
        // CB FA 0103
        gbc.setState(0x8ba1, 0x122d, 0xda10, 0x203e, 0x9696, 0x33f7, 0x0, 0x1);
        gbc.writeMem(0x8ba1, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x122d);
        EXPECT(gbc.pc(), 0x8ba3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8ba1), 0xcb);
        EXPECT(gbc.readMem(0x8ba2), 0xfa);
        // CB FA 0105
        gbc.setState(0x6f33, 0xf847, 0x9b60, 0xc58c, 0xaceb, 0x2e36, 0x0, 0x1);
        gbc.writeMem(0x6f33, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0xf847);
        EXPECT(gbc.pc(), 0x6f35);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FA 0107
        gbc.setState(0xe962, 0xd004, 0x5930, 0x4fb6, 0x48df, 0xaaf8, 0x1, 0x1);
        gbc.writeMem(0xe962, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0xd004);
        EXPECT(gbc.pc(), 0xe964);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe962), 0xcb);
        EXPECT(gbc.readMem(0xe963), 0xfa);
        // CB FA 0108
        gbc.setState(0x7b5b, 0x7814, 0xe00, 0xeee6, 0xa77f, 0x5f9f, 0x1, 0x1);
        gbc.writeMem(0x7b5b, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x7814);
        EXPECT(gbc.pc(), 0x7b5d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FA 0109
        gbc.setState(0xcf61, 0x8674, 0x6270, 0x860f, 0x69b1, 0xf805, 0x1, 0x0);
        gbc.writeMem(0xcf61, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x8674);
        EXPECT(gbc.pc(), 0xcf63);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcf61), 0xcb);
        EXPECT(gbc.readMem(0xcf62), 0xfa);
        // CB FA 010A
        gbc.setState(0xc096, 0x5682, 0x1f0, 0x28d0, 0xc71a, 0xc4b6, 0x0, 0x0);
        gbc.writeMem(0xc096, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x5682);
        EXPECT(gbc.pc(), 0xc098);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc096), 0xcb);
        EXPECT(gbc.readMem(0xc097), 0xfa);
        // CB FA 010B
        gbc.setState(0x4ba6, 0x3d49, 0x92e0, 0x1351, 0x17fe, 0x1577, 0x1, 0x0);
        gbc.writeMem(0x4ba6, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x3d49);
        EXPECT(gbc.pc(), 0x4ba8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FA 010C
        gbc.setState(0x5541, 0xf9ca, 0x7cd0, 0xdeab, 0xf162, 0x477f, 0x1, 0x0);
        gbc.writeMem(0x5541, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xf9ca);
        EXPECT(gbc.pc(), 0x5543);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FA 010E
        gbc.setState(0x565b, 0xed, 0xf1d0, 0x1ab7, 0xca28, 0x7fb0, 0x1, 0x0);
        gbc.writeMem(0x565b, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xed);
        EXPECT(gbc.pc(), 0x565d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FA 010F
        gbc.setState(0x142, 0xd145, 0x99b0, 0x5fd3, 0x42, 0xf70e, 0x1, 0x1);
        gbc.writeMem(0x142, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0xd145);
        EXPECT(gbc.pc(), 0x144);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FA 0110
        gbc.setState(0x4a79, 0xc79d, 0x1890, 0xc3d1, 0x7e3, 0xf62a, 0x0, 0x1);
        gbc.writeMem(0x4a79, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xc79d);
        EXPECT(gbc.pc(), 0x4a7b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FA 0111
        gbc.setState(0x5745, 0x78d, 0x84c0, 0x2886, 0x7bd6, 0xe2a1, 0x0, 0x1);
        gbc.writeMem(0x5745, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x78d);
        EXPECT(gbc.pc(), 0x5747);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FA 0112
        gbc.setState(0xcc16, 0xcec9, 0x7ab0, 0x2f7, 0x1bf2, 0xe92, 0x1, 0x0);
        gbc.writeMem(0xcc16, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0xcec9);
        EXPECT(gbc.pc(), 0xcc18);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcc16), 0xcb);
        EXPECT(gbc.readMem(0xcc17), 0xfa);
        // CB FA 0113
        gbc.setState(0x86d5, 0xfcbd, 0xa990, 0x4027, 0x2db2, 0xa47a, 0x0, 0x0);
        gbc.writeMem(0x86d5, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xfcbd);
        EXPECT(gbc.pc(), 0x86d7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x86d5), 0xcb);
        EXPECT(gbc.readMem(0x86d6), 0xfa);
        // CB FA 0114
        gbc.setState(0x5f4c, 0x97a5, 0xcd70, 0x3dfc, 0x6323, 0x9a5d, 0x1, 0x0);
        gbc.writeMem(0x5f4c, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x97a5);
        EXPECT(gbc.pc(), 0x5f4e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FA 0115
        gbc.setState(0x1a4f, 0xb7c6, 0xdc30, 0xafe6, 0xac43, 0xd5f1, 0x1, 0x0);
        gbc.writeMem(0x1a4f, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0xb7c6);
        EXPECT(gbc.pc(), 0x1a51);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FA 0116
        gbc.setState(0x3840, 0xef7f, 0xc9f0, 0x891f, 0xb397, 0x62b1, 0x0, 0x1);
        gbc.writeMem(0x3840, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0xef7f);
        EXPECT(gbc.pc(), 0x3842);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FA 0117
        gbc.setState(0xb5e5, 0xbd7e, 0xd140, 0x3458, 0x25ba, 0x9121, 0x0, 0x0);
        gbc.writeMem(0xb5e5, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0xbd7e);
        EXPECT(gbc.pc(), 0xb5e7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb5e5), 0xcb);
        EXPECT(gbc.readMem(0xb5e6), 0xfa);
        // CB FA 0118
        gbc.setState(0x167b, 0xc884, 0x1b40, 0xd20, 0x3e67, 0xfac8, 0x1, 0x1);
        gbc.writeMem(0x167b, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0xc884);
        EXPECT(gbc.pc(), 0x167d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FA 0119
        gbc.setState(0xde4e, 0xabe9, 0xb260, 0x9a72, 0xfaf7, 0x17cc, 0x0, 0x1);
        gbc.writeMem(0xde4e, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0xabe9);
        EXPECT(gbc.pc(), 0xde50);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xde4e), 0xcb);
        EXPECT(gbc.readMem(0xde4f), 0xfa);
        // CB FA 011A
        gbc.setState(0x9a1f, 0xb9b9, 0x640, 0x6604, 0x4a58, 0x5a89, 0x0, 0x1);
        gbc.writeMem(0x9a1f, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0xb9b9);
        EXPECT(gbc.pc(), 0x9a21);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9a1f), 0xcb);
        EXPECT(gbc.readMem(0x9a20), 0xfa);
        // CB FA 011B
        gbc.setState(0xe862, 0xb4bd, 0x4ce0, 0xf780, 0xb3b3, 0x7a10, 0x1, 0x1);
        gbc.writeMem(0xe862, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xb4bd);
        EXPECT(gbc.pc(), 0xe864);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe862), 0xcb);
        EXPECT(gbc.readMem(0xe863), 0xfa);
        // CB FA 011C
        gbc.setState(0x9793, 0x2795, 0x1c90, 0xcc37, 0xd7b8, 0xd39c, 0x1, 0x1);
        gbc.writeMem(0x9793, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x2795);
        EXPECT(gbc.pc(), 0x9795);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9793), 0xcb);
        EXPECT(gbc.readMem(0x9794), 0xfa);
        // CB FA 011D
        gbc.setState(0xaa37, 0x76d0, 0x3290, 0xcdc3, 0x774e, 0xd22e, 0x0, 0x0);
        gbc.writeMem(0xaa37, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x76d0);
        EXPECT(gbc.pc(), 0xaa39);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaa37), 0xcb);
        EXPECT(gbc.readMem(0xaa38), 0xfa);
        // CB FA 011E
        gbc.setState(0x97, 0xc45f, 0xc3b0, 0xd348, 0x644e, 0xf52, 0x1, 0x0);
        gbc.writeMem(0x97, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0xc45f);
        EXPECT(gbc.pc(), 0x99);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FA 011F
        gbc.setState(0x93a9, 0xaaaa, 0x6ca0, 0xdc52, 0xf8fc, 0xec59, 0x0, 0x0);
        gbc.writeMem(0x93a9, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0xaaaa);
        EXPECT(gbc.pc(), 0x93ab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x93a9), 0xcb);
        EXPECT(gbc.readMem(0x93aa), 0xfa);
        // CB FA 0120
        gbc.setState(0xdc0e, 0xfd5c, 0x480, 0x52b9, 0x493e, 0xf4c4, 0x0, 0x0);
        gbc.writeMem(0xdc0e, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0xfd5c);
        EXPECT(gbc.pc(), 0xdc10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdc0e), 0xcb);
        EXPECT(gbc.readMem(0xdc0f), 0xfa);
        // CB FA 0121
        gbc.setState(0x764a, 0x52ee, 0x8d20, 0x7a87, 0x1552, 0x36bc, 0x1, 0x0);
        gbc.writeMem(0x764a, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x52ee);
        EXPECT(gbc.pc(), 0x764c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FA 0122
        gbc.setState(0xcb26, 0x26dd, 0x3060, 0x36d6, 0x5c06, 0x823a, 0x0, 0x1);
        gbc.writeMem(0xcb26, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x26dd);
        EXPECT(gbc.pc(), 0xcb28);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcb26), 0xcb);
        EXPECT(gbc.readMem(0xcb27), 0xfa);
        // CB FA 0123
        gbc.setState(0x8f04, 0xf448, 0xddb0, 0xf4bf, 0xfaec, 0x6a3e, 0x1, 0x0);
        gbc.writeMem(0x8f04, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0xf448);
        EXPECT(gbc.pc(), 0x8f06);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8f04), 0xcb);
        EXPECT(gbc.readMem(0x8f05), 0xfa);
        // CB FA 0124
        gbc.setState(0x9c15, 0x4718, 0xb500, 0xa80a, 0xe203, 0xd308, 0x1, 0x0);
        gbc.writeMem(0x9c15, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x4718);
        EXPECT(gbc.pc(), 0x9c17);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9c15), 0xcb);
        EXPECT(gbc.readMem(0x9c16), 0xfa);
        // CB FA 0125
        gbc.setState(0xc87d, 0x5cde, 0x56f0, 0x2dc2, 0xc039, 0x3c51, 0x1, 0x0);
        gbc.writeMem(0xc87d, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x5cde);
        EXPECT(gbc.pc(), 0xc87f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc87d), 0xcb);
        EXPECT(gbc.readMem(0xc87e), 0xfa);
        // CB FA 0126
        gbc.setState(0xb29a, 0x459f, 0x85f0, 0xdcec, 0xc21d, 0xdddf, 0x0, 0x1);
        gbc.writeMem(0xb29a, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x459f);
        EXPECT(gbc.pc(), 0xb29c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb29a), 0xcb);
        EXPECT(gbc.readMem(0xb29b), 0xfa);
        // CB FA 0127
        gbc.setState(0x87a4, 0xa2ac, 0x2a20, 0x6a11, 0x88f3, 0x1f2f, 0x0, 0x0);
        gbc.writeMem(0x87a4, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xa2ac);
        EXPECT(gbc.pc(), 0x87a6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x87a4), 0xcb);
        EXPECT(gbc.readMem(0x87a5), 0xfa);
        // CB FA 0129
        gbc.setState(0x768b, 0x40af, 0x7110, 0x1b6b, 0xc36c, 0xabbc, 0x1, 0x0);
        gbc.writeMem(0x768b, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x40af);
        EXPECT(gbc.pc(), 0x768d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FA 012A
        gbc.setState(0x2688, 0x11d6, 0x92b0, 0x5b1, 0x5281, 0xc280, 0x1, 0x0);
        gbc.writeMem(0x2688, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x11d6);
        EXPECT(gbc.pc(), 0x268a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FA 012B
        gbc.setState(0x2487, 0x43a1, 0x6d10, 0xc9a2, 0xd57f, 0x1eb9, 0x0, 0x0);
        gbc.writeMem(0x2487, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x43a1);
        EXPECT(gbc.pc(), 0x2489);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FA 012C
        gbc.setState(0x88e9, 0xfeb1, 0x95b0, 0x49bb, 0x712e, 0x9652, 0x0, 0x0);
        gbc.writeMem(0x88e9, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0xfeb1);
        EXPECT(gbc.pc(), 0x88eb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x88e9), 0xcb);
        EXPECT(gbc.readMem(0x88ea), 0xfa);
        // CB FA 012D
        gbc.setState(0xbbe6, 0x8bac, 0xc170, 0x7710, 0x62ae, 0xc147, 0x0, 0x1);
        gbc.writeMem(0xbbe6, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x8bac);
        EXPECT(gbc.pc(), 0xbbe8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbbe6), 0xcb);
        EXPECT(gbc.readMem(0xbbe7), 0xfa);
        // CB FA 012E
        gbc.setState(0x27cc, 0x4278, 0x3f90, 0xbfd5, 0x113b, 0xe8c2, 0x0, 0x0);
        gbc.writeMem(0x27cc, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x4278);
        EXPECT(gbc.pc(), 0x27ce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FA 012F
        gbc.setState(0x565e, 0x23fe, 0x3d0, 0x95f8, 0xc6ba, 0x8e34, 0x1, 0x0);
        gbc.writeMem(0x565e, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x23fe);
        EXPECT(gbc.pc(), 0x5660);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FA 0130
        gbc.setState(0x91c2, 0x4c8a, 0x6e60, 0xfef, 0x3f7a, 0xfb83, 0x1, 0x1);
        gbc.writeMem(0x91c2, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x4c8a);
        EXPECT(gbc.pc(), 0x91c4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x91c2), 0xcb);
        EXPECT(gbc.readMem(0x91c3), 0xfa);
        // CB FA 0131
        gbc.setState(0x5756, 0x9c46, 0xf1b0, 0x4f42, 0x98be, 0xe0d6, 0x1, 0x0);
        gbc.writeMem(0x5756, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x9c46);
        EXPECT(gbc.pc(), 0x5758);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FA 0133
        gbc.setState(0x2146, 0x738e, 0x9d30, 0x2910, 0x18cb, 0x9fcc, 0x0, 0x1);
        gbc.writeMem(0x2146, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x738e);
        EXPECT(gbc.pc(), 0x2148);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FA 0134
        gbc.setState(0x975a, 0x83c3, 0xc480, 0x4d53, 0x9c71, 0xebf9, 0x0, 0x0);
        gbc.writeMem(0x975a, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x83c3);
        EXPECT(gbc.pc(), 0x975c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x975a), 0xcb);
        EXPECT(gbc.readMem(0x975b), 0xfa);
        // CB FA 0136
        gbc.setState(0x3acb, 0xdcd2, 0xc320, 0x79a2, 0xfcf8, 0x716c, 0x0, 0x1);
        gbc.writeMem(0x3acb, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xdcd2);
        EXPECT(gbc.pc(), 0x3acd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FA 0137
        gbc.setState(0xc248, 0x7412, 0x69f0, 0x9050, 0x3d5a, 0xb45b, 0x1, 0x0);
        gbc.writeMem(0xc248, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x7412);
        EXPECT(gbc.pc(), 0xc24a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc248), 0xcb);
        EXPECT(gbc.readMem(0xc249), 0xfa);
        // CB FA 0138
        gbc.setState(0x9baa, 0x59f6, 0x4940, 0xfc19, 0x691f, 0x2aea, 0x1, 0x0);
        gbc.writeMem(0x9baa, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x59f6);
        EXPECT(gbc.pc(), 0x9bac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9baa), 0xcb);
        EXPECT(gbc.readMem(0x9bab), 0xfa);
        // CB FA 0139
        gbc.setState(0x4595, 0xd3dd, 0x6c50, 0x41a, 0x68b4, 0x187, 0x1, 0x1);
        gbc.writeMem(0x4595, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xd3dd);
        EXPECT(gbc.pc(), 0x4597);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FA 013C
        gbc.setState(0xbc16, 0xa534, 0x6090, 0x88ec, 0xe596, 0xbefe, 0x1, 0x0);
        gbc.writeMem(0xbc16, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0xa534);
        EXPECT(gbc.pc(), 0xbc18);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbc16), 0xcb);
        EXPECT(gbc.readMem(0xbc17), 0xfa);
        // CB FA 013D
        gbc.setState(0x15c4, 0x59bf, 0x5270, 0xb200, 0xa88b, 0xece8, 0x1, 0x1);
        gbc.writeMem(0x15c4, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x59bf);
        EXPECT(gbc.pc(), 0x15c6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FA 013E
        gbc.setState(0xd198, 0x3b56, 0x7b30, 0xde9a, 0x3100, 0xb4b8, 0x0, 0x0);
        gbc.writeMem(0xd198, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x3b56);
        EXPECT(gbc.pc(), 0xd19a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd198), 0xcb);
        EXPECT(gbc.readMem(0xd199), 0xfa);
        // CB FA 013F
        gbc.setState(0x4743, 0xc5fd, 0xf4f0, 0xce02, 0xd4b0, 0x9b2f, 0x0, 0x1);
        gbc.writeMem(0x4743, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xc5fd);
        EXPECT(gbc.pc(), 0x4745);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FA 0140
        gbc.setState(0x2b40, 0x4c1a, 0x47f0, 0xaa2a, 0xd268, 0x5143, 0x0, 0x0);
        gbc.writeMem(0x2b40, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x4c1a);
        EXPECT(gbc.pc(), 0x2b42);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FA 0141
        gbc.setState(0x2c37, 0xe1f1, 0xc90, 0x4dab, 0xf5f0, 0xf009, 0x1, 0x0);
        gbc.writeMem(0x2c37, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0xe1f1);
        EXPECT(gbc.pc(), 0x2c39);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FA 0142
        gbc.setState(0x4097, 0x9315, 0xd0f0, 0xb25c, 0x2b1d, 0xaed0, 0x1, 0x0);
        gbc.writeMem(0x4097, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x9315);
        EXPECT(gbc.pc(), 0x4099);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FA 0143
        gbc.setState(0x63c7, 0xc73d, 0x6070, 0xc534, 0xd0fd, 0xde09, 0x0, 0x1);
        gbc.writeMem(0x63c7, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0xc73d);
        EXPECT(gbc.pc(), 0x63c9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FA 0144
        gbc.setState(0x8777, 0x76bf, 0xaf10, 0x3a9, 0xb2c7, 0xcc99, 0x0, 0x0);
        gbc.writeMem(0x8777, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x76bf);
        EXPECT(gbc.pc(), 0x8779);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8777), 0xcb);
        EXPECT(gbc.readMem(0x8778), 0xfa);
        // CB FA 0145
        gbc.setState(0xb17d, 0xee0a, 0x7b20, 0xe0a5, 0x472b, 0x4215, 0x1, 0x1);
        gbc.writeMem(0xb17d, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0xee0a);
        EXPECT(gbc.pc(), 0xb17f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb17d), 0xcb);
        EXPECT(gbc.readMem(0xb17e), 0xfa);
        // CB FA 0146
        gbc.setState(0x69c0, 0x51a0, 0x1c10, 0x2a00, 0xe2dc, 0x92a5, 0x1, 0x1);
        gbc.writeMem(0x69c0, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x51a0);
        EXPECT(gbc.pc(), 0x69c2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FA 0147
        gbc.setState(0x187a, 0x9a82, 0xb170, 0xfe8d, 0x3327, 0x1181, 0x1, 0x0);
        gbc.writeMem(0x187a, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x9a82);
        EXPECT(gbc.pc(), 0x187c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FA 0148
        gbc.setState(0x1b8f, 0xea42, 0x8db0, 0xa11f, 0x13d9, 0xf261, 0x1, 0x1);
        gbc.writeMem(0x1b8f, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0xea42);
        EXPECT(gbc.pc(), 0x1b91);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FA 0149
        gbc.setState(0xbccb, 0xad87, 0xb440, 0x7daa, 0x4fb9, 0x4c28, 0x1, 0x1);
        gbc.writeMem(0xbccb, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xad87);
        EXPECT(gbc.pc(), 0xbccd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbccb), 0xcb);
        EXPECT(gbc.readMem(0xbccc), 0xfa);
        // CB FA 014A
        gbc.setState(0x6ac9, 0xfcc9, 0x9630, 0x4a3b, 0xa90, 0x6730, 0x1, 0x0);
        gbc.writeMem(0x6ac9, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0xfcc9);
        EXPECT(gbc.pc(), 0x6acb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FA 014B
        gbc.setState(0x3d49, 0xf6de, 0x1670, 0xbb2a, 0x6cfe, 0x283d, 0x1, 0x0);
        gbc.writeMem(0x3d49, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0xf6de);
        EXPECT(gbc.pc(), 0x3d4b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FA 014C
        gbc.setState(0x6372, 0xcfa7, 0x3dc0, 0x970b, 0xc5f4, 0xa0f8, 0x0, 0x1);
        gbc.writeMem(0x6372, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0xcfa7);
        EXPECT(gbc.pc(), 0x6374);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FA 014D
        gbc.setState(0x4c6, 0xc2d9, 0xc050, 0x76c7, 0x2edb, 0xaf19, 0x0, 0x0);
        gbc.writeMem(0x4c6, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0xc2d9);
        EXPECT(gbc.pc(), 0x4c8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FA 014E
        gbc.setState(0xd4dc, 0x6ff5, 0xb010, 0xec36, 0x3b8b, 0xb5c1, 0x0, 0x1);
        gbc.writeMem(0xd4dc, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x6ff5);
        EXPECT(gbc.pc(), 0xd4de);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd4dc), 0xcb);
        EXPECT(gbc.readMem(0xd4dd), 0xfa);
        // CB FA 014F
        gbc.setState(0xc5e0, 0x8b18, 0xe290, 0x7a30, 0x3421, 0xa1fb, 0x0, 0x0);
        gbc.writeMem(0xc5e0, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x8b18);
        EXPECT(gbc.pc(), 0xc5e2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc5e0), 0xcb);
        EXPECT(gbc.readMem(0xc5e1), 0xfa);
        // CB FA 0150
        gbc.setState(0x359c, 0x4d1a, 0x2920, 0x3ac1, 0x4020, 0x4dc9, 0x0, 0x0);
        gbc.writeMem(0x359c, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x4d1a);
        EXPECT(gbc.pc(), 0x359e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FA 0151
        gbc.setState(0x70ba, 0xb3f8, 0xf1c0, 0x308f, 0x51de, 0xacf8, 0x1, 0x0);
        gbc.writeMem(0x70ba, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0xb3f8);
        EXPECT(gbc.pc(), 0x70bc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FA 0152
        gbc.setState(0x42fb, 0x51fb, 0xc320, 0x861c, 0xc355, 0x1d06, 0x0, 0x1);
        gbc.writeMem(0x42fb, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x51fb);
        EXPECT(gbc.pc(), 0x42fd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FA 0153
        gbc.setState(0xae08, 0x2bde, 0x7d70, 0xfd0d, 0x6569, 0x409a, 0x0, 0x1);
        gbc.writeMem(0xae08, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x2bde);
        EXPECT(gbc.pc(), 0xae0a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xae08), 0xcb);
        EXPECT(gbc.readMem(0xae09), 0xfa);
        // CB FA 0154
        gbc.setState(0x723f, 0x3541, 0x7d0, 0x50d6, 0x8c3e, 0x5114, 0x1, 0x0);
        gbc.writeMem(0x723f, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x3541);
        EXPECT(gbc.pc(), 0x7241);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FA 0155
        gbc.setState(0x4f30, 0x4f86, 0xd210, 0xbaf4, 0x2fe8, 0x7870, 0x1, 0x0);
        gbc.writeMem(0x4f30, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x4f86);
        EXPECT(gbc.pc(), 0x4f32);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FA 0156
        gbc.setState(0xc2c1, 0x8559, 0xc320, 0x5583, 0x4ae7, 0xea93, 0x0, 0x0);
        gbc.writeMem(0xc2c1, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x8559);
        EXPECT(gbc.pc(), 0xc2c3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc2c1), 0xcb);
        EXPECT(gbc.readMem(0xc2c2), 0xfa);
        // CB FA 0157
        gbc.setState(0x9c5b, 0xa260, 0x5490, 0x2b13, 0x8f09, 0x43f3, 0x1, 0x0);
        gbc.writeMem(0x9c5b, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0xa260);
        EXPECT(gbc.pc(), 0x9c5d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9c5b), 0xcb);
        EXPECT(gbc.readMem(0x9c5c), 0xfa);
        // CB FA 0158
        gbc.setState(0x5c9e, 0x6547, 0xe9d0, 0x2702, 0x5265, 0x64cc, 0x1, 0x0);
        gbc.writeMem(0x5c9e, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x6547);
        EXPECT(gbc.pc(), 0x5ca0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FA 0159
        gbc.setState(0xf11, 0xa2aa, 0xed70, 0x8778, 0x5e9c, 0x1063, 0x0, 0x1);
        gbc.writeMem(0xf11, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0xa2aa);
        EXPECT(gbc.pc(), 0xf13);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FA 015A
        gbc.setState(0x470d, 0xdd1a, 0xaac0, 0xe884, 0xfb3c, 0xd0d0, 0x1, 0x0);
        gbc.writeMem(0x470d, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0xdd1a);
        EXPECT(gbc.pc(), 0x470f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FA 015B
        gbc.setState(0x6548, 0x1c19, 0x5f90, 0x869d, 0xf1c, 0xb16e, 0x0, 0x0);
        gbc.writeMem(0x6548, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x1c19);
        EXPECT(gbc.pc(), 0x654a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FA 015C
        gbc.setState(0x8e73, 0x21c2, 0x20c0, 0x440c, 0x1ccd, 0x2106, 0x1, 0x1);
        gbc.writeMem(0x8e73, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x21c2);
        EXPECT(gbc.pc(), 0x8e75);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8e73), 0xcb);
        EXPECT(gbc.readMem(0x8e74), 0xfa);
        // CB FA 015D
        gbc.setState(0x1fb0, 0xb7c0, 0xa8b0, 0xd1cb, 0x9385, 0xc7e7, 0x0, 0x0);
        gbc.writeMem(0x1fb0, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xb7c0);
        EXPECT(gbc.pc(), 0x1fb2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FA 015E
        gbc.setState(0x446c, 0xef5, 0x3fb0, 0xad77, 0x2f5b, 0x70c1, 0x1, 0x1);
        gbc.writeMem(0x446c, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0xef5);
        EXPECT(gbc.pc(), 0x446e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FA 015F
        gbc.setState(0x65fb, 0x71d, 0x6c90, 0x483e, 0x7dc8, 0x9bd4, 0x1, 0x0);
        gbc.writeMem(0x65fb, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x71d);
        EXPECT(gbc.pc(), 0x65fd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FA 0160
        gbc.setState(0x513c, 0x4b7d, 0x66f0, 0xe688, 0xf646, 0xd9b7, 0x1, 0x1);
        gbc.writeMem(0x513c, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x4b7d);
        EXPECT(gbc.pc(), 0x513e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FA 0161
        gbc.setState(0x75a4, 0xaf0b, 0x89f0, 0x71fa, 0x512b, 0xbc76, 0x1, 0x0);
        gbc.writeMem(0x75a4, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0xaf0b);
        EXPECT(gbc.pc(), 0x75a6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FA 0162
        gbc.setState(0xe9c0, 0x1962, 0x8310, 0x15e5, 0x230b, 0xe0bb, 0x1, 0x1);
        gbc.writeMem(0xe9c0, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x1962);
        EXPECT(gbc.pc(), 0xe9c2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe9c0), 0xcb);
        EXPECT(gbc.readMem(0xe9c1), 0xfa);
        // CB FA 0163
        gbc.setState(0xdfea, 0x1c37, 0x3d50, 0xe7b4, 0x1ed7, 0x8b68, 0x1, 0x0);
        gbc.writeMem(0xdfea, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x1c37);
        EXPECT(gbc.pc(), 0xdfec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdfea), 0xcb);
        EXPECT(gbc.readMem(0xdfeb), 0xfa);
        // CB FA 0164
        gbc.setState(0xa3ad, 0xa129, 0x3470, 0xd852, 0x6160, 0x3050, 0x1, 0x0);
        gbc.writeMem(0xa3ad, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0xa129);
        EXPECT(gbc.pc(), 0xa3af);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa3ad), 0xcb);
        EXPECT(gbc.readMem(0xa3ae), 0xfa);
        // CB FA 0165
        gbc.setState(0x64eb, 0x9f8b, 0x8310, 0x8072, 0x279e, 0x7f4f, 0x1, 0x0);
        gbc.writeMem(0x64eb, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x9f8b);
        EXPECT(gbc.pc(), 0x64ed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FA 0166
        gbc.setState(0x4549, 0x2573, 0xf9e0, 0x4c6e, 0x5b84, 0xc679, 0x1, 0x1);
        gbc.writeMem(0x4549, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x2573);
        EXPECT(gbc.pc(), 0x454b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FA 0167
        gbc.setState(0xa846, 0xb5d9, 0x9080, 0x6875, 0xef4d, 0x21f3, 0x1, 0x1);
        gbc.writeMem(0xa846, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0xb5d9);
        EXPECT(gbc.pc(), 0xa848);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa846), 0xcb);
        EXPECT(gbc.readMem(0xa847), 0xfa);
        // CB FA 0168
        gbc.setState(0xe193, 0xbfa4, 0xe450, 0x81eb, 0x5c92, 0x1b9, 0x1, 0x1);
        gbc.writeMem(0xe193, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0xbfa4);
        EXPECT(gbc.pc(), 0xe195);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe193), 0xcb);
        EXPECT(gbc.readMem(0xe194), 0xfa);
        // CB FA 0169
        gbc.setState(0x8dd7, 0x92d9, 0x5420, 0xdff0, 0xcfaa, 0xae49, 0x0, 0x0);
        gbc.writeMem(0x8dd7, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x92d9);
        EXPECT(gbc.pc(), 0x8dd9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8dd7), 0xcb);
        EXPECT(gbc.readMem(0x8dd8), 0xfa);
        // CB FA 016B
        gbc.setState(0x59b, 0xbf2d, 0x6390, 0x1922, 0x7f08, 0x37e7, 0x0, 0x0);
        gbc.writeMem(0x59b, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xbf2d);
        EXPECT(gbc.pc(), 0x59d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FA 016C
        gbc.setState(0x8242, 0xcf31, 0xb740, 0x2b22, 0xfabd, 0xad03, 0x1, 0x1);
        gbc.writeMem(0x8242, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0xcf31);
        EXPECT(gbc.pc(), 0x8244);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8242), 0xcb);
        EXPECT(gbc.readMem(0x8243), 0xfa);
        // CB FA 016D
        gbc.setState(0x3aeb, 0xf527, 0x5f00, 0x6ad1, 0xa63d, 0x2a49, 0x0, 0x0);
        gbc.writeMem(0x3aeb, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xf527);
        EXPECT(gbc.pc(), 0x3aed);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FA 016E
        gbc.setState(0x948b, 0x6220, 0x7a60, 0x5c26, 0x2dfd, 0x7e38, 0x0, 0x1);
        gbc.writeMem(0x948b, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x6220);
        EXPECT(gbc.pc(), 0x948d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x948b), 0xcb);
        EXPECT(gbc.readMem(0x948c), 0xfa);
        // CB FA 016F
        gbc.setState(0xc6c7, 0xb8c3, 0xbb80, 0xa993, 0x65d6, 0x8c0f, 0x1, 0x0);
        gbc.writeMem(0xc6c7, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0xb8c3);
        EXPECT(gbc.pc(), 0xc6c9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc6c7), 0xcb);
        EXPECT(gbc.readMem(0xc6c8), 0xfa);
        // CB FA 0170
        gbc.setState(0xcc22, 0xe7bf, 0xfae0, 0x2205, 0xee37, 0x75ae, 0x0, 0x1);
        gbc.writeMem(0xcc22, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0xe7bf);
        EXPECT(gbc.pc(), 0xcc24);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcc22), 0xcb);
        EXPECT(gbc.readMem(0xcc23), 0xfa);
        // CB FA 0171
        gbc.setState(0x45aa, 0x6302, 0x5ed0, 0x63b2, 0x853d, 0x629c, 0x0, 0x0);
        gbc.writeMem(0x45aa, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x6302);
        EXPECT(gbc.pc(), 0x45ac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FA 0172
        gbc.setState(0x7fbe, 0xfe, 0xf0d0, 0x4c53, 0x2fbd, 0x1680, 0x0, 0x0);
        gbc.writeMem(0x7fbe, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0xfe);
        EXPECT(gbc.pc(), 0x7fc0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FA 0173
        gbc.setState(0xd94f, 0x4da3, 0x88f0, 0x2543, 0x34fb, 0x4eea, 0x0, 0x1);
        gbc.writeMem(0xd94f, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x4da3);
        EXPECT(gbc.pc(), 0xd951);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd94f), 0xcb);
        EXPECT(gbc.readMem(0xd950), 0xfa);
        // CB FA 0174
        gbc.setState(0x5c66, 0xdbbf, 0x2720, 0xdcf2, 0x1075, 0xe959, 0x0, 0x1);
        gbc.writeMem(0x5c66, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0xdbbf);
        EXPECT(gbc.pc(), 0x5c68);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FA 0175
        gbc.setState(0x78d6, 0xffa7, 0x4b0, 0x2ff0, 0x138a, 0x2dd4, 0x0, 0x1);
        gbc.writeMem(0x78d6, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xffa7);
        EXPECT(gbc.pc(), 0x78d8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FA 0176
        gbc.setState(0x3459, 0x50c5, 0x91f0, 0x488c, 0xe187, 0xcd76, 0x0, 0x1);
        gbc.writeMem(0x3459, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x50c5);
        EXPECT(gbc.pc(), 0x345b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FA 0178
        gbc.setState(0xccd8, 0xd0bf, 0x6f0, 0x87ea, 0x40da, 0xaba, 0x1, 0x0);
        gbc.writeMem(0xccd8, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0xd0bf);
        EXPECT(gbc.pc(), 0xccda);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xccd8), 0xcb);
        EXPECT(gbc.readMem(0xccd9), 0xfa);
        // CB FA 0179
        gbc.setState(0xb4, 0x6a18, 0x64c0, 0xcde0, 0xf23b, 0x9431, 0x0, 0x0);
        gbc.writeMem(0xb4, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x6a18);
        EXPECT(gbc.pc(), 0xb6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FA 017A
        gbc.setState(0x3153, 0xabf3, 0x9790, 0x1372, 0x6d4a, 0x35a, 0x0, 0x1);
        gbc.writeMem(0x3153, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0xabf3);
        EXPECT(gbc.pc(), 0x3155);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FA 017C
        gbc.setState(0x500b, 0x7d06, 0x12e0, 0x578, 0xf9bb, 0x1bba, 0x1, 0x1);
        gbc.writeMem(0x500b, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x7d06);
        EXPECT(gbc.pc(), 0x500d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FA 017D
        gbc.setState(0x986d, 0xf8f1, 0x1690, 0xe46, 0x4c8b, 0xab33, 0x0, 0x1);
        gbc.writeMem(0x986d, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0xf8f1);
        EXPECT(gbc.pc(), 0x986f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x986d), 0xcb);
        EXPECT(gbc.readMem(0x986e), 0xfa);
        // CB FA 017E
        gbc.setState(0xdeac, 0x9083, 0xc450, 0xab66, 0x359, 0xa695, 0x0, 0x0);
        gbc.writeMem(0xdeac, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x9083);
        EXPECT(gbc.pc(), 0xdeae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdeac), 0xcb);
        EXPECT(gbc.readMem(0xdead), 0xfa);
        // CB FA 017F
        gbc.setState(0x27f9, 0x5f27, 0xb5d0, 0x3c4b, 0x1bf2, 0xb5e2, 0x1, 0x1);
        gbc.writeMem(0x27f9, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x5f27);
        EXPECT(gbc.pc(), 0x27fb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FA 0181
        gbc.setState(0x1773, 0x8df, 0xaa20, 0x1fce, 0x3c00, 0x6675, 0x0, 0x0);
        gbc.writeMem(0x1773, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x8df);
        EXPECT(gbc.pc(), 0x1775);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FA 0182
        gbc.setState(0xa08c, 0x3d14, 0xd070, 0xe8d2, 0x4ee6, 0x3724, 0x1, 0x0);
        gbc.writeMem(0xa08c, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x3d14);
        EXPECT(gbc.pc(), 0xa08e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa08c), 0xcb);
        EXPECT(gbc.readMem(0xa08d), 0xfa);
        // CB FA 0183
        gbc.setState(0xdf39, 0xe5b3, 0x2a0, 0x50a5, 0x769, 0xfa57, 0x0, 0x0);
        gbc.writeMem(0xdf39, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0xe5b3);
        EXPECT(gbc.pc(), 0xdf3b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdf39), 0xcb);
        EXPECT(gbc.readMem(0xdf3a), 0xfa);
        // CB FA 0184
        gbc.setState(0x1ff9, 0xacd8, 0x8cd0, 0xc836, 0x8231, 0x2da6, 0x1, 0x0);
        gbc.writeMem(0x1ff9, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0xacd8);
        EXPECT(gbc.pc(), 0x1ffb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FA 0185
        gbc.setState(0x5cc1, 0x419d, 0xf4b0, 0x6670, 0xcc1c, 0x4721, 0x0, 0x0);
        gbc.writeMem(0x5cc1, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x419d);
        EXPECT(gbc.pc(), 0x5cc3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FA 0186
        gbc.setState(0x2ed8, 0xb4d, 0x8420, 0xa671, 0xa6c8, 0xdae, 0x1, 0x1);
        gbc.writeMem(0x2ed8, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0xb4d);
        EXPECT(gbc.pc(), 0x2eda);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FA 0187
        gbc.setState(0x445f, 0xb9a9, 0x1df0, 0xe517, 0x8529, 0x1516, 0x1, 0x1);
        gbc.writeMem(0x445f, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xb9a9);
        EXPECT(gbc.pc(), 0x4461);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FA 0188
        gbc.setState(0x2857, 0x45f8, 0x2030, 0xd864, 0x4746, 0x2fa2, 0x1, 0x1);
        gbc.writeMem(0x2857, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x45f8);
        EXPECT(gbc.pc(), 0x2859);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FA 018A
        gbc.setState(0xc233, 0x2af, 0x5b60, 0x47d2, 0x2611, 0xc613, 0x1, 0x0);
        gbc.writeMem(0xc233, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x2af);
        EXPECT(gbc.pc(), 0xc235);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc233), 0xcb);
        EXPECT(gbc.readMem(0xc234), 0xfa);
        // CB FA 018B
        gbc.setState(0xa184, 0xa120, 0xeca0, 0xac91, 0xc47c, 0x9ad4, 0x1, 0x0);
        gbc.writeMem(0xa184, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xa120);
        EXPECT(gbc.pc(), 0xa186);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa184), 0xcb);
        EXPECT(gbc.readMem(0xa185), 0xfa);
        // CB FA 018C
        gbc.setState(0xebe5, 0xcb97, 0xe890, 0xfa16, 0xdc09, 0x31cc, 0x1, 0x0);
        gbc.writeMem(0xebe5, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0xcb97);
        EXPECT(gbc.pc(), 0xebe7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xebe5), 0xcb);
        EXPECT(gbc.readMem(0xebe6), 0xfa);
        // CB FA 018D
        gbc.setState(0x707f, 0xd4f7, 0xd200, 0x8a3a, 0x1015, 0x7c6e, 0x1, 0x1);
        gbc.writeMem(0x707f, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xd4f7);
        EXPECT(gbc.pc(), 0x7081);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FA 018E
        gbc.setState(0x6b43, 0x8fe8, 0x3050, 0x8ec9, 0x2aff, 0x47ff, 0x1, 0x1);
        gbc.writeMem(0x6b43, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x8fe8);
        EXPECT(gbc.pc(), 0x6b45);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FA 018F
        gbc.setState(0x520d, 0xd12f, 0x9630, 0x1b65, 0x7078, 0x7f6a, 0x0, 0x0);
        gbc.writeMem(0x520d, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xd12f);
        EXPECT(gbc.pc(), 0x520f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FA 0190
        gbc.setState(0x9648, 0xd138, 0xe480, 0x7c89, 0x86fd, 0x7c7d, 0x0, 0x0);
        gbc.writeMem(0x9648, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xd138);
        EXPECT(gbc.pc(), 0x964a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9648), 0xcb);
        EXPECT(gbc.readMem(0x9649), 0xfa);
        // CB FA 0192
        gbc.setState(0xdac3, 0xac81, 0x580, 0xa7b8, 0x5b2d, 0xa928, 0x1, 0x1);
        gbc.writeMem(0xdac3, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xac81);
        EXPECT(gbc.pc(), 0xdac5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdac3), 0xcb);
        EXPECT(gbc.readMem(0xdac4), 0xfa);
        // CB FA 0193
        gbc.setState(0x240f, 0x418b, 0x550, 0x1339, 0x3075, 0x2107, 0x1, 0x1);
        gbc.writeMem(0x240f, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x418b);
        EXPECT(gbc.pc(), 0x2411);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FA 0194
        gbc.setState(0xe7f4, 0xc4e0, 0x3e20, 0xff95, 0xba7e, 0x2297, 0x0, 0x0);
        gbc.writeMem(0xe7f4, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0xc4e0);
        EXPECT(gbc.pc(), 0xe7f6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe7f4), 0xcb);
        EXPECT(gbc.readMem(0xe7f5), 0xfa);
        // CB FA 0195
        gbc.setState(0x7cf8, 0x2620, 0xa6f0, 0xdb16, 0xa4c5, 0x2113, 0x0, 0x1);
        gbc.writeMem(0x7cf8, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x2620);
        EXPECT(gbc.pc(), 0x7cfa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FA 0196
        gbc.setState(0xb397, 0xbe04, 0x3890, 0xfa27, 0x8de, 0x68c1, 0x1, 0x1);
        gbc.writeMem(0xb397, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0xbe04);
        EXPECT(gbc.pc(), 0xb399);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb397), 0xcb);
        EXPECT(gbc.readMem(0xb398), 0xfa);
        // CB FA 0197
        gbc.setState(0x39a6, 0x7199, 0xda40, 0x7832, 0x1c89, 0x6aee, 0x0, 0x1);
        gbc.writeMem(0x39a6, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x7199);
        EXPECT(gbc.pc(), 0x39a8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FA 0198
        gbc.setState(0xb813, 0xf3b4, 0x2300, 0x36b7, 0x5955, 0x2578, 0x0, 0x0);
        gbc.writeMem(0xb813, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0xf3b4);
        EXPECT(gbc.pc(), 0xb815);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb813), 0xcb);
        EXPECT(gbc.readMem(0xb814), 0xfa);
        // CB FA 0199
        gbc.setState(0xa591, 0xabac, 0x4690, 0xcf88, 0xa86c, 0x88f9, 0x1, 0x0);
        gbc.writeMem(0xa591, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xabac);
        EXPECT(gbc.pc(), 0xa593);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa591), 0xcb);
        EXPECT(gbc.readMem(0xa592), 0xfa);
        // CB FA 019A
        gbc.setState(0xb3a0, 0xd019, 0x2dc0, 0x7da3, 0xaa5a, 0x717, 0x1, 0x1);
        gbc.writeMem(0xb3a0, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0xd019);
        EXPECT(gbc.pc(), 0xb3a2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb3a0), 0xcb);
        EXPECT(gbc.readMem(0xb3a1), 0xfa);
        // CB FA 019B
        gbc.setState(0x102b, 0x2561, 0x2570, 0xb000, 0x7be6, 0xad23, 0x1, 0x1);
        gbc.writeMem(0x102b, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x2561);
        EXPECT(gbc.pc(), 0x102d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FA 019C
        gbc.setState(0x6575, 0xa444, 0xe440, 0x2228, 0x54e9, 0x3971, 0x0, 0x1);
        gbc.writeMem(0x6575, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xa444);
        EXPECT(gbc.pc(), 0x6577);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FA 019D
        gbc.setState(0xa6d0, 0x8f9e, 0x8de0, 0xe8d1, 0x6619, 0x8d07, 0x1, 0x1);
        gbc.writeMem(0xa6d0, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x8f9e);
        EXPECT(gbc.pc(), 0xa6d2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa6d0), 0xcb);
        EXPECT(gbc.readMem(0xa6d1), 0xfa);
        // CB FA 019E
        gbc.setState(0xe1e0, 0x638f, 0xdb50, 0xd1bc, 0x3660, 0xc165, 0x0, 0x0);
        gbc.writeMem(0xe1e0, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x638f);
        EXPECT(gbc.pc(), 0xe1e2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe1e0), 0xcb);
        EXPECT(gbc.readMem(0xe1e1), 0xfa);
        // CB FA 019F
        gbc.setState(0xd64, 0x4ee9, 0xb2e0, 0x4063, 0x2fbd, 0xdc45, 0x1, 0x0);
        gbc.writeMem(0xd64, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x4ee9);
        EXPECT(gbc.pc(), 0xd66);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FA 01A0
        gbc.setState(0xca89, 0x222d, 0xb120, 0xbf9f, 0xa832, 0x5c8a, 0x0, 0x0);
        gbc.writeMem(0xca89, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x222d);
        EXPECT(gbc.pc(), 0xca8b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xca89), 0xcb);
        EXPECT(gbc.readMem(0xca8a), 0xfa);
        // CB FA 01A2
        gbc.setState(0x6f6, 0x263a, 0x3540, 0xf9b, 0x307a, 0xf722, 0x1, 0x0);
        gbc.writeMem(0x6f6, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x263a);
        EXPECT(gbc.pc(), 0x6f8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FA 01A3
        gbc.setState(0x8f39, 0x72f8, 0x1510, 0xf876, 0xe2c2, 0x4cd9, 0x0, 0x1);
        gbc.writeMem(0x8f39, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x72f8);
        EXPECT(gbc.pc(), 0x8f3b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8f39), 0xcb);
        EXPECT(gbc.readMem(0x8f3a), 0xfa);
        // CB FA 01A4
        gbc.setState(0x110b, 0x82c, 0x3da0, 0x3f32, 0x1299, 0x98b7, 0x0, 0x1);
        gbc.writeMem(0x110b, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x82c);
        EXPECT(gbc.pc(), 0x110d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FA 01A6
        gbc.setState(0x1a3, 0x23b, 0x3180, 0xddf7, 0xd828, 0x4240, 0x1, 0x1);
        gbc.writeMem(0x1a3, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x23b);
        EXPECT(gbc.pc(), 0x1a5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FA 01A7
        gbc.setState(0xb47, 0x646a, 0xf5e0, 0xc9cf, 0x7cc2, 0xbd2c, 0x1, 0x0);
        gbc.writeMem(0xb47, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x646a);
        EXPECT(gbc.pc(), 0xb49);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FA 01A8
        gbc.setState(0xdfad, 0xc6e, 0x2020, 0xcf23, 0x7150, 0x1d32, 0x0, 0x0);
        gbc.writeMem(0xdfad, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xc6e);
        EXPECT(gbc.pc(), 0xdfaf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdfad), 0xcb);
        EXPECT(gbc.readMem(0xdfae), 0xfa);
        // CB FA 01A9
        gbc.setState(0xa04a, 0x8975, 0xac0, 0xad86, 0x948, 0x4199, 0x0, 0x1);
        gbc.writeMem(0xa04a, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x8975);
        EXPECT(gbc.pc(), 0xa04c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa04a), 0xcb);
        EXPECT(gbc.readMem(0xa04b), 0xfa);
        // CB FA 01AA
        gbc.setState(0x41a, 0xf530, 0x7170, 0xe913, 0xb2f7, 0xc2a, 0x0, 0x0);
        gbc.writeMem(0x41a, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xf530);
        EXPECT(gbc.pc(), 0x41c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FA 01AB
        gbc.setState(0xd9b7, 0xcb1c, 0x2210, 0xcacf, 0xa8c9, 0xdd6d, 0x0, 0x0);
        gbc.writeMem(0xd9b7, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0xcb1c);
        EXPECT(gbc.pc(), 0xd9b9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd9b7), 0xcb);
        EXPECT(gbc.readMem(0xd9b8), 0xfa);
        // CB FA 01AC
        gbc.setState(0x9efd, 0x857c, 0x48f0, 0xb08a, 0x7a1f, 0xe5f6, 0x1, 0x0);
        gbc.writeMem(0x9efd, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x857c);
        EXPECT(gbc.pc(), 0x9eff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9efd), 0xcb);
        EXPECT(gbc.readMem(0x9efe), 0xfa);
        // CB FA 01AD
        gbc.setState(0xa53a, 0x2f7a, 0x49e0, 0xff8, 0x15d6, 0x74a5, 0x0, 0x0);
        gbc.writeMem(0xa53a, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x2f7a);
        EXPECT(gbc.pc(), 0xa53c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa53a), 0xcb);
        EXPECT(gbc.readMem(0xa53b), 0xfa);
        // CB FA 01AE
        gbc.setState(0x6d8e, 0xef0f, 0xc0d0, 0xe389, 0xa25b, 0x11ef, 0x1, 0x1);
        gbc.writeMem(0x6d8e, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0xef0f);
        EXPECT(gbc.pc(), 0x6d90);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FA 01AF
        gbc.setState(0x21d2, 0x51a7, 0xe5c0, 0xb9d6, 0x28de, 0x52e, 0x0, 0x1);
        gbc.writeMem(0x21d2, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x51a7);
        EXPECT(gbc.pc(), 0x21d4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FA 01B0
        gbc.setState(0x8507, 0xda66, 0xcdb0, 0xfd3d, 0xb36f, 0xe326, 0x1, 0x1);
        gbc.writeMem(0x8507, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0xda66);
        EXPECT(gbc.pc(), 0x8509);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8507), 0xcb);
        EXPECT(gbc.readMem(0x8508), 0xfa);
        // CB FA 01B2
        gbc.setState(0x8e1b, 0x639, 0xe280, 0x7e70, 0xfe0d, 0x8b59, 0x1, 0x0);
        gbc.writeMem(0x8e1b, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x639);
        EXPECT(gbc.pc(), 0x8e1d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8e1b), 0xcb);
        EXPECT(gbc.readMem(0x8e1c), 0xfa);
        // CB FA 01B4
        gbc.setState(0xb0fe, 0x5139, 0xbf50, 0x2d3e, 0x642f, 0xf018, 0x0, 0x0);
        gbc.writeMem(0xb0fe, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x5139);
        EXPECT(gbc.pc(), 0xb100);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb0fe), 0xcb);
        EXPECT(gbc.readMem(0xb0ff), 0xfa);
        // CB FA 01B5
        gbc.setState(0x7e0b, 0x12e8, 0x72c0, 0x53ed, 0x208d, 0x5544, 0x1, 0x1);
        gbc.writeMem(0x7e0b, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x12e8);
        EXPECT(gbc.pc(), 0x7e0d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FA 01B6
        gbc.setState(0x3a4e, 0xcc33, 0xe0f0, 0xca1b, 0x2bff, 0x9a1f, 0x1, 0x0);
        gbc.writeMem(0x3a4e, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0xcc33);
        EXPECT(gbc.pc(), 0x3a50);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FA 01B7
        gbc.setState(0x516c, 0xc0ec, 0xc890, 0x8d8f, 0x791e, 0x6134, 0x0, 0x1);
        gbc.writeMem(0x516c, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xc0ec);
        EXPECT(gbc.pc(), 0x516e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FA 01B8
        gbc.setState(0xa4ba, 0x5dba, 0xd280, 0x5f3e, 0x2f3f, 0x11e6, 0x0, 0x0);
        gbc.writeMem(0xa4ba, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x5dba);
        EXPECT(gbc.pc(), 0xa4bc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa4ba), 0xcb);
        EXPECT(gbc.readMem(0xa4bb), 0xfa);
        // CB FA 01BA
        gbc.setState(0xc505, 0xe306, 0x5500, 0xd912, 0x70d8, 0xb8a0, 0x0, 0x1);
        gbc.writeMem(0xc505, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xe306);
        EXPECT(gbc.pc(), 0xc507);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc505), 0xcb);
        EXPECT(gbc.readMem(0xc506), 0xfa);
        // CB FA 01BB
        gbc.setState(0x1a0c, 0xd1b9, 0xad10, 0xad2b, 0x3f4c, 0x3d22, 0x1, 0x0);
        gbc.writeMem(0x1a0c, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0xd1b9);
        EXPECT(gbc.pc(), 0x1a0e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FA 01BC
        gbc.setState(0x41c6, 0x6739, 0xedc0, 0x2778, 0xd2cc, 0x7ebe, 0x0, 0x1);
        gbc.writeMem(0x41c6, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x6739);
        EXPECT(gbc.pc(), 0x41c8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FA 01BD
        gbc.setState(0x2c7d, 0xd563, 0xcb50, 0x401d, 0xa882, 0x6a50, 0x1, 0x0);
        gbc.writeMem(0x2c7d, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0xd563);
        EXPECT(gbc.pc(), 0x2c7f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FA 01BF
        gbc.setState(0x16c6, 0x6897, 0x75f0, 0x94c8, 0x2127, 0xdc84, 0x1, 0x1);
        gbc.writeMem(0x16c6, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x6897);
        EXPECT(gbc.pc(), 0x16c8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FA 01C0
        gbc.setState(0x1da0, 0xb8e3, 0x9f60, 0xc809, 0x7a77, 0x6d6, 0x0, 0x0);
        gbc.writeMem(0x1da0, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0xb8e3);
        EXPECT(gbc.pc(), 0x1da2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FA 01C1
        gbc.setState(0xf7a, 0x3c6f, 0x9e40, 0x664b, 0x7389, 0x540a, 0x1, 0x0);
        gbc.writeMem(0xf7a, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x3c6f);
        EXPECT(gbc.pc(), 0xf7c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FA 01C2
        gbc.setState(0xa190, 0xb39d, 0x4b40, 0xb3d7, 0x8f22, 0xe0ff, 0x0, 0x1);
        gbc.writeMem(0xa190, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0xb39d);
        EXPECT(gbc.pc(), 0xa192);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa190), 0xcb);
        EXPECT(gbc.readMem(0xa191), 0xfa);
        // CB FA 01C3
        gbc.setState(0x944e, 0xdc8f, 0x8ce0, 0x2780, 0x549b, 0x84a7, 0x0, 0x0);
        gbc.writeMem(0x944e, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xdc8f);
        EXPECT(gbc.pc(), 0x9450);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x944e), 0xcb);
        EXPECT(gbc.readMem(0x944f), 0xfa);
        // CB FA 01C5
        gbc.setState(0x2c43, 0x950f, 0x40a0, 0xc4a, 0x735b, 0x9443, 0x1, 0x0);
        gbc.writeMem(0x2c43, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x950f);
        EXPECT(gbc.pc(), 0x2c45);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FA 01C6
        gbc.setState(0x6c6e, 0x5329, 0x5f20, 0x1fbc, 0x7815, 0xf1ad, 0x0, 0x1);
        gbc.writeMem(0x6c6e, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x5329);
        EXPECT(gbc.pc(), 0x6c70);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FA 01C7
        gbc.setState(0x722e, 0xbb63, 0xdc90, 0xf317, 0x1167, 0xe526, 0x0, 0x1);
        gbc.writeMem(0x722e, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0xbb63);
        EXPECT(gbc.pc(), 0x7230);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FA 01C8
        gbc.setState(0xe961, 0x21fc, 0x41e0, 0x45e, 0xc1f3, 0x5bb9, 0x0, 0x0);
        gbc.writeMem(0xe961, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x21fc);
        EXPECT(gbc.pc(), 0xe963);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe961), 0xcb);
        EXPECT(gbc.readMem(0xe962), 0xfa);
        // CB FA 01C9
        gbc.setState(0xca99, 0x6c21, 0xf580, 0x93a5, 0x6679, 0x9a7f, 0x1, 0x0);
        gbc.writeMem(0xca99, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x6c21);
        EXPECT(gbc.pc(), 0xca9b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xca99), 0xcb);
        EXPECT(gbc.readMem(0xca9a), 0xfa);
        // CB FA 01CA
        gbc.setState(0xab99, 0x1ba2, 0x820, 0x59f5, 0x8794, 0x3943, 0x1, 0x0);
        gbc.writeMem(0xab99, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x1ba2);
        EXPECT(gbc.pc(), 0xab9b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xab99), 0xcb);
        EXPECT(gbc.readMem(0xab9a), 0xfa);
        // CB FA 01CB
        gbc.setState(0xebf3, 0x6718, 0xdca0, 0xdd02, 0x8bb0, 0x3ee3, 0x1, 0x0);
        gbc.writeMem(0xebf3, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x6718);
        EXPECT(gbc.pc(), 0xebf5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xebf3), 0xcb);
        EXPECT(gbc.readMem(0xebf4), 0xfa);
        // CB FA 01CC
        gbc.setState(0xdc71, 0xca1b, 0xed0, 0x3d59, 0xab11, 0x4d0d, 0x1, 0x0);
        gbc.writeMem(0xdc71, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0xca1b);
        EXPECT(gbc.pc(), 0xdc73);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdc71), 0xcb);
        EXPECT(gbc.readMem(0xdc72), 0xfa);
        // CB FA 01CD
        gbc.setState(0x1e3a, 0xe08a, 0xc300, 0xa110, 0xc20, 0xe9f, 0x0, 0x0);
        gbc.writeMem(0x1e3a, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0xe08a);
        EXPECT(gbc.pc(), 0x1e3c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FA 01CE
        gbc.setState(0x86b, 0x5b5e, 0xdde0, 0x9fd8, 0x65af, 0x6702, 0x1, 0x1);
        gbc.writeMem(0x86b, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x5b5e);
        EXPECT(gbc.pc(), 0x86d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FA 01CF
        gbc.setState(0x5c8c, 0x8ce9, 0xfd60, 0x78b0, 0xf224, 0x2ca3, 0x1, 0x0);
        gbc.writeMem(0x5c8c, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x8ce9);
        EXPECT(gbc.pc(), 0x5c8e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FA 01D0
        gbc.setState(0xbad0, 0x1739, 0x2270, 0x2c81, 0x549f, 0x618d, 0x0, 0x1);
        gbc.writeMem(0xbad0, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x1739);
        EXPECT(gbc.pc(), 0xbad2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbad0), 0xcb);
        EXPECT(gbc.readMem(0xbad1), 0xfa);
        // CB FA 01D1
        gbc.setState(0xcd3f, 0x999d, 0x2b40, 0x98e6, 0x55a9, 0x24a8, 0x1, 0x1);
        gbc.writeMem(0xcd3f, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x999d);
        EXPECT(gbc.pc(), 0xcd41);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcd3f), 0xcb);
        EXPECT(gbc.readMem(0xcd40), 0xfa);
        // CB FA 01D2
        gbc.setState(0x592, 0xc8bc, 0xbc60, 0xacb0, 0xedd8, 0x68b2, 0x0, 0x1);
        gbc.writeMem(0x592, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0xc8bc);
        EXPECT(gbc.pc(), 0x594);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FA 01D3
        gbc.setState(0xa87e, 0xde92, 0xc8e0, 0x56f2, 0x8443, 0x9484, 0x1, 0x1);
        gbc.writeMem(0xa87e, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0xde92);
        EXPECT(gbc.pc(), 0xa880);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa87e), 0xcb);
        EXPECT(gbc.readMem(0xa87f), 0xfa);
        // CB FA 01D4
        gbc.setState(0x511b, 0xa66e, 0xe260, 0x33cb, 0x8e17, 0xe7f0, 0x0, 0x1);
        gbc.writeMem(0x511b, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0xa66e);
        EXPECT(gbc.pc(), 0x511d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FA 01D5
        gbc.setState(0x5aff, 0xa3b2, 0xa780, 0x84f, 0x6178, 0x59b1, 0x0, 0x0);
        gbc.writeMem(0x5aff, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0xa3b2);
        EXPECT(gbc.pc(), 0x5b01);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FA 01D6
        gbc.setState(0x39fd, 0x22e9, 0x9a00, 0x4b2a, 0x61d, 0x91e2, 0x1, 0x1);
        gbc.writeMem(0x39fd, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x22e9);
        EXPECT(gbc.pc(), 0x39ff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FA 01D8
        gbc.setState(0xb5d9, 0x1314, 0x7670, 0x67f4, 0xb944, 0xdb0e, 0x1, 0x1);
        gbc.writeMem(0xb5d9, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x1314);
        EXPECT(gbc.pc(), 0xb5db);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb5d9), 0xcb);
        EXPECT(gbc.readMem(0xb5da), 0xfa);
        // CB FA 01D9
        gbc.setState(0xb287, 0x8fbb, 0xbfb0, 0xe321, 0x59db, 0x300, 0x0, 0x1);
        gbc.writeMem(0xb287, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x8fbb);
        EXPECT(gbc.pc(), 0xb289);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb287), 0xcb);
        EXPECT(gbc.readMem(0xb288), 0xfa);
        // CB FA 01DB
        gbc.setState(0x6fac, 0x70be, 0x3b80, 0xd84b, 0x4d9a, 0x7857, 0x0, 0x0);
        gbc.writeMem(0x6fac, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x70be);
        EXPECT(gbc.pc(), 0x6fae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FA 01DC
        gbc.setState(0x592c, 0x890c, 0x1270, 0xc1df, 0xeffe, 0x24d9, 0x0, 0x0);
        gbc.writeMem(0x592c, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x890c);
        EXPECT(gbc.pc(), 0x592e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FA 01DD
        gbc.setState(0x2e89, 0x825, 0xb8e0, 0x1a1c, 0xee11, 0xa106, 0x1, 0x0);
        gbc.writeMem(0x2e89, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x825);
        EXPECT(gbc.pc(), 0x2e8b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FA 01DE
        gbc.setState(0xe427, 0xb344, 0xee50, 0xc9d9, 0xd041, 0x36ed, 0x0, 0x1);
        gbc.writeMem(0xe427, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0xb344);
        EXPECT(gbc.pc(), 0xe429);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe427), 0xcb);
        EXPECT(gbc.readMem(0xe428), 0xfa);
        // CB FA 01DF
        gbc.setState(0x6648, 0xbc40, 0x6540, 0x2fd8, 0x4010, 0x98ad, 0x1, 0x1);
        gbc.writeMem(0x6648, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0xbc40);
        EXPECT(gbc.pc(), 0x664a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FA 01E0
        gbc.setState(0x649f, 0xca5c, 0x71c0, 0x924b, 0xdc, 0xa7bb, 0x1, 0x1);
        gbc.writeMem(0x649f, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0xca5c);
        EXPECT(gbc.pc(), 0x64a1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FA 01E1
        gbc.setState(0xca4, 0x7ecd, 0x6f70, 0x6446, 0x34f4, 0x2620, 0x0, 0x1);
        gbc.writeMem(0xca4, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x7ecd);
        EXPECT(gbc.pc(), 0xca6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FA 01E2
        gbc.setState(0x53e5, 0x28f0, 0xa570, 0xc398, 0x6b74, 0x7f39, 0x1, 0x0);
        gbc.writeMem(0x53e5, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x28f0);
        EXPECT(gbc.pc(), 0x53e7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FA 01E3
        gbc.setState(0xe6, 0x50b5, 0xa2d0, 0x46ba, 0xd9fb, 0x54c4, 0x1, 0x1);
        gbc.writeMem(0xe6, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x50b5);
        EXPECT(gbc.pc(), 0xe8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FA 01E4
        gbc.setState(0x8a3b, 0xd862, 0xe270, 0x1945, 0x4dd7, 0xe83, 0x0, 0x0);
        gbc.writeMem(0x8a3b, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0xd862);
        EXPECT(gbc.pc(), 0x8a3d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8a3b), 0xcb);
        EXPECT(gbc.readMem(0x8a3c), 0xfa);
        // CB FA 01E5
        gbc.setState(0x20f7, 0xb4e1, 0xc6b0, 0x44fa, 0xf0c7, 0xa919, 0x1, 0x0);
        gbc.writeMem(0x20f7, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0xb4e1);
        EXPECT(gbc.pc(), 0x20f9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FA 01E6
        gbc.setState(0x5f84, 0x5b1c, 0x4130, 0xf726, 0xd0ff, 0xeb1a, 0x1, 0x0);
        gbc.writeMem(0x5f84, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x5b1c);
        EXPECT(gbc.pc(), 0x5f86);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FA 01E7
        gbc.setState(0x53ba, 0xa7d9, 0x3ce0, 0xd532, 0x291a, 0x5948, 0x1, 0x1);
        gbc.writeMem(0x53ba, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0xa7d9);
        EXPECT(gbc.pc(), 0x53bc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FA 01E8
        gbc.setState(0xa65c, 0x6724, 0xf040, 0x7f8c, 0x3d4b, 0x99f6, 0x1, 0x0);
        gbc.writeMem(0xa65c, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x6724);
        EXPECT(gbc.pc(), 0xa65e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa65c), 0xcb);
        EXPECT(gbc.readMem(0xa65d), 0xfa);
        // CB FA 01E9
        gbc.setState(0x6b22, 0xdd70, 0xd400, 0x587c, 0x459f, 0x901c, 0x0, 0x0);
        gbc.writeMem(0x6b22, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0xdd70);
        EXPECT(gbc.pc(), 0x6b24);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FA 01EA
        gbc.setState(0x9f2c, 0x9c82, 0xb270, 0x746e, 0x1311, 0x2b58, 0x1, 0x0);
        gbc.writeMem(0x9f2c, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x9c82);
        EXPECT(gbc.pc(), 0x9f2e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9f2c), 0xcb);
        EXPECT(gbc.readMem(0x9f2d), 0xfa);
        // CB FA 01EB
        gbc.setState(0x5188, 0x8628, 0x9c0, 0xb2fd, 0x8430, 0x3b52, 0x0, 0x1);
        gbc.writeMem(0x5188, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x8628);
        EXPECT(gbc.pc(), 0x518a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FA 01ED
        gbc.setState(0xc14f, 0xf92d, 0x9320, 0xffcc, 0xdae4, 0x112e, 0x1, 0x1);
        gbc.writeMem(0xc14f, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xf92d);
        EXPECT(gbc.pc(), 0xc151);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc14f), 0xcb);
        EXPECT(gbc.readMem(0xc150), 0xfa);
        // CB FA 01EE
        gbc.setState(0xd1ec, 0x449d, 0x6530, 0xf815, 0x54d, 0x480d, 0x1, 0x1);
        gbc.writeMem(0xd1ec, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x449d);
        EXPECT(gbc.pc(), 0xd1ee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd1ec), 0xcb);
        EXPECT(gbc.readMem(0xd1ed), 0xfa);
        // CB FA 01EF
        gbc.setState(0x4a4d, 0xce30, 0x940, 0x8ff6, 0x43dc, 0x3290, 0x1, 0x0);
        gbc.writeMem(0x4a4d, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0xce30);
        EXPECT(gbc.pc(), 0x4a4f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FA 01F0
        gbc.setState(0x6c91, 0x1780, 0xe0f0, 0x3cc0, 0x86c0, 0x6384, 0x1, 0x1);
        gbc.writeMem(0x6c91, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x1780);
        EXPECT(gbc.pc(), 0x6c93);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FA 01F1
        gbc.setState(0x1096, 0xbcf7, 0xbea0, 0x686c, 0x1625, 0x34b9, 0x1, 0x0);
        gbc.writeMem(0x1096, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0xbcf7);
        EXPECT(gbc.pc(), 0x1098);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FA 01F2
        gbc.setState(0xeeaf, 0x4413, 0xd690, 0xe510, 0xed66, 0xb1b0, 0x1, 0x1);
        gbc.writeMem(0xeeaf, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x4413);
        EXPECT(gbc.pc(), 0xeeb1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeeaf), 0xcb);
        EXPECT(gbc.readMem(0xeeb0), 0xfa);
        // CB FA 01F3
        gbc.setState(0xe174, 0x9e27, 0xbcc0, 0x4534, 0xf1d7, 0x3ea5, 0x0, 0x0);
        gbc.writeMem(0xe174, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x9e27);
        EXPECT(gbc.pc(), 0xe176);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe174), 0xcb);
        EXPECT(gbc.readMem(0xe175), 0xfa);
        // CB FA 01F4
        gbc.setState(0xe5a2, 0x1afb, 0xdf20, 0xf7f3, 0x9404, 0xd9b3, 0x1, 0x0);
        gbc.writeMem(0xe5a2, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x1afb);
        EXPECT(gbc.pc(), 0xe5a4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe5a2), 0xcb);
        EXPECT(gbc.readMem(0xe5a3), 0xfa);
        // CB FA 01F5
        gbc.setState(0x181f, 0xe49d, 0x7570, 0xe5, 0x6e68, 0xcf4b, 0x1, 0x0);
        gbc.writeMem(0x181f, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0xe49d);
        EXPECT(gbc.pc(), 0x1821);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FA 01F6
        gbc.setState(0x4c87, 0x8c96, 0x4ac0, 0x68a, 0x69db, 0x4cfc, 0x1, 0x0);
        gbc.writeMem(0x4c87, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x8c96);
        EXPECT(gbc.pc(), 0x4c89);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FA 01F7
        gbc.setState(0x4982, 0xece1, 0xe1a0, 0xf454, 0xdee9, 0x46f8, 0x1, 0x0);
        gbc.writeMem(0x4982, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0xece1);
        EXPECT(gbc.pc(), 0x4984);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FA 01F8
        gbc.setState(0x294f, 0xf6b4, 0xc620, 0xc183, 0x57cd, 0xd68c, 0x0, 0x0);
        gbc.writeMem(0x294f, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0xf6b4);
        EXPECT(gbc.pc(), 0x2951);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FA 01F9
        gbc.setState(0xcb4c, 0xe2c6, 0x4fd0, 0xb07b, 0x8d55, 0x4961, 0x0, 0x0);
        gbc.writeMem(0xcb4c, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0xe2c6);
        EXPECT(gbc.pc(), 0xcb4e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcb4c), 0xcb);
        EXPECT(gbc.readMem(0xcb4d), 0xfa);
        // CB FA 01FA
        gbc.setState(0x64d9, 0x6c5, 0x8f50, 0xfa02, 0x46f4, 0x7201, 0x1, 0x0);
        gbc.writeMem(0x64d9, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x6c5);
        EXPECT(gbc.pc(), 0x64db);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FA 01FB
        gbc.setState(0x3aed, 0x3587, 0x97a0, 0x7ed7, 0xe418, 0x84c3, 0x1, 0x0);
        gbc.writeMem(0x3aed, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x3587);
        EXPECT(gbc.pc(), 0x3aef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FA 01FC
        gbc.setState(0xe807, 0xb811, 0x89e0, 0x31a2, 0xa6c8, 0x702d, 0x0, 0x0);
        gbc.writeMem(0xe807, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0xb811);
        EXPECT(gbc.pc(), 0xe809);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe807), 0xcb);
        EXPECT(gbc.readMem(0xe808), 0xfa);
        // CB FA 01FD
        gbc.setState(0xd235, 0x4f29, 0x2c00, 0x1e8, 0x6396, 0x52cd, 0x1, 0x0);
        gbc.writeMem(0xd235, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x4f29);
        EXPECT(gbc.pc(), 0xd237);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd235), 0xcb);
        EXPECT(gbc.readMem(0xd236), 0xfa);
        // CB FA 01FE
        gbc.setState(0x540d, 0x10b8, 0x2180, 0x7ce6, 0x6e03, 0xe5e0, 0x0, 0x1);
        gbc.writeMem(0x540d, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x10b8);
        EXPECT(gbc.pc(), 0x540f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FA 01FF
        gbc.setState(0x4cff, 0xd454, 0x4d80, 0x4880, 0x1765, 0x9fea, 0x0, 0x0);
        gbc.writeMem(0x4cff, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0xd454);
        EXPECT(gbc.pc(), 0x4d01);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FA 0200
        gbc.setState(0x811d, 0x8473, 0xa2d0, 0x5d5c, 0xf338, 0xe398, 0x1, 0x0);
        gbc.writeMem(0x811d, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x8473);
        EXPECT(gbc.pc(), 0x811f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x811d), 0xcb);
        EXPECT(gbc.readMem(0x811e), 0xfa);
        // CB FA 0201
        gbc.setState(0x7e, 0xfb72, 0x7930, 0xac80, 0x5e2b, 0x13d7, 0x1, 0x1);
        gbc.writeMem(0x7e, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0xfb72);
        EXPECT(gbc.pc(), 0x80);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FA 0202
        gbc.setState(0x925a, 0x2af, 0xb090, 0xd7f9, 0x5060, 0x529b, 0x1, 0x0);
        gbc.writeMem(0x925a, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x2af);
        EXPECT(gbc.pc(), 0x925c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x925a), 0xcb);
        EXPECT(gbc.readMem(0x925b), 0xfa);
        // CB FA 0203
        gbc.setState(0x8be0, 0x59e2, 0xfad0, 0x15ef, 0xbe2, 0x96ad, 0x1, 0x1);
        gbc.writeMem(0x8be0, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x59e2);
        EXPECT(gbc.pc(), 0x8be2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8be0), 0xcb);
        EXPECT(gbc.readMem(0x8be1), 0xfa);
        // CB FA 0204
        gbc.setState(0x939, 0xddc, 0x4520, 0x2788, 0xb47f, 0xe828, 0x0, 0x0);
        gbc.writeMem(0x939, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xddc);
        EXPECT(gbc.pc(), 0x93b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FA 0205
        gbc.setState(0xc04a, 0x6c7, 0x56c0, 0xeeb9, 0xa56a, 0xa0ba, 0x1, 0x0);
        gbc.writeMem(0xc04a, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x6c7);
        EXPECT(gbc.pc(), 0xc04c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc04a), 0xcb);
        EXPECT(gbc.readMem(0xc04b), 0xfa);
        // CB FA 0206
        gbc.setState(0x8249, 0xd814, 0xb4f0, 0xae1e, 0x7f77, 0x3f6e, 0x0, 0x0);
        gbc.writeMem(0x8249, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xd814);
        EXPECT(gbc.pc(), 0x824b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8249), 0xcb);
        EXPECT(gbc.readMem(0x824a), 0xfa);
        // CB FA 0207
        gbc.setState(0xb45e, 0xea42, 0xa340, 0x7bf5, 0xff92, 0xcb67, 0x1, 0x0);
        gbc.writeMem(0xb45e, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0xea42);
        EXPECT(gbc.pc(), 0xb460);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb45e), 0xcb);
        EXPECT(gbc.readMem(0xb45f), 0xfa);
        // CB FA 0208
        gbc.setState(0x4c51, 0x1afa, 0x9ef0, 0x2c3f, 0xe451, 0x42b6, 0x1, 0x0);
        gbc.writeMem(0x4c51, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x1afa);
        EXPECT(gbc.pc(), 0x4c53);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FA 0209
        gbc.setState(0xa763, 0x3662, 0x7820, 0x4682, 0x2a6f, 0x1b3e, 0x1, 0x0);
        gbc.writeMem(0xa763, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x3662);
        EXPECT(gbc.pc(), 0xa765);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa763), 0xcb);
        EXPECT(gbc.readMem(0xa764), 0xfa);
        // CB FA 020A
        gbc.setState(0xcfe3, 0x3ee0, 0x3c00, 0xe130, 0x3d96, 0xd901, 0x1, 0x0);
        gbc.writeMem(0xcfe3, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x3ee0);
        EXPECT(gbc.pc(), 0xcfe5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcfe3), 0xcb);
        EXPECT(gbc.readMem(0xcfe4), 0xfa);
        // CB FA 020B
        gbc.setState(0x5e24, 0x976f, 0x42c0, 0x5e23, 0x7685, 0xf810, 0x0, 0x1);
        gbc.writeMem(0x5e24, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x976f);
        EXPECT(gbc.pc(), 0x5e26);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FA 020C
        gbc.setState(0x5655, 0x850c, 0xf3d0, 0x7285, 0x4d89, 0x8c8c, 0x1, 0x0);
        gbc.writeMem(0x5655, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x850c);
        EXPECT(gbc.pc(), 0x5657);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FA 020D
        gbc.setState(0x90c0, 0x8489, 0x6ec0, 0xb7eb, 0xc0b4, 0x54d8, 0x0, 0x1);
        gbc.writeMem(0x90c0, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x8489);
        EXPECT(gbc.pc(), 0x90c2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x90c0), 0xcb);
        EXPECT(gbc.readMem(0x90c1), 0xfa);
        // CB FA 020E
        gbc.setState(0xf45, 0x21af, 0x9380, 0x1a01, 0x857b, 0x74a6, 0x0, 0x1);
        gbc.writeMem(0xf45, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x21af);
        EXPECT(gbc.pc(), 0xf47);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FA 020F
        gbc.setState(0xda8c, 0x7d54, 0x5440, 0x24c9, 0x54b9, 0xe7f3, 0x1, 0x0);
        gbc.writeMem(0xda8c, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x7d54);
        EXPECT(gbc.pc(), 0xda8e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xda8c), 0xcb);
        EXPECT(gbc.readMem(0xda8d), 0xfa);
        // CB FA 0210
        gbc.setState(0xb511, 0x378a, 0x7f60, 0x8879, 0xc7a8, 0xa3e6, 0x0, 0x1);
        gbc.writeMem(0xb511, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x378a);
        EXPECT(gbc.pc(), 0xb513);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb511), 0xcb);
        EXPECT(gbc.readMem(0xb512), 0xfa);
        // CB FA 0211
        gbc.setState(0x8051, 0x96c9, 0x7e40, 0xea9b, 0x6fbe, 0xc1d1, 0x1, 0x1);
        gbc.writeMem(0x8051, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x96c9);
        EXPECT(gbc.pc(), 0x8053);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8051), 0xcb);
        EXPECT(gbc.readMem(0x8052), 0xfa);
        // CB FA 0212
        gbc.setState(0x25d7, 0x2929, 0x7500, 0xf024, 0xf8e0, 0x3048, 0x1, 0x0);
        gbc.writeMem(0x25d7, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x2929);
        EXPECT(gbc.pc(), 0x25d9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FA 0213
        gbc.setState(0xac76, 0xcb05, 0x5de0, 0x503c, 0x7500, 0x8dd2, 0x0, 0x0);
        gbc.writeMem(0xac76, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0xcb05);
        EXPECT(gbc.pc(), 0xac78);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xac76), 0xcb);
        EXPECT(gbc.readMem(0xac77), 0xfa);
        // CB FA 0214
        gbc.setState(0x8b4f, 0xa9cb, 0x7260, 0x3392, 0x8a4a, 0xbf2f, 0x1, 0x1);
        gbc.writeMem(0x8b4f, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xa9cb);
        EXPECT(gbc.pc(), 0x8b51);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8b4f), 0xcb);
        EXPECT(gbc.readMem(0x8b50), 0xfa);
        // CB FA 0215
        gbc.setState(0x11f2, 0xcdfc, 0xfb30, 0x8d90, 0x6566, 0x5cce, 0x0, 0x0);
        gbc.writeMem(0x11f2, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0xcdfc);
        EXPECT(gbc.pc(), 0x11f4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FA 0216
        gbc.setState(0x2ae, 0xeae7, 0xa5a0, 0xfa66, 0xdbc4, 0x7f86, 0x1, 0x1);
        gbc.writeMem(0x2ae, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0xeae7);
        EXPECT(gbc.pc(), 0x2b0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FA 0217
        gbc.setState(0x4f60, 0x3a65, 0x53c0, 0x85f5, 0xd079, 0xbcf8, 0x0, 0x0);
        gbc.writeMem(0x4f60, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x3a65);
        EXPECT(gbc.pc(), 0x4f62);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FA 0219
        gbc.setState(0x3d40, 0x4776, 0xfc00, 0xe32a, 0x2d77, 0x9854, 0x0, 0x0);
        gbc.writeMem(0x3d40, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x4776);
        EXPECT(gbc.pc(), 0x3d42);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FA 021A
        gbc.setState(0x9b5f, 0x2c9d, 0x4c10, 0xf313, 0x9041, 0xae03, 0x0, 0x0);
        gbc.writeMem(0x9b5f, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x2c9d);
        EXPECT(gbc.pc(), 0x9b61);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9b5f), 0xcb);
        EXPECT(gbc.readMem(0x9b60), 0xfa);
        // CB FA 021B
        gbc.setState(0x81b0, 0x161c, 0x4720, 0xeb97, 0xd866, 0xf320, 0x1, 0x1);
        gbc.writeMem(0x81b0, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x161c);
        EXPECT(gbc.pc(), 0x81b2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x81b0), 0xcb);
        EXPECT(gbc.readMem(0x81b1), 0xfa);
        // CB FA 021C
        gbc.setState(0xd11f, 0x5659, 0xccb0, 0xf2b4, 0xa064, 0x7363, 0x0, 0x0);
        gbc.writeMem(0xd11f, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x5659);
        EXPECT(gbc.pc(), 0xd121);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd11f), 0xcb);
        EXPECT(gbc.readMem(0xd120), 0xfa);
        // CB FA 021D
        gbc.setState(0x8dc2, 0x1aa, 0xa900, 0x514c, 0x572a, 0x9f8f, 0x0, 0x0);
        gbc.writeMem(0x8dc2, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x1aa);
        EXPECT(gbc.pc(), 0x8dc4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8dc2), 0xcb);
        EXPECT(gbc.readMem(0x8dc3), 0xfa);
        // CB FA 021E
        gbc.setState(0xb6e6, 0xd5c6, 0xaee0, 0xf201, 0x5668, 0xc566, 0x1, 0x0);
        gbc.writeMem(0xb6e6, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0xd5c6);
        EXPECT(gbc.pc(), 0xb6e8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb6e6), 0xcb);
        EXPECT(gbc.readMem(0xb6e7), 0xfa);
        // CB FA 021F
        gbc.setState(0x1807, 0x8256, 0x8da0, 0xbfe2, 0x1bad, 0x8952, 0x0, 0x1);
        gbc.writeMem(0x1807, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x8256);
        EXPECT(gbc.pc(), 0x1809);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FA 0220
        gbc.setState(0x795e, 0xc97, 0x4ce0, 0x13c5, 0x55ad, 0x67e, 0x1, 0x1);
        gbc.writeMem(0x795e, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0xc97);
        EXPECT(gbc.pc(), 0x7960);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FA 0221
        gbc.setState(0xd462, 0xf6a, 0x9410, 0x7332, 0xc62c, 0x7b, 0x0, 0x1);
        gbc.writeMem(0xd462, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0xf6a);
        EXPECT(gbc.pc(), 0xd464);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd462), 0xcb);
        EXPECT(gbc.readMem(0xd463), 0xfa);
        // CB FA 0222
        gbc.setState(0x93d5, 0xfa78, 0x1cc0, 0xa6cc, 0xe5fd, 0x7ad3, 0x0, 0x0);
        gbc.writeMem(0x93d5, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0xfa78);
        EXPECT(gbc.pc(), 0x93d7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x93d5), 0xcb);
        EXPECT(gbc.readMem(0x93d6), 0xfa);
        // CB FA 0223
        gbc.setState(0x118c, 0x57dd, 0xadf0, 0xc225, 0x84eb, 0x84d2, 0x1, 0x1);
        gbc.writeMem(0x118c, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x57dd);
        EXPECT(gbc.pc(), 0x118e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FA 0224
        gbc.setState(0xe73, 0x6d6, 0xde40, 0x388d, 0x3970, 0x3d14, 0x0, 0x1);
        gbc.writeMem(0xe73, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x6d6);
        EXPECT(gbc.pc(), 0xe75);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FA 0225
        gbc.setState(0x71d7, 0xab6e, 0xc790, 0x7066, 0x93eb, 0xb155, 0x1, 0x0);
        gbc.writeMem(0x71d7, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0xab6e);
        EXPECT(gbc.pc(), 0x71d9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FA 0226
        gbc.setState(0xa758, 0x4a88, 0xea20, 0x4227, 0x1576, 0xae8f, 0x1, 0x0);
        gbc.writeMem(0xa758, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x4a88);
        EXPECT(gbc.pc(), 0xa75a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa758), 0xcb);
        EXPECT(gbc.readMem(0xa759), 0xfa);
        // CB FA 0227
        gbc.setState(0x6418, 0xba2b, 0x5510, 0xba1c, 0xedc6, 0xcf95, 0x1, 0x1);
        gbc.writeMem(0x6418, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0xba2b);
        EXPECT(gbc.pc(), 0x641a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FA 0228
        gbc.setState(0xcb70, 0x7271, 0x7da0, 0x1561, 0x25dd, 0x2853, 0x0, 0x0);
        gbc.writeMem(0xcb70, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x7271);
        EXPECT(gbc.pc(), 0xcb72);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcb70), 0xcb);
        EXPECT(gbc.readMem(0xcb71), 0xfa);
        // CB FA 0229
        gbc.setState(0xae5f, 0xef89, 0x770, 0x1661, 0x5e4a, 0xc956, 0x0, 0x1);
        gbc.writeMem(0xae5f, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0xef89);
        EXPECT(gbc.pc(), 0xae61);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xae5f), 0xcb);
        EXPECT(gbc.readMem(0xae60), 0xfa);
        // CB FA 022A
        gbc.setState(0x4d1c, 0x9833, 0x80f0, 0xa7d7, 0x1b, 0xa1e, 0x0, 0x1);
        gbc.writeMem(0x4d1c, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x9833);
        EXPECT(gbc.pc(), 0x4d1e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FA 022B
        gbc.setState(0xec53, 0x5a6a, 0x6e00, 0x2969, 0x386c, 0x2939, 0x0, 0x1);
        gbc.writeMem(0xec53, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x5a6a);
        EXPECT(gbc.pc(), 0xec55);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xec53), 0xcb);
        EXPECT(gbc.readMem(0xec54), 0xfa);
        // CB FA 022C
        gbc.setState(0x904c, 0x4264, 0x8420, 0xbe5d, 0xcc3c, 0xd67f, 0x1, 0x0);
        gbc.writeMem(0x904c, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x4264);
        EXPECT(gbc.pc(), 0x904e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x904c), 0xcb);
        EXPECT(gbc.readMem(0x904d), 0xfa);
        // CB FA 022D
        gbc.setState(0x649a, 0xde03, 0x2cc0, 0x72cd, 0x9446, 0xcd5d, 0x1, 0x0);
        gbc.writeMem(0x649a, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xde03);
        EXPECT(gbc.pc(), 0x649c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FA 022E
        gbc.setState(0x1e80, 0xbcaf, 0x3150, 0x564, 0x8433, 0x2394, 0x1, 0x1);
        gbc.writeMem(0x1e80, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xbcaf);
        EXPECT(gbc.pc(), 0x1e82);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FA 022F
        gbc.setState(0x652d, 0xdf7d, 0x3190, 0x928a, 0x9902, 0x696, 0x1, 0x0);
        gbc.writeMem(0x652d, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0xdf7d);
        EXPECT(gbc.pc(), 0x652f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FA 0230
        gbc.setState(0x7ea1, 0x5104, 0xb640, 0x5ca7, 0xf8a, 0x332f, 0x0, 0x0);
        gbc.writeMem(0x7ea1, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x5104);
        EXPECT(gbc.pc(), 0x7ea3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FA 0231
        gbc.setState(0x2f0a, 0x373a, 0x1230, 0xb75e, 0xd677, 0xb009, 0x0, 0x1);
        gbc.writeMem(0x2f0a, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x373a);
        EXPECT(gbc.pc(), 0x2f0c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FA 0232
        gbc.setState(0x9723, 0x9f33, 0xcdf0, 0xc94, 0x9573, 0x6ebf, 0x0, 0x1);
        gbc.writeMem(0x9723, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x9f33);
        EXPECT(gbc.pc(), 0x9725);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9723), 0xcb);
        EXPECT(gbc.readMem(0x9724), 0xfa);
        // CB FA 0233
        gbc.setState(0x9d7e, 0x6955, 0xa660, 0x5252, 0x84ef, 0xd6c9, 0x1, 0x1);
        gbc.writeMem(0x9d7e, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x6955);
        EXPECT(gbc.pc(), 0x9d80);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9d7e), 0xcb);
        EXPECT(gbc.readMem(0x9d7f), 0xfa);
        // CB FA 0234
        gbc.setState(0xc202, 0xa7bb, 0x4110, 0xcad7, 0x3232, 0x1af8, 0x1, 0x1);
        gbc.writeMem(0xc202, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0xa7bb);
        EXPECT(gbc.pc(), 0xc204);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc202), 0xcb);
        EXPECT(gbc.readMem(0xc203), 0xfa);
        // CB FA 0236
        gbc.setState(0x4be7, 0x759f, 0x1ef0, 0xb74a, 0x102a, 0xa1ba, 0x0, 0x1);
        gbc.writeMem(0x4be7, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x759f);
        EXPECT(gbc.pc(), 0x4be9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FA 0237
        gbc.setState(0xbb52, 0x6c52, 0x3960, 0x543b, 0x655f, 0x294, 0x1, 0x0);
        gbc.writeMem(0xbb52, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x6c52);
        EXPECT(gbc.pc(), 0xbb54);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbb52), 0xcb);
        EXPECT(gbc.readMem(0xbb53), 0xfa);
        // CB FA 0238
        gbc.setState(0x6f0e, 0xb6e5, 0x3ad0, 0x1459, 0xe9d, 0x56d3, 0x0, 0x1);
        gbc.writeMem(0x6f0e, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0xb6e5);
        EXPECT(gbc.pc(), 0x6f10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FA 0239
        gbc.setState(0x1b0b, 0x2863, 0xd710, 0x42a, 0x1dfc, 0xdd2, 0x1, 0x1);
        gbc.writeMem(0x1b0b, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x2863);
        EXPECT(gbc.pc(), 0x1b0d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FA 023A
        gbc.setState(0xa317, 0x94c3, 0x4580, 0x2fb4, 0x961c, 0x76ba, 0x1, 0x1);
        gbc.writeMem(0xa317, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x94c3);
        EXPECT(gbc.pc(), 0xa319);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa317), 0xcb);
        EXPECT(gbc.readMem(0xa318), 0xfa);
        // CB FA 023B
        gbc.setState(0x7a51, 0x8cae, 0xcdc0, 0x663, 0xa66d, 0x155b, 0x0, 0x0);
        gbc.writeMem(0x7a51, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x8cae);
        EXPECT(gbc.pc(), 0x7a53);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FA 023C
        gbc.setState(0xae41, 0x7ba1, 0xc0d0, 0xafaf, 0x1ef, 0xfec6, 0x1, 0x1);
        gbc.writeMem(0xae41, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x7ba1);
        EXPECT(gbc.pc(), 0xae43);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xae41), 0xcb);
        EXPECT(gbc.readMem(0xae42), 0xfa);
        // CB FA 023D
        gbc.setState(0xdc26, 0xba5c, 0x6900, 0x3f3, 0x4ef3, 0x1ed2, 0x0, 0x0);
        gbc.writeMem(0xdc26, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0xba5c);
        EXPECT(gbc.pc(), 0xdc28);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdc26), 0xcb);
        EXPECT(gbc.readMem(0xdc27), 0xfa);
        // CB FA 023E
        gbc.setState(0x27f8, 0x5adb, 0x28d0, 0x83b0, 0x33fe, 0xa6d7, 0x0, 0x0);
        gbc.writeMem(0x27f8, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x5adb);
        EXPECT(gbc.pc(), 0x27fa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FA 023F
        gbc.setState(0x7194, 0xf237, 0x7f30, 0xd000, 0x54c2, 0x2cbd, 0x0, 0x1);
        gbc.writeMem(0x7194, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0xf237);
        EXPECT(gbc.pc(), 0x7196);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FA 0240
        gbc.setState(0xc4e1, 0x5daf, 0x58c0, 0x2c1e, 0x1020, 0x5f74, 0x0, 0x1);
        gbc.writeMem(0xc4e1, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x5daf);
        EXPECT(gbc.pc(), 0xc4e3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc4e1), 0xcb);
        EXPECT(gbc.readMem(0xc4e2), 0xfa);
        // CB FA 0241
        gbc.setState(0xec39, 0x93c8, 0x4120, 0x23c9, 0x223, 0xec95, 0x0, 0x1);
        gbc.writeMem(0xec39, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x93c8);
        EXPECT(gbc.pc(), 0xec3b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xec39), 0xcb);
        EXPECT(gbc.readMem(0xec3a), 0xfa);
        // CB FA 0242
        gbc.setState(0x6b40, 0xfc73, 0x1840, 0xea18, 0x1405, 0x9d26, 0x0, 0x0);
        gbc.writeMem(0x6b40, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0xfc73);
        EXPECT(gbc.pc(), 0x6b42);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FA 0243
        gbc.setState(0x6f5c, 0xf4e0, 0xb4c0, 0xa47f, 0xac02, 0xecc6, 0x0, 0x1);
        gbc.writeMem(0x6f5c, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0xf4e0);
        EXPECT(gbc.pc(), 0x6f5e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FA 0244
        gbc.setState(0xe531, 0xfb7a, 0x87a0, 0x658f, 0xce47, 0x9f10, 0x0, 0x0);
        gbc.writeMem(0xe531, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xfb7a);
        EXPECT(gbc.pc(), 0xe533);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe531), 0xcb);
        EXPECT(gbc.readMem(0xe532), 0xfa);
        // CB FA 0245
        gbc.setState(0x96dc, 0xab8c, 0x13b0, 0x5d60, 0xe910, 0x6d2b, 0x1, 0x0);
        gbc.writeMem(0x96dc, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0xab8c);
        EXPECT(gbc.pc(), 0x96de);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x96dc), 0xcb);
        EXPECT(gbc.readMem(0x96dd), 0xfa);
        // CB FA 0246
        gbc.setState(0x9c45, 0x94e6, 0x1e20, 0x638a, 0xd2bc, 0xc2f4, 0x0, 0x1);
        gbc.writeMem(0x9c45, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x94e6);
        EXPECT(gbc.pc(), 0x9c47);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9c45), 0xcb);
        EXPECT(gbc.readMem(0x9c46), 0xfa);
        // CB FA 0247
        gbc.setState(0xa723, 0x9427, 0x11c0, 0x7ea9, 0x1a44, 0xc49b, 0x0, 0x0);
        gbc.writeMem(0xa723, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x9427);
        EXPECT(gbc.pc(), 0xa725);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa723), 0xcb);
        EXPECT(gbc.readMem(0xa724), 0xfa);
        // CB FA 0248
        gbc.setState(0x45b9, 0x128e, 0x60e0, 0xc0a1, 0x3763, 0xd99c, 0x1, 0x1);
        gbc.writeMem(0x45b9, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x128e);
        EXPECT(gbc.pc(), 0x45bb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FA 0249
        gbc.setState(0x5902, 0xa1be, 0x6130, 0x4879, 0x84dd, 0x9caf, 0x1, 0x1);
        gbc.writeMem(0x5902, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0xa1be);
        EXPECT(gbc.pc(), 0x5904);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FA 024A
        gbc.setState(0x31dd, 0xd382, 0xcf30, 0x7d40, 0x34d, 0x6731, 0x0, 0x1);
        gbc.writeMem(0x31dd, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xd382);
        EXPECT(gbc.pc(), 0x31df);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FA 024B
        gbc.setState(0x77c2, 0x6be, 0xd470, 0x955a, 0x430, 0x3619, 0x1, 0x1);
        gbc.writeMem(0x77c2, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x6be);
        EXPECT(gbc.pc(), 0x77c4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FA 024C
        gbc.setState(0xb09e, 0xa6ac, 0xcd00, 0x257c, 0x157d, 0xbde, 0x1, 0x0);
        gbc.writeMem(0xb09e, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0xa6ac);
        EXPECT(gbc.pc(), 0xb0a0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb09e), 0xcb);
        EXPECT(gbc.readMem(0xb09f), 0xfa);
        // CB FA 024E
        gbc.setState(0x32f7, 0xc4eb, 0xb0f0, 0xf13, 0x2156, 0xc787, 0x0, 0x1);
        gbc.writeMem(0x32f7, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xc4eb);
        EXPECT(gbc.pc(), 0x32f9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FA 024F
        gbc.setState(0x48b2, 0xf411, 0x60, 0x75c8, 0x311, 0xf5c8, 0x1, 0x1);
        gbc.writeMem(0x48b2, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0xf411);
        EXPECT(gbc.pc(), 0x48b4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FA 0250
        gbc.setState(0x95eb, 0xdfd2, 0x4040, 0x9750, 0x7ace, 0x2ca0, 0x1, 0x1);
        gbc.writeMem(0x95eb, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xdfd2);
        EXPECT(gbc.pc(), 0x95ed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x95eb), 0xcb);
        EXPECT(gbc.readMem(0x95ec), 0xfa);
        // CB FA 0251
        gbc.setState(0x6829, 0x23ac, 0x7730, 0xa547, 0xdaf6, 0x96d0, 0x0, 0x1);
        gbc.writeMem(0x6829, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x23ac);
        EXPECT(gbc.pc(), 0x682b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FA 0252
        gbc.setState(0x41ed, 0xe149, 0xda50, 0xa2d, 0x8f2a, 0x9ff2, 0x0, 0x0);
        gbc.writeMem(0x41ed, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0xe149);
        EXPECT(gbc.pc(), 0x41ef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FA 0253
        gbc.setState(0x2cce, 0x32b3, 0x25a0, 0x95dc, 0x7090, 0x7f66, 0x1, 0x1);
        gbc.writeMem(0x2cce, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x32b3);
        EXPECT(gbc.pc(), 0x2cd0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FA 0254
        gbc.setState(0x8d4, 0xf482, 0xbdd0, 0x552b, 0xb13, 0x7ced, 0x1, 0x1);
        gbc.writeMem(0x8d4, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0xf482);
        EXPECT(gbc.pc(), 0x8d6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FA 0255
        gbc.setState(0x424f, 0xb455, 0xfc50, 0x821b, 0x9851, 0x3549, 0x1, 0x1);
        gbc.writeMem(0x424f, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xb455);
        EXPECT(gbc.pc(), 0x4251);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FA 0256
        gbc.setState(0xc65a, 0xad34, 0xf0d0, 0x97be, 0x49ba, 0x4515, 0x1, 0x1);
        gbc.writeMem(0xc65a, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0xad34);
        EXPECT(gbc.pc(), 0xc65c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc65a), 0xcb);
        EXPECT(gbc.readMem(0xc65b), 0xfa);
        // CB FA 0257
        gbc.setState(0xd45a, 0xd572, 0xc240, 0x9c12, 0x3bbb, 0xa85c, 0x1, 0x1);
        gbc.writeMem(0xd45a, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0xd572);
        EXPECT(gbc.pc(), 0xd45c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd45a), 0xcb);
        EXPECT(gbc.readMem(0xd45b), 0xfa);
        // CB FA 0258
        gbc.setState(0x88f9, 0xbfa3, 0x59d0, 0xa3e5, 0xfcc8, 0xd553, 0x0, 0x0);
        gbc.writeMem(0x88f9, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0xbfa3);
        EXPECT(gbc.pc(), 0x88fb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x88f9), 0xcb);
        EXPECT(gbc.readMem(0x88fa), 0xfa);
        // CB FA 0259
        gbc.setState(0xe760, 0x7c9e, 0x1d00, 0xc15c, 0x4d3b, 0x8602, 0x1, 0x0);
        gbc.writeMem(0xe760, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x7c9e);
        EXPECT(gbc.pc(), 0xe762);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe760), 0xcb);
        EXPECT(gbc.readMem(0xe761), 0xfa);
        // CB FA 025A
        gbc.setState(0x945f, 0x690b, 0xe2d0, 0xefdc, 0x6906, 0x3c8a, 0x1, 0x1);
        gbc.writeMem(0x945f, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x690b);
        EXPECT(gbc.pc(), 0x9461);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x945f), 0xcb);
        EXPECT(gbc.readMem(0x9460), 0xfa);
        // CB FA 025B
        gbc.setState(0x2cec, 0xce0a, 0x84b0, 0x32c3, 0x8032, 0x3e34, 0x1, 0x0);
        gbc.writeMem(0x2cec, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xce0a);
        EXPECT(gbc.pc(), 0x2cee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FA 025C
        gbc.setState(0xc818, 0xcce9, 0xbd20, 0x4553, 0x7d74, 0x6ed5, 0x0, 0x0);
        gbc.writeMem(0xc818, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0xcce9);
        EXPECT(gbc.pc(), 0xc81a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc818), 0xcb);
        EXPECT(gbc.readMem(0xc819), 0xfa);
        // CB FA 025D
        gbc.setState(0x593a, 0x5123, 0x5db0, 0x6659, 0xb227, 0x975c, 0x1, 0x0);
        gbc.writeMem(0x593a, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x5123);
        EXPECT(gbc.pc(), 0x593c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FA 025E
        gbc.setState(0x3eb7, 0x8e79, 0x6ef0, 0x1f98, 0xa0eb, 0x21cc, 0x1, 0x0);
        gbc.writeMem(0x3eb7, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x8e79);
        EXPECT(gbc.pc(), 0x3eb9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FA 025F
        gbc.setState(0xa49, 0xfcc1, 0x6ed0, 0x8b96, 0x2bce, 0xa919, 0x1, 0x1);
        gbc.writeMem(0xa49, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0xfcc1);
        EXPECT(gbc.pc(), 0xa4b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FA 0260
        gbc.setState(0x890e, 0x3ca0, 0x92c0, 0x3fa8, 0xe9b3, 0x3485, 0x1, 0x0);
        gbc.writeMem(0x890e, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x3ca0);
        EXPECT(gbc.pc(), 0x8910);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x890e), 0xcb);
        EXPECT(gbc.readMem(0x890f), 0xfa);
        // CB FA 0261
        gbc.setState(0xbd2a, 0x27f3, 0x3c90, 0xec2d, 0x1241, 0x1254, 0x0, 0x0);
        gbc.writeMem(0xbd2a, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x27f3);
        EXPECT(gbc.pc(), 0xbd2c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbd2a), 0xcb);
        EXPECT(gbc.readMem(0xbd2b), 0xfa);
        // CB FA 0262
        gbc.setState(0xafef, 0xd862, 0xdce0, 0xf94a, 0x1aa8, 0xd061, 0x0, 0x0);
        gbc.writeMem(0xafef, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0xd862);
        EXPECT(gbc.pc(), 0xaff1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xafef), 0xcb);
        EXPECT(gbc.readMem(0xaff0), 0xfa);
        // CB FA 0263
        gbc.setState(0x2f8b, 0xc2d4, 0xf690, 0xa7f7, 0x81bb, 0xe189, 0x1, 0x1);
        gbc.writeMem(0x2f8b, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0xc2d4);
        EXPECT(gbc.pc(), 0x2f8d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FA 0264
        gbc.setState(0x63ba, 0xb05d, 0x9ae0, 0x807c, 0xcaa0, 0xea5d, 0x1, 0x0);
        gbc.writeMem(0x63ba, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xb05d);
        EXPECT(gbc.pc(), 0x63bc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FA 0266
        gbc.setState(0x8883, 0xb66a, 0x1900, 0x9977, 0x8c9d, 0xf797, 0x0, 0x0);
        gbc.writeMem(0x8883, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0xb66a);
        EXPECT(gbc.pc(), 0x8885);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8883), 0xcb);
        EXPECT(gbc.readMem(0x8884), 0xfa);
        // CB FA 0268
        gbc.setState(0x4c1, 0xdc6, 0x85f0, 0x678c, 0x6f12, 0x146a, 0x1, 0x0);
        gbc.writeMem(0x4c1, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xdc6);
        EXPECT(gbc.pc(), 0x4c3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FA 0269
        gbc.setState(0x5ff0, 0xb8f6, 0x98a0, 0x7991, 0x4318, 0x9ab1, 0x0, 0x1);
        gbc.writeMem(0x5ff0, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0xb8f6);
        EXPECT(gbc.pc(), 0x5ff2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FA 026A
        gbc.setState(0x9edc, 0x971, 0xdd80, 0xc52d, 0xde0a, 0x2fa8, 0x0, 0x0);
        gbc.writeMem(0x9edc, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x971);
        EXPECT(gbc.pc(), 0x9ede);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9edc), 0xcb);
        EXPECT(gbc.readMem(0x9edd), 0xfa);
        // CB FA 026B
        gbc.setState(0x7eb3, 0x2a74, 0x79f0, 0x9da1, 0x2c46, 0x3e36, 0x1, 0x1);
        gbc.writeMem(0x7eb3, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x2a74);
        EXPECT(gbc.pc(), 0x7eb5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FA 026C
        gbc.setState(0x3686, 0x83bd, 0x6790, 0x9f9b, 0x233, 0xeb16, 0x0, 0x1);
        gbc.writeMem(0x3686, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x83bd);
        EXPECT(gbc.pc(), 0x3688);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FA 026D
        gbc.setState(0x30a3, 0xdae8, 0xcf0, 0xf973, 0xe378, 0x8d76, 0x0, 0x0);
        gbc.writeMem(0x30a3, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0xdae8);
        EXPECT(gbc.pc(), 0x30a5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FA 026E
        gbc.setState(0x7bba, 0x13f5, 0xcd70, 0x5274, 0xba00, 0xe46a, 0x0, 0x1);
        gbc.writeMem(0x7bba, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x13f5);
        EXPECT(gbc.pc(), 0x7bbc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FA 026F
        gbc.setState(0xab21, 0x160f, 0x9ca0, 0x628b, 0x2e8c, 0x1c0a, 0x1, 0x1);
        gbc.writeMem(0xab21, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x160f);
        EXPECT(gbc.pc(), 0xab23);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xab21), 0xcb);
        EXPECT(gbc.readMem(0xab22), 0xfa);
        // CB FA 0270
        gbc.setState(0xe7eb, 0xb6b1, 0x5dd0, 0xd626, 0x5a69, 0xfd96, 0x1, 0x0);
        gbc.writeMem(0xe7eb, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0xb6b1);
        EXPECT(gbc.pc(), 0xe7ed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe7eb), 0xcb);
        EXPECT(gbc.readMem(0xe7ec), 0xfa);
        // CB FA 0271
        gbc.setState(0x5a60, 0xaa30, 0x4800, 0xfce6, 0xc089, 0xc99c, 0x0, 0x0);
        gbc.writeMem(0x5a60, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0xaa30);
        EXPECT(gbc.pc(), 0x5a62);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FA 0272
        gbc.setState(0xdddf, 0x9f3d, 0x5120, 0x9fb3, 0xd249, 0xe752, 0x0, 0x1);
        gbc.writeMem(0xdddf, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x9f3d);
        EXPECT(gbc.pc(), 0xdde1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdddf), 0xcb);
        EXPECT(gbc.readMem(0xdde0), 0xfa);
        // CB FA 0273
        gbc.setState(0x8a72, 0xf188, 0x4840, 0x327c, 0xb31b, 0x39f7, 0x1, 0x0);
        gbc.writeMem(0x8a72, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0xf188);
        EXPECT(gbc.pc(), 0x8a74);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8a72), 0xcb);
        EXPECT(gbc.readMem(0x8a73), 0xfa);
        // CB FA 0274
        gbc.setState(0x2c95, 0x9b09, 0x85c0, 0xf362, 0x2155, 0xc402, 0x1, 0x0);
        gbc.writeMem(0x2c95, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x9b09);
        EXPECT(gbc.pc(), 0x2c97);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FA 0275
        gbc.setState(0xe734, 0x68db, 0x9f80, 0x33e7, 0xe9cb, 0x8529, 0x1, 0x1);
        gbc.writeMem(0xe734, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x68db);
        EXPECT(gbc.pc(), 0xe736);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe734), 0xcb);
        EXPECT(gbc.readMem(0xe735), 0xfa);
        // CB FA 0276
        gbc.setState(0xd487, 0x3f1e, 0x42c0, 0xf35e, 0x4ad7, 0x1dc2, 0x0, 0x1);
        gbc.writeMem(0xd487, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x3f1e);
        EXPECT(gbc.pc(), 0xd489);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd487), 0xcb);
        EXPECT(gbc.readMem(0xd488), 0xfa);
        // CB FA 0277
        gbc.setState(0x9a0f, 0x875, 0x5220, 0xfe40, 0xb6f0, 0x4785, 0x0, 0x0);
        gbc.writeMem(0x9a0f, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x875);
        EXPECT(gbc.pc(), 0x9a11);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9a0f), 0xcb);
        EXPECT(gbc.readMem(0x9a10), 0xfa);
        // CB FA 0278
        gbc.setState(0x71c1, 0xc681, 0x4d90, 0xf547, 0xea6b, 0x5c59, 0x0, 0x1);
        gbc.writeMem(0x71c1, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0xc681);
        EXPECT(gbc.pc(), 0x71c3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FA 0279
        gbc.setState(0xaf92, 0x2b18, 0x98a0, 0x14b, 0xd708, 0x4718, 0x0, 0x1);
        gbc.writeMem(0xaf92, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x2b18);
        EXPECT(gbc.pc(), 0xaf94);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaf92), 0xcb);
        EXPECT(gbc.readMem(0xaf93), 0xfa);
        // CB FA 027A
        gbc.setState(0xd13b, 0x3e76, 0x1db0, 0x9480, 0x6268, 0xbaa6, 0x0, 0x1);
        gbc.writeMem(0xd13b, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x3e76);
        EXPECT(gbc.pc(), 0xd13d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd13b), 0xcb);
        EXPECT(gbc.readMem(0xd13c), 0xfa);
        // CB FA 027B
        gbc.setState(0x99dc, 0x1490, 0xb8a0, 0xc043, 0x5b67, 0x8f97, 0x1, 0x0);
        gbc.writeMem(0x99dc, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x1490);
        EXPECT(gbc.pc(), 0x99de);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x99dc), 0xcb);
        EXPECT(gbc.readMem(0x99dd), 0xfa);
        // CB FA 027C
        gbc.setState(0x1506, 0x6668, 0x9270, 0x27dc, 0x1f54, 0xf0e4, 0x1, 0x0);
        gbc.writeMem(0x1506, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x6668);
        EXPECT(gbc.pc(), 0x1508);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FA 027D
        gbc.setState(0x4b7d, 0x5485, 0x1d60, 0x230e, 0x5f0e, 0xaf40, 0x0, 0x0);
        gbc.writeMem(0x4b7d, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x5485);
        EXPECT(gbc.pc(), 0x4b7f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FA 027E
        gbc.setState(0x2c68, 0x260e, 0x450, 0x7100, 0x9d47, 0x23da, 0x1, 0x0);
        gbc.writeMem(0x2c68, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x260e);
        EXPECT(gbc.pc(), 0x2c6a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FA 027F
        gbc.setState(0x9b93, 0x814e, 0xf720, 0x5163, 0x616e, 0xcf93, 0x0, 0x1);
        gbc.writeMem(0x9b93, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x814e);
        EXPECT(gbc.pc(), 0x9b95);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9b93), 0xcb);
        EXPECT(gbc.readMem(0x9b94), 0xfa);
        // CB FA 0280
        gbc.setState(0x2668, 0x33e7, 0x30d0, 0x884f, 0x932c, 0x949f, 0x0, 0x1);
        gbc.writeMem(0x2668, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x33e7);
        EXPECT(gbc.pc(), 0x266a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FA 0281
        gbc.setState(0x4ae1, 0x7d7e, 0x5790, 0xe6c8, 0x9d6, 0x33e6, 0x0, 0x1);
        gbc.writeMem(0x4ae1, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x7d7e);
        EXPECT(gbc.pc(), 0x4ae3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FA 0282
        gbc.setState(0xc525, 0x6976, 0xe720, 0x68a, 0x6d6e, 0xc1d7, 0x0, 0x0);
        gbc.writeMem(0xc525, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x6976);
        EXPECT(gbc.pc(), 0xc527);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc525), 0xcb);
        EXPECT(gbc.readMem(0xc526), 0xfa);
        // CB FA 0283
        gbc.setState(0x3594, 0x179a, 0xa0d0, 0x19b4, 0xc89a, 0x544c, 0x0, 0x0);
        gbc.writeMem(0x3594, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x179a);
        EXPECT(gbc.pc(), 0x3596);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FA 0284
        gbc.setState(0x2e3e, 0xd649, 0xbf50, 0x83b7, 0x4d5d, 0xc598, 0x1, 0x1);
        gbc.writeMem(0x2e3e, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xd649);
        EXPECT(gbc.pc(), 0x2e40);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FA 0285
        gbc.setState(0xdcf6, 0xa3e2, 0x9630, 0xc7c4, 0x4923, 0x4918, 0x0, 0x0);
        gbc.writeMem(0xdcf6, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xa3e2);
        EXPECT(gbc.pc(), 0xdcf8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdcf6), 0xcb);
        EXPECT(gbc.readMem(0xdcf7), 0xfa);
        // CB FA 0286
        gbc.setState(0xc23, 0xa254, 0xedf0, 0xb7fc, 0xbe5f, 0xfae5, 0x0, 0x0);
        gbc.writeMem(0xc23, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xa254);
        EXPECT(gbc.pc(), 0xc25);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FA 0287
        gbc.setState(0x60ef, 0x731a, 0xa990, 0xbb57, 0xd0e3, 0x6af, 0x0, 0x0);
        gbc.writeMem(0x60ef, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x731a);
        EXPECT(gbc.pc(), 0x60f1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FA 0288
        gbc.setState(0x9a58, 0x4ca, 0xc390, 0xae68, 0x37c9, 0xece1, 0x1, 0x0);
        gbc.writeMem(0x9a58, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x4ca);
        EXPECT(gbc.pc(), 0x9a5a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9a58), 0xcb);
        EXPECT(gbc.readMem(0x9a59), 0xfa);
        // CB FA 028A
        gbc.setState(0xe38c, 0xdc17, 0xfa0, 0xbb0a, 0xaabc, 0x2285, 0x0, 0x0);
        gbc.writeMem(0xe38c, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0xdc17);
        EXPECT(gbc.pc(), 0xe38e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe38c), 0xcb);
        EXPECT(gbc.readMem(0xe38d), 0xfa);
        // CB FA 028B
        gbc.setState(0x69ae, 0x4fd, 0x4450, 0xf601, 0x392b, 0xe5f2, 0x1, 0x0);
        gbc.writeMem(0x69ae, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x4fd);
        EXPECT(gbc.pc(), 0x69b0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FA 028C
        gbc.setState(0xc158, 0x85f3, 0xd760, 0xd44a, 0x3a02, 0xefd8, 0x1, 0x0);
        gbc.writeMem(0xc158, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x85f3);
        EXPECT(gbc.pc(), 0xc15a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc158), 0xcb);
        EXPECT(gbc.readMem(0xc159), 0xfa);
        // CB FA 028D
        gbc.setState(0x8405, 0x661e, 0x8580, 0x27e0, 0xce8c, 0x9dae, 0x0, 0x1);
        gbc.writeMem(0x8405, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x661e);
        EXPECT(gbc.pc(), 0x8407);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8405), 0xcb);
        EXPECT(gbc.readMem(0x8406), 0xfa);
        // CB FA 028E
        gbc.setState(0x8a86, 0x39b6, 0xdf00, 0xc53a, 0x4cb9, 0xaf63, 0x1, 0x1);
        gbc.writeMem(0x8a86, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x39b6);
        EXPECT(gbc.pc(), 0x8a88);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8a86), 0xcb);
        EXPECT(gbc.readMem(0x8a87), 0xfa);
        // CB FA 028F
        gbc.setState(0x5ed8, 0x7052, 0x46a0, 0x12e, 0x8651, 0x18f6, 0x1, 0x0);
        gbc.writeMem(0x5ed8, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x7052);
        EXPECT(gbc.pc(), 0x5eda);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FA 0290
        gbc.setState(0xe28, 0x2c84, 0xbbc0, 0xa5c0, 0xbeba, 0xb52b, 0x0, 0x0);
        gbc.writeMem(0xe28, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x2c84);
        EXPECT(gbc.pc(), 0xe2a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FA 0292
        gbc.setState(0x5b, 0x59e2, 0x7110, 0x4162, 0x34a, 0x9d35, 0x0, 0x1);
        gbc.writeMem(0x5b, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x59e2);
        EXPECT(gbc.pc(), 0x5d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FA 0293
        gbc.setState(0xd6f6, 0x8eda, 0xf1f0, 0xa183, 0xc875, 0x3e3f, 0x0, 0x1);
        gbc.writeMem(0xd6f6, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x8eda);
        EXPECT(gbc.pc(), 0xd6f8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd6f6), 0xcb);
        EXPECT(gbc.readMem(0xd6f7), 0xfa);
        // CB FA 0294
        gbc.setState(0xffe, 0x7fa0, 0x2860, 0x2d95, 0xc2d2, 0x9882, 0x1, 0x1);
        gbc.writeMem(0xffe, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x7fa0);
        EXPECT(gbc.pc(), 0x1000);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FA 0295
        gbc.setState(0xb349, 0x6a67, 0xe040, 0x157f, 0x1be2, 0x889b, 0x1, 0x1);
        gbc.writeMem(0xb349, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x6a67);
        EXPECT(gbc.pc(), 0xb34b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb349), 0xcb);
        EXPECT(gbc.readMem(0xb34a), 0xfa);
        // CB FA 0296
        gbc.setState(0xaf86, 0x88b6, 0x2550, 0xeea3, 0x4296, 0x9241, 0x0, 0x0);
        gbc.writeMem(0xaf86, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x88b6);
        EXPECT(gbc.pc(), 0xaf88);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaf86), 0xcb);
        EXPECT(gbc.readMem(0xaf87), 0xfa);
        // CB FA 0297
        gbc.setState(0xc531, 0xb139, 0xaa50, 0xd72d, 0x3fd, 0x5adb, 0x1, 0x1);
        gbc.writeMem(0xc531, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0xb139);
        EXPECT(gbc.pc(), 0xc533);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc531), 0xcb);
        EXPECT(gbc.readMem(0xc532), 0xfa);
        // CB FA 0298
        gbc.setState(0xe030, 0x4ada, 0xb260, 0xc109, 0xa8fe, 0x223, 0x0, 0x1);
        gbc.writeMem(0xe030, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x4ada);
        EXPECT(gbc.pc(), 0xe032);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe030), 0xcb);
        EXPECT(gbc.readMem(0xe031), 0xfa);
        // CB FA 0299
        gbc.setState(0xd4b7, 0xcc39, 0x1a60, 0x6fa7, 0x6d3a, 0xbca4, 0x1, 0x1);
        gbc.writeMem(0xd4b7, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0xcc39);
        EXPECT(gbc.pc(), 0xd4b9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd4b7), 0xcb);
        EXPECT(gbc.readMem(0xd4b8), 0xfa);
        // CB FA 029A
        gbc.setState(0x5190, 0x6354, 0xbc40, 0x6575, 0xc14f, 0x9329, 0x0, 0x1);
        gbc.writeMem(0x5190, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x6354);
        EXPECT(gbc.pc(), 0x5192);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FA 029B
        gbc.setState(0xb564, 0x19e5, 0xf140, 0x9fd5, 0xbd3b, 0x336e, 0x0, 0x1);
        gbc.writeMem(0xb564, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x19e5);
        EXPECT(gbc.pc(), 0xb566);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb564), 0xcb);
        EXPECT(gbc.readMem(0xb565), 0xfa);
        // CB FA 029C
        gbc.setState(0x3001, 0x96b0, 0xdca0, 0x40c6, 0x678d, 0x102, 0x0, 0x1);
        gbc.writeMem(0x3001, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x96b0);
        EXPECT(gbc.pc(), 0x3003);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FA 029D
        gbc.setState(0x8e45, 0xf9fe, 0x590, 0xdfa, 0x9bb0, 0xd349, 0x0, 0x1);
        gbc.writeMem(0x8e45, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xf9fe);
        EXPECT(gbc.pc(), 0x8e47);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8e45), 0xcb);
        EXPECT(gbc.readMem(0x8e46), 0xfa);
        // CB FA 029E
        gbc.setState(0x742c, 0x32a0, 0x69a0, 0xa4f2, 0x4f71, 0xc951, 0x1, 0x1);
        gbc.writeMem(0x742c, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x32a0);
        EXPECT(gbc.pc(), 0x742e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FA 029F
        gbc.setState(0x5c6a, 0xd5c7, 0x2140, 0x886c, 0x3a31, 0xcbd3, 0x1, 0x0);
        gbc.writeMem(0x5c6a, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0xd5c7);
        EXPECT(gbc.pc(), 0x5c6c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FA 02A0
        gbc.setState(0x8455, 0x2e2c, 0x3350, 0xa182, 0x8bc4, 0xd21c, 0x1, 0x0);
        gbc.writeMem(0x8455, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x2e2c);
        EXPECT(gbc.pc(), 0x8457);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8455), 0xcb);
        EXPECT(gbc.readMem(0x8456), 0xfa);
        // CB FA 02A1
        gbc.setState(0xdf92, 0xd266, 0x2480, 0x606f, 0xfed, 0xb826, 0x0, 0x0);
        gbc.writeMem(0xdf92, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0xd266);
        EXPECT(gbc.pc(), 0xdf94);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdf92), 0xcb);
        EXPECT(gbc.readMem(0xdf93), 0xfa);
        // CB FA 02A2
        gbc.setState(0x47b8, 0x38dc, 0xcbf0, 0x8378, 0x506f, 0x9499, 0x0, 0x0);
        gbc.writeMem(0x47b8, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x38dc);
        EXPECT(gbc.pc(), 0x47ba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FA 02A3
        gbc.setState(0xcfa3, 0xc025, 0xab10, 0x6170, 0x8c, 0xf634, 0x0, 0x1);
        gbc.writeMem(0xcfa3, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xc025);
        EXPECT(gbc.pc(), 0xcfa5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcfa3), 0xcb);
        EXPECT(gbc.readMem(0xcfa4), 0xfa);
        // CB FA 02A4
        gbc.setState(0x7557, 0x90f0, 0x9b70, 0x5ca4, 0x2e05, 0xec1c, 0x0, 0x0);
        gbc.writeMem(0x7557, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x90f0);
        EXPECT(gbc.pc(), 0x7559);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FA 02A5
        gbc.setState(0x5afb, 0x1790, 0xedb0, 0xaec4, 0x7381, 0xa804, 0x0, 0x1);
        gbc.writeMem(0x5afb, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x1790);
        EXPECT(gbc.pc(), 0x5afd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FA 02A6
        gbc.setState(0x5c5b, 0x9238, 0xa5e0, 0x6300, 0xdec8, 0xf326, 0x0, 0x0);
        gbc.writeMem(0x5c5b, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x9238);
        EXPECT(gbc.pc(), 0x5c5d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FA 02A7
        gbc.setState(0xc9c, 0x1f2, 0x7630, 0xf317, 0x4ff2, 0x5a06, 0x0, 0x0);
        gbc.writeMem(0xc9c, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x1f2);
        EXPECT(gbc.pc(), 0xc9e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FA 02A8
        gbc.setState(0x301f, 0x118a, 0x6380, 0xd8a7, 0xcc9, 0x8fc8, 0x1, 0x0);
        gbc.writeMem(0x301f, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x118a);
        EXPECT(gbc.pc(), 0x3021);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FA 02A9
        gbc.setState(0x5bc6, 0xdea2, 0x39d0, 0xae05, 0xce41, 0xce4c, 0x0, 0x0);
        gbc.writeMem(0x5bc6, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0xdea2);
        EXPECT(gbc.pc(), 0x5bc8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FA 02AA
        gbc.setState(0x572e, 0x1740, 0xbe30, 0xd47d, 0x4418, 0x9248, 0x0, 0x0);
        gbc.writeMem(0x572e, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x1740);
        EXPECT(gbc.pc(), 0x5730);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FA 02AB
        gbc.setState(0x29cb, 0x25f7, 0x1310, 0xe47f, 0xaff1, 0xdc5, 0x1, 0x1);
        gbc.writeMem(0x29cb, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x25f7);
        EXPECT(gbc.pc(), 0x29cd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FA 02AC
        gbc.setState(0x9ae3, 0x563b, 0x4e90, 0x8b2d, 0xc1ae, 0x3ae4, 0x1, 0x1);
        gbc.writeMem(0x9ae3, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x563b);
        EXPECT(gbc.pc(), 0x9ae5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9ae3), 0xcb);
        EXPECT(gbc.readMem(0x9ae4), 0xfa);
        // CB FA 02AD
        gbc.setState(0x3422, 0x25ea, 0xc1e0, 0x48a0, 0x3ada, 0x238e, 0x1, 0x0);
        gbc.writeMem(0x3422, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x25ea);
        EXPECT(gbc.pc(), 0x3424);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FA 02AE
        gbc.setState(0x8b11, 0x9d6b, 0x1320, 0x3947, 0xcc84, 0xb6d, 0x0, 0x1);
        gbc.writeMem(0x8b11, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x9d6b);
        EXPECT(gbc.pc(), 0x8b13);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8b11), 0xcb);
        EXPECT(gbc.readMem(0x8b12), 0xfa);
        // CB FA 02AF
        gbc.setState(0x41e0, 0x2c73, 0x74d0, 0xde92, 0xcf57, 0xb1bf, 0x1, 0x0);
        gbc.writeMem(0x41e0, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x2c73);
        EXPECT(gbc.pc(), 0x41e2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FA 02B0
        gbc.setState(0xc59b, 0xadac, 0x86b0, 0xc5a, 0x9d04, 0x3265, 0x1, 0x0);
        gbc.writeMem(0xc59b, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0xadac);
        EXPECT(gbc.pc(), 0xc59d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc59b), 0xcb);
        EXPECT(gbc.readMem(0xc59c), 0xfa);
        // CB FA 02B1
        gbc.setState(0x66f1, 0x520a, 0xdd10, 0x68c8, 0xb9, 0x59b, 0x1, 0x0);
        gbc.writeMem(0x66f1, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x520a);
        EXPECT(gbc.pc(), 0x66f3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FA 02B2
        gbc.setState(0xba5d, 0x575a, 0xce0, 0x3f, 0xc89b, 0xca10, 0x0, 0x1);
        gbc.writeMem(0xba5d, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x575a);
        EXPECT(gbc.pc(), 0xba5f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xba5d), 0xcb);
        EXPECT(gbc.readMem(0xba5e), 0xfa);
        // CB FA 02B3
        gbc.setState(0x53d9, 0xdce1, 0x4860, 0x8023, 0xe9ad, 0x862a, 0x1, 0x1);
        gbc.writeMem(0x53d9, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xdce1);
        EXPECT(gbc.pc(), 0x53db);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FA 02B4
        gbc.setState(0xb8f, 0x1506, 0xca70, 0x982e, 0x71f3, 0x6b28, 0x0, 0x1);
        gbc.writeMem(0xb8f, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x1506);
        EXPECT(gbc.pc(), 0xb91);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FA 02B5
        gbc.setState(0xdcc8, 0xa5bb, 0x35b0, 0xddd4, 0xb06c, 0x6889, 0x1, 0x1);
        gbc.writeMem(0xdcc8, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0xa5bb);
        EXPECT(gbc.pc(), 0xdcca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdcc8), 0xcb);
        EXPECT(gbc.readMem(0xdcc9), 0xfa);
        // CB FA 02B6
        gbc.setState(0xdac6, 0xb580, 0xce60, 0x7989, 0x9dfd, 0xacfd, 0x1, 0x0);
        gbc.writeMem(0xdac6, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xb580);
        EXPECT(gbc.pc(), 0xdac8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdac6), 0xcb);
        EXPECT(gbc.readMem(0xdac7), 0xfa);
        // CB FA 02B7
        gbc.setState(0x47cf, 0x809b, 0x2df0, 0x2ca8, 0x8965, 0x6a56, 0x0, 0x0);
        gbc.writeMem(0x47cf, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x809b);
        EXPECT(gbc.pc(), 0x47d1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FA 02B8
        gbc.setState(0xd035, 0xffad, 0x94b0, 0x952f, 0x6f44, 0xaf66, 0x1, 0x0);
        gbc.writeMem(0xd035, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0xffad);
        EXPECT(gbc.pc(), 0xd037);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd035), 0xcb);
        EXPECT(gbc.readMem(0xd036), 0xfa);
        // CB FA 02B9
        gbc.setState(0x7af4, 0x91d1, 0x24b0, 0x98cd, 0xf997, 0x8d2d, 0x0, 0x1);
        gbc.writeMem(0x7af4, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x91d1);
        EXPECT(gbc.pc(), 0x7af6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FA 02BA
        gbc.setState(0x16b9, 0x2007, 0x180, 0x2b00, 0x90af, 0x4ddc, 0x0, 0x0);
        gbc.writeMem(0x16b9, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x2007);
        EXPECT(gbc.pc(), 0x16bb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FA 02BB
        gbc.setState(0x603, 0xc473, 0x7430, 0x74b0, 0xc88a, 0xe2c, 0x0, 0x0);
        gbc.writeMem(0x603, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0xc473);
        EXPECT(gbc.pc(), 0x605);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FA 02BC
        gbc.setState(0x3f63, 0xe8ae, 0x99f0, 0xdfd5, 0x2c03, 0x32d7, 0x1, 0x1);
        gbc.writeMem(0x3f63, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0xe8ae);
        EXPECT(gbc.pc(), 0x3f65);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FA 02BD
        gbc.setState(0x3432, 0x8407, 0x7120, 0xba38, 0x3e29, 0xca4c, 0x0, 0x0);
        gbc.writeMem(0x3432, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x8407);
        EXPECT(gbc.pc(), 0x3434);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FA 02BE
        gbc.setState(0x5b7b, 0x1528, 0x4f50, 0x2f40, 0x2aed, 0xd643, 0x1, 0x0);
        gbc.writeMem(0x5b7b, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x1528);
        EXPECT(gbc.pc(), 0x5b7d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FA 02BF
        gbc.setState(0x883e, 0x1a86, 0x4760, 0x420e, 0xd823, 0x11c9, 0x1, 0x1);
        gbc.writeMem(0x883e, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x1a86);
        EXPECT(gbc.pc(), 0x8840);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x883e), 0xcb);
        EXPECT(gbc.readMem(0x883f), 0xfa);
        // CB FA 02C0
        gbc.setState(0x2aa1, 0x8dde, 0x5a50, 0x9409, 0x328e, 0x82f, 0x1, 0x1);
        gbc.writeMem(0x2aa1, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x8dde);
        EXPECT(gbc.pc(), 0x2aa3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FA 02C1
        gbc.setState(0x1e5c, 0x7db2, 0x9b30, 0x8e87, 0xda29, 0xe1be, 0x1, 0x0);
        gbc.writeMem(0x1e5c, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x7db2);
        EXPECT(gbc.pc(), 0x1e5e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FA 02C2
        gbc.setState(0x8dd6, 0x6ccb, 0x7840, 0x9e33, 0xb184, 0x4b2c, 0x0, 0x1);
        gbc.writeMem(0x8dd6, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x6ccb);
        EXPECT(gbc.pc(), 0x8dd8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8dd6), 0xcb);
        EXPECT(gbc.readMem(0x8dd7), 0xfa);
        // CB FA 02C3
        gbc.setState(0xd4a9, 0x22ec, 0xc5f0, 0xffdd, 0xc707, 0xe880, 0x0, 0x1);
        gbc.writeMem(0xd4a9, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x22ec);
        EXPECT(gbc.pc(), 0xd4ab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd4a9), 0xcb);
        EXPECT(gbc.readMem(0xd4aa), 0xfa);
        // CB FA 02C4
        gbc.setState(0xe580, 0x5540, 0xd960, 0x9e3e, 0xfdb9, 0x4fb9, 0x0, 0x0);
        gbc.writeMem(0xe580, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x5540);
        EXPECT(gbc.pc(), 0xe582);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe580), 0xcb);
        EXPECT(gbc.readMem(0xe581), 0xfa);
        // CB FA 02C6
        gbc.setState(0xb8b2, 0xf867, 0x2b0, 0xb738, 0xe73d, 0x56f9, 0x0, 0x1);
        gbc.writeMem(0xb8b2, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xf867);
        EXPECT(gbc.pc(), 0xb8b4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb8b2), 0xcb);
        EXPECT(gbc.readMem(0xb8b3), 0xfa);
        // CB FA 02C7
        gbc.setState(0x41b3, 0x9016, 0x17e0, 0x646b, 0x98a4, 0x7f4, 0x1, 0x1);
        gbc.writeMem(0x41b3, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x9016);
        EXPECT(gbc.pc(), 0x41b5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FA 02C8
        gbc.setState(0xd9f2, 0x6608, 0xf750, 0xd1c4, 0x67f5, 0x7e44, 0x1, 0x0);
        gbc.writeMem(0xd9f2, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x6608);
        EXPECT(gbc.pc(), 0xd9f4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd9f2), 0xcb);
        EXPECT(gbc.readMem(0xd9f3), 0xfa);
        // CB FA 02C9
        gbc.setState(0xe613, 0x1e91, 0x1060, 0x7d8d, 0x506b, 0x2de2, 0x1, 0x0);
        gbc.writeMem(0xe613, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x1e91);
        EXPECT(gbc.pc(), 0xe615);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe613), 0xcb);
        EXPECT(gbc.readMem(0xe614), 0xfa);
        // CB FA 02CB
        gbc.setState(0xe5d3, 0xf6f6, 0x6f50, 0x2ff7, 0x71b2, 0x62e6, 0x0, 0x1);
        gbc.writeMem(0xe5d3, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xf6f6);
        EXPECT(gbc.pc(), 0xe5d5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe5d3), 0xcb);
        EXPECT(gbc.readMem(0xe5d4), 0xfa);
        // CB FA 02CC
        gbc.setState(0x9e8b, 0xcff6, 0x52b0, 0xee2a, 0x53fa, 0xe3a2, 0x1, 0x1);
        gbc.writeMem(0x9e8b, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0xcff6);
        EXPECT(gbc.pc(), 0x9e8d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9e8b), 0xcb);
        EXPECT(gbc.readMem(0x9e8c), 0xfa);
        // CB FA 02CE
        gbc.setState(0xa982, 0x5c25, 0xb9a0, 0x9761, 0x878e, 0xbcb1, 0x1, 0x1);
        gbc.writeMem(0xa982, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x5c25);
        EXPECT(gbc.pc(), 0xa984);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa982), 0xcb);
        EXPECT(gbc.readMem(0xa983), 0xfa);
        // CB FA 02D0
        gbc.setState(0xe25, 0x2641, 0x74e0, 0x9436, 0x2b2c, 0x6b2a, 0x0, 0x0);
        gbc.writeMem(0xe25, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x2641);
        EXPECT(gbc.pc(), 0xe27);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FA 02D1
        gbc.setState(0x2677, 0xf141, 0x6f50, 0xc402, 0x3fc9, 0x5908, 0x0, 0x0);
        gbc.writeMem(0x2677, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0xf141);
        EXPECT(gbc.pc(), 0x2679);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FA 02D2
        gbc.setState(0xd1cb, 0xc9f7, 0x1d80, 0x9a97, 0x4023, 0xf439, 0x0, 0x1);
        gbc.writeMem(0xd1cb, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0xc9f7);
        EXPECT(gbc.pc(), 0xd1cd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd1cb), 0xcb);
        EXPECT(gbc.readMem(0xd1cc), 0xfa);
        // CB FA 02D3
        gbc.setState(0x509, 0x5cab, 0xe4b0, 0x32d1, 0xd7c4, 0x16ac, 0x1, 0x0);
        gbc.writeMem(0x509, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x5cab);
        EXPECT(gbc.pc(), 0x50b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FA 02D4
        gbc.setState(0x53bb, 0xf4e9, 0xfff0, 0x97da, 0x92af, 0xec5c, 0x1, 0x0);
        gbc.writeMem(0x53bb, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0xf4e9);
        EXPECT(gbc.pc(), 0x53bd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FA 02D5
        gbc.setState(0x4d87, 0x4d9a, 0x3b70, 0xe78f, 0x598a, 0x7749, 0x1, 0x1);
        gbc.writeMem(0x4d87, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x4d9a);
        EXPECT(gbc.pc(), 0x4d89);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FA 02D6
        gbc.setState(0x6497, 0xad85, 0xc8a0, 0x3f21, 0x8b4, 0xca0c, 0x1, 0x0);
        gbc.writeMem(0x6497, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xad85);
        EXPECT(gbc.pc(), 0x6499);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FA 02D7
        gbc.setState(0x4dde, 0x75c7, 0xc3e0, 0xd98f, 0xce7e, 0x7f6f, 0x1, 0x1);
        gbc.writeMem(0x4dde, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x75c7);
        EXPECT(gbc.pc(), 0x4de0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FA 02D8
        gbc.setState(0x9743, 0x7a0d, 0x8f40, 0x6fdd, 0xd33f, 0x5dd2, 0x1, 0x1);
        gbc.writeMem(0x9743, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x7a0d);
        EXPECT(gbc.pc(), 0x9745);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9743), 0xcb);
        EXPECT(gbc.readMem(0x9744), 0xfa);
        // CB FA 02D9
        gbc.setState(0xc639, 0x2c98, 0xaa80, 0xaef3, 0x44e5, 0x6159, 0x1, 0x0);
        gbc.writeMem(0xc639, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x2c98);
        EXPECT(gbc.pc(), 0xc63b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc639), 0xcb);
        EXPECT(gbc.readMem(0xc63a), 0xfa);
        // CB FA 02DA
        gbc.setState(0xb9a4, 0x86e2, 0x750, 0x9451, 0x95e2, 0xb124, 0x0, 0x1);
        gbc.writeMem(0xb9a4, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x86e2);
        EXPECT(gbc.pc(), 0xb9a6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb9a4), 0xcb);
        EXPECT(gbc.readMem(0xb9a5), 0xfa);
        // CB FA 02DB
        gbc.setState(0xc668, 0x96f4, 0x7680, 0x7e37, 0xd1f1, 0x71d0, 0x1, 0x0);
        gbc.writeMem(0xc668, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x96f4);
        EXPECT(gbc.pc(), 0xc66a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc668), 0xcb);
        EXPECT(gbc.readMem(0xc669), 0xfa);
        // CB FA 02DC
        gbc.setState(0xe8d8, 0xbd72, 0x52e0, 0x3fd5, 0xdc17, 0x873d, 0x0, 0x0);
        gbc.writeMem(0xe8d8, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0xbd72);
        EXPECT(gbc.pc(), 0xe8da);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe8d8), 0xcb);
        EXPECT(gbc.readMem(0xe8d9), 0xfa);
        // CB FA 02DD
        gbc.setState(0x143a, 0x1d6c, 0xf5f0, 0xe2a8, 0x4d2a, 0xd583, 0x1, 0x1);
        gbc.writeMem(0x143a, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x1d6c);
        EXPECT(gbc.pc(), 0x143c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FA 02DE
        gbc.setState(0x90aa, 0xc2f, 0xe8c0, 0x904a, 0xe621, 0x1a9c, 0x0, 0x1);
        gbc.writeMem(0x90aa, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0xc2f);
        EXPECT(gbc.pc(), 0x90ac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x90aa), 0xcb);
        EXPECT(gbc.readMem(0x90ab), 0xfa);
        // CB FA 02DF
        gbc.setState(0xd1ac, 0xe01e, 0x2560, 0x5105, 0xf6bb, 0x9c55, 0x1, 0x1);
        gbc.writeMem(0xd1ac, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0xe01e);
        EXPECT(gbc.pc(), 0xd1ae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd1ac), 0xcb);
        EXPECT(gbc.readMem(0xd1ad), 0xfa);
        // CB FA 02E0
        gbc.setState(0xd3ed, 0x5197, 0xdd90, 0x4018, 0x8ece, 0x4dba, 0x0, 0x1);
        gbc.writeMem(0xd3ed, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x5197);
        EXPECT(gbc.pc(), 0xd3ef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd3ed), 0xcb);
        EXPECT(gbc.readMem(0xd3ee), 0xfa);
        // CB FA 02E1
        gbc.setState(0x7946, 0xe3d7, 0x7050, 0x909f, 0xec55, 0x1e97, 0x1, 0x1);
        gbc.writeMem(0x7946, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0xe3d7);
        EXPECT(gbc.pc(), 0x7948);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FA 02E2
        gbc.setState(0x6a03, 0xc5a6, 0x58b0, 0x54b5, 0x6bdd, 0xdf4c, 0x0, 0x0);
        gbc.writeMem(0x6a03, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0xc5a6);
        EXPECT(gbc.pc(), 0x6a05);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FA 02E3
        gbc.setState(0xe434, 0xfe29, 0xac80, 0x7f8f, 0x18a8, 0x20aa, 0x1, 0x0);
        gbc.writeMem(0xe434, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0xfe29);
        EXPECT(gbc.pc(), 0xe436);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe434), 0xcb);
        EXPECT(gbc.readMem(0xe435), 0xfa);
        // CB FA 02E4
        gbc.setState(0xeccf, 0xc48d, 0xa70, 0xcd0f, 0x5e77, 0x7ef4, 0x0, 0x0);
        gbc.writeMem(0xeccf, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0xc48d);
        EXPECT(gbc.pc(), 0xecd1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeccf), 0xcb);
        EXPECT(gbc.readMem(0xecd0), 0xfa);
        // CB FA 02E5
        gbc.setState(0xe883, 0x9c4f, 0xce90, 0xe506, 0xfd0e, 0x5ac8, 0x1, 0x0);
        gbc.writeMem(0xe883, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x9c4f);
        EXPECT(gbc.pc(), 0xe885);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe883), 0xcb);
        EXPECT(gbc.readMem(0xe884), 0xfa);
        // CB FA 02E6
        gbc.setState(0x4af0, 0xe10c, 0x13e0, 0x1ec2, 0xbcf5, 0xf9ff, 0x1, 0x0);
        gbc.writeMem(0x4af0, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0xe10c);
        EXPECT(gbc.pc(), 0x4af2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FA 02E7
        gbc.setState(0x47c7, 0x9252, 0xc1d0, 0x976b, 0x7164, 0x1672, 0x0, 0x0);
        gbc.writeMem(0x47c7, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x9252);
        EXPECT(gbc.pc(), 0x47c9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FA 02E8
        gbc.setState(0xdb48, 0x7fbc, 0x1850, 0x48a5, 0xacd2, 0x5f2e, 0x1, 0x0);
        gbc.writeMem(0xdb48, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x7fbc);
        EXPECT(gbc.pc(), 0xdb4a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdb48), 0xcb);
        EXPECT(gbc.readMem(0xdb49), 0xfa);
        // CB FA 02E9
        gbc.setState(0xc1ad, 0xdbc5, 0x10c0, 0xd604, 0xa541, 0xfaa, 0x0, 0x1);
        gbc.writeMem(0xc1ad, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0xdbc5);
        EXPECT(gbc.pc(), 0xc1af);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc1ad), 0xcb);
        EXPECT(gbc.readMem(0xc1ae), 0xfa);
        // CB FA 02EA
        gbc.setState(0xbdb3, 0xbf13, 0x6b00, 0xa1d5, 0x6946, 0xa5fa, 0x1, 0x1);
        gbc.writeMem(0xbdb3, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xbf13);
        EXPECT(gbc.pc(), 0xbdb5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbdb3), 0xcb);
        EXPECT(gbc.readMem(0xbdb4), 0xfa);
        // CB FA 02EB
        gbc.setState(0x7fbd, 0xa25f, 0x34d0, 0x8f14, 0xee33, 0x9590, 0x1, 0x0);
        gbc.writeMem(0x7fbd, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0xa25f);
        EXPECT(gbc.pc(), 0x7fbf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FA 02EC
        gbc.setState(0xed3b, 0xfa18, 0x5a40, 0x6974, 0xdff, 0xded2, 0x1, 0x1);
        gbc.writeMem(0xed3b, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0xfa18);
        EXPECT(gbc.pc(), 0xed3d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xed3b), 0xcb);
        EXPECT(gbc.readMem(0xed3c), 0xfa);
        // CB FA 02ED
        gbc.setState(0x6ca6, 0x1759, 0xdf70, 0xc5ee, 0x1807, 0xf52d, 0x0, 0x0);
        gbc.writeMem(0x6ca6, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x1759);
        EXPECT(gbc.pc(), 0x6ca8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FA 02EE
        gbc.setState(0x9632, 0xd885, 0xcc00, 0x14d7, 0x9b87, 0xf792, 0x0, 0x0);
        gbc.writeMem(0x9632, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0xd885);
        EXPECT(gbc.pc(), 0x9634);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9632), 0xcb);
        EXPECT(gbc.readMem(0x9633), 0xfa);
        // CB FA 02EF
        gbc.setState(0x17c5, 0x36f8, 0x1b40, 0x539, 0xc202, 0x3ace, 0x0, 0x1);
        gbc.writeMem(0x17c5, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x36f8);
        EXPECT(gbc.pc(), 0x17c7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FA 02F0
        gbc.setState(0xadf4, 0x1cbf, 0x8c50, 0xa229, 0x847e, 0xfb01, 0x0, 0x0);
        gbc.writeMem(0xadf4, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x1cbf);
        EXPECT(gbc.pc(), 0xadf6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xadf4), 0xcb);
        EXPECT(gbc.readMem(0xadf5), 0xfa);
        // CB FA 02F1
        gbc.setState(0xa399, 0x2ba2, 0x2800, 0xe43f, 0x100f, 0x558c, 0x0, 0x1);
        gbc.writeMem(0xa399, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x2ba2);
        EXPECT(gbc.pc(), 0xa39b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa399), 0xcb);
        EXPECT(gbc.readMem(0xa39a), 0xfa);
        // CB FA 02F2
        gbc.setState(0x2929, 0xc2bc, 0x4e20, 0x500d, 0xdf28, 0x3dac, 0x0, 0x1);
        gbc.writeMem(0x2929, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0xc2bc);
        EXPECT(gbc.pc(), 0x292b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FA 02F3
        gbc.setState(0xebbc, 0x9c95, 0x20d0, 0x4741, 0xa705, 0x96bd, 0x1, 0x1);
        gbc.writeMem(0xebbc, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x9c95);
        EXPECT(gbc.pc(), 0xebbe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xebbc), 0xcb);
        EXPECT(gbc.readMem(0xebbd), 0xfa);
        // CB FA 02F4
        gbc.setState(0x5e2b, 0x63f1, 0x21c0, 0x22df, 0x151d, 0xbf0b, 0x0, 0x0);
        gbc.writeMem(0x5e2b, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x63f1);
        EXPECT(gbc.pc(), 0x5e2d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FA 02F5
        gbc.setState(0xac37, 0x432, 0xcb0, 0xd71e, 0x17ce, 0x9cfa, 0x0, 0x1);
        gbc.writeMem(0xac37, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x432);
        EXPECT(gbc.pc(), 0xac39);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xac37), 0xcb);
        EXPECT(gbc.readMem(0xac38), 0xfa);
        // CB FA 02F6
        gbc.setState(0xcb0, 0x29ce, 0x3dd0, 0x66b0, 0x5a3d, 0x161d, 0x0, 0x0);
        gbc.writeMem(0xcb0, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x29ce);
        EXPECT(gbc.pc(), 0xcb2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FA 02F7
        gbc.setState(0xdf6f, 0xb1b1, 0x1240, 0x8ba5, 0xaf68, 0x178e, 0x1, 0x0);
        gbc.writeMem(0xdf6f, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0xb1b1);
        EXPECT(gbc.pc(), 0xdf71);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdf6f), 0xcb);
        EXPECT(gbc.readMem(0xdf70), 0xfa);
        // CB FA 02F8
        gbc.setState(0x2b4d, 0x914, 0x2d00, 0xc9c0, 0xf6a2, 0xe93e, 0x0, 0x1);
        gbc.writeMem(0x2b4d, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x914);
        EXPECT(gbc.pc(), 0x2b4f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FA 02F9
        gbc.setState(0xc07b, 0x1b7a, 0x4b00, 0xcdd0, 0x3d75, 0xf5fb, 0x0, 0x1);
        gbc.writeMem(0xc07b, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x1b7a);
        EXPECT(gbc.pc(), 0xc07d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc07b), 0xcb);
        EXPECT(gbc.readMem(0xc07c), 0xfa);
        // CB FA 02FA
        gbc.setState(0x498, 0x5321, 0x8cd0, 0x646c, 0x736, 0xbc68, 0x0, 0x1);
        gbc.writeMem(0x498, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x5321);
        EXPECT(gbc.pc(), 0x49a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FA 02FB
        gbc.setState(0x833f, 0xc5c1, 0x3b50, 0x6f1d, 0x16b1, 0x37c2, 0x0, 0x1);
        gbc.writeMem(0x833f, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0xc5c1);
        EXPECT(gbc.pc(), 0x8341);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x833f), 0xcb);
        EXPECT(gbc.readMem(0x8340), 0xfa);
        // CB FA 02FC
        gbc.setState(0xad34, 0x494e, 0xfcf0, 0xb19b, 0x6729, 0x4cf2, 0x1, 0x0);
        gbc.writeMem(0xad34, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x494e);
        EXPECT(gbc.pc(), 0xad36);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xad34), 0xcb);
        EXPECT(gbc.readMem(0xad35), 0xfa);
        // CB FA 02FD
        gbc.setState(0xe909, 0x2246, 0x7eb0, 0x28f9, 0xbf17, 0x867c, 0x1, 0x0);
        gbc.writeMem(0xe909, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x2246);
        EXPECT(gbc.pc(), 0xe90b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe909), 0xcb);
        EXPECT(gbc.readMem(0xe90a), 0xfa);
        // CB FA 02FE
        gbc.setState(0x556f, 0xf48d, 0xea10, 0xf9ab, 0xa2dd, 0xfc29, 0x0, 0x0);
        gbc.writeMem(0x556f, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0xf48d);
        EXPECT(gbc.pc(), 0x5571);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FA 02FF
        gbc.setState(0xee69, 0xc2e7, 0xde40, 0x7187, 0xc27, 0xfcc7, 0x1, 0x0);
        gbc.writeMem(0xee69, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0xc2e7);
        EXPECT(gbc.pc(), 0xee6b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xee69), 0xcb);
        EXPECT(gbc.readMem(0xee6a), 0xfa);
        // CB FA 0300
        gbc.setState(0xcb89, 0xd2f2, 0x2ae0, 0xdd6f, 0x47dd, 0x3c0f, 0x0, 0x1);
        gbc.writeMem(0xcb89, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0xd2f2);
        EXPECT(gbc.pc(), 0xcb8b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcb89), 0xcb);
        EXPECT(gbc.readMem(0xcb8a), 0xfa);
        // CB FA 0301
        gbc.setState(0x9565, 0xd5ad, 0x9ee0, 0xea01, 0x4195, 0x50f1, 0x0, 0x0);
        gbc.writeMem(0x9565, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0xd5ad);
        EXPECT(gbc.pc(), 0x9567);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9565), 0xcb);
        EXPECT(gbc.readMem(0x9566), 0xfa);
        // CB FA 0302
        gbc.setState(0x1c, 0x2497, 0x8310, 0xb67c, 0x6b1e, 0xadf5, 0x0, 0x1);
        gbc.writeMem(0x1c, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x2497);
        EXPECT(gbc.pc(), 0x1e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FA 0303
        gbc.setState(0xef7, 0x911, 0xfcb0, 0x6e86, 0x2b71, 0xda05, 0x1, 0x1);
        gbc.writeMem(0xef7, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x911);
        EXPECT(gbc.pc(), 0xef9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FA 0304
        gbc.setState(0xbafa, 0xc2f4, 0x8750, 0xa7fe, 0x31e0, 0x7049, 0x0, 0x0);
        gbc.writeMem(0xbafa, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xc2f4);
        EXPECT(gbc.pc(), 0xbafc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbafa), 0xcb);
        EXPECT(gbc.readMem(0xbafb), 0xfa);
        // CB FA 0305
        gbc.setState(0xd5db, 0xd060, 0x94c0, 0x7a18, 0x8839, 0xd525, 0x1, 0x0);
        gbc.writeMem(0xd5db, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0xd060);
        EXPECT(gbc.pc(), 0xd5dd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd5db), 0xcb);
        EXPECT(gbc.readMem(0xd5dc), 0xfa);
        // CB FA 0306
        gbc.setState(0x82ae, 0x9abd, 0xe230, 0x95f4, 0x9516, 0xa243, 0x0, 0x0);
        gbc.writeMem(0x82ae, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x9abd);
        EXPECT(gbc.pc(), 0x82b0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x82ae), 0xcb);
        EXPECT(gbc.readMem(0x82af), 0xfa);
        // CB FA 0307
        gbc.setState(0x88c1, 0xdb3c, 0x4b90, 0x6518, 0xc709, 0xf2d6, 0x0, 0x0);
        gbc.writeMem(0x88c1, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0xdb3c);
        EXPECT(gbc.pc(), 0x88c3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x88c1), 0xcb);
        EXPECT(gbc.readMem(0x88c2), 0xfa);
        // CB FA 0308
        gbc.setState(0xdeca, 0x4990, 0xa3b0, 0x24c0, 0xbc34, 0x3cac, 0x1, 0x0);
        gbc.writeMem(0xdeca, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x4990);
        EXPECT(gbc.pc(), 0xdecc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdeca), 0xcb);
        EXPECT(gbc.readMem(0xdecb), 0xfa);
        // CB FA 0309
        gbc.setState(0x18cb, 0xe094, 0xf540, 0x86e4, 0xeefd, 0x63cf, 0x1, 0x0);
        gbc.writeMem(0x18cb, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0xe094);
        EXPECT(gbc.pc(), 0x18cd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FA 030A
        gbc.setState(0xee24, 0xb077, 0x9650, 0x9be5, 0xbac6, 0x1a82, 0x1, 0x1);
        gbc.writeMem(0xee24, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0xb077);
        EXPECT(gbc.pc(), 0xee26);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xee24), 0xcb);
        EXPECT(gbc.readMem(0xee25), 0xfa);
        // CB FA 030B
        gbc.setState(0xb860, 0xad77, 0xbbe0, 0x64cd, 0xd341, 0xaba7, 0x1, 0x0);
        gbc.writeMem(0xb860, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xad77);
        EXPECT(gbc.pc(), 0xb862);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb860), 0xcb);
        EXPECT(gbc.readMem(0xb861), 0xfa);
        // CB FA 030C
        gbc.setState(0x691, 0xe0af, 0x8b70, 0xac2e, 0xb069, 0x7272, 0x1, 0x0);
        gbc.writeMem(0x691, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0xe0af);
        EXPECT(gbc.pc(), 0x693);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FA 030D
        gbc.setState(0x3437, 0x9833, 0x9be0, 0x1198, 0x2e5d, 0x6b28, 0x1, 0x0);
        gbc.writeMem(0x3437, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x9833);
        EXPECT(gbc.pc(), 0x3439);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FA 030E
        gbc.setState(0x59f9, 0x8b6, 0x1b00, 0x3620, 0x6ab3, 0xf998, 0x1, 0x1);
        gbc.writeMem(0x59f9, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x8b6);
        EXPECT(gbc.pc(), 0x59fb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FA 030F
        gbc.setState(0x1283, 0x6e04, 0x1e00, 0x1993, 0x70ff, 0x992f, 0x0, 0x0);
        gbc.writeMem(0x1283, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x6e04);
        EXPECT(gbc.pc(), 0x1285);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FA 0310
        gbc.setState(0x867e, 0xf34d, 0xd1b0, 0x7b5f, 0x5b36, 0x6432, 0x1, 0x0);
        gbc.writeMem(0x867e, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xf34d);
        EXPECT(gbc.pc(), 0x8680);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x867e), 0xcb);
        EXPECT(gbc.readMem(0x867f), 0xfa);
        // CB FA 0311
        gbc.setState(0xecf8, 0xdb8d, 0x7930, 0xd806, 0xc41b, 0xe4de, 0x0, 0x0);
        gbc.writeMem(0xecf8, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0xdb8d);
        EXPECT(gbc.pc(), 0xecfa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xecf8), 0xcb);
        EXPECT(gbc.readMem(0xecf9), 0xfa);
        // CB FA 0312
        gbc.setState(0x6338, 0x5e18, 0xfde0, 0x2ec2, 0x3385, 0x1ebd, 0x0, 0x0);
        gbc.writeMem(0x6338, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x5e18);
        EXPECT(gbc.pc(), 0x633a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FA 0313
        gbc.setState(0xb1f4, 0x185b, 0x5e90, 0x58a, 0x423d, 0x74bb, 0x0, 0x1);
        gbc.writeMem(0xb1f4, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x185b);
        EXPECT(gbc.pc(), 0xb1f6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb1f4), 0xcb);
        EXPECT(gbc.readMem(0xb1f5), 0xfa);
        // CB FA 0315
        gbc.setState(0xa44e, 0x22c0, 0x4b20, 0xcddd, 0x83, 0xc913, 0x0, 0x0);
        gbc.writeMem(0xa44e, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x22c0);
        EXPECT(gbc.pc(), 0xa450);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa44e), 0xcb);
        EXPECT(gbc.readMem(0xa44f), 0xfa);
        // CB FA 0317
        gbc.setState(0x93bc, 0x8fee, 0xab50, 0x80eb, 0xd994, 0x3985, 0x1, 0x0);
        gbc.writeMem(0x93bc, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x8fee);
        EXPECT(gbc.pc(), 0x93be);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x93bc), 0xcb);
        EXPECT(gbc.readMem(0x93bd), 0xfa);
        // CB FA 0318
        gbc.setState(0xc386, 0xb0e2, 0x8e00, 0x2645, 0xb39e, 0xce56, 0x1, 0x1);
        gbc.writeMem(0xc386, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0xb0e2);
        EXPECT(gbc.pc(), 0xc388);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc386), 0xcb);
        EXPECT(gbc.readMem(0xc387), 0xfa);
        // CB FA 0319
        gbc.setState(0x5f95, 0xe0b3, 0xa430, 0x7e62, 0x84e5, 0xbbfc, 0x0, 0x0);
        gbc.writeMem(0x5f95, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0xe0b3);
        EXPECT(gbc.pc(), 0x5f97);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FA 031A
        gbc.setState(0x1e5d, 0x1617, 0xa170, 0x77c9, 0x7fa4, 0x5463, 0x0, 0x0);
        gbc.writeMem(0x1e5d, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x1617);
        EXPECT(gbc.pc(), 0x1e5f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FA 031C
        gbc.setState(0x2e74, 0x15ab, 0xf270, 0xfbf7, 0x673, 0x68e0, 0x1, 0x0);
        gbc.writeMem(0x2e74, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x15ab);
        EXPECT(gbc.pc(), 0x2e76);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FA 031D
        gbc.setState(0x3961, 0xee3b, 0x3240, 0xd172, 0x2f12, 0xe5a3, 0x1, 0x0);
        gbc.writeMem(0x3961, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0xee3b);
        EXPECT(gbc.pc(), 0x3963);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FA 031E
        gbc.setState(0x31a5, 0x2473, 0x1970, 0x92a9, 0x92a4, 0xc80d, 0x1, 0x1);
        gbc.writeMem(0x31a5, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x2473);
        EXPECT(gbc.pc(), 0x31a7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FA 031F
        gbc.setState(0xdd34, 0x7808, 0x32a0, 0x5e41, 0x4d2f, 0xaba0, 0x0, 0x0);
        gbc.writeMem(0xdd34, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x7808);
        EXPECT(gbc.pc(), 0xdd36);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdd34), 0xcb);
        EXPECT(gbc.readMem(0xdd35), 0xfa);
        // CB FA 0320
        gbc.setState(0xc741, 0x9c3b, 0x8000, 0x2c93, 0x3a58, 0xd74f, 0x0, 0x1);
        gbc.writeMem(0xc741, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x9c3b);
        EXPECT(gbc.pc(), 0xc743);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc741), 0xcb);
        EXPECT(gbc.readMem(0xc742), 0xfa);
        // CB FA 0321
        gbc.setState(0x334f, 0x5560, 0x2f90, 0x915, 0x1882, 0x73b, 0x1, 0x0);
        gbc.writeMem(0x334f, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x5560);
        EXPECT(gbc.pc(), 0x3351);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FA 0323
        gbc.setState(0x379c, 0xd6ae, 0xe60, 0x677, 0x594f, 0x1aa, 0x0, 0x1);
        gbc.writeMem(0x379c, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0xd6ae);
        EXPECT(gbc.pc(), 0x379e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FA 0324
        gbc.setState(0x43ea, 0x88fa, 0x5580, 0xfc9f, 0x9fb6, 0x7ea9, 0x0, 0x0);
        gbc.writeMem(0x43ea, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x88fa);
        EXPECT(gbc.pc(), 0x43ec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FA 0325
        gbc.setState(0x8743, 0xd837, 0xae0, 0xe4ea, 0x8dee, 0xd840, 0x0, 0x0);
        gbc.writeMem(0x8743, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0xd837);
        EXPECT(gbc.pc(), 0x8745);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8743), 0xcb);
        EXPECT(gbc.readMem(0x8744), 0xfa);
        // CB FA 0326
        gbc.setState(0x3a7c, 0xc06a, 0x3e0, 0xafa5, 0x7c88, 0x3903, 0x0, 0x1);
        gbc.writeMem(0x3a7c, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0xc06a);
        EXPECT(gbc.pc(), 0x3a7e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FA 0327
        gbc.setState(0x19ae, 0xa7b9, 0xa440, 0x9bd0, 0x3e4d, 0xb371, 0x0, 0x1);
        gbc.writeMem(0x19ae, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xa7b9);
        EXPECT(gbc.pc(), 0x19b0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FA 0328
        gbc.setState(0xe2c5, 0x427c, 0x8740, 0x3319, 0x89a3, 0x5719, 0x1, 0x1);
        gbc.writeMem(0xe2c5, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x427c);
        EXPECT(gbc.pc(), 0xe2c7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe2c5), 0xcb);
        EXPECT(gbc.readMem(0xe2c6), 0xfa);
        // CB FA 0329
        gbc.setState(0xa523, 0x5471, 0xe240, 0xdf3, 0xde35, 0x7fa3, 0x0, 0x1);
        gbc.writeMem(0xa523, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x5471);
        EXPECT(gbc.pc(), 0xa525);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa523), 0xcb);
        EXPECT(gbc.readMem(0xa524), 0xfa);
        // CB FA 032A
        gbc.setState(0x6225, 0x580b, 0xb570, 0x1ba8, 0x83d, 0x5318, 0x0, 0x0);
        gbc.writeMem(0x6225, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x580b);
        EXPECT(gbc.pc(), 0x6227);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FA 032B
        gbc.setState(0xe8c1, 0xb5f, 0x39f0, 0xa3ed, 0xfd27, 0x626c, 0x1, 0x1);
        gbc.writeMem(0xe8c1, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xb5f);
        EXPECT(gbc.pc(), 0xe8c3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe8c1), 0xcb);
        EXPECT(gbc.readMem(0xe8c2), 0xfa);
        // CB FA 032C
        gbc.setState(0xd20f, 0x9444, 0x4a00, 0x17b5, 0x5f25, 0xf255, 0x0, 0x1);
        gbc.writeMem(0xd20f, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x9444);
        EXPECT(gbc.pc(), 0xd211);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd20f), 0xcb);
        EXPECT(gbc.readMem(0xd210), 0xfa);
        // CB FA 032D
        gbc.setState(0x4fd1, 0xae33, 0xc500, 0x9e63, 0x8601, 0x8dff, 0x0, 0x1);
        gbc.writeMem(0x4fd1, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0xae33);
        EXPECT(gbc.pc(), 0x4fd3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FA 032E
        gbc.setState(0xad18, 0xb5aa, 0xec60, 0x41a3, 0xde48, 0x3c93, 0x0, 0x1);
        gbc.writeMem(0xad18, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0xb5aa);
        EXPECT(gbc.pc(), 0xad1a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xad18), 0xcb);
        EXPECT(gbc.readMem(0xad19), 0xfa);
        // CB FA 032F
        gbc.setState(0x936, 0x57d9, 0x7e20, 0xbe0e, 0xf2d9, 0x50f0, 0x1, 0x0);
        gbc.writeMem(0x936, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x57d9);
        EXPECT(gbc.pc(), 0x938);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FA 0330
        gbc.setState(0x84f0, 0x233e, 0x2ec0, 0x7d7, 0x50e4, 0x432e, 0x0, 0x1);
        gbc.writeMem(0x84f0, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x233e);
        EXPECT(gbc.pc(), 0x84f2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x84f0), 0xcb);
        EXPECT(gbc.readMem(0x84f1), 0xfa);
        // CB FA 0331
        gbc.setState(0x72fa, 0xda32, 0x5420, 0x6507, 0x84ba, 0xa32a, 0x0, 0x1);
        gbc.writeMem(0x72fa, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xda32);
        EXPECT(gbc.pc(), 0x72fc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FA 0332
        gbc.setState(0x8226, 0x364a, 0x7100, 0xd944, 0x21f9, 0xb8d4, 0x1, 0x1);
        gbc.writeMem(0x8226, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x364a);
        EXPECT(gbc.pc(), 0x8228);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8226), 0xcb);
        EXPECT(gbc.readMem(0x8227), 0xfa);
        // CB FA 0333
        gbc.setState(0xd42e, 0x8e4f, 0xc600, 0x407d, 0x4738, 0x3665, 0x1, 0x0);
        gbc.writeMem(0xd42e, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x8e4f);
        EXPECT(gbc.pc(), 0xd430);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd42e), 0xcb);
        EXPECT(gbc.readMem(0xd42f), 0xfa);
        // CB FA 0334
        gbc.setState(0xd910, 0xea32, 0x5c90, 0x7e95, 0x408, 0x105b, 0x1, 0x1);
        gbc.writeMem(0xd910, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0xea32);
        EXPECT(gbc.pc(), 0xd912);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd910), 0xcb);
        EXPECT(gbc.readMem(0xd911), 0xfa);
        // CB FA 0335
        gbc.setState(0xd80e, 0xb41f, 0x7da0, 0xc8d1, 0x30b6, 0xdeb0, 0x0, 0x0);
        gbc.writeMem(0xd80e, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xb41f);
        EXPECT(gbc.pc(), 0xd810);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd80e), 0xcb);
        EXPECT(gbc.readMem(0xd80f), 0xfa);
        // CB FA 0336
        gbc.setState(0x489d, 0xad86, 0x390, 0xa569, 0xacc9, 0x3ba5, 0x1, 0x0);
        gbc.writeMem(0x489d, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xad86);
        EXPECT(gbc.pc(), 0x489f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FA 0337
        gbc.setState(0x885, 0x3e82, 0x6480, 0xf11b, 0x3469, 0x8e7c, 0x1, 0x0);
        gbc.writeMem(0x885, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x3e82);
        EXPECT(gbc.pc(), 0x887);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FA 0338
        gbc.setState(0x1df1, 0x561a, 0xab20, 0xbfbe, 0x3de1, 0xbb2e, 0x1, 0x1);
        gbc.writeMem(0x1df1, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x561a);
        EXPECT(gbc.pc(), 0x1df3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FA 0339
        gbc.setState(0x2959, 0x52b5, 0x19c0, 0xd32f, 0x24ef, 0xdd, 0x1, 0x0);
        gbc.writeMem(0x2959, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x52b5);
        EXPECT(gbc.pc(), 0x295b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FA 033A
        gbc.setState(0x6225, 0x7b9b, 0x7b30, 0x1e08, 0xce14, 0x7b88, 0x0, 0x1);
        gbc.writeMem(0x6225, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x7b9b);
        EXPECT(gbc.pc(), 0x6227);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FA 033B
        gbc.setState(0x1258, 0x2459, 0xc250, 0x4b5, 0xc957, 0xf639, 0x0, 0x0);
        gbc.writeMem(0x1258, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x2459);
        EXPECT(gbc.pc(), 0x125a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FA 033D
        gbc.setState(0x4ba9, 0x387a, 0x2ae0, 0xbeed, 0x7ee, 0x7bb2, 0x0, 0x1);
        gbc.writeMem(0x4ba9, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x387a);
        EXPECT(gbc.pc(), 0x4bab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FA 033E
        gbc.setState(0xaf5b, 0xa1df, 0xcd70, 0x59ab, 0xe5cf, 0xf2ae, 0x0, 0x1);
        gbc.writeMem(0xaf5b, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0xa1df);
        EXPECT(gbc.pc(), 0xaf5d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaf5b), 0xcb);
        EXPECT(gbc.readMem(0xaf5c), 0xfa);
        // CB FA 033F
        gbc.setState(0x97b1, 0xbcf8, 0x2a50, 0x15ac, 0x1ef0, 0x3b36, 0x0, 0x0);
        gbc.writeMem(0x97b1, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0xbcf8);
        EXPECT(gbc.pc(), 0x97b3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x97b1), 0xcb);
        EXPECT(gbc.readMem(0x97b2), 0xfa);
        // CB FA 0340
        gbc.setState(0xaf9c, 0xacae, 0xb0b0, 0x9b65, 0xf85f, 0x80eb, 0x1, 0x0);
        gbc.writeMem(0xaf9c, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0xacae);
        EXPECT(gbc.pc(), 0xaf9e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaf9c), 0xcb);
        EXPECT(gbc.readMem(0xaf9d), 0xfa);
        // CB FA 0341
        gbc.setState(0x4cd5, 0x7dd8, 0x4590, 0x9be8, 0xd635, 0xc9c9, 0x1, 0x0);
        gbc.writeMem(0x4cd5, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x7dd8);
        EXPECT(gbc.pc(), 0x4cd7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FA 0342
        gbc.setState(0x39e2, 0xbbbb, 0x4ef0, 0x83b7, 0xe992, 0xb35b, 0x0, 0x1);
        gbc.writeMem(0x39e2, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0xbbbb);
        EXPECT(gbc.pc(), 0x39e4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FA 0343
        gbc.setState(0x7777, 0x20e3, 0x1440, 0x2412, 0x96b8, 0x6bac, 0x0, 0x1);
        gbc.writeMem(0x7777, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x20e3);
        EXPECT(gbc.pc(), 0x7779);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FA 0344
        gbc.setState(0x9748, 0x5a94, 0x2b60, 0x3041, 0x373c, 0x8212, 0x0, 0x1);
        gbc.writeMem(0x9748, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x5a94);
        EXPECT(gbc.pc(), 0x974a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9748), 0xcb);
        EXPECT(gbc.readMem(0x9749), 0xfa);
        // CB FA 0345
        gbc.setState(0xdee1, 0xb22d, 0xe6d0, 0xf8cd, 0x368d, 0x3898, 0x1, 0x0);
        gbc.writeMem(0xdee1, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xb22d);
        EXPECT(gbc.pc(), 0xdee3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdee1), 0xcb);
        EXPECT(gbc.readMem(0xdee2), 0xfa);
        // CB FA 0346
        gbc.setState(0x8dd, 0xe98e, 0x120, 0xbe8a, 0xe488, 0xc57a, 0x1, 0x1);
        gbc.writeMem(0x8dd, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xe98e);
        EXPECT(gbc.pc(), 0x8df);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FA 0347
        gbc.setState(0x6e45, 0xc6cd, 0x8a80, 0xea63, 0x6e05, 0x377b, 0x1, 0x1);
        gbc.writeMem(0x6e45, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0xc6cd);
        EXPECT(gbc.pc(), 0x6e47);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FA 0348
        gbc.setState(0x6f32, 0x696a, 0xf020, 0xd1ca, 0xe3dd, 0x1226, 0x1, 0x1);
        gbc.writeMem(0x6f32, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x696a);
        EXPECT(gbc.pc(), 0x6f34);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FA 0349
        gbc.setState(0x513a, 0x3cc9, 0x56f0, 0xaf27, 0x3423, 0x7ffd, 0x1, 0x1);
        gbc.writeMem(0x513a, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x3cc9);
        EXPECT(gbc.pc(), 0x513c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FA 034A
        gbc.setState(0x992, 0x7973, 0xd550, 0x1711, 0x2840, 0x3122, 0x0, 0x1);
        gbc.writeMem(0x992, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x7973);
        EXPECT(gbc.pc(), 0x994);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FA 034B
        gbc.setState(0x8660, 0x475b, 0x6920, 0x1466, 0xfd1d, 0x8435, 0x0, 0x0);
        gbc.writeMem(0x8660, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x475b);
        EXPECT(gbc.pc(), 0x8662);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8660), 0xcb);
        EXPECT(gbc.readMem(0x8661), 0xfa);
        // CB FA 034C
        gbc.setState(0x4a3d, 0xb021, 0x2570, 0x289f, 0xff06, 0x46c3, 0x0, 0x0);
        gbc.writeMem(0x4a3d, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xb021);
        EXPECT(gbc.pc(), 0x4a3f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FA 034D
        gbc.setState(0xdf53, 0x239d, 0xe400, 0xfb2c, 0xdd14, 0x86f8, 0x0, 0x0);
        gbc.writeMem(0xdf53, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x239d);
        EXPECT(gbc.pc(), 0xdf55);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdf53), 0xcb);
        EXPECT(gbc.readMem(0xdf54), 0xfa);
        // CB FA 034E
        gbc.setState(0x5b7c, 0x39d8, 0xea40, 0xe930, 0x4858, 0x25ea, 0x1, 0x0);
        gbc.writeMem(0x5b7c, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x39d8);
        EXPECT(gbc.pc(), 0x5b7e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FA 034F
        gbc.setState(0x8e9b, 0x1711, 0xd590, 0x53b9, 0xdc83, 0x800a, 0x1, 0x1);
        gbc.writeMem(0x8e9b, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x1711);
        EXPECT(gbc.pc(), 0x8e9d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8e9b), 0xcb);
        EXPECT(gbc.readMem(0x8e9c), 0xfa);
        // CB FA 0350
        gbc.setState(0x144a, 0x2271, 0xded0, 0xc164, 0xf78e, 0xc301, 0x0, 0x1);
        gbc.writeMem(0x144a, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x2271);
        EXPECT(gbc.pc(), 0x144c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FA 0351
        gbc.setState(0xd068, 0xe74d, 0xf370, 0x32fc, 0x7a45, 0xd2b6, 0x0, 0x1);
        gbc.writeMem(0xd068, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xe74d);
        EXPECT(gbc.pc(), 0xd06a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd068), 0xcb);
        EXPECT(gbc.readMem(0xd069), 0xfa);
        // CB FA 0353
        gbc.setState(0xa684, 0x218a, 0x6290, 0x12b2, 0x9743, 0xf51, 0x0, 0x0);
        gbc.writeMem(0xa684, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x218a);
        EXPECT(gbc.pc(), 0xa686);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa684), 0xcb);
        EXPECT(gbc.readMem(0xa685), 0xfa);
        // CB FA 0354
        gbc.setState(0x8808, 0x2e36, 0x1c40, 0x7a86, 0x5a20, 0xe703, 0x0, 0x0);
        gbc.writeMem(0x8808, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x2e36);
        EXPECT(gbc.pc(), 0x880a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8808), 0xcb);
        EXPECT(gbc.readMem(0x8809), 0xfa);
        // CB FA 0356
        gbc.setState(0xbc4a, 0x1c5c, 0xf450, 0xff90, 0x9e5a, 0x382b, 0x0, 0x0);
        gbc.writeMem(0xbc4a, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x1c5c);
        EXPECT(gbc.pc(), 0xbc4c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbc4a), 0xcb);
        EXPECT(gbc.readMem(0xbc4b), 0xfa);
        // CB FA 0357
        gbc.setState(0xce14, 0xe167, 0x5160, 0xfe64, 0xa0e0, 0x9686, 0x1, 0x1);
        gbc.writeMem(0xce14, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0xe167);
        EXPECT(gbc.pc(), 0xce16);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xce14), 0xcb);
        EXPECT(gbc.readMem(0xce15), 0xfa);
        // CB FA 0359
        gbc.setState(0xbb51, 0xfed5, 0x30a0, 0x9789, 0x9b38, 0x85e, 0x0, 0x1);
        gbc.writeMem(0xbb51, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0xfed5);
        EXPECT(gbc.pc(), 0xbb53);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbb51), 0xcb);
        EXPECT(gbc.readMem(0xbb52), 0xfa);
        // CB FA 035B
        gbc.setState(0x475b, 0xa85, 0x5930, 0x22d4, 0xd25e, 0x870, 0x0, 0x0);
        gbc.writeMem(0x475b, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0xa85);
        EXPECT(gbc.pc(), 0x475d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FA 035D
        gbc.setState(0x4c3, 0x9b02, 0xc050, 0x2cdd, 0x752a, 0xb532, 0x1, 0x1);
        gbc.writeMem(0x4c3, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x9b02);
        EXPECT(gbc.pc(), 0x4c5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FA 035F
        gbc.setState(0xedcf, 0x6aeb, 0xbcd0, 0xa4ab, 0xc348, 0x6752, 0x1, 0x1);
        gbc.writeMem(0xedcf, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x6aeb);
        EXPECT(gbc.pc(), 0xedd1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xedcf), 0xcb);
        EXPECT(gbc.readMem(0xedd0), 0xfa);
        // CB FA 0360
        gbc.setState(0x5fd, 0xb6c2, 0x5410, 0xe77a, 0x4dfa, 0xbd85, 0x0, 0x1);
        gbc.writeMem(0x5fd, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0xb6c2);
        EXPECT(gbc.pc(), 0x5ff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FA 0361
        gbc.setState(0xa07a, 0xf903, 0xd830, 0x6a58, 0xdfc8, 0x8afe, 0x0, 0x1);
        gbc.writeMem(0xa07a, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0xf903);
        EXPECT(gbc.pc(), 0xa07c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa07a), 0xcb);
        EXPECT(gbc.readMem(0xa07b), 0xfa);
        // CB FA 0362
        gbc.setState(0x6125, 0x874e, 0x7b60, 0xffe0, 0xc10, 0x92c7, 0x1, 0x0);
        gbc.writeMem(0x6125, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x874e);
        EXPECT(gbc.pc(), 0x6127);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FA 0363
        gbc.setState(0xecef, 0x3c2e, 0xff20, 0xa707, 0xf035, 0x703a, 0x1, 0x0);
        gbc.writeMem(0xecef, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x3c2e);
        EXPECT(gbc.pc(), 0xecf1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xecef), 0xcb);
        EXPECT(gbc.readMem(0xecf0), 0xfa);
        // CB FA 0364
        gbc.setState(0x600c, 0xde8b, 0x8e0, 0xe81a, 0xe99, 0x861f, 0x1, 0x0);
        gbc.writeMem(0x600c, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0xde8b);
        EXPECT(gbc.pc(), 0x600e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FA 0365
        gbc.setState(0x6370, 0xb110, 0x9cd0, 0xe9c8, 0xfdf8, 0xaa0d, 0x0, 0x0);
        gbc.writeMem(0x6370, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0xb110);
        EXPECT(gbc.pc(), 0x6372);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FA 0366
        gbc.setState(0x25a3, 0x4ef7, 0x130, 0x2b3e, 0x933b, 0xc90e, 0x0, 0x0);
        gbc.writeMem(0x25a3, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x4ef7);
        EXPECT(gbc.pc(), 0x25a5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FA 0367
        gbc.setState(0x63c8, 0x73b9, 0x6210, 0xfc3d, 0xa011, 0xc744, 0x1, 0x0);
        gbc.writeMem(0x63c8, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x73b9);
        EXPECT(gbc.pc(), 0x63ca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FA 0368
        gbc.setState(0xdb03, 0x8f6, 0x52b0, 0x90b7, 0x4cb0, 0x3bbd, 0x0, 0x1);
        gbc.writeMem(0xdb03, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x8f6);
        EXPECT(gbc.pc(), 0xdb05);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdb03), 0xcb);
        EXPECT(gbc.readMem(0xdb04), 0xfa);
        // CB FA 0369
        gbc.setState(0x82da, 0x35ad, 0x9b10, 0xd4cf, 0x65b5, 0x84f6, 0x0, 0x1);
        gbc.writeMem(0x82da, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x35ad);
        EXPECT(gbc.pc(), 0x82dc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x82da), 0xcb);
        EXPECT(gbc.readMem(0x82db), 0xfa);
        // CB FA 036A
        gbc.setState(0xc0a6, 0xd508, 0xbe70, 0x2485, 0x2733, 0x1905, 0x0, 0x1);
        gbc.writeMem(0xc0a6, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0xd508);
        EXPECT(gbc.pc(), 0xc0a8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc0a6), 0xcb);
        EXPECT(gbc.readMem(0xc0a7), 0xfa);
        // CB FA 036B
        gbc.setState(0xac7e, 0x7f9d, 0x1190, 0x941, 0x9aa, 0x48cf, 0x0, 0x0);
        gbc.writeMem(0xac7e, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x7f9d);
        EXPECT(gbc.pc(), 0xac80);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xac7e), 0xcb);
        EXPECT(gbc.readMem(0xac7f), 0xfa);
        // CB FA 036C
        gbc.setState(0x61c2, 0x6df0, 0xa170, 0x58fb, 0xcc5d, 0x38c9, 0x0, 0x0);
        gbc.writeMem(0x61c2, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x6df0);
        EXPECT(gbc.pc(), 0x61c4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FA 036D
        gbc.setState(0x2c77, 0xc3f8, 0x6870, 0x3e0b, 0x7db0, 0xe7d2, 0x1, 0x0);
        gbc.writeMem(0x2c77, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0xc3f8);
        EXPECT(gbc.pc(), 0x2c79);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FA 036E
        gbc.setState(0x7281, 0x8682, 0x6d70, 0x6b97, 0xcc8a, 0xfaeb, 0x1, 0x1);
        gbc.writeMem(0x7281, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x8682);
        EXPECT(gbc.pc(), 0x7283);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FA 036F
        gbc.setState(0xdf3f, 0xffa9, 0x7ee0, 0xcc22, 0x2e74, 0xdce6, 0x0, 0x0);
        gbc.writeMem(0xdf3f, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xffa9);
        EXPECT(gbc.pc(), 0xdf41);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdf3f), 0xcb);
        EXPECT(gbc.readMem(0xdf40), 0xfa);
        // CB FA 0370
        gbc.setState(0x5808, 0xc429, 0xa780, 0xdb13, 0xd59b, 0x1d0c, 0x1, 0x1);
        gbc.writeMem(0x5808, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xc429);
        EXPECT(gbc.pc(), 0x580a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FA 0371
        gbc.setState(0xa0e7, 0x6723, 0x45a0, 0x831d, 0x5c53, 0xd09c, 0x0, 0x1);
        gbc.writeMem(0xa0e7, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x6723);
        EXPECT(gbc.pc(), 0xa0e9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa0e7), 0xcb);
        EXPECT(gbc.readMem(0xa0e8), 0xfa);
        // CB FA 0372
        gbc.setState(0xa018, 0xdffe, 0x9cc0, 0x6330, 0xf7a, 0xda89, 0x0, 0x1);
        gbc.writeMem(0xa018, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0xdffe);
        EXPECT(gbc.pc(), 0xa01a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa018), 0xcb);
        EXPECT(gbc.readMem(0xa019), 0xfa);
        // CB FA 0373
        gbc.setState(0x8a98, 0xbe5a, 0xf720, 0xd04a, 0x614b, 0x2e2, 0x1, 0x0);
        gbc.writeMem(0x8a98, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0xbe5a);
        EXPECT(gbc.pc(), 0x8a9a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8a98), 0xcb);
        EXPECT(gbc.readMem(0x8a99), 0xfa);
        // CB FA 0374
        gbc.setState(0xa379, 0xcca1, 0xc090, 0xd95, 0x5666, 0x103f, 0x1, 0x1);
        gbc.writeMem(0xa379, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xcca1);
        EXPECT(gbc.pc(), 0xa37b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa379), 0xcb);
        EXPECT(gbc.readMem(0xa37a), 0xfa);
        // CB FA 0375
        gbc.setState(0xed0c, 0xe6fb, 0x16a0, 0x9be1, 0xed1, 0x23fc, 0x1, 0x0);
        gbc.writeMem(0xed0c, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0xe6fb);
        EXPECT(gbc.pc(), 0xed0e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xed0c), 0xcb);
        EXPECT(gbc.readMem(0xed0d), 0xfa);
        // CB FA 0376
        gbc.setState(0xbe76, 0x9cfc, 0xaab0, 0xa566, 0x2e85, 0xbbee, 0x1, 0x1);
        gbc.writeMem(0xbe76, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x9cfc);
        EXPECT(gbc.pc(), 0xbe78);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbe76), 0xcb);
        EXPECT(gbc.readMem(0xbe77), 0xfa);
        // CB FA 0377
        gbc.setState(0xe887, 0x6875, 0xd200, 0xeeea, 0xb5e7, 0xcee6, 0x1, 0x0);
        gbc.writeMem(0xe887, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x6875);
        EXPECT(gbc.pc(), 0xe889);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe887), 0xcb);
        EXPECT(gbc.readMem(0xe888), 0xfa);
        // CB FA 0378
        gbc.setState(0x1c3b, 0xeca9, 0x3c00, 0x8128, 0x8a46, 0xb5d9, 0x0, 0x0);
        gbc.writeMem(0x1c3b, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0xeca9);
        EXPECT(gbc.pc(), 0x1c3d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FA 0379
        gbc.setState(0x7087, 0xdb1a, 0x3500, 0x266a, 0x8e5b, 0x8f1, 0x1, 0x1);
        gbc.writeMem(0x7087, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0xdb1a);
        EXPECT(gbc.pc(), 0x7089);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FA 037A
        gbc.setState(0x3335, 0x22df, 0xc8a0, 0x401d, 0xaf24, 0xa569, 0x1, 0x1);
        gbc.writeMem(0x3335, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x22df);
        EXPECT(gbc.pc(), 0x3337);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FA 037B
        gbc.setState(0xd10e, 0xd613, 0x1010, 0x17fa, 0xc01f, 0x705b, 0x0, 0x0);
        gbc.writeMem(0xd10e, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0xd613);
        EXPECT(gbc.pc(), 0xd110);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd10e), 0xcb);
        EXPECT(gbc.readMem(0xd10f), 0xfa);
        // CB FA 037C
        gbc.setState(0x407d, 0x1cdd, 0xefb0, 0xf833, 0x959b, 0x3c4f, 0x0, 0x0);
        gbc.writeMem(0x407d, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x1cdd);
        EXPECT(gbc.pc(), 0x407f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FA 037D
        gbc.setState(0xc36a, 0xd247, 0x8b10, 0x8130, 0xcee4, 0xf3c9, 0x1, 0x1);
        gbc.writeMem(0xc36a, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0xd247);
        EXPECT(gbc.pc(), 0xc36c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc36a), 0xcb);
        EXPECT(gbc.readMem(0xc36b), 0xfa);
        // CB FA 037E
        gbc.setState(0x6b46, 0xc69b, 0xe7e0, 0x5f41, 0x23be, 0x3e6b, 0x0, 0x1);
        gbc.writeMem(0x6b46, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0xc69b);
        EXPECT(gbc.pc(), 0x6b48);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FA 037F
        gbc.setState(0x4fed, 0x4617, 0x33b0, 0xccd4, 0xfd86, 0x5981, 0x1, 0x1);
        gbc.writeMem(0x4fed, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x4617);
        EXPECT(gbc.pc(), 0x4fef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FA 0380
        gbc.setState(0xca82, 0x81bf, 0x1850, 0x546c, 0xcf8b, 0x8abc, 0x1, 0x0);
        gbc.writeMem(0xca82, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x81bf);
        EXPECT(gbc.pc(), 0xca84);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xca82), 0xcb);
        EXPECT(gbc.readMem(0xca83), 0xfa);
        // CB FA 0381
        gbc.setState(0x9a2a, 0x70a, 0x2690, 0xcefc, 0x2a99, 0x54af, 0x0, 0x0);
        gbc.writeMem(0x9a2a, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x70a);
        EXPECT(gbc.pc(), 0x9a2c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9a2a), 0xcb);
        EXPECT(gbc.readMem(0x9a2b), 0xfa);
        // CB FA 0382
        gbc.setState(0xc812, 0x9af8, 0x150, 0x8eab, 0xeda2, 0xdad1, 0x1, 0x0);
        gbc.writeMem(0xc812, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x9af8);
        EXPECT(gbc.pc(), 0xc814);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc812), 0xcb);
        EXPECT(gbc.readMem(0xc813), 0xfa);
        // CB FA 0383
        gbc.setState(0x1484, 0x44a0, 0xb710, 0x3d1c, 0x6edb, 0xa3b5, 0x1, 0x1);
        gbc.writeMem(0x1484, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x44a0);
        EXPECT(gbc.pc(), 0x1486);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FA 0384
        gbc.setState(0x61c8, 0x2699, 0xb490, 0xe136, 0x951c, 0xff6d, 0x0, 0x1);
        gbc.writeMem(0x61c8, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x2699);
        EXPECT(gbc.pc(), 0x61ca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FA 0385
        gbc.setState(0x21a0, 0x1367, 0x8a0, 0xcf27, 0xf08e, 0x689a, 0x1, 0x0);
        gbc.writeMem(0x21a0, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x1367);
        EXPECT(gbc.pc(), 0x21a2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FA 0386
        gbc.setState(0xdcd7, 0x1bae, 0x3c90, 0x398b, 0xdb2d, 0x9c4a, 0x1, 0x1);
        gbc.writeMem(0xdcd7, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x1bae);
        EXPECT(gbc.pc(), 0xdcd9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdcd7), 0xcb);
        EXPECT(gbc.readMem(0xdcd8), 0xfa);
        // CB FA 0388
        gbc.setState(0x41a6, 0xac58, 0xd1c0, 0xf0cb, 0xc58e, 0x95bf, 0x1, 0x1);
        gbc.writeMem(0x41a6, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0xac58);
        EXPECT(gbc.pc(), 0x41a8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FA 0389
        gbc.setState(0xd9f8, 0x364c, 0xb120, 0xf0d5, 0x82ee, 0x9f0a, 0x1, 0x1);
        gbc.writeMem(0xd9f8, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x364c);
        EXPECT(gbc.pc(), 0xd9fa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd9f8), 0xcb);
        EXPECT(gbc.readMem(0xd9f9), 0xfa);
        // CB FA 038A
        gbc.setState(0x3ae4, 0xc5d6, 0x4c90, 0x2181, 0x21d2, 0x946c, 0x1, 0x0);
        gbc.writeMem(0x3ae4, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xc5d6);
        EXPECT(gbc.pc(), 0x3ae6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FA 038B
        gbc.setState(0x7b91, 0x2558, 0x1d10, 0x94c0, 0x7fe0, 0x50a, 0x0, 0x0);
        gbc.writeMem(0x7b91, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x2558);
        EXPECT(gbc.pc(), 0x7b93);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FA 038C
        gbc.setState(0xc06a, 0x1f08, 0xc1a0, 0x3138, 0xe0cb, 0x973b, 0x0, 0x1);
        gbc.writeMem(0xc06a, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x1f08);
        EXPECT(gbc.pc(), 0xc06c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc06a), 0xcb);
        EXPECT(gbc.readMem(0xc06b), 0xfa);
        // CB FA 038D
        gbc.setState(0xdebd, 0xc439, 0x73c0, 0x8795, 0x8644, 0xe8ad, 0x1, 0x0);
        gbc.writeMem(0xdebd, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0xc439);
        EXPECT(gbc.pc(), 0xdebf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdebd), 0xcb);
        EXPECT(gbc.readMem(0xdebe), 0xfa);
        // CB FA 038E
        gbc.setState(0xefca, 0x8059, 0xbf60, 0xabae, 0xbcef, 0xf3b3, 0x0, 0x1);
        gbc.writeMem(0xefca, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x8059);
        EXPECT(gbc.pc(), 0xefcc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xefca), 0xcb);
        EXPECT(gbc.readMem(0xefcb), 0xfa);
        // CB FA 038F
        gbc.setState(0x9845, 0xbae9, 0xe720, 0x530f, 0xb192, 0x1cf, 0x0, 0x1);
        gbc.writeMem(0x9845, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0xbae9);
        EXPECT(gbc.pc(), 0x9847);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9845), 0xcb);
        EXPECT(gbc.readMem(0x9846), 0xfa);
        // CB FA 0390
        gbc.setState(0x981a, 0xd788, 0x86f0, 0x6996, 0xf682, 0x50f6, 0x1, 0x1);
        gbc.writeMem(0x981a, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0xd788);
        EXPECT(gbc.pc(), 0x981c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x981a), 0xcb);
        EXPECT(gbc.readMem(0x981b), 0xfa);
        // CB FA 0391
        gbc.setState(0xc71, 0x9e87, 0x8b10, 0xc9c8, 0x2755, 0x2a4f, 0x0, 0x1);
        gbc.writeMem(0xc71, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x9e87);
        EXPECT(gbc.pc(), 0xc73);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FA 0392
        gbc.setState(0xbb17, 0xd911, 0x1770, 0x5cb8, 0xebbd, 0xa48a, 0x0, 0x0);
        gbc.writeMem(0xbb17, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xd911);
        EXPECT(gbc.pc(), 0xbb19);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbb17), 0xcb);
        EXPECT(gbc.readMem(0xbb18), 0xfa);
        // CB FA 0393
        gbc.setState(0x956a, 0x62e5, 0xcba0, 0x14f8, 0xdd6b, 0xc45d, 0x1, 0x0);
        gbc.writeMem(0x956a, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x62e5);
        EXPECT(gbc.pc(), 0x956c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x956a), 0xcb);
        EXPECT(gbc.readMem(0x956b), 0xfa);
        // CB FA 0394
        gbc.setState(0x4fb6, 0x1c91, 0x6950, 0xbb78, 0xb674, 0x20de, 0x0, 0x1);
        gbc.writeMem(0x4fb6, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x1c91);
        EXPECT(gbc.pc(), 0x4fb8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FA 0395
        gbc.setState(0xbca0, 0xc435, 0xc4f0, 0xff6a, 0x4ba8, 0x7771, 0x0, 0x1);
        gbc.writeMem(0xbca0, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xc435);
        EXPECT(gbc.pc(), 0xbca2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbca0), 0xcb);
        EXPECT(gbc.readMem(0xbca1), 0xfa);
        // CB FA 0396
        gbc.setState(0x2b6e, 0xf2c6, 0x9600, 0x30e6, 0x96cb, 0x5eb2, 0x0, 0x1);
        gbc.writeMem(0x2b6e, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0xf2c6);
        EXPECT(gbc.pc(), 0x2b70);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FA 0397
        gbc.setState(0x5f77, 0x4ba2, 0x3790, 0x8b8a, 0x2bbb, 0xc08c, 0x0, 0x1);
        gbc.writeMem(0x5f77, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x4ba2);
        EXPECT(gbc.pc(), 0x5f79);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FA 0398
        gbc.setState(0xbc2a, 0x6120, 0x7750, 0xf57, 0xfd76, 0xb1ba, 0x1, 0x0);
        gbc.writeMem(0xbc2a, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x6120);
        EXPECT(gbc.pc(), 0xbc2c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbc2a), 0xcb);
        EXPECT(gbc.readMem(0xbc2b), 0xfa);
        // CB FA 0399
        gbc.setState(0xb001, 0x8b2f, 0x88f0, 0x4143, 0xcf35, 0x968b, 0x1, 0x1);
        gbc.writeMem(0xb001, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x8b2f);
        EXPECT(gbc.pc(), 0xb003);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb001), 0xcb);
        EXPECT(gbc.readMem(0xb002), 0xfa);
        // CB FA 039B
        gbc.setState(0x96d3, 0x23e7, 0xcd00, 0xe7ac, 0xd8bc, 0x2f37, 0x1, 0x0);
        gbc.writeMem(0x96d3, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x23e7);
        EXPECT(gbc.pc(), 0x96d5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x96d3), 0xcb);
        EXPECT(gbc.readMem(0x96d4), 0xfa);
        // CB FA 039C
        gbc.setState(0x8fd0, 0x32dd, 0xbfd0, 0x8f02, 0xf65c, 0x19f2, 0x1, 0x0);
        gbc.writeMem(0x8fd0, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x32dd);
        EXPECT(gbc.pc(), 0x8fd2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8fd0), 0xcb);
        EXPECT(gbc.readMem(0x8fd1), 0xfa);
        // CB FA 039D
        gbc.setState(0x9d33, 0xd8d5, 0x1500, 0x8383, 0x4c36, 0xcea0, 0x0, 0x0);
        gbc.writeMem(0x9d33, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xd8d5);
        EXPECT(gbc.pc(), 0x9d35);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9d33), 0xcb);
        EXPECT(gbc.readMem(0x9d34), 0xfa);
        // CB FA 039E
        gbc.setState(0xc085, 0xab0e, 0xc880, 0xfcd6, 0x811d, 0x316a, 0x1, 0x1);
        gbc.writeMem(0xc085, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xab0e);
        EXPECT(gbc.pc(), 0xc087);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc085), 0xcb);
        EXPECT(gbc.readMem(0xc086), 0xfa);
        // CB FA 039F
        gbc.setState(0x9f8f, 0x374d, 0x9590, 0x4cf5, 0xe2e6, 0xf21a, 0x1, 0x1);
        gbc.writeMem(0x9f8f, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x374d);
        EXPECT(gbc.pc(), 0x9f91);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9f8f), 0xcb);
        EXPECT(gbc.readMem(0x9f90), 0xfa);
        // CB FA 03A1
        gbc.setState(0x6623, 0xb644, 0xd080, 0xac72, 0x6099, 0xcea0, 0x0, 0x1);
        gbc.writeMem(0x6623, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xb644);
        EXPECT(gbc.pc(), 0x6625);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FA 03A2
        gbc.setState(0xaba4, 0xe1bb, 0xc1c0, 0x878c, 0xb3e6, 0xb8a5, 0x0, 0x1);
        gbc.writeMem(0xaba4, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xe1bb);
        EXPECT(gbc.pc(), 0xaba6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaba4), 0xcb);
        EXPECT(gbc.readMem(0xaba5), 0xfa);
        // CB FA 03A3
        gbc.setState(0xb33f, 0x8081, 0xedd0, 0x631b, 0x77e6, 0x34b5, 0x0, 0x1);
        gbc.writeMem(0xb33f, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x8081);
        EXPECT(gbc.pc(), 0xb341);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb33f), 0xcb);
        EXPECT(gbc.readMem(0xb340), 0xfa);
        // CB FA 03A5
        gbc.setState(0x6dfa, 0xf101, 0x9ba0, 0xbdd4, 0x207, 0xe282, 0x0, 0x0);
        gbc.writeMem(0x6dfa, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0xf101);
        EXPECT(gbc.pc(), 0x6dfc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FA 03A6
        gbc.setState(0x471e, 0x68f0, 0xa20, 0xf8ba, 0xf039, 0x3fd3, 0x0, 0x1);
        gbc.writeMem(0x471e, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x68f0);
        EXPECT(gbc.pc(), 0x4720);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FA 03A7
        gbc.setState(0x40cc, 0xbe35, 0xf9c0, 0xcb32, 0x3451, 0x27f3, 0x1, 0x0);
        gbc.writeMem(0x40cc, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0xbe35);
        EXPECT(gbc.pc(), 0x40ce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FA 03A8
        gbc.setState(0x860e, 0xdd6a, 0x4e0, 0x8e65, 0x76be, 0x7be1, 0x0, 0x0);
        gbc.writeMem(0x860e, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xdd6a);
        EXPECT(gbc.pc(), 0x8610);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x860e), 0xcb);
        EXPECT(gbc.readMem(0x860f), 0xfa);
        // CB FA 03AA
        gbc.setState(0x149d, 0xd827, 0x36d0, 0xe918, 0xd6cb, 0xfece, 0x1, 0x0);
        gbc.writeMem(0x149d, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0xd827);
        EXPECT(gbc.pc(), 0x149f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FA 03AB
        gbc.setState(0x5de5, 0x6280, 0x61e0, 0x2d97, 0xed9c, 0x6466, 0x0, 0x1);
        gbc.writeMem(0x5de5, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x6280);
        EXPECT(gbc.pc(), 0x5de7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FA 03AC
        gbc.setState(0xdee7, 0xb992, 0x1da0, 0xc80e, 0x1dde, 0xdd2f, 0x1, 0x0);
        gbc.writeMem(0xdee7, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xb992);
        EXPECT(gbc.pc(), 0xdee9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdee7), 0xcb);
        EXPECT(gbc.readMem(0xdee8), 0xfa);
        // CB FA 03AD
        gbc.setState(0x6e16, 0x2c0a, 0x5040, 0xe255, 0x9d64, 0xc948, 0x0, 0x0);
        gbc.writeMem(0x6e16, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x2c0a);
        EXPECT(gbc.pc(), 0x6e18);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FA 03AE
        gbc.setState(0x826f, 0x9905, 0x2b20, 0xbcdf, 0x236d, 0xa58b, 0x0, 0x1);
        gbc.writeMem(0x826f, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x9905);
        EXPECT(gbc.pc(), 0x8271);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x826f), 0xcb);
        EXPECT(gbc.readMem(0x8270), 0xfa);
        // CB FA 03AF
        gbc.setState(0x4f14, 0xc694, 0x59e0, 0x9c00, 0x82d6, 0x6967, 0x0, 0x0);
        gbc.writeMem(0x4f14, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0xc694);
        EXPECT(gbc.pc(), 0x4f16);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FA 03B0
        gbc.setState(0x9b1a, 0xc0fb, 0x2c50, 0x5ab3, 0x6b84, 0xe4b9, 0x0, 0x1);
        gbc.writeMem(0x9b1a, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0xc0fb);
        EXPECT(gbc.pc(), 0x9b1c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9b1a), 0xcb);
        EXPECT(gbc.readMem(0x9b1b), 0xfa);
        // CB FA 03B1
        gbc.setState(0x7c9d, 0x3f5f, 0x77c0, 0xf41d, 0xdc22, 0x3999, 0x0, 0x0);
        gbc.writeMem(0x7c9d, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x3f5f);
        EXPECT(gbc.pc(), 0x7c9f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FA 03B2
        gbc.setState(0x3d8, 0x3f4c, 0xbfe0, 0xebe1, 0x2c43, 0x3752, 0x0, 0x1);
        gbc.writeMem(0x3d8, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x3f4c);
        EXPECT(gbc.pc(), 0x3da);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FA 03B3
        gbc.setState(0xd7b0, 0x9a34, 0x43f0, 0xe2c, 0xfe97, 0x7660, 0x1, 0x1);
        gbc.writeMem(0xd7b0, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x9a34);
        EXPECT(gbc.pc(), 0xd7b2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd7b0), 0xcb);
        EXPECT(gbc.readMem(0xd7b1), 0xfa);
        // CB FA 03B5
        gbc.setState(0x16a0, 0x2438, 0x1500, 0xcd34, 0xc35, 0x3a00, 0x1, 0x1);
        gbc.writeMem(0x16a0, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x2438);
        EXPECT(gbc.pc(), 0x16a2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FA 03B6
        gbc.setState(0x538, 0x82b2, 0xc90, 0xa078, 0xd9b5, 0x632f, 0x0, 0x1);
        gbc.writeMem(0x538, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x82b2);
        EXPECT(gbc.pc(), 0x53a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FA 03B7
        gbc.setState(0x41d4, 0xb7b7, 0x41f0, 0xaa16, 0xb421, 0x89f, 0x0, 0x0);
        gbc.writeMem(0x41d4, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0xb7b7);
        EXPECT(gbc.pc(), 0x41d6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FA 03B8
        gbc.setState(0x4e6, 0x5601, 0xe1c0, 0x9408, 0x9da4, 0x3fb9, 0x0, 0x1);
        gbc.writeMem(0x4e6, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x5601);
        EXPECT(gbc.pc(), 0x4e8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FA 03B9
        gbc.setState(0x4f5c, 0x60a8, 0x69e0, 0xdebd, 0x76b7, 0x830c, 0x1, 0x1);
        gbc.writeMem(0x4f5c, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x60a8);
        EXPECT(gbc.pc(), 0x4f5e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FA 03BA
        gbc.setState(0x6727, 0x3edb, 0x3e90, 0x6a31, 0x8fae, 0x5afa, 0x1, 0x0);
        gbc.writeMem(0x6727, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x3edb);
        EXPECT(gbc.pc(), 0x6729);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FA 03BB
        gbc.setState(0x79d9, 0x6406, 0x9de0, 0xc27, 0x6280, 0xb190, 0x1, 0x1);
        gbc.writeMem(0x79d9, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x6406);
        EXPECT(gbc.pc(), 0x79db);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FA 03BC
        gbc.setState(0xc723, 0x707f, 0xbad0, 0x7457, 0x1ecc, 0xad52, 0x1, 0x1);
        gbc.writeMem(0xc723, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x707f);
        EXPECT(gbc.pc(), 0xc725);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc723), 0xcb);
        EXPECT(gbc.readMem(0xc724), 0xfa);
        // CB FA 03BE
        gbc.setState(0x485, 0x867f, 0x3cc0, 0xa333, 0xf1e, 0x4c76, 0x0, 0x0);
        gbc.writeMem(0x485, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x867f);
        EXPECT(gbc.pc(), 0x487);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FA 03BF
        gbc.setState(0x246c, 0xe8c0, 0xa90, 0x198e, 0xebd8, 0x67ed, 0x1, 0x0);
        gbc.writeMem(0x246c, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0xe8c0);
        EXPECT(gbc.pc(), 0x246e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FA 03C0
        gbc.setState(0xe4c, 0x73e7, 0x65c0, 0xb06e, 0x257f, 0xb2dc, 0x0, 0x0);
        gbc.writeMem(0xe4c, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x73e7);
        EXPECT(gbc.pc(), 0xe4e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FA 03C1
        gbc.setState(0x617d, 0xa6d1, 0x2b60, 0x91b6, 0x5be9, 0xa3e7, 0x0, 0x0);
        gbc.writeMem(0x617d, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xa6d1);
        EXPECT(gbc.pc(), 0x617f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FA 03C2
        gbc.setState(0x3c65, 0x22e3, 0xbd00, 0xb8ba, 0xe110, 0xba3, 0x1, 0x1);
        gbc.writeMem(0x3c65, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x22e3);
        EXPECT(gbc.pc(), 0x3c67);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FA 03C3
        gbc.setState(0x7944, 0xba97, 0x6db0, 0x2934, 0x1192, 0xe84d, 0x0, 0x0);
        gbc.writeMem(0x7944, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0xba97);
        EXPECT(gbc.pc(), 0x7946);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FA 03C4
        gbc.setState(0xcfb1, 0xf093, 0xb230, 0x1c33, 0x5740, 0x136f, 0x1, 0x1);
        gbc.writeMem(0xcfb1, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0xf093);
        EXPECT(gbc.pc(), 0xcfb3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcfb1), 0xcb);
        EXPECT(gbc.readMem(0xcfb2), 0xfa);
        // CB FA 03C5
        gbc.setState(0x6156, 0xe2af, 0xfaf0, 0xc9f, 0xc558, 0xd646, 0x0, 0x0);
        gbc.writeMem(0x6156, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0xe2af);
        EXPECT(gbc.pc(), 0x6158);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FA 03C6
        gbc.setState(0x61c9, 0x3112, 0xe630, 0x160a, 0x9fca, 0xaf7a, 0x1, 0x1);
        gbc.writeMem(0x61c9, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x3112);
        EXPECT(gbc.pc(), 0x61cb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FA 03C7
        gbc.setState(0x3c88, 0x4779, 0xd0d0, 0x61e3, 0x5263, 0x57a3, 0x1, 0x1);
        gbc.writeMem(0x3c88, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x4779);
        EXPECT(gbc.pc(), 0x3c8a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FA 03C8
        gbc.setState(0xcc0d, 0xa4c4, 0x8b40, 0xbe8f, 0x3ac7, 0xe2f7, 0x0, 0x1);
        gbc.writeMem(0xcc0d, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0xa4c4);
        EXPECT(gbc.pc(), 0xcc0f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcc0d), 0xcb);
        EXPECT(gbc.readMem(0xcc0e), 0xfa);
        // CB FA 03C9
        gbc.setState(0xc05d, 0x1477, 0x21c0, 0xcfeb, 0x7691, 0xab33, 0x1, 0x1);
        gbc.writeMem(0xc05d, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x1477);
        EXPECT(gbc.pc(), 0xc05f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc05d), 0xcb);
        EXPECT(gbc.readMem(0xc05e), 0xfa);
        // CB FA 03CA
        gbc.setState(0x8bbd, 0x40f6, 0x3d90, 0x9827, 0x7b89, 0xd445, 0x1, 0x1);
        gbc.writeMem(0x8bbd, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x40f6);
        EXPECT(gbc.pc(), 0x8bbf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8bbd), 0xcb);
        EXPECT(gbc.readMem(0x8bbe), 0xfa);
        // CB FA 03CB
        gbc.setState(0x6a2f, 0xe514, 0x8950, 0x5590, 0x9a9b, 0x3c2f, 0x0, 0x0);
        gbc.writeMem(0x6a2f, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xe514);
        EXPECT(gbc.pc(), 0x6a31);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FA 03CC
        gbc.setState(0x2017, 0x9d22, 0x6de0, 0xff0f, 0x48f9, 0x84af, 0x0, 0x0);
        gbc.writeMem(0x2017, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x9d22);
        EXPECT(gbc.pc(), 0x2019);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FA 03CD
        gbc.setState(0xc761, 0xb391, 0x9d20, 0xd3a6, 0x981d, 0x9020, 0x1, 0x0);
        gbc.writeMem(0xc761, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0xb391);
        EXPECT(gbc.pc(), 0xc763);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc761), 0xcb);
        EXPECT(gbc.readMem(0xc762), 0xfa);
        // CB FA 03CE
        gbc.setState(0xd2ad, 0x9854, 0xfd70, 0xe596, 0xe61f, 0x758e, 0x0, 0x0);
        gbc.writeMem(0xd2ad, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x9854);
        EXPECT(gbc.pc(), 0xd2af);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd2ad), 0xcb);
        EXPECT(gbc.readMem(0xd2ae), 0xfa);
        // CB FA 03CF
        gbc.setState(0x64f1, 0xa22, 0x4390, 0x7838, 0x265a, 0xcebf, 0x0, 0x0);
        gbc.writeMem(0x64f1, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0xa22);
        EXPECT(gbc.pc(), 0x64f3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FA 03D0
        gbc.setState(0xc4ca, 0xaa1, 0x9b40, 0xf110, 0xc0b6, 0xb5b5, 0x1, 0x0);
        gbc.writeMem(0xc4ca, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0xaa1);
        EXPECT(gbc.pc(), 0xc4cc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc4ca), 0xcb);
        EXPECT(gbc.readMem(0xc4cb), 0xfa);
        // CB FA 03D1
        gbc.setState(0xb5e3, 0x91a, 0x9730, 0x6e9f, 0xb06f, 0xf49a, 0x1, 0x0);
        gbc.writeMem(0xb5e3, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x91a);
        EXPECT(gbc.pc(), 0xb5e5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb5e3), 0xcb);
        EXPECT(gbc.readMem(0xb5e4), 0xfa);
        // CB FA 03D2
        gbc.setState(0xd2c5, 0x4f3e, 0xb270, 0x25ad, 0x2f52, 0xad49, 0x1, 0x0);
        gbc.writeMem(0xd2c5, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x4f3e);
        EXPECT(gbc.pc(), 0xd2c7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd2c5), 0xcb);
        EXPECT(gbc.readMem(0xd2c6), 0xfa);
        // CB FA 03D3
        gbc.setState(0xdbc6, 0x1396, 0x1970, 0x8c62, 0xae48, 0xc692, 0x0, 0x1);
        gbc.writeMem(0xdbc6, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x1396);
        EXPECT(gbc.pc(), 0xdbc8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdbc6), 0xcb);
        EXPECT(gbc.readMem(0xdbc7), 0xfa);
        // CB FA 03D4
        gbc.setState(0x230f, 0x62ab, 0xbe70, 0x4f6f, 0x417c, 0x3396, 0x1, 0x1);
        gbc.writeMem(0x230f, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x62ab);
        EXPECT(gbc.pc(), 0x2311);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FA 03D5
        gbc.setState(0xbfdd, 0xa8ad, 0x26a0, 0x810c, 0x755f, 0x2e7f, 0x1, 0x1);
        gbc.writeMem(0xbfdd, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xa8ad);
        EXPECT(gbc.pc(), 0xbfdf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbfdd), 0xcb);
        EXPECT(gbc.readMem(0xbfde), 0xfa);
        // CB FA 03D7
        gbc.setState(0xcc10, 0xea26, 0x7370, 0x95fb, 0x1625, 0x8b89, 0x1, 0x0);
        gbc.writeMem(0xcc10, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0xea26);
        EXPECT(gbc.pc(), 0xcc12);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcc10), 0xcb);
        EXPECT(gbc.readMem(0xcc11), 0xfa);
        // CB FA 03D8
        gbc.setState(0x5152, 0x785d, 0x7b10, 0xcfe6, 0xfaf4, 0x8a10, 0x0, 0x1);
        gbc.writeMem(0x5152, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x785d);
        EXPECT(gbc.pc(), 0x5154);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FA 03D9
        gbc.setState(0x73c6, 0xaf90, 0xb450, 0x2644, 0x2bfc, 0x3eb1, 0x0, 0x1);
        gbc.writeMem(0x73c6, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0xaf90);
        EXPECT(gbc.pc(), 0x73c8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FA 03DA
        gbc.setState(0xed24, 0xf57e, 0x8980, 0xc5d4, 0xe5c9, 0xc319, 0x0, 0x1);
        gbc.writeMem(0xed24, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0xf57e);
        EXPECT(gbc.pc(), 0xed26);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xed24), 0xcb);
        EXPECT(gbc.readMem(0xed25), 0xfa);
        // CB FA 03DB
        gbc.setState(0x6848, 0x635c, 0x2e50, 0x92fd, 0x9c70, 0x68a6, 0x1, 0x1);
        gbc.writeMem(0x6848, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x635c);
        EXPECT(gbc.pc(), 0x684a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FA 03DC
        gbc.setState(0xe608, 0xbab, 0x3d90, 0x986f, 0xccca, 0x8049, 0x0, 0x1);
        gbc.writeMem(0xe608, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xbab);
        EXPECT(gbc.pc(), 0xe60a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe608), 0xcb);
        EXPECT(gbc.readMem(0xe609), 0xfa);
        // CB FA 03DD
        gbc.setState(0x6d99, 0xe0da, 0x9780, 0x4765, 0x73b5, 0xf6, 0x0, 0x0);
        gbc.writeMem(0x6d99, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0xe0da);
        EXPECT(gbc.pc(), 0x6d9b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FA 03DE
        gbc.setState(0x92c0, 0xc5b2, 0xc690, 0xb65, 0xf94b, 0x1ed8, 0x1, 0x0);
        gbc.writeMem(0x92c0, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0xc5b2);
        EXPECT(gbc.pc(), 0x92c2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x92c0), 0xcb);
        EXPECT(gbc.readMem(0x92c1), 0xfa);
        // CB FA 03DF
        gbc.setState(0x530b, 0x9b2a, 0x9860, 0xba04, 0x6b05, 0x358d, 0x1, 0x1);
        gbc.writeMem(0x530b, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x9b2a);
        EXPECT(gbc.pc(), 0x530d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FA 03E0
        gbc.setState(0x2e40, 0xb646, 0x20d0, 0x8f79, 0x1, 0xd4e2, 0x1, 0x1);
        gbc.writeMem(0x2e40, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0xb646);
        EXPECT(gbc.pc(), 0x2e42);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FA 03E1
        gbc.setState(0x1fd4, 0x31a0, 0x4390, 0x42bd, 0x5438, 0x80ef, 0x1, 0x0);
        gbc.writeMem(0x1fd4, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x31a0);
        EXPECT(gbc.pc(), 0x1fd6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FA 03E2
        gbc.setState(0xaf43, 0x84d0, 0xdb80, 0x819e, 0xb706, 0xb4d8, 0x1, 0x0);
        gbc.writeMem(0xaf43, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x84d0);
        EXPECT(gbc.pc(), 0xaf45);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaf43), 0xcb);
        EXPECT(gbc.readMem(0xaf44), 0xfa);
        // CB FA 03E4
        gbc.setState(0x2e5f, 0x6615, 0x1f70, 0x20e0, 0x2d55, 0x9fc7, 0x1, 0x1);
        gbc.writeMem(0x2e5f, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x6615);
        EXPECT(gbc.pc(), 0x2e61);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FA 03E5
        gbc.setState(0xd935, 0x2981, 0xeab0, 0x6313, 0x5c62, 0xc680, 0x0, 0x1);
        gbc.writeMem(0xd935, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x2981);
        EXPECT(gbc.pc(), 0xd937);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd935), 0xcb);
        EXPECT(gbc.readMem(0xd936), 0xfa);
        // CB FA 03E6
        gbc.setState(0x6bfa, 0xf9d5, 0x10e0, 0xc633, 0x5545, 0x6498, 0x0, 0x0);
        gbc.writeMem(0x6bfa, { 0xcb, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xf9d5);
        EXPECT(gbc.pc(), 0x6bfc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
    }
