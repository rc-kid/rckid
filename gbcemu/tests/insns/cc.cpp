#include "../gbctests_insns.h"
#if (defined GBCEMU_INSNS_TESTS_ALL) || (defined GBCEMU_INSNS_TESTS_cc)
#include "../gbctests.h"

namespace rckid::gbcemu {

    TEST(gbcemu, opcode_cc) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CC 0000
        gbc.setState(0x8a19, 0xd84b, 0x220, 0x593a, 0x8c61, 0xcd75, 0x0, 0x1);
        gbc.writeMem(0x8a19, { 0xcc, 0x32, 0xc1 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xd84b);
        EXPECT(gbc.pc(), 0x8a1c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8a19), 0xcc);
        EXPECT(gbc.readMem(0x8a1a), 0x32);
        EXPECT(gbc.readMem(0x8a1b), 0xc1);
        // CC 0003
        gbc.setState(0x390f, 0xc948, 0xc300, 0x8269, 0x1d91, 0xe01e, 0x1, 0x0);
        gbc.writeMem(0x390f, { 0xcc, 0x1b, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0xc948);
        EXPECT(gbc.pc(), 0x3912);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CC 0004
        gbc.setState(0x5e22, 0x530c, 0xe830, 0x191c, 0x550d, 0xd1df, 0x1, 0x1);
        gbc.writeMem(0x5e22, { 0xcc, 0x4f, 0xd6 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x530c);
        EXPECT(gbc.pc(), 0x5e25);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CC 0005
        gbc.setState(0x6d82, 0x2446, 0xc410, 0xe4f8, 0x710a, 0xa9b5, 0x1, 0x0);
        gbc.writeMem(0x6d82, { 0xcc, 0x59, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x2446);
        EXPECT(gbc.pc(), 0x6d85);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CC 0006
        gbc.setState(0xb0f2, 0x1077, 0x8d40, 0x9c74, 0xeee8, 0xa5c8, 0x1, 0x0);
        gbc.writeMem(0xb0f2, { 0xcc, 0x8e, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x1077);
        EXPECT(gbc.pc(), 0xb0f5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb0f2), 0xcc);
        EXPECT(gbc.readMem(0xb0f3), 0x8e);
        EXPECT(gbc.readMem(0xb0f4), 0x33);
        // CC 0008
        gbc.setState(0xbd00, 0xff9d, 0xcd0, 0xd8c5, 0x7786, 0x2a48, 0x1, 0x1);
        gbc.writeMem(0xbd00, { 0xcc, 0x3e, 0x7f });
        gbc.writeMem(0xff9b, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0xff9b);
        EXPECT(gbc.pc(), 0x7f3e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbd00), 0xcc);
        EXPECT(gbc.readMem(0xbd01), 0x3e);
        EXPECT(gbc.readMem(0xbd02), 0x7f);
        EXPECT(gbc.readMem(0xff9b), 0x3);
        EXPECT(gbc.readMem(0xff9c), 0xbd);
        // CC 0009
        gbc.setState(0xea6f, 0xd205, 0xad30, 0x1950, 0xfd54, 0x8814, 0x1, 0x0);
        gbc.writeMem(0xea6f, { 0xcc, 0xd4, 0xf7 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0xd205);
        EXPECT(gbc.pc(), 0xea72);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xea6f), 0xcc);
        EXPECT(gbc.readMem(0xea70), 0xd4);
        EXPECT(gbc.readMem(0xea71), 0xf7);
        // CC 000B
        gbc.setState(0x4c30, 0x928e, 0xe6f0, 0x41e7, 0x615a, 0xd67f, 0x0, 0x1);
        gbc.writeMem(0x4c30, { 0xcc, 0xe9, 0xfa });
        gbc.writeMem(0x928c, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x928c);
        EXPECT(gbc.pc(), 0xfae9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x928c), 0x33);
        EXPECT(gbc.readMem(0x928d), 0x4c);
        // CC 000C
        gbc.setState(0x421e, 0x8f8c, 0x5210, 0xa094, 0x49c, 0x719f, 0x1, 0x1);
        gbc.writeMem(0x421e, { 0xcc, 0x24, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x8f8c);
        EXPECT(gbc.pc(), 0x4221);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CC 000E
        gbc.setState(0x684d, 0x2772, 0xdc20, 0x9cdf, 0xa2dc, 0xcb09, 0x0, 0x0);
        gbc.writeMem(0x684d, { 0xcc, 0xf8, 0xe7 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x2772);
        EXPECT(gbc.pc(), 0x6850);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CC 000F
        gbc.setState(0xd662, 0xef4e, 0xd230, 0x34ad, 0x2e6f, 0x405c, 0x1, 0x1);
        gbc.writeMem(0xd662, { 0xcc, 0xcf, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0xef4e);
        EXPECT(gbc.pc(), 0xd665);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd662), 0xcc);
        EXPECT(gbc.readMem(0xd663), 0xcf);
        EXPECT(gbc.readMem(0xd664), 0x75);
        // CC 0010
        gbc.setState(0x173, 0x7cde, 0x6550, 0x6e35, 0x628f, 0x4d3e, 0x1, 0x1);
        gbc.writeMem(0x173, { 0xcc, 0x4a, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x7cde);
        EXPECT(gbc.pc(), 0x176);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CC 0011
        gbc.setState(0x77a2, 0xb9a8, 0xa060, 0xd393, 0x483a, 0xe2e4, 0x0, 0x0);
        gbc.writeMem(0x77a2, { 0xcc, 0xd6, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0xb9a8);
        EXPECT(gbc.pc(), 0x77a5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CC 0012
        gbc.setState(0x1c28, 0xa787, 0x5f80, 0x183b, 0x8790, 0xc6fa, 0x0, 0x0);
        gbc.writeMem(0x1c28, { 0xcc, 0x7f, 0x57 });
        gbc.writeMem(0xa785, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xa785);
        EXPECT(gbc.pc(), 0x577f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa785), 0x2b);
        EXPECT(gbc.readMem(0xa786), 0x1c);
        // CC 0013
        gbc.setState(0x4827, 0x8c3e, 0xde50, 0x8f77, 0x8e93, 0xfdb4, 0x0, 0x0);
        gbc.writeMem(0x4827, { 0xcc, 0x96, 0xf5 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x8c3e);
        EXPECT(gbc.pc(), 0x482a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CC 0015
        gbc.setState(0x7df8, 0xc04d, 0x3980, 0x5a19, 0xf0ad, 0x9ee, 0x0, 0x0);
        gbc.writeMem(0x7df8, { 0xcc, 0x2b, 0x96 });
        gbc.writeMem(0xc04b, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0xc04b);
        EXPECT(gbc.pc(), 0x962b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc04b), 0xfb);
        EXPECT(gbc.readMem(0xc04c), 0x7d);
        // CC 0016
        gbc.setState(0xcd28, 0xec90, 0x7e80, 0x1ac3, 0x426d, 0x63ac, 0x0, 0x1);
        gbc.writeMem(0xcd28, { 0xcc, 0xe7, 0x81 });
        gbc.writeMem(0xec8e, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0xec8e);
        EXPECT(gbc.pc(), 0x81e7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcd28), 0xcc);
        EXPECT(gbc.readMem(0xcd29), 0xe7);
        EXPECT(gbc.readMem(0xcd2a), 0x81);
        EXPECT(gbc.readMem(0xec8e), 0x2b);
        EXPECT(gbc.readMem(0xec8f), 0xcd);
        // CC 0017
        gbc.setState(0x48de, 0xf0ed, 0xf700, 0x884c, 0xec84, 0x49e7, 0x1, 0x1);
        gbc.writeMem(0x48de, { 0xcc, 0xb0, 0x5e });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xf0ed);
        EXPECT(gbc.pc(), 0x48e1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CC 0018
        gbc.setState(0x5dcb, 0xfa66, 0xac50, 0x9de0, 0xb6d5, 0x54c6, 0x0, 0x0);
        gbc.writeMem(0x5dcb, { 0xcc, 0xe6, 0x3a });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0xfa66);
        EXPECT(gbc.pc(), 0x5dce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CC 0019
        gbc.setState(0x2cd0, 0x4eb3, 0xae20, 0x21a9, 0xcd9a, 0x65fc, 0x1, 0x0);
        gbc.writeMem(0x2cd0, { 0xcc, 0x31, 0xc6 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x4eb3);
        EXPECT(gbc.pc(), 0x2cd3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CC 001B
        gbc.setState(0xd296, 0x6297, 0x3150, 0xbd0d, 0xbe5f, 0x7242, 0x0, 0x1);
        gbc.writeMem(0xd296, { 0xcc, 0xf, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x6297);
        EXPECT(gbc.pc(), 0xd299);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd296), 0xcc);
        EXPECT(gbc.readMem(0xd297), 0xf);
        EXPECT(gbc.readMem(0xd298), 0xb8);
        // CC 001C
        gbc.setState(0xc23c, 0xb61b, 0xe450, 0xc349, 0x9dd2, 0x32af, 0x1, 0x1);
        gbc.writeMem(0xc23c, { 0xcc, 0x5a, 0xf4 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0xb61b);
        EXPECT(gbc.pc(), 0xc23f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc23c), 0xcc);
        EXPECT(gbc.readMem(0xc23d), 0x5a);
        EXPECT(gbc.readMem(0xc23e), 0xf4);
        // CC 001D
        gbc.setState(0xd2d0, 0x6b52, 0x2610, 0x2215, 0xd253, 0x9245, 0x1, 0x0);
        gbc.writeMem(0xd2d0, { 0xcc, 0xb2, 0x2b });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x6b52);
        EXPECT(gbc.pc(), 0xd2d3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd2d0), 0xcc);
        EXPECT(gbc.readMem(0xd2d1), 0xb2);
        EXPECT(gbc.readMem(0xd2d2), 0x2b);
        // CC 001E
        gbc.setState(0xc786, 0x22c7, 0xf500, 0xd9e3, 0xb429, 0xa8e3, 0x1, 0x1);
        gbc.writeMem(0xc786, { 0xcc, 0x91, 0x22 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x22c7);
        EXPECT(gbc.pc(), 0xc789);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc786), 0xcc);
        EXPECT(gbc.readMem(0xc787), 0x91);
        EXPECT(gbc.readMem(0xc788), 0x22);
        // CC 001F
        gbc.setState(0x1c5b, 0xe3ff, 0x54d0, 0x6cc9, 0x3e8a, 0xecbb, 0x1, 0x0);
        gbc.writeMem(0x1c5b, { 0xcc, 0xf6, 0x45 });
        gbc.writeMem(0xe3fd, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0xe3fd);
        EXPECT(gbc.pc(), 0x45f6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe3fd), 0x5e);
        EXPECT(gbc.readMem(0xe3fe), 0x1c);
        // CC 0022
        gbc.setState(0x27df, 0xb3f1, 0x8040, 0x7ca5, 0x324, 0xdee5, 0x0, 0x1);
        gbc.writeMem(0x27df, { 0xcc, 0x7d, 0xa6 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xb3f1);
        EXPECT(gbc.pc(), 0x27e2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CC 0023
        gbc.setState(0xbad, 0xa600, 0x2640, 0x85aa, 0x6ebb, 0x5a92, 0x0, 0x1);
        gbc.writeMem(0xbad, { 0xcc, 0x8d, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0xa600);
        EXPECT(gbc.pc(), 0xbb0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CC 0025
        gbc.setState(0x679b, 0x8b2c, 0x8410, 0x7e44, 0x9bc, 0x4df8, 0x0, 0x1);
        gbc.writeMem(0x679b, { 0xcc, 0xc8, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x8b2c);
        EXPECT(gbc.pc(), 0x679e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CC 0026
        gbc.setState(0xa190, 0xc8eb, 0x97f0, 0x8bff, 0x1256, 0x1d6d, 0x1, 0x0);
        gbc.writeMem(0xa190, { 0xcc, 0xbe, 0x49 });
        gbc.writeMem(0xc8e9, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0xc8e9);
        EXPECT(gbc.pc(), 0x49be);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa190), 0xcc);
        EXPECT(gbc.readMem(0xa191), 0xbe);
        EXPECT(gbc.readMem(0xa192), 0x49);
        EXPECT(gbc.readMem(0xc8e9), 0x93);
        EXPECT(gbc.readMem(0xc8ea), 0xa1);
        // CC 0027
        gbc.setState(0x4c47, 0x92ee, 0x5610, 0x790e, 0xa2c, 0x14e7, 0x0, 0x1);
        gbc.writeMem(0x4c47, { 0xcc, 0xa5, 0x9e });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x92ee);
        EXPECT(gbc.pc(), 0x4c4a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CC 002A
        gbc.setState(0x3d09, 0x8067, 0xf420, 0x6448, 0x575e, 0xd8ac, 0x0, 0x0);
        gbc.writeMem(0x3d09, { 0xcc, 0x95, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x8067);
        EXPECT(gbc.pc(), 0x3d0c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CC 002C
        gbc.setState(0x5823, 0xc32c, 0x1b90, 0x9ff7, 0xc7b5, 0xde90, 0x1, 0x0);
        gbc.writeMem(0x5823, { 0xcc, 0xd, 0x4a });
        gbc.writeMem(0xc32a, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0xc32a);
        EXPECT(gbc.pc(), 0x4a0d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc32a), 0x26);
        EXPECT(gbc.readMem(0xc32b), 0x58);
        // CC 002E
        gbc.setState(0xda58, 0xb2a3, 0xf890, 0x3373, 0xd050, 0x4f69, 0x1, 0x0);
        gbc.writeMem(0xb2a1, { 0x0, 0x0 });
        gbc.writeMem(0xda58, { 0xcc, 0xf6, 0x5a });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0xb2a1);
        EXPECT(gbc.pc(), 0x5af6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb2a1), 0x5b);
        EXPECT(gbc.readMem(0xb2a2), 0xda);
        EXPECT(gbc.readMem(0xda58), 0xcc);
        EXPECT(gbc.readMem(0xda59), 0xf6);
        EXPECT(gbc.readMem(0xda5a), 0x5a);
        // CC 002F
        gbc.setState(0x1466, 0x404e, 0x5920, 0x1043, 0x1d32, 0xf70b, 0x1, 0x1);
        gbc.writeMem(0x1466, { 0xcc, 0x2d, 0x4e });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x404e);
        EXPECT(gbc.pc(), 0x1469);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CC 0030
        gbc.setState(0x34d9, 0xd0f6, 0x6b40, 0x1a02, 0x4a5b, 0xa452, 0x0, 0x0);
        gbc.writeMem(0x34d9, { 0xcc, 0x2d, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0xd0f6);
        EXPECT(gbc.pc(), 0x34dc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CC 0031
        gbc.setState(0xe765, 0x2f2c, 0xd660, 0x9097, 0x870a, 0xaebf, 0x1, 0x0);
        gbc.writeMem(0xe765, { 0xcc, 0xf, 0x2c });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x2f2c);
        EXPECT(gbc.pc(), 0xe768);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe765), 0xcc);
        EXPECT(gbc.readMem(0xe766), 0xf);
        EXPECT(gbc.readMem(0xe767), 0x2c);
        // CC 0032
        gbc.setState(0xdaff, 0x4817, 0x6770, 0x1177, 0xcdf7, 0x4e76, 0x0, 0x1);
        gbc.writeMem(0xdaff, { 0xcc, 0x75, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x4817);
        EXPECT(gbc.pc(), 0xdb02);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdaff), 0xcc);
        EXPECT(gbc.readMem(0xdb00), 0x75);
        EXPECT(gbc.readMem(0xdb01), 0xee);
        // CC 0034
        gbc.setState(0x4048, 0x4f, 0xdd00, 0xb700, 0x9b39, 0x80b5, 0x0, 0x1);
        gbc.writeMem(0x4048, { 0xcc, 0x65, 0x1e });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x4f);
        EXPECT(gbc.pc(), 0x404b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CC 0036
        gbc.setState(0x2297, 0x1fce, 0x6a00, 0x71ed, 0x24f, 0x56a0, 0x0, 0x0);
        gbc.writeMem(0x2297, { 0xcc, 0xb, 0x49 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x1fce);
        EXPECT(gbc.pc(), 0x229a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CC 0038
        gbc.setState(0x6922, 0xf8bd, 0x9c00, 0xc0eb, 0x9bb5, 0x8d02, 0x1, 0x1);
        gbc.writeMem(0x6922, { 0xcc, 0xb4, 0xf3 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xf8bd);
        EXPECT(gbc.pc(), 0x6925);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CC 0039
        gbc.setState(0xeadf, 0x9ab4, 0x1600, 0x5b44, 0x5948, 0x37db, 0x0, 0x1);
        gbc.writeMem(0xeadf, { 0xcc, 0xde, 0x8a });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x9ab4);
        EXPECT(gbc.pc(), 0xeae2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeadf), 0xcc);
        EXPECT(gbc.readMem(0xeae0), 0xde);
        EXPECT(gbc.readMem(0xeae1), 0x8a);
        // CC 003A
        gbc.setState(0xed90, 0xfcf3, 0xf5c0, 0x90cc, 0x7915, 0xb43e, 0x0, 0x1);
        gbc.writeMem(0xed90, { 0xcc, 0xdb, 0xbe });
        gbc.writeMem(0xfcf1, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0xfcf1);
        EXPECT(gbc.pc(), 0xbedb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xed90), 0xcc);
        EXPECT(gbc.readMem(0xed91), 0xdb);
        EXPECT(gbc.readMem(0xed92), 0xbe);
        EXPECT(gbc.readMem(0xfcf1), 0x93);
        EXPECT(gbc.readMem(0xfcf2), 0xed);
        // CC 003B
        gbc.setState(0xe94e, 0x87ec, 0xfa0, 0x5aab, 0x7277, 0xf360, 0x1, 0x0);
        gbc.writeMem(0x87ea, { 0x0, 0x0 });
        gbc.writeMem(0xe94e, { 0xcc, 0x54, 0x2c });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x87ea);
        EXPECT(gbc.pc(), 0x2c54);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x87ea), 0x51);
        EXPECT(gbc.readMem(0x87eb), 0xe9);
        EXPECT(gbc.readMem(0xe94e), 0xcc);
        EXPECT(gbc.readMem(0xe94f), 0x54);
        EXPECT(gbc.readMem(0xe950), 0x2c);
        // CC 003C
        gbc.setState(0x2e49, 0xa513, 0x1620, 0xf82d, 0x3993, 0xb2a4, 0x1, 0x0);
        gbc.writeMem(0x2e49, { 0xcc, 0x9, 0x25 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0xa513);
        EXPECT(gbc.pc(), 0x2e4c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CC 003D
        gbc.setState(0xbad2, 0x858a, 0xdc30, 0xfdcd, 0x5217, 0x3d7a, 0x0, 0x1);
        gbc.writeMem(0xbad2, { 0xcc, 0xdf, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x858a);
        EXPECT(gbc.pc(), 0xbad5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbad2), 0xcc);
        EXPECT(gbc.readMem(0xbad3), 0xdf);
        EXPECT(gbc.readMem(0xbad4), 0x39);
        // CC 003E
        gbc.setState(0x7a4e, 0x9984, 0x7710, 0xc4f2, 0xdd26, 0x34b6, 0x0, 0x1);
        gbc.writeMem(0x7a4e, { 0xcc, 0x62, 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x9984);
        EXPECT(gbc.pc(), 0x7a51);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CC 003F
        gbc.setState(0xc03a, 0xb154, 0x79f0, 0xfffb, 0xcb42, 0x201d, 0x0, 0x1);
        gbc.writeMem(0xb152, { 0x0, 0x0 });
        gbc.writeMem(0xc03a, { 0xcc, 0x41, 0x9b });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0xb152);
        EXPECT(gbc.pc(), 0x9b41);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb152), 0x3d);
        EXPECT(gbc.readMem(0xb153), 0xc0);
        EXPECT(gbc.readMem(0xc03a), 0xcc);
        EXPECT(gbc.readMem(0xc03b), 0x41);
        EXPECT(gbc.readMem(0xc03c), 0x9b);
        // CC 0040
        gbc.setState(0xece2, 0xf63f, 0x5da0, 0x644e, 0xd1ca, 0x6cd8, 0x1, 0x0);
        gbc.writeMem(0xece2, { 0xcc, 0x66, 0xf8 });
        gbc.writeMem(0xf63d, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0xf63d);
        EXPECT(gbc.pc(), 0xf866);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xece2), 0xcc);
        EXPECT(gbc.readMem(0xece3), 0x66);
        EXPECT(gbc.readMem(0xece4), 0xf8);
        EXPECT(gbc.readMem(0xf63d), 0xe5);
        EXPECT(gbc.readMem(0xf63e), 0xec);
        // CC 0041
        gbc.setState(0x9029, 0xf532, 0x38c0, 0x272d, 0x73fc, 0xa132, 0x1, 0x0);
        gbc.writeMem(0x9029, { 0xcc, 0x8a, 0xf3 });
        gbc.writeMem(0xf530, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xf530);
        EXPECT(gbc.pc(), 0xf38a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9029), 0xcc);
        EXPECT(gbc.readMem(0x902a), 0x8a);
        EXPECT(gbc.readMem(0x902b), 0xf3);
        EXPECT(gbc.readMem(0xf530), 0x2c);
        EXPECT(gbc.readMem(0xf531), 0x90);
        // CC 0042
        gbc.setState(0x2616, 0x3585, 0xa750, 0x95e5, 0xa72, 0xc67f, 0x0, 0x0);
        gbc.writeMem(0x2616, { 0xcc, 0x47, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x3585);
        EXPECT(gbc.pc(), 0x2619);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CC 0043
        gbc.setState(0x678a, 0x5fc8, 0x9730, 0x5d5a, 0x9548, 0x3458, 0x0, 0x1);
        gbc.writeMem(0x678a, { 0xcc, 0x42, 0xa8 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x5fc8);
        EXPECT(gbc.pc(), 0x678d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CC 0045
        gbc.setState(0x3f6, 0xdb89, 0xfea0, 0x40eb, 0x85fb, 0x4047, 0x0, 0x1);
        gbc.writeMem(0x3f6, { 0xcc, 0xf2, 0x61 });
        gbc.writeMem(0xdb87, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0xdb87);
        EXPECT(gbc.pc(), 0x61f2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdb87), 0xf9);
        EXPECT(gbc.readMem(0xdb88), 0x3);
        // CC 0046
        gbc.setState(0xad6a, 0x179a, 0x1540, 0x6a21, 0xbf73, 0xffac, 0x1, 0x1);
        gbc.writeMem(0xad6a, { 0xcc, 0xda, 0x31 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x179a);
        EXPECT(gbc.pc(), 0xad6d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xad6a), 0xcc);
        EXPECT(gbc.readMem(0xad6b), 0xda);
        EXPECT(gbc.readMem(0xad6c), 0x31);
        // CC 0047
        gbc.setState(0x6b5, 0xc6e5, 0xca80, 0x1923, 0xfa85, 0x4242, 0x1, 0x1);
        gbc.writeMem(0x6b5, { 0xcc, 0xb1, 0xcb });
        gbc.writeMem(0xc6e3, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0xc6e3);
        EXPECT(gbc.pc(), 0xcbb1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc6e3), 0xb8);
        EXPECT(gbc.readMem(0xc6e4), 0x6);
        // CC 004B
        gbc.setState(0xc9f7, 0xf3bc, 0x9f00, 0x3510, 0xcd7a, 0x26ab, 0x1, 0x1);
        gbc.writeMem(0xc9f7, { 0xcc, 0x7, 0xc6 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xf3bc);
        EXPECT(gbc.pc(), 0xc9fa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc9f7), 0xcc);
        EXPECT(gbc.readMem(0xc9f8), 0x7);
        EXPECT(gbc.readMem(0xc9f9), 0xc6);
        // CC 004C
        gbc.setState(0x8915, 0xf2e5, 0xdff0, 0x9908, 0xaefe, 0xb711, 0x1, 0x1);
        gbc.writeMem(0x8915, { 0xcc, 0x71, 0x8d });
        gbc.writeMem(0xf2e3, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0xf2e3);
        EXPECT(gbc.pc(), 0x8d71);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8915), 0xcc);
        EXPECT(gbc.readMem(0x8916), 0x71);
        EXPECT(gbc.readMem(0x8917), 0x8d);
        EXPECT(gbc.readMem(0xf2e3), 0x18);
        EXPECT(gbc.readMem(0xf2e4), 0x89);
        // CC 004E
        gbc.setState(0x8771, 0xf677, 0xe760, 0xe3a7, 0x25f2, 0x166b, 0x0, 0x1);
        gbc.writeMem(0x8771, { 0xcc, 0xb, 0x35 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0xf677);
        EXPECT(gbc.pc(), 0x8774);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8771), 0xcc);
        EXPECT(gbc.readMem(0x8772), 0xb);
        EXPECT(gbc.readMem(0x8773), 0x35);
        // CC 0050
        gbc.setState(0x519, 0xbad7, 0x97d0, 0x4dc2, 0x15bd, 0xdb4, 0x0, 0x0);
        gbc.writeMem(0x519, { 0xcc, 0x42, 0x78 });
        gbc.writeMem(0xbad5, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xbad5);
        EXPECT(gbc.pc(), 0x7842);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbad5), 0x1c);
        EXPECT(gbc.readMem(0xbad6), 0x5);
        // CC 0051
        gbc.setState(0xc97d, 0x41bb, 0x6100, 0x13b1, 0xfc99, 0x22e6, 0x0, 0x1);
        gbc.writeMem(0xc97d, { 0xcc, 0x7f, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x41bb);
        EXPECT(gbc.pc(), 0xc980);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc97d), 0xcc);
        EXPECT(gbc.readMem(0xc97e), 0x7f);
        EXPECT(gbc.readMem(0xc97f), 0xbf);
        // CC 0053
        gbc.setState(0xb15f, 0xd0b6, 0xa420, 0x3789, 0xbb38, 0x9f9d, 0x0, 0x0);
        gbc.writeMem(0xb15f, { 0xcc, 0xb5, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0xd0b6);
        EXPECT(gbc.pc(), 0xb162);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb15f), 0xcc);
        EXPECT(gbc.readMem(0xb160), 0xb5);
        EXPECT(gbc.readMem(0xb161), 0xef);
        // CC 0054
        gbc.setState(0x5df8, 0xb440, 0xde60, 0xb97e, 0x53a4, 0x84a2, 0x1, 0x0);
        gbc.writeMem(0x5df8, { 0xcc, 0xcd, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0xb440);
        EXPECT(gbc.pc(), 0x5dfb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CC 0055
        gbc.setState(0xc36f, 0x8705, 0x2270, 0xa5d2, 0x5f90, 0x7365, 0x1, 0x1);
        gbc.writeMem(0xc36f, { 0xcc, 0xa7, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x8705);
        EXPECT(gbc.pc(), 0xc372);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc36f), 0xcc);
        EXPECT(gbc.readMem(0xc370), 0xa7);
        EXPECT(gbc.readMem(0xc371), 0xe3);
        // CC 0056
        gbc.setState(0xa5a8, 0xee49, 0x1fb0, 0x7d7b, 0xa81c, 0xec04, 0x0, 0x1);
        gbc.writeMem(0xa5a8, { 0xcc, 0xc4, 0x22 });
        gbc.writeMem(0xee47, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0xee47);
        EXPECT(gbc.pc(), 0x22c4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa5a8), 0xcc);
        EXPECT(gbc.readMem(0xa5a9), 0xc4);
        EXPECT(gbc.readMem(0xa5aa), 0x22);
        EXPECT(gbc.readMem(0xee47), 0xab);
        EXPECT(gbc.readMem(0xee48), 0xa5);
        // CC 0057
        gbc.setState(0xab52, 0xd2c8, 0xea50, 0x1580, 0x660f, 0x2941, 0x0, 0x1);
        gbc.writeMem(0xab52, { 0xcc, 0xda, 0xb1 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0xd2c8);
        EXPECT(gbc.pc(), 0xab55);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xab52), 0xcc);
        EXPECT(gbc.readMem(0xab53), 0xda);
        EXPECT(gbc.readMem(0xab54), 0xb1);
        // CC 0059
        gbc.setState(0x5f5d, 0xedde, 0x64d0, 0xba7c, 0xb574, 0x9c2, 0x1, 0x1);
        gbc.writeMem(0x5f5d, { 0xcc, 0x7c, 0x5d });
        gbc.writeMem(0xeddc, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0xeddc);
        EXPECT(gbc.pc(), 0x5d7c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeddc), 0x60);
        EXPECT(gbc.readMem(0xeddd), 0x5f);
        // CC 005A
        gbc.setState(0x1d28, 0xea54, 0x2f30, 0x4f64, 0x2d63, 0xc68f, 0x0, 0x0);
        gbc.writeMem(0x1d28, { 0xcc, 0xa, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xea54);
        EXPECT(gbc.pc(), 0x1d2b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CC 005C
        gbc.setState(0x9d36, 0xef17, 0x1120, 0x886a, 0xe30d, 0x5ca9, 0x0, 0x1);
        gbc.writeMem(0x9d36, { 0xcc, 0x61, 0xd6 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0xef17);
        EXPECT(gbc.pc(), 0x9d39);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9d36), 0xcc);
        EXPECT(gbc.readMem(0x9d37), 0x61);
        EXPECT(gbc.readMem(0x9d38), 0xd6);
        // CC 005D
        gbc.setState(0x6b9c, 0x9404, 0xb960, 0x1b0c, 0x51c5, 0x7f8e, 0x0, 0x0);
        gbc.writeMem(0x6b9c, { 0xcc, 0x9c, 0xc7 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x9404);
        EXPECT(gbc.pc(), 0x6b9f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CC 005F
        gbc.setState(0x6bdf, 0xb221, 0xab70, 0xede4, 0x2cbb, 0x47a5, 0x1, 0x0);
        gbc.writeMem(0x6bdf, { 0xcc, 0xe, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xb221);
        EXPECT(gbc.pc(), 0x6be2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CC 0060
        gbc.setState(0x5a2, 0xf473, 0xa1b0, 0x7d2e, 0xbf6d, 0x894, 0x0, 0x0);
        gbc.writeMem(0x5a2, { 0xcc, 0xb4, 0xef });
        gbc.writeMem(0xf471, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xf471);
        EXPECT(gbc.pc(), 0xefb4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf471), 0xa5);
        EXPECT(gbc.readMem(0xf472), 0x5);
        // CC 0062
        gbc.setState(0x9fe9, 0xcd16, 0xb5a0, 0x6fb5, 0x28e6, 0xfe32, 0x1, 0x1);
        gbc.writeMem(0x9fe9, { 0xcc, 0x1d, 0x62 });
        gbc.writeMem(0xcd14, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xcd14);
        EXPECT(gbc.pc(), 0x621d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9fe9), 0xcc);
        EXPECT(gbc.readMem(0x9fea), 0x1d);
        EXPECT(gbc.readMem(0x9feb), 0x62);
        EXPECT(gbc.readMem(0xcd14), 0xec);
        EXPECT(gbc.readMem(0xcd15), 0x9f);
        // CC 0063
        gbc.setState(0x8997, 0x8045, 0x2ec0, 0x7803, 0x46d4, 0xf9f6, 0x1, 0x0);
        gbc.writeMem(0x8043, { 0x0, 0x0 });
        gbc.writeMem(0x8997, { 0xcc, 0xe3, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x8043);
        EXPECT(gbc.pc(), 0x90e3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8043), 0x9a);
        EXPECT(gbc.readMem(0x8044), 0x89);
        EXPECT(gbc.readMem(0x8997), 0xcc);
        EXPECT(gbc.readMem(0x8998), 0xe3);
        EXPECT(gbc.readMem(0x8999), 0x90);
        // CC 0064
        gbc.setState(0xad5f, 0x6aa4, 0xec40, 0x76cd, 0x829, 0x1705, 0x1, 0x0);
        gbc.writeMem(0xad5f, { 0xcc, 0x5d, 0xf6 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x6aa4);
        EXPECT(gbc.pc(), 0xad62);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xad5f), 0xcc);
        EXPECT(gbc.readMem(0xad60), 0x5d);
        EXPECT(gbc.readMem(0xad61), 0xf6);
        // CC 0065
        gbc.setState(0x5f42, 0xc8b2, 0xbc40, 0xc062, 0x2271, 0x653f, 0x1, 0x1);
        gbc.writeMem(0x5f42, { 0xcc, 0x9c, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xc8b2);
        EXPECT(gbc.pc(), 0x5f45);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CC 0066
        gbc.setState(0xad68, 0x85f1, 0x8200, 0x20d5, 0xe498, 0x6e99, 0x0, 0x1);
        gbc.writeMem(0xad68, { 0xcc, 0x3e, 0x18 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x85f1);
        EXPECT(gbc.pc(), 0xad6b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xad68), 0xcc);
        EXPECT(gbc.readMem(0xad69), 0x3e);
        EXPECT(gbc.readMem(0xad6a), 0x18);
        // CC 0067
        gbc.setState(0x3ad4, 0xa325, 0x5980, 0xdec0, 0xa88, 0x8a62, 0x1, 0x0);
        gbc.writeMem(0x3ad4, { 0xcc, 0x24, 0x67 });
        gbc.writeMem(0xa323, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xa323);
        EXPECT(gbc.pc(), 0x6724);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa323), 0xd7);
        EXPECT(gbc.readMem(0xa324), 0x3a);
        // CC 0068
        gbc.setState(0xbf30, 0x38cf, 0x5650, 0xb753, 0x799d, 0x8846, 0x0, 0x1);
        gbc.writeMem(0xbf30, { 0xcc, 0x4f, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x38cf);
        EXPECT(gbc.pc(), 0xbf33);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbf30), 0xcc);
        EXPECT(gbc.readMem(0xbf31), 0x4f);
        EXPECT(gbc.readMem(0xbf32), 0x32);
        // CC 0069
        gbc.setState(0x5e28, 0xc2d7, 0xc330, 0xfde5, 0xe6c0, 0x5dcf, 0x0, 0x1);
        gbc.writeMem(0x5e28, { 0xcc, 0x10, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0xc2d7);
        EXPECT(gbc.pc(), 0x5e2b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CC 006A
        gbc.setState(0x244b, 0xda8c, 0xe170, 0x3c1d, 0x948f, 0x42be, 0x1, 0x1);
        gbc.writeMem(0x244b, { 0xcc, 0x49, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0xda8c);
        EXPECT(gbc.pc(), 0x244e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CC 006B
        gbc.setState(0x685f, 0x3739, 0xa430, 0xf4f3, 0x7c2c, 0xd2f1, 0x1, 0x0);
        gbc.writeMem(0x685f, { 0xcc, 0x83, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x3739);
        EXPECT(gbc.pc(), 0x6862);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CC 006D
        gbc.setState(0x5cc5, 0x435e, 0x4900, 0x1640, 0x5f2f, 0xefc6, 0x1, 0x0);
        gbc.writeMem(0x5cc5, { 0xcc, 0x5f, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x435e);
        EXPECT(gbc.pc(), 0x5cc8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CC 006E
        gbc.setState(0xa17f, 0xa7a4, 0x14a0, 0xde2a, 0xaa3f, 0xc3da, 0x1, 0x1);
        gbc.writeMem(0xa17f, { 0xcc, 0xf1, 0xa7 });
        gbc.writeMem(0xa7a2, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0xa7a2);
        EXPECT(gbc.pc(), 0xa7f1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa17f), 0xcc);
        EXPECT(gbc.readMem(0xa180), 0xf1);
        EXPECT(gbc.readMem(0xa181), 0xa7);
        EXPECT(gbc.readMem(0xa7a2), 0x82);
        EXPECT(gbc.readMem(0xa7a3), 0xa1);
        // CC 0070
        gbc.setState(0x3ee8, 0xecf2, 0xccc0, 0x676f, 0x29a5, 0x8e4b, 0x1, 0x0);
        gbc.writeMem(0x3ee8, { 0xcc, 0xc7, 0x83 });
        gbc.writeMem(0xecf0, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0xecf0);
        EXPECT(gbc.pc(), 0x83c7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xecf0), 0xeb);
        EXPECT(gbc.readMem(0xecf1), 0x3e);
        // CC 0071
        gbc.setState(0xcdc7, 0xb2b8, 0x3ff0, 0x1d5f, 0x9fe6, 0x2aba, 0x0, 0x1);
        gbc.writeMem(0xb2b6, { 0x0, 0x0 });
        gbc.writeMem(0xcdc7, { 0xcc, 0x94, 0x9b });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0xb2b6);
        EXPECT(gbc.pc(), 0x9b94);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb2b6), 0xca);
        EXPECT(gbc.readMem(0xb2b7), 0xcd);
        EXPECT(gbc.readMem(0xcdc7), 0xcc);
        EXPECT(gbc.readMem(0xcdc8), 0x94);
        EXPECT(gbc.readMem(0xcdc9), 0x9b);
        // CC 0072
        gbc.setState(0x1063, 0x922c, 0xb090, 0xe8ac, 0xb5b7, 0x6a8b, 0x1, 0x0);
        gbc.writeMem(0x1063, { 0xcc, 0x36, 0xaf });
        gbc.writeMem(0x922a, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x922a);
        EXPECT(gbc.pc(), 0xaf36);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x922a), 0x66);
        EXPECT(gbc.readMem(0x922b), 0x10);
        // CC 0073
        gbc.setState(0x5beb, 0x6399, 0x7820, 0x4e07, 0x465e, 0x312b, 0x0, 0x1);
        gbc.writeMem(0x5beb, { 0xcc, 0x97, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x6399);
        EXPECT(gbc.pc(), 0x5bee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CC 0074
        gbc.setState(0x9227, 0xf122, 0x11e0, 0x2845, 0xc47c, 0xc55e, 0x0, 0x0);
        gbc.writeMem(0x9227, { 0xcc, 0xb2, 0xfa });
        gbc.writeMem(0xf120, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0xf120);
        EXPECT(gbc.pc(), 0xfab2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9227), 0xcc);
        EXPECT(gbc.readMem(0x9228), 0xb2);
        EXPECT(gbc.readMem(0x9229), 0xfa);
        EXPECT(gbc.readMem(0xf120), 0x2a);
        EXPECT(gbc.readMem(0xf121), 0x92);
        // CC 0075
        gbc.setState(0x1107, 0x30e1, 0xc430, 0x158f, 0x3d9a, 0x13c7, 0x0, 0x1);
        gbc.writeMem(0x1107, { 0xcc, 0xc3, 0x7 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x30e1);
        EXPECT(gbc.pc(), 0x110a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CC 0077
        gbc.setState(0x239c, 0xd575, 0xc8c0, 0x7b82, 0xac5a, 0x3cd8, 0x0, 0x1);
        gbc.writeMem(0x239c, { 0xcc, 0xae, 0x2d });
        gbc.writeMem(0xd573, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0xd573);
        EXPECT(gbc.pc(), 0x2dae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd573), 0x9f);
        EXPECT(gbc.readMem(0xd574), 0x23);
        // CC 0078
        gbc.setState(0x3606, 0xef84, 0x4290, 0x456e, 0x92a5, 0x84c7, 0x1, 0x0);
        gbc.writeMem(0x3606, { 0xcc, 0xeb, 0x3b });
        gbc.writeMem(0xef82, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0xef82);
        EXPECT(gbc.pc(), 0x3beb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xef82), 0x9);
        EXPECT(gbc.readMem(0xef83), 0x36);
        // CC 0079
        gbc.setState(0xb97e, 0x4bb3, 0x1b30, 0x331a, 0xc5f, 0xc03a, 0x1, 0x0);
        gbc.writeMem(0xb97e, { 0xcc, 0x5b, 0x94 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x4bb3);
        EXPECT(gbc.pc(), 0xb981);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb97e), 0xcc);
        EXPECT(gbc.readMem(0xb97f), 0x5b);
        EXPECT(gbc.readMem(0xb980), 0x94);
        // CC 007A
        gbc.setState(0xc880, 0x1b53, 0xd860, 0xbc7b, 0x3a2a, 0x5285, 0x0, 0x1);
        gbc.writeMem(0xc880, { 0xcc, 0x1f, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x1b53);
        EXPECT(gbc.pc(), 0xc883);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc880), 0xcc);
        EXPECT(gbc.readMem(0xc881), 0x1f);
        EXPECT(gbc.readMem(0xc882), 0x98);
        // CC 007B
        gbc.setState(0xd044, 0x4e0a, 0x9970, 0x3ef4, 0xcb0e, 0x535c, 0x0, 0x0);
        gbc.writeMem(0xd044, { 0xcc, 0x28, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x4e0a);
        EXPECT(gbc.pc(), 0xd047);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd044), 0xcc);
        EXPECT(gbc.readMem(0xd045), 0x28);
        EXPECT(gbc.readMem(0xd046), 0x33);
        // CC 007D
        gbc.setState(0xe1ab, 0x72b6, 0x1840, 0x6cf3, 0x6570, 0x457f, 0x1, 0x1);
        gbc.writeMem(0xe1ab, { 0xcc, 0x8b, 0x6a });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x72b6);
        EXPECT(gbc.pc(), 0xe1ae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe1ab), 0xcc);
        EXPECT(gbc.readMem(0xe1ac), 0x8b);
        EXPECT(gbc.readMem(0xe1ad), 0x6a);
        // CC 007E
        gbc.setState(0xe5d3, 0x71e1, 0x4640, 0xaec, 0x357b, 0x3a99, 0x1, 0x1);
        gbc.writeMem(0xe5d3, { 0xcc, 0x23, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x71e1);
        EXPECT(gbc.pc(), 0xe5d6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe5d3), 0xcc);
        EXPECT(gbc.readMem(0xe5d4), 0x23);
        EXPECT(gbc.readMem(0xe5d5), 0x50);
        // CC 007F
        gbc.setState(0x6f9, 0x6466, 0xe310, 0x4b15, 0x3e41, 0x2e81, 0x0, 0x0);
        gbc.writeMem(0x6f9, { 0xcc, 0xe8, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x6466);
        EXPECT(gbc.pc(), 0x6fc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CC 0081
        gbc.setState(0xb5bc, 0xa03b, 0x3ae0, 0x7efe, 0x2f10, 0x5522, 0x1, 0x1);
        gbc.writeMem(0xa039, { 0x0, 0x0 });
        gbc.writeMem(0xb5bc, { 0xcc, 0xa4, 0xf });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0xa039);
        EXPECT(gbc.pc(), 0xfa4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa039), 0xbf);
        EXPECT(gbc.readMem(0xa03a), 0xb5);
        EXPECT(gbc.readMem(0xb5bc), 0xcc);
        EXPECT(gbc.readMem(0xb5bd), 0xa4);
        EXPECT(gbc.readMem(0xb5be), 0xf);
        // CC 0082
        gbc.setState(0xd2df, 0x36e4, 0x7d00, 0x2d2b, 0x7c7, 0x2b60, 0x0, 0x1);
        gbc.writeMem(0xd2df, { 0xcc, 0xeb, 0x5a });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x36e4);
        EXPECT(gbc.pc(), 0xd2e2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd2df), 0xcc);
        EXPECT(gbc.readMem(0xd2e0), 0xeb);
        EXPECT(gbc.readMem(0xd2e1), 0x5a);
        // CC 0083
        gbc.setState(0x915f, 0xc486, 0xf660, 0x9812, 0xb801, 0x3db3, 0x0, 0x1);
        gbc.writeMem(0x915f, { 0xcc, 0x54, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0xc486);
        EXPECT(gbc.pc(), 0x9162);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x915f), 0xcc);
        EXPECT(gbc.readMem(0x9160), 0x54);
        EXPECT(gbc.readMem(0x9161), 0xb9);
        // CC 0084
        gbc.setState(0xa306, 0xc20e, 0xcf20, 0xdcff, 0x13f7, 0xe03d, 0x0, 0x1);
        gbc.writeMem(0xa306, { 0xcc, 0x90, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0xc20e);
        EXPECT(gbc.pc(), 0xa309);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa306), 0xcc);
        EXPECT(gbc.readMem(0xa307), 0x90);
        EXPECT(gbc.readMem(0xa308), 0x65);
        // CC 0085
        gbc.setState(0x69d4, 0xffba, 0xbdf0, 0xdac4, 0x8913, 0x7a9f, 0x0, 0x0);
        gbc.writeMem(0x69d4, { 0xcc, 0x2f, 0xd9 });
        gbc.writeMem(0xffb8, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0xffb8);
        EXPECT(gbc.pc(), 0xd92f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xffb8), 0xd7);
        EXPECT(gbc.readMem(0xffb9), 0x69);
        // CC 0086
        gbc.setState(0x6176, 0x93f9, 0xffe0, 0xdc9c, 0x65b0, 0x1bda, 0x1, 0x0);
        gbc.writeMem(0x6176, { 0xcc, 0xb9, 0x13 });
        gbc.writeMem(0x93f7, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x93f7);
        EXPECT(gbc.pc(), 0x13b9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x93f7), 0x79);
        EXPECT(gbc.readMem(0x93f8), 0x61);
        // CC 0087
        gbc.setState(0xb29a, 0xd41b, 0x2f00, 0xb19d, 0x2c55, 0x79e6, 0x0, 0x1);
        gbc.writeMem(0xb29a, { 0xcc, 0x56, 0x9f });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xd41b);
        EXPECT(gbc.pc(), 0xb29d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb29a), 0xcc);
        EXPECT(gbc.readMem(0xb29b), 0x56);
        EXPECT(gbc.readMem(0xb29c), 0x9f);
        // CC 0088
        gbc.setState(0x7e0d, 0xfe8c, 0xd330, 0xa423, 0x2049, 0x60b, 0x1, 0x1);
        gbc.writeMem(0x7e0d, { 0xcc, 0xd2, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0xfe8c);
        EXPECT(gbc.pc(), 0x7e10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CC 0089
        gbc.setState(0x8b5a, 0x9586, 0x5e60, 0x2c71, 0xc043, 0x31f0, 0x1, 0x0);
        gbc.writeMem(0x8b5a, { 0xcc, 0xd, 0xd });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x9586);
        EXPECT(gbc.pc(), 0x8b5d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8b5a), 0xcc);
        EXPECT(gbc.readMem(0x8b5b), 0xd);
        EXPECT(gbc.readMem(0x8b5c), 0xd);
        // CC 008A
        gbc.setState(0x4eff, 0xe6d1, 0x4580, 0x462b, 0xd371, 0x2a88, 0x0, 0x1);
        gbc.writeMem(0x4eff, { 0xcc, 0x25, 0xc1 });
        gbc.writeMem(0xe6cf, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0xe6cf);
        EXPECT(gbc.pc(), 0xc125);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe6cf), 0x2);
        EXPECT(gbc.readMem(0xe6d0), 0x4f);
        // CC 008B
        gbc.setState(0x1041, 0x59c5, 0x9730, 0x1a3, 0x1e05, 0xadb6, 0x0, 0x1);
        gbc.writeMem(0x1041, { 0xcc, 0x21, 0xe6 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x59c5);
        EXPECT(gbc.pc(), 0x1044);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CC 008D
        gbc.setState(0xca24, 0xff97, 0x74e0, 0xfeb7, 0xf440, 0xbed9, 0x1, 0x0);
        gbc.writeMem(0xca24, { 0xcc, 0x9e, 0xf0 });
        gbc.writeMem(0xff95, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0xff95);
        EXPECT(gbc.pc(), 0xf09e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xca24), 0xcc);
        EXPECT(gbc.readMem(0xca25), 0x9e);
        EXPECT(gbc.readMem(0xca26), 0xf0);
        EXPECT(gbc.readMem(0xff95), 0x27);
        EXPECT(gbc.readMem(0xff96), 0xca);
        // CC 008E
        gbc.setState(0xc2ab, 0xa543, 0x6830, 0x8c86, 0x9732, 0x89c5, 0x0, 0x0);
        gbc.writeMem(0xc2ab, { 0xcc, 0x39, 0x3b });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0xa543);
        EXPECT(gbc.pc(), 0xc2ae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc2ab), 0xcc);
        EXPECT(gbc.readMem(0xc2ac), 0x39);
        EXPECT(gbc.readMem(0xc2ad), 0x3b);
        // CC 008F
        gbc.setState(0xb022, 0xa319, 0x38e0, 0x4746, 0x16d2, 0xaf79, 0x1, 0x0);
        gbc.writeMem(0xa317, { 0x0, 0x0 });
        gbc.writeMem(0xb022, { 0xcc, 0xe4, 0x6c });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xa317);
        EXPECT(gbc.pc(), 0x6ce4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa317), 0x25);
        EXPECT(gbc.readMem(0xa318), 0xb0);
        EXPECT(gbc.readMem(0xb022), 0xcc);
        EXPECT(gbc.readMem(0xb023), 0xe4);
        EXPECT(gbc.readMem(0xb024), 0x6c);
        // CC 0091
        gbc.setState(0x649b, 0x8f8f, 0xdc80, 0xc047, 0x46ee, 0x60e6, 0x1, 0x0);
        gbc.writeMem(0x649b, { 0xcc, 0x4e, 0x45 });
        gbc.writeMem(0x8f8d, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x8f8d);
        EXPECT(gbc.pc(), 0x454e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8f8d), 0x9e);
        EXPECT(gbc.readMem(0x8f8e), 0x64);
        // CC 0092
        gbc.setState(0xca86, 0x82c3, 0xcbf0, 0x1ddb, 0x905d, 0xf1f5, 0x0, 0x0);
        gbc.writeMem(0x82c1, { 0x0, 0x0 });
        gbc.writeMem(0xca86, { 0xcc, 0x2f, 0xb7 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x82c1);
        EXPECT(gbc.pc(), 0xb72f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x82c1), 0x89);
        EXPECT(gbc.readMem(0x82c2), 0xca);
        EXPECT(gbc.readMem(0xca86), 0xcc);
        EXPECT(gbc.readMem(0xca87), 0x2f);
        EXPECT(gbc.readMem(0xca88), 0xb7);
        // CC 0093
        gbc.setState(0x1103, 0xb923, 0x8ca0, 0x3912, 0xb730, 0x5297, 0x0, 0x0);
        gbc.writeMem(0x1103, { 0xcc, 0xe4, 0x8b });
        gbc.writeMem(0xb921, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0xb921);
        EXPECT(gbc.pc(), 0x8be4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb921), 0x6);
        EXPECT(gbc.readMem(0xb922), 0x11);
        // CC 0094
        gbc.setState(0xb3a, 0x3072, 0xe320, 0xdca5, 0x4310, 0x8b08, 0x0, 0x0);
        gbc.writeMem(0xb3a, { 0xcc, 0x1c, 0x9f });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x3072);
        EXPECT(gbc.pc(), 0xb3d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CC 0095
        gbc.setState(0x4dd2, 0x2e91, 0x9230, 0x4acb, 0xb7b8, 0x7926, 0x1, 0x0);
        gbc.writeMem(0x4dd2, { 0xcc, 0x12, 0xd7 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x2e91);
        EXPECT(gbc.pc(), 0x4dd5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CC 0096
        gbc.setState(0x577c, 0x7225, 0xe370, 0xc35f, 0xdd2a, 0x454c, 0x1, 0x1);
        gbc.writeMem(0x577c, { 0xcc, 0xef, 0x3c });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x7225);
        EXPECT(gbc.pc(), 0x577f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CC 0098
        gbc.setState(0xb34, 0x84af, 0xa430, 0x362e, 0x353a, 0xc341, 0x1, 0x1);
        gbc.writeMem(0xb34, { 0xcc, 0xb3, 0xe6 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x84af);
        EXPECT(gbc.pc(), 0xb37);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CC 009E
        gbc.setState(0x52e2, 0xdfd9, 0xab60, 0x1688, 0x145a, 0x1b73, 0x0, 0x1);
        gbc.writeMem(0x52e2, { 0xcc, 0xa6, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0xdfd9);
        EXPECT(gbc.pc(), 0x52e5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CC 009F
        gbc.setState(0x2ae4, 0x6424, 0xf000, 0xbc1, 0x2317, 0x429, 0x0, 0x1);
        gbc.writeMem(0x2ae4, { 0xcc, 0x6d, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x6424);
        EXPECT(gbc.pc(), 0x2ae7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CC 00A0
        gbc.setState(0xded4, 0x9114, 0x5d60, 0xa3e5, 0x48aa, 0xd31f, 0x1, 0x0);
        gbc.writeMem(0xded4, { 0xcc, 0xa8, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x9114);
        EXPECT(gbc.pc(), 0xded7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xded4), 0xcc);
        EXPECT(gbc.readMem(0xded5), 0xa8);
        EXPECT(gbc.readMem(0xded6), 0xb8);
        // CC 00A1
        gbc.setState(0x589, 0xbeb0, 0x8c50, 0xda58, 0xec24, 0xe590, 0x1, 0x0);
        gbc.writeMem(0x589, { 0xcc, 0x42, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0xbeb0);
        EXPECT(gbc.pc(), 0x58c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CC 00A5
        gbc.setState(0xbe69, 0xcf89, 0xf2f0, 0x9f38, 0xfa81, 0x3a52, 0x0, 0x0);
        gbc.writeMem(0xbe69, { 0xcc, 0x7c, 0x73 });
        gbc.writeMem(0xcf87, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0xcf87);
        EXPECT(gbc.pc(), 0x737c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbe69), 0xcc);
        EXPECT(gbc.readMem(0xbe6a), 0x7c);
        EXPECT(gbc.readMem(0xbe6b), 0x73);
        EXPECT(gbc.readMem(0xcf87), 0x6c);
        EXPECT(gbc.readMem(0xcf88), 0xbe);
        // CC 00A6
        gbc.setState(0xdd54, 0xdfdd, 0x2900, 0x1161, 0x24f5, 0xf872, 0x1, 0x0);
        gbc.writeMem(0xdd54, { 0xcc, 0xd9, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0xdfdd);
        EXPECT(gbc.pc(), 0xdd57);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdd54), 0xcc);
        EXPECT(gbc.readMem(0xdd55), 0xd9);
        EXPECT(gbc.readMem(0xdd56), 0xf0);
        // CC 00A7
        gbc.setState(0x57cc, 0xb912, 0xb3a0, 0xe4a9, 0xd12f, 0x5060, 0x0, 0x1);
        gbc.writeMem(0x57cc, { 0xcc, 0xa8, 0xcf });
        gbc.writeMem(0xb910, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xb910);
        EXPECT(gbc.pc(), 0xcfa8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb910), 0xcf);
        EXPECT(gbc.readMem(0xb911), 0x57);
        // CC 00A8
        gbc.setState(0xa117, 0xff16, 0x98d0, 0x48d1, 0x4ae3, 0xdc49, 0x1, 0x0);
        gbc.writeMem(0xa117, { 0xcc, 0x3e, 0x3c });
        gbc.writeMem(0xff14, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xff14);
        EXPECT(gbc.pc(), 0x3c3e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa117), 0xcc);
        EXPECT(gbc.readMem(0xa118), 0x3e);
        EXPECT(gbc.readMem(0xa119), 0x3c);
        EXPECT(gbc.readMem(0xff14), 0x1a);
        EXPECT(gbc.readMem(0xff15), 0xa1);
        // CC 00A9
        gbc.setState(0xa492, 0xb78e, 0x8a50, 0x1bba, 0xd8f0, 0x3e6a, 0x0, 0x0);
        gbc.writeMem(0xa492, { 0xcc, 0x31, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xb78e);
        EXPECT(gbc.pc(), 0xa495);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa492), 0xcc);
        EXPECT(gbc.readMem(0xa493), 0x31);
        EXPECT(gbc.readMem(0xa494), 0xc9);
        // CC 00AA
        gbc.setState(0xc98d, 0x76be, 0x6830, 0x5038, 0xbef0, 0xae12, 0x1, 0x0);
        gbc.writeMem(0xc98d, { 0xcc, 0x82, 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x76be);
        EXPECT(gbc.pc(), 0xc990);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc98d), 0xcc);
        EXPECT(gbc.readMem(0xc98e), 0x82);
        EXPECT(gbc.readMem(0xc98f), 0x4a);
        // CC 00AB
        gbc.setState(0xb6e5, 0x60cc, 0x2320, 0xc64a, 0xd475, 0x455d, 0x1, 0x1);
        gbc.writeMem(0xb6e5, { 0xcc, 0xd3, 0x76 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x60cc);
        EXPECT(gbc.pc(), 0xb6e8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb6e5), 0xcc);
        EXPECT(gbc.readMem(0xb6e6), 0xd3);
        EXPECT(gbc.readMem(0xb6e7), 0x76);
        // CC 00AC
        gbc.setState(0x1c29, 0x3f6c, 0x40, 0x8a72, 0x1010, 0xa54d, 0x0, 0x0);
        gbc.writeMem(0x1c29, { 0xcc, 0x57, 0xd5 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x3f6c);
        EXPECT(gbc.pc(), 0x1c2c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CC 00AD
        gbc.setState(0x2bbe, 0x4023, 0xb470, 0xa441, 0x40a2, 0x77a4, 0x0, 0x1);
        gbc.writeMem(0x2bbe, { 0xcc, 0xd6, 0x85 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x4023);
        EXPECT(gbc.pc(), 0x2bc1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CC 00AE
        gbc.setState(0x2f82, 0x3b63, 0xe600, 0x5525, 0x67f1, 0xd9bd, 0x1, 0x0);
        gbc.writeMem(0x2f82, { 0xcc, 0x24, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x3b63);
        EXPECT(gbc.pc(), 0x2f85);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CC 00B0
        gbc.setState(0xeee5, 0xd776, 0x9cd0, 0x9d2b, 0xd820, 0x7577, 0x0, 0x1);
        gbc.writeMem(0xd774, { 0x0, 0x0 });
        gbc.writeMem(0xeee5, { 0xcc, 0x2f, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xd774);
        EXPECT(gbc.pc(), 0x4c2f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd774), 0xe8);
        EXPECT(gbc.readMem(0xd775), 0xee);
        EXPECT(gbc.readMem(0xeee5), 0xcc);
        EXPECT(gbc.readMem(0xeee6), 0x2f);
        EXPECT(gbc.readMem(0xeee7), 0x4c);
        // CC 00B1
        gbc.setState(0x5b20, 0x9046, 0xfd30, 0xbf7b, 0xda7a, 0x2db5, 0x0, 0x0);
        gbc.writeMem(0x5b20, { 0xcc, 0x89, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x9046);
        EXPECT(gbc.pc(), 0x5b23);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CC 00B4
        gbc.setState(0x3351, 0xf4cb, 0x17c0, 0xb666, 0x6a0f, 0x5194, 0x0, 0x0);
        gbc.writeMem(0x3351, { 0xcc, 0x92, 0x36 });
        gbc.writeMem(0xf4c9, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xf4c9);
        EXPECT(gbc.pc(), 0x3692);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf4c9), 0x54);
        EXPECT(gbc.readMem(0xf4ca), 0x33);
        // CC 00B5
        gbc.setState(0x6849, 0x6d06, 0xc620, 0xfa35, 0xa82d, 0xa304, 0x0, 0x0);
        gbc.writeMem(0x6849, { 0xcc, 0xa3, 0x3a });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x6d06);
        EXPECT(gbc.pc(), 0x684c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CC 00B6
        gbc.setState(0xa5c1, 0x217d, 0xc840, 0xc44, 0xf3a8, 0x8b1a, 0x0, 0x0);
        gbc.writeMem(0xa5c1, { 0xcc, 0x79, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x217d);
        EXPECT(gbc.pc(), 0xa5c4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa5c1), 0xcc);
        EXPECT(gbc.readMem(0xa5c2), 0x79);
        EXPECT(gbc.readMem(0xa5c3), 0x3d);
        // CC 00B7
        gbc.setState(0x8d0d, 0xd311, 0x5350, 0xcf38, 0x37ef, 0xc437, 0x0, 0x0);
        gbc.writeMem(0x8d0d, { 0xcc, 0x8b, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0xd311);
        EXPECT(gbc.pc(), 0x8d10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8d0d), 0xcc);
        EXPECT(gbc.readMem(0x8d0e), 0x8b);
        EXPECT(gbc.readMem(0x8d0f), 0x4d);
        // CC 00B8
        gbc.setState(0x75bb, 0x1d4f, 0x6c30, 0x2c8c, 0xbf80, 0xd62b, 0x1, 0x0);
        gbc.writeMem(0x75bb, { 0xcc, 0x39, 0xb });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x1d4f);
        EXPECT(gbc.pc(), 0x75be);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CC 00BA
        gbc.setState(0x7ea0, 0x7fb, 0xc220, 0xd39e, 0x59, 0x81fa, 0x0, 0x0);
        gbc.writeMem(0x7ea0, { 0xcc, 0x2e, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x7fb);
        EXPECT(gbc.pc(), 0x7ea3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CC 00BC
        gbc.setState(0x8d20, 0xdaac, 0xa520, 0xd8d1, 0xf833, 0x9051, 0x0, 0x1);
        gbc.writeMem(0x8d20, { 0xcc, 0x63, 0x77 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xdaac);
        EXPECT(gbc.pc(), 0x8d23);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d20), 0xcc);
        EXPECT(gbc.readMem(0x8d21), 0x63);
        EXPECT(gbc.readMem(0x8d22), 0x77);
        // CC 00BD
        gbc.setState(0x2794, 0xead1, 0xbaa0, 0x5a9b, 0xb496, 0x878c, 0x1, 0x1);
        gbc.writeMem(0x2794, { 0xcc, 0xf4, 0xc7 });
        gbc.writeMem(0xeacf, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0xeacf);
        EXPECT(gbc.pc(), 0xc7f4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeacf), 0x97);
        EXPECT(gbc.readMem(0xead0), 0x27);
        // CC 00BE
        gbc.setState(0x9a9b, 0x9a90, 0x3700, 0x74e4, 0x44f, 0xc258, 0x1, 0x1);
        gbc.writeMem(0x9a9b, { 0xcc, 0x6, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x9a90);
        EXPECT(gbc.pc(), 0x9a9e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9a9b), 0xcc);
        EXPECT(gbc.readMem(0x9a9c), 0x6);
        EXPECT(gbc.readMem(0x9a9d), 0xb8);
        // CC 00BF
        gbc.setState(0x270f, 0xb8c3, 0x36d0, 0x6363, 0x404d, 0x4008, 0x1, 0x0);
        gbc.writeMem(0x270f, { 0xcc, 0x65, 0x91 });
        gbc.writeMem(0xb8c1, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0xb8c1);
        EXPECT(gbc.pc(), 0x9165);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb8c1), 0x12);
        EXPECT(gbc.readMem(0xb8c2), 0x27);
        // CC 00C3
        gbc.setState(0xc3da, 0xac54, 0xceb0, 0x1b31, 0x7cd7, 0x255c, 0x1, 0x0);
        gbc.writeMem(0xac52, { 0x0, 0x0 });
        gbc.writeMem(0xc3da, { 0xcc, 0x42, 0x2b });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0xac52);
        EXPECT(gbc.pc(), 0x2b42);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xac52), 0xdd);
        EXPECT(gbc.readMem(0xac53), 0xc3);
        EXPECT(gbc.readMem(0xc3da), 0xcc);
        EXPECT(gbc.readMem(0xc3db), 0x42);
        EXPECT(gbc.readMem(0xc3dc), 0x2b);
        // CC 00C5
        gbc.setState(0x7017, 0xe6de, 0x8680, 0xdf26, 0xda0f, 0x4ede, 0x1, 0x1);
        gbc.writeMem(0x7017, { 0xcc, 0x92, 0x41 });
        gbc.writeMem(0xe6dc, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0xe6dc);
        EXPECT(gbc.pc(), 0x4192);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe6dc), 0x1a);
        EXPECT(gbc.readMem(0xe6dd), 0x70);
        // CC 00C6
        gbc.setState(0x87a2, 0x17ef, 0x8610, 0x3dbd, 0x6c58, 0x125e, 0x0, 0x1);
        gbc.writeMem(0x87a2, { 0xcc, 0x71, 0x86 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x17ef);
        EXPECT(gbc.pc(), 0x87a5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x87a2), 0xcc);
        EXPECT(gbc.readMem(0x87a3), 0x71);
        EXPECT(gbc.readMem(0x87a4), 0x86);
        // CC 00C7
        gbc.setState(0x7136, 0xafc0, 0x59b0, 0x63e5, 0x8cad, 0x703c, 0x0, 0x1);
        gbc.writeMem(0x7136, { 0xcc, 0xdb, 0xce });
        gbc.writeMem(0xafbe, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xafbe);
        EXPECT(gbc.pc(), 0xcedb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xafbe), 0x39);
        EXPECT(gbc.readMem(0xafbf), 0x71);
        // CC 00C8
        gbc.setState(0xd52, 0x5a5b, 0x5e30, 0x6b96, 0x792c, 0x95bb, 0x1, 0x1);
        gbc.writeMem(0xd52, { 0xcc, 0xc3, 0x3 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x5a5b);
        EXPECT(gbc.pc(), 0xd55);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CC 00C9
        gbc.setState(0xafbc, 0xde74, 0xf60, 0xda3c, 0xe2ff, 0xcf0d, 0x1, 0x1);
        gbc.writeMem(0xafbc, { 0xcc, 0xf8, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0xde74);
        EXPECT(gbc.pc(), 0xafbf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xafbc), 0xcc);
        EXPECT(gbc.readMem(0xafbd), 0xf8);
        EXPECT(gbc.readMem(0xafbe), 0x59);
        // CC 00CA
        gbc.setState(0xc8b9, 0x77b4, 0x8220, 0x390d, 0x6d7b, 0x7d90, 0x0, 0x1);
        gbc.writeMem(0xc8b9, { 0xcc, 0xa1, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x77b4);
        EXPECT(gbc.pc(), 0xc8bc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc8b9), 0xcc);
        EXPECT(gbc.readMem(0xc8ba), 0xa1);
        EXPECT(gbc.readMem(0xc8bb), 0x90);
        // CC 00CB
        gbc.setState(0xe680, 0x82d3, 0x1a70, 0xd4a9, 0x46d, 0xb327, 0x1, 0x1);
        gbc.writeMem(0xe680, { 0xcc, 0x9e, 0x1b });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x82d3);
        EXPECT(gbc.pc(), 0xe683);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe680), 0xcc);
        EXPECT(gbc.readMem(0xe681), 0x9e);
        EXPECT(gbc.readMem(0xe682), 0x1b);
        // CC 00CD
        gbc.setState(0x7350, 0x9c5f, 0x2170, 0xf9d5, 0x1f79, 0xc429, 0x0, 0x1);
        gbc.writeMem(0x7350, { 0xcc, 0x82, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x9c5f);
        EXPECT(gbc.pc(), 0x7353);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CC 00CF
        gbc.setState(0x1be2, 0x71cc, 0x1240, 0x9e1, 0x79a6, 0xbabe, 0x1, 0x1);
        gbc.writeMem(0x1be2, { 0xcc, 0x22, 0x3e });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x71cc);
        EXPECT(gbc.pc(), 0x1be5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CC 00D0
        gbc.setState(0xb99d, 0x457e, 0x1740, 0xe907, 0xebdf, 0x3dfe, 0x1, 0x1);
        gbc.writeMem(0xb99d, { 0xcc, 0xe1, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x457e);
        EXPECT(gbc.pc(), 0xb9a0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb99d), 0xcc);
        EXPECT(gbc.readMem(0xb99e), 0xe1);
        EXPECT(gbc.readMem(0xb99f), 0x38);
        // CC 00D1
        gbc.setState(0x6e4, 0x349e, 0xcb10, 0xe167, 0x51f4, 0x9ca7, 0x1, 0x1);
        gbc.writeMem(0x6e4, { 0xcc, 0xe3, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x349e);
        EXPECT(gbc.pc(), 0x6e7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CC 00D2
        gbc.setState(0x46c, 0xc045, 0xc6f0, 0x2d6, 0x87de, 0x2607, 0x1, 0x1);
        gbc.writeMem(0x46c, { 0xcc, 0xd4, 0x25 });
        gbc.writeMem(0xc043, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xc043);
        EXPECT(gbc.pc(), 0x25d4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc043), 0x6f);
        EXPECT(gbc.readMem(0xc044), 0x4);
        // CC 00D4
        gbc.setState(0x92ef, 0xd449, 0x7570, 0xf6a4, 0x85fa, 0xee15, 0x0, 0x1);
        gbc.writeMem(0x92ef, { 0xcc, 0x7f, 0x24 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0xd449);
        EXPECT(gbc.pc(), 0x92f2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x92ef), 0xcc);
        EXPECT(gbc.readMem(0x92f0), 0x7f);
        EXPECT(gbc.readMem(0x92f1), 0x24);
        // CC 00D5
        gbc.setState(0x61c6, 0x60c4, 0x7c30, 0xc359, 0xe4cb, 0x4e10, 0x0, 0x0);
        gbc.writeMem(0x61c6, { 0xcc, 0x55, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x60c4);
        EXPECT(gbc.pc(), 0x61c9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CC 00D6
        gbc.setState(0xdeaf, 0xc6c7, 0x2590, 0x1c6e, 0xc34, 0x2fa4, 0x0, 0x1);
        gbc.writeMem(0xc6c5, { 0x0, 0x0 });
        gbc.writeMem(0xdeaf, { 0xcc, 0x8e, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0xc6c5);
        EXPECT(gbc.pc(), 0x528e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc6c5), 0xb2);
        EXPECT(gbc.readMem(0xc6c6), 0xde);
        EXPECT(gbc.readMem(0xdeaf), 0xcc);
        EXPECT(gbc.readMem(0xdeb0), 0x8e);
        EXPECT(gbc.readMem(0xdeb1), 0x52);
        // CC 00D7
        gbc.setState(0xb28c, 0x8957, 0x86c0, 0xb3f, 0x358f, 0x2152, 0x0, 0x1);
        gbc.writeMem(0x8955, { 0x0, 0x0 });
        gbc.writeMem(0xb28c, { 0xcc, 0xe1, 0xf1 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x8955);
        EXPECT(gbc.pc(), 0xf1e1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8955), 0x8f);
        EXPECT(gbc.readMem(0x8956), 0xb2);
        EXPECT(gbc.readMem(0xb28c), 0xcc);
        EXPECT(gbc.readMem(0xb28d), 0xe1);
        EXPECT(gbc.readMem(0xb28e), 0xf1);
        // CC 00D8
        gbc.setState(0x2e05, 0x85d5, 0x7900, 0x190, 0xdd83, 0xafcd, 0x0, 0x1);
        gbc.writeMem(0x2e05, { 0xcc, 0x33, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x85d5);
        EXPECT(gbc.pc(), 0x2e08);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CC 00D9
        gbc.setState(0xcc9a, 0xe297, 0xd6d0, 0xbf29, 0x5bd, 0x55af, 0x0, 0x0);
        gbc.writeMem(0xcc9a, { 0xcc, 0x4f, 0x5a });
        gbc.writeMem(0xe295, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0xe295);
        EXPECT(gbc.pc(), 0x5a4f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcc9a), 0xcc);
        EXPECT(gbc.readMem(0xcc9b), 0x4f);
        EXPECT(gbc.readMem(0xcc9c), 0x5a);
        EXPECT(gbc.readMem(0xe295), 0x9d);
        EXPECT(gbc.readMem(0xe296), 0xcc);
        // CC 00DB
        gbc.setState(0xcb78, 0x9646, 0x2d80, 0xdd33, 0x5ff8, 0x1da, 0x0, 0x1);
        gbc.writeMem(0x9644, { 0x0, 0x0 });
        gbc.writeMem(0xcb78, { 0xcc, 0x97, 0x5e });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x9644);
        EXPECT(gbc.pc(), 0x5e97);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9644), 0x7b);
        EXPECT(gbc.readMem(0x9645), 0xcb);
        EXPECT(gbc.readMem(0xcb78), 0xcc);
        EXPECT(gbc.readMem(0xcb79), 0x97);
        EXPECT(gbc.readMem(0xcb7a), 0x5e);
        // CC 00DC
        gbc.setState(0xcfd5, 0x2a3a, 0x1070, 0x6ab9, 0x7ff2, 0xe69e, 0x0, 0x1);
        gbc.writeMem(0xcfd5, { 0xcc, 0x11, 0x91 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x2a3a);
        EXPECT(gbc.pc(), 0xcfd8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcfd5), 0xcc);
        EXPECT(gbc.readMem(0xcfd6), 0x11);
        EXPECT(gbc.readMem(0xcfd7), 0x91);
        // CC 00DD
        gbc.setState(0x67b0, 0x930a, 0x59d0, 0xc10, 0x8b9e, 0xfb40, 0x1, 0x0);
        gbc.writeMem(0x67b0, { 0xcc, 0x68, 0x5c });
        gbc.writeMem(0x9308, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x9308);
        EXPECT(gbc.pc(), 0x5c68);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9308), 0xb3);
        EXPECT(gbc.readMem(0x9309), 0x67);
        // CC 00DE
        gbc.setState(0xa59f, 0x4512, 0x370, 0xaab8, 0xbfbe, 0xb424, 0x0, 0x0);
        gbc.writeMem(0xa59f, { 0xcc, 0x4c, 0x6e });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x4512);
        EXPECT(gbc.pc(), 0xa5a2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa59f), 0xcc);
        EXPECT(gbc.readMem(0xa5a0), 0x4c);
        EXPECT(gbc.readMem(0xa5a1), 0x6e);
        // CC 00DF
        gbc.setState(0x4edd, 0xa504, 0x6190, 0xb4f7, 0x32c4, 0xcba, 0x1, 0x1);
        gbc.writeMem(0x4edd, { 0xcc, 0x73, 0x3c });
        gbc.writeMem(0xa502, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0xa502);
        EXPECT(gbc.pc(), 0x3c73);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa502), 0xe0);
        EXPECT(gbc.readMem(0xa503), 0x4e);
        // CC 00E0
        gbc.setState(0x73d4, 0x82dd, 0x3f50, 0xdf22, 0x571f, 0xc7a4, 0x0, 0x1);
        gbc.writeMem(0x73d4, { 0xcc, 0x66, 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x82dd);
        EXPECT(gbc.pc(), 0x73d7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CC 00E2
        gbc.setState(0xacad, 0x9aa1, 0xc5f0, 0x732d, 0x5f2e, 0xcd01, 0x1, 0x0);
        gbc.writeMem(0x9a9f, { 0x0, 0x0 });
        gbc.writeMem(0xacad, { 0xcc, 0x7a, 0x1c });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x9a9f);
        EXPECT(gbc.pc(), 0x1c7a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9a9f), 0xb0);
        EXPECT(gbc.readMem(0x9aa0), 0xac);
        EXPECT(gbc.readMem(0xacad), 0xcc);
        EXPECT(gbc.readMem(0xacae), 0x7a);
        EXPECT(gbc.readMem(0xacaf), 0x1c);
        // CC 00E6
        gbc.setState(0xef5a, 0xf39c, 0xd680, 0x2c0a, 0xb1de, 0x82d4, 0x0, 0x0);
        gbc.writeMem(0xef5a, { 0xcc, 0x58, 0x6a });
        gbc.writeMem(0xf39a, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xf39a);
        EXPECT(gbc.pc(), 0x6a58);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xef5a), 0xcc);
        EXPECT(gbc.readMem(0xef5b), 0x58);
        EXPECT(gbc.readMem(0xef5c), 0x6a);
        EXPECT(gbc.readMem(0xf39a), 0x5d);
        EXPECT(gbc.readMem(0xf39b), 0xef);
        // CC 00E7
        gbc.setState(0x7175, 0x48c3, 0x8f20, 0xdf63, 0x442c, 0x855e, 0x0, 0x1);
        gbc.writeMem(0x7175, { 0xcc, 0x40, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x48c3);
        EXPECT(gbc.pc(), 0x7178);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CC 00E9
        gbc.setState(0x282, 0xa515, 0xf2c0, 0xecbd, 0xd958, 0xf28c, 0x1, 0x0);
        gbc.writeMem(0x282, { 0xcc, 0x4a, 0x13 });
        gbc.writeMem(0xa513, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0xa513);
        EXPECT(gbc.pc(), 0x134a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa513), 0x85);
        EXPECT(gbc.readMem(0xa514), 0x2);
        // CC 00EA
        gbc.setState(0x7dcf, 0x2365, 0xd670, 0x2356, 0xb5e4, 0xc154, 0x0, 0x0);
        gbc.writeMem(0x7dcf, { 0xcc, 0x20, 0xf7 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x2365);
        EXPECT(gbc.pc(), 0x7dd2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CC 00EB
        gbc.setState(0x44e8, 0xbacf, 0x9220, 0x641e, 0x4891, 0x2833, 0x1, 0x1);
        gbc.writeMem(0x44e8, { 0xcc, 0x64, 0x31 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0xbacf);
        EXPECT(gbc.pc(), 0x44eb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CC 00ED
        gbc.setState(0xc803, 0x5049, 0x3540, 0x1037, 0x1025, 0xc91, 0x0, 0x1);
        gbc.writeMem(0xc803, { 0xcc, 0x56, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x5049);
        EXPECT(gbc.pc(), 0xc806);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc803), 0xcc);
        EXPECT(gbc.readMem(0xc804), 0x56);
        EXPECT(gbc.readMem(0xc805), 0x40);
        // CC 00EE
        gbc.setState(0x9b22, 0x5013, 0x7f50, 0xd357, 0x2f41, 0x938b, 0x0, 0x0);
        gbc.writeMem(0x9b22, { 0xcc, 0x92, 0xf3 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x5013);
        EXPECT(gbc.pc(), 0x9b25);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9b22), 0xcc);
        EXPECT(gbc.readMem(0x9b23), 0x92);
        EXPECT(gbc.readMem(0x9b24), 0xf3);
        // CC 00F0
        gbc.setState(0x8745, 0xed96, 0xc230, 0x1bac, 0x8b4b, 0x35b0, 0x1, 0x0);
        gbc.writeMem(0x8745, { 0xcc, 0xe1, 0x72 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xed96);
        EXPECT(gbc.pc(), 0x8748);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8745), 0xcc);
        EXPECT(gbc.readMem(0x8746), 0xe1);
        EXPECT(gbc.readMem(0x8747), 0x72);
        // CC 00F1
        gbc.setState(0x5523, 0x56e7, 0x1a60, 0x5062, 0x4f7a, 0x5769, 0x1, 0x0);
        gbc.writeMem(0x5523, { 0xcc, 0x6a, 0xc6 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x56e7);
        EXPECT(gbc.pc(), 0x5526);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CC 00F2
        gbc.setState(0xcc, 0x692, 0xe530, 0xf27d, 0x5989, 0x9fec, 0x0, 0x1);
        gbc.writeMem(0xcc, { 0xcc, 0x22, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x692);
        EXPECT(gbc.pc(), 0xcf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CC 00F3
        gbc.setState(0x519b, 0x8d92, 0x8380, 0xb0fd, 0xd01c, 0x7b06, 0x0, 0x0);
        gbc.writeMem(0x519b, { 0xcc, 0x56, 0x16 });
        gbc.writeMem(0x8d90, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x8d90);
        EXPECT(gbc.pc(), 0x1656);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d90), 0x9e);
        EXPECT(gbc.readMem(0x8d91), 0x51);
        // CC 00F4
        gbc.setState(0xaef5, 0x440, 0x3330, 0x639, 0xa78, 0x8f34, 0x1, 0x1);
        gbc.writeMem(0xaef5, { 0xcc, 0x82, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x440);
        EXPECT(gbc.pc(), 0xaef8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaef5), 0xcc);
        EXPECT(gbc.readMem(0xaef6), 0x82);
        EXPECT(gbc.readMem(0xaef7), 0x42);
        // CC 00F6
        gbc.setState(0x747e, 0xba0c, 0xd1b0, 0x6135, 0xd4d0, 0xb103, 0x1, 0x0);
        gbc.writeMem(0x747e, { 0xcc, 0x14, 0x38 });
        gbc.writeMem(0xba0a, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0xba0a);
        EXPECT(gbc.pc(), 0x3814);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xba0a), 0x81);
        EXPECT(gbc.readMem(0xba0b), 0x74);
        // CC 00F7
        gbc.setState(0xe0c6, 0xc7c1, 0x9170, 0x884c, 0x33e4, 0xf513, 0x1, 0x0);
        gbc.writeMem(0xe0c6, { 0xcc, 0xa4, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0xc7c1);
        EXPECT(gbc.pc(), 0xe0c9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe0c6), 0xcc);
        EXPECT(gbc.readMem(0xe0c7), 0xa4);
        EXPECT(gbc.readMem(0xe0c8), 0xe4);
        // CC 00F8
        gbc.setState(0x983c, 0xe2f5, 0x3d20, 0xf827, 0xae6, 0x3351, 0x1, 0x1);
        gbc.writeMem(0x983c, { 0xcc, 0x46, 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xe2f5);
        EXPECT(gbc.pc(), 0x983f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x983c), 0xcc);
        EXPECT(gbc.readMem(0x983d), 0x46);
        EXPECT(gbc.readMem(0x983e), 0xd8);
        // CC 00FA
        gbc.setState(0x712f, 0xb2fb, 0x82d0, 0x963e, 0x584d, 0x2d30, 0x0, 0x0);
        gbc.writeMem(0x712f, { 0xcc, 0x2c, 0x20 });
        gbc.writeMem(0xb2f9, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0xb2f9);
        EXPECT(gbc.pc(), 0x202c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb2f9), 0x32);
        EXPECT(gbc.readMem(0xb2fa), 0x71);
        // CC 00FB
        gbc.setState(0x1684, 0xa265, 0xd280, 0xb655, 0xf426, 0x1ea2, 0x1, 0x0);
        gbc.writeMem(0x1684, { 0xcc, 0xcc, 0x79 });
        gbc.writeMem(0xa263, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0xa263);
        EXPECT(gbc.pc(), 0x79cc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa263), 0x87);
        EXPECT(gbc.readMem(0xa264), 0x16);
        // CC 00FC
        gbc.setState(0x3999, 0x17b1, 0x5100, 0x45e8, 0x935d, 0x1d7e, 0x0, 0x1);
        gbc.writeMem(0x3999, { 0xcc, 0xd4, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x17b1);
        EXPECT(gbc.pc(), 0x399c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CC 00FD
        gbc.setState(0xbefe, 0xa98f, 0xb3b0, 0xf251, 0xc89e, 0x6106, 0x0, 0x0);
        gbc.writeMem(0xa98d, { 0x0, 0x0 });
        gbc.writeMem(0xbefe, { 0xcc, 0x5d, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0xa98d);
        EXPECT(gbc.pc(), 0xbb5d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa98d), 0x1);
        EXPECT(gbc.readMem(0xa98e), 0xbf);
        EXPECT(gbc.readMem(0xbefe), 0xcc);
        EXPECT(gbc.readMem(0xbeff), 0x5d);
        EXPECT(gbc.readMem(0xbf00), 0xbb);
        // CC 00FE
        gbc.setState(0x4a78, 0x5822, 0xb660, 0xda4c, 0x3c93, 0x3510, 0x1, 0x1);
        gbc.writeMem(0x4a78, { 0xcc, 0xd0, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x5822);
        EXPECT(gbc.pc(), 0x4a7b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CC 00FF
        gbc.setState(0x813a, 0xfab2, 0x90a0, 0x74c1, 0xfe9e, 0x57d6, 0x1, 0x1);
        gbc.writeMem(0x813a, { 0xcc, 0x3, 0xc4 });
        gbc.writeMem(0xfab0, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0xfab0);
        EXPECT(gbc.pc(), 0xc403);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x813a), 0xcc);
        EXPECT(gbc.readMem(0x813b), 0x3);
        EXPECT(gbc.readMem(0x813c), 0xc4);
        EXPECT(gbc.readMem(0xfab0), 0x3d);
        EXPECT(gbc.readMem(0xfab1), 0x81);
        // CC 0100
        gbc.setState(0x29ba, 0x8fb4, 0x6cd0, 0x5b7, 0x7148, 0xae69, 0x1, 0x1);
        gbc.writeMem(0x29ba, { 0xcc, 0x59, 0xdc });
        gbc.writeMem(0x8fb2, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x8fb2);
        EXPECT(gbc.pc(), 0xdc59);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8fb2), 0xbd);
        EXPECT(gbc.readMem(0x8fb3), 0x29);
        // CC 0103
        gbc.setState(0x7be, 0xd09a, 0x14a0, 0x225a, 0x9080, 0x7ef3, 0x0, 0x0);
        gbc.writeMem(0x7be, { 0xcc, 0x85, 0xf3 });
        gbc.writeMem(0xd098, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0xd098);
        EXPECT(gbc.pc(), 0xf385);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd098), 0xc1);
        EXPECT(gbc.readMem(0xd099), 0x7);
        // CC 0104
        gbc.setState(0xd21d, 0xd83f, 0x5b70, 0x48a8, 0xd1f5, 0x565d, 0x0, 0x0);
        gbc.writeMem(0xd21d, { 0xcc, 0x31, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xd83f);
        EXPECT(gbc.pc(), 0xd220);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd21d), 0xcc);
        EXPECT(gbc.readMem(0xd21e), 0x31);
        EXPECT(gbc.readMem(0xd21f), 0xfe);
        // CC 0105
        gbc.setState(0x1f49, 0xfda3, 0xd420, 0x431f, 0xd72d, 0xbef9, 0x1, 0x0);
        gbc.writeMem(0x1f49, { 0xcc, 0x9c, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xfda3);
        EXPECT(gbc.pc(), 0x1f4c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CC 0107
        gbc.setState(0x4303, 0x13bd, 0x5340, 0x8c6f, 0x5fb3, 0x4a2e, 0x1, 0x1);
        gbc.writeMem(0x4303, { 0xcc, 0x61, 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x13bd);
        EXPECT(gbc.pc(), 0x4306);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CC 0109
        gbc.setState(0xaeff, 0x1b1c, 0x630, 0xb73b, 0xc248, 0x2e46, 0x0, 0x0);
        gbc.writeMem(0xaeff, { 0xcc, 0x22, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x1b1c);
        EXPECT(gbc.pc(), 0xaf02);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaeff), 0xcc);
        EXPECT(gbc.readMem(0xaf00), 0x22);
        EXPECT(gbc.readMem(0xaf01), 0x41);
        // CC 010C
        gbc.setState(0x4ecc, 0x33b6, 0x8b30, 0x62fb, 0x719d, 0xf5c8, 0x0, 0x0);
        gbc.writeMem(0x4ecc, { 0xcc, 0x26, 0xf5 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x33b6);
        EXPECT(gbc.pc(), 0x4ecf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CC 010D
        gbc.setState(0x1a59, 0xf3fe, 0x1f20, 0x6f5c, 0x1624, 0xb82a, 0x0, 0x1);
        gbc.writeMem(0x1a59, { 0xcc, 0x47, 0x3b });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xf3fe);
        EXPECT(gbc.pc(), 0x1a5c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CC 010F
        gbc.setState(0xee7b, 0xd38b, 0x1bf0, 0x5655, 0xc28b, 0xc58f, 0x1, 0x1);
        gbc.writeMem(0xd389, { 0x0, 0x0 });
        gbc.writeMem(0xee7b, { 0xcc, 0x7e, 0x8d });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xd389);
        EXPECT(gbc.pc(), 0x8d7e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd389), 0x7e);
        EXPECT(gbc.readMem(0xd38a), 0xee);
        EXPECT(gbc.readMem(0xee7b), 0xcc);
        EXPECT(gbc.readMem(0xee7c), 0x7e);
        EXPECT(gbc.readMem(0xee7d), 0x8d);
        // CC 0110
        gbc.setState(0x9d3e, 0x7265, 0x8b50, 0xc666, 0x2c47, 0x247c, 0x1, 0x1);
        gbc.writeMem(0x9d3e, { 0xcc, 0xb1, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x7265);
        EXPECT(gbc.pc(), 0x9d41);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9d3e), 0xcc);
        EXPECT(gbc.readMem(0x9d3f), 0xb1);
        EXPECT(gbc.readMem(0x9d40), 0xe1);
        // CC 0111
        gbc.setState(0x3761, 0x14c5, 0xdc00, 0x98ee, 0x7cc2, 0x6609, 0x1, 0x1);
        gbc.writeMem(0x3761, { 0xcc, 0xbb, 0x3f });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x14c5);
        EXPECT(gbc.pc(), 0x3764);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CC 0114
        gbc.setState(0x2107, 0xb0a5, 0xeaa0, 0xae89, 0x8de5, 0x8ae, 0x1, 0x1);
        gbc.writeMem(0x2107, { 0xcc, 0xfd, 0x4d });
        gbc.writeMem(0xb0a3, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0xb0a3);
        EXPECT(gbc.pc(), 0x4dfd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb0a3), 0xa);
        EXPECT(gbc.readMem(0xb0a4), 0x21);
        // CC 0116
        gbc.setState(0x6a19, 0x93f9, 0xd7f0, 0x9bd6, 0x5f5, 0x4d45, 0x0, 0x0);
        gbc.writeMem(0x6a19, { 0xcc, 0xd4, 0x24 });
        gbc.writeMem(0x93f7, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x93f7);
        EXPECT(gbc.pc(), 0x24d4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x93f7), 0x1c);
        EXPECT(gbc.readMem(0x93f8), 0x6a);
        // CC 0117
        gbc.setState(0x9970, 0x8e92, 0xb810, 0x29f5, 0x84dc, 0x1e09, 0x0, 0x1);
        gbc.writeMem(0x9970, { 0xcc, 0x11, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x8e92);
        EXPECT(gbc.pc(), 0x9973);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9970), 0xcc);
        EXPECT(gbc.readMem(0x9971), 0x11);
        EXPECT(gbc.readMem(0x9972), 0xe0);
        // CC 0118
        gbc.setState(0x89b7, 0xb183, 0xd4e0, 0x9aff, 0x6c4a, 0xab25, 0x1, 0x1);
        gbc.writeMem(0x89b7, { 0xcc, 0x60, 0x5a });
        gbc.writeMem(0xb181, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0xb181);
        EXPECT(gbc.pc(), 0x5a60);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x89b7), 0xcc);
        EXPECT(gbc.readMem(0x89b8), 0x60);
        EXPECT(gbc.readMem(0x89b9), 0x5a);
        EXPECT(gbc.readMem(0xb181), 0xba);
        EXPECT(gbc.readMem(0xb182), 0x89);
        // CC 011A
        gbc.setState(0x8184, 0x776a, 0x5140, 0xdb33, 0xe4e8, 0x2203, 0x1, 0x0);
        gbc.writeMem(0x8184, { 0xcc, 0x59, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x776a);
        EXPECT(gbc.pc(), 0x8187);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8184), 0xcc);
        EXPECT(gbc.readMem(0x8185), 0x59);
        EXPECT(gbc.readMem(0x8186), 0x90);
        // CC 011B
        gbc.setState(0x94df, 0xfd8e, 0x1070, 0xf5e8, 0x483, 0x881, 0x0, 0x0);
        gbc.writeMem(0x94df, { 0xcc, 0x39, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0xfd8e);
        EXPECT(gbc.pc(), 0x94e2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x94df), 0xcc);
        EXPECT(gbc.readMem(0x94e0), 0x39);
        EXPECT(gbc.readMem(0x94e1), 0xd0);
        // CC 011E
        gbc.setState(0x59d2, 0xb4be, 0xfe20, 0xfe6c, 0xae1e, 0x7a5b, 0x0, 0x1);
        gbc.writeMem(0x59d2, { 0xcc, 0xc5, 0x1e });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0xb4be);
        EXPECT(gbc.pc(), 0x59d5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CC 011F
        gbc.setState(0xcc8, 0x9b06, 0x39a0, 0x9704, 0x54f1, 0xb4da, 0x0, 0x0);
        gbc.writeMem(0xcc8, { 0xcc, 0x1d, 0x8e });
        gbc.writeMem(0x9b04, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x9b04);
        EXPECT(gbc.pc(), 0x8e1d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9b04), 0xcb);
        EXPECT(gbc.readMem(0x9b05), 0xc);
        // CC 0121
        gbc.setState(0x6a84, 0x55d7, 0xdc60, 0xa6fe, 0x80ea, 0x9bc2, 0x1, 0x0);
        gbc.writeMem(0x6a84, { 0xcc, 0xca, 0x76 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x55d7);
        EXPECT(gbc.pc(), 0x6a87);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CC 0122
        gbc.setState(0x9428, 0x663c, 0xe830, 0x7122, 0x73c5, 0x407d, 0x0, 0x0);
        gbc.writeMem(0x9428, { 0xcc, 0xeb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x663c);
        EXPECT(gbc.pc(), 0x942b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9428), 0xcc);
        EXPECT(gbc.readMem(0x9429), 0xeb);
        EXPECT(gbc.readMem(0x942a), 0xb4);
        // CC 0124
        gbc.setState(0x9841, 0x3b8, 0x1010, 0xad5, 0xed18, 0x688f, 0x1, 0x1);
        gbc.writeMem(0x9841, { 0xcc, 0x1f, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x3b8);
        EXPECT(gbc.pc(), 0x9844);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9841), 0xcc);
        EXPECT(gbc.readMem(0x9842), 0x1f);
        EXPECT(gbc.readMem(0x9843), 0xaa);
        // CC 0126
        gbc.setState(0x994b, 0xd540, 0x36e0, 0xbd11, 0x3204, 0x92c5, 0x1, 0x0);
        gbc.writeMem(0x994b, { 0xcc, 0x80, 0x4e });
        gbc.writeMem(0xd53e, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0xd53e);
        EXPECT(gbc.pc(), 0x4e80);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x994b), 0xcc);
        EXPECT(gbc.readMem(0x994c), 0x80);
        EXPECT(gbc.readMem(0x994d), 0x4e);
        EXPECT(gbc.readMem(0xd53e), 0x4e);
        EXPECT(gbc.readMem(0xd53f), 0x99);
        // CC 0127
        gbc.setState(0x61d9, 0x6437, 0x9140, 0x6eec, 0x1c6c, 0xdf8a, 0x0, 0x0);
        gbc.writeMem(0x61d9, { 0xcc, 0x4e, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x6437);
        EXPECT(gbc.pc(), 0x61dc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CC 012B
        gbc.setState(0x849b, 0xfa0, 0x8e50, 0xc08c, 0xb1d4, 0x408e, 0x0, 0x0);
        gbc.writeMem(0x849b, { 0xcc, 0x22, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0xfa0);
        EXPECT(gbc.pc(), 0x849e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x849b), 0xcc);
        EXPECT(gbc.readMem(0x849c), 0x22);
        EXPECT(gbc.readMem(0x849d), 0x99);
        // CC 012D
        gbc.setState(0xcc32, 0xae1d, 0x1d60, 0xa7cd, 0x986d, 0x4064, 0x0, 0x0);
        gbc.writeMem(0xcc32, { 0xcc, 0x83, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0xae1d);
        EXPECT(gbc.pc(), 0xcc35);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcc32), 0xcc);
        EXPECT(gbc.readMem(0xcc33), 0x83);
        EXPECT(gbc.readMem(0xcc34), 0xa0);
        // CC 012F
        gbc.setState(0x300e, 0x832, 0xf200, 0x5c13, 0x9ffd, 0xec9b, 0x0, 0x0);
        gbc.writeMem(0x300e, { 0xcc, 0x2f, 0xa5 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x832);
        EXPECT(gbc.pc(), 0x3011);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CC 0130
        gbc.setState(0xa731, 0x47b1, 0x0, 0x5b5c, 0x326d, 0x3e8c, 0x1, 0x0);
        gbc.writeMem(0xa731, { 0xcc, 0xed, 0x2d });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x47b1);
        EXPECT(gbc.pc(), 0xa734);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa731), 0xcc);
        EXPECT(gbc.readMem(0xa732), 0xed);
        EXPECT(gbc.readMem(0xa733), 0x2d);
        // CC 0132
        gbc.setState(0x2200, 0x7677, 0x3a40, 0xdd6c, 0xbc61, 0xe08f, 0x1, 0x1);
        gbc.writeMem(0x2200, { 0xcc, 0xbe, 0x24 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x7677);
        EXPECT(gbc.pc(), 0x2203);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CC 0133
        gbc.setState(0x4122, 0xbeb5, 0x22d0, 0x992c, 0x9ba8, 0xf210, 0x1, 0x0);
        gbc.writeMem(0x4122, { 0xcc, 0x30, 0x74 });
        gbc.writeMem(0xbeb3, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xbeb3);
        EXPECT(gbc.pc(), 0x7430);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbeb3), 0x25);
        EXPECT(gbc.readMem(0xbeb4), 0x41);
        // CC 0134
        gbc.setState(0x6b4, 0x53de, 0x7400, 0x63b9, 0xdb45, 0x186, 0x1, 0x1);
        gbc.writeMem(0x6b4, { 0xcc, 0x16, 0xb1 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x53de);
        EXPECT(gbc.pc(), 0x6b7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CC 0136
        gbc.setState(0x29c8, 0xbe13, 0xf2e0, 0x4322, 0x873b, 0x291c, 0x0, 0x0);
        gbc.writeMem(0x29c8, { 0xcc, 0xc4, 0x54 });
        gbc.writeMem(0xbe11, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0xbe11);
        EXPECT(gbc.pc(), 0x54c4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbe11), 0xcb);
        EXPECT(gbc.readMem(0xbe12), 0x29);
        // CC 0137
        gbc.setState(0x7b3d, 0xcc59, 0x2e50, 0x5bb4, 0xc037, 0xc47a, 0x1, 0x1);
        gbc.writeMem(0x7b3d, { 0xcc, 0x2d, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xcc59);
        EXPECT(gbc.pc(), 0x7b40);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CC 0138
        gbc.setState(0x57b, 0x9a2f, 0x8190, 0x87c4, 0xce45, 0xbcbd, 0x0, 0x1);
        gbc.writeMem(0x57b, { 0xcc, 0x2a, 0xc5 });
        gbc.writeMem(0x9a2d, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x9a2d);
        EXPECT(gbc.pc(), 0xc52a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9a2d), 0x7e);
        EXPECT(gbc.readMem(0x9a2e), 0x5);
        // CC 0139
        gbc.setState(0xb255, 0xc413, 0x5450, 0x5aec, 0xb907, 0xf3f7, 0x1, 0x1);
        gbc.writeMem(0xb255, { 0xcc, 0x43, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0xc413);
        EXPECT(gbc.pc(), 0xb258);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb255), 0xcc);
        EXPECT(gbc.readMem(0xb256), 0x43);
        EXPECT(gbc.readMem(0xb257), 0x71);
        // CC 013B
        gbc.setState(0x73a2, 0x921a, 0x9ca0, 0x2ad0, 0xac35, 0x8e55, 0x0, 0x1);
        gbc.writeMem(0x73a2, { 0xcc, 0xde, 0x80 });
        gbc.writeMem(0x9218, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x9218);
        EXPECT(gbc.pc(), 0x80de);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9218), 0xa5);
        EXPECT(gbc.readMem(0x9219), 0x73);
        // CC 013D
        gbc.setState(0xaa0e, 0x36c8, 0x9350, 0x5315, 0x5fcd, 0x9519, 0x0, 0x0);
        gbc.writeMem(0xaa0e, { 0xcc, 0xce, 0x5 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x36c8);
        EXPECT(gbc.pc(), 0xaa11);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaa0e), 0xcc);
        EXPECT(gbc.readMem(0xaa0f), 0xce);
        EXPECT(gbc.readMem(0xaa10), 0x5);
        // CC 013E
        gbc.setState(0x18bc, 0xb257, 0x5ba0, 0xeae, 0xf484, 0xf907, 0x0, 0x1);
        gbc.writeMem(0x18bc, { 0xcc, 0xe3, 0x40 });
        gbc.writeMem(0xb255, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xb255);
        EXPECT(gbc.pc(), 0x40e3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb255), 0xbf);
        EXPECT(gbc.readMem(0xb256), 0x18);
        // CC 0140
        gbc.setState(0xa604, 0x476d, 0xde70, 0x3025, 0x679a, 0x8b02, 0x0, 0x0);
        gbc.writeMem(0xa604, { 0xcc, 0x15, 0x2c });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x476d);
        EXPECT(gbc.pc(), 0xa607);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa604), 0xcc);
        EXPECT(gbc.readMem(0xa605), 0x15);
        EXPECT(gbc.readMem(0xa606), 0x2c);
        // CC 0141
        gbc.setState(0x59ab, 0x8d8c, 0xd200, 0xebfa, 0xde5a, 0x979e, 0x0, 0x0);
        gbc.writeMem(0x59ab, { 0xcc, 0x7d, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x8d8c);
        EXPECT(gbc.pc(), 0x59ae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CC 0142
        gbc.setState(0x814c, 0x6024, 0x7750, 0x74e9, 0xedba, 0x5133, 0x0, 0x1);
        gbc.writeMem(0x814c, { 0xcc, 0x9d, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x6024);
        EXPECT(gbc.pc(), 0x814f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x814c), 0xcc);
        EXPECT(gbc.readMem(0x814d), 0x9d);
        EXPECT(gbc.readMem(0x814e), 0xd0);
        // CC 0143
        gbc.setState(0xe563, 0xaed1, 0xdd70, 0xad5f, 0x8098, 0xa2bf, 0x1, 0x1);
        gbc.writeMem(0xe563, { 0xcc, 0x1, 0x5d });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0xaed1);
        EXPECT(gbc.pc(), 0xe566);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe563), 0xcc);
        EXPECT(gbc.readMem(0xe564), 0x1);
        EXPECT(gbc.readMem(0xe565), 0x5d);
        // CC 0144
        gbc.setState(0x8cd3, 0xac17, 0x9990, 0xc76a, 0xbb76, 0xcc31, 0x0, 0x1);
        gbc.writeMem(0x8cd3, { 0xcc, 0x8, 0x2a });
        gbc.writeMem(0xac15, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xac15);
        EXPECT(gbc.pc(), 0x2a08);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8cd3), 0xcc);
        EXPECT(gbc.readMem(0x8cd4), 0x8);
        EXPECT(gbc.readMem(0x8cd5), 0x2a);
        EXPECT(gbc.readMem(0xac15), 0xd6);
        EXPECT(gbc.readMem(0xac16), 0x8c);
        // CC 0145
        gbc.setState(0xe9c7, 0xb50a, 0x5b10, 0x5ed4, 0x879b, 0x76d9, 0x0, 0x0);
        gbc.writeMem(0xe9c7, { 0xcc, 0xcf, 0x37 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0xb50a);
        EXPECT(gbc.pc(), 0xe9ca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe9c7), 0xcc);
        EXPECT(gbc.readMem(0xe9c8), 0xcf);
        EXPECT(gbc.readMem(0xe9c9), 0x37);
        // CC 0146
        gbc.setState(0x4b26, 0x8d82, 0xc160, 0x53e6, 0xb980, 0x7f10, 0x1, 0x0);
        gbc.writeMem(0x4b26, { 0xcc, 0xef, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x8d82);
        EXPECT(gbc.pc(), 0x4b29);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CC 0147
        gbc.setState(0xa8f5, 0xe91, 0x9d40, 0x9f99, 0x175d, 0x7851, 0x1, 0x1);
        gbc.writeMem(0xa8f5, { 0xcc, 0x4f, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xe91);
        EXPECT(gbc.pc(), 0xa8f8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa8f5), 0xcc);
        EXPECT(gbc.readMem(0xa8f6), 0x4f);
        EXPECT(gbc.readMem(0xa8f7), 0x20);
        // CC 0148
        gbc.setState(0x120, 0xf056, 0x8ac0, 0x69a9, 0x36ec, 0xb707, 0x1, 0x0);
        gbc.writeMem(0x120, { 0xcc, 0x1, 0xb3 });
        gbc.writeMem(0xf054, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xf054);
        EXPECT(gbc.pc(), 0xb301);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf054), 0x23);
        EXPECT(gbc.readMem(0xf055), 0x1);
        // CC 014A
        gbc.setState(0x7b5a, 0x506c, 0xd710, 0xbf1e, 0x915e, 0x9913, 0x0, 0x0);
        gbc.writeMem(0x7b5a, { 0xcc, 0xd, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x506c);
        EXPECT(gbc.pc(), 0x7b5d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CC 014C
        gbc.setState(0x266a, 0xf0da, 0x1440, 0x8add, 0x7283, 0x6447, 0x0, 0x0);
        gbc.writeMem(0x266a, { 0xcc, 0xb7, 0x5d });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0xf0da);
        EXPECT(gbc.pc(), 0x266d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CC 014D
        gbc.setState(0xc8c, 0xae92, 0x3550, 0x3a5c, 0xc653, 0x5cb9, 0x0, 0x1);
        gbc.writeMem(0xc8c, { 0xcc, 0xe0, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0xae92);
        EXPECT(gbc.pc(), 0xc8f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CC 014E
        gbc.setState(0x896b, 0x1260, 0x5a50, 0x484a, 0xfbf0, 0x68b4, 0x1, 0x0);
        gbc.writeMem(0x896b, { 0xcc, 0xe7, 0xf9 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x1260);
        EXPECT(gbc.pc(), 0x896e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x896b), 0xcc);
        EXPECT(gbc.readMem(0x896c), 0xe7);
        EXPECT(gbc.readMem(0x896d), 0xf9);
        // CC 0150
        gbc.setState(0x5ed3, 0xa0e5, 0x3fe0, 0x6ee4, 0x13e7, 0x1acc, 0x0, 0x1);
        gbc.writeMem(0x5ed3, { 0xcc, 0xb4, 0x6d });
        gbc.writeMem(0xa0e3, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0xa0e3);
        EXPECT(gbc.pc(), 0x6db4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa0e3), 0xd6);
        EXPECT(gbc.readMem(0xa0e4), 0x5e);
        // CC 0151
        gbc.setState(0xbb14, 0xa5d9, 0x60b0, 0x3627, 0x7ec1, 0x7bd4, 0x0, 0x1);
        gbc.writeMem(0xa5d7, { 0x0, 0x0 });
        gbc.writeMem(0xbb14, { 0xcc, 0x1b, 0x53 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xa5d7);
        EXPECT(gbc.pc(), 0x531b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa5d7), 0x17);
        EXPECT(gbc.readMem(0xa5d8), 0xbb);
        EXPECT(gbc.readMem(0xbb14), 0xcc);
        EXPECT(gbc.readMem(0xbb15), 0x1b);
        EXPECT(gbc.readMem(0xbb16), 0x53);
        // CC 0152
        gbc.setState(0xef3b, 0x963b, 0xf4a0, 0x4c34, 0x8434, 0x7c75, 0x1, 0x1);
        gbc.writeMem(0x9639, { 0x0, 0x0 });
        gbc.writeMem(0xef3b, { 0xcc, 0xee, 0xa5 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x9639);
        EXPECT(gbc.pc(), 0xa5ee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9639), 0x3e);
        EXPECT(gbc.readMem(0x963a), 0xef);
        EXPECT(gbc.readMem(0xef3b), 0xcc);
        EXPECT(gbc.readMem(0xef3c), 0xee);
        EXPECT(gbc.readMem(0xef3d), 0xa5);
        // CC 0153
        gbc.setState(0xc954, 0xed66, 0xd870, 0xf85f, 0x5b47, 0x9ece, 0x1, 0x1);
        gbc.writeMem(0xc954, { 0xcc, 0x56, 0x86 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0xed66);
        EXPECT(gbc.pc(), 0xc957);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc954), 0xcc);
        EXPECT(gbc.readMem(0xc955), 0x56);
        EXPECT(gbc.readMem(0xc956), 0x86);
        // CC 0155
        gbc.setState(0x192b, 0xf211, 0x6d10, 0xec26, 0x1352, 0x971a, 0x0, 0x1);
        gbc.writeMem(0x192b, { 0xcc, 0x10, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0xf211);
        EXPECT(gbc.pc(), 0x192e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CC 0156
        gbc.setState(0xee34, 0x1abe, 0xcf30, 0xf1bd, 0x77f4, 0x143a, 0x0, 0x0);
        gbc.writeMem(0xee34, { 0xcc, 0x9a, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x1abe);
        EXPECT(gbc.pc(), 0xee37);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xee34), 0xcc);
        EXPECT(gbc.readMem(0xee35), 0x9a);
        EXPECT(gbc.readMem(0xee36), 0x58);
        // CC 0157
        gbc.setState(0x4aee, 0xeabc, 0xf130, 0xa393, 0x64ba, 0xe604, 0x1, 0x0);
        gbc.writeMem(0x4aee, { 0xcc, 0x30, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0xeabc);
        EXPECT(gbc.pc(), 0x4af1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CC 0158
        gbc.setState(0x3f1, 0xb006, 0xb390, 0x787b, 0xdb60, 0xd70c, 0x0, 0x1);
        gbc.writeMem(0x3f1, { 0xcc, 0x77, 0x18 });
        gbc.writeMem(0xb004, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xb004);
        EXPECT(gbc.pc(), 0x1877);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb004), 0xf4);
        EXPECT(gbc.readMem(0xb005), 0x3);
        // CC 0159
        gbc.setState(0xdf8c, 0xac2f, 0xddf0, 0x7f0b, 0x12bd, 0xf255, 0x0, 0x0);
        gbc.writeMem(0xac2d, { 0x0, 0x0 });
        gbc.writeMem(0xdf8c, { 0xcc, 0x3f, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0xac2d);
        EXPECT(gbc.pc(), 0xe23f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xac2d), 0x8f);
        EXPECT(gbc.readMem(0xac2e), 0xdf);
        EXPECT(gbc.readMem(0xdf8c), 0xcc);
        EXPECT(gbc.readMem(0xdf8d), 0x3f);
        EXPECT(gbc.readMem(0xdf8e), 0xe2);
        // CC 015A
        gbc.setState(0x17d0, 0xc0c0, 0xa480, 0x85cd, 0x8898, 0x50d, 0x1, 0x0);
        gbc.writeMem(0x17d0, { 0xcc, 0xef, 0xa1 });
        gbc.writeMem(0xc0be, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0xc0be);
        EXPECT(gbc.pc(), 0xa1ef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc0be), 0xd3);
        EXPECT(gbc.readMem(0xc0bf), 0x17);
        // CC 015C
        gbc.setState(0x1211, 0x5f1c, 0x2030, 0x8201, 0xd771, 0xa5a5, 0x1, 0x1);
        gbc.writeMem(0x1211, { 0xcc, 0xa3, 0x86 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x5f1c);
        EXPECT(gbc.pc(), 0x1214);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CC 015D
        gbc.setState(0x3ccd, 0xbc91, 0x78a0, 0xbbbc, 0xa1b7, 0x9804, 0x0, 0x1);
        gbc.writeMem(0x3ccd, { 0xcc, 0xf7, 0xfb });
        gbc.writeMem(0xbc8f, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0xbc8f);
        EXPECT(gbc.pc(), 0xfbf7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbc8f), 0xd0);
        EXPECT(gbc.readMem(0xbc90), 0x3c);
        // CC 015E
        gbc.setState(0x180e, 0xad9e, 0xf50, 0x4982, 0x374a, 0x386b, 0x0, 0x0);
        gbc.writeMem(0x180e, { 0xcc, 0x32, 0x8f });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0xad9e);
        EXPECT(gbc.pc(), 0x1811);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CC 0160
        gbc.setState(0x1dcf, 0x926b, 0x7ad0, 0x3179, 0xff2, 0x1ddd, 0x0, 0x0);
        gbc.writeMem(0x1dcf, { 0xcc, 0x26, 0x34 });
        gbc.writeMem(0x9269, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x9269);
        EXPECT(gbc.pc(), 0x3426);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9269), 0xd2);
        EXPECT(gbc.readMem(0x926a), 0x1d);
        // CC 0161
        gbc.setState(0x2719, 0x325b, 0x4f60, 0x2ff2, 0xbb2, 0x1c38, 0x1, 0x1);
        gbc.writeMem(0x2719, { 0xcc, 0x95, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x325b);
        EXPECT(gbc.pc(), 0x271c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CC 0162
        gbc.setState(0x9755, 0xa21d, 0xc4a0, 0x2989, 0xa163, 0x63c5, 0x0, 0x1);
        gbc.writeMem(0x9755, { 0xcc, 0xf5, 0x11 });
        gbc.writeMem(0xa21b, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0xa21b);
        EXPECT(gbc.pc(), 0x11f5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9755), 0xcc);
        EXPECT(gbc.readMem(0x9756), 0xf5);
        EXPECT(gbc.readMem(0x9757), 0x11);
        EXPECT(gbc.readMem(0xa21b), 0x58);
        EXPECT(gbc.readMem(0xa21c), 0x97);
        // CC 0163
        gbc.setState(0xb385, 0xa4b5, 0x5490, 0xa970, 0x9a01, 0x27cb, 0x0, 0x0);
        gbc.writeMem(0xa4b3, { 0x0, 0x0 });
        gbc.writeMem(0xb385, { 0xcc, 0x17, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0xa4b3);
        EXPECT(gbc.pc(), 0x9817);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa4b3), 0x88);
        EXPECT(gbc.readMem(0xa4b4), 0xb3);
        EXPECT(gbc.readMem(0xb385), 0xcc);
        EXPECT(gbc.readMem(0xb386), 0x17);
        EXPECT(gbc.readMem(0xb387), 0x98);
        // CC 0165
        gbc.setState(0x1ea7, 0xedc6, 0xba00, 0x2f96, 0xbda3, 0x8ee7, 0x1, 0x1);
        gbc.writeMem(0x1ea7, { 0xcc, 0x2c, 0xec });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xedc6);
        EXPECT(gbc.pc(), 0x1eaa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CC 0166
        gbc.setState(0x5d8d, 0xb349, 0x8140, 0xba67, 0x5f6f, 0x53ff, 0x1, 0x1);
        gbc.writeMem(0x5d8d, { 0xcc, 0x8, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0xb349);
        EXPECT(gbc.pc(), 0x5d90);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CC 0168
        gbc.setState(0x44d2, 0x94f, 0x4030, 0xde47, 0x6cb4, 0x367e, 0x0, 0x0);
        gbc.writeMem(0x44d2, { 0xcc, 0xcf, 0xe8 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x94f);
        EXPECT(gbc.pc(), 0x44d5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CC 0169
        gbc.setState(0x60d5, 0xf204, 0xe630, 0xd138, 0x5772, 0xc9b4, 0x0, 0x0);
        gbc.writeMem(0x60d5, { 0xcc, 0xbe, 0x21 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xf204);
        EXPECT(gbc.pc(), 0x60d8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CC 016A
        gbc.setState(0x7717, 0xeed6, 0xab10, 0x6dbf, 0x3b3f, 0x8358, 0x1, 0x1);
        gbc.writeMem(0x7717, { 0xcc, 0x2b, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0xeed6);
        EXPECT(gbc.pc(), 0x771a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CC 016B
        gbc.setState(0x1550, 0xf2cb, 0xad30, 0xfa56, 0xd1fd, 0x8b08, 0x0, 0x0);
        gbc.writeMem(0x1550, { 0xcc, 0x12, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0xf2cb);
        EXPECT(gbc.pc(), 0x1553);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CC 016D
        gbc.setState(0xc3c7, 0x4865, 0xdc00, 0x359d, 0x1c71, 0xdefe, 0x1, 0x1);
        gbc.writeMem(0xc3c7, { 0xcc, 0x88, 0xf8 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x4865);
        EXPECT(gbc.pc(), 0xc3ca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc3c7), 0xcc);
        EXPECT(gbc.readMem(0xc3c8), 0x88);
        EXPECT(gbc.readMem(0xc3c9), 0xf8);
        // CC 016E
        gbc.setState(0x7cd1, 0x1e7a, 0x6260, 0x81d, 0x4036, 0x278a, 0x1, 0x0);
        gbc.writeMem(0x7cd1, { 0xcc, 0x30, 0x6f });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x1e7a);
        EXPECT(gbc.pc(), 0x7cd4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CC 016F
        gbc.setState(0xba9c, 0xd9e7, 0x5770, 0xe1f5, 0xc364, 0xca3d, 0x0, 0x1);
        gbc.writeMem(0xba9c, { 0xcc, 0xa6, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0xd9e7);
        EXPECT(gbc.pc(), 0xba9f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xba9c), 0xcc);
        EXPECT(gbc.readMem(0xba9d), 0xa6);
        EXPECT(gbc.readMem(0xba9e), 0x44);
        // CC 0171
        gbc.setState(0xe653, 0xa4a9, 0x7c30, 0xf5bf, 0x5e93, 0x2e42, 0x1, 0x1);
        gbc.writeMem(0xe653, { 0xcc, 0x28, 0x4b });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0xa4a9);
        EXPECT(gbc.pc(), 0xe656);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe653), 0xcc);
        EXPECT(gbc.readMem(0xe654), 0x28);
        EXPECT(gbc.readMem(0xe655), 0x4b);
        // CC 0176
        gbc.setState(0xa8d8, 0x2be4, 0x5d00, 0xd329, 0x4bca, 0x2f1d, 0x1, 0x1);
        gbc.writeMem(0xa8d8, { 0xcc, 0x95, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x2be4);
        EXPECT(gbc.pc(), 0xa8db);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa8d8), 0xcc);
        EXPECT(gbc.readMem(0xa8d9), 0x95);
        EXPECT(gbc.readMem(0xa8da), 0xce);
        // CC 0177
        gbc.setState(0x21f3, 0xdda, 0x7760, 0x6fee, 0x233a, 0x7480, 0x1, 0x1);
        gbc.writeMem(0x21f3, { 0xcc, 0xdc, 0x2d });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0xdda);
        EXPECT(gbc.pc(), 0x21f6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CC 0178
        gbc.setState(0xe8bd, 0x3e60, 0x4d00, 0x248e, 0x279f, 0xb21, 0x0, 0x0);
        gbc.writeMem(0xe8bd, { 0xcc, 0x1e, 0xfc });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x3e60);
        EXPECT(gbc.pc(), 0xe8c0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe8bd), 0xcc);
        EXPECT(gbc.readMem(0xe8be), 0x1e);
        EXPECT(gbc.readMem(0xe8bf), 0xfc);
        // CC 017A
        gbc.setState(0xce55, 0xbe3f, 0x5e10, 0x4811, 0xb645, 0x2206, 0x0, 0x1);
        gbc.writeMem(0xce55, { 0xcc, 0xfe, 0xcd });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0xbe3f);
        EXPECT(gbc.pc(), 0xce58);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xce55), 0xcc);
        EXPECT(gbc.readMem(0xce56), 0xfe);
        EXPECT(gbc.readMem(0xce57), 0xcd);
        // CC 017B
        gbc.setState(0x9385, 0x8703, 0x1de0, 0x5eab, 0xd04e, 0x58f1, 0x0, 0x1);
        gbc.writeMem(0x8701, { 0x0, 0x0 });
        gbc.writeMem(0x9385, { 0xcc, 0x6c, 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x8701);
        EXPECT(gbc.pc(), 0x976c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8701), 0x88);
        EXPECT(gbc.readMem(0x8702), 0x93);
        EXPECT(gbc.readMem(0x9385), 0xcc);
        EXPECT(gbc.readMem(0x9386), 0x6c);
        EXPECT(gbc.readMem(0x9387), 0x97);
        // CC 017C
        gbc.setState(0x4db4, 0xc21b, 0xe0d0, 0x8a72, 0xe9ef, 0xd1b1, 0x1, 0x1);
        gbc.writeMem(0x4db4, { 0xcc, 0xf, 0x29 });
        gbc.writeMem(0xc219, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0xc219);
        EXPECT(gbc.pc(), 0x290f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc219), 0xb7);
        EXPECT(gbc.readMem(0xc21a), 0x4d);
        // CC 017E
        gbc.setState(0x5044, 0x5e99, 0xa940, 0x825f, 0xab28, 0xb0d, 0x0, 0x1);
        gbc.writeMem(0x5044, { 0xcc, 0x2c, 0x2f });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x5e99);
        EXPECT(gbc.pc(), 0x5047);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CC 017F
        gbc.setState(0x2591, 0xb311, 0x8c80, 0xf0a8, 0x3c21, 0x2efb, 0x1, 0x1);
        gbc.writeMem(0x2591, { 0xcc, 0x6d, 0x8f });
        gbc.writeMem(0xb30f, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0xb30f);
        EXPECT(gbc.pc(), 0x8f6d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb30f), 0x94);
        EXPECT(gbc.readMem(0xb310), 0x25);
        // CC 0182
        gbc.setState(0x1320, 0xf4de, 0x3e70, 0xe461, 0xb238, 0x405, 0x1, 0x0);
        gbc.writeMem(0x1320, { 0xcc, 0xdf, 0xb5 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0xf4de);
        EXPECT(gbc.pc(), 0x1323);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CC 0183
        gbc.setState(0x2e6a, 0xe75d, 0x7ec0, 0xc30b, 0x3ba8, 0x6914, 0x1, 0x1);
        gbc.writeMem(0x2e6a, { 0xcc, 0xcd, 0x2d });
        gbc.writeMem(0xe75b, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0xe75b);
        EXPECT(gbc.pc(), 0x2dcd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe75b), 0x6d);
        EXPECT(gbc.readMem(0xe75c), 0x2e);
        // CC 0184
        gbc.setState(0x9640, 0xfbd2, 0x88c0, 0x352b, 0xa06b, 0x5dce, 0x0, 0x0);
        gbc.writeMem(0x9640, { 0xcc, 0x37, 0x90 });
        gbc.writeMem(0xfbd0, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0xfbd0);
        EXPECT(gbc.pc(), 0x9037);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9640), 0xcc);
        EXPECT(gbc.readMem(0x9641), 0x37);
        EXPECT(gbc.readMem(0x9642), 0x90);
        EXPECT(gbc.readMem(0xfbd0), 0x43);
        EXPECT(gbc.readMem(0xfbd1), 0x96);
        // CC 0185
        gbc.setState(0x3231, 0x6297, 0x1770, 0x8df1, 0xadfb, 0x7413, 0x0, 0x0);
        gbc.writeMem(0x3231, { 0xcc, 0xc6, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x6297);
        EXPECT(gbc.pc(), 0x3234);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CC 0186
        gbc.setState(0xa298, 0x5094, 0x1e40, 0xf6a6, 0x13eb, 0x5e4e, 0x1, 0x0);
        gbc.writeMem(0xa298, { 0xcc, 0xa9, 0xd7 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x5094);
        EXPECT(gbc.pc(), 0xa29b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa298), 0xcc);
        EXPECT(gbc.readMem(0xa299), 0xa9);
        EXPECT(gbc.readMem(0xa29a), 0xd7);
        // CC 0187
        gbc.setState(0x78eb, 0x4, 0xc110, 0xbfd7, 0x23c1, 0x6255, 0x1, 0x1);
        gbc.writeMem(0x78eb, { 0xcc, 0xfc, 0xb5 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x4);
        EXPECT(gbc.pc(), 0x78ee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CC 0188
        gbc.setState(0x1a62, 0x46a7, 0x9c00, 0x1d45, 0xbb1d, 0x9d39, 0x0, 0x0);
        gbc.writeMem(0x1a62, { 0xcc, 0x25, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x46a7);
        EXPECT(gbc.pc(), 0x1a65);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CC 0189
        gbc.setState(0x1c30, 0x9fdc, 0xe3d0, 0x45f9, 0x1eaf, 0xe587, 0x0, 0x0);
        gbc.writeMem(0x1c30, { 0xcc, 0xbd, 0x2f });
        gbc.writeMem(0x9fda, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x9fda);
        EXPECT(gbc.pc(), 0x2fbd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9fda), 0x33);
        EXPECT(gbc.readMem(0x9fdb), 0x1c);
        // CC 018A
        gbc.setState(0xe973, 0xcf35, 0xb3a0, 0xb5d0, 0x6220, 0x6bb1, 0x1, 0x1);
        gbc.writeMem(0xcf33, { 0x0, 0x0 });
        gbc.writeMem(0xe973, { 0xcc, 0x63, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0xcf33);
        EXPECT(gbc.pc(), 0xac63);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcf33), 0x76);
        EXPECT(gbc.readMem(0xcf34), 0xe9);
        EXPECT(gbc.readMem(0xe973), 0xcc);
        EXPECT(gbc.readMem(0xe974), 0x63);
        EXPECT(gbc.readMem(0xe975), 0xac);
        // CC 018C
        gbc.setState(0x4e5d, 0xf500, 0x2650, 0x7b7c, 0x19c5, 0x57a4, 0x0, 0x0);
        gbc.writeMem(0x4e5d, { 0xcc, 0x46, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0xf500);
        EXPECT(gbc.pc(), 0x4e60);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CC 018D
        gbc.setState(0x24cf, 0x2dcf, 0xed10, 0xcc9c, 0xdd34, 0xa6d, 0x0, 0x1);
        gbc.writeMem(0x24cf, { 0xcc, 0xee, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x2dcf);
        EXPECT(gbc.pc(), 0x24d2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CC 018E
        gbc.setState(0xefd5, 0xd4de, 0xf580, 0xd943, 0x551c, 0x12e4, 0x0, 0x1);
        gbc.writeMem(0xd4dc, { 0x0, 0x0 });
        gbc.writeMem(0xefd5, { 0xcc, 0xef, 0x1e });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0xd4dc);
        EXPECT(gbc.pc(), 0x1eef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd4dc), 0xd8);
        EXPECT(gbc.readMem(0xd4dd), 0xef);
        EXPECT(gbc.readMem(0xefd5), 0xcc);
        EXPECT(gbc.readMem(0xefd6), 0xef);
        EXPECT(gbc.readMem(0xefd7), 0x1e);
        // CC 0190
        gbc.setState(0xb293, 0xf1e1, 0x46b0, 0x8742, 0xdc9b, 0xfc1, 0x1, 0x0);
        gbc.writeMem(0xb293, { 0xcc, 0x93, 0x40 });
        gbc.writeMem(0xf1df, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0xf1df);
        EXPECT(gbc.pc(), 0x4093);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb293), 0xcc);
        EXPECT(gbc.readMem(0xb294), 0x93);
        EXPECT(gbc.readMem(0xb295), 0x40);
        EXPECT(gbc.readMem(0xf1df), 0x96);
        EXPECT(gbc.readMem(0xf1e0), 0xb2);
        // CC 0193
        gbc.setState(0x8a88, 0xd6ed, 0xa8e0, 0x86e2, 0x6f9d, 0x6ba6, 0x1, 0x1);
        gbc.writeMem(0x8a88, { 0xcc, 0xbe, 0x8f });
        gbc.writeMem(0xd6eb, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0xd6eb);
        EXPECT(gbc.pc(), 0x8fbe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8a88), 0xcc);
        EXPECT(gbc.readMem(0x8a89), 0xbe);
        EXPECT(gbc.readMem(0x8a8a), 0x8f);
        EXPECT(gbc.readMem(0xd6eb), 0x8b);
        EXPECT(gbc.readMem(0xd6ec), 0x8a);
        // CC 0194
        gbc.setState(0x2469, 0xa820, 0xa50, 0x9ead, 0xfa59, 0xe514, 0x0, 0x0);
        gbc.writeMem(0x2469, { 0xcc, 0x65, 0x16 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0xa820);
        EXPECT(gbc.pc(), 0x246c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CC 0195
        gbc.setState(0x8cf7, 0xc8a0, 0xe10, 0x1a7e, 0x9879, 0x3307, 0x0, 0x0);
        gbc.writeMem(0x8cf7, { 0xcc, 0x54, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xc8a0);
        EXPECT(gbc.pc(), 0x8cfa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8cf7), 0xcc);
        EXPECT(gbc.readMem(0x8cf8), 0x54);
        EXPECT(gbc.readMem(0x8cf9), 0x84);
        // CC 0196
        gbc.setState(0x869, 0x2e5a, 0x1710, 0xa157, 0xa992, 0x12fb, 0x1, 0x0);
        gbc.writeMem(0x869, { 0xcc, 0x7, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x2e5a);
        EXPECT(gbc.pc(), 0x86c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CC 0197
        gbc.setState(0xb59c, 0x1845, 0x3a50, 0x80d, 0xc09a, 0xe7c2, 0x1, 0x1);
        gbc.writeMem(0xb59c, { 0xcc, 0xbd, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x1845);
        EXPECT(gbc.pc(), 0xb59f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb59c), 0xcc);
        EXPECT(gbc.readMem(0xb59d), 0xbd);
        EXPECT(gbc.readMem(0xb59e), 0xd4);
        // CC 0198
        gbc.setState(0x860f, 0x32fa, 0x1340, 0x800e, 0xc8c8, 0x437, 0x0, 0x0);
        gbc.writeMem(0x860f, { 0xcc, 0x95, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x32fa);
        EXPECT(gbc.pc(), 0x8612);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x860f), 0xcc);
        EXPECT(gbc.readMem(0x8610), 0x95);
        EXPECT(gbc.readMem(0x8611), 0xe1);
        // CC 0199
        gbc.setState(0xbe70, 0xe070, 0x7710, 0x7986, 0xd32e, 0x1971, 0x0, 0x1);
        gbc.writeMem(0xbe70, { 0xcc, 0x2, 0xea });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xe070);
        EXPECT(gbc.pc(), 0xbe73);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbe70), 0xcc);
        EXPECT(gbc.readMem(0xbe71), 0x2);
        EXPECT(gbc.readMem(0xbe72), 0xea);
        // CC 019A
        gbc.setState(0x3a61, 0x171, 0x7120, 0x48de, 0x14, 0x62b7, 0x0, 0x0);
        gbc.writeMem(0x3a61, { 0xcc, 0x56, 0xdd });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x171);
        EXPECT(gbc.pc(), 0x3a64);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CC 019B
        gbc.setState(0x249e, 0xe4b, 0x9a70, 0x8814, 0xd533, 0xd607, 0x1, 0x0);
        gbc.writeMem(0x249e, { 0xcc, 0xae, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xe4b);
        EXPECT(gbc.pc(), 0x24a1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CC 019C
        gbc.setState(0x5844, 0xd16b, 0x4630, 0x404d, 0x6c02, 0x8bd3, 0x0, 0x1);
        gbc.writeMem(0x5844, { 0xcc, 0x2b, 0xd2 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0xd16b);
        EXPECT(gbc.pc(), 0x5847);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CC 019F
        gbc.setState(0x57eb, 0xdf90, 0x8d00, 0x6817, 0x6ea7, 0x9a06, 0x0, 0x0);
        gbc.writeMem(0x57eb, { 0xcc, 0x83, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0xdf90);
        EXPECT(gbc.pc(), 0x57ee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CC 01A0
        gbc.setState(0x4f90, 0xb69b, 0x6070, 0x72f2, 0xbd35, 0x67af, 0x1, 0x0);
        gbc.writeMem(0x4f90, { 0xcc, 0xfb, 0xb0 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0xb69b);
        EXPECT(gbc.pc(), 0x4f93);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CC 01A2
        gbc.setState(0x3b1f, 0xf572, 0x13b0, 0xb149, 0x9463, 0x8db5, 0x0, 0x1);
        gbc.writeMem(0x3b1f, { 0xcc, 0x36, 0xdc });
        gbc.writeMem(0xf570, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0xf570);
        EXPECT(gbc.pc(), 0xdc36);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf570), 0x22);
        EXPECT(gbc.readMem(0xf571), 0x3b);
        // CC 01A3
        gbc.setState(0xc314, 0x3cad, 0x2870, 0x14dd, 0xe67c, 0xd051, 0x1, 0x1);
        gbc.writeMem(0xc314, { 0xcc, 0x52, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x3cad);
        EXPECT(gbc.pc(), 0xc317);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc314), 0xcc);
        EXPECT(gbc.readMem(0xc315), 0x52);
        EXPECT(gbc.readMem(0xc316), 0x92);
        // CC 01A4
        gbc.setState(0x8883, 0xc784, 0x6ce0, 0x25b4, 0xc779, 0x33a5, 0x0, 0x0);
        gbc.writeMem(0x8883, { 0xcc, 0x57, 0x86 });
        gbc.writeMem(0xc782, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xc782);
        EXPECT(gbc.pc(), 0x8657);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8883), 0xcc);
        EXPECT(gbc.readMem(0x8884), 0x57);
        EXPECT(gbc.readMem(0x8885), 0x86);
        EXPECT(gbc.readMem(0xc782), 0x86);
        EXPECT(gbc.readMem(0xc783), 0x88);
        // CC 01A6
        gbc.setState(0x4881, 0xd711, 0x4a00, 0x4bb5, 0xbe2a, 0xd03e, 0x0, 0x1);
        gbc.writeMem(0x4881, { 0xcc, 0xa3, 0x7 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0xd711);
        EXPECT(gbc.pc(), 0x4884);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CC 01A7
        gbc.setState(0x7412, 0xdca8, 0x96f0, 0x798c, 0x1544, 0xeffd, 0x0, 0x1);
        gbc.writeMem(0x7412, { 0xcc, 0xdc, 0xc2 });
        gbc.writeMem(0xdca6, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xdca6);
        EXPECT(gbc.pc(), 0xc2dc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdca6), 0x15);
        EXPECT(gbc.readMem(0xdca7), 0x74);
        // CC 01A8
        gbc.setState(0x4a47, 0xbf95, 0xc80, 0xfc54, 0xa3a1, 0xd92, 0x1, 0x0);
        gbc.writeMem(0x4a47, { 0xcc, 0x3b, 0x3d });
        gbc.writeMem(0xbf93, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0xbf93);
        EXPECT(gbc.pc(), 0x3d3b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbf93), 0x4a);
        EXPECT(gbc.readMem(0xbf94), 0x4a);
        // CC 01A9
        gbc.setState(0x72a4, 0x4d76, 0xa50, 0xd489, 0x13fc, 0x6c61, 0x0, 0x1);
        gbc.writeMem(0x72a4, { 0xcc, 0x7d, 0x3f });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x4d76);
        EXPECT(gbc.pc(), 0x72a7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CC 01AA
        gbc.setState(0x9717, 0xd92f, 0xe3e0, 0xa4d7, 0xef50, 0xb70, 0x1, 0x1);
        gbc.writeMem(0x9717, { 0xcc, 0x8e, 0x85 });
        gbc.writeMem(0xd92d, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0xd92d);
        EXPECT(gbc.pc(), 0x858e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9717), 0xcc);
        EXPECT(gbc.readMem(0x9718), 0x8e);
        EXPECT(gbc.readMem(0x9719), 0x85);
        EXPECT(gbc.readMem(0xd92d), 0x1a);
        EXPECT(gbc.readMem(0xd92e), 0x97);
        // CC 01AD
        gbc.setState(0xa4e4, 0xed24, 0xb5a0, 0xe7cb, 0xdcb7, 0x116e, 0x1, 0x1);
        gbc.writeMem(0xa4e4, { 0xcc, 0xe0, 0xb1 });
        gbc.writeMem(0xed22, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xed22);
        EXPECT(gbc.pc(), 0xb1e0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa4e4), 0xcc);
        EXPECT(gbc.readMem(0xa4e5), 0xe0);
        EXPECT(gbc.readMem(0xa4e6), 0xb1);
        EXPECT(gbc.readMem(0xed22), 0xe7);
        EXPECT(gbc.readMem(0xed23), 0xa4);
        // CC 01AE
        gbc.setState(0x47c0, 0x4a64, 0x8d40, 0xc443, 0x4c7f, 0x780b, 0x0, 0x0);
        gbc.writeMem(0x47c0, { 0xcc, 0xbd, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x4a64);
        EXPECT(gbc.pc(), 0x47c3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CC 01AF
        gbc.setState(0x4747, 0x6ef1, 0x4000, 0xee44, 0x890a, 0x9675, 0x0, 0x1);
        gbc.writeMem(0x4747, { 0xcc, 0x1f, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x6ef1);
        EXPECT(gbc.pc(), 0x474a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CC 01B1
        gbc.setState(0x3e97, 0xf677, 0x6c10, 0x342f, 0x28a2, 0xebb1, 0x1, 0x1);
        gbc.writeMem(0x3e97, { 0xcc, 0xcb, 0xd6 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0xf677);
        EXPECT(gbc.pc(), 0x3e9a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CC 01B2
        gbc.setState(0x7b92, 0xcc45, 0x4960, 0x5c16, 0xd4ef, 0x3c6e, 0x0, 0x0);
        gbc.writeMem(0x7b92, { 0xcc, 0xee, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xcc45);
        EXPECT(gbc.pc(), 0x7b95);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CC 01B3
        gbc.setState(0xd96b, 0x8f70, 0x4a80, 0x33a3, 0xd1b9, 0x5a58, 0x0, 0x1);
        gbc.writeMem(0x8f6e, { 0x0, 0x0 });
        gbc.writeMem(0xd96b, { 0xcc, 0xb4, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x8f6e);
        EXPECT(gbc.pc(), 0xbfb4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8f6e), 0x6e);
        EXPECT(gbc.readMem(0x8f6f), 0xd9);
        EXPECT(gbc.readMem(0xd96b), 0xcc);
        EXPECT(gbc.readMem(0xd96c), 0xb4);
        EXPECT(gbc.readMem(0xd96d), 0xbf);
        // CC 01B4
        gbc.setState(0xcb9a, 0x9616, 0xdd60, 0xa910, 0xadfa, 0xead2, 0x0, 0x1);
        gbc.writeMem(0xcb9a, { 0xcc, 0x54, 0x46 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x9616);
        EXPECT(gbc.pc(), 0xcb9d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcb9a), 0xcc);
        EXPECT(gbc.readMem(0xcb9b), 0x54);
        EXPECT(gbc.readMem(0xcb9c), 0x46);
        // CC 01B7
        gbc.setState(0x44e1, 0xccd5, 0xb0f0, 0x6801, 0x52ec, 0x4b66, 0x0, 0x1);
        gbc.writeMem(0x44e1, { 0xcc, 0xcb, 0x8c });
        gbc.writeMem(0xccd3, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0xccd3);
        EXPECT(gbc.pc(), 0x8ccb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xccd3), 0xe4);
        EXPECT(gbc.readMem(0xccd4), 0x44);
        // CC 01BA
        gbc.setState(0x4877, 0xaf03, 0xc730, 0xa221, 0x1a77, 0xcc9a, 0x1, 0x1);
        gbc.writeMem(0x4877, { 0xcc, 0xf4, 0xa1 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0xaf03);
        EXPECT(gbc.pc(), 0x487a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CC 01BB
        gbc.setState(0x134f, 0xe5ce, 0x5ea0, 0x98a8, 0xde29, 0x4033, 0x1, 0x0);
        gbc.writeMem(0x134f, { 0xcc, 0xc6, 0x57 });
        gbc.writeMem(0xe5cc, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0xe5cc);
        EXPECT(gbc.pc(), 0x57c6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe5cc), 0x52);
        EXPECT(gbc.readMem(0xe5cd), 0x13);
        // CC 01BC
        gbc.setState(0x5a73, 0xca75, 0xe510, 0x3329, 0x1609, 0x9c3a, 0x1, 0x1);
        gbc.writeMem(0x5a73, { 0xcc, 0xd7, 0xff });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0xca75);
        EXPECT(gbc.pc(), 0x5a76);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CC 01C1
        gbc.setState(0x6653, 0x532c, 0xe350, 0xa4ae, 0x550, 0xe917, 0x0, 0x1);
        gbc.writeMem(0x6653, { 0xcc, 0x73, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x532c);
        EXPECT(gbc.pc(), 0x6656);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CC 01C3
        gbc.setState(0x589c, 0x2123, 0x9720, 0xecef, 0xa2fc, 0xec84, 0x0, 0x1);
        gbc.writeMem(0x589c, { 0xcc, 0x88, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x2123);
        EXPECT(gbc.pc(), 0x589f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CC 01C4
        gbc.setState(0x7cc1, 0xe6fe, 0x1400, 0xd099, 0x9ea4, 0x6b7b, 0x0, 0x1);
        gbc.writeMem(0x7cc1, { 0xcc, 0xaa, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0xe6fe);
        EXPECT(gbc.pc(), 0x7cc4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CC 01C6
        gbc.setState(0x806a, 0xe220, 0xca10, 0x6c3c, 0xd080, 0xfcc7, 0x0, 0x1);
        gbc.writeMem(0x806a, { 0xcc, 0xba, 0x1b });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0xe220);
        EXPECT(gbc.pc(), 0x806d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x806a), 0xcc);
        EXPECT(gbc.readMem(0x806b), 0xba);
        EXPECT(gbc.readMem(0x806c), 0x1b);
        // CC 01C7
        gbc.setState(0xd86b, 0xf65b, 0x5f50, 0x9e95, 0xed6d, 0x473f, 0x0, 0x1);
        gbc.writeMem(0xd86b, { 0xcc, 0x63, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xf65b);
        EXPECT(gbc.pc(), 0xd86e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd86b), 0xcc);
        EXPECT(gbc.readMem(0xd86c), 0x63);
        EXPECT(gbc.readMem(0xd86d), 0x52);
        // CC 01C8
        gbc.setState(0xc071, 0xbe37, 0x3fc0, 0xfded, 0xf60b, 0xd1b8, 0x0, 0x0);
        gbc.writeMem(0xbe35, { 0x0, 0x0 });
        gbc.writeMem(0xc071, { 0xcc, 0xbb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0xbe35);
        EXPECT(gbc.pc(), 0xeebb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbe35), 0x74);
        EXPECT(gbc.readMem(0xbe36), 0xc0);
        EXPECT(gbc.readMem(0xc071), 0xcc);
        EXPECT(gbc.readMem(0xc072), 0xbb);
        EXPECT(gbc.readMem(0xc073), 0xee);
        // CC 01C9
        gbc.setState(0x8883, 0xc006, 0x8c00, 0x47f8, 0xf742, 0x31a5, 0x0, 0x0);
        gbc.writeMem(0x8883, { 0xcc, 0x57, 0x86 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xc006);
        EXPECT(gbc.pc(), 0x8886);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8883), 0xcc);
        EXPECT(gbc.readMem(0x8884), 0x57);
        EXPECT(gbc.readMem(0x8885), 0x86);
        // CC 01CA
        gbc.setState(0xc48a, 0xd00f, 0xc320, 0xc084, 0xd33d, 0xff26, 0x1, 0x1);
        gbc.writeMem(0xc48a, { 0xcc, 0x25, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0xd00f);
        EXPECT(gbc.pc(), 0xc48d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc48a), 0xcc);
        EXPECT(gbc.readMem(0xc48b), 0x25);
        EXPECT(gbc.readMem(0xc48c), 0x32);
        // CC 01CC
        gbc.setState(0x1d, 0xb16d, 0xda80, 0xf464, 0x68f0, 0x5c98, 0x1, 0x0);
        gbc.writeMem(0x1d, { 0xcc, 0x86, 0x51 });
        gbc.writeMem(0xb16b, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xb16b);
        EXPECT(gbc.pc(), 0x5186);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb16b), 0x20);
        EXPECT(gbc.readMem(0xb16c), 0x0);
        // CC 01CD
        gbc.setState(0xad64, 0x91fc, 0x4150, 0x3225, 0xb9fd, 0xf83f, 0x0, 0x1);
        gbc.writeMem(0xad64, { 0xcc, 0xb4, 0x25 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x91fc);
        EXPECT(gbc.pc(), 0xad67);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xad64), 0xcc);
        EXPECT(gbc.readMem(0xad65), 0xb4);
        EXPECT(gbc.readMem(0xad66), 0x25);
        // CC 01CF
        gbc.setState(0x3697, 0x556c, 0xb570, 0x5060, 0xa561, 0x94f0, 0x1, 0x0);
        gbc.writeMem(0x3697, { 0xcc, 0xa, 0xdd });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x556c);
        EXPECT(gbc.pc(), 0x369a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CC 01D0
        gbc.setState(0x31c6, 0xf8c5, 0xd5c0, 0x34b6, 0x20be, 0x4c75, 0x0, 0x0);
        gbc.writeMem(0x31c6, { 0xcc, 0x5a, 0xc6 });
        gbc.writeMem(0xf8c3, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xf8c3);
        EXPECT(gbc.pc(), 0xc65a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf8c3), 0xc9);
        EXPECT(gbc.readMem(0xf8c4), 0x31);
        // CC 01D1
        gbc.setState(0x4c9, 0xb99d, 0x85f0, 0x6d7c, 0x2dc2, 0xc871, 0x0, 0x1);
        gbc.writeMem(0x4c9, { 0xcc, 0x8c, 0xad });
        gbc.writeMem(0xb99b, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xb99b);
        EXPECT(gbc.pc(), 0xad8c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb99b), 0xcc);
        EXPECT(gbc.readMem(0xb99c), 0x4);
        // CC 01D2
        gbc.setState(0x1c3c, 0xb899, 0x3840, 0xcdc1, 0x7d6b, 0x76e6, 0x0, 0x0);
        gbc.writeMem(0x1c3c, { 0xcc, 0x29, 0x6e });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xb899);
        EXPECT(gbc.pc(), 0x1c3f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CC 01D4
        gbc.setState(0xde57, 0x5747, 0xfa00, 0xc1ac, 0x1f5c, 0x3bfe, 0x1, 0x1);
        gbc.writeMem(0xde57, { 0xcc, 0x6f, 0x43 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x5747);
        EXPECT(gbc.pc(), 0xde5a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xde57), 0xcc);
        EXPECT(gbc.readMem(0xde58), 0x6f);
        EXPECT(gbc.readMem(0xde59), 0x43);
        // CC 01D6
        gbc.setState(0xa86f, 0x1f36, 0xc570, 0x8fb6, 0x6b4, 0x27a0, 0x1, 0x1);
        gbc.writeMem(0xa86f, { 0xcc, 0x9, 0x19 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x1f36);
        EXPECT(gbc.pc(), 0xa872);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa86f), 0xcc);
        EXPECT(gbc.readMem(0xa870), 0x9);
        EXPECT(gbc.readMem(0xa871), 0x19);
        // CC 01D7
        gbc.setState(0x97ec, 0xe8f4, 0x5660, 0x2651, 0x84fd, 0xd4cd, 0x0, 0x0);
        gbc.writeMem(0x97ec, { 0xcc, 0xdc, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0xe8f4);
        EXPECT(gbc.pc(), 0x97ef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x97ec), 0xcc);
        EXPECT(gbc.readMem(0x97ed), 0xdc);
        EXPECT(gbc.readMem(0x97ee), 0xed);
        // CC 01D8
        gbc.setState(0x3d15, 0x255c, 0x740, 0x8e47, 0xa937, 0x39e, 0x0, 0x0);
        gbc.writeMem(0x3d15, { 0xcc, 0x18, 0x5f });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x255c);
        EXPECT(gbc.pc(), 0x3d18);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CC 01DA
        gbc.setState(0x1b1f, 0xa9fe, 0x3e0, 0xf64, 0x2419, 0x7bcc, 0x1, 0x0);
        gbc.writeMem(0x1b1f, { 0xcc, 0x21, 0x1b });
        gbc.writeMem(0xa9fc, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0xa9fc);
        EXPECT(gbc.pc(), 0x1b21);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa9fc), 0x22);
        EXPECT(gbc.readMem(0xa9fd), 0x1b);
        // CC 01DB
        gbc.setState(0xd244, 0xe949, 0xe180, 0x7e2d, 0x5ff2, 0x219, 0x1, 0x0);
        gbc.writeMem(0xd244, { 0xcc, 0x12, 0x73 });
        gbc.writeMem(0xe947, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0xe947);
        EXPECT(gbc.pc(), 0x7312);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd244), 0xcc);
        EXPECT(gbc.readMem(0xd245), 0x12);
        EXPECT(gbc.readMem(0xd246), 0x73);
        EXPECT(gbc.readMem(0xe947), 0x47);
        EXPECT(gbc.readMem(0xe948), 0xd2);
        // CC 01DD
        gbc.setState(0x3cec, 0x21a1, 0x2b60, 0xbe14, 0xdde5, 0x204, 0x1, 0x1);
        gbc.writeMem(0x3cec, { 0xcc, 0xdd, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x21a1);
        EXPECT(gbc.pc(), 0x3cef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CC 01DE
        gbc.setState(0x4bc2, 0xdd4d, 0x4d20, 0xb666, 0xdf72, 0x2a02, 0x0, 0x0);
        gbc.writeMem(0x4bc2, { 0xcc, 0xa4, 0xe });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xdd4d);
        EXPECT(gbc.pc(), 0x4bc5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CC 01DF
        gbc.setState(0xcdfb, 0xe630, 0x2930, 0x91cf, 0x548d, 0x75e8, 0x1, 0x1);
        gbc.writeMem(0xcdfb, { 0xcc, 0x2f, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0xe630);
        EXPECT(gbc.pc(), 0xcdfe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcdfb), 0xcc);
        EXPECT(gbc.readMem(0xcdfc), 0x2f);
        EXPECT(gbc.readMem(0xcdfd), 0x4c);
        // CC 01E2
        gbc.setState(0x7c2b, 0xad52, 0x45e0, 0xd1dc, 0x1606, 0x86f0, 0x1, 0x0);
        gbc.writeMem(0x7c2b, { 0xcc, 0xfe, 0xb0 });
        gbc.writeMem(0xad50, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0xad50);
        EXPECT(gbc.pc(), 0xb0fe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xad50), 0x2e);
        EXPECT(gbc.readMem(0xad51), 0x7c);
        // CC 01E3
        gbc.setState(0x8bef, 0xb89a, 0x7400, 0xea2d, 0x4fbc, 0x7e74, 0x0, 0x0);
        gbc.writeMem(0x8bef, { 0xcc, 0xa3, 0x2e });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xb89a);
        EXPECT(gbc.pc(), 0x8bf2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8bef), 0xcc);
        EXPECT(gbc.readMem(0x8bf0), 0xa3);
        EXPECT(gbc.readMem(0x8bf1), 0x2e);
        // CC 01E5
        gbc.setState(0xe8a2, 0xfe03, 0x2450, 0x4b20, 0xc481, 0xada5, 0x0, 0x1);
        gbc.writeMem(0xe8a2, { 0xcc, 0x61, 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xfe03);
        EXPECT(gbc.pc(), 0xe8a5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe8a2), 0xcc);
        EXPECT(gbc.readMem(0xe8a3), 0x61);
        EXPECT(gbc.readMem(0xe8a4), 0x8c);
        // CC 01E6
        gbc.setState(0xbc03, 0xb39f, 0x4240, 0x7c73, 0x764b, 0x9560, 0x1, 0x0);
        gbc.writeMem(0xbc03, { 0xcc, 0x5c, 0xf8 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xb39f);
        EXPECT(gbc.pc(), 0xbc06);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbc03), 0xcc);
        EXPECT(gbc.readMem(0xbc04), 0x5c);
        EXPECT(gbc.readMem(0xbc05), 0xf8);
        // CC 01E7
        gbc.setState(0xbc21, 0xa746, 0xee20, 0xb786, 0x5912, 0x1b5a, 0x0, 0x0);
        gbc.writeMem(0xbc21, { 0xcc, 0x8d, 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0xa746);
        EXPECT(gbc.pc(), 0xbc24);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbc21), 0xcc);
        EXPECT(gbc.readMem(0xbc22), 0x8d);
        EXPECT(gbc.readMem(0xbc23), 0x8c);
        // CC 01E8
        gbc.setState(0x2277, 0xd8f0, 0x1190, 0x5441, 0x86c0, 0xf5ee, 0x0, 0x0);
        gbc.writeMem(0x2277, { 0xcc, 0x31, 0xba });
        gbc.writeMem(0xd8ee, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0xd8ee);
        EXPECT(gbc.pc(), 0xba31);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd8ee), 0x7a);
        EXPECT(gbc.readMem(0xd8ef), 0x22);
        // CC 01E9
        gbc.setState(0x15ba, 0x8abf, 0xd150, 0x3d31, 0xffa1, 0xdb2d, 0x1, 0x1);
        gbc.writeMem(0x15ba, { 0xcc, 0xf4, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x8abf);
        EXPECT(gbc.pc(), 0x15bd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CC 01EA
        gbc.setState(0xe588, 0xe682, 0x4e90, 0xd314, 0x91a5, 0x153, 0x0, 0x1);
        gbc.writeMem(0xe588, { 0xcc, 0x60, 0x73 });
        gbc.writeMem(0xe680, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0xe680);
        EXPECT(gbc.pc(), 0x7360);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe588), 0xcc);
        EXPECT(gbc.readMem(0xe589), 0x60);
        EXPECT(gbc.readMem(0xe58a), 0x73);
        EXPECT(gbc.readMem(0xe680), 0x8b);
        EXPECT(gbc.readMem(0xe681), 0xe5);
        // CC 01EB
        gbc.setState(0x76d3, 0xbfd4, 0x9db0, 0xb913, 0x9e91, 0x8ad0, 0x0, 0x1);
        gbc.writeMem(0x76d3, { 0xcc, 0x3, 0x8b });
        gbc.writeMem(0xbfd2, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0xbfd2);
        EXPECT(gbc.pc(), 0x8b03);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbfd2), 0xd6);
        EXPECT(gbc.readMem(0xbfd3), 0x76);
        // CC 01EC
        gbc.setState(0xd96b, 0x402d, 0x7600, 0x73d7, 0xeafb, 0xf822, 0x1, 0x1);
        gbc.writeMem(0xd96b, { 0xcc, 0xb4, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x402d);
        EXPECT(gbc.pc(), 0xd96e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd96b), 0xcc);
        EXPECT(gbc.readMem(0xd96c), 0xb4);
        EXPECT(gbc.readMem(0xd96d), 0xbf);
        // CC 01ED
        gbc.setState(0x4911, 0xd7b5, 0x9350, 0x1a2, 0x7bfc, 0x1357, 0x0, 0x0);
        gbc.writeMem(0x4911, { 0xcc, 0xad, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0xd7b5);
        EXPECT(gbc.pc(), 0x4914);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CC 01EE
        gbc.setState(0x6df8, 0x7af1, 0xda50, 0x104f, 0x3d68, 0x1c5a, 0x0, 0x1);
        gbc.writeMem(0x6df8, { 0xcc, 0x1c, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x7af1);
        EXPECT(gbc.pc(), 0x6dfb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CC 01F0
        gbc.setState(0xee4, 0xf066, 0x7180, 0xb555, 0x38e4, 0xbff7, 0x1, 0x0);
        gbc.writeMem(0xee4, { 0xcc, 0xf0, 0xa4 });
        gbc.writeMem(0xf064, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0xf064);
        EXPECT(gbc.pc(), 0xa4f0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf064), 0xe7);
        EXPECT(gbc.readMem(0xf065), 0xe);
        // CC 01F1
        gbc.setState(0xc611, 0xb6c0, 0x3200, 0x5350, 0xf411, 0xe91e, 0x0, 0x0);
        gbc.writeMem(0xc611, { 0xcc, 0x56, 0xfb });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0xb6c0);
        EXPECT(gbc.pc(), 0xc614);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc611), 0xcc);
        EXPECT(gbc.readMem(0xc612), 0x56);
        EXPECT(gbc.readMem(0xc613), 0xfb);
        // CC 01F2
        gbc.setState(0x82a9, 0xd1f7, 0x51c0, 0xdccd, 0x9f43, 0x5f1f, 0x0, 0x0);
        gbc.writeMem(0x82a9, { 0xcc, 0x39, 0xb4 });
        gbc.writeMem(0xd1f5, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0xd1f5);
        EXPECT(gbc.pc(), 0xb439);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x82a9), 0xcc);
        EXPECT(gbc.readMem(0x82aa), 0x39);
        EXPECT(gbc.readMem(0x82ab), 0xb4);
        EXPECT(gbc.readMem(0xd1f5), 0xac);
        EXPECT(gbc.readMem(0xd1f6), 0x82);
        // CC 01F3
        gbc.setState(0x588c, 0x83ff, 0x49f0, 0x75c5, 0x6eee, 0x4b6f, 0x0, 0x0);
        gbc.writeMem(0x588c, { 0xcc, 0x1e, 0x6c });
        gbc.writeMem(0x83fd, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x83fd);
        EXPECT(gbc.pc(), 0x6c1e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x83fd), 0x8f);
        EXPECT(gbc.readMem(0x83fe), 0x58);
        // CC 01F4
        gbc.setState(0x8472, 0x66d7, 0x7010, 0x8546, 0xf68a, 0x899a, 0x1, 0x0);
        gbc.writeMem(0x8472, { 0xcc, 0x5d, 0x5c });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x66d7);
        EXPECT(gbc.pc(), 0x8475);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8472), 0xcc);
        EXPECT(gbc.readMem(0x8473), 0x5d);
        EXPECT(gbc.readMem(0x8474), 0x5c);
        // CC 01F5
        gbc.setState(0x7e96, 0x8297, 0xad60, 0x5355, 0x349f, 0xfcea, 0x1, 0x1);
        gbc.writeMem(0x7e96, { 0xcc, 0x31, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x8297);
        EXPECT(gbc.pc(), 0x7e99);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CC 01F6
        gbc.setState(0xa7d1, 0xb73f, 0x4c80, 0xaa0e, 0xe51b, 0x96cf, 0x1, 0x1);
        gbc.writeMem(0xa7d1, { 0xcc, 0x24, 0xea });
        gbc.writeMem(0xb73d, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0xb73d);
        EXPECT(gbc.pc(), 0xea24);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa7d1), 0xcc);
        EXPECT(gbc.readMem(0xa7d2), 0x24);
        EXPECT(gbc.readMem(0xa7d3), 0xea);
        EXPECT(gbc.readMem(0xb73d), 0xd4);
        EXPECT(gbc.readMem(0xb73e), 0xa7);
        // CC 01F7
        gbc.setState(0x95cf, 0x6e19, 0xef40, 0xadc2, 0xb859, 0x1bcf, 0x1, 0x1);
        gbc.writeMem(0x95cf, { 0xcc, 0xda, 0x9b });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x6e19);
        EXPECT(gbc.pc(), 0x95d2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x95cf), 0xcc);
        EXPECT(gbc.readMem(0x95d0), 0xda);
        EXPECT(gbc.readMem(0x95d1), 0x9b);
        // CC 01F8
        gbc.setState(0x4535, 0x8fc5, 0x1c80, 0x44f9, 0xdca9, 0xe91b, 0x1, 0x0);
        gbc.writeMem(0x4535, { 0xcc, 0xc8, 0x3a });
        gbc.writeMem(0x8fc3, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x8fc3);
        EXPECT(gbc.pc(), 0x3ac8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8fc3), 0x38);
        EXPECT(gbc.readMem(0x8fc4), 0x45);
        // CC 01F9
        gbc.setState(0x24ff, 0xd92d, 0x6470, 0x1ece, 0x23b0, 0x3079, 0x1, 0x0);
        gbc.writeMem(0x24ff, { 0xcc, 0x5e, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xd92d);
        EXPECT(gbc.pc(), 0x2502);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CC 01FA
        gbc.setState(0x57fb, 0x354, 0xed40, 0xf746, 0x288f, 0xb3b6, 0x0, 0x1);
        gbc.writeMem(0x57fb, { 0xcc, 0xa5, 0x6f });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x354);
        EXPECT(gbc.pc(), 0x57fe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CC 01FB
        gbc.setState(0xec2d, 0x2537, 0x4c30, 0x4edc, 0x7711, 0x4830, 0x0, 0x1);
        gbc.writeMem(0xec2d, { 0xcc, 0xd4, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x2537);
        EXPECT(gbc.pc(), 0xec30);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xec2d), 0xcc);
        EXPECT(gbc.readMem(0xec2e), 0xd4);
        EXPECT(gbc.readMem(0xec2f), 0x28);
        // CC 01FC
        gbc.setState(0x2fc7, 0x8ef3, 0xf6c0, 0x1513, 0xba7, 0xd99a, 0x1, 0x0);
        gbc.writeMem(0x2fc7, { 0xcc, 0xd5, 0x78 });
        gbc.writeMem(0x8ef1, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x8ef1);
        EXPECT(gbc.pc(), 0x78d5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ef1), 0xca);
        EXPECT(gbc.readMem(0x8ef2), 0x2f);
        // CC 01FE
        gbc.setState(0x2f0f, 0xa5c6, 0xeae0, 0x764c, 0xfd59, 0xea9e, 0x1, 0x0);
        gbc.writeMem(0x2f0f, { 0xcc, 0x31, 0xb8 });
        gbc.writeMem(0xa5c4, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0xa5c4);
        EXPECT(gbc.pc(), 0xb831);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa5c4), 0x12);
        EXPECT(gbc.readMem(0xa5c5), 0x2f);
        // CC 01FF
        gbc.setState(0x8f72, 0x32c0, 0xac50, 0x6ade, 0x99ae, 0x3482, 0x1, 0x1);
        gbc.writeMem(0x8f72, { 0xcc, 0xdd, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x32c0);
        EXPECT(gbc.pc(), 0x8f75);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8f72), 0xcc);
        EXPECT(gbc.readMem(0x8f73), 0xdd);
        EXPECT(gbc.readMem(0x8f74), 0xab);
        // CC 0202
        gbc.setState(0x403f, 0xb013, 0x8100, 0xe65a, 0xd298, 0x7cec, 0x0, 0x1);
        gbc.writeMem(0x403f, { 0xcc, 0x9c, 0x1f });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0xb013);
        EXPECT(gbc.pc(), 0x4042);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CC 0203
        gbc.setState(0x1d59, 0xcd0f, 0xdca0, 0xb5d6, 0x17f0, 0x9822, 0x1, 0x1);
        gbc.writeMem(0x1d59, { 0xcc, 0xcd, 0x15 });
        gbc.writeMem(0xcd0d, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0xcd0d);
        EXPECT(gbc.pc(), 0x15cd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcd0d), 0x5c);
        EXPECT(gbc.readMem(0xcd0e), 0x1d);
        // CC 020A
        gbc.setState(0xa8fd, 0xe366, 0x34d0, 0x29ec, 0x883c, 0x33d6, 0x0, 0x0);
        gbc.writeMem(0xa8fd, { 0xcc, 0xa1, 0x68 });
        gbc.writeMem(0xe364, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0xe364);
        EXPECT(gbc.pc(), 0x68a1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa8fd), 0xcc);
        EXPECT(gbc.readMem(0xa8fe), 0xa1);
        EXPECT(gbc.readMem(0xa8ff), 0x68);
        EXPECT(gbc.readMem(0xe364), 0x0);
        EXPECT(gbc.readMem(0xe365), 0xa9);
        // CC 020C
        gbc.setState(0x7a63, 0xc9df, 0x8100, 0x76e1, 0x8851, 0x8523, 0x0, 0x1);
        gbc.writeMem(0x7a63, { 0xcc, 0xbe, 0x7b });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0xc9df);
        EXPECT(gbc.pc(), 0x7a66);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CC 020D
        gbc.setState(0xe0c8, 0x7116, 0x5020, 0x36fb, 0xdd3b, 0x6e74, 0x1, 0x0);
        gbc.writeMem(0xe0c8, { 0xcc, 0x5a, 0x35 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x7116);
        EXPECT(gbc.pc(), 0xe0cb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe0c8), 0xcc);
        EXPECT(gbc.readMem(0xe0c9), 0x5a);
        EXPECT(gbc.readMem(0xe0ca), 0x35);
        // CC 020E
        gbc.setState(0xed89, 0xa2fb, 0x6ef0, 0x93d3, 0xc94b, 0x6099, 0x0, 0x1);
        gbc.writeMem(0xa2f9, { 0x0, 0x0 });
        gbc.writeMem(0xed89, { 0xcc, 0xa7, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0xa2f9);
        EXPECT(gbc.pc(), 0xdca7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa2f9), 0x8c);
        EXPECT(gbc.readMem(0xa2fa), 0xed);
        EXPECT(gbc.readMem(0xed89), 0xcc);
        EXPECT(gbc.readMem(0xed8a), 0xa7);
        EXPECT(gbc.readMem(0xed8b), 0xdc);
        // CC 020F
        gbc.setState(0xa7c6, 0x89, 0x4730, 0xddb4, 0x9fbb, 0xb3fb, 0x0, 0x1);
        gbc.writeMem(0xa7c6, { 0xcc, 0x1b, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x89);
        EXPECT(gbc.pc(), 0xa7c9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa7c6), 0xcc);
        EXPECT(gbc.readMem(0xa7c7), 0x1b);
        EXPECT(gbc.readMem(0xa7c8), 0x65);
        // CC 0211
        gbc.setState(0x67c8, 0xe24f, 0x5eb0, 0x6acb, 0x668, 0x6230, 0x0, 0x0);
        gbc.writeMem(0x67c8, { 0xcc, 0x5c, 0x1e });
        gbc.writeMem(0xe24d, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0xe24d);
        EXPECT(gbc.pc(), 0x1e5c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe24d), 0xcb);
        EXPECT(gbc.readMem(0xe24e), 0x67);
        // CC 0212
        gbc.setState(0xbcd4, 0xb152, 0x7d90, 0x9f1, 0xca6e, 0x60c1, 0x1, 0x0);
        gbc.writeMem(0xb150, { 0x0, 0x0 });
        gbc.writeMem(0xbcd4, { 0xcc, 0xb5, 0xd7 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0xb150);
        EXPECT(gbc.pc(), 0xd7b5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb150), 0xd7);
        EXPECT(gbc.readMem(0xb151), 0xbc);
        EXPECT(gbc.readMem(0xbcd4), 0xcc);
        EXPECT(gbc.readMem(0xbcd5), 0xb5);
        EXPECT(gbc.readMem(0xbcd6), 0xd7);
        // CC 0213
        gbc.setState(0xd26e, 0xe8b2, 0x9560, 0x59da, 0xcd5d, 0x43c3, 0x1, 0x0);
        gbc.writeMem(0xd26e, { 0xcc, 0xed, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xe8b2);
        EXPECT(gbc.pc(), 0xd271);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd26e), 0xcc);
        EXPECT(gbc.readMem(0xd26f), 0xed);
        EXPECT(gbc.readMem(0xd270), 0x70);
        // CC 0216
        gbc.setState(0x92ac, 0xa261, 0xe970, 0x51d0, 0xbfe1, 0x6414, 0x0, 0x1);
        gbc.writeMem(0x92ac, { 0xcc, 0x7b, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0xa261);
        EXPECT(gbc.pc(), 0x92af);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x92ac), 0xcc);
        EXPECT(gbc.readMem(0x92ad), 0x7b);
        EXPECT(gbc.readMem(0x92ae), 0x13);
        // CC 0217
        gbc.setState(0x16e6, 0x2d5f, 0xd970, 0x2b4f, 0x9ea1, 0x4127, 0x0, 0x0);
        gbc.writeMem(0x16e6, { 0xcc, 0x24, 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x2d5f);
        EXPECT(gbc.pc(), 0x16e9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CC 0218
        gbc.setState(0xe614, 0xc1c3, 0x1180, 0xa953, 0x20e5, 0x8c5e, 0x1, 0x1);
        gbc.writeMem(0xc1c1, { 0x0, 0x0 });
        gbc.writeMem(0xe614, { 0xcc, 0x22, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0xc1c1);
        EXPECT(gbc.pc(), 0x8b22);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc1c1), 0x17);
        EXPECT(gbc.readMem(0xc1c2), 0xe6);
        EXPECT(gbc.readMem(0xe614), 0xcc);
        EXPECT(gbc.readMem(0xe615), 0x22);
        EXPECT(gbc.readMem(0xe616), 0x8b);
        // CC 021B
        gbc.setState(0xbd5f, 0xb064, 0x6cb0, 0xac88, 0x6462, 0x31cd, 0x1, 0x0);
        gbc.writeMem(0xb062, { 0x0, 0x0 });
        gbc.writeMem(0xbd5f, { 0xcc, 0xcd, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0xb062);
        EXPECT(gbc.pc(), 0xefcd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb062), 0x62);
        EXPECT(gbc.readMem(0xb063), 0xbd);
        EXPECT(gbc.readMem(0xbd5f), 0xcc);
        EXPECT(gbc.readMem(0xbd60), 0xcd);
        EXPECT(gbc.readMem(0xbd61), 0xef);
        // CC 021D
        gbc.setState(0x6d0, 0x18f8, 0x6510, 0xfb3e, 0x54c0, 0x4144, 0x1, 0x1);
        gbc.writeMem(0x6d0, { 0xcc, 0xba, 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x18f8);
        EXPECT(gbc.pc(), 0x6d3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CC 0220
        gbc.setState(0xd079, 0xcf68, 0x1950, 0xb627, 0xf98f, 0x7079, 0x1, 0x1);
        gbc.writeMem(0xd079, { 0xcc, 0xda, 0x53 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xcf68);
        EXPECT(gbc.pc(), 0xd07c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd079), 0xcc);
        EXPECT(gbc.readMem(0xd07a), 0xda);
        EXPECT(gbc.readMem(0xd07b), 0x53);
        // CC 0222
        gbc.setState(0x3c83, 0x3262, 0x9340, 0x9f38, 0x1566, 0xfe0e, 0x1, 0x0);
        gbc.writeMem(0x3c83, { 0xcc, 0x36, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x3262);
        EXPECT(gbc.pc(), 0x3c86);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CC 0223
        gbc.setState(0x294a, 0xc967, 0x9270, 0x42ba, 0xc18a, 0xf302, 0x1, 0x1);
        gbc.writeMem(0x294a, { 0xcc, 0xf9, 0xc6 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xc967);
        EXPECT(gbc.pc(), 0x294d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CC 0224
        gbc.setState(0x728c, 0xedd7, 0x9bb0, 0xedcd, 0xd9ee, 0x5909, 0x0, 0x1);
        gbc.writeMem(0x728c, { 0xcc, 0xce, 0xc9 });
        gbc.writeMem(0xedd5, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0xedd5);
        EXPECT(gbc.pc(), 0xc9ce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xedd5), 0x8f);
        EXPECT(gbc.readMem(0xedd6), 0x72);
        // CC 0225
        gbc.setState(0x1743, 0xbab1, 0x71c0, 0xdd53, 0x4c72, 0xed7e, 0x1, 0x0);
        gbc.writeMem(0x1743, { 0xcc, 0xd4, 0x92 });
        gbc.writeMem(0xbaaf, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0xbaaf);
        EXPECT(gbc.pc(), 0x92d4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbaaf), 0x46);
        EXPECT(gbc.readMem(0xbab0), 0x17);
        // CC 0226
        gbc.setState(0xd279, 0xafb4, 0xc150, 0xff64, 0xb7b3, 0x3fa, 0x1, 0x0);
        gbc.writeMem(0xd279, { 0xcc, 0x48, 0x5e });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xafb4);
        EXPECT(gbc.pc(), 0xd27c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd279), 0xcc);
        EXPECT(gbc.readMem(0xd27a), 0x48);
        EXPECT(gbc.readMem(0xd27b), 0x5e);
        // CC 0228
        gbc.setState(0xad1b, 0xb238, 0xe3a0, 0x9acb, 0xa9cf, 0xa053, 0x1, 0x1);
        gbc.writeMem(0xad1b, { 0xcc, 0xcb, 0xd6 });
        gbc.writeMem(0xb236, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0xb236);
        EXPECT(gbc.pc(), 0xd6cb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xad1b), 0xcc);
        EXPECT(gbc.readMem(0xad1c), 0xcb);
        EXPECT(gbc.readMem(0xad1d), 0xd6);
        EXPECT(gbc.readMem(0xb236), 0x1e);
        EXPECT(gbc.readMem(0xb237), 0xad);
        // CC 0229
        gbc.setState(0x513b, 0x70fa, 0x8c10, 0xc46, 0xd534, 0x5d7b, 0x0, 0x1);
        gbc.writeMem(0x513b, { 0xcc, 0x7e, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x70fa);
        EXPECT(gbc.pc(), 0x513e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CC 022B
        gbc.setState(0x84f1, 0x8c61, 0x1bb0, 0x6a27, 0xf614, 0xbdf8, 0x0, 0x0);
        gbc.writeMem(0x84f1, { 0xcc, 0xe2, 0xc1 });
        gbc.writeMem(0x8c5f, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x8c5f);
        EXPECT(gbc.pc(), 0xc1e2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x84f1), 0xcc);
        EXPECT(gbc.readMem(0x84f2), 0xe2);
        EXPECT(gbc.readMem(0x84f3), 0xc1);
        EXPECT(gbc.readMem(0x8c5f), 0xf4);
        EXPECT(gbc.readMem(0x8c60), 0x84);
        // CC 022C
        gbc.setState(0x38aa, 0xd779, 0xf070, 0x5f1d, 0x6cb9, 0x9070, 0x0, 0x1);
        gbc.writeMem(0x38aa, { 0xcc, 0xe6, 0x2b });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0xd779);
        EXPECT(gbc.pc(), 0x38ad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CC 022D
        gbc.setState(0x9a26, 0xeaf5, 0x4480, 0xe953, 0xd41b, 0xc264, 0x1, 0x0);
        gbc.writeMem(0x9a26, { 0xcc, 0xf4, 0x28 });
        gbc.writeMem(0xeaf3, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0xeaf3);
        EXPECT(gbc.pc(), 0x28f4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9a26), 0xcc);
        EXPECT(gbc.readMem(0x9a27), 0xf4);
        EXPECT(gbc.readMem(0x9a28), 0x28);
        EXPECT(gbc.readMem(0xeaf3), 0x29);
        EXPECT(gbc.readMem(0xeaf4), 0x9a);
        // CC 022E
        gbc.setState(0x3107, 0x93f7, 0x12c0, 0x3604, 0xc69c, 0xf3d, 0x1, 0x0);
        gbc.writeMem(0x3107, { 0xcc, 0x73, 0x60 });
        gbc.writeMem(0x93f5, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x93f5);
        EXPECT(gbc.pc(), 0x6073);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x93f5), 0xa);
        EXPECT(gbc.readMem(0x93f6), 0x31);
        // CC 0230
        gbc.setState(0xff7, 0x5ea2, 0xf610, 0x3749, 0xe773, 0x5ea1, 0x0, 0x1);
        gbc.writeMem(0xff7, { 0xcc, 0xde, 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x5ea2);
        EXPECT(gbc.pc(), 0xffa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CC 0231
        gbc.setState(0x22e6, 0xbf6a, 0x3b10, 0xe33f, 0xf40b, 0x6a80, 0x0, 0x1);
        gbc.writeMem(0x22e6, { 0xcc, 0x7c, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0xbf6a);
        EXPECT(gbc.pc(), 0x22e9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CC 0232
        gbc.setState(0x4a31, 0x63fc, 0xc70, 0x2f15, 0xef89, 0x723e, 0x1, 0x0);
        gbc.writeMem(0x4a31, { 0xcc, 0xb4, 0x2c });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x63fc);
        EXPECT(gbc.pc(), 0x4a34);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CC 0234
        gbc.setState(0x180e, 0x915d, 0xb530, 0xe965, 0x5efc, 0x43e1, 0x1, 0x1);
        gbc.writeMem(0x180e, { 0xcc, 0x32, 0x8f });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x915d);
        EXPECT(gbc.pc(), 0x1811);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CC 0235
        gbc.setState(0x565d, 0xec14, 0x4f90, 0x142b, 0x4aee, 0x7f11, 0x0, 0x0);
        gbc.writeMem(0x565d, { 0xcc, 0x12, 0xe2 });
        gbc.writeMem(0xec12, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0xec12);
        EXPECT(gbc.pc(), 0xe212);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xec12), 0x60);
        EXPECT(gbc.readMem(0xec13), 0x56);
        // CC 0236
        gbc.setState(0x2d91, 0x9ead, 0xb300, 0x9cb6, 0x8e4a, 0xa2f2, 0x0, 0x1);
        gbc.writeMem(0x2d91, { 0xcc, 0xf4, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x9ead);
        EXPECT(gbc.pc(), 0x2d94);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CC 0237
        gbc.setState(0xcc75, 0xd09a, 0xbe20, 0xe6ea, 0xa5cd, 0x376e, 0x0, 0x0);
        gbc.writeMem(0xcc75, { 0xcc, 0x81, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xd09a);
        EXPECT(gbc.pc(), 0xcc78);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcc75), 0xcc);
        EXPECT(gbc.readMem(0xcc76), 0x81);
        EXPECT(gbc.readMem(0xcc77), 0x2);
        // CC 0238
        gbc.setState(0x62c7, 0xd4f1, 0x4bc0, 0x4845, 0xa499, 0xff68, 0x1, 0x1);
        gbc.writeMem(0x62c7, { 0xcc, 0xb1, 0xeb });
        gbc.writeMem(0xd4ef, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0xd4ef);
        EXPECT(gbc.pc(), 0xebb1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd4ef), 0xca);
        EXPECT(gbc.readMem(0xd4f0), 0x62);
        // CC 0239
        gbc.setState(0xdea9, 0xca9f, 0x9f80, 0xf1df, 0xee8d, 0xfea5, 0x0, 0x1);
        gbc.writeMem(0xca9d, { 0x0, 0x0 });
        gbc.writeMem(0xdea9, { 0xcc, 0xb8, 0x1d });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xca9d);
        EXPECT(gbc.pc(), 0x1db8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xca9d), 0xac);
        EXPECT(gbc.readMem(0xca9e), 0xde);
        EXPECT(gbc.readMem(0xdea9), 0xcc);
        EXPECT(gbc.readMem(0xdeaa), 0xb8);
        EXPECT(gbc.readMem(0xdeab), 0x1d);
        // CC 023A
        gbc.setState(0x5445, 0xa94f, 0x9590, 0xe2d1, 0x493c, 0x4d77, 0x0, 0x0);
        gbc.writeMem(0x5445, { 0xcc, 0x57, 0xcb });
        gbc.writeMem(0xa94d, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xa94d);
        EXPECT(gbc.pc(), 0xcb57);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa94d), 0x48);
        EXPECT(gbc.readMem(0xa94e), 0x54);
        // CC 023B
        gbc.setState(0xc4a8, 0xa20c, 0x1a60, 0xff51, 0x1be, 0x483c, 0x1, 0x1);
        gbc.writeMem(0xc4a8, { 0xcc, 0x7d, 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xa20c);
        EXPECT(gbc.pc(), 0xc4ab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc4a8), 0xcc);
        EXPECT(gbc.readMem(0xc4a9), 0x7d);
        EXPECT(gbc.readMem(0xc4aa), 0x95);
        // CC 023C
        gbc.setState(0xa663, 0x8eb0, 0x3d30, 0xdc22, 0xaa83, 0x482d, 0x1, 0x1);
        gbc.writeMem(0xa663, { 0xcc, 0xc3, 0x86 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x8eb0);
        EXPECT(gbc.pc(), 0xa666);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa663), 0xcc);
        EXPECT(gbc.readMem(0xa664), 0xc3);
        EXPECT(gbc.readMem(0xa665), 0x86);
        // CC 023D
        gbc.setState(0xa2b, 0x90b3, 0xd990, 0x3f76, 0x1ba0, 0xd52d, 0x1, 0x0);
        gbc.writeMem(0xa2b, { 0xcc, 0x1, 0x12 });
        gbc.writeMem(0x90b1, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x90b1);
        EXPECT(gbc.pc(), 0x1201);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x90b1), 0x2e);
        EXPECT(gbc.readMem(0x90b2), 0xa);
        // CC 023E
        gbc.setState(0xadc6, 0xa3f1, 0xf0e0, 0x1e41, 0x8a1d, 0xce53, 0x0, 0x0);
        gbc.writeMem(0xa3ef, { 0x0, 0x0 });
        gbc.writeMem(0xadc6, { 0xcc, 0xc0, 0xa4 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0xa3ef);
        EXPECT(gbc.pc(), 0xa4c0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa3ef), 0xc9);
        EXPECT(gbc.readMem(0xa3f0), 0xad);
        EXPECT(gbc.readMem(0xadc6), 0xcc);
        EXPECT(gbc.readMem(0xadc7), 0xc0);
        EXPECT(gbc.readMem(0xadc8), 0xa4);
        // CC 0240
        gbc.setState(0x2f46, 0xe3f0, 0xbf00, 0xb324, 0x269, 0xaf41, 0x1, 0x0);
        gbc.writeMem(0x2f46, { 0xcc, 0x43, 0xb3 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0xe3f0);
        EXPECT(gbc.pc(), 0x2f49);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CC 0241
        gbc.setState(0xc944, 0x70ef, 0x5630, 0x95b4, 0xc45c, 0xd08e, 0x0, 0x0);
        gbc.writeMem(0xc944, { 0xcc, 0x94, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x70ef);
        EXPECT(gbc.pc(), 0xc947);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc944), 0xcc);
        EXPECT(gbc.readMem(0xc945), 0x94);
        EXPECT(gbc.readMem(0xc946), 0xa);
        // CC 0245
        gbc.setState(0xa8bf, 0x9711, 0xf7b0, 0x896b, 0x655c, 0xb451, 0x0, 0x0);
        gbc.writeMem(0x970f, { 0x0, 0x0 });
        gbc.writeMem(0xa8bf, { 0xcc, 0x1f, 0x5e });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x970f);
        EXPECT(gbc.pc(), 0x5e1f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x970f), 0xc2);
        EXPECT(gbc.readMem(0x9710), 0xa8);
        EXPECT(gbc.readMem(0xa8bf), 0xcc);
        EXPECT(gbc.readMem(0xa8c0), 0x1f);
        EXPECT(gbc.readMem(0xa8c1), 0x5e);
        // CC 0247
        gbc.setState(0x2aa4, 0x629f, 0xed50, 0x8253, 0xfa82, 0x2dbc, 0x1, 0x1);
        gbc.writeMem(0x2aa4, { 0xcc, 0x69, 0x22 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x629f);
        EXPECT(gbc.pc(), 0x2aa7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CC 0248
        gbc.setState(0xd1e9, 0xbd2b, 0x8230, 0xf1dd, 0x428d, 0xb843, 0x1, 0x0);
        gbc.writeMem(0xd1e9, { 0xcc, 0x3c, 0x16 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xbd2b);
        EXPECT(gbc.pc(), 0xd1ec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd1e9), 0xcc);
        EXPECT(gbc.readMem(0xd1ea), 0x3c);
        EXPECT(gbc.readMem(0xd1eb), 0x16);
        // CC 0249
        gbc.setState(0x6ebf, 0x6b1d, 0x460, 0x3e49, 0x3df1, 0x54ec, 0x1, 0x1);
        gbc.writeMem(0x6ebf, { 0xcc, 0xa, 0x3a });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x6b1d);
        EXPECT(gbc.pc(), 0x6ec2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CC 024A
        gbc.setState(0xf17, 0xdb5b, 0x4d60, 0x5174, 0xda5, 0xd29, 0x0, 0x0);
        gbc.writeMem(0xf17, { 0xcc, 0x99, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0xdb5b);
        EXPECT(gbc.pc(), 0xf1a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CC 024B
        gbc.setState(0x1878, 0x680f, 0xc720, 0xf48c, 0x204e, 0x539a, 0x1, 0x1);
        gbc.writeMem(0x1878, { 0xcc, 0x43, 0x46 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x680f);
        EXPECT(gbc.pc(), 0x187b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CC 024C
        gbc.setState(0xb4f7, 0xe843, 0xae10, 0x7069, 0x762, 0x1e5a, 0x0, 0x0);
        gbc.writeMem(0xb4f7, { 0xcc, 0x57, 0xa8 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0xe843);
        EXPECT(gbc.pc(), 0xb4fa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb4f7), 0xcc);
        EXPECT(gbc.readMem(0xb4f8), 0x57);
        EXPECT(gbc.readMem(0xb4f9), 0xa8);
        // CC 024D
        gbc.setState(0x92e2, 0x44ba, 0x9e00, 0x3fa, 0xc7e6, 0x4337, 0x0, 0x0);
        gbc.writeMem(0x92e2, { 0xcc, 0x52, 0xd });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x44ba);
        EXPECT(gbc.pc(), 0x92e5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x92e2), 0xcc);
        EXPECT(gbc.readMem(0x92e3), 0x52);
        EXPECT(gbc.readMem(0x92e4), 0xd);
        // CC 024F
        gbc.setState(0x5920, 0x1583, 0x9860, 0xc0a3, 0x7587, 0x8252, 0x0, 0x1);
        gbc.writeMem(0x5920, { 0xcc, 0xc2, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x1583);
        EXPECT(gbc.pc(), 0x5923);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CC 0251
        gbc.setState(0x2272, 0xe5eb, 0x6000, 0xe994, 0x4639, 0xef40, 0x1, 0x1);
        gbc.writeMem(0x2272, { 0xcc, 0xb7, 0x9e });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0xe5eb);
        EXPECT(gbc.pc(), 0x2275);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CC 0252
        gbc.setState(0x24b0, 0xb919, 0xf4e0, 0x4569, 0x3b9, 0xd9ed, 0x1, 0x0);
        gbc.writeMem(0x24b0, { 0xcc, 0x59, 0xb5 });
        gbc.writeMem(0xb917, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0xb917);
        EXPECT(gbc.pc(), 0xb559);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb917), 0xb3);
        EXPECT(gbc.readMem(0xb918), 0x24);
        // CC 0255
        gbc.setState(0xb188, 0xc2e3, 0x1a90, 0xf1dd, 0xee54, 0x6578, 0x1, 0x0);
        gbc.writeMem(0xb188, { 0xcc, 0x9f, 0x52 });
        gbc.writeMem(0xc2e1, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0xc2e1);
        EXPECT(gbc.pc(), 0x529f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb188), 0xcc);
        EXPECT(gbc.readMem(0xb189), 0x9f);
        EXPECT(gbc.readMem(0xb18a), 0x52);
        EXPECT(gbc.readMem(0xc2e1), 0x8b);
        EXPECT(gbc.readMem(0xc2e2), 0xb1);
        // CC 0257
        gbc.setState(0x72c3, 0x1cda, 0xd50, 0x370a, 0xfa5b, 0xa475, 0x1, 0x1);
        gbc.writeMem(0x72c3, { 0xcc, 0xe3, 0xf1 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x1cda);
        EXPECT(gbc.pc(), 0x72c6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CC 0258
        gbc.setState(0x38dd, 0xe055, 0x2f70, 0x2020, 0x3f60, 0xbc59, 0x0, 0x0);
        gbc.writeMem(0x38dd, { 0xcc, 0x1b, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0xe055);
        EXPECT(gbc.pc(), 0x38e0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CC 0259
        gbc.setState(0xb95d, 0x91e7, 0xb0, 0x32c, 0xce1f, 0x8720, 0x0, 0x1);
        gbc.writeMem(0x91e5, { 0x0, 0x0 });
        gbc.writeMem(0xb95d, { 0xcc, 0xc6, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x91e5);
        EXPECT(gbc.pc(), 0x8ec6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x91e5), 0x60);
        EXPECT(gbc.readMem(0x91e6), 0xb9);
        EXPECT(gbc.readMem(0xb95d), 0xcc);
        EXPECT(gbc.readMem(0xb95e), 0xc6);
        EXPECT(gbc.readMem(0xb95f), 0x8e);
        // CC 025A
        gbc.setState(0x39f7, 0xbe36, 0x94f0, 0xf662, 0x4288, 0x1969, 0x1, 0x0);
        gbc.writeMem(0x39f7, { 0xcc, 0x7f, 0x7d });
        gbc.writeMem(0xbe34, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0xbe34);
        EXPECT(gbc.pc(), 0x7d7f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbe34), 0xfa);
        EXPECT(gbc.readMem(0xbe35), 0x39);
        // CC 025B
        gbc.setState(0x8ab6, 0x8016, 0xa360, 0xa8cf, 0x30cf, 0x857a, 0x1, 0x1);
        gbc.writeMem(0x8ab6, { 0xcc, 0x29, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x8016);
        EXPECT(gbc.pc(), 0x8ab9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ab6), 0xcc);
        EXPECT(gbc.readMem(0x8ab7), 0x29);
        EXPECT(gbc.readMem(0x8ab8), 0x8b);
        // CC 025C
        gbc.setState(0xaf24, 0x2bf1, 0x1060, 0x6c, 0x18e0, 0xe9c, 0x0, 0x1);
        gbc.writeMem(0xaf24, { 0xcc, 0x28, 0x3f });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x2bf1);
        EXPECT(gbc.pc(), 0xaf27);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaf24), 0xcc);
        EXPECT(gbc.readMem(0xaf25), 0x28);
        EXPECT(gbc.readMem(0xaf26), 0x3f);
        // CC 025E
        gbc.setState(0xe41b, 0xdc70, 0x8250, 0x2c9, 0x6c36, 0xbccb, 0x1, 0x0);
        gbc.writeMem(0xe41b, { 0xcc, 0x77, 0xb7 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0xdc70);
        EXPECT(gbc.pc(), 0xe41e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe41b), 0xcc);
        EXPECT(gbc.readMem(0xe41c), 0x77);
        EXPECT(gbc.readMem(0xe41d), 0xb7);
        // CC 025F
        gbc.setState(0xaa0a, 0x59c2, 0x1940, 0x2cc6, 0xea40, 0x5ddd, 0x1, 0x1);
        gbc.writeMem(0xaa0a, { 0xcc, 0x78, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x59c2);
        EXPECT(gbc.pc(), 0xaa0d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaa0a), 0xcc);
        EXPECT(gbc.readMem(0xaa0b), 0x78);
        EXPECT(gbc.readMem(0xaa0c), 0xc8);
        // CC 0262
        gbc.setState(0xd037, 0xb82f, 0x7dc0, 0x9042, 0x13bd, 0xbfad, 0x1, 0x0);
        gbc.writeMem(0xb82d, { 0x0, 0x0 });
        gbc.writeMem(0xd037, { 0xcc, 0x11, 0x3e });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0xb82d);
        EXPECT(gbc.pc(), 0x3e11);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb82d), 0x3a);
        EXPECT(gbc.readMem(0xb82e), 0xd0);
        EXPECT(gbc.readMem(0xd037), 0xcc);
        EXPECT(gbc.readMem(0xd038), 0x11);
        EXPECT(gbc.readMem(0xd039), 0x3e);
        // CC 0264
        gbc.setState(0x4b38, 0x365b, 0xf40, 0xc318, 0x6721, 0x58f2, 0x0, 0x1);
        gbc.writeMem(0x4b38, { 0xcc, 0x74, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x365b);
        EXPECT(gbc.pc(), 0x4b3b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CC 0266
        gbc.setState(0x28b7, 0x709e, 0x5550, 0xe960, 0x1e32, 0x7241, 0x0, 0x0);
        gbc.writeMem(0x28b7, { 0xcc, 0xd6, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x709e);
        EXPECT(gbc.pc(), 0x28ba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CC 0267
        gbc.setState(0x690f, 0x43da, 0x9330, 0xb97d, 0xa4a8, 0x81c0, 0x0, 0x1);
        gbc.writeMem(0x690f, { 0xcc, 0xb2, 0x53 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x43da);
        EXPECT(gbc.pc(), 0x6912);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CC 0268
        gbc.setState(0x1209, 0xadd2, 0xc090, 0xc894, 0x12e3, 0x7279, 0x1, 0x1);
        gbc.writeMem(0x1209, { 0xcc, 0x67, 0x89 });
        gbc.writeMem(0xadd0, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xadd0);
        EXPECT(gbc.pc(), 0x8967);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xadd0), 0xc);
        EXPECT(gbc.readMem(0xadd1), 0x12);
        // CC 026A
        gbc.setState(0x4de3, 0x5c47, 0x6820, 0xce5c, 0xf032, 0xbeb9, 0x0, 0x0);
        gbc.writeMem(0x4de3, { 0xcc, 0x7d, 0x2b });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x5c47);
        EXPECT(gbc.pc(), 0x4de6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CC 026B
        gbc.setState(0x3af1, 0xdd92, 0x90c0, 0x2d74, 0x6b84, 0x8831, 0x0, 0x0);
        gbc.writeMem(0x3af1, { 0xcc, 0x11, 0xdc });
        gbc.writeMem(0xdd90, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xdd90);
        EXPECT(gbc.pc(), 0xdc11);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdd90), 0xf4);
        EXPECT(gbc.readMem(0xdd91), 0x3a);
        // CC 026E
        gbc.setState(0x7e2a, 0xaa1c, 0x9450, 0xb0ed, 0x21b7, 0x7f60, 0x0, 0x1);
        gbc.writeMem(0x7e2a, { 0xcc, 0x11, 0x3e });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xaa1c);
        EXPECT(gbc.pc(), 0x7e2d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CC 026F
        gbc.setState(0xc99b, 0xefe, 0x3520, 0x970, 0x30dd, 0xba6, 0x0, 0x0);
        gbc.writeMem(0xc99b, { 0xcc, 0x6a, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0xefe);
        EXPECT(gbc.pc(), 0xc99e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc99b), 0xcc);
        EXPECT(gbc.readMem(0xc99c), 0x6a);
        EXPECT(gbc.readMem(0xc99d), 0xda);
        // CC 0270
        gbc.setState(0xb03f, 0x2d3, 0xb370, 0x84de, 0xe65a, 0xaae1, 0x0, 0x0);
        gbc.writeMem(0xb03f, { 0xcc, 0x5c, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x2d3);
        EXPECT(gbc.pc(), 0xb042);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb03f), 0xcc);
        EXPECT(gbc.readMem(0xb040), 0x5c);
        EXPECT(gbc.readMem(0xb041), 0xac);
        // CC 0271
        gbc.setState(0x9e5b, 0x5baa, 0xfe60, 0xc8bd, 0xc6b, 0x575c, 0x0, 0x0);
        gbc.writeMem(0x9e5b, { 0xcc, 0xcd, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x5baa);
        EXPECT(gbc.pc(), 0x9e5e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9e5b), 0xcc);
        EXPECT(gbc.readMem(0x9e5c), 0xcd);
        EXPECT(gbc.readMem(0x9e5d), 0xa2);
        // CC 0272
        gbc.setState(0xd4a3, 0x8c66, 0x41d0, 0xa718, 0x7ff1, 0x528a, 0x1, 0x1);
        gbc.writeMem(0x8c64, { 0x0, 0x0 });
        gbc.writeMem(0xd4a3, { 0xcc, 0x4, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x8c64);
        EXPECT(gbc.pc(), 0xc004);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8c64), 0xa6);
        EXPECT(gbc.readMem(0x8c65), 0xd4);
        EXPECT(gbc.readMem(0xd4a3), 0xcc);
        EXPECT(gbc.readMem(0xd4a4), 0x4);
        EXPECT(gbc.readMem(0xd4a5), 0xc0);
        // CC 0273
        gbc.setState(0xae3a, 0x2254, 0xcb50, 0xaa5b, 0x1501, 0x2487, 0x0, 0x1);
        gbc.writeMem(0xae3a, { 0xcc, 0x48, 0x47 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x2254);
        EXPECT(gbc.pc(), 0xae3d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xae3a), 0xcc);
        EXPECT(gbc.readMem(0xae3b), 0x48);
        EXPECT(gbc.readMem(0xae3c), 0x47);
        // CC 0274
        gbc.setState(0x52b6, 0x814f, 0x8340, 0xac9a, 0xc042, 0x3097, 0x1, 0x0);
        gbc.writeMem(0x52b6, { 0xcc, 0x36, 0x5b });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x814f);
        EXPECT(gbc.pc(), 0x52b9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CC 0276
        gbc.setState(0x46ca, 0x418b, 0x5360, 0xd0ae, 0x4b2c, 0xec30, 0x0, 0x1);
        gbc.writeMem(0x46ca, { 0xcc, 0xae, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x418b);
        EXPECT(gbc.pc(), 0x46cd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CC 0277
        gbc.setState(0x64f1, 0x645f, 0x7960, 0xfffc, 0xf37f, 0x357e, 0x0, 0x0);
        gbc.writeMem(0x64f1, { 0xcc, 0x75, 0x53 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x645f);
        EXPECT(gbc.pc(), 0x64f4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CC 0278
        gbc.setState(0x4a0a, 0xbaa8, 0x7ce0, 0x8d, 0x4b80, 0xffb4, 0x0, 0x0);
        gbc.writeMem(0x4a0a, { 0xcc, 0x31, 0x5a });
        gbc.writeMem(0xbaa6, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xbaa6);
        EXPECT(gbc.pc(), 0x5a31);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbaa6), 0xd);
        EXPECT(gbc.readMem(0xbaa7), 0x4a);
        // CC 0279
        gbc.setState(0xc292, 0xce13, 0x9ca0, 0x1131, 0xf02, 0x5ea4, 0x1, 0x1);
        gbc.writeMem(0xc292, { 0xcc, 0x6d, 0xf0 });
        gbc.writeMem(0xce11, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0xce11);
        EXPECT(gbc.pc(), 0xf06d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc292), 0xcc);
        EXPECT(gbc.readMem(0xc293), 0x6d);
        EXPECT(gbc.readMem(0xc294), 0xf0);
        EXPECT(gbc.readMem(0xce11), 0x95);
        EXPECT(gbc.readMem(0xce12), 0xc2);
        // CC 027A
        gbc.setState(0x334b, 0x8a4f, 0xa780, 0xc82a, 0x92e7, 0xcc2c, 0x1, 0x0);
        gbc.writeMem(0x334b, { 0xcc, 0x6a, 0x7a });
        gbc.writeMem(0x8a4d, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x8a4d);
        EXPECT(gbc.pc(), 0x7a6a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8a4d), 0x4e);
        EXPECT(gbc.readMem(0x8a4e), 0x33);
        // CC 027B
        gbc.setState(0xdfd8, 0xdad5, 0x53e0, 0xb3e5, 0xb119, 0x11d0, 0x1, 0x1);
        gbc.writeMem(0xdad3, { 0x0, 0x0 });
        gbc.writeMem(0xdfd8, { 0xcc, 0x4a, 0x3b });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0xdad3);
        EXPECT(gbc.pc(), 0x3b4a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdad3), 0xdb);
        EXPECT(gbc.readMem(0xdad4), 0xdf);
        EXPECT(gbc.readMem(0xdfd8), 0xcc);
        EXPECT(gbc.readMem(0xdfd9), 0x4a);
        EXPECT(gbc.readMem(0xdfda), 0x3b);
        // CC 027C
        gbc.setState(0x577c, 0x84e6, 0xcf00, 0xaed1, 0x611e, 0x1eeb, 0x0, 0x0);
        gbc.writeMem(0x577c, { 0xcc, 0xef, 0x3c });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x84e6);
        EXPECT(gbc.pc(), 0x577f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CC 027D
        gbc.setState(0x49ea, 0xf0cd, 0xafb0, 0x9067, 0xb6e0, 0x23d4, 0x1, 0x0);
        gbc.writeMem(0x49ea, { 0xcc, 0xc1, 0x3b });
        gbc.writeMem(0xf0cb, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xf0cb);
        EXPECT(gbc.pc(), 0x3bc1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf0cb), 0xed);
        EXPECT(gbc.readMem(0xf0cc), 0x49);
        // CC 027F
        gbc.setState(0x5650, 0xee3c, 0x4fb0, 0x8f8d, 0xb57e, 0xc0bc, 0x0, 0x1);
        gbc.writeMem(0x5650, { 0xcc, 0x58, 0xaf });
        gbc.writeMem(0xee3a, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0xee3a);
        EXPECT(gbc.pc(), 0xaf58);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xee3a), 0x53);
        EXPECT(gbc.readMem(0xee3b), 0x56);
        // CC 0280
        gbc.setState(0x84a4, 0xc913, 0x86c0, 0xea75, 0xbaa5, 0xaff6, 0x0, 0x1);
        gbc.writeMem(0x84a4, { 0xcc, 0xaf, 0x9e });
        gbc.writeMem(0xc911, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0xc911);
        EXPECT(gbc.pc(), 0x9eaf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x84a4), 0xcc);
        EXPECT(gbc.readMem(0x84a5), 0xaf);
        EXPECT(gbc.readMem(0x84a6), 0x9e);
        EXPECT(gbc.readMem(0xc911), 0xa7);
        EXPECT(gbc.readMem(0xc912), 0x84);
        // CC 0282
        gbc.setState(0x9b35, 0xda9b, 0xd7b0, 0x7f4f, 0x7222, 0x7232, 0x1, 0x0);
        gbc.writeMem(0x9b35, { 0xcc, 0x1c, 0x2c });
        gbc.writeMem(0xda99, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xda99);
        EXPECT(gbc.pc(), 0x2c1c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9b35), 0xcc);
        EXPECT(gbc.readMem(0x9b36), 0x1c);
        EXPECT(gbc.readMem(0x9b37), 0x2c);
        EXPECT(gbc.readMem(0xda99), 0x38);
        EXPECT(gbc.readMem(0xda9a), 0x9b);
        // CC 0283
        gbc.setState(0x33c4, 0xe9b4, 0x8470, 0x3942, 0xebad, 0x2a73, 0x0, 0x0);
        gbc.writeMem(0x33c4, { 0xcc, 0xe2, 0xf5 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0xe9b4);
        EXPECT(gbc.pc(), 0x33c7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CC 0284
        gbc.setState(0x4846, 0x9caf, 0x49d0, 0xf1dc, 0x66ed, 0xfbb2, 0x0, 0x0);
        gbc.writeMem(0x4846, { 0xcc, 0xa0, 0x81 });
        gbc.writeMem(0x9cad, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x9cad);
        EXPECT(gbc.pc(), 0x81a0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9cad), 0x49);
        EXPECT(gbc.readMem(0x9cae), 0x48);
        // CC 0285
        gbc.setState(0x9f59, 0x38d1, 0xfc40, 0x7bcf, 0x91bb, 0x433a, 0x0, 0x1);
        gbc.writeMem(0x9f59, { 0xcc, 0xeb, 0x34 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x38d1);
        EXPECT(gbc.pc(), 0x9f5c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9f59), 0xcc);
        EXPECT(gbc.readMem(0x9f5a), 0xeb);
        EXPECT(gbc.readMem(0x9f5b), 0x34);
        // CC 0286
        gbc.setState(0xae55, 0x6b71, 0x4130, 0xa094, 0x5a53, 0xbbce, 0x0, 0x1);
        gbc.writeMem(0xae55, { 0xcc, 0x78, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x6b71);
        EXPECT(gbc.pc(), 0xae58);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xae55), 0xcc);
        EXPECT(gbc.readMem(0xae56), 0x78);
        EXPECT(gbc.readMem(0xae57), 0x87);
        // CC 0288
        gbc.setState(0x32c8, 0xb8f7, 0x80, 0x3184, 0x8f22, 0x784f, 0x1, 0x0);
        gbc.writeMem(0x32c8, { 0xcc, 0x18, 0x19 });
        gbc.writeMem(0xb8f5, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0xb8f5);
        EXPECT(gbc.pc(), 0x1918);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb8f5), 0xcb);
        EXPECT(gbc.readMem(0xb8f6), 0x32);
        // CC 0289
        gbc.setState(0x28f4, 0x21ac, 0x4450, 0xce15, 0x260, 0xd3ff, 0x1, 0x0);
        gbc.writeMem(0x28f4, { 0xcc, 0x54, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x21ac);
        EXPECT(gbc.pc(), 0x28f7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CC 028C
        gbc.setState(0x21b7, 0xc4b6, 0x3520, 0x7ddc, 0x93d9, 0x851, 0x1, 0x1);
        gbc.writeMem(0x21b7, { 0xcc, 0xb5, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xc4b6);
        EXPECT(gbc.pc(), 0x21ba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CC 028D
        gbc.setState(0x1f6, 0x784c, 0x4510, 0x194f, 0x4896, 0x8fdd, 0x0, 0x0);
        gbc.writeMem(0x1f6, { 0xcc, 0x72, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x784c);
        EXPECT(gbc.pc(), 0x1f9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CC 028E
        gbc.setState(0xe650, 0xba42, 0x2de0, 0x65a9, 0x326, 0x74aa, 0x0, 0x0);
        gbc.writeMem(0xba40, { 0x0, 0x0 });
        gbc.writeMem(0xe650, { 0xcc, 0xc0, 0x48 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0xba40);
        EXPECT(gbc.pc(), 0x48c0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xba40), 0x53);
        EXPECT(gbc.readMem(0xba41), 0xe6);
        EXPECT(gbc.readMem(0xe650), 0xcc);
        EXPECT(gbc.readMem(0xe651), 0xc0);
        EXPECT(gbc.readMem(0xe652), 0x48);
        // CC 028F
        gbc.setState(0x6ba7, 0xa98a, 0x8680, 0xd57f, 0x728d, 0x4cfa, 0x1, 0x1);
        gbc.writeMem(0x6ba7, { 0xcc, 0x40, 0x7f });
        gbc.writeMem(0xa988, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xa988);
        EXPECT(gbc.pc(), 0x7f40);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa988), 0xaa);
        EXPECT(gbc.readMem(0xa989), 0x6b);
        // CC 0290
        gbc.setState(0x5101, 0xad81, 0x8370, 0x6959, 0x84ce, 0x6b06, 0x1, 0x0);
        gbc.writeMem(0x5101, { 0xcc, 0xec, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0xad81);
        EXPECT(gbc.pc(), 0x5104);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CC 0293
        gbc.setState(0xe414, 0x486e, 0x5130, 0x974e, 0x8ae, 0xc18f, 0x1, 0x1);
        gbc.writeMem(0xe414, { 0xcc, 0x92, 0x34 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x486e);
        EXPECT(gbc.pc(), 0xe417);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe414), 0xcc);
        EXPECT(gbc.readMem(0xe415), 0x92);
        EXPECT(gbc.readMem(0xe416), 0x34);
        // CC 0294
        gbc.setState(0x10a5, 0x249b, 0xb730, 0x6bb1, 0x5c9f, 0x9b39, 0x1, 0x1);
        gbc.writeMem(0x10a5, { 0xcc, 0x50, 0x16 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x249b);
        EXPECT(gbc.pc(), 0x10a8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CC 0298
        gbc.setState(0x6d33, 0xea14, 0x93e0, 0x89ca, 0xeb4d, 0x1cff, 0x0, 0x0);
        gbc.writeMem(0x6d33, { 0xcc, 0xa9, 0xce });
        gbc.writeMem(0xea12, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0xea12);
        EXPECT(gbc.pc(), 0xcea9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xea12), 0x36);
        EXPECT(gbc.readMem(0xea13), 0x6d);
        // CC 0299
        gbc.setState(0x6008, 0x74f4, 0x7f10, 0x595d, 0xb364, 0x6adc, 0x0, 0x0);
        gbc.writeMem(0x6008, { 0xcc, 0xc3, 0x37 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x74f4);
        EXPECT(gbc.pc(), 0x600b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CC 029A
        gbc.setState(0x358c, 0xe159, 0x6ea0, 0xdbf, 0xa2d7, 0x2bb, 0x1, 0x1);
        gbc.writeMem(0x358c, { 0xcc, 0xd6, 0x83 });
        gbc.writeMem(0xe157, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0xe157);
        EXPECT(gbc.pc(), 0x83d6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe157), 0x8f);
        EXPECT(gbc.readMem(0xe158), 0x35);
        // CC 029B
        gbc.setState(0x5d30, 0xac15, 0x8060, 0x8638, 0x1dcb, 0x9ffb, 0x1, 0x0);
        gbc.writeMem(0x5d30, { 0xcc, 0xcb, 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0xac15);
        EXPECT(gbc.pc(), 0x5d33);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CC 029D
        gbc.setState(0x8060, 0x65e5, 0xa410, 0x22b4, 0xef81, 0x209, 0x1, 0x0);
        gbc.writeMem(0x8060, { 0xcc, 0xe0, 0x1d });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x65e5);
        EXPECT(gbc.pc(), 0x8063);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8060), 0xcc);
        EXPECT(gbc.readMem(0x8061), 0xe0);
        EXPECT(gbc.readMem(0x8062), 0x1d);
        // CC 029F
        gbc.setState(0x1084, 0xb663, 0x2f70, 0xef83, 0xf134, 0xa5b2, 0x0, 0x1);
        gbc.writeMem(0x1084, { 0xcc, 0xed, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0xb663);
        EXPECT(gbc.pc(), 0x1087);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CC 02A0
        gbc.setState(0x4ff8, 0xd91e, 0xeb10, 0x811b, 0x586b, 0x60f5, 0x1, 0x0);
        gbc.writeMem(0x4ff8, { 0xcc, 0x97, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0xd91e);
        EXPECT(gbc.pc(), 0x4ffb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CC 02A1
        gbc.setState(0x21e, 0xb221, 0x83f0, 0x113b, 0x4390, 0x40a8, 0x1, 0x1);
        gbc.writeMem(0x21e, { 0xcc, 0x52, 0xec });
        gbc.writeMem(0xb21f, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0xb21f);
        EXPECT(gbc.pc(), 0xec52);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb21f), 0x21);
        EXPECT(gbc.readMem(0xb220), 0x2);
        // CC 02A2
        gbc.setState(0x181, 0xfaad, 0x3150, 0xa054, 0xe46a, 0x6156, 0x1, 0x0);
        gbc.writeMem(0x181, { 0xcc, 0xae, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0xfaad);
        EXPECT(gbc.pc(), 0x184);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CC 02A3
        gbc.setState(0xc234, 0x6b7f, 0x7f60, 0x7836, 0x4c2f, 0x9eec, 0x1, 0x1);
        gbc.writeMem(0xc234, { 0xcc, 0xa, 0xff });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x6b7f);
        EXPECT(gbc.pc(), 0xc237);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc234), 0xcc);
        EXPECT(gbc.readMem(0xc235), 0xa);
        EXPECT(gbc.readMem(0xc236), 0xff);
        // CC 02A5
        gbc.setState(0x5d36, 0x3ccd, 0x4030, 0xff4d, 0x6dcd, 0x5184, 0x1, 0x0);
        gbc.writeMem(0x5d36, { 0xcc, 0x54, 0xde });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x3ccd);
        EXPECT(gbc.pc(), 0x5d39);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CC 02A9
        gbc.setState(0xe747, 0x50fe, 0xc450, 0x6ae3, 0x2e78, 0xbc6e, 0x1, 0x1);
        gbc.writeMem(0xe747, { 0xcc, 0xf1, 0x4e });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x50fe);
        EXPECT(gbc.pc(), 0xe74a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe747), 0xcc);
        EXPECT(gbc.readMem(0xe748), 0xf1);
        EXPECT(gbc.readMem(0xe749), 0x4e);
        // CC 02AB
        gbc.setState(0x618c, 0xa088, 0x32c0, 0x652e, 0x8853, 0xd13, 0x1, 0x0);
        gbc.writeMem(0x618c, { 0xcc, 0xb3, 0xc5 });
        gbc.writeMem(0xa086, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0xa086);
        EXPECT(gbc.pc(), 0xc5b3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa086), 0x8f);
        EXPECT(gbc.readMem(0xa087), 0x61);
        // CC 02AC
        gbc.setState(0x5e0, 0xa40a, 0x80a0, 0xf222, 0x9b64, 0xe151, 0x0, 0x0);
        gbc.writeMem(0x5e0, { 0xcc, 0xf5, 0xe1 });
        gbc.writeMem(0xa408, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xa408);
        EXPECT(gbc.pc(), 0xe1f5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa408), 0xe3);
        EXPECT(gbc.readMem(0xa409), 0x5);
        // CC 02AD
        gbc.setState(0x89ed, 0x31cb, 0x9030, 0x7d2f, 0x11a7, 0x890f, 0x0, 0x1);
        gbc.writeMem(0x89ed, { 0xcc, 0xf2, 0x47 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x31cb);
        EXPECT(gbc.pc(), 0x89f0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x89ed), 0xcc);
        EXPECT(gbc.readMem(0x89ee), 0xf2);
        EXPECT(gbc.readMem(0x89ef), 0x47);
        // CC 02AE
        gbc.setState(0x5cd2, 0x8e75, 0xfab0, 0x5af4, 0x576a, 0x406b, 0x0, 0x0);
        gbc.writeMem(0x5cd2, { 0xcc, 0xc6, 0x70 });
        gbc.writeMem(0x8e73, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x8e73);
        EXPECT(gbc.pc(), 0x70c6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8e73), 0xd5);
        EXPECT(gbc.readMem(0x8e74), 0x5c);
        // CC 02AF
        gbc.setState(0x4ba6, 0x50e3, 0x1000, 0x49d9, 0x258b, 0x5ddf, 0x1, 0x0);
        gbc.writeMem(0x4ba6, { 0xcc, 0xf6, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x50e3);
        EXPECT(gbc.pc(), 0x4ba9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CC 02B0
        gbc.setState(0x5a4f, 0x434a, 0x6830, 0x768d, 0x2e9a, 0xfa3b, 0x1, 0x1);
        gbc.writeMem(0x5a4f, { 0xcc, 0xb3, 0x35 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x434a);
        EXPECT(gbc.pc(), 0x5a52);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CC 02B2
        gbc.setState(0xa167, 0x1a09, 0x7200, 0x395e, 0xd6b8, 0xa2ca, 0x0, 0x1);
        gbc.writeMem(0xa167, { 0xcc, 0xe5, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x1a09);
        EXPECT(gbc.pc(), 0xa16a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa167), 0xcc);
        EXPECT(gbc.readMem(0xa168), 0xe5);
        EXPECT(gbc.readMem(0xa169), 0x52);
        // CC 02B3
        gbc.setState(0xed81, 0x7970, 0xcf30, 0xea5d, 0x58f1, 0x1e89, 0x0, 0x1);
        gbc.writeMem(0xed81, { 0xcc, 0x5f, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x7970);
        EXPECT(gbc.pc(), 0xed84);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xed81), 0xcc);
        EXPECT(gbc.readMem(0xed82), 0x5f);
        EXPECT(gbc.readMem(0xed83), 0x73);
        // CC 02B4
        gbc.setState(0x3531, 0xcf6c, 0x31d0, 0xbfce, 0x4b80, 0x1e23, 0x1, 0x0);
        gbc.writeMem(0x3531, { 0xcc, 0x99, 0x3e });
        gbc.writeMem(0xcf6a, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0xcf6a);
        EXPECT(gbc.pc(), 0x3e99);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcf6a), 0x34);
        EXPECT(gbc.readMem(0xcf6b), 0x35);
        // CC 02B5
        gbc.setState(0xa470, 0xae61, 0xed0, 0xa15, 0xa2d7, 0x9694, 0x1, 0x1);
        gbc.writeMem(0xa470, { 0xcc, 0x21, 0x37 });
        gbc.writeMem(0xae5f, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xae5f);
        EXPECT(gbc.pc(), 0x3721);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa470), 0xcc);
        EXPECT(gbc.readMem(0xa471), 0x21);
        EXPECT(gbc.readMem(0xa472), 0x37);
        EXPECT(gbc.readMem(0xae5f), 0x73);
        EXPECT(gbc.readMem(0xae60), 0xa4);
        // CC 02B7
        gbc.setState(0x48cf, 0xf50a, 0x7780, 0x5826, 0x9f7f, 0x8346, 0x1, 0x1);
        gbc.writeMem(0x48cf, { 0xcc, 0x6e, 0x98 });
        gbc.writeMem(0xf508, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0xf508);
        EXPECT(gbc.pc(), 0x986e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf508), 0xd2);
        EXPECT(gbc.readMem(0xf509), 0x48);
        // CC 02B9
        gbc.setState(0x2eee, 0x82cd, 0x5f80, 0x2dfa, 0xf436, 0x348e, 0x1, 0x1);
        gbc.writeMem(0x2eee, { 0xcc, 0x6c, 0x53 });
        gbc.writeMem(0x82cb, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x82cb);
        EXPECT(gbc.pc(), 0x536c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x82cb), 0xf1);
        EXPECT(gbc.readMem(0x82cc), 0x2e);
        // CC 02BA
        gbc.setState(0x4ea8, 0xd97f, 0xfbe0, 0x46ae, 0xe57e, 0xef70, 0x1, 0x0);
        gbc.writeMem(0x4ea8, { 0xcc, 0x8d, 0xdb });
        gbc.writeMem(0xd97d, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0xd97d);
        EXPECT(gbc.pc(), 0xdb8d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd97d), 0xab);
        EXPECT(gbc.readMem(0xd97e), 0x4e);
        // CC 02BC
        gbc.setState(0x4775, 0xe19c, 0x5eb0, 0xfa10, 0x585a, 0xa653, 0x0, 0x0);
        gbc.writeMem(0x4775, { 0xcc, 0xac, 0x37 });
        gbc.writeMem(0xe19a, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0xe19a);
        EXPECT(gbc.pc(), 0x37ac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe19a), 0x78);
        EXPECT(gbc.readMem(0xe19b), 0x47);
        // CC 02BD
        gbc.setState(0x257b, 0xdfe1, 0xf580, 0xbbfc, 0x60d2, 0xa211, 0x1, 0x1);
        gbc.writeMem(0x257b, { 0xcc, 0x4f, 0x57 });
        gbc.writeMem(0xdfdf, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0xdfdf);
        EXPECT(gbc.pc(), 0x574f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdfdf), 0x7e);
        EXPECT(gbc.readMem(0xdfe0), 0x25);
        // CC 02BE
        gbc.setState(0xdf14, 0xdd61, 0x10d0, 0xf11e, 0xfb99, 0xe738, 0x0, 0x0);
        gbc.writeMem(0xdd5f, { 0x0, 0x0 });
        gbc.writeMem(0xdf14, { 0xcc, 0x58, 0x6c });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0xdd5f);
        EXPECT(gbc.pc(), 0x6c58);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdd5f), 0x17);
        EXPECT(gbc.readMem(0xdd60), 0xdf);
        EXPECT(gbc.readMem(0xdf14), 0xcc);
        EXPECT(gbc.readMem(0xdf15), 0x58);
        EXPECT(gbc.readMem(0xdf16), 0x6c);
        // CC 02C0
        gbc.setState(0xed67, 0x3ad0, 0x9000, 0xc1f3, 0x6045, 0x48c9, 0x1, 0x1);
        gbc.writeMem(0xed67, { 0xcc, 0xc3, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x3ad0);
        EXPECT(gbc.pc(), 0xed6a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xed67), 0xcc);
        EXPECT(gbc.readMem(0xed68), 0xc3);
        EXPECT(gbc.readMem(0xed69), 0x51);
        // CC 02C1
        gbc.setState(0x3495, 0x8fc6, 0x3370, 0x2bc0, 0x739f, 0xd364, 0x0, 0x1);
        gbc.writeMem(0x3495, { 0xcc, 0xb0, 0x5b });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x8fc6);
        EXPECT(gbc.pc(), 0x3498);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CC 02C2
        gbc.setState(0x1c6a, 0x96d4, 0x5c0, 0xf50e, 0x3c3d, 0xbc4a, 0x0, 0x0);
        gbc.writeMem(0x1c6a, { 0xcc, 0x70, 0x9d });
        gbc.writeMem(0x96d2, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x96d2);
        EXPECT(gbc.pc(), 0x9d70);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x96d2), 0x6d);
        EXPECT(gbc.readMem(0x96d3), 0x1c);
        // CC 02C3
        gbc.setState(0x70d3, 0xca46, 0x33d0, 0x9901, 0x3a51, 0x7b24, 0x0, 0x1);
        gbc.writeMem(0x70d3, { 0xcc, 0x75, 0xf2 });
        gbc.writeMem(0xca44, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0xca44);
        EXPECT(gbc.pc(), 0xf275);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xca44), 0xd6);
        EXPECT(gbc.readMem(0xca45), 0x70);
        // CC 02C5
        gbc.setState(0x3146, 0xd3ff, 0x1d50, 0x9dc8, 0xf36, 0xa9fd, 0x0, 0x1);
        gbc.writeMem(0x3146, { 0xcc, 0x4c, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xd3ff);
        EXPECT(gbc.pc(), 0x3149);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CC 02C7
        gbc.setState(0x2f85, 0xd32d, 0xe730, 0xf380, 0x8673, 0x1f34, 0x1, 0x1);
        gbc.writeMem(0x2f85, { 0xcc, 0x32, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xd32d);
        EXPECT(gbc.pc(), 0x2f88);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CC 02C9
        gbc.setState(0x8321, 0xbe61, 0x79a0, 0x5507, 0x40e0, 0x13f0, 0x0, 0x1);
        gbc.writeMem(0x8321, { 0xcc, 0x75, 0x8f });
        gbc.writeMem(0xbe5f, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0xbe5f);
        EXPECT(gbc.pc(), 0x8f75);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8321), 0xcc);
        EXPECT(gbc.readMem(0x8322), 0x75);
        EXPECT(gbc.readMem(0x8323), 0x8f);
        EXPECT(gbc.readMem(0xbe5f), 0x24);
        EXPECT(gbc.readMem(0xbe60), 0x83);
        // CC 02CA
        gbc.setState(0x7686, 0x3b82, 0x8d00, 0xe4c8, 0xb7d7, 0x9383, 0x0, 0x1);
        gbc.writeMem(0x7686, { 0xcc, 0x65, 0xa1 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x3b82);
        EXPECT(gbc.pc(), 0x7689);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CC 02CC
        gbc.setState(0x6d2e, 0xd8ac, 0xbaa0, 0x55ed, 0x7a8f, 0xdd90, 0x0, 0x1);
        gbc.writeMem(0x6d2e, { 0xcc, 0x57, 0xb7 });
        gbc.writeMem(0xd8aa, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0xd8aa);
        EXPECT(gbc.pc(), 0xb757);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd8aa), 0x31);
        EXPECT(gbc.readMem(0xd8ab), 0x6d);
        // CC 02CD
        gbc.setState(0x1da5, 0xdda0, 0xe010, 0xad85, 0xd918, 0x69d2, 0x0, 0x1);
        gbc.writeMem(0x1da5, { 0xcc, 0x5a, 0x5e });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0xdda0);
        EXPECT(gbc.pc(), 0x1da8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CC 02CF
        gbc.setState(0x6316, 0x8c42, 0xe3c0, 0xf83d, 0x88b7, 0xd9e4, 0x0, 0x1);
        gbc.writeMem(0x6316, { 0xcc, 0x5d, 0x41 });
        gbc.writeMem(0x8c40, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x8c40);
        EXPECT(gbc.pc(), 0x415d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c40), 0x19);
        EXPECT(gbc.readMem(0x8c41), 0x63);
        // CC 02D1
        gbc.setState(0x4ec1, 0xc228, 0x2080, 0x4db6, 0x82b4, 0xc870, 0x1, 0x0);
        gbc.writeMem(0x4ec1, { 0xcc, 0x90, 0xb4 });
        gbc.writeMem(0xc226, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0xc226);
        EXPECT(gbc.pc(), 0xb490);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc226), 0xc4);
        EXPECT(gbc.readMem(0xc227), 0x4e);
        // CC 02D2
        gbc.setState(0xd285, 0x366b, 0x5c70, 0x7e2d, 0x8bb8, 0xba19, 0x1, 0x1);
        gbc.writeMem(0xd285, { 0xcc, 0xa9, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x366b);
        EXPECT(gbc.pc(), 0xd288);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd285), 0xcc);
        EXPECT(gbc.readMem(0xd286), 0xa9);
        EXPECT(gbc.readMem(0xd287), 0x8e);
        // CC 02D3
        gbc.setState(0x25bf, 0x5c6a, 0x6c40, 0x48e7, 0x2b6d, 0xc5bf, 0x0, 0x0);
        gbc.writeMem(0x25bf, { 0xcc, 0x2b, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x5c6a);
        EXPECT(gbc.pc(), 0x25c2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CC 02D5
        gbc.setState(0x4b64, 0xc707, 0x1190, 0xae87, 0x8838, 0x4b9b, 0x0, 0x1);
        gbc.writeMem(0x4b64, { 0xcc, 0x5c, 0x53 });
        gbc.writeMem(0xc705, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0xc705);
        EXPECT(gbc.pc(), 0x535c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc705), 0x67);
        EXPECT(gbc.readMem(0xc706), 0x4b);
        // CC 02D6
        gbc.setState(0xd74, 0x9c55, 0xc3b0, 0x75b5, 0x79f9, 0xfe02, 0x1, 0x1);
        gbc.writeMem(0xd74, { 0xcc, 0xe6, 0xce });
        gbc.writeMem(0x9c53, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x9c53);
        EXPECT(gbc.pc(), 0xcee6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9c53), 0x77);
        EXPECT(gbc.readMem(0x9c54), 0xd);
        // CC 02D7
        gbc.setState(0xc5ec, 0xcdb7, 0x4770, 0x77a4, 0x2314, 0xe350, 0x1, 0x0);
        gbc.writeMem(0xc5ec, { 0xcc, 0x4, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0xcdb7);
        EXPECT(gbc.pc(), 0xc5ef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc5ec), 0xcc);
        EXPECT(gbc.readMem(0xc5ed), 0x4);
        EXPECT(gbc.readMem(0xc5ee), 0xb8);
        // CC 02D8
        gbc.setState(0x32a9, 0xe34e, 0x950, 0xdb07, 0x9bd2, 0x757, 0x0, 0x1);
        gbc.writeMem(0x32a9, { 0xcc, 0x60, 0xf7 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0xe34e);
        EXPECT(gbc.pc(), 0x32ac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CC 02D9
        gbc.setState(0xa8d2, 0xa711, 0xe980, 0x5e64, 0xd6bf, 0x3e5d, 0x1, 0x1);
        gbc.writeMem(0xa70f, { 0x0, 0x0 });
        gbc.writeMem(0xa8d2, { 0xcc, 0x9e, 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xa70f);
        EXPECT(gbc.pc(), 0x4a9e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa70f), 0xd5);
        EXPECT(gbc.readMem(0xa710), 0xa8);
        EXPECT(gbc.readMem(0xa8d2), 0xcc);
        EXPECT(gbc.readMem(0xa8d3), 0x9e);
        EXPECT(gbc.readMem(0xa8d4), 0x4a);
        // CC 02DA
        gbc.setState(0xaf69, 0x8bf8, 0xb5e0, 0x781e, 0xd59a, 0x99bc, 0x0, 0x1);
        gbc.writeMem(0x8bf6, { 0x0, 0x0 });
        gbc.writeMem(0xaf69, { 0xcc, 0x3f, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x8bf6);
        EXPECT(gbc.pc(), 0xfd3f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8bf6), 0x6c);
        EXPECT(gbc.readMem(0x8bf7), 0xaf);
        EXPECT(gbc.readMem(0xaf69), 0xcc);
        EXPECT(gbc.readMem(0xaf6a), 0x3f);
        EXPECT(gbc.readMem(0xaf6b), 0xfd);
        // CC 02DB
        gbc.setState(0xfd0, 0x510b, 0x5620, 0x6c29, 0xb908, 0xd57c, 0x1, 0x0);
        gbc.writeMem(0xfd0, { 0xcc, 0x4c, 0x1 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x510b);
        EXPECT(gbc.pc(), 0xfd3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CC 02DC
        gbc.setState(0x49f0, 0x3702, 0x6430, 0x3df3, 0x2f41, 0x538e, 0x1, 0x0);
        gbc.writeMem(0x49f0, { 0xcc, 0x39, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x3702);
        EXPECT(gbc.pc(), 0x49f3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CC 02DD
        gbc.setState(0xc772, 0x5afa, 0xd540, 0x45b0, 0xdf45, 0xc0ae, 0x1, 0x1);
        gbc.writeMem(0xc772, { 0xcc, 0x95, 0xf5 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x5afa);
        EXPECT(gbc.pc(), 0xc775);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc772), 0xcc);
        EXPECT(gbc.readMem(0xc773), 0x95);
        EXPECT(gbc.readMem(0xc774), 0xf5);
        // CC 02DE
        gbc.setState(0x61c4, 0x8ed0, 0x6af0, 0xc7b5, 0xb54d, 0x226c, 0x0, 0x1);
        gbc.writeMem(0x61c4, { 0xcc, 0x2d, 0x80 });
        gbc.writeMem(0x8ece, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x8ece);
        EXPECT(gbc.pc(), 0x802d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8ece), 0xc7);
        EXPECT(gbc.readMem(0x8ecf), 0x61);
        // CC 02E0
        gbc.setState(0x6e80, 0x425d, 0x2170, 0x3290, 0x5e9f, 0x50, 0x1, 0x0);
        gbc.writeMem(0x6e80, { 0xcc, 0xbc, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x425d);
        EXPECT(gbc.pc(), 0x6e83);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CC 02E1
        gbc.setState(0xcfe1, 0xb3dc, 0x3b60, 0x3575, 0x42db, 0xd62f, 0x1, 0x1);
        gbc.writeMem(0xcfe1, { 0xcc, 0x73, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xb3dc);
        EXPECT(gbc.pc(), 0xcfe4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcfe1), 0xcc);
        EXPECT(gbc.readMem(0xcfe2), 0x73);
        EXPECT(gbc.readMem(0xcfe3), 0xfa);
        // CC 02E2
        gbc.setState(0x1c45, 0xd021, 0xd7f0, 0x77c8, 0x2333, 0xdf73, 0x1, 0x1);
        gbc.writeMem(0x1c45, { 0xcc, 0x11, 0xf });
        gbc.writeMem(0xd01f, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0xd01f);
        EXPECT(gbc.pc(), 0xf11);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd01f), 0x48);
        EXPECT(gbc.readMem(0xd020), 0x1c);
        // CC 02E3
        gbc.setState(0x3880, 0x5d1, 0x1410, 0xdf7a, 0xd0ff, 0x6da5, 0x0, 0x1);
        gbc.writeMem(0x3880, { 0xcc, 0x31, 0xe });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x5d1);
        EXPECT(gbc.pc(), 0x3883);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CC 02E4
        gbc.setState(0x108a, 0xf166, 0x8b20, 0xedcb, 0xa9df, 0xbae8, 0x0, 0x1);
        gbc.writeMem(0x108a, { 0xcc, 0x14, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0xf166);
        EXPECT(gbc.pc(), 0x108d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CC 02E5
        gbc.setState(0x6e21, 0x2bfe, 0x3340, 0xa866, 0x3f22, 0x33ad, 0x1, 0x1);
        gbc.writeMem(0x6e21, { 0xcc, 0x11, 0x3c });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x2bfe);
        EXPECT(gbc.pc(), 0x6e24);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CC 02E8
        gbc.setState(0xab3a, 0x9852, 0x14f0, 0x3523, 0xf2b0, 0x3b42, 0x1, 0x0);
        gbc.writeMem(0x9850, { 0x0, 0x0 });
        gbc.writeMem(0xab3a, { 0xcc, 0xe7, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x9850);
        EXPECT(gbc.pc(), 0xcee7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9850), 0x3d);
        EXPECT(gbc.readMem(0x9851), 0xab);
        EXPECT(gbc.readMem(0xab3a), 0xcc);
        EXPECT(gbc.readMem(0xab3b), 0xe7);
        EXPECT(gbc.readMem(0xab3c), 0xce);
        // CC 02EB
        gbc.setState(0x74aa, 0xd1cb, 0x23c0, 0xc9b2, 0xa10a, 0x9688, 0x1, 0x0);
        gbc.writeMem(0x74aa, { 0xcc, 0xc0, 0xdf });
        gbc.writeMem(0xd1c9, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0xd1c9);
        EXPECT(gbc.pc(), 0xdfc0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd1c9), 0xad);
        EXPECT(gbc.readMem(0xd1ca), 0x74);
        // CC 02EC
        gbc.setState(0x3997, 0xfe41, 0x9f60, 0xd135, 0xdad3, 0xa286, 0x0, 0x0);
        gbc.writeMem(0x3997, { 0xcc, 0xf9, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0xfe41);
        EXPECT(gbc.pc(), 0x399a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CC 02EE
        gbc.setState(0xcb81, 0x4154, 0xd270, 0x51b7, 0x8fb3, 0x876c, 0x1, 0x1);
        gbc.writeMem(0xcb81, { 0xcc, 0x33, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x4154);
        EXPECT(gbc.pc(), 0xcb84);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcb81), 0xcc);
        EXPECT(gbc.readMem(0xcb82), 0x33);
        EXPECT(gbc.readMem(0xcb83), 0x12);
        // CC 02EF
        gbc.setState(0x2c79, 0xfd3d, 0x1310, 0xfa4d, 0x8e8f, 0x42d4, 0x0, 0x0);
        gbc.writeMem(0x2c79, { 0xcc, 0x9d, 0x8 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xfd3d);
        EXPECT(gbc.pc(), 0x2c7c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CC 02F1
        gbc.setState(0x4bc5, 0xa2f8, 0xddc0, 0xa705, 0x8ced, 0x2945, 0x0, 0x0);
        gbc.writeMem(0x4bc5, { 0xcc, 0x83, 0xd4 });
        gbc.writeMem(0xa2f6, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0xa2f6);
        EXPECT(gbc.pc(), 0xd483);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa2f6), 0xc8);
        EXPECT(gbc.readMem(0xa2f7), 0x4b);
        // CC 02F2
        gbc.setState(0x7e11, 0xe64, 0x5720, 0x2042, 0xb265, 0xe179, 0x0, 0x0);
        gbc.writeMem(0x7e11, { 0xcc, 0x5d, 0xaf });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xe64);
        EXPECT(gbc.pc(), 0x7e14);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CC 02F3
        gbc.setState(0x6ee3, 0xc41, 0xe100, 0x711a, 0xb221, 0xcf51, 0x1, 0x0);
        gbc.writeMem(0x6ee3, { 0xcc, 0xd6, 0x1a });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xc41);
        EXPECT(gbc.pc(), 0x6ee6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CC 02F4
        gbc.setState(0x2d1e, 0x237b, 0x3f60, 0x32f8, 0x51d0, 0xbbf8, 0x0, 0x0);
        gbc.writeMem(0x2d1e, { 0xcc, 0x3d, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x237b);
        EXPECT(gbc.pc(), 0x2d21);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CC 02F5
        gbc.setState(0xb66f, 0x9e52, 0xa0a0, 0xd603, 0x9a50, 0x54a, 0x0, 0x0);
        gbc.writeMem(0x9e50, { 0x0, 0x0 });
        gbc.writeMem(0xb66f, { 0xcc, 0x7, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x9e50);
        EXPECT(gbc.pc(), 0x8807);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9e50), 0x72);
        EXPECT(gbc.readMem(0x9e51), 0xb6);
        EXPECT(gbc.readMem(0xb66f), 0xcc);
        EXPECT(gbc.readMem(0xb670), 0x7);
        EXPECT(gbc.readMem(0xb671), 0x88);
        // CC 02F7
        gbc.setState(0xdea7, 0xa4f, 0xb070, 0x4801, 0x78f3, 0xc1bd, 0x1, 0x1);
        gbc.writeMem(0xdea7, { 0xcc, 0x7f, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0xa4f);
        EXPECT(gbc.pc(), 0xdeaa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdea7), 0xcc);
        EXPECT(gbc.readMem(0xdea8), 0x7f);
        EXPECT(gbc.readMem(0xdea9), 0xfd);
        // CC 02F8
        gbc.setState(0x6042, 0xf8f8, 0xc60, 0x6ef8, 0x3fc3, 0xb768, 0x0, 0x1);
        gbc.writeMem(0x6042, { 0xcc, 0x6b, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0xf8f8);
        EXPECT(gbc.pc(), 0x6045);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CC 02F9
        gbc.setState(0x248c, 0x83a3, 0x73e0, 0x3624, 0x77e4, 0xac3a, 0x1, 0x1);
        gbc.writeMem(0x248c, { 0xcc, 0x77, 0xba });
        gbc.writeMem(0x83a1, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x83a1);
        EXPECT(gbc.pc(), 0xba77);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x83a1), 0x8f);
        EXPECT(gbc.readMem(0x83a2), 0x24);
        // CC 02FB
        gbc.setState(0x8098, 0xce9, 0xf360, 0x55f3, 0xfa6e, 0xe6ad, 0x1, 0x1);
        gbc.writeMem(0x8098, { 0xcc, 0xc4, 0xa4 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0xce9);
        EXPECT(gbc.pc(), 0x809b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8098), 0xcc);
        EXPECT(gbc.readMem(0x8099), 0xc4);
        EXPECT(gbc.readMem(0x809a), 0xa4);
        // CC 02FD
        gbc.setState(0x9ba3, 0x6c95, 0x3150, 0xec23, 0xe88b, 0x1989, 0x0, 0x0);
        gbc.writeMem(0x9ba3, { 0xcc, 0xcd, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x6c95);
        EXPECT(gbc.pc(), 0x9ba6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9ba3), 0xcc);
        EXPECT(gbc.readMem(0x9ba4), 0xcd);
        EXPECT(gbc.readMem(0x9ba5), 0x59);
        // CC 02FE
        gbc.setState(0xd26d, 0xae47, 0x2170, 0x30bc, 0x53, 0xbe94, 0x1, 0x0);
        gbc.writeMem(0xd26d, { 0xcc, 0x9c, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xae47);
        EXPECT(gbc.pc(), 0xd270);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd26d), 0xcc);
        EXPECT(gbc.readMem(0xd26e), 0x9c);
        EXPECT(gbc.readMem(0xd26f), 0xed);
        // CC 0300
        gbc.setState(0x48c6, 0x9019, 0x8110, 0x1326, 0x7373, 0x6efb, 0x0, 0x0);
        gbc.writeMem(0x48c6, { 0xcc, 0x45, 0xa1 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x9019);
        EXPECT(gbc.pc(), 0x48c9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CC 0301
        gbc.setState(0xb160, 0x4f55, 0x4960, 0xfdac, 0x7498, 0xf04d, 0x1, 0x1);
        gbc.writeMem(0xb160, { 0xcc, 0xef, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x4f55);
        EXPECT(gbc.pc(), 0xb163);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb160), 0xcc);
        EXPECT(gbc.readMem(0xb161), 0xef);
        EXPECT(gbc.readMem(0xb162), 0x20);
        // CC 0302
        gbc.setState(0x75e2, 0xa020, 0x9140, 0xf061, 0x5eb6, 0xe75b, 0x1, 0x1);
        gbc.writeMem(0x75e2, { 0xcc, 0xb9, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0xa020);
        EXPECT(gbc.pc(), 0x75e5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CC 0303
        gbc.setState(0x57cf, 0xec2e, 0x4180, 0x3e40, 0x9d1e, 0x3690, 0x1, 0x1);
        gbc.writeMem(0x57cf, { 0xcc, 0x31, 0x67 });
        gbc.writeMem(0xec2c, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0xec2c);
        EXPECT(gbc.pc(), 0x6731);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xec2c), 0xd2);
        EXPECT(gbc.readMem(0xec2d), 0x57);
        // CC 0304
        gbc.setState(0xb0d6, 0x2103, 0x6640, 0xebeb, 0x12be, 0x9a13, 0x0, 0x1);
        gbc.writeMem(0xb0d6, { 0xcc, 0x8d, 0xad });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x2103);
        EXPECT(gbc.pc(), 0xb0d9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb0d6), 0xcc);
        EXPECT(gbc.readMem(0xb0d7), 0x8d);
        EXPECT(gbc.readMem(0xb0d8), 0xad);
        // CC 0305
        gbc.setState(0x433f, 0x9016, 0x22f0, 0x8abf, 0x3af1, 0x962a, 0x0, 0x0);
        gbc.writeMem(0x433f, { 0xcc, 0x91, 0xa8 });
        gbc.writeMem(0x9014, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x9014);
        EXPECT(gbc.pc(), 0xa891);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9014), 0x42);
        EXPECT(gbc.readMem(0x9015), 0x43);
        // CC 0307
        gbc.setState(0xe142, 0xaf87, 0xbd60, 0x21e6, 0xd640, 0x5579, 0x0, 0x1);
        gbc.writeMem(0xe142, { 0xcc, 0xfd, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xaf87);
        EXPECT(gbc.pc(), 0xe145);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe142), 0xcc);
        EXPECT(gbc.readMem(0xe143), 0xfd);
        EXPECT(gbc.readMem(0xe144), 0xc3);
        // CC 0308
        gbc.setState(0x6171, 0xeb78, 0x3df0, 0x2a42, 0x5ba7, 0xa9a6, 0x1, 0x1);
        gbc.writeMem(0x6171, { 0xcc, 0x6c, 0x74 });
        gbc.writeMem(0xeb76, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0xeb76);
        EXPECT(gbc.pc(), 0x746c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeb76), 0x74);
        EXPECT(gbc.readMem(0xeb77), 0x61);
        // CC 030A
        gbc.setState(0x18a0, 0xa86a, 0xa860, 0x82b9, 0xbf31, 0x1cf6, 0x1, 0x0);
        gbc.writeMem(0x18a0, { 0xcc, 0x59, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0xa86a);
        EXPECT(gbc.pc(), 0x18a3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CC 030B
        gbc.setState(0xc477, 0x1759, 0xc120, 0xb07, 0xa680, 0xd93b, 0x1, 0x0);
        gbc.writeMem(0xc477, { 0xcc, 0xd, 0xfc });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x1759);
        EXPECT(gbc.pc(), 0xc47a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc477), 0xcc);
        EXPECT(gbc.readMem(0xc478), 0xd);
        EXPECT(gbc.readMem(0xc479), 0xfc);
        // CC 030C
        gbc.setState(0xb121, 0xcdf6, 0xb360, 0x9a28, 0xceb0, 0x7e49, 0x0, 0x0);
        gbc.writeMem(0xb121, { 0xcc, 0x2c, 0xde });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xcdf6);
        EXPECT(gbc.pc(), 0xb124);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb121), 0xcc);
        EXPECT(gbc.readMem(0xb122), 0x2c);
        EXPECT(gbc.readMem(0xb123), 0xde);
        // CC 030E
        gbc.setState(0x4106, 0x6f1f, 0x2860, 0x9ac5, 0xb6d1, 0x812d, 0x0, 0x0);
        gbc.writeMem(0x4106, { 0xcc, 0xfb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x6f1f);
        EXPECT(gbc.pc(), 0x4109);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CC 0310
        gbc.setState(0x38c7, 0xf884, 0xbe10, 0x1bb7, 0x8372, 0xfe89, 0x0, 0x0);
        gbc.writeMem(0x38c7, { 0xcc, 0xa, 0xa6 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0xf884);
        EXPECT(gbc.pc(), 0x38ca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CC 0312
        gbc.setState(0x5657, 0xaf43, 0x27e0, 0xa64, 0x80d, 0xa3d4, 0x0, 0x1);
        gbc.writeMem(0x5657, { 0xcc, 0x6c, 0x30 });
        gbc.writeMem(0xaf41, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xaf41);
        EXPECT(gbc.pc(), 0x306c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaf41), 0x5a);
        EXPECT(gbc.readMem(0xaf42), 0x56);
        // CC 0313
        gbc.setState(0x1d71, 0xc0fe, 0x18d0, 0x7032, 0xce3a, 0xc7d2, 0x1, 0x1);
        gbc.writeMem(0x1d71, { 0xcc, 0x4a, 0x3e });
        gbc.writeMem(0xc0fc, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0xc0fc);
        EXPECT(gbc.pc(), 0x3e4a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc0fc), 0x74);
        EXPECT(gbc.readMem(0xc0fd), 0x1d);
        // CC 0314
        gbc.setState(0x723a, 0xa560, 0xba40, 0x8bd1, 0xd732, 0x10e9, 0x1, 0x1);
        gbc.writeMem(0x723a, { 0xcc, 0xf0, 0xfc });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0xa560);
        EXPECT(gbc.pc(), 0x723d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CC 0316
        gbc.setState(0x4620, 0x67ab, 0xfa00, 0x213b, 0x8389, 0xf82e, 0x1, 0x0);
        gbc.writeMem(0x4620, { 0xcc, 0x83, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x67ab);
        EXPECT(gbc.pc(), 0x4623);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CC 0319
        gbc.setState(0xbec, 0xd2e3, 0xcb00, 0xc069, 0xd3ca, 0x9819, 0x1, 0x0);
        gbc.writeMem(0xbec, { 0xcc, 0x79, 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0xd2e3);
        EXPECT(gbc.pc(), 0xbef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CC 031A
        gbc.setState(0x7af2, 0x451b, 0x7240, 0xea7b, 0x2372, 0x26c0, 0x0, 0x1);
        gbc.writeMem(0x7af2, { 0xcc, 0xb8, 0x5f });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x451b);
        EXPECT(gbc.pc(), 0x7af5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CC 031B
        gbc.setState(0xe9c1, 0x630b, 0xe70, 0xec10, 0xbbb6, 0xf1e2, 0x0, 0x0);
        gbc.writeMem(0xe9c1, { 0xcc, 0xc0, 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x630b);
        EXPECT(gbc.pc(), 0xe9c4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe9c1), 0xcc);
        EXPECT(gbc.readMem(0xe9c2), 0xc0);
        EXPECT(gbc.readMem(0xe9c3), 0xd8);
        // CC 031C
        gbc.setState(0xade, 0x5614, 0xa770, 0x23a, 0x47e2, 0x641b, 0x0, 0x0);
        gbc.writeMem(0xade, { 0xcc, 0xe4, 0x57 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x5614);
        EXPECT(gbc.pc(), 0xae1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CC 031D
        gbc.setState(0x3620, 0xf503, 0xe270, 0x536, 0xda8b, 0xc168, 0x1, 0x0);
        gbc.writeMem(0x3620, { 0xcc, 0x9c, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0xf503);
        EXPECT(gbc.pc(), 0x3623);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CC 031E
        gbc.setState(0x838f, 0xcf21, 0xd060, 0x9f7f, 0x9783, 0xb600, 0x0, 0x1);
        gbc.writeMem(0x838f, { 0xcc, 0xbd, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0xcf21);
        EXPECT(gbc.pc(), 0x8392);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x838f), 0xcc);
        EXPECT(gbc.readMem(0x8390), 0xbd);
        EXPECT(gbc.readMem(0x8391), 0x64);
        // CC 031F
        gbc.setState(0x50fc, 0xc450, 0x4a0, 0x764f, 0x5f7f, 0xf095, 0x1, 0x0);
        gbc.writeMem(0x50fc, { 0xcc, 0xba, 0xdf });
        gbc.writeMem(0xc44e, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0xc44e);
        EXPECT(gbc.pc(), 0xdfba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc44e), 0xff);
        EXPECT(gbc.readMem(0xc44f), 0x50);
        // CC 0321
        gbc.setState(0x52ec, 0xd723, 0x6df0, 0x5962, 0xf67, 0x2eae, 0x1, 0x1);
        gbc.writeMem(0x52ec, { 0xcc, 0x9f, 0xfb });
        gbc.writeMem(0xd721, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0xd721);
        EXPECT(gbc.pc(), 0xfb9f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd721), 0xef);
        EXPECT(gbc.readMem(0xd722), 0x52);
        // CC 0322
        gbc.setState(0x77ec, 0xcfe2, 0xe520, 0xd9a6, 0xec7f, 0xdf83, 0x1, 0x0);
        gbc.writeMem(0x77ec, { 0xcc, 0xf2, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0xcfe2);
        EXPECT(gbc.pc(), 0x77ef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CC 0324
        gbc.setState(0xc198, 0x7bb4, 0xfe10, 0x2e93, 0xd368, 0xde5, 0x1, 0x1);
        gbc.writeMem(0xc198, { 0xcc, 0xc0, 0xde });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x7bb4);
        EXPECT(gbc.pc(), 0xc19b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc198), 0xcc);
        EXPECT(gbc.readMem(0xc199), 0xc0);
        EXPECT(gbc.readMem(0xc19a), 0xde);
        // CC 0327
        gbc.setState(0xebd6, 0xa195, 0xca80, 0xfb0, 0x87fa, 0xb462, 0x1, 0x1);
        gbc.writeMem(0xa193, { 0x0, 0x0 });
        gbc.writeMem(0xebd6, { 0xcc, 0xb5, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xa193);
        EXPECT(gbc.pc(), 0x10b5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa193), 0xd9);
        EXPECT(gbc.readMem(0xa194), 0xeb);
        EXPECT(gbc.readMem(0xebd6), 0xcc);
        EXPECT(gbc.readMem(0xebd7), 0xb5);
        EXPECT(gbc.readMem(0xebd8), 0x10);
        // CC 0328
        gbc.setState(0xb27f, 0x4d32, 0x2130, 0xf98c, 0xa4a6, 0x968d, 0x1, 0x0);
        gbc.writeMem(0xb27f, { 0xcc, 0x3c, 0x7 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x4d32);
        EXPECT(gbc.pc(), 0xb282);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb27f), 0xcc);
        EXPECT(gbc.readMem(0xb280), 0x3c);
        EXPECT(gbc.readMem(0xb281), 0x7);
        // CC 0329
        gbc.setState(0xcd51, 0x38b5, 0x860, 0x249a, 0xf93b, 0x52eb, 0x0, 0x0);
        gbc.writeMem(0xcd51, { 0xcc, 0x36, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x38b5);
        EXPECT(gbc.pc(), 0xcd54);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcd51), 0xcc);
        EXPECT(gbc.readMem(0xcd52), 0x36);
        EXPECT(gbc.readMem(0xcd53), 0x8b);
        // CC 032A
        gbc.setState(0x8d97, 0xf5be, 0xa0b0, 0xb859, 0x52db, 0x6ab2, 0x1, 0x1);
        gbc.writeMem(0x8d97, { 0xcc, 0x39, 0x59 });
        gbc.writeMem(0xf5bc, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0xf5bc);
        EXPECT(gbc.pc(), 0x5939);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8d97), 0xcc);
        EXPECT(gbc.readMem(0x8d98), 0x39);
        EXPECT(gbc.readMem(0x8d99), 0x59);
        EXPECT(gbc.readMem(0xf5bc), 0x9a);
        EXPECT(gbc.readMem(0xf5bd), 0x8d);
        // CC 032E
        gbc.setState(0x359a, 0x216d, 0xb30, 0xa5d0, 0xd99a, 0xe8cc, 0x0, 0x0);
        gbc.writeMem(0x359a, { 0xcc, 0xfc, 0x3c });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x216d);
        EXPECT(gbc.pc(), 0x359d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CC 0330
        gbc.setState(0xdb27, 0xecb9, 0xe570, 0x12e9, 0x3c98, 0xa16b, 0x1, 0x0);
        gbc.writeMem(0xdb27, { 0xcc, 0x86, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0xecb9);
        EXPECT(gbc.pc(), 0xdb2a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdb27), 0xcc);
        EXPECT(gbc.readMem(0xdb28), 0x86);
        EXPECT(gbc.readMem(0xdb29), 0x9c);
        // CC 0332
        gbc.setState(0xca04, 0xafcd, 0xeaf0, 0x690e, 0xe6e8, 0xe415, 0x1, 0x1);
        gbc.writeMem(0xafcb, { 0x0, 0x0 });
        gbc.writeMem(0xca04, { 0xcc, 0x12, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0xafcb);
        EXPECT(gbc.pc(), 0x8e12);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xafcb), 0x7);
        EXPECT(gbc.readMem(0xafcc), 0xca);
        EXPECT(gbc.readMem(0xca04), 0xcc);
        EXPECT(gbc.readMem(0xca05), 0x12);
        EXPECT(gbc.readMem(0xca06), 0x8e);
        // CC 0334
        gbc.setState(0x9444, 0x6707, 0x7b40, 0x6730, 0x3274, 0xc604, 0x1, 0x0);
        gbc.writeMem(0x9444, { 0xcc, 0x33, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x6707);
        EXPECT(gbc.pc(), 0x9447);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9444), 0xcc);
        EXPECT(gbc.readMem(0x9445), 0x33);
        EXPECT(gbc.readMem(0x9446), 0xeb);
        // CC 0335
        gbc.setState(0x8d57, 0xde99, 0xe850, 0x7e14, 0x57ec, 0x7656, 0x1, 0x0);
        gbc.writeMem(0x8d57, { 0xcc, 0x79, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0xde99);
        EXPECT(gbc.pc(), 0x8d5a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8d57), 0xcc);
        EXPECT(gbc.readMem(0x8d58), 0x79);
        EXPECT(gbc.readMem(0x8d59), 0xe1);
        // CC 0337
        gbc.setState(0xa8d3, 0x960c, 0x44e0, 0x7f08, 0x6336, 0xe7a2, 0x0, 0x0);
        gbc.writeMem(0x960a, { 0x0, 0x0 });
        gbc.writeMem(0xa8d3, { 0xcc, 0x4a, 0x3b });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x960a);
        EXPECT(gbc.pc(), 0x3b4a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x960a), 0xd6);
        EXPECT(gbc.readMem(0x960b), 0xa8);
        EXPECT(gbc.readMem(0xa8d3), 0xcc);
        EXPECT(gbc.readMem(0xa8d4), 0x4a);
        EXPECT(gbc.readMem(0xa8d5), 0x3b);
        // CC 0338
        gbc.setState(0x32a3, 0x98d, 0xde70, 0xc66c, 0xdac6, 0x1237, 0x0, 0x0);
        gbc.writeMem(0x32a3, { 0xcc, 0xd8, 0xb });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x98d);
        EXPECT(gbc.pc(), 0x32a6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CC 0339
        gbc.setState(0xe130, 0xc237, 0x5300, 0x30a8, 0x492d, 0xa770, 0x1, 0x0);
        gbc.writeMem(0xe130, { 0xcc, 0xd8, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0xc237);
        EXPECT(gbc.pc(), 0xe133);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe130), 0xcc);
        EXPECT(gbc.readMem(0xe131), 0xd8);
        EXPECT(gbc.readMem(0xe132), 0x79);
        // CC 033B
        gbc.setState(0xc88e, 0xe91b, 0x3d20, 0x1b94, 0x5841, 0xad50, 0x1, 0x1);
        gbc.writeMem(0xc88e, { 0xcc, 0xc9, 0x9b });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0xe91b);
        EXPECT(gbc.pc(), 0xc891);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc88e), 0xcc);
        EXPECT(gbc.readMem(0xc88f), 0xc9);
        EXPECT(gbc.readMem(0xc890), 0x9b);
        // CC 033D
        gbc.setState(0x734c, 0x452e, 0x7030, 0x564c, 0x7e8a, 0x98b2, 0x1, 0x1);
        gbc.writeMem(0x734c, { 0xcc, 0xc1, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x452e);
        EXPECT(gbc.pc(), 0x734f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CC 033E
        gbc.setState(0x6405, 0x2c7f, 0x3d10, 0xcb01, 0xb4ff, 0x8570, 0x0, 0x1);
        gbc.writeMem(0x6405, { 0xcc, 0x0, 0x47 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x2c7f);
        EXPECT(gbc.pc(), 0x6408);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CC 033F
        gbc.setState(0x17b5, 0xcefc, 0xd9e0, 0x72ed, 0xaaaf, 0x47c2, 0x0, 0x0);
        gbc.writeMem(0x17b5, { 0xcc, 0x55, 0xfc });
        gbc.writeMem(0xcefa, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0xcefa);
        EXPECT(gbc.pc(), 0xfc55);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcefa), 0xb8);
        EXPECT(gbc.readMem(0xcefb), 0x17);
        // CC 0341
        gbc.setState(0xb525, 0xde58, 0x1520, 0xfb0a, 0x46fd, 0xff70, 0x0, 0x1);
        gbc.writeMem(0xb525, { 0xcc, 0x8a, 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0xde58);
        EXPECT(gbc.pc(), 0xb528);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb525), 0xcc);
        EXPECT(gbc.readMem(0xb526), 0x8a);
        EXPECT(gbc.readMem(0xb527), 0x8c);
        // CC 0343
        gbc.setState(0x8013, 0x9072, 0x9cd0, 0x33d8, 0xef5c, 0xc5e7, 0x0, 0x1);
        gbc.writeMem(0x8013, { 0xcc, 0x5c, 0x83 });
        gbc.writeMem(0x9070, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x9070);
        EXPECT(gbc.pc(), 0x835c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8013), 0xcc);
        EXPECT(gbc.readMem(0x8014), 0x5c);
        EXPECT(gbc.readMem(0x8015), 0x83);
        EXPECT(gbc.readMem(0x9070), 0x16);
        EXPECT(gbc.readMem(0x9071), 0x80);
        // CC 0344
        gbc.setState(0x389f, 0xc904, 0x6ef0, 0xbe72, 0x371c, 0x774c, 0x1, 0x1);
        gbc.writeMem(0x389f, { 0xcc, 0x5f, 0xbf });
        gbc.writeMem(0xc902, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0xc902);
        EXPECT(gbc.pc(), 0xbf5f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc902), 0xa2);
        EXPECT(gbc.readMem(0xc903), 0x38);
        // CC 0345
        gbc.setState(0xdae2, 0xf404, 0x5f90, 0xc0e4, 0x5c49, 0xecad, 0x1, 0x1);
        gbc.writeMem(0xdae2, { 0xcc, 0x32, 0xfe });
        gbc.writeMem(0xf402, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0xf402);
        EXPECT(gbc.pc(), 0xfe32);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdae2), 0xcc);
        EXPECT(gbc.readMem(0xdae3), 0x32);
        EXPECT(gbc.readMem(0xdae4), 0xfe);
        EXPECT(gbc.readMem(0xf402), 0xe5);
        EXPECT(gbc.readMem(0xf403), 0xda);
        // CC 0347
        gbc.setState(0x2caa, 0x25ab, 0xbd30, 0x425f, 0xeb01, 0xface, 0x0, 0x1);
        gbc.writeMem(0x2caa, { 0xcc, 0xbc, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x25ab);
        EXPECT(gbc.pc(), 0x2cad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CC 0348
        gbc.setState(0x28c5, 0x746a, 0x7750, 0x937d, 0x3dd6, 0x4db7, 0x1, 0x0);
        gbc.writeMem(0x28c5, { 0xcc, 0x30, 0xc7 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x746a);
        EXPECT(gbc.pc(), 0x28c8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CC 0349
        gbc.setState(0xa938, 0x3d95, 0xd930, 0x1daa, 0x4299, 0x21b2, 0x0, 0x0);
        gbc.writeMem(0xa938, { 0xcc, 0xe8, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x3d95);
        EXPECT(gbc.pc(), 0xa93b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa938), 0xcc);
        EXPECT(gbc.readMem(0xa939), 0xe8);
        EXPECT(gbc.readMem(0xa93a), 0xa3);
        // CC 034A
        gbc.setState(0x98b3, 0x2193, 0x4c70, 0x34ce, 0xf0e7, 0x9e20, 0x1, 0x1);
        gbc.writeMem(0x98b3, { 0xcc, 0x7e, 0xd6 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x2193);
        EXPECT(gbc.pc(), 0x98b6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x98b3), 0xcc);
        EXPECT(gbc.readMem(0x98b4), 0x7e);
        EXPECT(gbc.readMem(0x98b5), 0xd6);
        // CC 034B
        gbc.setState(0x5af, 0xe137, 0xcf00, 0x8132, 0xb2b3, 0x4078, 0x1, 0x1);
        gbc.writeMem(0x5af, { 0xcc, 0xd5, 0x3b });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0xe137);
        EXPECT(gbc.pc(), 0x5b2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CC 034C
        gbc.setState(0x2357, 0xe536, 0xa4b0, 0x964b, 0x913f, 0xf0d5, 0x0, 0x0);
        gbc.writeMem(0x2357, { 0xcc, 0xb1, 0x59 });
        gbc.writeMem(0xe534, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0xe534);
        EXPECT(gbc.pc(), 0x59b1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe534), 0x5a);
        EXPECT(gbc.readMem(0xe535), 0x23);
        // CC 034D
        gbc.setState(0x8679, 0xbc5, 0xe250, 0x87b0, 0x7aa0, 0xdb43, 0x1, 0x0);
        gbc.writeMem(0x8679, { 0xcc, 0xae, 0xc6 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xbc5);
        EXPECT(gbc.pc(), 0x867c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8679), 0xcc);
        EXPECT(gbc.readMem(0x867a), 0xae);
        EXPECT(gbc.readMem(0x867b), 0xc6);
        // CC 034E
        gbc.setState(0x897d, 0xd1f2, 0x83d0, 0x122b, 0x9adf, 0x7783, 0x0, 0x0);
        gbc.writeMem(0x897d, { 0xcc, 0x57, 0x86 });
        gbc.writeMem(0xd1f0, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0xd1f0);
        EXPECT(gbc.pc(), 0x8657);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x897d), 0xcc);
        EXPECT(gbc.readMem(0x897e), 0x57);
        EXPECT(gbc.readMem(0x897f), 0x86);
        EXPECT(gbc.readMem(0xd1f0), 0x80);
        EXPECT(gbc.readMem(0xd1f1), 0x89);
        // CC 0350
        gbc.setState(0x9dfa, 0x7d73, 0xbc10, 0x6d53, 0x29dc, 0x66ba, 0x0, 0x0);
        gbc.writeMem(0x9dfa, { 0xcc, 0xce, 0xad });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x7d73);
        EXPECT(gbc.pc(), 0x9dfd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9dfa), 0xcc);
        EXPECT(gbc.readMem(0x9dfb), 0xce);
        EXPECT(gbc.readMem(0x9dfc), 0xad);
        // CC 0351
        gbc.setState(0x2392, 0xf714, 0xca60, 0x8991, 0x840d, 0x188d, 0x0, 0x0);
        gbc.writeMem(0x2392, { 0xcc, 0x86, 0x3 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0xf714);
        EXPECT(gbc.pc(), 0x2395);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CC 0352
        gbc.setState(0x40ec, 0x9ffd, 0xb660, 0xa7d4, 0x5391, 0xb5da, 0x0, 0x1);
        gbc.writeMem(0x40ec, { 0xcc, 0xba, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x9ffd);
        EXPECT(gbc.pc(), 0x40ef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CC 0353
        gbc.setState(0x4bdf, 0x49eb, 0xbc60, 0xb738, 0xd45c, 0xed7d, 0x1, 0x1);
        gbc.writeMem(0x4bdf, { 0xcc, 0x70, 0x19 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x49eb);
        EXPECT(gbc.pc(), 0x4be2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CC 0354
        gbc.setState(0xcf6c, 0x771a, 0x1e70, 0x502a, 0xd0d, 0x3dea, 0x0, 0x1);
        gbc.writeMem(0xcf6c, { 0xcc, 0x41, 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x771a);
        EXPECT(gbc.pc(), 0xcf6f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcf6c), 0xcc);
        EXPECT(gbc.readMem(0xcf6d), 0x41);
        EXPECT(gbc.readMem(0xcf6e), 0x96);
        // CC 0356
        gbc.setState(0x8548, 0xc4c8, 0x5eb0, 0x2936, 0xf6f2, 0xfab1, 0x1, 0x1);
        gbc.writeMem(0x8548, { 0xcc, 0xa8, 0xf9 });
        gbc.writeMem(0xc4c6, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0xc4c6);
        EXPECT(gbc.pc(), 0xf9a8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8548), 0xcc);
        EXPECT(gbc.readMem(0x8549), 0xa8);
        EXPECT(gbc.readMem(0x854a), 0xf9);
        EXPECT(gbc.readMem(0xc4c6), 0x4b);
        EXPECT(gbc.readMem(0xc4c7), 0x85);
        // CC 0357
        gbc.setState(0xd38, 0x88a0, 0x350, 0x8195, 0xef50, 0x5f07, 0x1, 0x0);
        gbc.writeMem(0xd38, { 0xcc, 0x5e, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x88a0);
        EXPECT(gbc.pc(), 0xd3b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CC 0358
        gbc.setState(0x9875, 0xe7fd, 0x4490, 0x1c44, 0x308a, 0x4471, 0x1, 0x0);
        gbc.writeMem(0x9875, { 0xcc, 0x18, 0x2 });
        gbc.writeMem(0xe7fb, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xe7fb);
        EXPECT(gbc.pc(), 0x218);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9875), 0xcc);
        EXPECT(gbc.readMem(0x9876), 0x18);
        EXPECT(gbc.readMem(0x9877), 0x2);
        EXPECT(gbc.readMem(0xe7fb), 0x78);
        EXPECT(gbc.readMem(0xe7fc), 0x98);
        // CC 0359
        gbc.setState(0xef65, 0x92d2, 0xa580, 0x6589, 0x67a5, 0xaff7, 0x0, 0x0);
        gbc.writeMem(0x92d0, { 0x0, 0x0 });
        gbc.writeMem(0xef65, { 0xcc, 0x94, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x92d0);
        EXPECT(gbc.pc(), 0x994);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x92d0), 0x68);
        EXPECT(gbc.readMem(0x92d1), 0xef);
        EXPECT(gbc.readMem(0xef65), 0xcc);
        EXPECT(gbc.readMem(0xef66), 0x94);
        EXPECT(gbc.readMem(0xef67), 0x9);
        // CC 035A
        gbc.setState(0x163b, 0xb841, 0x59a0, 0x2340, 0xcba2, 0x4347, 0x0, 0x1);
        gbc.writeMem(0x163b, { 0xcc, 0x72, 0x45 });
        gbc.writeMem(0xb83f, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0xb83f);
        EXPECT(gbc.pc(), 0x4572);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb83f), 0x3e);
        EXPECT(gbc.readMem(0xb840), 0x16);
        // CC 035C
        gbc.setState(0x9291, 0xc3e4, 0x7e70, 0x4659, 0x14b6, 0xc7e9, 0x1, 0x0);
        gbc.writeMem(0x9291, { 0xcc, 0xa4, 0x3f });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0xc3e4);
        EXPECT(gbc.pc(), 0x9294);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9291), 0xcc);
        EXPECT(gbc.readMem(0x9292), 0xa4);
        EXPECT(gbc.readMem(0x9293), 0x3f);
        // CC 035D
        gbc.setState(0x5a5c, 0xc7fd, 0xe850, 0x385d, 0xc3f, 0x5341, 0x0, 0x0);
        gbc.writeMem(0x5a5c, { 0xcc, 0xba, 0x8a });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0xc7fd);
        EXPECT(gbc.pc(), 0x5a5f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CC 035E
        gbc.setState(0x6da0, 0x8741, 0xaea0, 0x2a67, 0xb128, 0xa3f1, 0x0, 0x0);
        gbc.writeMem(0x6da0, { 0xcc, 0x52, 0x54 });
        gbc.writeMem(0x873f, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x873f);
        EXPECT(gbc.pc(), 0x5452);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x873f), 0xa3);
        EXPECT(gbc.readMem(0x8740), 0x6d);
        // CC 035F
        gbc.setState(0x3b57, 0x758c, 0x4350, 0x20c1, 0x34ed, 0xe64, 0x0, 0x0);
        gbc.writeMem(0x3b57, { 0xcc, 0x73, 0xc7 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x758c);
        EXPECT(gbc.pc(), 0x3b5a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CC 0360
        gbc.setState(0x5dac, 0xe97a, 0xc5a0, 0xef86, 0xae62, 0x3cda, 0x1, 0x1);
        gbc.writeMem(0x5dac, { 0xcc, 0x64, 0x7d });
        gbc.writeMem(0xe978, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0xe978);
        EXPECT(gbc.pc(), 0x7d64);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe978), 0xaf);
        EXPECT(gbc.readMem(0xe979), 0x5d);
        // CC 0361
        gbc.setState(0x4ff2, 0x3989, 0xf770, 0x8ad8, 0x7636, 0x752, 0x0, 0x0);
        gbc.writeMem(0x4ff2, { 0xcc, 0xda, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x3989);
        EXPECT(gbc.pc(), 0x4ff5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CC 0362
        gbc.setState(0x34d4, 0x95a9, 0x9110, 0x4b4f, 0xc1a9, 0x992c, 0x1, 0x1);
        gbc.writeMem(0x34d4, { 0xcc, 0xe3, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x95a9);
        EXPECT(gbc.pc(), 0x34d7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CC 0364
        gbc.setState(0xe949, 0x5ccd, 0xff40, 0xd263, 0x6aa0, 0xb705, 0x1, 0x0);
        gbc.writeMem(0xe949, { 0xcc, 0x4f, 0x6e });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x5ccd);
        EXPECT(gbc.pc(), 0xe94c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe949), 0xcc);
        EXPECT(gbc.readMem(0xe94a), 0x4f);
        EXPECT(gbc.readMem(0xe94b), 0x6e);
        // CC 0367
        gbc.setState(0x4b44, 0xadc0, 0x93e0, 0x664c, 0x165, 0xeae4, 0x0, 0x1);
        gbc.writeMem(0x4b44, { 0xcc, 0x86, 0x13 });
        gbc.writeMem(0xadbe, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0xadbe);
        EXPECT(gbc.pc(), 0x1386);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xadbe), 0x47);
        EXPECT(gbc.readMem(0xadbf), 0x4b);
        // CC 0368
        gbc.setState(0x864c, 0xc4b8, 0x4b50, 0xc1c3, 0x4aaf, 0xd989, 0x0, 0x0);
        gbc.writeMem(0x864c, { 0xcc, 0xd4, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0xc4b8);
        EXPECT(gbc.pc(), 0x864f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x864c), 0xcc);
        EXPECT(gbc.readMem(0x864d), 0xd4);
        EXPECT(gbc.readMem(0x864e), 0xb6);
        // CC 0369
        gbc.setState(0x781c, 0xe1d6, 0x7690, 0xe21, 0x8048, 0xdfd0, 0x1, 0x0);
        gbc.writeMem(0x781c, { 0xcc, 0x1b, 0x93 });
        gbc.writeMem(0xe1d4, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0xe1d4);
        EXPECT(gbc.pc(), 0x931b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe1d4), 0x1f);
        EXPECT(gbc.readMem(0xe1d5), 0x78);
        // CC 036A
        gbc.setState(0xea73, 0xdacd, 0x930, 0x8556, 0x8c79, 0x4364, 0x1, 0x1);
        gbc.writeMem(0xea73, { 0xcc, 0xaa, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0xdacd);
        EXPECT(gbc.pc(), 0xea76);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xea73), 0xcc);
        EXPECT(gbc.readMem(0xea74), 0xaa);
        EXPECT(gbc.readMem(0xea75), 0xee);
        // CC 036B
        gbc.setState(0xd105, 0xc64b, 0x3e50, 0x13e0, 0x33c, 0xa365, 0x0, 0x0);
        gbc.writeMem(0xd105, { 0xcc, 0xf, 0xa4 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0xc64b);
        EXPECT(gbc.pc(), 0xd108);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd105), 0xcc);
        EXPECT(gbc.readMem(0xd106), 0xf);
        EXPECT(gbc.readMem(0xd107), 0xa4);
        // CC 036C
        gbc.setState(0xb502, 0x3ef4, 0x1600, 0xc87, 0x505e, 0x4eae, 0x0, 0x0);
        gbc.writeMem(0xb502, { 0xcc, 0x13, 0x47 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x3ef4);
        EXPECT(gbc.pc(), 0xb505);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb502), 0xcc);
        EXPECT(gbc.readMem(0xb503), 0x13);
        EXPECT(gbc.readMem(0xb504), 0x47);
        // CC 036D
        gbc.setState(0x3910, 0x999d, 0xb020, 0x708e, 0x8cfc, 0x7e5d, 0x0, 0x0);
        gbc.writeMem(0x3910, { 0xcc, 0x10, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x999d);
        EXPECT(gbc.pc(), 0x3913);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CC 036E
        gbc.setState(0x5948, 0x954a, 0x6940, 0x1c87, 0x4a55, 0x6c87, 0x1, 0x1);
        gbc.writeMem(0x5948, { 0xcc, 0x1d, 0xf7 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x954a);
        EXPECT(gbc.pc(), 0x594b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CC 0370
        gbc.setState(0xbd0c, 0x67b4, 0x7550, 0xde86, 0xe3fc, 0x4080, 0x0, 0x1);
        gbc.writeMem(0xbd0c, { 0xcc, 0xeb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x67b4);
        EXPECT(gbc.pc(), 0xbd0f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbd0c), 0xcc);
        EXPECT(gbc.readMem(0xbd0d), 0xeb);
        EXPECT(gbc.readMem(0xbd0e), 0x51);
        // CC 0371
        gbc.setState(0xd6fa, 0xbff8, 0xc190, 0xfb, 0x77c3, 0xd24, 0x1, 0x0);
        gbc.writeMem(0xbff6, { 0x0, 0x0 });
        gbc.writeMem(0xd6fa, { 0xcc, 0x47, 0x7b });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0xbff6);
        EXPECT(gbc.pc(), 0x7b47);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbff6), 0xfd);
        EXPECT(gbc.readMem(0xbff7), 0xd6);
        EXPECT(gbc.readMem(0xd6fa), 0xcc);
        EXPECT(gbc.readMem(0xd6fb), 0x47);
        EXPECT(gbc.readMem(0xd6fc), 0x7b);
        // CC 0372
        gbc.setState(0x8b08, 0x4483, 0xd310, 0x162a, 0x8b15, 0xb07c, 0x1, 0x1);
        gbc.writeMem(0x8b08, { 0xcc, 0xdb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x4483);
        EXPECT(gbc.pc(), 0x8b0b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b08), 0xcc);
        EXPECT(gbc.readMem(0x8b09), 0xdb);
        EXPECT(gbc.readMem(0x8b0a), 0xe1);
        // CC 0373
        gbc.setState(0x37f7, 0xdff5, 0x4a10, 0x58c6, 0xda74, 0xa0ff, 0x0, 0x0);
        gbc.writeMem(0x37f7, { 0xcc, 0xd1, 0x69 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0xdff5);
        EXPECT(gbc.pc(), 0x37fa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CC 0374
        gbc.setState(0x2201, 0x57f1, 0x2860, 0x3196, 0xa2ef, 0xf860, 0x0, 0x1);
        gbc.writeMem(0x2201, { 0xcc, 0x24, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x57f1);
        EXPECT(gbc.pc(), 0x2204);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CC 0375
        gbc.setState(0xd5c1, 0xafdc, 0xe240, 0x5c38, 0x389, 0x7812, 0x0, 0x0);
        gbc.writeMem(0xd5c1, { 0xcc, 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0xafdc);
        EXPECT(gbc.pc(), 0xd5c4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd5c1), 0xcc);
        EXPECT(gbc.readMem(0xd5c2), 0xcb);
        EXPECT(gbc.readMem(0xd5c3), 0xc0);
        // CC 0376
        gbc.setState(0x90ae, 0x1bf4, 0xf460, 0xa44b, 0xbcdd, 0x3202, 0x1, 0x0);
        gbc.writeMem(0x90ae, { 0xcc, 0x82, 0xc7 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x1bf4);
        EXPECT(gbc.pc(), 0x90b1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x90ae), 0xcc);
        EXPECT(gbc.readMem(0x90af), 0x82);
        EXPECT(gbc.readMem(0x90b0), 0xc7);
        // CC 0377
        gbc.setState(0xc3f7, 0xe0e7, 0xf820, 0xdc87, 0xef08, 0x8db, 0x0, 0x0);
        gbc.writeMem(0xc3f7, { 0xcc, 0x52, 0x36 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0xe0e7);
        EXPECT(gbc.pc(), 0xc3fa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc3f7), 0xcc);
        EXPECT(gbc.readMem(0xc3f8), 0x52);
        EXPECT(gbc.readMem(0xc3f9), 0x36);
        // CC 0378
        gbc.setState(0x2f60, 0xc718, 0x5ce0, 0xcad4, 0xa807, 0x846e, 0x1, 0x1);
        gbc.writeMem(0x2f60, { 0xcc, 0xe3, 0x7c });
        gbc.writeMem(0xc716, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xc716);
        EXPECT(gbc.pc(), 0x7ce3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc716), 0x63);
        EXPECT(gbc.readMem(0xc717), 0x2f);
        // CC 0379
        gbc.setState(0xe6ab, 0xff6d, 0xd260, 0x8874, 0xcf90, 0x6890, 0x0, 0x1);
        gbc.writeMem(0xe6ab, { 0xcc, 0xc9, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0xff6d);
        EXPECT(gbc.pc(), 0xe6ae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe6ab), 0xcc);
        EXPECT(gbc.readMem(0xe6ac), 0xc9);
        EXPECT(gbc.readMem(0xe6ad), 0xd3);
        // CC 037B
        gbc.setState(0x8bc2, 0x2bad, 0x1b50, 0xc14a, 0x146e, 0xd097, 0x0, 0x0);
        gbc.writeMem(0x8bc2, { 0xcc, 0xa8, 0xfb });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x2bad);
        EXPECT(gbc.pc(), 0x8bc5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8bc2), 0xcc);
        EXPECT(gbc.readMem(0x8bc3), 0xa8);
        EXPECT(gbc.readMem(0x8bc4), 0xfb);
        // CC 037C
        gbc.setState(0x3117, 0xea6f, 0x2400, 0xada, 0xb048, 0x2531, 0x0, 0x0);
        gbc.writeMem(0x3117, { 0xcc, 0x98, 0x21 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xea6f);
        EXPECT(gbc.pc(), 0x311a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CC 037D
        gbc.setState(0x46a9, 0x8667, 0x850, 0x4811, 0x6d95, 0xfe36, 0x1, 0x0);
        gbc.writeMem(0x46a9, { 0xcc, 0xa8, 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x8667);
        EXPECT(gbc.pc(), 0x46ac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CC 037E
        gbc.setState(0x4b4a, 0x20cc, 0xab00, 0x8c67, 0x228b, 0x4dfe, 0x1, 0x1);
        gbc.writeMem(0x4b4a, { 0xcc, 0x60, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x20cc);
        EXPECT(gbc.pc(), 0x4b4d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CC 037F
        gbc.setState(0x809f, 0xd3f4, 0x9b30, 0x8b7b, 0xa461, 0x7cea, 0x1, 0x1);
        gbc.writeMem(0x809f, { 0xcc, 0xec, 0x94 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0xd3f4);
        EXPECT(gbc.pc(), 0x80a2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x809f), 0xcc);
        EXPECT(gbc.readMem(0x80a0), 0xec);
        EXPECT(gbc.readMem(0x80a1), 0x94);
        // CC 0380
        gbc.setState(0x4002, 0x6c8b, 0xb770, 0x308b, 0x7c3, 0x2707, 0x1, 0x0);
        gbc.writeMem(0x4002, { 0xcc, 0x10, 0xf4 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x6c8b);
        EXPECT(gbc.pc(), 0x4005);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CC 0381
        gbc.setState(0xd20e, 0x9fa9, 0xe120, 0x8644, 0x4ef8, 0x9740, 0x1, 0x0);
        gbc.writeMem(0xd20e, { 0xcc, 0x11, 0x18 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x9fa9);
        EXPECT(gbc.pc(), 0xd211);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd20e), 0xcc);
        EXPECT(gbc.readMem(0xd20f), 0x11);
        EXPECT(gbc.readMem(0xd210), 0x18);
        // CC 0383
        gbc.setState(0x4bae, 0xcb21, 0x3f20, 0x494e, 0x50f6, 0x71ce, 0x0, 0x1);
        gbc.writeMem(0x4bae, { 0xcc, 0x75, 0x46 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0xcb21);
        EXPECT(gbc.pc(), 0x4bb1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CC 0385
        gbc.setState(0x11f9, 0x45e4, 0x5c00, 0xdcf9, 0x400f, 0x49f3, 0x0, 0x0);
        gbc.writeMem(0x11f9, { 0xcc, 0xe6, 0x9b });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x45e4);
        EXPECT(gbc.pc(), 0x11fc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CC 0386
        gbc.setState(0xd004, 0xa0ba, 0xdd00, 0xa076, 0x1aaf, 0x1e1, 0x1, 0x1);
        gbc.writeMem(0xd004, { 0xcc, 0xcd, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xa0ba);
        EXPECT(gbc.pc(), 0xd007);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd004), 0xcc);
        EXPECT(gbc.readMem(0xd005), 0xcd);
        EXPECT(gbc.readMem(0xd006), 0x79);
        // CC 0387
        gbc.setState(0x19c, 0x5496, 0x2e30, 0x58b8, 0x88c7, 0xd2bd, 0x1, 0x1);
        gbc.writeMem(0x19c, { 0xcc, 0xe0, 0xa4 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x5496);
        EXPECT(gbc.pc(), 0x19f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CC 0388
        gbc.setState(0xc371, 0xac7c, 0xe1f0, 0xd782, 0x39dc, 0x4a0c, 0x1, 0x0);
        gbc.writeMem(0xac7a, { 0x0, 0x0 });
        gbc.writeMem(0xc371, { 0xcc, 0x49, 0xf9 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xac7a);
        EXPECT(gbc.pc(), 0xf949);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xac7a), 0x74);
        EXPECT(gbc.readMem(0xac7b), 0xc3);
        EXPECT(gbc.readMem(0xc371), 0xcc);
        EXPECT(gbc.readMem(0xc372), 0x49);
        EXPECT(gbc.readMem(0xc373), 0xf9);
        // CC 038A
        gbc.setState(0x2017, 0x9ff1, 0x8700, 0x8e02, 0x4d3f, 0x886b, 0x0, 0x1);
        gbc.writeMem(0x2017, { 0xcc, 0x1e, 0x7b });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x9ff1);
        EXPECT(gbc.pc(), 0x201a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CC 038C
        gbc.setState(0x7b85, 0x2737, 0xb410, 0x6361, 0x8a45, 0x3815, 0x0, 0x0);
        gbc.writeMem(0x7b85, { 0xcc, 0x9f, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x2737);
        EXPECT(gbc.pc(), 0x7b88);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CC 038D
        gbc.setState(0x4e24, 0x5e43, 0x8d10, 0xda99, 0x7def, 0x4619, 0x1, 0x0);
        gbc.writeMem(0x4e24, { 0xcc, 0x34, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x5e43);
        EXPECT(gbc.pc(), 0x4e27);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CC 038E
        gbc.setState(0x2137, 0xe73b, 0x6b10, 0x80d1, 0xea06, 0x3348, 0x0, 0x1);
        gbc.writeMem(0x2137, { 0xcc, 0xf1, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0xe73b);
        EXPECT(gbc.pc(), 0x213a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CC 0390
        gbc.setState(0xe7e1, 0xa79f, 0xfd80, 0x797, 0xab6e, 0xdce5, 0x1, 0x0);
        gbc.writeMem(0xa79d, { 0x0, 0x0 });
        gbc.writeMem(0xe7e1, { 0xcc, 0xd1, 0x4b });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xa79d);
        EXPECT(gbc.pc(), 0x4bd1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa79d), 0xe4);
        EXPECT(gbc.readMem(0xa79e), 0xe7);
        EXPECT(gbc.readMem(0xe7e1), 0xcc);
        EXPECT(gbc.readMem(0xe7e2), 0xd1);
        EXPECT(gbc.readMem(0xe7e3), 0x4b);
        // CC 0391
        gbc.setState(0x700e, 0xcbdd, 0xa0a0, 0xb35a, 0x4b8a, 0xfb3d, 0x0, 0x1);
        gbc.writeMem(0x700e, { 0xcc, 0x1, 0x24 });
        gbc.writeMem(0xcbdb, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0xcbdb);
        EXPECT(gbc.pc(), 0x2401);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcbdb), 0x11);
        EXPECT(gbc.readMem(0xcbdc), 0x70);
        // CC 0393
        gbc.setState(0xb19e, 0x8194, 0xea20, 0x42af, 0x3d00, 0x8f1d, 0x0, 0x0);
        gbc.writeMem(0xb19e, { 0xcc, 0xb1, 0x77 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x8194);
        EXPECT(gbc.pc(), 0xb1a1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb19e), 0xcc);
        EXPECT(gbc.readMem(0xb19f), 0xb1);
        EXPECT(gbc.readMem(0xb1a0), 0x77);
        // CC 0394
        gbc.setState(0xd613, 0x1997, 0x2170, 0x8678, 0x218f, 0xbbf3, 0x1, 0x0);
        gbc.writeMem(0xd613, { 0xcc, 0x7e, 0x6c });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x1997);
        EXPECT(gbc.pc(), 0xd616);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd613), 0xcc);
        EXPECT(gbc.readMem(0xd614), 0x7e);
        EXPECT(gbc.readMem(0xd615), 0x6c);
        // CC 0396
        gbc.setState(0x3268, 0xbeec, 0xfe20, 0x73a7, 0xb4e9, 0x2b2b, 0x0, 0x1);
        gbc.writeMem(0x3268, { 0xcc, 0x8e, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0xbeec);
        EXPECT(gbc.pc(), 0x326b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CC 0397
        gbc.setState(0x4b6c, 0x726a, 0xf510, 0xcb1b, 0xf1c4, 0x14c3, 0x0, 0x0);
        gbc.writeMem(0x4b6c, { 0xcc, 0x2d, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x726a);
        EXPECT(gbc.pc(), 0x4b6f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CC 0398
        gbc.setState(0xe356, 0x30d9, 0x2530, 0x3b8f, 0x20ad, 0xeb86, 0x1, 0x0);
        gbc.writeMem(0xe356, { 0xcc, 0xf5, 0x1b });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x30d9);
        EXPECT(gbc.pc(), 0xe359);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe356), 0xcc);
        EXPECT(gbc.readMem(0xe357), 0xf5);
        EXPECT(gbc.readMem(0xe358), 0x1b);
        // CC 0399
        gbc.setState(0x9e75, 0x264d, 0xee00, 0xf172, 0x5d11, 0x6271, 0x0, 0x1);
        gbc.writeMem(0x9e75, { 0xcc, 0x6f, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x264d);
        EXPECT(gbc.pc(), 0x9e78);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9e75), 0xcc);
        EXPECT(gbc.readMem(0x9e76), 0x6f);
        EXPECT(gbc.readMem(0x9e77), 0xe2);
        // CC 039A
        gbc.setState(0xf9c, 0xd9f3, 0x3310, 0xae80, 0xf3af, 0xa8c2, 0x0, 0x1);
        gbc.writeMem(0xf9c, { 0xcc, 0xb, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0xd9f3);
        EXPECT(gbc.pc(), 0xf9f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CC 039C
        gbc.setState(0x983a, 0x9e95, 0xd4f0, 0x12cc, 0x4d78, 0x6163, 0x0, 0x1);
        gbc.writeMem(0x983a, { 0xcc, 0x64, 0xd7 });
        gbc.writeMem(0x9e93, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x9e93);
        EXPECT(gbc.pc(), 0xd764);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x983a), 0xcc);
        EXPECT(gbc.readMem(0x983b), 0x64);
        EXPECT(gbc.readMem(0x983c), 0xd7);
        EXPECT(gbc.readMem(0x9e93), 0x3d);
        EXPECT(gbc.readMem(0x9e94), 0x98);
        // CC 039D
        gbc.setState(0x93d6, 0x909c, 0x6420, 0x79a6, 0xa068, 0x177a, 0x0, 0x0);
        gbc.writeMem(0x93d6, { 0xcc, 0x5a, 0x4 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x909c);
        EXPECT(gbc.pc(), 0x93d9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x93d6), 0xcc);
        EXPECT(gbc.readMem(0x93d7), 0x5a);
        EXPECT(gbc.readMem(0x93d8), 0x4);
        // CC 039E
        gbc.setState(0x5379, 0xf584, 0x28c0, 0x2f60, 0x1397, 0x151f, 0x0, 0x1);
        gbc.writeMem(0x5379, { 0xcc, 0xad, 0xb });
        gbc.writeMem(0xf582, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0xf582);
        EXPECT(gbc.pc(), 0xbad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf582), 0x7c);
        EXPECT(gbc.readMem(0xf583), 0x53);
        // CC 03A1
        gbc.setState(0x1d99, 0x60c8, 0xf500, 0x74f1, 0x1e77, 0xf5f0, 0x0, 0x1);
        gbc.writeMem(0x1d99, { 0xcc, 0x39, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x60c8);
        EXPECT(gbc.pc(), 0x1d9c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CC 03A3
        gbc.setState(0xb140, 0x7272, 0x5f60, 0x31a0, 0x7ca6, 0x46a8, 0x0, 0x1);
        gbc.writeMem(0xb140, { 0xcc, 0x2c, 0x14 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x7272);
        EXPECT(gbc.pc(), 0xb143);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb140), 0xcc);
        EXPECT(gbc.readMem(0xb141), 0x2c);
        EXPECT(gbc.readMem(0xb142), 0x14);
        // CC 03A4
        gbc.setState(0xdd5e, 0x78e6, 0x6250, 0xbf5a, 0x13ab, 0xb46c, 0x0, 0x1);
        gbc.writeMem(0xdd5e, { 0xcc, 0x3d, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x78e6);
        EXPECT(gbc.pc(), 0xdd61);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdd5e), 0xcc);
        EXPECT(gbc.readMem(0xdd5f), 0x3d);
        EXPECT(gbc.readMem(0xdd60), 0xc8);
        // CC 03A5
        gbc.setState(0x90de, 0x9751, 0x7a90, 0xb3cc, 0x77c9, 0x4eca, 0x0, 0x1);
        gbc.writeMem(0x90de, { 0xcc, 0x1c, 0xb5 });
        gbc.writeMem(0x974f, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x974f);
        EXPECT(gbc.pc(), 0xb51c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x90de), 0xcc);
        EXPECT(gbc.readMem(0x90df), 0x1c);
        EXPECT(gbc.readMem(0x90e0), 0xb5);
        EXPECT(gbc.readMem(0x974f), 0xe1);
        EXPECT(gbc.readMem(0x9750), 0x90);
        // CC 03A7
        gbc.setState(0x9923, 0x29c, 0xe570, 0xae72, 0xa32c, 0x994a, 0x1, 0x0);
        gbc.writeMem(0x9923, { 0xcc, 0xc0, 0xea });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x29c);
        EXPECT(gbc.pc(), 0x9926);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9923), 0xcc);
        EXPECT(gbc.readMem(0x9924), 0xc0);
        EXPECT(gbc.readMem(0x9925), 0xea);
        // CC 03A8
        gbc.setState(0xccf, 0xb127, 0xa3c0, 0x4c74, 0x6749, 0x98a9, 0x0, 0x0);
        gbc.writeMem(0xccf, { 0xcc, 0xa3, 0xb });
        gbc.writeMem(0xb125, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0xb125);
        EXPECT(gbc.pc(), 0xba3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb125), 0xd2);
        EXPECT(gbc.readMem(0xb126), 0xc);
        // CC 03A9
        gbc.setState(0xba72, 0xc32d, 0x4020, 0xb4fe, 0x32d0, 0xe6f3, 0x0, 0x0);
        gbc.writeMem(0xba72, { 0xcc, 0x77, 0xec });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0xc32d);
        EXPECT(gbc.pc(), 0xba75);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xba72), 0xcc);
        EXPECT(gbc.readMem(0xba73), 0x77);
        EXPECT(gbc.readMem(0xba74), 0xec);
        // CC 03AA
        gbc.setState(0xd2a5, 0xe020, 0xd2e0, 0xd249, 0x59b, 0x2bda, 0x1, 0x1);
        gbc.writeMem(0xd2a5, { 0xcc, 0x11, 0x92 });
        gbc.writeMem(0xe01e, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0xe01e);
        EXPECT(gbc.pc(), 0x9211);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd2a5), 0xcc);
        EXPECT(gbc.readMem(0xd2a6), 0x11);
        EXPECT(gbc.readMem(0xd2a7), 0x92);
        EXPECT(gbc.readMem(0xe01e), 0xa8);
        EXPECT(gbc.readMem(0xe01f), 0xd2);
        // CC 03AB
        gbc.setState(0x5d17, 0xbae2, 0x95f0, 0xd5bc, 0xdbc6, 0xf208, 0x0, 0x1);
        gbc.writeMem(0x5d17, { 0xcc, 0x7f, 0x60 });
        gbc.writeMem(0xbae0, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0xbae0);
        EXPECT(gbc.pc(), 0x607f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbae0), 0x1a);
        EXPECT(gbc.readMem(0xbae1), 0x5d);
        // CC 03AC
        gbc.setState(0x7615, 0x7a08, 0x4e40, 0xe5c2, 0x8e53, 0x72b, 0x0, 0x1);
        gbc.writeMem(0x7615, { 0xcc, 0x5a, 0xc7 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x7a08);
        EXPECT(gbc.pc(), 0x7618);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CC 03AD
        gbc.setState(0xa9c7, 0xbae0, 0x16d0, 0x4d3d, 0x4b4a, 0x6dcb, 0x1, 0x0);
        gbc.writeMem(0xa9c7, { 0xcc, 0xb, 0x9b });
        gbc.writeMem(0xbade, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0xbade);
        EXPECT(gbc.pc(), 0x9b0b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa9c7), 0xcc);
        EXPECT(gbc.readMem(0xa9c8), 0xb);
        EXPECT(gbc.readMem(0xa9c9), 0x9b);
        EXPECT(gbc.readMem(0xbade), 0xca);
        EXPECT(gbc.readMem(0xbadf), 0xa9);
        // CC 03AE
        gbc.setState(0x992f, 0xa4cd, 0xdc80, 0x2b69, 0x26c7, 0xaf40, 0x1, 0x0);
        gbc.writeMem(0x992f, { 0xcc, 0xba, 0xa2 });
        gbc.writeMem(0xa4cb, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0xa4cb);
        EXPECT(gbc.pc(), 0xa2ba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x992f), 0xcc);
        EXPECT(gbc.readMem(0x9930), 0xba);
        EXPECT(gbc.readMem(0x9931), 0xa2);
        EXPECT(gbc.readMem(0xa4cb), 0x32);
        EXPECT(gbc.readMem(0xa4cc), 0x99);
        // CC 03AF
        gbc.setState(0x480a, 0xa1d4, 0x2e30, 0xecc2, 0x8f86, 0xe587, 0x0, 0x0);
        gbc.writeMem(0x480a, { 0xcc, 0x32, 0x36 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xa1d4);
        EXPECT(gbc.pc(), 0x480d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CC 03B0
        gbc.setState(0xbb8e, 0xce5e, 0x53f0, 0x4ad0, 0xd0fc, 0x91df, 0x0, 0x1);
        gbc.writeMem(0xbb8e, { 0xcc, 0x42, 0xcf });
        gbc.writeMem(0xce5c, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0xce5c);
        EXPECT(gbc.pc(), 0xcf42);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbb8e), 0xcc);
        EXPECT(gbc.readMem(0xbb8f), 0x42);
        EXPECT(gbc.readMem(0xbb90), 0xcf);
        EXPECT(gbc.readMem(0xce5c), 0x91);
        EXPECT(gbc.readMem(0xce5d), 0xbb);
        // CC 03B1
        gbc.setState(0x3428, 0xa7e6, 0x130, 0x20a0, 0x73c, 0xf5b4, 0x1, 0x1);
        gbc.writeMem(0x3428, { 0xcc, 0x22, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xa7e6);
        EXPECT(gbc.pc(), 0x342b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CC 03B2
        gbc.setState(0x5943, 0xf1a7, 0xabe0, 0x32ef, 0xf10a, 0x8c10, 0x0, 0x1);
        gbc.writeMem(0x5943, { 0xcc, 0x2d, 0xf6 });
        gbc.writeMem(0xf1a5, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xf1a5);
        EXPECT(gbc.pc(), 0xf62d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf1a5), 0x46);
        EXPECT(gbc.readMem(0xf1a6), 0x59);
        // CC 03B5
        gbc.setState(0xe61c, 0x3534, 0xa530, 0x107a, 0xc9ec, 0xbf94, 0x0, 0x1);
        gbc.writeMem(0xe61c, { 0xcc, 0xe5, 0x76 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x3534);
        EXPECT(gbc.pc(), 0xe61f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe61c), 0xcc);
        EXPECT(gbc.readMem(0xe61d), 0xe5);
        EXPECT(gbc.readMem(0xe61e), 0x76);
        // CC 03B7
        gbc.setState(0x3546, 0x75d7, 0x5110, 0x21bc, 0x2e98, 0x3384, 0x0, 0x1);
        gbc.writeMem(0x3546, { 0xcc, 0x27, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x75d7);
        EXPECT(gbc.pc(), 0x3549);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CC 03B8
        gbc.setState(0x28b4, 0x6f68, 0x7b40, 0x2d19, 0x1384, 0x638d, 0x0, 0x1);
        gbc.writeMem(0x28b4, { 0xcc, 0x76, 0xb7 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x6f68);
        EXPECT(gbc.pc(), 0x28b7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CC 03B9
        gbc.setState(0x4863, 0x1264, 0x8e10, 0xa060, 0x4336, 0xc874, 0x1, 0x0);
        gbc.writeMem(0x4863, { 0xcc, 0xf0, 0xa5 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x1264);
        EXPECT(gbc.pc(), 0x4866);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CC 03BC
        gbc.setState(0x9ffe, 0xba33, 0x17c0, 0x1212, 0x554a, 0x2a0c, 0x0, 0x0);
        gbc.writeMem(0x9ffe, { 0xcc, 0x22, 0xf7 });
        gbc.writeMem(0xba31, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xba31);
        EXPECT(gbc.pc(), 0xf722);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9ffe), 0xcc);
        EXPECT(gbc.readMem(0x9fff), 0x22);
        EXPECT(gbc.readMem(0xa000), 0xf7);
        EXPECT(gbc.readMem(0xba31), 0x1);
        EXPECT(gbc.readMem(0xba32), 0xa0);
        // CC 03BD
        gbc.setState(0xc91, 0xe70b, 0xf800, 0x6e14, 0x8c76, 0x3e92, 0x0, 0x0);
        gbc.writeMem(0xc91, { 0xcc, 0x1a, 0x7 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0xe70b);
        EXPECT(gbc.pc(), 0xc94);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CC 03BE
        gbc.setState(0x48d8, 0x38aa, 0x540, 0x66d5, 0xbfd8, 0x435d, 0x1, 0x0);
        gbc.writeMem(0x48d8, { 0xcc, 0x6d, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x38aa);
        EXPECT(gbc.pc(), 0x48db);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CC 03BF
        gbc.setState(0x6325, 0x2e9c, 0x6010, 0x2160, 0xc738, 0x495a, 0x1, 0x0);
        gbc.writeMem(0x6325, { 0xcc, 0xe4, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x2e9c);
        EXPECT(gbc.pc(), 0x6328);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CC 03C1
        gbc.setState(0xcb20, 0xb5b7, 0xc080, 0x460b, 0x393e, 0xe3ce, 0x1, 0x1);
        gbc.writeMem(0xb5b5, { 0x0, 0x0 });
        gbc.writeMem(0xcb20, { 0xcc, 0xa2, 0x7 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0xb5b5);
        EXPECT(gbc.pc(), 0x7a2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb5b5), 0x23);
        EXPECT(gbc.readMem(0xb5b6), 0xcb);
        EXPECT(gbc.readMem(0xcb20), 0xcc);
        EXPECT(gbc.readMem(0xcb21), 0xa2);
        EXPECT(gbc.readMem(0xcb22), 0x7);
        // CC 03C4
        gbc.setState(0x4aa4, 0xb2b2, 0x56a0, 0xfbfb, 0xaf22, 0xb70c, 0x0, 0x1);
        gbc.writeMem(0x4aa4, { 0xcc, 0x5f, 0x34 });
        gbc.writeMem(0xb2b0, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xb2b0);
        EXPECT(gbc.pc(), 0x345f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb2b0), 0xa7);
        EXPECT(gbc.readMem(0xb2b1), 0x4a);
        // CC 03C6
        gbc.setState(0xc1d7, 0xd7a3, 0x5630, 0xb61c, 0x7c58, 0x7b8a, 0x1, 0x1);
        gbc.writeMem(0xc1d7, { 0xcc, 0xd6, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xd7a3);
        EXPECT(gbc.pc(), 0xc1da);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc1d7), 0xcc);
        EXPECT(gbc.readMem(0xc1d8), 0xd6);
        EXPECT(gbc.readMem(0xc1d9), 0x4d);
        // CC 03C7
        gbc.setState(0x5c68, 0xd609, 0xc290, 0x7d14, 0x5023, 0xdc3f, 0x1, 0x1);
        gbc.writeMem(0x5c68, { 0xcc, 0x38, 0xd7 });
        gbc.writeMem(0xd607, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xd607);
        EXPECT(gbc.pc(), 0xd738);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd607), 0x6b);
        EXPECT(gbc.readMem(0xd608), 0x5c);
        // CC 03C8
        gbc.setState(0xeaf5, 0xb68, 0xa970, 0xbe71, 0xf708, 0x8186, 0x0, 0x1);
        gbc.writeMem(0xeaf5, { 0xcc, 0xc3, 0xc1 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0xb68);
        EXPECT(gbc.pc(), 0xeaf8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeaf5), 0xcc);
        EXPECT(gbc.readMem(0xeaf6), 0xc3);
        EXPECT(gbc.readMem(0xeaf7), 0xc1);
        // CC 03C9
        gbc.setState(0x339a, 0x167e, 0x9810, 0xc2b2, 0xc27e, 0x5017, 0x0, 0x0);
        gbc.writeMem(0x339a, { 0xcc, 0x42, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x167e);
        EXPECT(gbc.pc(), 0x339d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CC 03CA
        gbc.setState(0x8378, 0x8a0a, 0x12d0, 0x3938, 0xe432, 0x8bda, 0x1, 0x0);
        gbc.writeMem(0x8378, { 0xcc, 0xaa, 0xbf });
        gbc.writeMem(0x8a08, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x8a08);
        EXPECT(gbc.pc(), 0xbfaa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8378), 0xcc);
        EXPECT(gbc.readMem(0x8379), 0xaa);
        EXPECT(gbc.readMem(0x837a), 0xbf);
        EXPECT(gbc.readMem(0x8a08), 0x7b);
        EXPECT(gbc.readMem(0x8a09), 0x83);
        // CC 03CB
        gbc.setState(0x96e4, 0xac04, 0x2970, 0x58a6, 0x27, 0xb4d6, 0x1, 0x0);
        gbc.writeMem(0x96e4, { 0xcc, 0x56, 0x8d });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0xac04);
        EXPECT(gbc.pc(), 0x96e7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x96e4), 0xcc);
        EXPECT(gbc.readMem(0x96e5), 0x56);
        EXPECT(gbc.readMem(0x96e6), 0x8d);
        // CC 03CC
        gbc.setState(0x9513, 0x2a86, 0xcb20, 0xd879, 0x1e87, 0x8607, 0x1, 0x0);
        gbc.writeMem(0x9513, { 0xcc, 0xf1, 0xa7 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x2a86);
        EXPECT(gbc.pc(), 0x9516);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9513), 0xcc);
        EXPECT(gbc.readMem(0x9514), 0xf1);
        EXPECT(gbc.readMem(0x9515), 0xa7);
        // CC 03CD
        gbc.setState(0x6105, 0x667e, 0xec40, 0xc52a, 0x5a45, 0x3de8, 0x1, 0x1);
        gbc.writeMem(0x6105, { 0xcc, 0xf5, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x667e);
        EXPECT(gbc.pc(), 0x6108);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CC 03CE
        gbc.setState(0x475a, 0xb51a, 0x6b20, 0x3397, 0x1d6a, 0xde20, 0x0, 0x0);
        gbc.writeMem(0x475a, { 0xcc, 0x39, 0xaf });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0xb51a);
        EXPECT(gbc.pc(), 0x475d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CC 03CF
        gbc.setState(0xa97b, 0x94ed, 0x6720, 0x96a7, 0xd096, 0xf94f, 0x1, 0x0);
        gbc.writeMem(0xa97b, { 0xcc, 0x6c, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x94ed);
        EXPECT(gbc.pc(), 0xa97e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa97b), 0xcc);
        EXPECT(gbc.readMem(0xa97c), 0x6c);
        EXPECT(gbc.readMem(0xa97d), 0xb2);
        // CC 03D1
        gbc.setState(0xa93b, 0x3f91, 0x9520, 0x91ca, 0xa06d, 0xff2a, 0x1, 0x0);
        gbc.writeMem(0xa93b, { 0xcc, 0x2c, 0x22 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x3f91);
        EXPECT(gbc.pc(), 0xa93e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa93b), 0xcc);
        EXPECT(gbc.readMem(0xa93c), 0x2c);
        EXPECT(gbc.readMem(0xa93d), 0x22);
        // CC 03D2
        gbc.setState(0x5ce5, 0xd676, 0x1c40, 0xed5, 0x249f, 0x13, 0x0, 0x1);
        gbc.writeMem(0x5ce5, { 0xcc, 0x8a, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0xd676);
        EXPECT(gbc.pc(), 0x5ce8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CC 03D3
        gbc.setState(0xba0d, 0x28fe, 0x6530, 0xc711, 0x5657, 0x1eaf, 0x0, 0x1);
        gbc.writeMem(0xba0d, { 0xcc, 0xe, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x28fe);
        EXPECT(gbc.pc(), 0xba10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xba0d), 0xcc);
        EXPECT(gbc.readMem(0xba0e), 0xe);
        EXPECT(gbc.readMem(0xba0f), 0x54);
        // CC 03D6
        gbc.setState(0x3b4f, 0xd30b, 0x1ae0, 0xf0b, 0x13df, 0x39b5, 0x1, 0x1);
        gbc.writeMem(0x3b4f, { 0xcc, 0x11, 0xf1 });
        gbc.writeMem(0xd309, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0xd309);
        EXPECT(gbc.pc(), 0xf111);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd309), 0x52);
        EXPECT(gbc.readMem(0xd30a), 0x3b);
        // CC 03D9
        gbc.setState(0x6236, 0xa767, 0x5e30, 0xba63, 0x14b1, 0xbdc6, 0x0, 0x1);
        gbc.writeMem(0x6236, { 0xcc, 0x12, 0x36 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0xa767);
        EXPECT(gbc.pc(), 0x6239);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CC 03DB
        gbc.setState(0xcc23, 0x4091, 0x2f40, 0x2e37, 0xf8d3, 0xb77a, 0x1, 0x0);
        gbc.writeMem(0xcc23, { 0xcc, 0x68, 0xc7 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x4091);
        EXPECT(gbc.pc(), 0xcc26);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcc23), 0xcc);
        EXPECT(gbc.readMem(0xcc24), 0x68);
        EXPECT(gbc.readMem(0xcc25), 0xc7);
        // CC 03DC
        gbc.setState(0xedee, 0xdced, 0x4af0, 0x4e16, 0x6b5d, 0x46e2, 0x1, 0x0);
        gbc.writeMem(0xdceb, { 0x0, 0x0 });
        gbc.writeMem(0xedee, { 0xcc, 0x3a, 0x24 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0xdceb);
        EXPECT(gbc.pc(), 0x243a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdceb), 0xf1);
        EXPECT(gbc.readMem(0xdcec), 0xed);
        EXPECT(gbc.readMem(0xedee), 0xcc);
        EXPECT(gbc.readMem(0xedef), 0x3a);
        EXPECT(gbc.readMem(0xedf0), 0x24);
        // CC 03DD
        gbc.setState(0xa0e, 0x11e3, 0x8f30, 0xb952, 0x88ba, 0xb156, 0x0, 0x1);
        gbc.writeMem(0xa0e, { 0xcc, 0x4a, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x11e3);
        EXPECT(gbc.pc(), 0xa11);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CC 03E0
        gbc.setState(0x5a8b, 0x90fc, 0x4c10, 0xbfc6, 0x8c7f, 0xdb4e, 0x0, 0x0);
        gbc.writeMem(0x5a8b, { 0xcc, 0xae, 0x8d });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x90fc);
        EXPECT(gbc.pc(), 0x5a8e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CC 03E1
        gbc.setState(0x6b88, 0xf0e4, 0x11d0, 0x62a9, 0x8154, 0xc608, 0x1, 0x1);
        gbc.writeMem(0x6b88, { 0xcc, 0x2, 0x2d });
        gbc.writeMem(0xf0e2, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0xf0e2);
        EXPECT(gbc.pc(), 0x2d02);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf0e2), 0x8b);
        EXPECT(gbc.readMem(0xf0e3), 0x6b);
        // CC 03E2
        gbc.setState(0x5ed1, 0xf831, 0x2ed0, 0x8bcb, 0x832c, 0xa562, 0x1, 0x1);
        gbc.writeMem(0x5ed1, { 0xcc, 0xcd, 0x55 });
        gbc.writeMem(0xf82f, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xf82f);
        EXPECT(gbc.pc(), 0x55cd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf82f), 0xd4);
        EXPECT(gbc.readMem(0xf830), 0x5e);
        // CC 03E3
        gbc.setState(0x7483, 0x94fa, 0x6f20, 0xaef0, 0xe3f2, 0x541c, 0x1, 0x0);
        gbc.writeMem(0x7483, { 0xcc, 0x5e, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x94fa);
        EXPECT(gbc.pc(), 0x7486);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CC 03E5
        gbc.setState(0x9e0, 0x8091, 0x9600, 0xb859, 0xd195, 0xb861, 0x1, 0x0);
        gbc.writeMem(0x9e0, { 0xcc, 0xa1, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x8091);
        EXPECT(gbc.pc(), 0x9e3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CC 03E6
        gbc.setState(0xd833, 0xbb86, 0xa280, 0x2ed5, 0x6e36, 0x1a8b, 0x0, 0x1);
        gbc.writeMem(0xbb84, { 0x0, 0x0 });
        gbc.writeMem(0xd833, { 0xcc, 0x47, 0xea });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0xbb84);
        EXPECT(gbc.pc(), 0xea47);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbb84), 0x36);
        EXPECT(gbc.readMem(0xbb85), 0xd8);
        EXPECT(gbc.readMem(0xd833), 0xcc);
        EXPECT(gbc.readMem(0xd834), 0x47);
        EXPECT(gbc.readMem(0xd835), 0xea);
        // CC 03E7
        gbc.setState(0xaefe, 0xd0be, 0x5160, 0x6ce6, 0x9cc7, 0x8ef0, 0x1, 0x1);
        gbc.writeMem(0xaefe, { 0xcc, 0xf8, 0x22 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0xd0be);
        EXPECT(gbc.pc(), 0xaf01);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaefe), 0xcc);
        EXPECT(gbc.readMem(0xaeff), 0xf8);
        EXPECT(gbc.readMem(0xaf00), 0x22);
    }
}
#endif
