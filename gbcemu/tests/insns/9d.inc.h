    TEST(gbcemu, opcode_9d) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // 9D 0000
        gbc.setState(0x840f, 0x399d, 0xac10, 0x4e7a, 0xb9f0, 0x6e05, 0x1, 0x1);
        gbc.writeMem(0x840f, { 0x9d });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x399d, gbc.sp());
        EXPECT(0x8410, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0x840f));
        // 9D 0002
        gbc.setState(0x6240, 0x2c21, 0x6a50, 0x3851, 0x6463, 0xda53, 0x1, 0x1);
        gbc.writeMem(0x6240, { 0x9d });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x2c21, gbc.sp());
        EXPECT(0x6241, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9D 0003
        gbc.setState(0x57d6, 0xdcc9, 0xe2e0, 0xb745, 0x1228, 0x8f57, 0x0, 0x1);
        gbc.writeMem(0x57d6, { 0x9d });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xdcc9, gbc.sp());
        EXPECT(0x57d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9D 0004
        gbc.setState(0x1369, 0x2904, 0x3ed0, 0xed41, 0x4922, 0x13e5, 0x0, 0x0);
        gbc.writeMem(0x1369, { 0x9d });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x2904, gbc.sp());
        EXPECT(0x136a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9D 0005
        gbc.setState(0x29cb, 0x9e6e, 0x50f0, 0xbfe, 0x3504, 0x22d9, 0x1, 0x1);
        gbc.writeMem(0x29cb, { 0x9d });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x9e6e, gbc.sp());
        EXPECT(0x29cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9D 0006
        gbc.setState(0x6e66, 0xefa7, 0x52e0, 0x61b8, 0xc575, 0x979d, 0x0, 0x0);
        gbc.writeMem(0x6e66, { 0x9d });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xefa7, gbc.sp());
        EXPECT(0x6e67, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9D 0007
        gbc.setState(0x4fd1, 0xf187, 0x2ad0, 0x3e48, 0x806f, 0xb9b2, 0x0, 0x1);
        gbc.writeMem(0x4fd1, { 0x9d });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xf187, gbc.sp());
        EXPECT(0x4fd2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9D 0008
        gbc.setState(0xe151, 0xbc03, 0xb350, 0x86b, 0x599f, 0x4fcd, 0x1, 0x1);
        gbc.writeMem(0xe151, { 0x9d });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xbc03, gbc.sp());
        EXPECT(0xe152, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xe151));
        // 9D 0009
        gbc.setState(0x44ac, 0xeb50, 0x2c10, 0x1903, 0x18e3, 0x221c, 0x1, 0x1);
        gbc.writeMem(0x44ac, { 0x9d });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xeb50, gbc.sp());
        EXPECT(0x44ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9D 000A
        gbc.setState(0xaa29, 0x3392, 0xa0f0, 0x9847, 0x33c9, 0x13d, 0x0, 0x0);
        gbc.writeMem(0xaa29, { 0x9d });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x3392, gbc.sp());
        EXPECT(0xaa2a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xaa29));
        // 9D 000B
        gbc.setState(0x1cd8, 0x9c61, 0xaef0, 0x9cc6, 0x9ecd, 0x50f2, 0x0, 0x0);
        gbc.writeMem(0x1cd8, { 0x9d });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x9c61, gbc.sp());
        EXPECT(0x1cd9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9D 000C
        gbc.setState(0x476a, 0xd5f2, 0x8a40, 0xd85f, 0xf853, 0xeeee, 0x0, 0x0);
        gbc.writeMem(0x476a, { 0x9d });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xd5f2, gbc.sp());
        EXPECT(0x476b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9D 000D
        gbc.setState(0x281b, 0xd035, 0x20f0, 0x5f5f, 0xbbc1, 0xfecd, 0x1, 0x0);
        gbc.writeMem(0x281b, { 0x9d });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xd035, gbc.sp());
        EXPECT(0x281c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9D 000E
        gbc.setState(0xaa79, 0xb5d, 0x54b0, 0xe02f, 0x9f15, 0xe72b, 0x1, 0x0);
        gbc.writeMem(0xaa79, { 0x9d });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xb5d, gbc.sp());
        EXPECT(0xaa7a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xaa79));
        // 9D 000F
        gbc.setState(0x7b4a, 0xa825, 0xf480, 0xf705, 0x15ef, 0x372d, 0x1, 0x1);
        gbc.writeMem(0x7b4a, { 0x9d });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xa825, gbc.sp());
        EXPECT(0x7b4b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9D 0010
        gbc.setState(0x1b31, 0xefed, 0x5f10, 0xfaf5, 0x1bf2, 0x30bc, 0x1, 0x1);
        gbc.writeMem(0x1b31, { 0x9d });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xefed, gbc.sp());
        EXPECT(0x1b32, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9D 0011
        gbc.setState(0xc630, 0xa7cc, 0x1fa0, 0xb741, 0x4e21, 0x7402, 0x1, 0x1);
        gbc.writeMem(0xc630, { 0x9d });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xa7cc, gbc.sp());
        EXPECT(0xc631, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xc630));
        // 9D 0012
        gbc.setState(0xb61a, 0x37f3, 0xb8d0, 0x87ec, 0xaadb, 0xf74, 0x0, 0x0);
        gbc.writeMem(0xb61a, { 0x9d });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x37f3, gbc.sp());
        EXPECT(0xb61b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xb61a));
        // 9D 0013
        gbc.setState(0xb65e, 0xf412, 0x9f0, 0x6218, 0xc0b6, 0x6bb5, 0x0, 0x1);
        gbc.writeMem(0xb65e, { 0x9d });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xf412, gbc.sp());
        EXPECT(0xb65f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xb65e));
        // 9D 0014
        gbc.setState(0xb28, 0x6688, 0x57e0, 0xe753, 0x53d7, 0x622a, 0x0, 0x0);
        gbc.writeMem(0xb28, { 0x9d });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x6688, gbc.sp());
        EXPECT(0xb29, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9D 0015
        gbc.setState(0xcb23, 0xbe83, 0xad0, 0xf32, 0x2616, 0x83d7, 0x0, 0x1);
        gbc.writeMem(0xcb23, { 0x9d });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xbe83, gbc.sp());
        EXPECT(0xcb24, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xcb23));
        // 9D 0017
        gbc.setState(0xeeeb, 0x803f, 0xb9c0, 0xa471, 0x1a3b, 0x686d, 0x1, 0x1);
        gbc.writeMem(0xeeeb, { 0x9d });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x803f, gbc.sp());
        EXPECT(0xeeec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xeeeb));
        // 9D 0018
        gbc.setState(0x7e0, 0x9c89, 0x43f0, 0x3673, 0xf0e9, 0x5309, 0x0, 0x1);
        gbc.writeMem(0x7e0, { 0x9d });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x9c89, gbc.sp());
        EXPECT(0x7e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9D 0019
        gbc.setState(0xa381, 0xb6be, 0x5530, 0x2a36, 0x6a40, 0xc7b5, 0x0, 0x0);
        gbc.writeMem(0xa381, { 0x9d });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xb6be, gbc.sp());
        EXPECT(0xa382, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xa381));
        // 9D 001A
        gbc.setState(0x43b7, 0xbfbb, 0xeb70, 0x5242, 0xe3d, 0x4e00, 0x1, 0x1);
        gbc.writeMem(0x43b7, { 0x9d });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xbfbb, gbc.sp());
        EXPECT(0x43b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9D 001B
        gbc.setState(0x73e2, 0xf0d7, 0x83c0, 0x7ccc, 0x79a5, 0xe27e, 0x1, 0x1);
        gbc.writeMem(0x73e2, { 0x9d });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xf0d7, gbc.sp());
        EXPECT(0x73e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9D 001C
        gbc.setState(0x7487, 0x54a0, 0xf900, 0x4820, 0x25cf, 0xff00, 0x1, 0x1);
        gbc.writeMem(0x7487, { 0x9d });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x54a0, gbc.sp());
        EXPECT(0x7488, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9D 001D
        gbc.setState(0x9d64, 0x2b25, 0x9750, 0x93af, 0x37a8, 0xf9be, 0x0, 0x0);
        gbc.writeMem(0x9d64, { 0x9d });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x2b25, gbc.sp());
        EXPECT(0x9d65, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0x9d64));
        // 9D 001E
        gbc.setState(0xea36, 0x3b30, 0x3d0, 0xa3b9, 0x5027, 0x375e, 0x0, 0x1);
        gbc.writeMem(0xea36, { 0x9d });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x3b30, gbc.sp());
        EXPECT(0xea37, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xea36));
        // 9D 0020
        gbc.setState(0x2882, 0xf42f, 0xed30, 0x2739, 0xeb41, 0x9aa5, 0x1, 0x1);
        gbc.writeMem(0x2882, { 0x9d });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xf42f, gbc.sp());
        EXPECT(0x2883, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9D 0021
        gbc.setState(0x1146, 0xd68a, 0x87c0, 0x90ca, 0x4b7b, 0x7ef5, 0x1, 0x1);
        gbc.writeMem(0x1146, { 0x9d });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xd68a, gbc.sp());
        EXPECT(0x1147, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9D 0022
        gbc.setState(0x4334, 0x8d0a, 0xfbe0, 0xfad5, 0xaf2e, 0x44c4, 0x0, 0x1);
        gbc.writeMem(0x4334, { 0x9d });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x8d0a, gbc.sp());
        EXPECT(0x4335, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9D 0023
        gbc.setState(0x4d8d, 0x480, 0x9a30, 0x4b8b, 0xfed9, 0x3917, 0x1, 0x1);
        gbc.writeMem(0x4d8d, { 0x9d });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x480, gbc.sp());
        EXPECT(0x4d8e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9D 0024
        gbc.setState(0x3a65, 0xa2b5, 0x2bb0, 0x1b2c, 0xcdae, 0x43c4, 0x1, 0x1);
        gbc.writeMem(0x3a65, { 0x9d });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xa2b5, gbc.sp());
        EXPECT(0x3a66, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9D 0025
        gbc.setState(0xb638, 0xa42e, 0xf800, 0x284f, 0x57e5, 0xeba8, 0x0, 0x1);
        gbc.writeMem(0xb638, { 0x9d });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xa42e, gbc.sp());
        EXPECT(0xb639, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xb638));
        // 9D 0026
        gbc.setState(0xbfaa, 0x7aa, 0x7330, 0x5fa1, 0x70c3, 0x8e11, 0x0, 0x0);
        gbc.writeMem(0xbfaa, { 0x9d });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x7aa, gbc.sp());
        EXPECT(0xbfab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xbfaa));
        // 9D 0027
        gbc.setState(0xb6b1, 0x96c1, 0x2600, 0xd0e4, 0x5359, 0xe3ac, 0x0, 0x0);
        gbc.writeMem(0xb6b1, { 0x9d });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x96c1, gbc.sp());
        EXPECT(0xb6b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xb6b1));
        // 9D 0028
        gbc.setState(0x62af, 0x9367, 0x3de0, 0x8e8c, 0x79be, 0x4fc9, 0x0, 0x1);
        gbc.writeMem(0x62af, { 0x9d });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x9367, gbc.sp());
        EXPECT(0x62b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9D 0029
        gbc.setState(0x13ab, 0xd6db, 0xc640, 0x8f60, 0x5962, 0x7eb5, 0x0, 0x1);
        gbc.writeMem(0x13ab, { 0x9d });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xd6db, gbc.sp());
        EXPECT(0x13ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9D 002A
        gbc.setState(0x65f3, 0x948a, 0xc590, 0xbe1a, 0x79c9, 0x7ff5, 0x1, 0x1);
        gbc.writeMem(0x65f3, { 0x9d });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x948a, gbc.sp());
        EXPECT(0x65f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9D 002B
        gbc.setState(0x8699, 0x5748, 0x3950, 0x338d, 0x5b24, 0x16b, 0x1, 0x1);
        gbc.writeMem(0x8699, { 0x9d });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x5748, gbc.sp());
        EXPECT(0x869a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0x8699));
        // 9D 002C
        gbc.setState(0x4efe, 0x97ab, 0x20d0, 0xd7d3, 0x5fa9, 0x5125, 0x0, 0x1);
        gbc.writeMem(0x4efe, { 0x9d });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x97ab, gbc.sp());
        EXPECT(0x4eff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9D 002D
        gbc.setState(0x395, 0xa3ba, 0xae30, 0x9c85, 0x9ec, 0xdcfe, 0x0, 0x0);
        gbc.writeMem(0x395, { 0x9d });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xa3ba, gbc.sp());
        EXPECT(0x396, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9D 002E
        gbc.setState(0xe5a5, 0xd35, 0xac50, 0x1cdd, 0x8efa, 0xe85d, 0x1, 0x1);
        gbc.writeMem(0xe5a5, { 0x9d });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xd35, gbc.sp());
        EXPECT(0xe5a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xe5a5));
        // 9D 002F
        gbc.setState(0xe11e, 0x2eb7, 0xc570, 0xcc5e, 0xb3d9, 0xe348, 0x1, 0x0);
        gbc.writeMem(0xe11e, { 0x9d });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x2eb7, gbc.sp());
        EXPECT(0xe11f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xe11e));
        // 9D 0030
        gbc.setState(0x38f6, 0x65b4, 0x72e0, 0x6c46, 0xf2be, 0x6f76, 0x1, 0x0);
        gbc.writeMem(0x38f6, { 0x9d });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x65b4, gbc.sp());
        EXPECT(0x38f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9D 0033
        gbc.setState(0xc4ba, 0x748b, 0xe610, 0xbb07, 0x7249, 0x9c16, 0x1, 0x0);
        gbc.writeMem(0xc4ba, { 0x9d });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x748b, gbc.sp());
        EXPECT(0xc4bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xc4ba));
        // 9D 0035
        gbc.setState(0x8cf3, 0x9d65, 0xfe00, 0xcc95, 0x7c21, 0x2291, 0x1, 0x0);
        gbc.writeMem(0x8cf3, { 0x9d });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x9d65, gbc.sp());
        EXPECT(0x8cf4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0x8cf3));
        // 9D 0036
        gbc.setState(0xe9fb, 0x43f2, 0x4b00, 0x2848, 0x6b5, 0x974, 0x0, 0x1);
        gbc.writeMem(0xe9fb, { 0x9d });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x43f2, gbc.sp());
        EXPECT(0xe9fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xe9fb));
        // 9D 0037
        gbc.setState(0xa167, 0xb52a, 0x2eb0, 0xa942, 0x8e49, 0xf315, 0x0, 0x1);
        gbc.writeMem(0xa167, { 0x9d });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xb52a, gbc.sp());
        EXPECT(0xa168, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xa167));
        // 9D 0038
        gbc.setState(0xb5f6, 0xca87, 0x9fd0, 0x6947, 0xd7c7, 0xc820, 0x1, 0x1);
        gbc.writeMem(0xb5f6, { 0x9d });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xca87, gbc.sp());
        EXPECT(0xb5f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xb5f6));
        // 9D 0039
        gbc.setState(0x930c, 0xaec4, 0x4a60, 0x9891, 0xf51d, 0xe9d1, 0x1, 0x1);
        gbc.writeMem(0x930c, { 0x9d });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xaec4, gbc.sp());
        EXPECT(0x930d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0x930c));
        // 9D 003A
        gbc.setState(0x9c9a, 0xd117, 0x4b0, 0xc2af, 0x1a93, 0xee4e, 0x1, 0x0);
        gbc.writeMem(0x9c9a, { 0x9d });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xd117, gbc.sp());
        EXPECT(0x9c9b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0x9c9a));
        // 9D 003B
        gbc.setState(0x66fc, 0x87dd, 0x3b0, 0xe4ad, 0x1bc1, 0x5564, 0x0, 0x0);
        gbc.writeMem(0x66fc, { 0x9d });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x87dd, gbc.sp());
        EXPECT(0x66fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9D 003D
        gbc.setState(0xe0db, 0x2ad5, 0x13a0, 0xcc42, 0x55f4, 0x1b47, 0x1, 0x0);
        gbc.writeMem(0xe0db, { 0x9d });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x2ad5, gbc.sp());
        EXPECT(0xe0dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xe0db));
        // 9D 003E
        gbc.setState(0x36f5, 0xe10f, 0xa0e0, 0x22ef, 0x4dbb, 0xee21, 0x1, 0x1);
        gbc.writeMem(0x36f5, { 0x9d });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xe10f, gbc.sp());
        EXPECT(0x36f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9D 003F
        gbc.setState(0x2f6a, 0xd617, 0x3900, 0x30c7, 0x9ab5, 0xf307, 0x1, 0x1);
        gbc.writeMem(0x2f6a, { 0x9d });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xd617, gbc.sp());
        EXPECT(0x2f6b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9D 0040
        gbc.setState(0x46f, 0x9fb4, 0xc000, 0x69ce, 0x9361, 0x4370, 0x1, 0x0);
        gbc.writeMem(0x46f, { 0x9d });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x9fb4, gbc.sp());
        EXPECT(0x470, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9D 0041
        gbc.setState(0xa020, 0x99e4, 0xfde0, 0x6d10, 0x587c, 0x8fdc, 0x1, 0x1);
        gbc.writeMem(0xa020, { 0x9d });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x99e4, gbc.sp());
        EXPECT(0xa021, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xa020));
        // 9D 0042
        gbc.setState(0x776c, 0x44d2, 0x6900, 0x9ba9, 0xa631, 0x7478, 0x1, 0x0);
        gbc.writeMem(0x776c, { 0x9d });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x44d2, gbc.sp());
        EXPECT(0x776d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9D 0043
        gbc.setState(0x7920, 0x13fe, 0xe40, 0xbff2, 0x3733, 0x6e5a, 0x1, 0x0);
        gbc.writeMem(0x7920, { 0x9d });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x13fe, gbc.sp());
        EXPECT(0x7921, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9D 0044
        gbc.setState(0xe5fa, 0xf0f0, 0x410, 0x643c, 0xb713, 0x6f04, 0x0, 0x1);
        gbc.writeMem(0xe5fa, { 0x9d });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xf0f0, gbc.sp());
        EXPECT(0xe5fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xe5fa));
        // 9D 0046
        gbc.setState(0xd179, 0xa4f9, 0xde0, 0xbf5a, 0x7b33, 0x3f7e, 0x1, 0x1);
        gbc.writeMem(0xd179, { 0x9d });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xa4f9, gbc.sp());
        EXPECT(0xd17a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xd179));
        // 9D 0047
        gbc.setState(0xa88b, 0x479a, 0xb330, 0x8788, 0xc2e4, 0x8f3e, 0x0, 0x0);
        gbc.writeMem(0xa88b, { 0x9d });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x479a, gbc.sp());
        EXPECT(0xa88c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xa88b));
        // 9D 0048
        gbc.setState(0x68e8, 0x5e31, 0x9a80, 0x2271, 0x898b, 0x8125, 0x0, 0x1);
        gbc.writeMem(0x68e8, { 0x9d });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x5e31, gbc.sp());
        EXPECT(0x68e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9D 0049
        gbc.setState(0x6041, 0x70d4, 0x8f60, 0xe275, 0xbd95, 0x3e81, 0x1, 0x0);
        gbc.writeMem(0x6041, { 0x9d });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x70d4, gbc.sp());
        EXPECT(0x6042, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9D 004A
        gbc.setState(0xd02b, 0x4596, 0xbc40, 0x6d05, 0x4413, 0x4149, 0x1, 0x0);
        gbc.writeMem(0xd02b, { 0x9d });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x4596, gbc.sp());
        EXPECT(0xd02c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xd02b));
        // 9D 004B
        gbc.setState(0x611d, 0x1e55, 0x8d10, 0x34be, 0x1802, 0x31ab, 0x1, 0x1);
        gbc.writeMem(0x611d, { 0x9d });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x1e55, gbc.sp());
        EXPECT(0x611e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9D 004C
        gbc.setState(0x8672, 0x6555, 0x6630, 0x24fa, 0x2c62, 0x623f, 0x1, 0x0);
        gbc.writeMem(0x8672, { 0x9d });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x6555, gbc.sp());
        EXPECT(0x8673, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0x8672));
        // 9D 004D
        gbc.setState(0x7f9b, 0xd57f, 0x9840, 0xe583, 0xd2c1, 0x349, 0x0, 0x1);
        gbc.writeMem(0x7f9b, { 0x9d });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xd57f, gbc.sp());
        EXPECT(0x7f9c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9D 004E
        gbc.setState(0xc84f, 0x2a59, 0x9600, 0xb21b, 0x416a, 0x52ea, 0x1, 0x1);
        gbc.writeMem(0xc84f, { 0x9d });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x2a59, gbc.sp());
        EXPECT(0xc850, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xc84f));
        // 9D 004F
        gbc.setState(0x89d4, 0xbe5, 0x7ec0, 0xe0f3, 0x2f64, 0x4fdb, 0x0, 0x1);
        gbc.writeMem(0x89d4, { 0x9d });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xbe5, gbc.sp());
        EXPECT(0x89d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0x89d4));
        // 9D 0050
        gbc.setState(0xdc41, 0xc2d, 0x4eb0, 0x57e2, 0x414f, 0x2a5, 0x0, 0x1);
        gbc.writeMem(0xdc41, { 0x9d });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xc2d, gbc.sp());
        EXPECT(0xdc42, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xdc41));
        // 9D 0051
        gbc.setState(0x8a48, 0xe1f, 0x3830, 0x2b06, 0xc7e0, 0x9b50, 0x1, 0x0);
        gbc.writeMem(0x8a48, { 0x9d });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xe1f, gbc.sp());
        EXPECT(0x8a49, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0x8a48));
        // 9D 0052
        gbc.setState(0x63e7, 0xc9d2, 0x77e0, 0x5ed8, 0x1ded, 0x7b08, 0x1, 0x1);
        gbc.writeMem(0x63e7, { 0x9d });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xc9d2, gbc.sp());
        EXPECT(0x63e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9D 0053
        gbc.setState(0xd461, 0x8317, 0xf480, 0xc08e, 0x831c, 0x38bb, 0x0, 0x0);
        gbc.writeMem(0xd461, { 0x9d });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x8317, gbc.sp());
        EXPECT(0xd462, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xd461));
        // 9D 0054
        gbc.setState(0x5c8c, 0x88a9, 0x2ee0, 0xcc32, 0x748a, 0x4432, 0x1, 0x0);
        gbc.writeMem(0x5c8c, { 0x9d });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x88a9, gbc.sp());
        EXPECT(0x5c8d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9D 0055
        gbc.setState(0x4254, 0xe4e0, 0xbb20, 0xbafb, 0x4c73, 0xa4db, 0x1, 0x1);
        gbc.writeMem(0x4254, { 0x9d });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xe4e0, gbc.sp());
        EXPECT(0x4255, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9D 0056
        gbc.setState(0x2e05, 0x4033, 0x81f0, 0x9a7c, 0x4f43, 0x8881, 0x0, 0x0);
        gbc.writeMem(0x2e05, { 0x9d });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x4033, gbc.sp());
        EXPECT(0x2e06, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9D 0057
        gbc.setState(0x588d, 0x8e21, 0x92b0, 0x99ea, 0xe26, 0x7c2d, 0x0, 0x0);
        gbc.writeMem(0x588d, { 0x9d });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x8e21, gbc.sp());
        EXPECT(0x588e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9D 0058
        gbc.setState(0x6627, 0xd131, 0x8110, 0x893c, 0xbda8, 0x3e10, 0x1, 0x1);
        gbc.writeMem(0x6627, { 0x9d });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xd131, gbc.sp());
        EXPECT(0x6628, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9D 0059
        gbc.setState(0x37d5, 0xb, 0x5ff0, 0x1b27, 0xd030, 0x46dd, 0x0, 0x1);
        gbc.writeMem(0x37d5, { 0x9d });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xb, gbc.sp());
        EXPECT(0x37d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9D 005A
        gbc.setState(0x5af3, 0x2521, 0x1c00, 0x35d0, 0x8d04, 0xe8e7, 0x1, 0x1);
        gbc.writeMem(0x5af3, { 0x9d });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x2521, gbc.sp());
        EXPECT(0x5af4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9D 005B
        gbc.setState(0xcd84, 0x4109, 0xa830, 0xf977, 0xe59b, 0x4c9b, 0x1, 0x0);
        gbc.writeMem(0xcd84, { 0x9d });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x4109, gbc.sp());
        EXPECT(0xcd85, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xcd84));
        // 9D 005C
        gbc.setState(0xc0bc, 0x4a2d, 0x2e90, 0x237, 0xcddb, 0x5b50, 0x1, 0x0);
        gbc.writeMem(0xc0bc, { 0x9d });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x4a2d, gbc.sp());
        EXPECT(0xc0bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xc0bc));
        // 9D 005D
        gbc.setState(0xa1c0, 0xcbdc, 0xaf20, 0xfd3d, 0xaddb, 0x7d45, 0x0, 0x0);
        gbc.writeMem(0xa1c0, { 0x9d });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xcbdc, gbc.sp());
        EXPECT(0xa1c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xa1c0));
        // 9D 005E
        gbc.setState(0x7c98, 0x7600, 0x51a0, 0x99d1, 0x1bd8, 0x22d1, 0x1, 0x0);
        gbc.writeMem(0x7c98, { 0x9d });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x7600, gbc.sp());
        EXPECT(0x7c99, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9D 005F
        gbc.setState(0xc66c, 0x612f, 0xe280, 0x96ca, 0x8716, 0x9ca9, 0x0, 0x1);
        gbc.writeMem(0xc66c, { 0x9d });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x612f, gbc.sp());
        EXPECT(0xc66d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xc66c));
        // 9D 0060
        gbc.setState(0x19b6, 0x4dc6, 0x2fb0, 0x697, 0x6380, 0xbb40, 0x0, 0x1);
        gbc.writeMem(0x19b6, { 0x9d });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x4dc6, gbc.sp());
        EXPECT(0x19b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9D 0061
        gbc.setState(0xe964, 0x9762, 0xfe0, 0x59ef, 0x2096, 0x36b5, 0x0, 0x0);
        gbc.writeMem(0xe964, { 0x9d });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x9762, gbc.sp());
        EXPECT(0xe965, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xe964));
        // 9D 0062
        gbc.setState(0xabf8, 0x803f, 0xb400, 0x8d91, 0xd4f6, 0xd650, 0x1, 0x1);
        gbc.writeMem(0xabf8, { 0x9d });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x803f, gbc.sp());
        EXPECT(0xabf9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xabf8));
        // 9D 0063
        gbc.setState(0xce19, 0x2a70, 0x1100, 0xdd23, 0xe986, 0xb52b, 0x0, 0x0);
        gbc.writeMem(0xce19, { 0x9d });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x2a70, gbc.sp());
        EXPECT(0xce1a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xce19));
        // 9D 0064
        gbc.setState(0xbc53, 0x3f26, 0xd250, 0xad92, 0x5ca6, 0xdc30, 0x1, 0x0);
        gbc.writeMem(0xbc53, { 0x9d });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x3f26, gbc.sp());
        EXPECT(0xbc54, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xbc53));
        // 9D 0065
        gbc.setState(0xe7e6, 0x8e76, 0x4cd0, 0x3b20, 0xbf54, 0x7bf0, 0x1, 0x0);
        gbc.writeMem(0xe7e6, { 0x9d });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x8e76, gbc.sp());
        EXPECT(0xe7e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xe7e6));
        // 9D 0066
        gbc.setState(0xa9b4, 0x4b1c, 0xcf0, 0x703e, 0xe1df, 0x72ad, 0x0, 0x1);
        gbc.writeMem(0xa9b4, { 0x9d });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x4b1c, gbc.sp());
        EXPECT(0xa9b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xa9b4));
        // 9D 0067
        gbc.setState(0x5c7d, 0xc13a, 0xb350, 0x929e, 0x4f69, 0x8ff6, 0x1, 0x1);
        gbc.writeMem(0x5c7d, { 0x9d });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xc13a, gbc.sp());
        EXPECT(0x5c7e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9D 0069
        gbc.setState(0x3230, 0x6893, 0x5c20, 0xa784, 0x6f95, 0x5e7b, 0x0, 0x0);
        gbc.writeMem(0x3230, { 0x9d });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x6893, gbc.sp());
        EXPECT(0x3231, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9D 006A
        gbc.setState(0x2910, 0x642f, 0x560, 0x7022, 0x15fe, 0xf0dc, 0x1, 0x0);
        gbc.writeMem(0x2910, { 0x9d });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x642f, gbc.sp());
        EXPECT(0x2911, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9D 006B
        gbc.setState(0x346, 0xfb68, 0x3840, 0xba52, 0x47af, 0xbc5b, 0x1, 0x0);
        gbc.writeMem(0x346, { 0x9d });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xfb68, gbc.sp());
        EXPECT(0x347, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9D 006C
        gbc.setState(0x38d8, 0x124a, 0x570, 0xc6eb, 0xc0dd, 0x7ec1, 0x1, 0x1);
        gbc.writeMem(0x38d8, { 0x9d });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x124a, gbc.sp());
        EXPECT(0x38d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9D 006D
        gbc.setState(0x6cbb, 0x551c, 0x6d50, 0xf467, 0xc9b9, 0x12d4, 0x1, 0x1);
        gbc.writeMem(0x6cbb, { 0x9d });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x551c, gbc.sp());
        EXPECT(0x6cbc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9D 006E
        gbc.setState(0x7e1f, 0xa3f4, 0x2160, 0x10c7, 0x7dda, 0x1d61, 0x0, 0x0);
        gbc.writeMem(0x7e1f, { 0x9d });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xa3f4, gbc.sp());
        EXPECT(0x7e20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9D 006F
        gbc.setState(0x8e1e, 0xd312, 0x8c0, 0x2b3c, 0x67d6, 0x7528, 0x1, 0x1);
        gbc.writeMem(0x8e1e, { 0x9d });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xd312, gbc.sp());
        EXPECT(0x8e1f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0x8e1e));
        // 9D 0070
        gbc.setState(0x30d1, 0xe72e, 0xd030, 0x4dc0, 0xd77f, 0x82e8, 0x0, 0x0);
        gbc.writeMem(0x30d1, { 0x9d });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xe72e, gbc.sp());
        EXPECT(0x30d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9D 0071
        gbc.setState(0xed80, 0xd431, 0x2e00, 0x99b5, 0xd128, 0xae6f, 0x0, 0x1);
        gbc.writeMem(0xed80, { 0x9d });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xd431, gbc.sp());
        EXPECT(0xed81, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xed80));
        // 9D 0073
        gbc.setState(0xae4e, 0x701f, 0x4f10, 0xf36d, 0xc2f7, 0x8189, 0x1, 0x0);
        gbc.writeMem(0xae4e, { 0x9d });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x701f, gbc.sp());
        EXPECT(0xae4f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xae4e));
        // 9D 0074
        gbc.setState(0xc019, 0xba12, 0x22a0, 0x2a35, 0x364e, 0xaa42, 0x0, 0x0);
        gbc.writeMem(0xc019, { 0x9d });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xba12, gbc.sp());
        EXPECT(0xc01a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xc019));
        // 9D 0075
        gbc.setState(0x4778, 0x4535, 0xfca0, 0xd069, 0x41, 0x26ff, 0x1, 0x0);
        gbc.writeMem(0x4778, { 0x9d });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x4535, gbc.sp());
        EXPECT(0x4779, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9D 0076
        gbc.setState(0xa6cc, 0x2287, 0x3450, 0x761d, 0xf7ab, 0x616c, 0x1, 0x1);
        gbc.writeMem(0xa6cc, { 0x9d });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x2287, gbc.sp());
        EXPECT(0xa6cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xa6cc));
        // 9D 0077
        gbc.setState(0x42e0, 0x370f, 0xf000, 0x9b62, 0xa85, 0xdc9d, 0x0, 0x0);
        gbc.writeMem(0x42e0, { 0x9d });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x370f, gbc.sp());
        EXPECT(0x42e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9D 0078
        gbc.setState(0x5a8a, 0xa72c, 0x16b0, 0xf318, 0xb84e, 0x263d, 0x0, 0x0);
        gbc.writeMem(0x5a8a, { 0x9d });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xa72c, gbc.sp());
        EXPECT(0x5a8b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9D 0079
        gbc.setState(0x7b43, 0xd506, 0xcc0, 0x399d, 0x7a54, 0xc7f, 0x1, 0x1);
        gbc.writeMem(0x7b43, { 0x9d });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xd506, gbc.sp());
        EXPECT(0x7b44, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9D 007A
        gbc.setState(0x74d8, 0x6b85, 0xf9a0, 0x7217, 0x8252, 0x331a, 0x1, 0x0);
        gbc.writeMem(0x74d8, { 0x9d });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x6b85, gbc.sp());
        EXPECT(0x74d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9D 007B
        gbc.setState(0x611e, 0xc027, 0x8140, 0x8bcb, 0x713c, 0x872a, 0x1, 0x0);
        gbc.writeMem(0x611e, { 0x9d });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xc027, gbc.sp());
        EXPECT(0x611f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9D 007C
        gbc.setState(0xaf44, 0xbbac, 0x4a50, 0x933c, 0xbb69, 0x2e48, 0x0, 0x1);
        gbc.writeMem(0xaf44, { 0x9d });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xbbac, gbc.sp());
        EXPECT(0xaf45, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xaf44));
        // 9D 007D
        gbc.setState(0xa65a, 0x1575, 0x63d0, 0xd998, 0xd737, 0xf621, 0x0, 0x1);
        gbc.writeMem(0xa65a, { 0x9d });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x1575, gbc.sp());
        EXPECT(0xa65b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xa65a));
        // 9D 007E
        gbc.setState(0x52ff, 0xf890, 0x9010, 0x3041, 0xfea3, 0x53a1, 0x0, 0x1);
        gbc.writeMem(0x52ff, { 0x9d });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xf890, gbc.sp());
        EXPECT(0x5300, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9D 007F
        gbc.setState(0x80a3, 0x13bf, 0xe1f0, 0x94df, 0x37ff, 0xc24d, 0x1, 0x1);
        gbc.writeMem(0x80a3, { 0x9d });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x13bf, gbc.sp());
        EXPECT(0x80a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0x80a3));
        // 9D 0080
        gbc.setState(0xde04, 0x41ab, 0x26b0, 0xee9d, 0xb04b, 0xb5, 0x0, 0x1);
        gbc.writeMem(0xde04, { 0x9d });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x41ab, gbc.sp());
        EXPECT(0xde05, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xde04));
        // 9D 0081
        gbc.setState(0x38eb, 0x24c, 0xc730, 0xdb3c, 0xa08d, 0xfe42, 0x0, 0x1);
        gbc.writeMem(0x38eb, { 0x9d });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x24c, gbc.sp());
        EXPECT(0x38ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9D 0082
        gbc.setState(0xa1e0, 0x4565, 0xb840, 0x2ab8, 0x11a6, 0x8e87, 0x1, 0x1);
        gbc.writeMem(0xa1e0, { 0x9d });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x4565, gbc.sp());
        EXPECT(0xa1e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xa1e0));
        // 9D 0083
        gbc.setState(0x3047, 0x6b62, 0xdb00, 0xa0ea, 0x18c7, 0x9a0, 0x0, 0x0);
        gbc.writeMem(0x3047, { 0x9d });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x6b62, gbc.sp());
        EXPECT(0x3048, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9D 0084
        gbc.setState(0x32f2, 0xfd1d, 0x5cf0, 0x545d, 0x84d7, 0x85e7, 0x0, 0x0);
        gbc.writeMem(0x32f2, { 0x9d });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xfd1d, gbc.sp());
        EXPECT(0x32f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9D 0085
        gbc.setState(0xa29b, 0xba21, 0xd320, 0x3ebd, 0x4159, 0x2ab1, 0x0, 0x0);
        gbc.writeMem(0xa29b, { 0x9d });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xba21, gbc.sp());
        EXPECT(0xa29c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xa29b));
        // 9D 0086
        gbc.setState(0x7ccc, 0x6bb1, 0x6fe0, 0xae33, 0xfec4, 0x597b, 0x0, 0x1);
        gbc.writeMem(0x7ccc, { 0x9d });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x6bb1, gbc.sp());
        EXPECT(0x7ccd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9D 0087
        gbc.setState(0x5127, 0x7da3, 0xe7e0, 0x86dd, 0x4835, 0xffdb, 0x1, 0x0);
        gbc.writeMem(0x5127, { 0x9d });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x7da3, gbc.sp());
        EXPECT(0x5128, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9D 0088
        gbc.setState(0xe5ac, 0x407f, 0x9490, 0x645b, 0xc98a, 0x8220, 0x0, 0x0);
        gbc.writeMem(0xe5ac, { 0x9d });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x407f, gbc.sp());
        EXPECT(0xe5ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xe5ac));
        // 9D 0089
        gbc.setState(0xed84, 0x8bf9, 0xca90, 0x4d8b, 0x4fe1, 0x600c, 0x1, 0x1);
        gbc.writeMem(0xed84, { 0x9d });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x8bf9, gbc.sp());
        EXPECT(0xed85, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xed84));
        // 9D 008A
        gbc.setState(0xd2f2, 0x41aa, 0xf370, 0x5b6c, 0x4ac0, 0xa27c, 0x0, 0x0);
        gbc.writeMem(0xd2f2, { 0x9d });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x41aa, gbc.sp());
        EXPECT(0xd2f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xd2f2));
        // 9D 008B
        gbc.setState(0xaddf, 0xac09, 0x2bf0, 0xbe59, 0xa1fb, 0x7e85, 0x0, 0x0);
        gbc.writeMem(0xaddf, { 0x9d });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xac09, gbc.sp());
        EXPECT(0xade0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xaddf));
        // 9D 008C
        gbc.setState(0x2dc4, 0x77c9, 0xaf30, 0x6635, 0x7f61, 0x69ea, 0x0, 0x0);
        gbc.writeMem(0x2dc4, { 0x9d });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x77c9, gbc.sp());
        EXPECT(0x2dc5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9D 008D
        gbc.setState(0x2d8e, 0x39c3, 0xda00, 0xdd4d, 0x3830, 0xa72d, 0x1, 0x1);
        gbc.writeMem(0x2d8e, { 0x9d });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x39c3, gbc.sp());
        EXPECT(0x2d8f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9D 008E
        gbc.setState(0xc0c8, 0x49c2, 0x960, 0x85d3, 0xf83a, 0x738d, 0x0, 0x0);
        gbc.writeMem(0xc0c8, { 0x9d });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x49c2, gbc.sp());
        EXPECT(0xc0c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xc0c8));
        // 9D 008F
        gbc.setState(0xe40, 0x66a5, 0x4160, 0x3032, 0x15b7, 0x1a9f, 0x1, 0x1);
        gbc.writeMem(0xe40, { 0x9d });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x66a5, gbc.sp());
        EXPECT(0xe41, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9D 0090
        gbc.setState(0x1ea9, 0xa8dd, 0xab00, 0xa78e, 0xc5da, 0x53fa, 0x1, 0x0);
        gbc.writeMem(0x1ea9, { 0x9d });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xa8dd, gbc.sp());
        EXPECT(0x1eaa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9D 0091
        gbc.setState(0x9bd1, 0x8e8a, 0x6030, 0x2286, 0xf466, 0xc534, 0x1, 0x0);
        gbc.writeMem(0x9bd1, { 0x9d });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x8e8a, gbc.sp());
        EXPECT(0x9bd2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0x9bd1));
        // 9D 0092
        gbc.setState(0xa, 0x6b4e, 0x8bd0, 0x87b1, 0x68e2, 0x8c8e, 0x0, 0x0);
        gbc.writeMem(0xa, { 0x9d });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x6b4e, gbc.sp());
        EXPECT(0xb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9D 0094
        gbc.setState(0xb743, 0x2d7c, 0xdcd0, 0xa263, 0x40c4, 0xcc0a, 0x0, 0x0);
        gbc.writeMem(0xb743, { 0x9d });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x2d7c, gbc.sp());
        EXPECT(0xb744, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xb743));
        // 9D 0095
        gbc.setState(0x8a5b, 0x3ed2, 0x4e10, 0x878f, 0x25cb, 0x383d, 0x1, 0x1);
        gbc.writeMem(0x8a5b, { 0x9d });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x3ed2, gbc.sp());
        EXPECT(0x8a5c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0x8a5b));
        // 9D 0096
        gbc.setState(0xedee, 0x2088, 0xdba0, 0x8f80, 0xe8e9, 0xdc36, 0x1, 0x0);
        gbc.writeMem(0xedee, { 0x9d });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x2088, gbc.sp());
        EXPECT(0xedef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xedee));
        // 9D 0097
        gbc.setState(0x838b, 0x24b0, 0x8fa0, 0xd4b0, 0x5c40, 0xf0f0, 0x0, 0x1);
        gbc.writeMem(0x838b, { 0x9d });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x24b0, gbc.sp());
        EXPECT(0x838c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0x838b));
        // 9D 0098
        gbc.setState(0x5a73, 0x4e89, 0xcc10, 0xd4ea, 0x289a, 0xf199, 0x0, 0x0);
        gbc.writeMem(0x5a73, { 0x9d });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x4e89, gbc.sp());
        EXPECT(0x5a74, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9D 0099
        gbc.setState(0x771b, 0x204b, 0x8e30, 0x541e, 0xdd36, 0x51eb, 0x0, 0x1);
        gbc.writeMem(0x771b, { 0x9d });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x204b, gbc.sp());
        EXPECT(0x771c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9D 009A
        gbc.setState(0xdeb2, 0x7a6f, 0xba00, 0x6f35, 0xc98f, 0xcec, 0x0, 0x1);
        gbc.writeMem(0xdeb2, { 0x9d });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x7a6f, gbc.sp());
        EXPECT(0xdeb3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xdeb2));
        // 9D 009B
        gbc.setState(0x5912, 0x4480, 0xd770, 0xc3b3, 0xbb45, 0xe5d2, 0x1, 0x1);
        gbc.writeMem(0x5912, { 0x9d });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x4480, gbc.sp());
        EXPECT(0x5913, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9D 009C
        gbc.setState(0x100a, 0xb0cc, 0xb800, 0x292, 0x9f60, 0xbae4, 0x0, 0x1);
        gbc.writeMem(0x100a, { 0x9d });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xb0cc, gbc.sp());
        EXPECT(0x100b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9D 009D
        gbc.setState(0x8c4a, 0x7d18, 0x1b70, 0x64c8, 0xb404, 0x5557, 0x0, 0x1);
        gbc.writeMem(0x8c4a, { 0x9d });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x7d18, gbc.sp());
        EXPECT(0x8c4b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0x8c4a));
        // 9D 009E
        gbc.setState(0x4975, 0x8f8f, 0x8700, 0x6a1a, 0x158a, 0xdec, 0x1, 0x1);
        gbc.writeMem(0x4975, { 0x9d });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x8f8f, gbc.sp());
        EXPECT(0x4976, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9D 009F
        gbc.setState(0xe3ae, 0x80ca, 0x3bb0, 0x5281, 0xcc09, 0xd628, 0x0, 0x0);
        gbc.writeMem(0xe3ae, { 0x9d });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x80ca, gbc.sp());
        EXPECT(0xe3af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xe3ae));
        // 9D 00A0
        gbc.setState(0xbbe6, 0x7da, 0xb160, 0x13f5, 0x1383, 0xb583, 0x0, 0x1);
        gbc.writeMem(0xbbe6, { 0x9d });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x7da, gbc.sp());
        EXPECT(0xbbe7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xbbe6));
        // 9D 00A1
        gbc.setState(0x6d47, 0x5f9, 0x3bd0, 0x43a0, 0xd05f, 0x1f5c, 0x1, 0x0);
        gbc.writeMem(0x6d47, { 0x9d });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x5f9, gbc.sp());
        EXPECT(0x6d48, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9D 00A3
        gbc.setState(0xbbf8, 0x3c04, 0xfca0, 0x7f98, 0x777, 0x8ada, 0x0, 0x0);
        gbc.writeMem(0xbbf8, { 0x9d });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x3c04, gbc.sp());
        EXPECT(0xbbf9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xbbf8));
        // 9D 00A4
        gbc.setState(0xde40, 0x35, 0x7ed0, 0x76a9, 0xe7cf, 0x43b3, 0x1, 0x0);
        gbc.writeMem(0xde40, { 0x9d });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x35, gbc.sp());
        EXPECT(0xde41, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xde40));
        // 9D 00A6
        gbc.setState(0x4bbd, 0x1f9a, 0xac0, 0xda60, 0xbc9b, 0xc82d, 0x0, 0x1);
        gbc.writeMem(0x4bbd, { 0x9d });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x1f9a, gbc.sp());
        EXPECT(0x4bbe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9D 00A7
        gbc.setState(0xa26c, 0x90dc, 0xc1a0, 0x411d, 0xb5f, 0x1837, 0x1, 0x0);
        gbc.writeMem(0xa26c, { 0x9d });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x90dc, gbc.sp());
        EXPECT(0xa26d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xa26c));
        // 9D 00A8
        gbc.setState(0xe876, 0xbf50, 0x3480, 0x606c, 0x4cf1, 0xe88e, 0x0, 0x1);
        gbc.writeMem(0xe876, { 0x9d });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xbf50, gbc.sp());
        EXPECT(0xe877, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xe876));
        // 9D 00A9
        gbc.setState(0xb021, 0xfd8c, 0x9610, 0x30aa, 0x65f5, 0x500f, 0x1, 0x0);
        gbc.writeMem(0xb021, { 0x9d });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xfd8c, gbc.sp());
        EXPECT(0xb022, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xb021));
        // 9D 00AA
        gbc.setState(0x94fc, 0x4226, 0x49a0, 0xd19, 0x6, 0xc02, 0x0, 0x0);
        gbc.writeMem(0x94fc, { 0x9d });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x4226, gbc.sp());
        EXPECT(0x94fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0x94fc));
        // 9D 00AB
        gbc.setState(0x1a25, 0xeb94, 0xbea0, 0x55e2, 0x28b5, 0xf989, 0x1, 0x0);
        gbc.writeMem(0x1a25, { 0x9d });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xeb94, gbc.sp());
        EXPECT(0x1a26, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9D 00AD
        gbc.setState(0x4d3c, 0xe3c5, 0x3e70, 0x99ff, 0x4775, 0x12b, 0x0, 0x1);
        gbc.writeMem(0x4d3c, { 0x9d });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xe3c5, gbc.sp());
        EXPECT(0x4d3d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9D 00AE
        gbc.setState(0xb9b1, 0x519b, 0x2190, 0x9da6, 0xeb93, 0xf263, 0x0, 0x1);
        gbc.writeMem(0xb9b1, { 0x9d });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x519b, gbc.sp());
        EXPECT(0xb9b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xb9b1));
        // 9D 00B0
        gbc.setState(0x93fe, 0xe604, 0xf480, 0xbeb0, 0xd4a7, 0xa3ae, 0x1, 0x0);
        gbc.writeMem(0x93fe, { 0x9d });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xe604, gbc.sp());
        EXPECT(0x93ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0x93fe));
        // 9D 00B1
        gbc.setState(0xaaa8, 0x5ab2, 0x8c80, 0xc84a, 0x6084, 0x56c2, 0x1, 0x0);
        gbc.writeMem(0xaaa8, { 0x9d });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x5ab2, gbc.sp());
        EXPECT(0xaaa9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xaaa8));
        // 9D 00B2
        gbc.setState(0x142b, 0x4aec, 0xdb90, 0x9aa9, 0x85ad, 0xa509, 0x1, 0x0);
        gbc.writeMem(0x142b, { 0x9d });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x4aec, gbc.sp());
        EXPECT(0x142c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9D 00B4
        gbc.setState(0x4ce6, 0x91a2, 0x53e0, 0xd7d1, 0x2a7b, 0x28ab, 0x0, 0x0);
        gbc.writeMem(0x4ce6, { 0x9d });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x91a2, gbc.sp());
        EXPECT(0x4ce7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9D 00B5
        gbc.setState(0x224e, 0xc82, 0x2b20, 0xba4, 0xbf9b, 0xa34, 0x0, 0x1);
        gbc.writeMem(0x224e, { 0x9d });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xc82, gbc.sp());
        EXPECT(0x224f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9D 00B6
        gbc.setState(0x9a70, 0xaad3, 0xdcd0, 0xe16, 0xd5d0, 0x91de, 0x1, 0x0);
        gbc.writeMem(0x9a70, { 0x9d });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xaad3, gbc.sp());
        EXPECT(0x9a71, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0x9a70));
        // 9D 00B7
        gbc.setState(0xd5ba, 0x9d60, 0x3660, 0x94f1, 0x31ff, 0x1db5, 0x0, 0x0);
        gbc.writeMem(0xd5ba, { 0x9d });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x9d60, gbc.sp());
        EXPECT(0xd5bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xd5ba));
        // 9D 00B8
        gbc.setState(0x65e0, 0x4d7e, 0x4b90, 0xc61b, 0x1420, 0xaaff, 0x1, 0x1);
        gbc.writeMem(0x65e0, { 0x9d });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x4d7e, gbc.sp());
        EXPECT(0x65e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9D 00B9
        gbc.setState(0x8dcb, 0x41b2, 0x4700, 0xf4d9, 0x32c2, 0xa067, 0x0, 0x0);
        gbc.writeMem(0x8dcb, { 0x9d });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x41b2, gbc.sp());
        EXPECT(0x8dcc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0x8dcb));
        // 9D 00BA
        gbc.setState(0x77b3, 0x47b5, 0x80b0, 0x2e9c, 0xddf8, 0xab9, 0x1, 0x0);
        gbc.writeMem(0x77b3, { 0x9d });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x47b5, gbc.sp());
        EXPECT(0x77b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9D 00BD
        gbc.setState(0x1416, 0x922d, 0x42a0, 0x68d9, 0x2a8d, 0xe39c, 0x0, 0x1);
        gbc.writeMem(0x1416, { 0x9d });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x922d, gbc.sp());
        EXPECT(0x1417, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9D 00BE
        gbc.setState(0xc52c, 0xd568, 0xd890, 0x1e36, 0xf71a, 0x32b4, 0x0, 0x0);
        gbc.writeMem(0xc52c, { 0x9d });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xd568, gbc.sp());
        EXPECT(0xc52d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xc52c));
        // 9D 00BF
        gbc.setState(0xa4e0, 0x54a6, 0xb200, 0x30d, 0x4fc2, 0x8b96, 0x1, 0x0);
        gbc.writeMem(0xa4e0, { 0x9d });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x54a6, gbc.sp());
        EXPECT(0xa4e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xa4e0));
        // 9D 00C0
        gbc.setState(0x6504, 0xc14f, 0xf320, 0xffa7, 0x5f6, 0x1bc6, 0x1, 0x1);
        gbc.writeMem(0x6504, { 0x9d });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xc14f, gbc.sp());
        EXPECT(0x6505, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9D 00C1
        gbc.setState(0xb837, 0xb49b, 0x6610, 0x59c2, 0xbea2, 0xb051, 0x1, 0x1);
        gbc.writeMem(0xb837, { 0x9d });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xb49b, gbc.sp());
        EXPECT(0xb838, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xb837));
        // 9D 00C2
        gbc.setState(0xdfdb, 0x1e07, 0x3d00, 0x2691, 0x1202, 0xdac7, 0x1, 0x1);
        gbc.writeMem(0xdfdb, { 0x9d });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x1e07, gbc.sp());
        EXPECT(0xdfdc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xdfdb));
        // 9D 00C3
        gbc.setState(0x6f83, 0x1bb7, 0xdb70, 0x9ad6, 0x8c4b, 0x1232, 0x0, 0x0);
        gbc.writeMem(0x6f83, { 0x9d });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x1bb7, gbc.sp());
        EXPECT(0x6f84, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9D 00C5
        gbc.setState(0x20da, 0xa059, 0xd970, 0x859b, 0x283, 0x65e9, 0x1, 0x1);
        gbc.writeMem(0x20da, { 0x9d });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xa059, gbc.sp());
        EXPECT(0x20db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9D 00C7
        gbc.setState(0x10f9, 0x7b18, 0x4c30, 0x9d32, 0xd9ab, 0xa3d7, 0x1, 0x0);
        gbc.writeMem(0x10f9, { 0x9d });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x7b18, gbc.sp());
        EXPECT(0x10fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9D 00C9
        gbc.setState(0xb81c, 0x9e06, 0x4cd0, 0x8ae7, 0xf9ef, 0x7332, 0x0, 0x1);
        gbc.writeMem(0xb81c, { 0x9d });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x9e06, gbc.sp());
        EXPECT(0xb81d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xb81c));
        // 9D 00CA
        gbc.setState(0x4a39, 0x67d2, 0xa2a0, 0x203d, 0xce06, 0xa111, 0x0, 0x1);
        gbc.writeMem(0x4a39, { 0x9d });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x67d2, gbc.sp());
        EXPECT(0x4a3a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9D 00CB
        gbc.setState(0x62c3, 0xa29a, 0xbf0, 0xd44a, 0x9e98, 0xb16a, 0x1, 0x0);
        gbc.writeMem(0x62c3, { 0x9d });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xa29a, gbc.sp());
        EXPECT(0x62c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9D 00CC
        gbc.setState(0x840c, 0xc9ff, 0xee0, 0x499, 0x5038, 0x649a, 0x1, 0x1);
        gbc.writeMem(0x840c, { 0x9d });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xc9ff, gbc.sp());
        EXPECT(0x840d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0x840c));
        // 9D 00CE
        gbc.setState(0x3974, 0x9997, 0xf5b0, 0x3f19, 0x678b, 0xf95, 0x1, 0x0);
        gbc.writeMem(0x3974, { 0x9d });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x9997, gbc.sp());
        EXPECT(0x3975, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9D 00D0
        gbc.setState(0xae08, 0x1883, 0xc1c0, 0x66d, 0x59e0, 0x9c64, 0x1, 0x1);
        gbc.writeMem(0xae08, { 0x9d });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x1883, gbc.sp());
        EXPECT(0xae09, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xae08));
        // 9D 00D1
        gbc.setState(0xda98, 0x9520, 0x2970, 0x2086, 0x53ce, 0xef5b, 0x0, 0x1);
        gbc.writeMem(0xda98, { 0x9d });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x9520, gbc.sp());
        EXPECT(0xda99, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xda98));
        // 9D 00D2
        gbc.setState(0xcdb8, 0xf8c9, 0xdd80, 0x3270, 0x119, 0x6e9f, 0x1, 0x0);
        gbc.writeMem(0xcdb8, { 0x9d });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xf8c9, gbc.sp());
        EXPECT(0xcdb9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xcdb8));
        // 9D 00D3
        gbc.setState(0x9212, 0x3de4, 0xbcd0, 0xd03f, 0x64ee, 0x9071, 0x0, 0x1);
        gbc.writeMem(0x9212, { 0x9d });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x3de4, gbc.sp());
        EXPECT(0x9213, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0x9212));
        // 9D 00D4
        gbc.setState(0x2f1b, 0x7ed6, 0x540, 0xf425, 0x40b8, 0x7de6, 0x0, 0x0);
        gbc.writeMem(0x2f1b, { 0x9d });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x7ed6, gbc.sp());
        EXPECT(0x2f1c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9D 00D5
        gbc.setState(0x6378, 0x2620, 0xc260, 0xc1f, 0x4ebf, 0xa3d, 0x1, 0x1);
        gbc.writeMem(0x6378, { 0x9d });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x2620, gbc.sp());
        EXPECT(0x6379, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9D 00D6
        gbc.setState(0x1eac, 0x2ede, 0xfff0, 0x385e, 0x58c5, 0xd333, 0x1, 0x0);
        gbc.writeMem(0x1eac, { 0x9d });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x2ede, gbc.sp());
        EXPECT(0x1ead, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9D 00D7
        gbc.setState(0xcf3d, 0x7e4, 0xd020, 0x3b21, 0x2b58, 0x2b3d, 0x0, 0x0);
        gbc.writeMem(0xcf3d, { 0x9d });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x7e4, gbc.sp());
        EXPECT(0xcf3e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xcf3d));
        // 9D 00D8
        gbc.setState(0x43b5, 0xd0ae, 0x6890, 0xc12a, 0x7382, 0xc582, 0x0, 0x1);
        gbc.writeMem(0x43b5, { 0x9d });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xd0ae, gbc.sp());
        EXPECT(0x43b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9D 00D9
        gbc.setState(0x249b, 0x6568, 0x7110, 0xf662, 0x25c1, 0xaf4d, 0x0, 0x1);
        gbc.writeMem(0x249b, { 0x9d });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x6568, gbc.sp());
        EXPECT(0x249c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9D 00DA
        gbc.setState(0xd4d, 0x7443, 0x4ca0, 0x9db1, 0xd029, 0x198c, 0x0, 0x1);
        gbc.writeMem(0xd4d, { 0x9d });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x7443, gbc.sp());
        EXPECT(0xd4e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9D 00DC
        gbc.setState(0x58ef, 0x3f90, 0x2370, 0x2ccc, 0x7524, 0x6a4a, 0x0, 0x1);
        gbc.writeMem(0x58ef, { 0x9d });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x3f90, gbc.sp());
        EXPECT(0x58f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9D 00DD
        gbc.setState(0x2ffb, 0xfd8a, 0x62a0, 0x4043, 0x4ccb, 0x55cf, 0x0, 0x0);
        gbc.writeMem(0x2ffb, { 0x9d });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xfd8a, gbc.sp());
        EXPECT(0x2ffc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9D 00DE
        gbc.setState(0x346e, 0x25cc, 0x77f0, 0xc673, 0x63ba, 0x1c12, 0x0, 0x0);
        gbc.writeMem(0x346e, { 0x9d });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x25cc, gbc.sp());
        EXPECT(0x346f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9D 00DF
        gbc.setState(0x7aa2, 0xf782, 0xb4a0, 0x5416, 0x93f2, 0xaf89, 0x0, 0x1);
        gbc.writeMem(0x7aa2, { 0x9d });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xf782, gbc.sp());
        EXPECT(0x7aa3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9D 00E0
        gbc.setState(0xcc64, 0x2071, 0xbcd0, 0xcd7d, 0x6ea3, 0x503d, 0x1, 0x1);
        gbc.writeMem(0xcc64, { 0x9d });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x2071, gbc.sp());
        EXPECT(0xcc65, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xcc64));
        // 9D 00E2
        gbc.setState(0xa21a, 0xbac9, 0x9140, 0xad62, 0x9771, 0xadca, 0x1, 0x1);
        gbc.writeMem(0xa21a, { 0x9d });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xbac9, gbc.sp());
        EXPECT(0xa21b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xa21a));
        // 9D 00E3
        gbc.setState(0xb1a2, 0x3e3e, 0x6100, 0x6d42, 0xf63c, 0xc05c, 0x1, 0x1);
        gbc.writeMem(0xb1a2, { 0x9d });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x3e3e, gbc.sp());
        EXPECT(0xb1a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xb1a2));
        // 9D 00E4
        gbc.setState(0x48c7, 0x2c40, 0x810, 0x496c, 0x94ea, 0x7796, 0x1, 0x0);
        gbc.writeMem(0x48c7, { 0x9d });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x2c40, gbc.sp());
        EXPECT(0x48c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9D 00E5
        gbc.setState(0x9ed7, 0xabd7, 0x2610, 0x575, 0xc098, 0x96d9, 0x1, 0x1);
        gbc.writeMem(0x9ed7, { 0x9d });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xabd7, gbc.sp());
        EXPECT(0x9ed8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0x9ed7));
        // 9D 00E6
        gbc.setState(0x2931, 0x9ba8, 0xad10, 0xa921, 0xd149, 0x3b6c, 0x1, 0x0);
        gbc.writeMem(0x2931, { 0x9d });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x9ba8, gbc.sp());
        EXPECT(0x2932, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9D 00E9
        gbc.setState(0xe8f4, 0xfd80, 0x8660, 0x847, 0x7006, 0xaf5a, 0x1, 0x1);
        gbc.writeMem(0xe8f4, { 0x9d });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xfd80, gbc.sp());
        EXPECT(0xe8f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xe8f4));
        // 9D 00EA
        gbc.setState(0x4f26, 0xb260, 0xf000, 0x88a, 0x285b, 0x589e, 0x0, 0x0);
        gbc.writeMem(0x4f26, { 0x9d });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xb260, gbc.sp());
        EXPECT(0x4f27, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9D 00EB
        gbc.setState(0xd617, 0x14dc, 0xbe60, 0x469b, 0x915a, 0xa41d, 0x0, 0x1);
        gbc.writeMem(0xd617, { 0x9d });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x14dc, gbc.sp());
        EXPECT(0xd618, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xd617));
        // 9D 00EC
        gbc.setState(0x6bb9, 0x343d, 0xb8e0, 0x9d15, 0x39ed, 0x2c38, 0x1, 0x0);
        gbc.writeMem(0x6bb9, { 0x9d });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x343d, gbc.sp());
        EXPECT(0x6bba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9D 00ED
        gbc.setState(0xa483, 0x8212, 0x1b90, 0x834f, 0x22f5, 0x4c37, 0x1, 0x0);
        gbc.writeMem(0xa483, { 0x9d });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x8212, gbc.sp());
        EXPECT(0xa484, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xa483));
        // 9D 00EE
        gbc.setState(0x7115, 0xe45e, 0x2c80, 0x948, 0xd7f2, 0xb1e3, 0x1, 0x0);
        gbc.writeMem(0x7115, { 0x9d });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xe45e, gbc.sp());
        EXPECT(0x7116, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9D 00EF
        gbc.setState(0xc45c, 0x51e2, 0xee40, 0x6f70, 0xae33, 0x5613, 0x0, 0x1);
        gbc.writeMem(0xc45c, { 0x9d });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x51e2, gbc.sp());
        EXPECT(0xc45d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xc45c));
        // 9D 00F0
        gbc.setState(0x277f, 0x1a9c, 0x2ed0, 0xabc, 0x1c11, 0xc716, 0x0, 0x1);
        gbc.writeMem(0x277f, { 0x9d });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x1a9c, gbc.sp());
        EXPECT(0x2780, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9D 00F1
        gbc.setState(0xc11d, 0x9dce, 0x1d60, 0x307d, 0x9c40, 0x537b, 0x0, 0x0);
        gbc.writeMem(0xc11d, { 0x9d });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x9dce, gbc.sp());
        EXPECT(0xc11e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xc11d));
        // 9D 00F2
        gbc.setState(0x3d99, 0x1bf, 0x3730, 0x4f65, 0x2a23, 0x7883, 0x1, 0x0);
        gbc.writeMem(0x3d99, { 0x9d });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x1bf, gbc.sp());
        EXPECT(0x3d9a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9D 00F3
        gbc.setState(0xd476, 0x78a2, 0xb660, 0x2828, 0x64b6, 0xb9d2, 0x1, 0x1);
        gbc.writeMem(0xd476, { 0x9d });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x78a2, gbc.sp());
        EXPECT(0xd477, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xd476));
        // 9D 00F4
        gbc.setState(0x23ae, 0xfa6c, 0x5f00, 0xf77f, 0xb993, 0xf675, 0x0, 0x0);
        gbc.writeMem(0x23ae, { 0x9d });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xfa6c, gbc.sp());
        EXPECT(0x23af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9D 00F5
        gbc.setState(0x7abe, 0x9882, 0xf920, 0x8392, 0xc3c4, 0x6d85, 0x1, 0x0);
        gbc.writeMem(0x7abe, { 0x9d });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x9882, gbc.sp());
        EXPECT(0x7abf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9D 00F6
        gbc.setState(0xa3bc, 0xbe1c, 0x4130, 0x7241, 0xa690, 0xa35, 0x0, 0x1);
        gbc.writeMem(0xa3bc, { 0x9d });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xbe1c, gbc.sp());
        EXPECT(0xa3bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xa3bc));
        // 9D 00F7
        gbc.setState(0xa7dd, 0xb1ee, 0xa800, 0x811f, 0xcba, 0xa51f, 0x1, 0x1);
        gbc.writeMem(0xa7dd, { 0x9d });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xb1ee, gbc.sp());
        EXPECT(0xa7de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xa7dd));
        // 9D 00F8
        gbc.setState(0xc295, 0xee8c, 0x34f0, 0xc9b5, 0x8dd4, 0x54f4, 0x0, 0x0);
        gbc.writeMem(0xc295, { 0x9d });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xee8c, gbc.sp());
        EXPECT(0xc296, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xc295));
        // 9D 00F9
        gbc.setState(0xc9ec, 0xdf25, 0x97b0, 0x5071, 0x622c, 0xcd49, 0x0, 0x1);
        gbc.writeMem(0xc9ec, { 0x9d });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xdf25, gbc.sp());
        EXPECT(0xc9ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xc9ec));
        // 9D 00FA
        gbc.setState(0x5aa2, 0x2872, 0xd530, 0xfdbf, 0x3234, 0xf01f, 0x0, 0x1);
        gbc.writeMem(0x5aa2, { 0x9d });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x2872, gbc.sp());
        EXPECT(0x5aa3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9D 00FB
        gbc.setState(0x7b44, 0xf485, 0xb450, 0x1f0f, 0x2c5, 0x5085, 0x1, 0x1);
        gbc.writeMem(0x7b44, { 0x9d });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xf485, gbc.sp());
        EXPECT(0x7b45, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9D 00FC
        gbc.setState(0x8c69, 0x52ef, 0xd370, 0x349, 0xaff2, 0x4802, 0x1, 0x0);
        gbc.writeMem(0x8c69, { 0x9d });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x52ef, gbc.sp());
        EXPECT(0x8c6a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0x8c69));
        // 9D 00FE
        gbc.setState(0x51e9, 0x8eac, 0x5640, 0x9185, 0x5103, 0x8bb4, 0x1, 0x1);
        gbc.writeMem(0x51e9, { 0x9d });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x8eac, gbc.sp());
        EXPECT(0x51ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9D 00FF
        gbc.setState(0x1306, 0x74c1, 0xce20, 0x45fa, 0x5fd1, 0xdb1d, 0x0, 0x0);
        gbc.writeMem(0x1306, { 0x9d });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x74c1, gbc.sp());
        EXPECT(0x1307, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9D 0100
        gbc.setState(0xe785, 0x238c, 0xc6a0, 0xbb21, 0x585b, 0x5a66, 0x0, 0x1);
        gbc.writeMem(0xe785, { 0x9d });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x238c, gbc.sp());
        EXPECT(0xe786, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xe785));
        // 9D 0101
        gbc.setState(0x78fb, 0x1680, 0xe7f0, 0xe1a3, 0x5db5, 0x8fe0, 0x0, 0x1);
        gbc.writeMem(0x78fb, { 0x9d });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x1680, gbc.sp());
        EXPECT(0x78fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9D 0102
        gbc.setState(0x38fb, 0xb3b7, 0xa7e0, 0x420a, 0x3721, 0x748a, 0x1, 0x0);
        gbc.writeMem(0x38fb, { 0x9d });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xb3b7, gbc.sp());
        EXPECT(0x38fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9D 0103
        gbc.setState(0x2953, 0xe1fb, 0xfae0, 0x65c0, 0x6c4c, 0xc9c2, 0x1, 0x0);
        gbc.writeMem(0x2953, { 0x9d });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xe1fb, gbc.sp());
        EXPECT(0x2954, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9D 0104
        gbc.setState(0x7205, 0xcb2, 0x2230, 0x745e, 0x8010, 0xf604, 0x1, 0x1);
        gbc.writeMem(0x7205, { 0x9d });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xcb2, gbc.sp());
        EXPECT(0x7206, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9D 0105
        gbc.setState(0x458, 0x26e2, 0xbfb0, 0xe8e7, 0xfec8, 0x77e3, 0x0, 0x1);
        gbc.writeMem(0x458, { 0x9d });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x26e2, gbc.sp());
        EXPECT(0x459, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9D 0106
        gbc.setState(0x65b9, 0xdb08, 0x59f0, 0xd2a2, 0x7d80, 0x81cf, 0x0, 0x0);
        gbc.writeMem(0x65b9, { 0x9d });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xdb08, gbc.sp());
        EXPECT(0x65ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9D 0107
        gbc.setState(0x4f61, 0xe184, 0xbb80, 0xa49f, 0xede0, 0xa6bc, 0x1, 0x0);
        gbc.writeMem(0x4f61, { 0x9d });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xe184, gbc.sp());
        EXPECT(0x4f62, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9D 0108
        gbc.setState(0x9d27, 0x3392, 0x2c00, 0x8b6, 0x1168, 0x4a35, 0x0, 0x0);
        gbc.writeMem(0x9d27, { 0x9d });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x3392, gbc.sp());
        EXPECT(0x9d28, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0x9d27));
        // 9D 0109
        gbc.setState(0xde07, 0x7ae1, 0x6630, 0x8a20, 0x453d, 0x85c1, 0x1, 0x0);
        gbc.writeMem(0xde07, { 0x9d });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x7ae1, gbc.sp());
        EXPECT(0xde08, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xde07));
        // 9D 010A
        gbc.setState(0xdd46, 0x6281, 0x21d0, 0x351c, 0xe853, 0xf2c, 0x1, 0x0);
        gbc.writeMem(0xdd46, { 0x9d });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x6281, gbc.sp());
        EXPECT(0xdd47, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xdd46));
        // 9D 010C
        gbc.setState(0x4610, 0xc042, 0x5ca0, 0xe530, 0x21da, 0x7def, 0x0, 0x0);
        gbc.writeMem(0x4610, { 0x9d });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xc042, gbc.sp());
        EXPECT(0x4611, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9D 010D
        gbc.setState(0xc80e, 0x1255, 0xcdd0, 0x221a, 0xf861, 0xb243, 0x1, 0x0);
        gbc.writeMem(0xc80e, { 0x9d });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x1255, gbc.sp());
        EXPECT(0xc80f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xc80e));
        // 9D 010F
        gbc.setState(0x819c, 0xb171, 0x4b30, 0xbf54, 0xdfbc, 0xa669, 0x0, 0x1);
        gbc.writeMem(0x819c, { 0x9d });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xb171, gbc.sp());
        EXPECT(0x819d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0x819c));
        // 9D 0110
        gbc.setState(0xd09d, 0xb79c, 0x1e00, 0x2909, 0x41a0, 0x4a6c, 0x1, 0x0);
        gbc.writeMem(0xd09d, { 0x9d });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xb79c, gbc.sp());
        EXPECT(0xd09e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xd09d));
        // 9D 0112
        gbc.setState(0x7f29, 0x2017, 0x4710, 0x229a, 0x885d, 0x88ce, 0x0, 0x1);
        gbc.writeMem(0x7f29, { 0x9d });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x2017, gbc.sp());
        EXPECT(0x7f2a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9D 0113
        gbc.setState(0x53ab, 0xc3a0, 0x3810, 0x723f, 0x1931, 0xe11, 0x0, 0x0);
        gbc.writeMem(0x53ab, { 0x9d });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xc3a0, gbc.sp());
        EXPECT(0x53ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9D 0114
        gbc.setState(0x2076, 0xe253, 0xa740, 0x7e5e, 0x21ee, 0xc5fb, 0x0, 0x0);
        gbc.writeMem(0x2076, { 0x9d });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xe253, gbc.sp());
        EXPECT(0x2077, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9D 0115
        gbc.setState(0x561e, 0x7055, 0x9250, 0x2a57, 0x828d, 0xcd4e, 0x0, 0x0);
        gbc.writeMem(0x561e, { 0x9d });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x7055, gbc.sp());
        EXPECT(0x561f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9D 0116
        gbc.setState(0xa026, 0xf0c9, 0x4930, 0xbae5, 0x71c2, 0x3678, 0x0, 0x0);
        gbc.writeMem(0xa026, { 0x9d });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xf0c9, gbc.sp());
        EXPECT(0xa027, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xa026));
        // 9D 0117
        gbc.setState(0xab30, 0xb659, 0xa4c0, 0x53cf, 0x11a3, 0xfac8, 0x0, 0x0);
        gbc.writeMem(0xab30, { 0x9d });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xb659, gbc.sp());
        EXPECT(0xab31, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xab30));
        // 9D 0118
        gbc.setState(0xe93e, 0x41a1, 0x2c90, 0xa988, 0xcc6d, 0x524d, 0x0, 0x0);
        gbc.writeMem(0xe93e, { 0x9d });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x41a1, gbc.sp());
        EXPECT(0xe93f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xe93e));
        // 9D 0119
        gbc.setState(0x81d8, 0xe323, 0xe630, 0x8370, 0x82ec, 0x1f69, 0x1, 0x1);
        gbc.writeMem(0x81d8, { 0x9d });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xe323, gbc.sp());
        EXPECT(0x81d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0x81d8));
        // 9D 011A
        gbc.setState(0x28b0, 0xc973, 0xc780, 0x4e13, 0x2502, 0xf26e, 0x1, 0x1);
        gbc.writeMem(0x28b0, { 0x9d });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xc973, gbc.sp());
        EXPECT(0x28b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9D 011B
        gbc.setState(0x53ac, 0x509e, 0x8a40, 0x4bfb, 0x5df, 0x729d, 0x1, 0x1);
        gbc.writeMem(0x53ac, { 0x9d });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x509e, gbc.sp());
        EXPECT(0x53ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9D 011C
        gbc.setState(0xa0be, 0x20d8, 0x72b0, 0x451e, 0x1397, 0x6d0d, 0x1, 0x0);
        gbc.writeMem(0xa0be, { 0x9d });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x20d8, gbc.sp());
        EXPECT(0xa0bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xa0be));
        // 9D 011D
        gbc.setState(0x31c7, 0x29ac, 0x6c10, 0xb499, 0xde6c, 0x3690, 0x0, 0x0);
        gbc.writeMem(0x31c7, { 0x9d });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x29ac, gbc.sp());
        EXPECT(0x31c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9D 011F
        gbc.setState(0x74f9, 0xa705, 0x1190, 0x7c21, 0x405a, 0xc07f, 0x0, 0x0);
        gbc.writeMem(0x74f9, { 0x9d });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xa705, gbc.sp());
        EXPECT(0x74fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9D 0120
        gbc.setState(0xe141, 0x2c28, 0x6a50, 0xa6da, 0x96fd, 0x24b7, 0x0, 0x1);
        gbc.writeMem(0xe141, { 0x9d });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x2c28, gbc.sp());
        EXPECT(0xe142, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xe141));
        // 9D 0121
        gbc.setState(0xd796, 0x32f8, 0x4ac0, 0x82dc, 0x5feb, 0xc8b0, 0x0, 0x1);
        gbc.writeMem(0xd796, { 0x9d });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x32f8, gbc.sp());
        EXPECT(0xd797, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xd796));
        // 9D 0122
        gbc.setState(0xb50e, 0x4f7a, 0x3fa0, 0xf566, 0x155d, 0x4830, 0x1, 0x1);
        gbc.writeMem(0xb50e, { 0x9d });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x4f7a, gbc.sp());
        EXPECT(0xb50f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xb50e));
        // 9D 0123
        gbc.setState(0xc173, 0x5666, 0x5c0, 0x38dd, 0xb31c, 0xd1ac, 0x1, 0x0);
        gbc.writeMem(0xc173, { 0x9d });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x5666, gbc.sp());
        EXPECT(0xc174, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xc173));
        // 9D 0124
        gbc.setState(0x4c69, 0x3fa1, 0x4ec0, 0x117d, 0x36d5, 0xed29, 0x0, 0x0);
        gbc.writeMem(0x4c69, { 0x9d });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x3fa1, gbc.sp());
        EXPECT(0x4c6a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9D 0125
        gbc.setState(0x1ebf, 0x1b19, 0x2790, 0x3039, 0xc724, 0xadbd, 0x0, 0x1);
        gbc.writeMem(0x1ebf, { 0x9d });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x1b19, gbc.sp());
        EXPECT(0x1ec0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9D 0126
        gbc.setState(0x16de, 0xe93d, 0x6c40, 0xda8a, 0x5046, 0xc58d, 0x0, 0x0);
        gbc.writeMem(0x16de, { 0x9d });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xe93d, gbc.sp());
        EXPECT(0x16df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9D 0127
        gbc.setState(0xce8c, 0xbefc, 0xaab0, 0x66b8, 0x5604, 0xbb0e, 0x1, 0x1);
        gbc.writeMem(0xce8c, { 0x9d });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xbefc, gbc.sp());
        EXPECT(0xce8d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xce8c));
        // 9D 0128
        gbc.setState(0xe5cf, 0xb24b, 0x58f0, 0x2851, 0xa6eb, 0xae9c, 0x1, 0x0);
        gbc.writeMem(0xe5cf, { 0x9d });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xb24b, gbc.sp());
        EXPECT(0xe5d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xe5cf));
        // 9D 0129
        gbc.setState(0xe307, 0xcc0f, 0x65f0, 0x1f51, 0x140, 0xe123, 0x0, 0x0);
        gbc.writeMem(0xe307, { 0x9d });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xcc0f, gbc.sp());
        EXPECT(0xe308, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xe307));
        // 9D 012A
        gbc.setState(0x5e5, 0x6a9e, 0xc090, 0xd109, 0x571b, 0x5384, 0x1, 0x0);
        gbc.writeMem(0x5e5, { 0x9d });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x6a9e, gbc.sp());
        EXPECT(0x5e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9D 012B
        gbc.setState(0xd755, 0x84e2, 0xea00, 0xdff, 0xbfcc, 0xbfc4, 0x1, 0x1);
        gbc.writeMem(0xd755, { 0x9d });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x84e2, gbc.sp());
        EXPECT(0xd756, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xd755));
        // 9D 012C
        gbc.setState(0xc94d, 0xa7ac, 0xb750, 0x7cdd, 0xa07b, 0x45b5, 0x0, 0x1);
        gbc.writeMem(0xc94d, { 0x9d });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xa7ac, gbc.sp());
        EXPECT(0xc94e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xc94d));
        // 9D 012D
        gbc.setState(0x6975, 0x3697, 0x9d10, 0x28ae, 0x5c9a, 0xf311, 0x0, 0x1);
        gbc.writeMem(0x6975, { 0x9d });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x3697, gbc.sp());
        EXPECT(0x6976, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9D 012E
        gbc.setState(0x2960, 0xbbfe, 0x9180, 0x8955, 0xcf84, 0x9b4b, 0x1, 0x1);
        gbc.writeMem(0x2960, { 0x9d });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xbbfe, gbc.sp());
        EXPECT(0x2961, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9D 012F
        gbc.setState(0x6eed, 0x7270, 0xea80, 0xab64, 0x76a7, 0x4b9a, 0x0, 0x1);
        gbc.writeMem(0x6eed, { 0x9d });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x7270, gbc.sp());
        EXPECT(0x6eee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9D 0130
        gbc.setState(0x1a57, 0x3293, 0xa510, 0x6b21, 0xac, 0xbf37, 0x0, 0x1);
        gbc.writeMem(0x1a57, { 0x9d });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x3293, gbc.sp());
        EXPECT(0x1a58, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9D 0131
        gbc.setState(0x4009, 0xf369, 0x3fa0, 0x1b7a, 0x4d86, 0x2ee9, 0x1, 0x1);
        gbc.writeMem(0x4009, { 0x9d });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xf369, gbc.sp());
        EXPECT(0x400a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9D 0132
        gbc.setState(0xe8d1, 0xa4a4, 0x1d90, 0x8243, 0x4f57, 0x8b3d, 0x0, 0x0);
        gbc.writeMem(0xe8d1, { 0x9d });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xa4a4, gbc.sp());
        EXPECT(0xe8d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xe8d1));
        // 9D 0133
        gbc.setState(0x4a43, 0xb1ef, 0xefb0, 0x8b2e, 0x8b74, 0x4718, 0x1, 0x0);
        gbc.writeMem(0x4a43, { 0x9d });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xb1ef, gbc.sp());
        EXPECT(0x4a44, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9D 0134
        gbc.setState(0x9196, 0x65b9, 0xd4c0, 0xf6a0, 0x7080, 0x861e, 0x1, 0x0);
        gbc.writeMem(0x9196, { 0x9d });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x65b9, gbc.sp());
        EXPECT(0x9197, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0x9196));
        // 9D 0135
        gbc.setState(0xdd2f, 0xb6a7, 0x4220, 0x7250, 0x7e7a, 0x8013, 0x0, 0x0);
        gbc.writeMem(0xdd2f, { 0x9d });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xb6a7, gbc.sp());
        EXPECT(0xdd30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xdd2f));
        // 9D 0136
        gbc.setState(0xb8d4, 0x6b98, 0x9140, 0x7f90, 0x36b4, 0xb3fa, 0x0, 0x0);
        gbc.writeMem(0xb8d4, { 0x9d });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x6b98, gbc.sp());
        EXPECT(0xb8d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xb8d4));
        // 9D 0137
        gbc.setState(0xb30b, 0xe2ad, 0xc350, 0x8a98, 0x6d72, 0x1435, 0x0, 0x0);
        gbc.writeMem(0xb30b, { 0x9d });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xe2ad, gbc.sp());
        EXPECT(0xb30c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xb30b));
        // 9D 0138
        gbc.setState(0x7ae7, 0x1c61, 0xf100, 0xbeb3, 0x532f, 0xb99, 0x1, 0x1);
        gbc.writeMem(0x7ae7, { 0x9d });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x1c61, gbc.sp());
        EXPECT(0x7ae8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9D 0139
        gbc.setState(0x1d73, 0x50f9, 0xfd30, 0xb14, 0x3abe, 0xa5fd, 0x1, 0x0);
        gbc.writeMem(0x1d73, { 0x9d });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x50f9, gbc.sp());
        EXPECT(0x1d74, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9D 013A
        gbc.setState(0x1f99, 0x68cd, 0x3300, 0x5709, 0x25b6, 0x99b8, 0x1, 0x1);
        gbc.writeMem(0x1f99, { 0x9d });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x68cd, gbc.sp());
        EXPECT(0x1f9a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9D 013B
        gbc.setState(0x2ff1, 0xf394, 0xd820, 0x2e5c, 0x9ae5, 0x6de9, 0x1, 0x0);
        gbc.writeMem(0x2ff1, { 0x9d });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xf394, gbc.sp());
        EXPECT(0x2ff2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9D 013C
        gbc.setState(0x8ec0, 0x1dbd, 0x6c00, 0x6188, 0xc9d9, 0xdbff, 0x0, 0x0);
        gbc.writeMem(0x8ec0, { 0x9d });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x1dbd, gbc.sp());
        EXPECT(0x8ec1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0x8ec0));
        // 9D 013D
        gbc.setState(0x29fd, 0x192a, 0x9c70, 0x45c7, 0xd210, 0x54a9, 0x1, 0x0);
        gbc.writeMem(0x29fd, { 0x9d });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x192a, gbc.sp());
        EXPECT(0x29fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9D 013E
        gbc.setState(0x5ca4, 0x2ed7, 0xc90, 0x2cdd, 0x4451, 0xf124, 0x0, 0x1);
        gbc.writeMem(0x5ca4, { 0x9d });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x2ed7, gbc.sp());
        EXPECT(0x5ca5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9D 013F
        gbc.setState(0xa261, 0x63f4, 0x1020, 0x268b, 0xed00, 0x5dbe, 0x0, 0x1);
        gbc.writeMem(0xa261, { 0x9d });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x63f4, gbc.sp());
        EXPECT(0xa262, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xa261));
        // 9D 0140
        gbc.setState(0xab90, 0x9b01, 0x68a0, 0x5c64, 0xbe3c, 0xc852, 0x0, 0x0);
        gbc.writeMem(0xab90, { 0x9d });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x9b01, gbc.sp());
        EXPECT(0xab91, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xab90));
        // 9D 0141
        gbc.setState(0x5d99, 0xf63c, 0x9ec0, 0x1134, 0xa702, 0xb07e, 0x0, 0x0);
        gbc.writeMem(0x5d99, { 0x9d });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xf63c, gbc.sp());
        EXPECT(0x5d9a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9D 0142
        gbc.setState(0x5039, 0xc26d, 0x80a0, 0x4013, 0xadee, 0x522c, 0x1, 0x0);
        gbc.writeMem(0x5039, { 0x9d });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xc26d, gbc.sp());
        EXPECT(0x503a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9D 0143
        gbc.setState(0x39b8, 0x8c9b, 0x1d50, 0x6ff, 0x10c8, 0x8329, 0x1, 0x0);
        gbc.writeMem(0x39b8, { 0x9d });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x8c9b, gbc.sp());
        EXPECT(0x39b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9D 0144
        gbc.setState(0x5ec4, 0x9714, 0x96a0, 0xab02, 0xf370, 0x2ab4, 0x0, 0x1);
        gbc.writeMem(0x5ec4, { 0x9d });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x9714, gbc.sp());
        EXPECT(0x5ec5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9D 0145
        gbc.setState(0x3e9b, 0xcb9f, 0xf310, 0x2e5a, 0x502c, 0x60a, 0x1, 0x0);
        gbc.writeMem(0x3e9b, { 0x9d });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xcb9f, gbc.sp());
        EXPECT(0x3e9c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9D 0146
        gbc.setState(0x9e16, 0xdd1f, 0xead0, 0xbffe, 0xce65, 0x856d, 0x0, 0x1);
        gbc.writeMem(0x9e16, { 0x9d });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xdd1f, gbc.sp());
        EXPECT(0x9e17, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0x9e16));
        // 9D 0147
        gbc.setState(0x85c, 0xb1e6, 0x2f40, 0x3aa1, 0xc0af, 0x60ab, 0x0, 0x0);
        gbc.writeMem(0x85c, { 0x9d });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xb1e6, gbc.sp());
        EXPECT(0x85d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9D 0148
        gbc.setState(0x1065, 0x6d55, 0xdf80, 0x3179, 0xb492, 0x9ae, 0x1, 0x0);
        gbc.writeMem(0x1065, { 0x9d });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x6d55, gbc.sp());
        EXPECT(0x1066, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9D 0149
        gbc.setState(0x522d, 0xb969, 0xd030, 0xa314, 0x111b, 0xc5, 0x0, 0x0);
        gbc.writeMem(0x522d, { 0x9d });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xb969, gbc.sp());
        EXPECT(0x522e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9D 014A
        gbc.setState(0x7e73, 0xcb92, 0x8320, 0xbb0b, 0xcef1, 0x5d0e, 0x1, 0x0);
        gbc.writeMem(0x7e73, { 0x9d });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xcb92, gbc.sp());
        EXPECT(0x7e74, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9D 014B
        gbc.setState(0x7289, 0xe69c, 0x6700, 0x151, 0xf8f, 0x754d, 0x1, 0x1);
        gbc.writeMem(0x7289, { 0x9d });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xe69c, gbc.sp());
        EXPECT(0x728a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9D 014C
        gbc.setState(0xe8da, 0x817c, 0x3120, 0xdb2b, 0x51c9, 0x4acb, 0x0, 0x1);
        gbc.writeMem(0xe8da, { 0x9d });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x817c, gbc.sp());
        EXPECT(0xe8db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xe8da));
        // 9D 014D
        gbc.setState(0x69ba, 0x9666, 0xb7c0, 0x6816, 0x4372, 0x789b, 0x1, 0x1);
        gbc.writeMem(0x69ba, { 0x9d });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x9666, gbc.sp());
        EXPECT(0x69bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9D 014E
        gbc.setState(0x585d, 0x9d72, 0x1f10, 0x6d34, 0xfc64, 0x4d2b, 0x1, 0x1);
        gbc.writeMem(0x585d, { 0x9d });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x9d72, gbc.sp());
        EXPECT(0x585e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9D 014F
        gbc.setState(0x8991, 0x94d0, 0x42a0, 0xc6c2, 0x20d6, 0x16f3, 0x0, 0x0);
        gbc.writeMem(0x8991, { 0x9d });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x94d0, gbc.sp());
        EXPECT(0x8992, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0x8991));
        // 9D 0150
        gbc.setState(0xdb01, 0x6b1e, 0xa810, 0x2bd7, 0x460e, 0xf72a, 0x1, 0x0);
        gbc.writeMem(0xdb01, { 0x9d });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x6b1e, gbc.sp());
        EXPECT(0xdb02, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xdb01));
        // 9D 0151
        gbc.setState(0x55f, 0xa01, 0xb3a0, 0x68b5, 0x5c3d, 0xf91c, 0x0, 0x0);
        gbc.writeMem(0x55f, { 0x9d });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xa01, gbc.sp());
        EXPECT(0x560, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9D 0152
        gbc.setState(0xb484, 0x1e70, 0xba00, 0x5483, 0xc13e, 0xc4f, 0x0, 0x1);
        gbc.writeMem(0xb484, { 0x9d });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x1e70, gbc.sp());
        EXPECT(0xb485, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xb484));
        // 9D 0153
        gbc.setState(0xda3d, 0x67bc, 0x6380, 0xb1ab, 0x43cd, 0xaf5f, 0x0, 0x0);
        gbc.writeMem(0xda3d, { 0x9d });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x67bc, gbc.sp());
        EXPECT(0xda3e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xda3d));
        // 9D 0154
        gbc.setState(0xcb3a, 0xc3bc, 0x5010, 0xabd0, 0x1f54, 0x953c, 0x0, 0x1);
        gbc.writeMem(0xcb3a, { 0x9d });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xc3bc, gbc.sp());
        EXPECT(0xcb3b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xcb3a));
        // 9D 0155
        gbc.setState(0x94ff, 0x43a9, 0x96a0, 0x6df7, 0x9dc2, 0x7bfa, 0x0, 0x1);
        gbc.writeMem(0x94ff, { 0x9d });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x43a9, gbc.sp());
        EXPECT(0x9500, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0x94ff));
        // 9D 0156
        gbc.setState(0xd77d, 0x7d17, 0xbcf0, 0xed21, 0xfbb2, 0x3892, 0x0, 0x0);
        gbc.writeMem(0xd77d, { 0x9d });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x7d17, gbc.sp());
        EXPECT(0xd77e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xd77d));
        // 9D 0157
        gbc.setState(0x3cbd, 0x81c3, 0x9850, 0xaaf8, 0x2fbf, 0xa0d1, 0x1, 0x0);
        gbc.writeMem(0x3cbd, { 0x9d });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x81c3, gbc.sp());
        EXPECT(0x3cbe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9D 0158
        gbc.setState(0x3c7c, 0x5371, 0xa200, 0x744b, 0x3d84, 0xf7da, 0x0, 0x0);
        gbc.writeMem(0x3c7c, { 0x9d });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x5371, gbc.sp());
        EXPECT(0x3c7d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9D 0159
        gbc.setState(0x3039, 0xc1ef, 0x2b80, 0xba5d, 0x4c2, 0x1a24, 0x1, 0x1);
        gbc.writeMem(0x3039, { 0x9d });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xc1ef, gbc.sp());
        EXPECT(0x303a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9D 015A
        gbc.setState(0xd2a9, 0x793e, 0x940, 0x3267, 0x82fd, 0xed59, 0x1, 0x1);
        gbc.writeMem(0xd2a9, { 0x9d });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x793e, gbc.sp());
        EXPECT(0xd2aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xd2a9));
        // 9D 015B
        gbc.setState(0x4119, 0xca74, 0x9460, 0x1328, 0xc34, 0x337d, 0x1, 0x1);
        gbc.writeMem(0x4119, { 0x9d });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xca74, gbc.sp());
        EXPECT(0x411a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9D 015C
        gbc.setState(0x4703, 0xeacd, 0xe250, 0xb6be, 0x446, 0xadc, 0x1, 0x1);
        gbc.writeMem(0x4703, { 0x9d });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xeacd, gbc.sp());
        EXPECT(0x4704, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9D 015D
        gbc.setState(0x7648, 0xd914, 0xc250, 0x3764, 0xcb3, 0xde1a, 0x0, 0x0);
        gbc.writeMem(0x7648, { 0x9d });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xd914, gbc.sp());
        EXPECT(0x7649, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9D 015E
        gbc.setState(0x4172, 0x85aa, 0x36b0, 0xf011, 0x2160, 0xf169, 0x1, 0x1);
        gbc.writeMem(0x4172, { 0x9d });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x85aa, gbc.sp());
        EXPECT(0x4173, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9D 015F
        gbc.setState(0xc231, 0x5e2, 0x22b0, 0x1033, 0xe8aa, 0x536b, 0x1, 0x1);
        gbc.writeMem(0xc231, { 0x9d });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x5e2, gbc.sp());
        EXPECT(0xc232, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xc231));
        // 9D 0160
        gbc.setState(0xc5fb, 0xe595, 0xdcb0, 0x20c4, 0xee5f, 0x72fb, 0x0, 0x0);
        gbc.writeMem(0xc5fb, { 0x9d });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xe595, gbc.sp());
        EXPECT(0xc5fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xc5fb));
        // 9D 0161
        gbc.setState(0x2e13, 0xbaad, 0xcfd0, 0x1e4a, 0x7dfe, 0xd226, 0x1, 0x1);
        gbc.writeMem(0x2e13, { 0x9d });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xbaad, gbc.sp());
        EXPECT(0x2e14, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9D 0162
        gbc.setState(0xe25, 0xab12, 0x7860, 0xdd2f, 0x1492, 0x77c1, 0x0, 0x0);
        gbc.writeMem(0xe25, { 0x9d });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xab12, gbc.sp());
        EXPECT(0xe26, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9D 0163
        gbc.setState(0xae90, 0x8967, 0xa640, 0xc6a4, 0xe69a, 0x55, 0x0, 0x0);
        gbc.writeMem(0xae90, { 0x9d });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x8967, gbc.sp());
        EXPECT(0xae91, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xae90));
        // 9D 0164
        gbc.setState(0xd850, 0x917b, 0x4730, 0xfed6, 0x2aa9, 0xe7bf, 0x1, 0x1);
        gbc.writeMem(0xd850, { 0x9d });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x917b, gbc.sp());
        EXPECT(0xd851, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xd850));
        // 9D 0165
        gbc.setState(0x97fb, 0xa14c, 0x28d0, 0xdb93, 0xe55e, 0xc54d, 0x1, 0x1);
        gbc.writeMem(0x97fb, { 0x9d });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xa14c, gbc.sp());
        EXPECT(0x97fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0x97fb));
        // 9D 0166
        gbc.setState(0xa1af, 0xb5f6, 0x5dc0, 0x1dc7, 0x3176, 0x6223, 0x0, 0x0);
        gbc.writeMem(0xa1af, { 0x9d });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xb5f6, gbc.sp());
        EXPECT(0xa1b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xa1af));
        // 9D 0167
        gbc.setState(0x8798, 0xbab0, 0x7b50, 0x3d49, 0xbe4a, 0xd125, 0x1, 0x1);
        gbc.writeMem(0x8798, { 0x9d });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xbab0, gbc.sp());
        EXPECT(0x8799, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0x8798));
        // 9D 0168
        gbc.setState(0xc898, 0xc40a, 0xee90, 0x2ca2, 0x3d5c, 0x9a5d, 0x1, 0x0);
        gbc.writeMem(0xc898, { 0x9d });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xc40a, gbc.sp());
        EXPECT(0xc899, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xc898));
        // 9D 016A
        gbc.setState(0x6ef, 0x68c8, 0x2e80, 0x8ca1, 0x644, 0x8b84, 0x0, 0x1);
        gbc.writeMem(0x6ef, { 0x9d });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x68c8, gbc.sp());
        EXPECT(0x6f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9D 016B
        gbc.setState(0x9eba, 0x7f8e, 0x71d0, 0xb571, 0x93aa, 0x26e7, 0x0, 0x0);
        gbc.writeMem(0x9eba, { 0x9d });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x7f8e, gbc.sp());
        EXPECT(0x9ebb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0x9eba));
        // 9D 016C
        gbc.setState(0x1564, 0xd4ec, 0x3830, 0x57bf, 0x7c46, 0x7c1c, 0x1, 0x0);
        gbc.writeMem(0x1564, { 0x9d });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xd4ec, gbc.sp());
        EXPECT(0x1565, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9D 016D
        gbc.setState(0xdb6d, 0x37ec, 0xe120, 0x9bdc, 0x64aa, 0xb9c7, 0x1, 0x0);
        gbc.writeMem(0xdb6d, { 0x9d });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x37ec, gbc.sp());
        EXPECT(0xdb6e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xdb6d));
        // 9D 016E
        gbc.setState(0xb0c6, 0x3d3a, 0x6430, 0xcf9, 0x83b2, 0x5a5c, 0x0, 0x1);
        gbc.writeMem(0xb0c6, { 0x9d });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x3d3a, gbc.sp());
        EXPECT(0xb0c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xb0c6));
        // 9D 016F
        gbc.setState(0xbe8, 0x1c8f, 0x3bf0, 0xde81, 0x569d, 0xfa30, 0x0, 0x0);
        gbc.writeMem(0xbe8, { 0x9d });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x1c8f, gbc.sp());
        EXPECT(0xbe9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9D 0170
        gbc.setState(0x63b, 0x6b28, 0x9970, 0x4ba8, 0xa3ae, 0xe26d, 0x0, 0x1);
        gbc.writeMem(0x63b, { 0x9d });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x6b28, gbc.sp());
        EXPECT(0x63c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9D 0171
        gbc.setState(0x540e, 0xd2bb, 0xebd0, 0xfc98, 0x68c6, 0x4067, 0x1, 0x1);
        gbc.writeMem(0x540e, { 0x9d });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xd2bb, gbc.sp());
        EXPECT(0x540f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9D 0172
        gbc.setState(0x4f07, 0xe03e, 0x2820, 0xbe0, 0xc841, 0xf4f8, 0x0, 0x1);
        gbc.writeMem(0x4f07, { 0x9d });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xe03e, gbc.sp());
        EXPECT(0x4f08, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9D 0173
        gbc.setState(0xa6f4, 0xe00, 0x8cd0, 0x5295, 0x3c63, 0x5fb3, 0x0, 0x0);
        gbc.writeMem(0xa6f4, { 0x9d });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xe00, gbc.sp());
        EXPECT(0xa6f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xa6f4));
        // 9D 0174
        gbc.setState(0xa055, 0xe36f, 0xab10, 0xee82, 0x3e63, 0xaee4, 0x1, 0x1);
        gbc.writeMem(0xa055, { 0x9d });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xe36f, gbc.sp());
        EXPECT(0xa056, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xa055));
        // 9D 0175
        gbc.setState(0x73c5, 0xcb25, 0x92a0, 0x6f40, 0xac2f, 0x41f4, 0x1, 0x0);
        gbc.writeMem(0x73c5, { 0x9d });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xcb25, gbc.sp());
        EXPECT(0x73c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9D 0176
        gbc.setState(0xcba6, 0x293d, 0x18b0, 0x69ed, 0x9c10, 0x5a2a, 0x1, 0x0);
        gbc.writeMem(0xcba6, { 0x9d });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x293d, gbc.sp());
        EXPECT(0xcba7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xcba6));
        // 9D 0177
        gbc.setState(0x8d2c, 0x387d, 0xb130, 0x3995, 0x30e6, 0x29af, 0x1, 0x1);
        gbc.writeMem(0x8d2c, { 0x9d });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x387d, gbc.sp());
        EXPECT(0x8d2d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0x8d2c));
        // 9D 0178
        gbc.setState(0xd22b, 0x3644, 0x2e0, 0x539b, 0x6b69, 0x5f3f, 0x1, 0x1);
        gbc.writeMem(0xd22b, { 0x9d });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x3644, gbc.sp());
        EXPECT(0xd22c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xd22b));
        // 9D 0179
        gbc.setState(0xed6c, 0x54d8, 0x1d80, 0xc40d, 0x9166, 0x65ce, 0x1, 0x1);
        gbc.writeMem(0xed6c, { 0x9d });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x54d8, gbc.sp());
        EXPECT(0xed6d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xed6c));
        // 9D 017A
        gbc.setState(0x9b5f, 0x5843, 0xb80, 0xe851, 0xb5f, 0x1429, 0x0, 0x0);
        gbc.writeMem(0x9b5f, { 0x9d });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x5843, gbc.sp());
        EXPECT(0x9b60, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0x9b5f));
        // 9D 017B
        gbc.setState(0xc73, 0xe841, 0x4e60, 0x6e19, 0x3ffe, 0x2591, 0x0, 0x1);
        gbc.writeMem(0xc73, { 0x9d });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xe841, gbc.sp());
        EXPECT(0xc74, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9D 017C
        gbc.setState(0x606a, 0xb190, 0x1820, 0x7a15, 0x74f8, 0xce1d, 0x0, 0x0);
        gbc.writeMem(0x606a, { 0x9d });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xb190, gbc.sp());
        EXPECT(0x606b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9D 017D
        gbc.setState(0xe9bb, 0xbb71, 0x6830, 0xb763, 0xf14f, 0x8218, 0x1, 0x0);
        gbc.writeMem(0xe9bb, { 0x9d });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xbb71, gbc.sp());
        EXPECT(0xe9bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xe9bb));
        // 9D 017E
        gbc.setState(0xdf11, 0x40bf, 0xb6e0, 0xaa11, 0xefb3, 0x4793, 0x0, 0x1);
        gbc.writeMem(0xdf11, { 0x9d });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x40bf, gbc.sp());
        EXPECT(0xdf12, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xdf11));
        // 9D 017F
        gbc.setState(0x1111, 0xf91c, 0xe8e0, 0x6b6f, 0xe6ed, 0x450b, 0x0, 0x0);
        gbc.writeMem(0x1111, { 0x9d });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xf91c, gbc.sp());
        EXPECT(0x1112, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9D 0180
        gbc.setState(0x59c3, 0x9938, 0x40a0, 0x5095, 0x27f5, 0x5445, 0x0, 0x0);
        gbc.writeMem(0x59c3, { 0x9d });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x9938, gbc.sp());
        EXPECT(0x59c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9D 0181
        gbc.setState(0xc82d, 0xb70a, 0xf8c0, 0x2f7, 0x2a63, 0x21a1, 0x0, 0x0);
        gbc.writeMem(0xc82d, { 0x9d });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xb70a, gbc.sp());
        EXPECT(0xc82e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xc82d));
        // 9D 0182
        gbc.setState(0xbbd0, 0x7ed, 0x44b0, 0xec1e, 0x8357, 0x474, 0x1, 0x1);
        gbc.writeMem(0xbbd0, { 0x9d });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x7ed, gbc.sp());
        EXPECT(0xbbd1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xbbd0));
        // 9D 0183
        gbc.setState(0x4b14, 0xe2ba, 0x2cb0, 0xd7cd, 0x9f05, 0x6ac5, 0x0, 0x0);
        gbc.writeMem(0x4b14, { 0x9d });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xe2ba, gbc.sp());
        EXPECT(0x4b15, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9D 0184
        gbc.setState(0xad28, 0x9a09, 0x7500, 0x22b9, 0x31f, 0x113b, 0x0, 0x1);
        gbc.writeMem(0xad28, { 0x9d });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x9a09, gbc.sp());
        EXPECT(0xad29, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xad28));
        // 9D 0185
        gbc.setState(0x7532, 0xb512, 0x2c90, 0xd074, 0x7176, 0x6ddf, 0x1, 0x1);
        gbc.writeMem(0x7532, { 0x9d });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xb512, gbc.sp());
        EXPECT(0x7533, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9D 0186
        gbc.setState(0x8ec3, 0x59b0, 0x8230, 0xc158, 0x8dae, 0xad5f, 0x1, 0x0);
        gbc.writeMem(0x8ec3, { 0x9d });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x59b0, gbc.sp());
        EXPECT(0x8ec4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0x8ec3));
        // 9D 0187
        gbc.setState(0x28f5, 0x3371, 0xca30, 0x1f93, 0xed6d, 0xafec, 0x1, 0x0);
        gbc.writeMem(0x28f5, { 0x9d });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x3371, gbc.sp());
        EXPECT(0x28f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9D 0188
        gbc.setState(0xefde, 0x94c4, 0xa470, 0x243b, 0x8fef, 0x2fe1, 0x0, 0x1);
        gbc.writeMem(0xefde, { 0x9d });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x94c4, gbc.sp());
        EXPECT(0xefdf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xefde));
        // 9D 0189
        gbc.setState(0xdcbb, 0xad5a, 0x2500, 0x2ec8, 0x49d4, 0x208c, 0x0, 0x0);
        gbc.writeMem(0xdcbb, { 0x9d });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xad5a, gbc.sp());
        EXPECT(0xdcbc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xdcbb));
        // 9D 018A
        gbc.setState(0x6dda, 0x45ca, 0x7fb0, 0x8c7e, 0xd0c, 0xe6ff, 0x1, 0x1);
        gbc.writeMem(0x6dda, { 0x9d });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x45ca, gbc.sp());
        EXPECT(0x6ddb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9D 018B
        gbc.setState(0x2ab5, 0xc3c4, 0xbde0, 0xb62c, 0x1e3e, 0x2fa4, 0x0, 0x0);
        gbc.writeMem(0x2ab5, { 0x9d });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xc3c4, gbc.sp());
        EXPECT(0x2ab6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9D 018C
        gbc.setState(0xa43b, 0xf2d4, 0x6510, 0x9fd6, 0x96d0, 0xad17, 0x0, 0x0);
        gbc.writeMem(0xa43b, { 0x9d });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xf2d4, gbc.sp());
        EXPECT(0xa43c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xa43b));
        // 9D 018D
        gbc.setState(0xdcb5, 0x79bc, 0x67c0, 0x3d06, 0x21c, 0xafff, 0x1, 0x1);
        gbc.writeMem(0xdcb5, { 0x9d });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x79bc, gbc.sp());
        EXPECT(0xdcb6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xdcb5));
        // 9D 018F
        gbc.setState(0xccd8, 0xf3c1, 0x4b20, 0xf626, 0xd139, 0x463, 0x1, 0x0);
        gbc.writeMem(0xccd8, { 0x9d });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xf3c1, gbc.sp());
        EXPECT(0xccd9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xccd8));
        // 9D 0190
        gbc.setState(0x2949, 0xf2ea, 0x6320, 0x842c, 0x6d7d, 0x1b8d, 0x0, 0x0);
        gbc.writeMem(0x2949, { 0x9d });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xf2ea, gbc.sp());
        EXPECT(0x294a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9D 0191
        gbc.setState(0x12ff, 0xe7f5, 0xa40, 0xf5dc, 0xae6f, 0xbf5a, 0x0, 0x0);
        gbc.writeMem(0x12ff, { 0x9d });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xe7f5, gbc.sp());
        EXPECT(0x1300, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9D 0192
        gbc.setState(0xac95, 0xbcd8, 0x4100, 0x4be2, 0x6543, 0xf626, 0x1, 0x1);
        gbc.writeMem(0xac95, { 0x9d });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xbcd8, gbc.sp());
        EXPECT(0xac96, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xac95));
        // 9D 0193
        gbc.setState(0xb210, 0x2619, 0x2960, 0x70aa, 0x695c, 0x3d01, 0x0, 0x1);
        gbc.writeMem(0xb210, { 0x9d });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x2619, gbc.sp());
        EXPECT(0xb211, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xb210));
        // 9D 0194
        gbc.setState(0x9d56, 0x9ade, 0x1040, 0x654b, 0x6553, 0x552b, 0x1, 0x1);
        gbc.writeMem(0x9d56, { 0x9d });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x9ade, gbc.sp());
        EXPECT(0x9d57, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0x9d56));
        // 9D 0195
        gbc.setState(0x981, 0x61d7, 0x7d40, 0xda5d, 0xdb48, 0xc226, 0x1, 0x0);
        gbc.writeMem(0x981, { 0x9d });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x61d7, gbc.sp());
        EXPECT(0x982, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9D 0196
        gbc.setState(0xd174, 0xcaad, 0xefc0, 0x941f, 0x76e2, 0xcd99, 0x0, 0x1);
        gbc.writeMem(0xd174, { 0x9d });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xcaad, gbc.sp());
        EXPECT(0xd175, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xd174));
        // 9D 0197
        gbc.setState(0xb576, 0x9192, 0xc830, 0xd027, 0xf034, 0xd618, 0x1, 0x0);
        gbc.writeMem(0xb576, { 0x9d });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x9192, gbc.sp());
        EXPECT(0xb577, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xb576));
        // 9D 0198
        gbc.setState(0x7070, 0xc98c, 0x2d80, 0x4ec7, 0x5547, 0xd924, 0x1, 0x0);
        gbc.writeMem(0x7070, { 0x9d });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xc98c, gbc.sp());
        EXPECT(0x7071, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9D 0199
        gbc.setState(0xb1b0, 0x13b1, 0x6310, 0xc6cf, 0x8735, 0x1488, 0x0, 0x1);
        gbc.writeMem(0xb1b0, { 0x9d });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x13b1, gbc.sp());
        EXPECT(0xb1b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xb1b0));
        // 9D 019A
        gbc.setState(0x4e99, 0xb680, 0xdbc0, 0x48f3, 0xb822, 0x94a9, 0x1, 0x1);
        gbc.writeMem(0x4e99, { 0x9d });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xb680, gbc.sp());
        EXPECT(0x4e9a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9D 019B
        gbc.setState(0x9e05, 0x469c, 0x6c30, 0x99ea, 0x364c, 0xf32b, 0x1, 0x0);
        gbc.writeMem(0x9e05, { 0x9d });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x469c, gbc.sp());
        EXPECT(0x9e06, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0x9e05));
        // 9D 019C
        gbc.setState(0x279b, 0x252c, 0xb930, 0x5cfc, 0x7932, 0xf344, 0x1, 0x1);
        gbc.writeMem(0x279b, { 0x9d });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x252c, gbc.sp());
        EXPECT(0x279c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9D 019D
        gbc.setState(0xeef9, 0x9ad7, 0xc6c0, 0x6216, 0x5a4b, 0xe808, 0x0, 0x0);
        gbc.writeMem(0xeef9, { 0x9d });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x9ad7, gbc.sp());
        EXPECT(0xeefa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xeef9));
        // 9D 019F
        gbc.setState(0x9d8d, 0x695a, 0xbe60, 0x88ef, 0xbe58, 0xe88d, 0x0, 0x0);
        gbc.writeMem(0x9d8d, { 0x9d });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x695a, gbc.sp());
        EXPECT(0x9d8e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0x9d8d));
        // 9D 01A0
        gbc.setState(0xb076, 0x10e9, 0xefc0, 0x249e, 0x18dd, 0xa769, 0x0, 0x1);
        gbc.writeMem(0xb076, { 0x9d });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x10e9, gbc.sp());
        EXPECT(0xb077, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xb076));
        // 9D 01A1
        gbc.setState(0x16dc, 0xf42e, 0xcbd0, 0x6cb2, 0xa36b, 0x82f6, 0x0, 0x1);
        gbc.writeMem(0x16dc, { 0x9d });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xf42e, gbc.sp());
        EXPECT(0x16dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9D 01A2
        gbc.setState(0xdb3, 0x711a, 0xf310, 0x840a, 0xce6, 0xdcba, 0x0, 0x1);
        gbc.writeMem(0xdb3, { 0x9d });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x711a, gbc.sp());
        EXPECT(0xdb4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9D 01A3
        gbc.setState(0x9397, 0xe2fc, 0x5dd0, 0xfcc8, 0x4881, 0x4c84, 0x0, 0x0);
        gbc.writeMem(0x9397, { 0x9d });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xe2fc, gbc.sp());
        EXPECT(0x9398, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0x9397));
        // 9D 01A4
        gbc.setState(0x878d, 0x3f99, 0x9990, 0x7ba4, 0x5a29, 0x9328, 0x1, 0x0);
        gbc.writeMem(0x878d, { 0x9d });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x3f99, gbc.sp());
        EXPECT(0x878e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0x878d));
        // 9D 01A5
        gbc.setState(0x58d9, 0xc8f, 0x9170, 0x7703, 0x968c, 0xf377, 0x0, 0x1);
        gbc.writeMem(0x58d9, { 0x9d });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xc8f, gbc.sp());
        EXPECT(0x58da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9D 01A6
        gbc.setState(0xc54, 0x29b4, 0x15c0, 0x73be, 0x5396, 0xa6d8, 0x1, 0x1);
        gbc.writeMem(0xc54, { 0x9d });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x29b4, gbc.sp());
        EXPECT(0xc55, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9D 01A7
        gbc.setState(0xd9ba, 0x5e1d, 0xe470, 0x26c0, 0x6d90, 0xfc0c, 0x0, 0x1);
        gbc.writeMem(0xd9ba, { 0x9d });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x5e1d, gbc.sp());
        EXPECT(0xd9bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xd9ba));
        // 9D 01A8
        gbc.setState(0xcff9, 0xaba5, 0x5b30, 0xa14e, 0x53ff, 0xfe57, 0x1, 0x1);
        gbc.writeMem(0xcff9, { 0x9d });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xaba5, gbc.sp());
        EXPECT(0xcffa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xcff9));
        // 9D 01A9
        gbc.setState(0x10c9, 0x167a, 0xff80, 0x6fe2, 0x231c, 0xc868, 0x0, 0x1);
        gbc.writeMem(0x10c9, { 0x9d });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x167a, gbc.sp());
        EXPECT(0x10ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9D 01AA
        gbc.setState(0x6c9d, 0xc1e5, 0x9180, 0xbabf, 0x2f98, 0xbed3, 0x0, 0x0);
        gbc.writeMem(0x6c9d, { 0x9d });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xc1e5, gbc.sp());
        EXPECT(0x6c9e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9D 01AB
        gbc.setState(0x705, 0xc3c8, 0xd660, 0x8c31, 0x5d99, 0x6a80, 0x1, 0x0);
        gbc.writeMem(0x705, { 0x9d });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xc3c8, gbc.sp());
        EXPECT(0x706, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9D 01AC
        gbc.setState(0x9a08, 0x593f, 0xf450, 0x6607, 0x9d9, 0xdc7c, 0x1, 0x1);
        gbc.writeMem(0x9a08, { 0x9d });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x593f, gbc.sp());
        EXPECT(0x9a09, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0x9a08));
        // 9D 01AD
        gbc.setState(0x316, 0x43f7, 0xa030, 0x3a47, 0x7726, 0xdc45, 0x0, 0x0);
        gbc.writeMem(0x316, { 0x9d });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x43f7, gbc.sp());
        EXPECT(0x317, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9D 01AE
        gbc.setState(0x42a9, 0xe2c2, 0x9a80, 0x70ab, 0x8ee8, 0x7a80, 0x0, 0x0);
        gbc.writeMem(0x42a9, { 0x9d });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xe2c2, gbc.sp());
        EXPECT(0x42aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9D 01AF
        gbc.setState(0x8bbb, 0x1184, 0xf4b0, 0x51f9, 0x41c8, 0xb045, 0x0, 0x1);
        gbc.writeMem(0x8bbb, { 0x9d });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x1184, gbc.sp());
        EXPECT(0x8bbc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0x8bbb));
        // 9D 01B1
        gbc.setState(0x100a, 0xdf75, 0xd3d0, 0x8c59, 0xbd49, 0xe39a, 0x0, 0x0);
        gbc.writeMem(0x100a, { 0x9d });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xdf75, gbc.sp());
        EXPECT(0x100b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9D 01B2
        gbc.setState(0x4b28, 0x3a98, 0xa4c0, 0xcc2a, 0xce94, 0xb87d, 0x0, 0x0);
        gbc.writeMem(0x4b28, { 0x9d });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x3a98, gbc.sp());
        EXPECT(0x4b29, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9D 01B3
        gbc.setState(0x3da4, 0x9078, 0xb250, 0xe5e3, 0x9785, 0x2803, 0x0, 0x1);
        gbc.writeMem(0x3da4, { 0x9d });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x9078, gbc.sp());
        EXPECT(0x3da5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9D 01B4
        gbc.setState(0x2f29, 0xba2a, 0xa00, 0x8e87, 0xe738, 0xe1c5, 0x1, 0x1);
        gbc.writeMem(0x2f29, { 0x9d });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xba2a, gbc.sp());
        EXPECT(0x2f2a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9D 01B6
        gbc.setState(0xc22e, 0x4572, 0x81d0, 0xc7bf, 0xd0f6, 0xd8f5, 0x0, 0x1);
        gbc.writeMem(0xc22e, { 0x9d });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x4572, gbc.sp());
        EXPECT(0xc22f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xc22e));
        // 9D 01B7
        gbc.setState(0xb339, 0x2a50, 0x89c0, 0x6c4, 0xb28b, 0x2015, 0x0, 0x0);
        gbc.writeMem(0xb339, { 0x9d });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x2a50, gbc.sp());
        EXPECT(0xb33a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xb339));
        // 9D 01B8
        gbc.setState(0x58fb, 0x302b, 0x5870, 0x1569, 0x8ffc, 0x5f3c, 0x0, 0x0);
        gbc.writeMem(0x58fb, { 0x9d });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x302b, gbc.sp());
        EXPECT(0x58fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9D 01B9
        gbc.setState(0xd1d9, 0xc596, 0xad80, 0x40af, 0x4024, 0x3147, 0x1, 0x0);
        gbc.writeMem(0xd1d9, { 0x9d });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xc596, gbc.sp());
        EXPECT(0xd1da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xd1d9));
        // 9D 01BA
        gbc.setState(0xaf96, 0xdd76, 0x8d0, 0xeecb, 0x6ff8, 0x544d, 0x1, 0x0);
        gbc.writeMem(0xaf96, { 0x9d });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xdd76, gbc.sp());
        EXPECT(0xaf97, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xaf96));
        // 9D 01BB
        gbc.setState(0x550b, 0x982f, 0xf80, 0x2c43, 0x1b5c, 0x9660, 0x1, 0x0);
        gbc.writeMem(0x550b, { 0x9d });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x982f, gbc.sp());
        EXPECT(0x550c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9D 01BC
        gbc.setState(0x810, 0x7dec, 0x9c20, 0xceeb, 0xd053, 0xe162, 0x1, 0x1);
        gbc.writeMem(0x810, { 0x9d });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x7dec, gbc.sp());
        EXPECT(0x811, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9D 01BD
        gbc.setState(0x18f8, 0x5b75, 0x2a00, 0xa1ef, 0x56a0, 0x80a0, 0x0, 0x1);
        gbc.writeMem(0x18f8, { 0x9d });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x5b75, gbc.sp());
        EXPECT(0x18f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9D 01BE
        gbc.setState(0x94e7, 0xe880, 0xabb0, 0x7225, 0x9da4, 0x11d6, 0x1, 0x0);
        gbc.writeMem(0x94e7, { 0x9d });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xe880, gbc.sp());
        EXPECT(0x94e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0x94e7));
        // 9D 01BF
        gbc.setState(0xd5be, 0xd55c, 0xe270, 0x5458, 0xb864, 0xcb31, 0x0, 0x1);
        gbc.writeMem(0xd5be, { 0x9d });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xd55c, gbc.sp());
        EXPECT(0xd5bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xd5be));
        // 9D 01C0
        gbc.setState(0x81c8, 0x6af, 0x1780, 0x9b38, 0xd7dc, 0x1a79, 0x1, 0x0);
        gbc.writeMem(0x81c8, { 0x9d });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x6af, gbc.sp());
        EXPECT(0x81c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0x81c8));
        // 9D 01C1
        gbc.setState(0xe4bf, 0x79c8, 0x8100, 0x2733, 0x8e17, 0x2b21, 0x1, 0x1);
        gbc.writeMem(0xe4bf, { 0x9d });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x79c8, gbc.sp());
        EXPECT(0xe4c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xe4bf));
        // 9D 01C2
        gbc.setState(0x25fe, 0xf3fb, 0xd8a0, 0x9726, 0x69f2, 0xb677, 0x1, 0x1);
        gbc.writeMem(0x25fe, { 0x9d });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xf3fb, gbc.sp());
        EXPECT(0x25ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9D 01C3
        gbc.setState(0xde2f, 0x272, 0xfa0, 0x579a, 0xe408, 0x9e2e, 0x1, 0x0);
        gbc.writeMem(0xde2f, { 0x9d });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x272, gbc.sp());
        EXPECT(0xde30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xde2f));
        // 9D 01C4
        gbc.setState(0x2ced, 0xc07b, 0x2500, 0xeafd, 0x9fdb, 0x5ccb, 0x1, 0x1);
        gbc.writeMem(0x2ced, { 0x9d });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xc07b, gbc.sp());
        EXPECT(0x2cee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9D 01C5
        gbc.setState(0x9ed7, 0x2b75, 0xe520, 0xadc8, 0xd725, 0x8d9e, 0x0, 0x0);
        gbc.writeMem(0x9ed7, { 0x9d });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x2b75, gbc.sp());
        EXPECT(0x9ed8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0x9ed7));
        // 9D 01C6
        gbc.setState(0xe8cf, 0xf730, 0xb7c0, 0x3587, 0x315f, 0x2866, 0x0, 0x0);
        gbc.writeMem(0xe8cf, { 0x9d });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xf730, gbc.sp());
        EXPECT(0xe8d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xe8cf));
        // 9D 01C7
        gbc.setState(0x9c0c, 0x485e, 0x96c0, 0x1418, 0xe783, 0xbbf7, 0x0, 0x0);
        gbc.writeMem(0x9c0c, { 0x9d });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x485e, gbc.sp());
        EXPECT(0x9c0d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0x9c0c));
        // 9D 01C8
        gbc.setState(0xc3f1, 0x69, 0xdc50, 0xf10b, 0xcc93, 0x691a, 0x0, 0x0);
        gbc.writeMem(0xc3f1, { 0x9d });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x69, gbc.sp());
        EXPECT(0xc3f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xc3f1));
        // 9D 01C9
        gbc.setState(0x7b11, 0x81e3, 0x4ec0, 0xb39c, 0x1d69, 0xde12, 0x1, 0x0);
        gbc.writeMem(0x7b11, { 0x9d });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x81e3, gbc.sp());
        EXPECT(0x7b12, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9D 01CA
        gbc.setState(0x1862, 0x5c6e, 0x7ec0, 0x5708, 0x9bf4, 0x3130, 0x0, 0x0);
        gbc.writeMem(0x1862, { 0x9d });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x5c6e, gbc.sp());
        EXPECT(0x1863, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9D 01CB
        gbc.setState(0x8371, 0xbf93, 0x4150, 0x31aa, 0x86ac, 0x8d5a, 0x1, 0x1);
        gbc.writeMem(0x8371, { 0x9d });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xbf93, gbc.sp());
        EXPECT(0x8372, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0x8371));
        // 9D 01CC
        gbc.setState(0x1ae8, 0xc996, 0xe210, 0xaa11, 0xb0a4, 0x3fab, 0x1, 0x1);
        gbc.writeMem(0x1ae8, { 0x9d });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xc996, gbc.sp());
        EXPECT(0x1ae9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9D 01CE
        gbc.setState(0xba98, 0xcac1, 0x78c0, 0x4ac3, 0x54a5, 0xc058, 0x1, 0x1);
        gbc.writeMem(0xba98, { 0x9d });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xcac1, gbc.sp());
        EXPECT(0xba99, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xba98));
        // 9D 01CF
        gbc.setState(0x6dac, 0xa6af, 0xf160, 0x55b6, 0x11bd, 0x88c4, 0x0, 0x0);
        gbc.writeMem(0x6dac, { 0x9d });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xa6af, gbc.sp());
        EXPECT(0x6dad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9D 01D0
        gbc.setState(0x3afd, 0xe697, 0x8c20, 0xe5e2, 0x337f, 0x8481, 0x1, 0x0);
        gbc.writeMem(0x3afd, { 0x9d });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xe697, gbc.sp());
        EXPECT(0x3afe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9D 01D2
        gbc.setState(0xa714, 0x50cb, 0x2600, 0xabb5, 0x815, 0x5d76, 0x1, 0x1);
        gbc.writeMem(0xa714, { 0x9d });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x50cb, gbc.sp());
        EXPECT(0xa715, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xa714));
        // 9D 01D3
        gbc.setState(0x5573, 0x3808, 0xe60, 0xfbff, 0x58e3, 0x6b20, 0x0, 0x0);
        gbc.writeMem(0x5573, { 0x9d });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x3808, gbc.sp());
        EXPECT(0x5574, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9D 01D4
        gbc.setState(0x1de2, 0xdbe9, 0xe40, 0xa944, 0xb7c5, 0x7364, 0x0, 0x1);
        gbc.writeMem(0x1de2, { 0x9d });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xdbe9, gbc.sp());
        EXPECT(0x1de3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9D 01D5
        gbc.setState(0xe6bc, 0xd2d0, 0x93a0, 0x977f, 0xa37c, 0x7133, 0x0, 0x0);
        gbc.writeMem(0xe6bc, { 0x9d });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xd2d0, gbc.sp());
        EXPECT(0xe6bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xe6bc));
        // 9D 01D6
        gbc.setState(0x143e, 0x31be, 0x1f0, 0x2471, 0x6316, 0x858b, 0x1, 0x0);
        gbc.writeMem(0x143e, { 0x9d });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x31be, gbc.sp());
        EXPECT(0x143f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9D 01D8
        gbc.setState(0xe48f, 0xbef4, 0xdd70, 0xc471, 0x530c, 0x21e1, 0x1, 0x0);
        gbc.writeMem(0xe48f, { 0x9d });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xbef4, gbc.sp());
        EXPECT(0xe490, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xe48f));
        // 9D 01D9
        gbc.setState(0x2e62, 0xa42b, 0x80e0, 0x1fb1, 0x7a3c, 0xcb0e, 0x1, 0x1);
        gbc.writeMem(0x2e62, { 0x9d });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xa42b, gbc.sp());
        EXPECT(0x2e63, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9D 01DA
        gbc.setState(0xe440, 0x7a75, 0x3370, 0xe898, 0xc12, 0xa8bb, 0x0, 0x1);
        gbc.writeMem(0xe440, { 0x9d });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x7a75, gbc.sp());
        EXPECT(0xe441, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xe440));
        // 9D 01DB
        gbc.setState(0x24d0, 0xf002, 0xa5b0, 0x973f, 0xb688, 0x1bbb, 0x1, 0x0);
        gbc.writeMem(0x24d0, { 0x9d });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xf002, gbc.sp());
        EXPECT(0x24d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9D 01DC
        gbc.setState(0x9980, 0xe585, 0x3950, 0x1933, 0xec41, 0x55ae, 0x1, 0x1);
        gbc.writeMem(0x9980, { 0x9d });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xe585, gbc.sp());
        EXPECT(0x9981, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0x9980));
        // 9D 01DD
        gbc.setState(0x99ee, 0x4d1b, 0xfc0, 0x6dc5, 0xfa40, 0xbc19, 0x0, 0x1);
        gbc.writeMem(0x99ee, { 0x9d });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x4d1b, gbc.sp());
        EXPECT(0x99ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0x99ee));
        // 9D 01DE
        gbc.setState(0x6e39, 0xef28, 0x4b30, 0xc584, 0x27cc, 0xd846, 0x1, 0x1);
        gbc.writeMem(0x6e39, { 0x9d });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xef28, gbc.sp());
        EXPECT(0x6e3a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9D 01DF
        gbc.setState(0x95e7, 0x5330, 0xa0a0, 0xccdb, 0x192d, 0x2590, 0x1, 0x1);
        gbc.writeMem(0x95e7, { 0x9d });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x5330, gbc.sp());
        EXPECT(0x95e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0x95e7));
        // 9D 01E0
        gbc.setState(0x2172, 0xe1d4, 0x2760, 0x9cb9, 0xf68d, 0x3dc8, 0x1, 0x1);
        gbc.writeMem(0x2172, { 0x9d });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xe1d4, gbc.sp());
        EXPECT(0x2173, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9D 01E1
        gbc.setState(0xc716, 0x7fa1, 0x4c00, 0x309, 0xca9, 0x5681, 0x0, 0x1);
        gbc.writeMem(0xc716, { 0x9d });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x7fa1, gbc.sp());
        EXPECT(0xc717, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xc716));
        // 9D 01E2
        gbc.setState(0xda08, 0xfc55, 0x8f60, 0x8c8e, 0xd96f, 0xcd51, 0x1, 0x0);
        gbc.writeMem(0xda08, { 0x9d });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xfc55, gbc.sp());
        EXPECT(0xda09, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xda08));
        // 9D 01E3
        gbc.setState(0xefe0, 0x329e, 0x1260, 0xfe80, 0x2e54, 0xc2de, 0x1, 0x1);
        gbc.writeMem(0xefe0, { 0x9d });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x329e, gbc.sp());
        EXPECT(0xefe1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xefe0));
        // 9D 01E4
        gbc.setState(0x3e3d, 0x3a91, 0x330, 0x993a, 0x72d, 0xaa60, 0x0, 0x1);
        gbc.writeMem(0x3e3d, { 0x9d });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x3a91, gbc.sp());
        EXPECT(0x3e3e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9D 01E5
        gbc.setState(0x2b2f, 0x2216, 0x3c90, 0xff52, 0xaa92, 0x3471, 0x0, 0x0);
        gbc.writeMem(0x2b2f, { 0x9d });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x2216, gbc.sp());
        EXPECT(0x2b30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9D 01E6
        gbc.setState(0xb0d3, 0x5039, 0x6520, 0x28f6, 0x4f5c, 0xe4e4, 0x0, 0x0);
        gbc.writeMem(0xb0d3, { 0x9d });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x5039, gbc.sp());
        EXPECT(0xb0d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xb0d3));
        // 9D 01E7
        gbc.setState(0x3492, 0xdb27, 0x6dc0, 0xc1d4, 0x3eb, 0x4205, 0x1, 0x1);
        gbc.writeMem(0x3492, { 0x9d });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xdb27, gbc.sp());
        EXPECT(0x3493, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9D 01E8
        gbc.setState(0x87d1, 0x460c, 0x3770, 0x20cc, 0x1b2a, 0xfcc2, 0x0, 0x1);
        gbc.writeMem(0x87d1, { 0x9d });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x460c, gbc.sp());
        EXPECT(0x87d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0x87d1));
        // 9D 01E9
        gbc.setState(0x3ceb, 0x3050, 0x3840, 0x8244, 0x8486, 0x5e4a, 0x0, 0x1);
        gbc.writeMem(0x3ceb, { 0x9d });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x3050, gbc.sp());
        EXPECT(0x3cec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9D 01EA
        gbc.setState(0x30ee, 0xa771, 0x5bd0, 0xf804, 0x228e, 0xc8f7, 0x1, 0x1);
        gbc.writeMem(0x30ee, { 0x9d });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xa771, gbc.sp());
        EXPECT(0x30ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9D 01EB
        gbc.setState(0x957d, 0x78a0, 0x1870, 0x17a3, 0x9515, 0xfd1f, 0x0, 0x1);
        gbc.writeMem(0x957d, { 0x9d });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x78a0, gbc.sp());
        EXPECT(0x957e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0x957d));
        // 9D 01EC
        gbc.setState(0x319, 0xf8b0, 0xd680, 0x7db1, 0xc48, 0x84cc, 0x1, 0x0);
        gbc.writeMem(0x319, { 0x9d });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xf8b0, gbc.sp());
        EXPECT(0x31a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9D 01EE
        gbc.setState(0x75df, 0x77e2, 0xef20, 0x3cdd, 0x38bf, 0x8bbc, 0x0, 0x1);
        gbc.writeMem(0x75df, { 0x9d });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x77e2, gbc.sp());
        EXPECT(0x75e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9D 01EF
        gbc.setState(0xbc78, 0xdc3e, 0x1720, 0x9989, 0xd15c, 0xb15d, 0x1, 0x1);
        gbc.writeMem(0xbc78, { 0x9d });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xdc3e, gbc.sp());
        EXPECT(0xbc79, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xbc78));
        // 9D 01F0
        gbc.setState(0xeb00, 0x540b, 0x2d30, 0xc86d, 0x7784, 0xad78, 0x1, 0x1);
        gbc.writeMem(0xeb00, { 0x9d });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x540b, gbc.sp());
        EXPECT(0xeb01, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xeb00));
        // 9D 01F1
        gbc.setState(0x3845, 0xe9b1, 0x5dc0, 0x132b, 0x5c84, 0x2a69, 0x1, 0x1);
        gbc.writeMem(0x3845, { 0x9d });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xe9b1, gbc.sp());
        EXPECT(0x3846, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9D 01F2
        gbc.setState(0x3bab, 0x1787, 0x74f0, 0x6c72, 0xf643, 0x67ae, 0x1, 0x1);
        gbc.writeMem(0x3bab, { 0x9d });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x1787, gbc.sp());
        EXPECT(0x3bac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9D 01F3
        gbc.setState(0xa349, 0x82d3, 0x3250, 0x1cd8, 0x1e1a, 0x38fa, 0x0, 0x0);
        gbc.writeMem(0xa349, { 0x9d });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x82d3, gbc.sp());
        EXPECT(0xa34a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xa349));
        // 9D 01F4
        gbc.setState(0x55c, 0x8a, 0x49c0, 0x8c89, 0xe814, 0xad62, 0x1, 0x0);
        gbc.writeMem(0x55c, { 0x9d });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x8a, gbc.sp());
        EXPECT(0x55d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9D 01F5
        gbc.setState(0x4ff, 0xae3d, 0xa970, 0x94ba, 0x2ff3, 0xdc8c, 0x0, 0x1);
        gbc.writeMem(0x4ff, { 0x9d });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xae3d, gbc.sp());
        EXPECT(0x500, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9D 01F6
        gbc.setState(0x6d09, 0xe6ae, 0xc3c0, 0x4dc6, 0x7550, 0xe2c9, 0x0, 0x0);
        gbc.writeMem(0x6d09, { 0x9d });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xe6ae, gbc.sp());
        EXPECT(0x6d0a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9D 01F7
        gbc.setState(0x75a2, 0x217d, 0xa660, 0xe406, 0x368d, 0xf2e4, 0x1, 0x0);
        gbc.writeMem(0x75a2, { 0x9d });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x217d, gbc.sp());
        EXPECT(0x75a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9D 01F8
        gbc.setState(0xc947, 0x98b3, 0x16e0, 0x739a, 0xe52a, 0x22e, 0x1, 0x0);
        gbc.writeMem(0xc947, { 0x9d });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x98b3, gbc.sp());
        EXPECT(0xc948, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xc947));
        // 9D 01FA
        gbc.setState(0xe31, 0xe4af, 0x5e0, 0xbdb2, 0xdc4, 0xa12d, 0x0, 0x1);
        gbc.writeMem(0xe31, { 0x9d });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xe4af, gbc.sp());
        EXPECT(0xe32, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9D 01FB
        gbc.setState(0x2e7e, 0xfe46, 0x71a0, 0x1a84, 0x8312, 0x3533, 0x1, 0x1);
        gbc.writeMem(0x2e7e, { 0x9d });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xfe46, gbc.sp());
        EXPECT(0x2e7f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9D 01FC
        gbc.setState(0x9c9, 0xd53f, 0x9020, 0x2e, 0x6892, 0x449e, 0x1, 0x1);
        gbc.writeMem(0x9c9, { 0x9d });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xd53f, gbc.sp());
        EXPECT(0x9ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9D 01FD
        gbc.setState(0xc46e, 0x6afd, 0xc2c0, 0x7f1b, 0x2f4e, 0x34c3, 0x0, 0x0);
        gbc.writeMem(0xc46e, { 0x9d });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x6afd, gbc.sp());
        EXPECT(0xc46f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xc46e));
        // 9D 01FE
        gbc.setState(0x17e3, 0x11db, 0x91d0, 0x4596, 0x35f6, 0x14ae, 0x0, 0x1);
        gbc.writeMem(0x17e3, { 0x9d });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x11db, gbc.sp());
        EXPECT(0x17e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9D 01FF
        gbc.setState(0x83f8, 0xb528, 0x4a0, 0xfd40, 0x29f1, 0x1f9f, 0x0, 0x1);
        gbc.writeMem(0x83f8, { 0x9d });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xb528, gbc.sp());
        EXPECT(0x83f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0x83f8));
        // 9D 0200
        gbc.setState(0x4708, 0xd09e, 0x6c60, 0x7c27, 0xf002, 0xbd3b, 0x0, 0x0);
        gbc.writeMem(0x4708, { 0x9d });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xd09e, gbc.sp());
        EXPECT(0x4709, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9D 0201
        gbc.setState(0x9a26, 0x7097, 0x7080, 0x9bc2, 0xa583, 0xe365, 0x1, 0x0);
        gbc.writeMem(0x9a26, { 0x9d });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x7097, gbc.sp());
        EXPECT(0x9a27, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0x9a26));
        // 9D 0202
        gbc.setState(0xba09, 0x4722, 0x23e0, 0x3524, 0xb765, 0x23b3, 0x1, 0x0);
        gbc.writeMem(0xba09, { 0x9d });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x4722, gbc.sp());
        EXPECT(0xba0a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xba09));
        // 9D 0203
        gbc.setState(0x435b, 0x64a4, 0x4bc0, 0x9bca, 0xbf3a, 0xb344, 0x0, 0x1);
        gbc.writeMem(0x435b, { 0x9d });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x64a4, gbc.sp());
        EXPECT(0x435c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9D 0204
        gbc.setState(0x634d, 0x8537, 0x1190, 0x6bf8, 0x16c3, 0xb6a2, 0x1, 0x0);
        gbc.writeMem(0x634d, { 0x9d });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x8537, gbc.sp());
        EXPECT(0x634e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9D 0205
        gbc.setState(0x33f1, 0xa508, 0xcd40, 0x7dc8, 0x7076, 0xdd5c, 0x1, 0x1);
        gbc.writeMem(0x33f1, { 0x9d });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xa508, gbc.sp());
        EXPECT(0x33f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9D 0206
        gbc.setState(0x4057, 0xc53e, 0xe240, 0x7d2, 0xaa1, 0x9547, 0x0, 0x0);
        gbc.writeMem(0x4057, { 0x9d });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xc53e, gbc.sp());
        EXPECT(0x4058, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9D 0207
        gbc.setState(0xe3a, 0xd778, 0xdd60, 0x508, 0x4f99, 0x5c24, 0x1, 0x1);
        gbc.writeMem(0xe3a, { 0x9d });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xd778, gbc.sp());
        EXPECT(0xe3b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9D 0208
        gbc.setState(0xe612, 0x5e53, 0xd440, 0x4dfc, 0x191a, 0x37fc, 0x0, 0x1);
        gbc.writeMem(0xe612, { 0x9d });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x5e53, gbc.sp());
        EXPECT(0xe613, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xe612));
        // 9D 0209
        gbc.setState(0x4b5a, 0xdefa, 0xd8d0, 0x9ec7, 0x8bb, 0x32d3, 0x1, 0x0);
        gbc.writeMem(0x4b5a, { 0x9d });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xdefa, gbc.sp());
        EXPECT(0x4b5b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9D 020A
        gbc.setState(0x44fb, 0x61be, 0x88c0, 0x6cb, 0xb642, 0x27ba, 0x0, 0x1);
        gbc.writeMem(0x44fb, { 0x9d });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x61be, gbc.sp());
        EXPECT(0x44fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9D 020C
        gbc.setState(0x2b7e, 0x9fae, 0x5ff0, 0xaeff, 0xd375, 0x5e55, 0x0, 0x0);
        gbc.writeMem(0x2b7e, { 0x9d });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x9fae, gbc.sp());
        EXPECT(0x2b7f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9D 020D
        gbc.setState(0x8adf, 0x3451, 0xf670, 0x32fa, 0xbbaa, 0xcfc7, 0x0, 0x1);
        gbc.writeMem(0x8adf, { 0x9d });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x3451, gbc.sp());
        EXPECT(0x8ae0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0x8adf));
        // 9D 020E
        gbc.setState(0xba0f, 0x7e8b, 0xb2d0, 0x74b5, 0x93e7, 0x1405, 0x0, 0x1);
        gbc.writeMem(0xba0f, { 0x9d });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x7e8b, gbc.sp());
        EXPECT(0xba10, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xba0f));
        // 9D 020F
        gbc.setState(0x9458, 0xceaf, 0x5c70, 0x6f27, 0xe3be, 0x3793, 0x1, 0x0);
        gbc.writeMem(0x9458, { 0x9d });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xceaf, gbc.sp());
        EXPECT(0x9459, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0x9458));
        // 9D 0210
        gbc.setState(0x8f12, 0x169b, 0xc020, 0x24d6, 0xc614, 0xae28, 0x0, 0x0);
        gbc.writeMem(0x8f12, { 0x9d });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x169b, gbc.sp());
        EXPECT(0x8f13, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0x8f12));
        // 9D 0211
        gbc.setState(0xedf7, 0xbbe6, 0xb140, 0x25c5, 0x136d, 0xfa9f, 0x1, 0x1);
        gbc.writeMem(0xedf7, { 0x9d });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xbbe6, gbc.sp());
        EXPECT(0xedf8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xedf7));
        // 9D 0212
        gbc.setState(0x619e, 0xa479, 0x5710, 0xae8d, 0xcd2e, 0x9605, 0x0, 0x0);
        gbc.writeMem(0x619e, { 0x9d });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xa479, gbc.sp());
        EXPECT(0x619f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9D 0214
        gbc.setState(0xefd0, 0x87d2, 0xf170, 0xda23, 0x4561, 0x225d, 0x0, 0x1);
        gbc.writeMem(0xefd0, { 0x9d });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x87d2, gbc.sp());
        EXPECT(0xefd1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xefd0));
        // 9D 0215
        gbc.setState(0xd91a, 0x83bd, 0xa450, 0x567b, 0x2516, 0x2234, 0x1, 0x1);
        gbc.writeMem(0xd91a, { 0x9d });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x83bd, gbc.sp());
        EXPECT(0xd91b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xd91a));
        // 9D 0216
        gbc.setState(0xe104, 0xcd02, 0x4490, 0x9dde, 0x9013, 0xa9d8, 0x1, 0x0);
        gbc.writeMem(0xe104, { 0x9d });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xcd02, gbc.sp());
        EXPECT(0xe105, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xe104));
        // 9D 0217
        gbc.setState(0xef5e, 0x23ed, 0x3a70, 0xb9e6, 0xf1e, 0x5608, 0x0, 0x1);
        gbc.writeMem(0xef5e, { 0x9d });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x23ed, gbc.sp());
        EXPECT(0xef5f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xef5e));
        // 9D 0218
        gbc.setState(0xdfc4, 0x5e23, 0x1da0, 0xb34f, 0x16ac, 0xcd6d, 0x0, 0x0);
        gbc.writeMem(0xdfc4, { 0x9d });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x5e23, gbc.sp());
        EXPECT(0xdfc5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xdfc4));
        // 9D 0219
        gbc.setState(0xc0e, 0xb08f, 0xfda0, 0x1c82, 0x45c0, 0x9cd6, 0x1, 0x0);
        gbc.writeMem(0xc0e, { 0x9d });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xb08f, gbc.sp());
        EXPECT(0xc0f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9D 021A
        gbc.setState(0x9593, 0x5627, 0x8070, 0x25d4, 0xf7b9, 0x41ac, 0x0, 0x1);
        gbc.writeMem(0x9593, { 0x9d });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x5627, gbc.sp());
        EXPECT(0x9594, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0x9593));
        // 9D 021B
        gbc.setState(0x551a, 0x31e1, 0xc030, 0x6b86, 0x24e0, 0x7b90, 0x1, 0x1);
        gbc.writeMem(0x551a, { 0x9d });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x31e1, gbc.sp());
        EXPECT(0x551b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9D 021C
        gbc.setState(0xe8f, 0xe114, 0xed40, 0x6451, 0x5341, 0xbe23, 0x1, 0x0);
        gbc.writeMem(0xe8f, { 0x9d });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xe114, gbc.sp());
        EXPECT(0xe90, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9D 021D
        gbc.setState(0x4f01, 0xc22b, 0x1a70, 0x8b82, 0x7b47, 0xd62b, 0x1, 0x0);
        gbc.writeMem(0x4f01, { 0x9d });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xc22b, gbc.sp());
        EXPECT(0x4f02, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9D 021E
        gbc.setState(0xbb3d, 0xd323, 0x19b0, 0x45da, 0x1393, 0x1369, 0x0, 0x0);
        gbc.writeMem(0xbb3d, { 0x9d });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xd323, gbc.sp());
        EXPECT(0xbb3e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xbb3d));
        // 9D 021F
        gbc.setState(0x8c28, 0x9fba, 0x4050, 0x4df6, 0x2e53, 0x1457, 0x0, 0x1);
        gbc.writeMem(0x8c28, { 0x9d });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x9fba, gbc.sp());
        EXPECT(0x8c29, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0x8c28));
        // 9D 0220
        gbc.setState(0xdd70, 0x2cbe, 0x5d0, 0xc36c, 0xf6dc, 0x3a86, 0x1, 0x1);
        gbc.writeMem(0xdd70, { 0x9d });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x2cbe, gbc.sp());
        EXPECT(0xdd71, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xdd70));
        // 9D 0221
        gbc.setState(0x20fa, 0x7198, 0xc5d0, 0xeb84, 0x1fd3, 0xe5a2, 0x0, 0x0);
        gbc.writeMem(0x20fa, { 0x9d });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x7198, gbc.sp());
        EXPECT(0x20fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9D 0222
        gbc.setState(0x9822, 0x86c1, 0xebb0, 0x3a38, 0x3bff, 0x5371, 0x0, 0x0);
        gbc.writeMem(0x9822, { 0x9d });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x86c1, gbc.sp());
        EXPECT(0x9823, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0x9822));
        // 9D 0223
        gbc.setState(0xd9c5, 0x3105, 0x5b0, 0xa04f, 0x4d35, 0x1723, 0x0, 0x1);
        gbc.writeMem(0xd9c5, { 0x9d });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x3105, gbc.sp());
        EXPECT(0xd9c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xd9c5));
        // 9D 0224
        gbc.setState(0x1086, 0x2cf5, 0xecf0, 0x3ea0, 0x74da, 0x2d11, 0x1, 0x0);
        gbc.writeMem(0x1086, { 0x9d });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x2cf5, gbc.sp());
        EXPECT(0x1087, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9D 0225
        gbc.setState(0x8347, 0xd26c, 0xd290, 0xe39b, 0x87db, 0x61e1, 0x0, 0x1);
        gbc.writeMem(0x8347, { 0x9d });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xd26c, gbc.sp());
        EXPECT(0x8348, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0x8347));
        // 9D 0226
        gbc.setState(0xea61, 0x269, 0xebe0, 0x879d, 0x14f0, 0x9f07, 0x0, 0x1);
        gbc.writeMem(0xea61, { 0x9d });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x269, gbc.sp());
        EXPECT(0xea62, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xea61));
        // 9D 0227
        gbc.setState(0x2fcd, 0x719d, 0xc100, 0x43bb, 0xd412, 0x6155, 0x1, 0x0);
        gbc.writeMem(0x2fcd, { 0x9d });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x719d, gbc.sp());
        EXPECT(0x2fce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9D 0228
        gbc.setState(0x1f18, 0x666a, 0x65a0, 0x47fa, 0x89a8, 0x331a, 0x1, 0x1);
        gbc.writeMem(0x1f18, { 0x9d });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x666a, gbc.sp());
        EXPECT(0x1f19, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9D 0229
        gbc.setState(0x5604, 0x218e, 0x3970, 0x19da, 0x2b8c, 0xf6c1, 0x1, 0x0);
        gbc.writeMem(0x5604, { 0x9d });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x218e, gbc.sp());
        EXPECT(0x5605, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9D 022A
        gbc.setState(0xd350, 0x6bcd, 0xb8f0, 0x29a5, 0x4355, 0xc244, 0x1, 0x0);
        gbc.writeMem(0xd350, { 0x9d });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x6bcd, gbc.sp());
        EXPECT(0xd351, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xd350));
        // 9D 022B
        gbc.setState(0x7090, 0xef47, 0x88b0, 0xb1da, 0x89d2, 0xfe9a, 0x0, 0x1);
        gbc.writeMem(0x7090, { 0x9d });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xef47, gbc.sp());
        EXPECT(0x7091, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9D 022C
        gbc.setState(0xce9, 0x3272, 0x4230, 0x916e, 0x38d1, 0xebcf, 0x0, 0x1);
        gbc.writeMem(0xce9, { 0x9d });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x3272, gbc.sp());
        EXPECT(0xcea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9D 022D
        gbc.setState(0x5ab1, 0x80c1, 0x4a0, 0x38b, 0xacdd, 0x6706, 0x0, 0x0);
        gbc.writeMem(0x5ab1, { 0x9d });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x80c1, gbc.sp());
        EXPECT(0x5ab2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9D 022F
        gbc.setState(0x7bd9, 0xe6d6, 0xa120, 0xe0f6, 0x16b9, 0x1196, 0x0, 0x1);
        gbc.writeMem(0x7bd9, { 0x9d });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xe6d6, gbc.sp());
        EXPECT(0x7bda, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9D 0230
        gbc.setState(0x90a1, 0xe92, 0xdb0, 0x9ef8, 0xf3ac, 0x68e0, 0x0, 0x1);
        gbc.writeMem(0x90a1, { 0x9d });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xe92, gbc.sp());
        EXPECT(0x90a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0x90a1));
        // 9D 0231
        gbc.setState(0x60e4, 0x69ef, 0x13f0, 0xb09b, 0xf67c, 0x5d8d, 0x0, 0x1);
        gbc.writeMem(0x60e4, { 0x9d });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x69ef, gbc.sp());
        EXPECT(0x60e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9D 0232
        gbc.setState(0x1b0c, 0x6d54, 0xe80, 0xc0b9, 0xb7b6, 0xa436, 0x0, 0x0);
        gbc.writeMem(0x1b0c, { 0x9d });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x6d54, gbc.sp());
        EXPECT(0x1b0d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9D 0233
        gbc.setState(0x9f3c, 0xd744, 0x50c0, 0xd61a, 0xae3d, 0x4e50, 0x1, 0x1);
        gbc.writeMem(0x9f3c, { 0x9d });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xd744, gbc.sp());
        EXPECT(0x9f3d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0x9f3c));
        // 9D 0234
        gbc.setState(0xbf3b, 0x44f0, 0x1340, 0x214e, 0xc37d, 0xb8cd, 0x0, 0x0);
        gbc.writeMem(0xbf3b, { 0x9d });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x44f0, gbc.sp());
        EXPECT(0xbf3c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xbf3b));
        // 9D 0235
        gbc.setState(0x1202, 0x27c6, 0x6520, 0xf1c4, 0x3369, 0xef27, 0x0, 0x0);
        gbc.writeMem(0x1202, { 0x9d });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x27c6, gbc.sp());
        EXPECT(0x1203, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9D 0236
        gbc.setState(0x3256, 0xd87b, 0x2160, 0xf89e, 0x4be1, 0x1a84, 0x0, 0x1);
        gbc.writeMem(0x3256, { 0x9d });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xd87b, gbc.sp());
        EXPECT(0x3257, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9D 0237
        gbc.setState(0x8aae, 0xef74, 0xbf80, 0xcec3, 0x74b, 0x9460, 0x0, 0x1);
        gbc.writeMem(0x8aae, { 0x9d });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xef74, gbc.sp());
        EXPECT(0x8aaf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0x8aae));
        // 9D 0238
        gbc.setState(0x2b34, 0xc7f2, 0x78f0, 0x9438, 0xacd4, 0xf223, 0x1, 0x0);
        gbc.writeMem(0x2b34, { 0x9d });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xc7f2, gbc.sp());
        EXPECT(0x2b35, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9D 0239
        gbc.setState(0x1ff6, 0x2369, 0xe520, 0xabde, 0xbdf9, 0xc0dd, 0x1, 0x1);
        gbc.writeMem(0x1ff6, { 0x9d });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x2369, gbc.sp());
        EXPECT(0x1ff7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9D 023A
        gbc.setState(0xc1fd, 0x2ffe, 0x6a70, 0xa43e, 0x1072, 0xcc7f, 0x0, 0x0);
        gbc.writeMem(0xc1fd, { 0x9d });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x2ffe, gbc.sp());
        EXPECT(0xc1fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xc1fd));
        // 9D 023B
        gbc.setState(0x2a1b, 0xb4a2, 0x3480, 0x96a0, 0xfaf, 0x755a, 0x1, 0x1);
        gbc.writeMem(0x2a1b, { 0x9d });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xb4a2, gbc.sp());
        EXPECT(0x2a1c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9D 023C
        gbc.setState(0x4a09, 0x7894, 0x4ab0, 0x19e1, 0xd680, 0xea78, 0x0, 0x1);
        gbc.writeMem(0x4a09, { 0x9d });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x7894, gbc.sp());
        EXPECT(0x4a0a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9D 023D
        gbc.setState(0x75e7, 0xcf27, 0x30, 0x8afe, 0x66fd, 0xd981, 0x0, 0x0);
        gbc.writeMem(0x75e7, { 0x9d });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xcf27, gbc.sp());
        EXPECT(0x75e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9D 023E
        gbc.setState(0x693e, 0x802, 0xb150, 0x2207, 0xa8ba, 0x3f69, 0x0, 0x1);
        gbc.writeMem(0x693e, { 0x9d });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x802, gbc.sp());
        EXPECT(0x693f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9D 023F
        gbc.setState(0x1c05, 0x23cc, 0x4540, 0x5bcc, 0x7a91, 0xa242, 0x0, 0x0);
        gbc.writeMem(0x1c05, { 0x9d });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x23cc, gbc.sp());
        EXPECT(0x1c06, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9D 0240
        gbc.setState(0xea72, 0xdb5e, 0x9790, 0xfa71, 0xdf1e, 0x67e6, 0x1, 0x1);
        gbc.writeMem(0xea72, { 0x9d });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xdb5e, gbc.sp());
        EXPECT(0xea73, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xea72));
        // 9D 0242
        gbc.setState(0x3d91, 0xc3ea, 0x5d60, 0x1240, 0xb175, 0xcae5, 0x1, 0x1);
        gbc.writeMem(0x3d91, { 0x9d });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xc3ea, gbc.sp());
        EXPECT(0x3d92, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9D 0243
        gbc.setState(0x3e49, 0x4e57, 0x2030, 0x574b, 0xe1a3, 0xaf08, 0x0, 0x0);
        gbc.writeMem(0x3e49, { 0x9d });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x4e57, gbc.sp());
        EXPECT(0x3e4a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9D 0244
        gbc.setState(0x65ef, 0x3af7, 0xd5b0, 0x782, 0x4d02, 0xc0fc, 0x1, 0x0);
        gbc.writeMem(0x65ef, { 0x9d });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x3af7, gbc.sp());
        EXPECT(0x65f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9D 0245
        gbc.setState(0xaec9, 0xdb4d, 0xdd60, 0xc96, 0x9e99, 0x7079, 0x0, 0x0);
        gbc.writeMem(0xaec9, { 0x9d });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xdb4d, gbc.sp());
        EXPECT(0xaeca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xaec9));
        // 9D 0246
        gbc.setState(0x9a22, 0x6a5f, 0xbed0, 0xcc0a, 0x25bd, 0x1af7, 0x1, 0x0);
        gbc.writeMem(0x9a22, { 0x9d });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x6a5f, gbc.sp());
        EXPECT(0x9a23, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0x9a22));
        // 9D 0247
        gbc.setState(0xc60, 0x9bcf, 0x7db0, 0x5823, 0xe69b, 0xdef7, 0x0, 0x0);
        gbc.writeMem(0xc60, { 0x9d });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x9bcf, gbc.sp());
        EXPECT(0xc61, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9D 0248
        gbc.setState(0x806f, 0xf1bd, 0x2910, 0x637e, 0xab3c, 0x7bf, 0x0, 0x1);
        gbc.writeMem(0x806f, { 0x9d });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xf1bd, gbc.sp());
        EXPECT(0x8070, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0x806f));
        // 9D 0249
        gbc.setState(0xcaf2, 0x791d, 0x8e30, 0xb910, 0x9731, 0x219a, 0x0, 0x0);
        gbc.writeMem(0xcaf2, { 0x9d });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x791d, gbc.sp());
        EXPECT(0xcaf3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xcaf2));
        // 9D 024A
        gbc.setState(0x1ad3, 0xbdb4, 0xb320, 0x1309, 0x69bd, 0xcba6, 0x0, 0x0);
        gbc.writeMem(0x1ad3, { 0x9d });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xbdb4, gbc.sp());
        EXPECT(0x1ad4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9D 024B
        gbc.setState(0x39fc, 0x6d51, 0xf3d0, 0xee97, 0xbbca, 0xb743, 0x1, 0x0);
        gbc.writeMem(0x39fc, { 0x9d });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x6d51, gbc.sp());
        EXPECT(0x39fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9D 024D
        gbc.setState(0x56e4, 0xf813, 0x3280, 0xf158, 0x5699, 0xa317, 0x1, 0x0);
        gbc.writeMem(0x56e4, { 0x9d });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xf813, gbc.sp());
        EXPECT(0x56e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9D 024E
        gbc.setState(0x4553, 0x9206, 0x73a0, 0xa3a9, 0x787a, 0x558d, 0x0, 0x1);
        gbc.writeMem(0x4553, { 0x9d });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x9206, gbc.sp());
        EXPECT(0x4554, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9D 024F
        gbc.setState(0x648c, 0x5688, 0x6620, 0x39a3, 0x1fc8, 0x49df, 0x1, 0x0);
        gbc.writeMem(0x648c, { 0x9d });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x5688, gbc.sp());
        EXPECT(0x648d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9D 0250
        gbc.setState(0x74dd, 0xdcfd, 0x1980, 0x3683, 0x3aff, 0x1da1, 0x0, 0x1);
        gbc.writeMem(0x74dd, { 0x9d });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xdcfd, gbc.sp());
        EXPECT(0x74de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9D 0251
        gbc.setState(0x844b, 0x58ce, 0x6c40, 0x2103, 0x8390, 0x6469, 0x1, 0x1);
        gbc.writeMem(0x844b, { 0x9d });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x58ce, gbc.sp());
        EXPECT(0x844c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0x844b));
        // 9D 0252
        gbc.setState(0x192c, 0x24be, 0x4dd0, 0x82fa, 0x5e59, 0xeadc, 0x1, 0x1);
        gbc.writeMem(0x192c, { 0x9d });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x24be, gbc.sp());
        EXPECT(0x192d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9D 0254
        gbc.setState(0x905b, 0x16df, 0x7b0, 0xd811, 0x759d, 0x1bad, 0x1, 0x1);
        gbc.writeMem(0x905b, { 0x9d });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x16df, gbc.sp());
        EXPECT(0x905c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0x905b));
        // 9D 0255
        gbc.setState(0xb234, 0xe1b6, 0xd900, 0x8064, 0x1ba5, 0xc246, 0x0, 0x1);
        gbc.writeMem(0xb234, { 0x9d });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xe1b6, gbc.sp());
        EXPECT(0xb235, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xb234));
        // 9D 0256
        gbc.setState(0xb4fb, 0x1c37, 0x4c40, 0xb639, 0x139a, 0xd0b2, 0x0, 0x1);
        gbc.writeMem(0xb4fb, { 0x9d });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x1c37, gbc.sp());
        EXPECT(0xb4fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xb4fb));
        // 9D 0257
        gbc.setState(0xc17d, 0x647, 0xfb10, 0x73be, 0x9014, 0xab17, 0x1, 0x0);
        gbc.writeMem(0xc17d, { 0x9d });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x647, gbc.sp());
        EXPECT(0xc17e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xc17d));
        // 9D 0258
        gbc.setState(0x15c, 0x1ea6, 0x6800, 0x94ad, 0xe5d5, 0xb79d, 0x0, 0x1);
        gbc.writeMem(0x15c, { 0x9d });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x1ea6, gbc.sp());
        EXPECT(0x15d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9D 0259
        gbc.setState(0xbe96, 0xaa25, 0x28e0, 0xa2d9, 0x2026, 0x48ff, 0x1, 0x1);
        gbc.writeMem(0xbe96, { 0x9d });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xaa25, gbc.sp());
        EXPECT(0xbe97, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xbe96));
        // 9D 025A
        gbc.setState(0x4a8e, 0xc802, 0x3680, 0x8046, 0x85f9, 0xc861, 0x1, 0x1);
        gbc.writeMem(0x4a8e, { 0x9d });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xc802, gbc.sp());
        EXPECT(0x4a8f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9D 025B
        gbc.setState(0x6c83, 0xbbf9, 0x1930, 0xf656, 0x47a2, 0x396e, 0x1, 0x0);
        gbc.writeMem(0x6c83, { 0x9d });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xbbf9, gbc.sp());
        EXPECT(0x6c84, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9D 025C
        gbc.setState(0xd96e, 0x5fcd, 0xdb60, 0xe9b, 0x574b, 0x50df, 0x1, 0x0);
        gbc.writeMem(0xd96e, { 0x9d });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x5fcd, gbc.sp());
        EXPECT(0xd96f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xd96e));
        // 9D 025D
        gbc.setState(0x11da, 0x929f, 0x7000, 0xf42f, 0x2b46, 0x72c1, 0x1, 0x1);
        gbc.writeMem(0x11da, { 0x9d });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x929f, gbc.sp());
        EXPECT(0x11db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9D 025E
        gbc.setState(0x1ec1, 0x1bdd, 0xa670, 0x8ff9, 0xc3d3, 0x3d8e, 0x1, 0x1);
        gbc.writeMem(0x1ec1, { 0x9d });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x1bdd, gbc.sp());
        EXPECT(0x1ec2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9D 025F
        gbc.setState(0x6435, 0xfe56, 0x4890, 0x8094, 0x53cc, 0x76b3, 0x0, 0x1);
        gbc.writeMem(0x6435, { 0x9d });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xfe56, gbc.sp());
        EXPECT(0x6436, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9D 0260
        gbc.setState(0x12f8, 0x8f58, 0x910, 0x6e6c, 0x492d, 0xd1c3, 0x1, 0x0);
        gbc.writeMem(0x12f8, { 0x9d });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x8f58, gbc.sp());
        EXPECT(0x12f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9D 0261
        gbc.setState(0x6525, 0x2d73, 0x6590, 0x6a87, 0x7764, 0x4b8f, 0x1, 0x0);
        gbc.writeMem(0x6525, { 0x9d });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x2d73, gbc.sp());
        EXPECT(0x6526, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9D 0262
        gbc.setState(0xe274, 0xe586, 0xe370, 0x15fe, 0x879e, 0xdabd, 0x1, 0x0);
        gbc.writeMem(0xe274, { 0x9d });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xe586, gbc.sp());
        EXPECT(0xe275, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xe274));
        // 9D 0263
        gbc.setState(0x1d29, 0xeb33, 0x6240, 0xb773, 0x59cd, 0x30b1, 0x1, 0x1);
        gbc.writeMem(0x1d29, { 0x9d });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xeb33, gbc.sp());
        EXPECT(0x1d2a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9D 0264
        gbc.setState(0x4b1, 0x3719, 0xfa00, 0x2e45, 0xdca3, 0xe2db, 0x1, 0x1);
        gbc.writeMem(0x4b1, { 0x9d });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x3719, gbc.sp());
        EXPECT(0x4b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9D 0265
        gbc.setState(0x8190, 0x883d, 0xd470, 0x7a2c, 0xc7b2, 0x2b38, 0x1, 0x0);
        gbc.writeMem(0x8190, { 0x9d });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x883d, gbc.sp());
        EXPECT(0x8191, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0x8190));
        // 9D 0266
        gbc.setState(0x21be, 0x49f0, 0x8eb0, 0x4d16, 0x1616, 0x721a, 0x1, 0x1);
        gbc.writeMem(0x21be, { 0x9d });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x49f0, gbc.sp());
        EXPECT(0x21bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9D 0267
        gbc.setState(0x85b, 0xb6ba, 0x20f0, 0xb85, 0xcff2, 0x4b38, 0x0, 0x1);
        gbc.writeMem(0x85b, { 0x9d });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xb6ba, gbc.sp());
        EXPECT(0x85c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9D 0268
        gbc.setState(0x8916, 0x62f3, 0xa250, 0x460d, 0x1953, 0x5ade, 0x1, 0x0);
        gbc.writeMem(0x8916, { 0x9d });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x62f3, gbc.sp());
        EXPECT(0x8917, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0x8916));
        // 9D 0269
        gbc.setState(0x4551, 0xecbc, 0x6f60, 0xc8bf, 0xfc60, 0x97c6, 0x0, 0x1);
        gbc.writeMem(0x4551, { 0x9d });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xecbc, gbc.sp());
        EXPECT(0x4552, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9D 026A
        gbc.setState(0x10fb, 0x3608, 0x79e0, 0x8771, 0x9a8e, 0x5663, 0x1, 0x1);
        gbc.writeMem(0x10fb, { 0x9d });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x3608, gbc.sp());
        EXPECT(0x10fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9D 026B
        gbc.setState(0x1707, 0x4bc6, 0xb410, 0x1d08, 0xb87b, 0x260d, 0x1, 0x0);
        gbc.writeMem(0x1707, { 0x9d });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x4bc6, gbc.sp());
        EXPECT(0x1708, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9D 026C
        gbc.setState(0x2e7c, 0x4b88, 0x9470, 0x3ca1, 0x81e5, 0xe08c, 0x0, 0x0);
        gbc.writeMem(0x2e7c, { 0x9d });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x4b88, gbc.sp());
        EXPECT(0x2e7d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9D 026E
        gbc.setState(0xeba6, 0xadfb, 0xdb70, 0x753c, 0xc2d4, 0x4e8f, 0x1, 0x0);
        gbc.writeMem(0xeba6, { 0x9d });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xadfb, gbc.sp());
        EXPECT(0xeba7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xeba6));
        // 9D 026F
        gbc.setState(0x3c32, 0x793d, 0x2b0, 0x6c43, 0x1ce3, 0xc0ad, 0x0, 0x1);
        gbc.writeMem(0x3c32, { 0x9d });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x793d, gbc.sp());
        EXPECT(0x3c33, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9D 0271
        gbc.setState(0x245e, 0xdd82, 0xdc10, 0xfbc4, 0xc67, 0x741a, 0x1, 0x0);
        gbc.writeMem(0x245e, { 0x9d });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xdd82, gbc.sp());
        EXPECT(0x245f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9D 0272
        gbc.setState(0x9263, 0xbc5b, 0x5690, 0x3821, 0xcb41, 0x29e, 0x0, 0x1);
        gbc.writeMem(0x9263, { 0x9d });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xbc5b, gbc.sp());
        EXPECT(0x9264, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0x9263));
        // 9D 0273
        gbc.setState(0xa3d6, 0x2424, 0x3780, 0x980f, 0x475b, 0x1c4f, 0x0, 0x1);
        gbc.writeMem(0xa3d6, { 0x9d });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x2424, gbc.sp());
        EXPECT(0xa3d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xa3d6));
        // 9D 0274
        gbc.setState(0xaaa4, 0xad10, 0x8f20, 0xf0cb, 0x2cfd, 0xe4cf, 0x0, 0x1);
        gbc.writeMem(0xaaa4, { 0x9d });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xad10, gbc.sp());
        EXPECT(0xaaa5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xaaa4));
        // 9D 0275
        gbc.setState(0xd20c, 0x898b, 0xc4f0, 0x6344, 0x97a4, 0x3b25, 0x1, 0x0);
        gbc.writeMem(0xd20c, { 0x9d });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x898b, gbc.sp());
        EXPECT(0xd20d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xd20c));
        // 9D 0276
        gbc.setState(0x9730, 0x3b0, 0x8630, 0xfc74, 0x3fa5, 0x4f25, 0x1, 0x0);
        gbc.writeMem(0x9730, { 0x9d });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x3b0, gbc.sp());
        EXPECT(0x9731, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0x9730));
        // 9D 0277
        gbc.setState(0xeab3, 0x2558, 0x89b0, 0x9014, 0x46df, 0x8431, 0x1, 0x0);
        gbc.writeMem(0xeab3, { 0x9d });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x2558, gbc.sp());
        EXPECT(0xeab4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xeab3));
        // 9D 0278
        gbc.setState(0x3ad7, 0xec7d, 0xcfa0, 0x6b57, 0x83d6, 0xe7e, 0x1, 0x1);
        gbc.writeMem(0x3ad7, { 0x9d });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xec7d, gbc.sp());
        EXPECT(0x3ad8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9D 0279
        gbc.setState(0xe8bd, 0x6b5, 0x90e0, 0xe5, 0x5b81, 0x1d3a, 0x0, 0x1);
        gbc.writeMem(0xe8bd, { 0x9d });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x6b5, gbc.sp());
        EXPECT(0xe8be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xe8bd));
        // 9D 027A
        gbc.setState(0x566a, 0x8d5c, 0x3060, 0xe061, 0x7960, 0x5d42, 0x1, 0x0);
        gbc.writeMem(0x566a, { 0x9d });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x8d5c, gbc.sp());
        EXPECT(0x566b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9D 027B
        gbc.setState(0x45bf, 0xef46, 0x6e70, 0x8e64, 0xa6de, 0xd3df, 0x1, 0x0);
        gbc.writeMem(0x45bf, { 0x9d });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xef46, gbc.sp());
        EXPECT(0x45c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9D 027C
        gbc.setState(0x11bb, 0xa49e, 0xda60, 0xc3a0, 0x5852, 0xafee, 0x1, 0x0);
        gbc.writeMem(0x11bb, { 0x9d });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xa49e, gbc.sp());
        EXPECT(0x11bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9D 027D
        gbc.setState(0xded8, 0xf4f4, 0xd190, 0x2e58, 0xaf3d, 0x6b32, 0x0, 0x0);
        gbc.writeMem(0xded8, { 0x9d });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xf4f4, gbc.sp());
        EXPECT(0xded9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xded8));
        // 9D 027E
        gbc.setState(0x9c5b, 0xc5ac, 0x3ed0, 0xe89a, 0x578f, 0xe3b3, 0x1, 0x0);
        gbc.writeMem(0x9c5b, { 0x9d });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xc5ac, gbc.sp());
        EXPECT(0x9c5c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0x9c5b));
        // 9D 027F
        gbc.setState(0x8a41, 0xd5a8, 0x3d0, 0xcf5d, 0xc8e4, 0x2477, 0x1, 0x0);
        gbc.writeMem(0x8a41, { 0x9d });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xd5a8, gbc.sp());
        EXPECT(0x8a42, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0x8a41));
        // 9D 0280
        gbc.setState(0x49c4, 0xc8a3, 0x7ce0, 0x95a2, 0x7db, 0xeccf, 0x0, 0x1);
        gbc.writeMem(0x49c4, { 0x9d });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xc8a3, gbc.sp());
        EXPECT(0x49c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9D 0281
        gbc.setState(0x762a, 0xd512, 0xa3c0, 0x746a, 0x9ec3, 0x9ee3, 0x1, 0x0);
        gbc.writeMem(0x762a, { 0x9d });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xd512, gbc.sp());
        EXPECT(0x762b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9D 0282
        gbc.setState(0x429d, 0xa1d7, 0xd930, 0xbc25, 0xe545, 0xf99c, 0x0, 0x0);
        gbc.writeMem(0x429d, { 0x9d });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xa1d7, gbc.sp());
        EXPECT(0x429e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9D 0283
        gbc.setState(0xbeb8, 0x419c, 0x4b20, 0x7ce8, 0x9f5c, 0xc986, 0x1, 0x1);
        gbc.writeMem(0xbeb8, { 0x9d });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x419c, gbc.sp());
        EXPECT(0xbeb9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xbeb8));
        // 9D 0284
        gbc.setState(0xa10e, 0x6b48, 0x50d0, 0x6f5f, 0x4169, 0xe9b2, 0x0, 0x0);
        gbc.writeMem(0xa10e, { 0x9d });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x6b48, gbc.sp());
        EXPECT(0xa10f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xa10e));
        // 9D 0285
        gbc.setState(0xe51, 0xb942, 0x940, 0x875d, 0x3b6f, 0xd777, 0x1, 0x0);
        gbc.writeMem(0xe51, { 0x9d });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xb942, gbc.sp());
        EXPECT(0xe52, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9D 0286
        gbc.setState(0xb51f, 0x91c9, 0x7910, 0xefab, 0xe913, 0xd838, 0x1, 0x0);
        gbc.writeMem(0xb51f, { 0x9d });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x91c9, gbc.sp());
        EXPECT(0xb520, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xb51f));
        // 9D 0287
        gbc.setState(0xee8d, 0x3c09, 0x5b20, 0x6b6e, 0x9ae8, 0x43bc, 0x1, 0x0);
        gbc.writeMem(0xee8d, { 0x9d });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x3c09, gbc.sp());
        EXPECT(0xee8e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xee8d));
        // 9D 0288
        gbc.setState(0x5b20, 0x3bf1, 0x5310, 0x9bc1, 0x49bd, 0x2b22, 0x0, 0x0);
        gbc.writeMem(0x5b20, { 0x9d });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x3bf1, gbc.sp());
        EXPECT(0x5b21, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9D 0289
        gbc.setState(0x3408, 0xfb8e, 0xb8c0, 0x2145, 0xfdad, 0x8417, 0x1, 0x0);
        gbc.writeMem(0x3408, { 0x9d });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xfb8e, gbc.sp());
        EXPECT(0x3409, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9D 028A
        gbc.setState(0xc6e, 0xd9cb, 0x6a40, 0x94cd, 0xe87f, 0x3c69, 0x1, 0x0);
        gbc.writeMem(0xc6e, { 0x9d });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xd9cb, gbc.sp());
        EXPECT(0xc6f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9D 028B
        gbc.setState(0x3287, 0x1a59, 0x52a0, 0xacc3, 0x7567, 0x2ce6, 0x0, 0x1);
        gbc.writeMem(0x3287, { 0x9d });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x1a59, gbc.sp());
        EXPECT(0x3288, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9D 028C
        gbc.setState(0xd9c9, 0x8425, 0x44c0, 0xff1c, 0x2683, 0x42bc, 0x1, 0x0);
        gbc.writeMem(0xd9c9, { 0x9d });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x8425, gbc.sp());
        EXPECT(0xd9ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xd9c9));
        // 9D 028E
        gbc.setState(0x9774, 0x832d, 0x6eb0, 0x515b, 0x9bca, 0x4b26, 0x0, 0x1);
        gbc.writeMem(0x9774, { 0x9d });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x832d, gbc.sp());
        EXPECT(0x9775, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0x9774));
        // 9D 0290
        gbc.setState(0x49ab, 0x6c45, 0xcd40, 0x6574, 0x84a7, 0x49f5, 0x0, 0x0);
        gbc.writeMem(0x49ab, { 0x9d });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x6c45, gbc.sp());
        EXPECT(0x49ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9D 0291
        gbc.setState(0x7d5e, 0xb446, 0x6050, 0x2da4, 0x2b02, 0x2854, 0x0, 0x1);
        gbc.writeMem(0x7d5e, { 0x9d });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xb446, gbc.sp());
        EXPECT(0x7d5f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9D 0292
        gbc.setState(0x8165, 0xd0e8, 0x8c60, 0x8c13, 0xd1bf, 0xe0d9, 0x1, 0x1);
        gbc.writeMem(0x8165, { 0x9d });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xd0e8, gbc.sp());
        EXPECT(0x8166, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0x8165));
        // 9D 0293
        gbc.setState(0x3daf, 0xfdbf, 0xdab0, 0x6ca6, 0x5d83, 0x2d2f, 0x0, 0x1);
        gbc.writeMem(0x3daf, { 0x9d });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xfdbf, gbc.sp());
        EXPECT(0x3db0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9D 0294
        gbc.setState(0x37fb, 0x77e4, 0xf930, 0xa003, 0xe836, 0x4991, 0x1, 0x0);
        gbc.writeMem(0x37fb, { 0x9d });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x77e4, gbc.sp());
        EXPECT(0x37fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9D 0295
        gbc.setState(0x3006, 0xd438, 0x1de0, 0x2dea, 0xf6f4, 0x713c, 0x1, 0x0);
        gbc.writeMem(0x3006, { 0x9d });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xd438, gbc.sp());
        EXPECT(0x3007, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9D 0296
        gbc.setState(0x73bc, 0x756, 0x15a0, 0x1ad5, 0xadbc, 0x7eac, 0x0, 0x1);
        gbc.writeMem(0x73bc, { 0x9d });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x756, gbc.sp());
        EXPECT(0x73bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9D 0297
        gbc.setState(0x6448, 0x4402, 0x62f0, 0xab21, 0xadaa, 0x973, 0x0, 0x0);
        gbc.writeMem(0x6448, { 0x9d });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x4402, gbc.sp());
        EXPECT(0x6449, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9D 0298
        gbc.setState(0xa611, 0x6272, 0xc260, 0x95a6, 0x842c, 0x2939, 0x0, 0x1);
        gbc.writeMem(0xa611, { 0x9d });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x6272, gbc.sp());
        EXPECT(0xa612, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xa611));
        // 9D 0299
        gbc.setState(0xec9, 0xddad, 0xf80, 0x102, 0x5e98, 0xc8e4, 0x1, 0x1);
        gbc.writeMem(0xec9, { 0x9d });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xddad, gbc.sp());
        EXPECT(0xeca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9D 029A
        gbc.setState(0xa319, 0x29cb, 0xbe90, 0xc9b3, 0x15c7, 0x4b1a, 0x0, 0x0);
        gbc.writeMem(0xa319, { 0x9d });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x29cb, gbc.sp());
        EXPECT(0xa31a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xa319));
        // 9D 029B
        gbc.setState(0xc960, 0x6add, 0xd870, 0x29f6, 0x89bc, 0xe1fb, 0x0, 0x1);
        gbc.writeMem(0xc960, { 0x9d });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x6add, gbc.sp());
        EXPECT(0xc961, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xc960));
        // 9D 029C
        gbc.setState(0xd53e, 0xaa0b, 0x2010, 0x80a5, 0x1f94, 0x4de, 0x1, 0x1);
        gbc.writeMem(0xd53e, { 0x9d });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xaa0b, gbc.sp());
        EXPECT(0xd53f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xd53e));
        // 9D 029D
        gbc.setState(0xe148, 0x20be, 0xea20, 0x4b2, 0x5795, 0x52a, 0x0, 0x0);
        gbc.writeMem(0xe148, { 0x9d });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x20be, gbc.sp());
        EXPECT(0xe149, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xe148));
        // 9D 029E
        gbc.setState(0x9012, 0x3d16, 0xa0c0, 0x52d5, 0xa0d8, 0x7d38, 0x0, 0x0);
        gbc.writeMem(0x9012, { 0x9d });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x3d16, gbc.sp());
        EXPECT(0x9013, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0x9012));
        // 9D 029F
        gbc.setState(0x67bb, 0xda8b, 0x5430, 0xf4ae, 0x3e9e, 0x63df, 0x0, 0x1);
        gbc.writeMem(0x67bb, { 0x9d });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xda8b, gbc.sp());
        EXPECT(0x67bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9D 02A0
        gbc.setState(0x74a1, 0xb4b7, 0xa6a0, 0xc4cc, 0x314e, 0x997a, 0x1, 0x1);
        gbc.writeMem(0x74a1, { 0x9d });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xb4b7, gbc.sp());
        EXPECT(0x74a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9D 02A1
        gbc.setState(0x1f4f, 0x48bd, 0x3910, 0x37b3, 0x4ee2, 0x1b6a, 0x1, 0x0);
        gbc.writeMem(0x1f4f, { 0x9d });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x48bd, gbc.sp());
        EXPECT(0x1f50, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9D 02A2
        gbc.setState(0x6a31, 0x6769, 0xf980, 0x6544, 0xce92, 0xec7e, 0x1, 0x0);
        gbc.writeMem(0x6a31, { 0x9d });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x6769, gbc.sp());
        EXPECT(0x6a32, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9D 02A3
        gbc.setState(0x136c, 0xfce5, 0xb750, 0x24d9, 0xbe92, 0x67d8, 0x0, 0x1);
        gbc.writeMem(0x136c, { 0x9d });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xfce5, gbc.sp());
        EXPECT(0x136d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9D 02A4
        gbc.setState(0x6dac, 0xe703, 0x25f0, 0x528, 0x50ab, 0xe774, 0x0, 0x0);
        gbc.writeMem(0x6dac, { 0x9d });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xe703, gbc.sp());
        EXPECT(0x6dad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9D 02A5
        gbc.setState(0x6a11, 0x3546, 0x9420, 0xa388, 0x8158, 0x3ade, 0x0, 0x1);
        gbc.writeMem(0x6a11, { 0x9d });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x3546, gbc.sp());
        EXPECT(0x6a12, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9D 02A6
        gbc.setState(0xd945, 0x6006, 0x87e0, 0x32b7, 0x35da, 0x3ae0, 0x1, 0x1);
        gbc.writeMem(0xd945, { 0x9d });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x6006, gbc.sp());
        EXPECT(0xd946, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xd945));
        // 9D 02A8
        gbc.setState(0x13f5, 0xc10a, 0xa070, 0x737a, 0xabf9, 0xf551, 0x0, 0x0);
        gbc.writeMem(0x13f5, { 0x9d });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xc10a, gbc.sp());
        EXPECT(0x13f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9D 02A9
        gbc.setState(0x3b5e, 0xe086, 0x45e0, 0xfc56, 0x120c, 0xa6c7, 0x1, 0x0);
        gbc.writeMem(0x3b5e, { 0x9d });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xe086, gbc.sp());
        EXPECT(0x3b5f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9D 02AA
        gbc.setState(0x556f, 0x7232, 0x9850, 0x474c, 0x714, 0x7372, 0x1, 0x1);
        gbc.writeMem(0x556f, { 0x9d });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x7232, gbc.sp());
        EXPECT(0x5570, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9D 02AB
        gbc.setState(0xab16, 0x5ed1, 0x22c0, 0x9ad1, 0x917c, 0xccc0, 0x1, 0x1);
        gbc.writeMem(0xab16, { 0x9d });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x5ed1, gbc.sp());
        EXPECT(0xab17, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xab16));
        // 9D 02AC
        gbc.setState(0x18df, 0xab35, 0x3460, 0xa07a, 0x3d35, 0xa548, 0x1, 0x0);
        gbc.writeMem(0x18df, { 0x9d });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xab35, gbc.sp());
        EXPECT(0x18e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9D 02AE
        gbc.setState(0xd2a4, 0x3fc, 0xe20, 0xea8b, 0x3c68, 0x95d3, 0x1, 0x1);
        gbc.writeMem(0xd2a4, { 0x9d });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x3fc, gbc.sp());
        EXPECT(0xd2a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xd2a4));
        // 9D 02AF
        gbc.setState(0x775a, 0x5dcf, 0x7760, 0xcfdc, 0x4f2b, 0xe19c, 0x0, 0x1);
        gbc.writeMem(0x775a, { 0x9d });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x5dcf, gbc.sp());
        EXPECT(0x775b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9D 02B0
        gbc.setState(0xd130, 0xbf7d, 0x7950, 0x188b, 0x9ba6, 0x3e2d, 0x0, 0x1);
        gbc.writeMem(0xd130, { 0x9d });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xbf7d, gbc.sp());
        EXPECT(0xd131, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xd130));
        // 9D 02B2
        gbc.setState(0x255b, 0x5565, 0x5420, 0xfd86, 0x13b3, 0x86ca, 0x0, 0x0);
        gbc.writeMem(0x255b, { 0x9d });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x5565, gbc.sp());
        EXPECT(0x255c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9D 02B3
        gbc.setState(0x1cd, 0x613c, 0xcf10, 0x9a5e, 0xafaf, 0x36f7, 0x1, 0x0);
        gbc.writeMem(0x1cd, { 0x9d });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x613c, gbc.sp());
        EXPECT(0x1ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9D 02B4
        gbc.setState(0x1992, 0xb9ee, 0x4170, 0x5da2, 0x5d05, 0xc36e, 0x1, 0x0);
        gbc.writeMem(0x1992, { 0x9d });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xb9ee, gbc.sp());
        EXPECT(0x1993, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9D 02B7
        gbc.setState(0xe5dc, 0xa5ea, 0x6870, 0x302e, 0x59a0, 0x94e1, 0x1, 0x0);
        gbc.writeMem(0xe5dc, { 0x9d });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xa5ea, gbc.sp());
        EXPECT(0xe5dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xe5dc));
        // 9D 02B8
        gbc.setState(0xe283, 0xf394, 0xe440, 0x6227, 0x91fd, 0xc974, 0x0, 0x0);
        gbc.writeMem(0xe283, { 0x9d });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xf394, gbc.sp());
        EXPECT(0xe284, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xe283));
        // 9D 02B9
        gbc.setState(0x8c5e, 0xa468, 0x2b50, 0x1fac, 0x7b1e, 0x2882, 0x1, 0x0);
        gbc.writeMem(0x8c5e, { 0x9d });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xa468, gbc.sp());
        EXPECT(0x8c5f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0x8c5e));
        // 9D 02BA
        gbc.setState(0x2f, 0xbb7c, 0x2550, 0x57ad, 0x33be, 0x277a, 0x1, 0x1);
        gbc.writeMem(0x2f, { 0x9d });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xbb7c, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9D 02BB
        gbc.setState(0x19d5, 0x42ce, 0x6310, 0xe989, 0x23da, 0xa6d5, 0x1, 0x1);
        gbc.writeMem(0x19d5, { 0x9d });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x42ce, gbc.sp());
        EXPECT(0x19d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9D 02BE
        gbc.setState(0xe267, 0x78e6, 0xee50, 0xac4, 0x5b08, 0xad7, 0x0, 0x1);
        gbc.writeMem(0xe267, { 0x9d });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x78e6, gbc.sp());
        EXPECT(0xe268, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xe267));
        // 9D 02BF
        gbc.setState(0xd624, 0x99a7, 0xc40, 0x2248, 0xf2f4, 0xc29f, 0x0, 0x1);
        gbc.writeMem(0xd624, { 0x9d });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x99a7, gbc.sp());
        EXPECT(0xd625, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xd624));
        // 9D 02C0
        gbc.setState(0x3122, 0x4b63, 0x3380, 0xf618, 0x35f8, 0x8298, 0x0, 0x0);
        gbc.writeMem(0x3122, { 0x9d });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x4b63, gbc.sp());
        EXPECT(0x3123, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9D 02C1
        gbc.setState(0x4ae5, 0xe70, 0x8940, 0x1a13, 0x8144, 0x44de, 0x0, 0x0);
        gbc.writeMem(0x4ae5, { 0x9d });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xe70, gbc.sp());
        EXPECT(0x4ae6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9D 02C2
        gbc.setState(0x342b, 0x7492, 0x40e0, 0x32b6, 0x7154, 0x5703, 0x0, 0x1);
        gbc.writeMem(0x342b, { 0x9d });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x7492, gbc.sp());
        EXPECT(0x342c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9D 02C3
        gbc.setState(0x8c8e, 0x73f6, 0x87b0, 0x9a13, 0xdbc4, 0xe16d, 0x1, 0x0);
        gbc.writeMem(0x8c8e, { 0x9d });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x73f6, gbc.sp());
        EXPECT(0x8c8f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0x8c8e));
        // 9D 02C4
        gbc.setState(0x866b, 0x9714, 0x4c60, 0x718e, 0x89ae, 0xfcb5, 0x0, 0x0);
        gbc.writeMem(0x866b, { 0x9d });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x9714, gbc.sp());
        EXPECT(0x866c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0x866b));
        // 9D 02C5
        gbc.setState(0x4728, 0xac78, 0x97b0, 0x551d, 0xfa53, 0xabd8, 0x0, 0x0);
        gbc.writeMem(0x4728, { 0x9d });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xac78, gbc.sp());
        EXPECT(0x4729, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9D 02C6
        gbc.setState(0x138e, 0x7a8, 0xdad0, 0x7ff, 0x81f6, 0xe1e9, 0x1, 0x0);
        gbc.writeMem(0x138e, { 0x9d });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x7a8, gbc.sp());
        EXPECT(0x138f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9D 02C7
        gbc.setState(0x41ec, 0x976b, 0xa90, 0x8d6b, 0xd185, 0xb99b, 0x0, 0x0);
        gbc.writeMem(0x41ec, { 0x9d });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x976b, gbc.sp());
        EXPECT(0x41ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9D 02C8
        gbc.setState(0x385d, 0xe671, 0x9fa0, 0x76d2, 0xf88c, 0x1cf4, 0x1, 0x1);
        gbc.writeMem(0x385d, { 0x9d });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xe671, gbc.sp());
        EXPECT(0x385e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9D 02C9
        gbc.setState(0xb4b4, 0x254b, 0xb2f0, 0x1b1e, 0xc115, 0x5956, 0x1, 0x1);
        gbc.writeMem(0xb4b4, { 0x9d });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x254b, gbc.sp());
        EXPECT(0xb4b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xb4b4));
        // 9D 02CA
        gbc.setState(0xaf8c, 0x9686, 0xa0f0, 0x37a7, 0xe7cf, 0x8d48, 0x1, 0x0);
        gbc.writeMem(0xaf8c, { 0x9d });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x9686, gbc.sp());
        EXPECT(0xaf8d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xaf8c));
        // 9D 02CC
        gbc.setState(0x2840, 0x1e75, 0x61e0, 0xd7ec, 0xb467, 0x692, 0x0, 0x0);
        gbc.writeMem(0x2840, { 0x9d });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x1e75, gbc.sp());
        EXPECT(0x2841, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9D 02CD
        gbc.setState(0xa89, 0x7de2, 0x6790, 0x4b52, 0x83e2, 0xab55, 0x0, 0x0);
        gbc.writeMem(0xa89, { 0x9d });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x7de2, gbc.sp());
        EXPECT(0xa8a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9D 02CE
        gbc.setState(0xa9af, 0x4c02, 0xf560, 0xdd72, 0x9bd2, 0x58cc, 0x0, 0x1);
        gbc.writeMem(0xa9af, { 0x9d });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x4c02, gbc.sp());
        EXPECT(0xa9b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xa9af));
        // 9D 02CF
        gbc.setState(0x4b11, 0xaad6, 0x8010, 0x686a, 0xca38, 0xed1e, 0x0, 0x0);
        gbc.writeMem(0x4b11, { 0x9d });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xaad6, gbc.sp());
        EXPECT(0x4b12, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9D 02D0
        gbc.setState(0x68da, 0x5632, 0x5000, 0x5680, 0x716d, 0x5acd, 0x0, 0x1);
        gbc.writeMem(0x68da, { 0x9d });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x5632, gbc.sp());
        EXPECT(0x68db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9D 02D1
        gbc.setState(0x51c7, 0xe466, 0x4a10, 0xfe18, 0xa9ac, 0xdbfe, 0x1, 0x0);
        gbc.writeMem(0x51c7, { 0x9d });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xe466, gbc.sp());
        EXPECT(0x51c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9D 02D2
        gbc.setState(0x5664, 0xe9f6, 0x4fc0, 0x449b, 0xbe55, 0x3d38, 0x0, 0x1);
        gbc.writeMem(0x5664, { 0x9d });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xe9f6, gbc.sp());
        EXPECT(0x5665, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9D 02D3
        gbc.setState(0x3678, 0xdbc5, 0x6310, 0xe8cf, 0x9151, 0x1a46, 0x0, 0x0);
        gbc.writeMem(0x3678, { 0x9d });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xdbc5, gbc.sp());
        EXPECT(0x3679, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9D 02D4
        gbc.setState(0x8cee, 0x4f63, 0x6330, 0xb7cc, 0xeaae, 0x87b3, 0x0, 0x1);
        gbc.writeMem(0x8cee, { 0x9d });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x4f63, gbc.sp());
        EXPECT(0x8cef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0x8cee));
        // 9D 02D6
        gbc.setState(0xb2c2, 0x5cfc, 0xecf0, 0x1792, 0xedb, 0xd6d2, 0x0, 0x1);
        gbc.writeMem(0xb2c2, { 0x9d });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x5cfc, gbc.sp());
        EXPECT(0xb2c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xb2c2));
        // 9D 02D7
        gbc.setState(0xcbd1, 0xe3f, 0xcb50, 0x116c, 0xae02, 0xae61, 0x1, 0x0);
        gbc.writeMem(0xcbd1, { 0x9d });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xe3f, gbc.sp());
        EXPECT(0xcbd2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xcbd1));
        // 9D 02D8
        gbc.setState(0x1da6, 0xe7d, 0x5180, 0x9ec9, 0xc621, 0x22dd, 0x1, 0x1);
        gbc.writeMem(0x1da6, { 0x9d });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xe7d, gbc.sp());
        EXPECT(0x1da7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9D 02D9
        gbc.setState(0xcea, 0x4ee0, 0x3930, 0xd23f, 0x7b3a, 0xd45, 0x1, 0x0);
        gbc.writeMem(0xcea, { 0x9d });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x4ee0, gbc.sp());
        EXPECT(0xceb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9D 02DA
        gbc.setState(0x3573, 0x7277, 0x6f40, 0xc267, 0x93d, 0x1dd1, 0x0, 0x1);
        gbc.writeMem(0x3573, { 0x9d });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x7277, gbc.sp());
        EXPECT(0x3574, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9D 02DB
        gbc.setState(0x3c7a, 0x4fb2, 0xf400, 0xa998, 0x99a0, 0x2e8b, 0x1, 0x1);
        gbc.writeMem(0x3c7a, { 0x9d });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x4fb2, gbc.sp());
        EXPECT(0x3c7b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9D 02DC
        gbc.setState(0xe4ec, 0xfe4a, 0x5410, 0xd93f, 0xce73, 0xf44f, 0x0, 0x1);
        gbc.writeMem(0xe4ec, { 0x9d });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xfe4a, gbc.sp());
        EXPECT(0xe4ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xe4ec));
        // 9D 02DD
        gbc.setState(0xb7d6, 0xeae5, 0x350, 0x6655, 0x8aa8, 0x96d0, 0x0, 0x0);
        gbc.writeMem(0xb7d6, { 0x9d });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xeae5, gbc.sp());
        EXPECT(0xb7d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xb7d6));
        // 9D 02DE
        gbc.setState(0xaa33, 0xbfcf, 0x6060, 0x48f6, 0xda5d, 0x2f5c, 0x1, 0x0);
        gbc.writeMem(0xaa33, { 0x9d });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xbfcf, gbc.sp());
        EXPECT(0xaa34, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xaa33));
        // 9D 02DF
        gbc.setState(0xd625, 0xe91d, 0xe00, 0xf0a, 0x5e9, 0xfd33, 0x1, 0x0);
        gbc.writeMem(0xd625, { 0x9d });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xe91d, gbc.sp());
        EXPECT(0xd626, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xd625));
        // 9D 02E0
        gbc.setState(0xed90, 0x2b04, 0xc670, 0xf7bd, 0xa528, 0xb4c6, 0x1, 0x1);
        gbc.writeMem(0xed90, { 0x9d });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x2b04, gbc.sp());
        EXPECT(0xed91, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xed90));
        // 9D 02E1
        gbc.setState(0xdc2, 0x503a, 0xd2b0, 0x2cf8, 0x54bc, 0x8a05, 0x1, 0x1);
        gbc.writeMem(0xdc2, { 0x9d });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x503a, gbc.sp());
        EXPECT(0xdc3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9D 02E2
        gbc.setState(0xa919, 0x7286, 0x9c90, 0x91b, 0x7402, 0xea72, 0x0, 0x1);
        gbc.writeMem(0xa919, { 0x9d });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x7286, gbc.sp());
        EXPECT(0xa91a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xa919));
        // 9D 02E3
        gbc.setState(0x95be, 0x110, 0x9d60, 0xe88d, 0x60ed, 0xb109, 0x0, 0x1);
        gbc.writeMem(0x95be, { 0x9d });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x110, gbc.sp());
        EXPECT(0x95bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0x95be));
        // 9D 02E4
        gbc.setState(0xdc0e, 0x9fd0, 0x70b0, 0xb78b, 0xd73e, 0xa0c7, 0x0, 0x1);
        gbc.writeMem(0xdc0e, { 0x9d });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x9fd0, gbc.sp());
        EXPECT(0xdc0f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xdc0e));
        // 9D 02E5
        gbc.setState(0xeeb5, 0x49c0, 0x6bd0, 0xf230, 0xa268, 0xbba9, 0x0, 0x0);
        gbc.writeMem(0xeeb5, { 0x9d });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x49c0, gbc.sp());
        EXPECT(0xeeb6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xeeb5));
        // 9D 02E6
        gbc.setState(0xb9d9, 0x894e, 0x59b0, 0x37fc, 0x17d7, 0xbc02, 0x0, 0x0);
        gbc.writeMem(0xb9d9, { 0x9d });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x894e, gbc.sp());
        EXPECT(0xb9da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xb9d9));
        // 9D 02E8
        gbc.setState(0x2d4c, 0x908c, 0x38b0, 0xf9af, 0x9af0, 0x418a, 0x0, 0x1);
        gbc.writeMem(0x2d4c, { 0x9d });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x908c, gbc.sp());
        EXPECT(0x2d4d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9D 02EA
        gbc.setState(0xd2c1, 0x345, 0x3010, 0x7199, 0xc9ca, 0x986f, 0x1, 0x1);
        gbc.writeMem(0xd2c1, { 0x9d });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x345, gbc.sp());
        EXPECT(0xd2c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xd2c1));
        // 9D 02EB
        gbc.setState(0x90f7, 0x2ff6, 0xae50, 0xb116, 0xff40, 0x4e67, 0x1, 0x1);
        gbc.writeMem(0x90f7, { 0x9d });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x2ff6, gbc.sp());
        EXPECT(0x90f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0x90f7));
        // 9D 02EC
        gbc.setState(0x9c40, 0xabda, 0xa470, 0x37e, 0x1d1d, 0xdb1e, 0x0, 0x0);
        gbc.writeMem(0x9c40, { 0x9d });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xabda, gbc.sp());
        EXPECT(0x9c41, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0x9c40));
        // 9D 02ED
        gbc.setState(0x6cd9, 0xc062, 0x65b0, 0xbf78, 0xf75a, 0xf9d2, 0x1, 0x1);
        gbc.writeMem(0x6cd9, { 0x9d });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xc062, gbc.sp());
        EXPECT(0x6cda, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9D 02EE
        gbc.setState(0x604d, 0x8bf9, 0xfe90, 0x88bd, 0x69d4, 0xcc20, 0x1, 0x1);
        gbc.writeMem(0x604d, { 0x9d });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x8bf9, gbc.sp());
        EXPECT(0x604e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9D 02EF
        gbc.setState(0xef28, 0x4c39, 0xdfa0, 0x7b4c, 0xe820, 0xeb14, 0x1, 0x1);
        gbc.writeMem(0xef28, { 0x9d });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x4c39, gbc.sp());
        EXPECT(0xef29, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xef28));
        // 9D 02F0
        gbc.setState(0x9b4b, 0x2814, 0x630, 0x1d48, 0x80dd, 0xca9d, 0x0, 0x1);
        gbc.writeMem(0x9b4b, { 0x9d });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x2814, gbc.sp());
        EXPECT(0x9b4c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0x9b4b));
        // 9D 02F1
        gbc.setState(0x88d1, 0xf7a1, 0x6650, 0x967d, 0x479e, 0x81e4, 0x1, 0x1);
        gbc.writeMem(0x88d1, { 0x9d });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xf7a1, gbc.sp());
        EXPECT(0x88d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0x88d1));
        // 9D 02F2
        gbc.setState(0xd356, 0xe040, 0xd4a0, 0x15de, 0x1003, 0x3fbf, 0x1, 0x1);
        gbc.writeMem(0xd356, { 0x9d });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xe040, gbc.sp());
        EXPECT(0xd357, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xd356));
        // 9D 02F3
        gbc.setState(0x3584, 0xe03b, 0xb5d0, 0xeeaf, 0xf579, 0x6381, 0x1, 0x1);
        gbc.writeMem(0x3584, { 0x9d });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xe03b, gbc.sp());
        EXPECT(0x3585, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9D 02F4
        gbc.setState(0x86c3, 0x174b, 0x830, 0xc2fc, 0x5a5a, 0x8764, 0x1, 0x0);
        gbc.writeMem(0x86c3, { 0x9d });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x174b, gbc.sp());
        EXPECT(0x86c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0x86c3));
        // 9D 02F5
        gbc.setState(0xbdc, 0xe776, 0xb910, 0xebab, 0xe084, 0xb260, 0x1, 0x1);
        gbc.writeMem(0xbdc, { 0x9d });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xe776, gbc.sp());
        EXPECT(0xbdd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9D 02F7
        gbc.setState(0x68d, 0x65f1, 0xa450, 0xc329, 0xe4e, 0x5813, 0x0, 0x1);
        gbc.writeMem(0x68d, { 0x9d });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x65f1, gbc.sp());
        EXPECT(0x68e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9D 02F8
        gbc.setState(0x47dd, 0xafd4, 0xc5c0, 0x4188, 0xba66, 0xc04d, 0x0, 0x0);
        gbc.writeMem(0x47dd, { 0x9d });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xafd4, gbc.sp());
        EXPECT(0x47de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9D 02F9
        gbc.setState(0xdb50, 0x6ce0, 0x1480, 0x695, 0xc9a7, 0xe50a, 0x1, 0x1);
        gbc.writeMem(0xdb50, { 0x9d });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x6ce0, gbc.sp());
        EXPECT(0xdb51, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xdb50));
        // 9D 02FA
        gbc.setState(0x72b0, 0x2d7a, 0x98f0, 0x659d, 0x3dac, 0x8e6b, 0x0, 0x1);
        gbc.writeMem(0x72b0, { 0x9d });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x2d7a, gbc.sp());
        EXPECT(0x72b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9D 02FB
        gbc.setState(0x1718, 0xf813, 0x8e20, 0xd503, 0x8505, 0xed90, 0x0, 0x1);
        gbc.writeMem(0x1718, { 0x9d });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xf813, gbc.sp());
        EXPECT(0x1719, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9D 02FC
        gbc.setState(0x6c2e, 0xeebe, 0xc1d0, 0xd0bd, 0xb63c, 0x9358, 0x0, 0x1);
        gbc.writeMem(0x6c2e, { 0x9d });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xeebe, gbc.sp());
        EXPECT(0x6c2f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9D 02FD
        gbc.setState(0x45a7, 0xb02a, 0x8760, 0xc94c, 0x2230, 0xf9e6, 0x0, 0x0);
        gbc.writeMem(0x45a7, { 0x9d });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xb02a, gbc.sp());
        EXPECT(0x45a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9D 02FE
        gbc.setState(0x2e12, 0x4d8b, 0x1d0, 0xed00, 0x3513, 0xc2e3, 0x0, 0x1);
        gbc.writeMem(0x2e12, { 0x9d });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x4d8b, gbc.sp());
        EXPECT(0x2e13, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9D 02FF
        gbc.setState(0xac6f, 0x14f2, 0xfa0, 0xca07, 0xbf93, 0x520f, 0x0, 0x1);
        gbc.writeMem(0xac6f, { 0x9d });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x14f2, gbc.sp());
        EXPECT(0xac70, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xac6f));
        // 9D 0300
        gbc.setState(0x4bb8, 0x9207, 0x9b50, 0x21aa, 0xf41c, 0x48ff, 0x1, 0x1);
        gbc.writeMem(0x4bb8, { 0x9d });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x9207, gbc.sp());
        EXPECT(0x4bb9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9D 0302
        gbc.setState(0xd646, 0x7e79, 0xef30, 0x8cd2, 0x48bb, 0xe844, 0x1, 0x1);
        gbc.writeMem(0xd646, { 0x9d });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x7e79, gbc.sp());
        EXPECT(0xd647, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xd646));
        // 9D 0303
        gbc.setState(0xb610, 0x1298, 0xb7a0, 0xe213, 0x709e, 0xe80, 0x0, 0x0);
        gbc.writeMem(0xb610, { 0x9d });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x1298, gbc.sp());
        EXPECT(0xb611, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xb610));
        // 9D 0305
        gbc.setState(0x218b, 0xb77c, 0x2290, 0xb1f6, 0xecf0, 0xa74f, 0x1, 0x1);
        gbc.writeMem(0x218b, { 0x9d });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xb77c, gbc.sp());
        EXPECT(0x218c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9D 0306
        gbc.setState(0xcc26, 0x565a, 0x3d20, 0x5541, 0x596f, 0xefcb, 0x1, 0x1);
        gbc.writeMem(0xcc26, { 0x9d });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x565a, gbc.sp());
        EXPECT(0xcc27, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xcc26));
        // 9D 0307
        gbc.setState(0x4712, 0x2046, 0xc250, 0x5387, 0xa472, 0x419e, 0x1, 0x1);
        gbc.writeMem(0x4712, { 0x9d });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x2046, gbc.sp());
        EXPECT(0x4713, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9D 0308
        gbc.setState(0x15d8, 0x6c50, 0x75a0, 0x7292, 0xb2fd, 0x66de, 0x1, 0x0);
        gbc.writeMem(0x15d8, { 0x9d });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x6c50, gbc.sp());
        EXPECT(0x15d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9D 0309
        gbc.setState(0x7780, 0x3313, 0x750, 0x408, 0xa7cc, 0x9db6, 0x0, 0x0);
        gbc.writeMem(0x7780, { 0x9d });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x3313, gbc.sp());
        EXPECT(0x7781, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9D 030A
        gbc.setState(0x25b3, 0xfedf, 0x3bc0, 0x5d62, 0xf279, 0x2c00, 0x0, 0x1);
        gbc.writeMem(0x25b3, { 0x9d });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xfedf, gbc.sp());
        EXPECT(0x25b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9D 030B
        gbc.setState(0x3f26, 0x5635, 0xe3f0, 0x627d, 0x7e08, 0x71fa, 0x0, 0x1);
        gbc.writeMem(0x3f26, { 0x9d });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x5635, gbc.sp());
        EXPECT(0x3f27, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9D 030C
        gbc.setState(0x6dcc, 0x411b, 0xfb50, 0xe9f2, 0x4f15, 0xa2f0, 0x0, 0x1);
        gbc.writeMem(0x6dcc, { 0x9d });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x411b, gbc.sp());
        EXPECT(0x6dcd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9D 030D
        gbc.setState(0x3157, 0xb2f1, 0x3c30, 0x5065, 0x23b3, 0x66a4, 0x1, 0x0);
        gbc.writeMem(0x3157, { 0x9d });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xb2f1, gbc.sp());
        EXPECT(0x3158, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9D 030E
        gbc.setState(0xdcbf, 0xaaf9, 0x89c0, 0xff0a, 0x3bb5, 0x12b8, 0x1, 0x0);
        gbc.writeMem(0xdcbf, { 0x9d });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xaaf9, gbc.sp());
        EXPECT(0xdcc0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xdcbf));
        // 9D 030F
        gbc.setState(0x7488, 0x5b08, 0x4140, 0xffe8, 0x1ba7, 0x788f, 0x1, 0x0);
        gbc.writeMem(0x7488, { 0x9d });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x5b08, gbc.sp());
        EXPECT(0x7489, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9D 0310
        gbc.setState(0xd241, 0xf6b6, 0xb640, 0xcc39, 0x1332, 0xbb0a, 0x1, 0x0);
        gbc.writeMem(0xd241, { 0x9d });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xf6b6, gbc.sp());
        EXPECT(0xd242, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xd241));
        // 9D 0312
        gbc.setState(0x5340, 0x7ebf, 0xd9f0, 0xf9b3, 0xfdfc, 0x9e01, 0x0, 0x1);
        gbc.writeMem(0x5340, { 0x9d });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x7ebf, gbc.sp());
        EXPECT(0x5341, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9D 0313
        gbc.setState(0xdb21, 0xe43e, 0x10d0, 0x6ec7, 0xec59, 0x4cba, 0x1, 0x0);
        gbc.writeMem(0xdb21, { 0x9d });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xe43e, gbc.sp());
        EXPECT(0xdb22, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xdb21));
        // 9D 0314
        gbc.setState(0xc2c8, 0xf771, 0x27a0, 0x83ec, 0x113, 0x7d11, 0x0, 0x1);
        gbc.writeMem(0xc2c8, { 0x9d });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xf771, gbc.sp());
        EXPECT(0xc2c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xc2c8));
        // 9D 0315
        gbc.setState(0xe08a, 0x5b15, 0xcfd0, 0x3d1b, 0xa5e3, 0x3fcc, 0x0, 0x1);
        gbc.writeMem(0xe08a, { 0x9d });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x5b15, gbc.sp());
        EXPECT(0xe08b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xe08a));
        // 9D 0316
        gbc.setState(0xc19c, 0xd80c, 0x8870, 0xcc2d, 0x1d37, 0xbb68, 0x1, 0x1);
        gbc.writeMem(0xc19c, { 0x9d });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xd80c, gbc.sp());
        EXPECT(0xc19d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xc19c));
        // 9D 0317
        gbc.setState(0x1d66, 0x598b, 0xccc0, 0x4c46, 0xd8cf, 0x55ac, 0x0, 0x0);
        gbc.writeMem(0x1d66, { 0x9d });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x598b, gbc.sp());
        EXPECT(0x1d67, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9D 0318
        gbc.setState(0xa551, 0xad76, 0xc100, 0x6fe7, 0x987e, 0x1611, 0x0, 0x0);
        gbc.writeMem(0xa551, { 0x9d });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xad76, gbc.sp());
        EXPECT(0xa552, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xa551));
        // 9D 0319
        gbc.setState(0x7379, 0x4902, 0x9190, 0x9dd5, 0xa913, 0x4f75, 0x1, 0x1);
        gbc.writeMem(0x7379, { 0x9d });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x4902, gbc.sp());
        EXPECT(0x737a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9D 031A
        gbc.setState(0xe365, 0x8c8, 0x5860, 0xabf6, 0x876a, 0x8194, 0x1, 0x0);
        gbc.writeMem(0xe365, { 0x9d });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x8c8, gbc.sp());
        EXPECT(0xe366, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xe365));
        // 9D 031B
        gbc.setState(0xb044, 0x499f, 0x2ac0, 0x46f8, 0x708, 0xa641, 0x0, 0x0);
        gbc.writeMem(0xb044, { 0x9d });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x499f, gbc.sp());
        EXPECT(0xb045, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xb044));
        // 9D 031C
        gbc.setState(0x31a8, 0xdb50, 0x7380, 0xb8a6, 0x7761, 0x66d2, 0x1, 0x0);
        gbc.writeMem(0x31a8, { 0x9d });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xdb50, gbc.sp());
        EXPECT(0x31a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9D 031D
        gbc.setState(0x94f, 0xd771, 0x6cc0, 0x78f2, 0xd205, 0xecf3, 0x0, 0x1);
        gbc.writeMem(0x94f, { 0x9d });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xd771, gbc.sp());
        EXPECT(0x950, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9D 031F
        gbc.setState(0x53fb, 0x660e, 0x3f60, 0xadc8, 0x6fb3, 0x44dd, 0x1, 0x0);
        gbc.writeMem(0x53fb, { 0x9d });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x660e, gbc.sp());
        EXPECT(0x53fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9D 0320
        gbc.setState(0xea4, 0xe2da, 0x6d00, 0x86a6, 0x5750, 0x5993, 0x1, 0x0);
        gbc.writeMem(0xea4, { 0x9d });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xe2da, gbc.sp());
        EXPECT(0xea5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9D 0321
        gbc.setState(0x798d, 0x4aaf, 0xb410, 0x8c59, 0x8011, 0x2636, 0x0, 0x0);
        gbc.writeMem(0x798d, { 0x9d });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x4aaf, gbc.sp());
        EXPECT(0x798e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9D 0322
        gbc.setState(0xc885, 0x9800, 0xd8d0, 0x8b47, 0x50da, 0x2255, 0x0, 0x0);
        gbc.writeMem(0xc885, { 0x9d });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x9800, gbc.sp());
        EXPECT(0xc886, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xc885));
        // 9D 0323
        gbc.setState(0xd41c, 0x4aa8, 0x3880, 0x1bee, 0x2933, 0xa672, 0x1, 0x0);
        gbc.writeMem(0xd41c, { 0x9d });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x4aa8, gbc.sp());
        EXPECT(0xd41d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xd41c));
        // 9D 0324
        gbc.setState(0x7d5b, 0x2d25, 0x1b20, 0x7167, 0x241d, 0x72b4, 0x0, 0x1);
        gbc.writeMem(0x7d5b, { 0x9d });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x2d25, gbc.sp());
        EXPECT(0x7d5c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9D 0325
        gbc.setState(0x5d71, 0x5375, 0x3910, 0xcc06, 0x227, 0x6c32, 0x0, 0x0);
        gbc.writeMem(0x5d71, { 0x9d });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x5375, gbc.sp());
        EXPECT(0x5d72, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9D 0326
        gbc.setState(0xdb17, 0x3144, 0xcaf0, 0xe19e, 0xa5e8, 0x9127, 0x1, 0x0);
        gbc.writeMem(0xdb17, { 0x9d });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x3144, gbc.sp());
        EXPECT(0xdb18, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xdb17));
        // 9D 0327
        gbc.setState(0x828d, 0xed79, 0xd8b0, 0x11e9, 0xafdd, 0xb79e, 0x0, 0x1);
        gbc.writeMem(0x828d, { 0x9d });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xed79, gbc.sp());
        EXPECT(0x828e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0x828d));
        // 9D 0328
        gbc.setState(0xeee8, 0x10a9, 0xb710, 0x439b, 0x1128, 0x623d, 0x1, 0x0);
        gbc.writeMem(0xeee8, { 0x9d });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x10a9, gbc.sp());
        EXPECT(0xeee9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xeee8));
        // 9D 0329
        gbc.setState(0xcefe, 0x15e7, 0x36d0, 0x7aae, 0x1213, 0x30cf, 0x0, 0x1);
        gbc.writeMem(0xcefe, { 0x9d });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x15e7, gbc.sp());
        EXPECT(0xceff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xcefe));
        // 9D 032A
        gbc.setState(0xb81b, 0x2c2, 0x55e0, 0x3100, 0x4f9d, 0x61f5, 0x0, 0x1);
        gbc.writeMem(0xb81b, { 0x9d });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x2c2, gbc.sp());
        EXPECT(0xb81c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xb81b));
        // 9D 032B
        gbc.setState(0xdd20, 0x901c, 0x1540, 0xbe0e, 0x3541, 0xa4a3, 0x0, 0x1);
        gbc.writeMem(0xdd20, { 0x9d });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x901c, gbc.sp());
        EXPECT(0xdd21, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xdd20));
        // 9D 032C
        gbc.setState(0x4ca5, 0xeca5, 0x8830, 0xeeaa, 0xba1f, 0x45ee, 0x1, 0x1);
        gbc.writeMem(0x4ca5, { 0x9d });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xeca5, gbc.sp());
        EXPECT(0x4ca6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9D 032D
        gbc.setState(0x36e6, 0x3442, 0xc230, 0xb428, 0x78d4, 0xe04d, 0x1, 0x1);
        gbc.writeMem(0x36e6, { 0x9d });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x3442, gbc.sp());
        EXPECT(0x36e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9D 032E
        gbc.setState(0x6a93, 0xcead, 0xba20, 0x8723, 0xe05c, 0x4bcc, 0x1, 0x0);
        gbc.writeMem(0x6a93, { 0x9d });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xcead, gbc.sp());
        EXPECT(0x6a94, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9D 0330
        gbc.setState(0x629f, 0xdc3b, 0x7360, 0x87e0, 0x2459, 0x436b, 0x1, 0x1);
        gbc.writeMem(0x629f, { 0x9d });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xdc3b, gbc.sp());
        EXPECT(0x62a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9D 0331
        gbc.setState(0x8623, 0xac5d, 0xdd00, 0xbb38, 0xddff, 0x7ea5, 0x0, 0x1);
        gbc.writeMem(0x8623, { 0x9d });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xac5d, gbc.sp());
        EXPECT(0x8624, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0x8623));
        // 9D 0332
        gbc.setState(0xbdbe, 0x4181, 0xb4e0, 0xec0, 0xe948, 0xd8b3, 0x0, 0x1);
        gbc.writeMem(0xbdbe, { 0x9d });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x4181, gbc.sp());
        EXPECT(0xbdbf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xbdbe));
        // 9D 0333
        gbc.setState(0x138d, 0x12c1, 0x2350, 0x892c, 0x4a1c, 0xa4f8, 0x1, 0x0);
        gbc.writeMem(0x138d, { 0x9d });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x12c1, gbc.sp());
        EXPECT(0x138e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9D 0334
        gbc.setState(0x9552, 0xc9bc, 0xf680, 0x8c98, 0x89a1, 0xa380, 0x0, 0x0);
        gbc.writeMem(0x9552, { 0x9d });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xc9bc, gbc.sp());
        EXPECT(0x9553, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0x9552));
        // 9D 0335
        gbc.setState(0x41ef, 0xc010, 0x52a0, 0xe34e, 0xe29, 0x6cb, 0x0, 0x1);
        gbc.writeMem(0x41ef, { 0x9d });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xc010, gbc.sp());
        EXPECT(0x41f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9D 0336
        gbc.setState(0x536f, 0xb8a2, 0x2cf0, 0xce75, 0x9126, 0x2706, 0x0, 0x1);
        gbc.writeMem(0x536f, { 0x9d });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xb8a2, gbc.sp());
        EXPECT(0x5370, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9D 0337
        gbc.setState(0x6d1a, 0x4178, 0x29b0, 0x1ab7, 0x73c0, 0x37bb, 0x1, 0x1);
        gbc.writeMem(0x6d1a, { 0x9d });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x4178, gbc.sp());
        EXPECT(0x6d1b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9D 0338
        gbc.setState(0xcbee, 0xb90c, 0x4d40, 0x3257, 0xc383, 0xccb, 0x1, 0x0);
        gbc.writeMem(0xcbee, { 0x9d });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xb90c, gbc.sp());
        EXPECT(0xcbef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xcbee));
        // 9D 0339
        gbc.setState(0xb273, 0xf166, 0x4720, 0xa7f3, 0x72b, 0xb824, 0x1, 0x1);
        gbc.writeMem(0xb273, { 0x9d });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xf166, gbc.sp());
        EXPECT(0xb274, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xb273));
        // 9D 033A
        gbc.setState(0xe177, 0x9041, 0xc130, 0x3c7, 0xec6b, 0x5c59, 0x0, 0x0);
        gbc.writeMem(0xe177, { 0x9d });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x9041, gbc.sp());
        EXPECT(0xe178, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xe177));
        // 9D 033B
        gbc.setState(0x9e04, 0x84d1, 0x5920, 0x7ead, 0xb365, 0xb10f, 0x0, 0x1);
        gbc.writeMem(0x9e04, { 0x9d });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x84d1, gbc.sp());
        EXPECT(0x9e05, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0x9e04));
        // 9D 033C
        gbc.setState(0xc03, 0xf197, 0x5890, 0x75e6, 0x943c, 0x8efd, 0x0, 0x1);
        gbc.writeMem(0xc03, { 0x9d });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xf197, gbc.sp());
        EXPECT(0xc04, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9D 033D
        gbc.setState(0xdbb9, 0x8ac, 0x34a0, 0x6e66, 0xd5f, 0x4d2a, 0x1, 0x1);
        gbc.writeMem(0xdbb9, { 0x9d });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x8ac, gbc.sp());
        EXPECT(0xdbba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xdbb9));
        // 9D 033F
        gbc.setState(0xcd98, 0xe2dc, 0xeed0, 0xd460, 0xa805, 0xe3b7, 0x1, 0x1);
        gbc.writeMem(0xcd98, { 0x9d });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xe2dc, gbc.sp());
        EXPECT(0xcd99, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xcd98));
        // 9D 0340
        gbc.setState(0xa341, 0xc1be, 0x3c00, 0xff64, 0x55af, 0x132d, 0x0, 0x0);
        gbc.writeMem(0xa341, { 0x9d });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xc1be, gbc.sp());
        EXPECT(0xa342, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xa341));
        // 9D 0341
        gbc.setState(0xbb58, 0xa096, 0x1510, 0xa28f, 0x2cc4, 0xe726, 0x0, 0x0);
        gbc.writeMem(0xbb58, { 0x9d });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xa096, gbc.sp());
        EXPECT(0xbb59, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xbb58));
        // 9D 0343
        gbc.setState(0xaeec, 0x6de4, 0xbea0, 0xac8f, 0xc2b9, 0xce00, 0x1, 0x0);
        gbc.writeMem(0xaeec, { 0x9d });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x6de4, gbc.sp());
        EXPECT(0xaeed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xaeec));
        // 9D 0344
        gbc.setState(0x39be, 0x49d, 0xd070, 0x9539, 0xc7b1, 0x8a52, 0x0, 0x1);
        gbc.writeMem(0x39be, { 0x9d });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x49d, gbc.sp());
        EXPECT(0x39bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9D 0345
        gbc.setState(0x8617, 0xb150, 0xd070, 0xf756, 0x9f4c, 0x92d5, 0x1, 0x0);
        gbc.writeMem(0x8617, { 0x9d });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xb150, gbc.sp());
        EXPECT(0x8618, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0x8617));
        // 9D 0346
        gbc.setState(0xd56e, 0x85c0, 0x2420, 0x3fed, 0x1945, 0x3be7, 0x1, 0x1);
        gbc.writeMem(0xd56e, { 0x9d });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x85c0, gbc.sp());
        EXPECT(0xd56f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xd56e));
        // 9D 0347
        gbc.setState(0x196a, 0x41ea, 0xb050, 0xb58e, 0x67e1, 0x7981, 0x1, 0x0);
        gbc.writeMem(0x196a, { 0x9d });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x41ea, gbc.sp());
        EXPECT(0x196b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9D 0348
        gbc.setState(0x28a1, 0xc5d, 0x9a10, 0x235, 0x7479, 0xecbe, 0x0, 0x1);
        gbc.writeMem(0x28a1, { 0x9d });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xc5d, gbc.sp());
        EXPECT(0x28a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9D 0349
        gbc.setState(0x3239, 0x3e42, 0xf720, 0x173b, 0xf94d, 0xdd5a, 0x0, 0x0);
        gbc.writeMem(0x3239, { 0x9d });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x3e42, gbc.sp());
        EXPECT(0x323a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9D 034A
        gbc.setState(0x8db8, 0x53b9, 0xe770, 0x28a0, 0x471a, 0xdf0e, 0x0, 0x0);
        gbc.writeMem(0x8db8, { 0x9d });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x53b9, gbc.sp());
        EXPECT(0x8db9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0x8db8));
        // 9D 034B
        gbc.setState(0xec59, 0x7128, 0x30a0, 0xed70, 0x21c1, 0xc0e8, 0x1, 0x0);
        gbc.writeMem(0xec59, { 0x9d });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x7128, gbc.sp());
        EXPECT(0xec5a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xec59));
        // 9D 034C
        gbc.setState(0x84ed, 0x1147, 0x66c0, 0xbab8, 0x9655, 0x47d3, 0x0, 0x0);
        gbc.writeMem(0x84ed, { 0x9d });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x1147, gbc.sp());
        EXPECT(0x84ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0x84ed));
        // 9D 034D
        gbc.setState(0x2b96, 0xaee5, 0x48e0, 0x79f3, 0xb55c, 0xb417, 0x0, 0x0);
        gbc.writeMem(0x2b96, { 0x9d });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xaee5, gbc.sp());
        EXPECT(0x2b97, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9D 034E
        gbc.setState(0xb5b7, 0x6dd8, 0x83a0, 0xa7ea, 0x8cde, 0x9498, 0x0, 0x1);
        gbc.writeMem(0xb5b7, { 0x9d });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x6dd8, gbc.sp());
        EXPECT(0xb5b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xb5b7));
        // 9D 034F
        gbc.setState(0xa7d9, 0x56cf, 0xe250, 0xc2a8, 0x515f, 0x4553, 0x0, 0x1);
        gbc.writeMem(0xa7d9, { 0x9d });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x56cf, gbc.sp());
        EXPECT(0xa7da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xa7d9));
        // 9D 0350
        gbc.setState(0x84a7, 0x2ba3, 0x9bb0, 0x9e82, 0x59a2, 0x1bc2, 0x0, 0x1);
        gbc.writeMem(0x84a7, { 0x9d });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x2ba3, gbc.sp());
        EXPECT(0x84a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0x84a7));
        // 9D 0351
        gbc.setState(0xc4da, 0x6831, 0x2e70, 0xaedc, 0xedc2, 0xbb07, 0x1, 0x0);
        gbc.writeMem(0xc4da, { 0x9d });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x6831, gbc.sp());
        EXPECT(0xc4db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xc4da));
        // 9D 0352
        gbc.setState(0x4563, 0xab1c, 0x1420, 0x6565, 0xa063, 0x3cb6, 0x0, 0x0);
        gbc.writeMem(0x4563, { 0x9d });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xab1c, gbc.sp());
        EXPECT(0x4564, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9D 0353
        gbc.setState(0xd927, 0xb9c3, 0xbe10, 0xaa64, 0xd818, 0xd2aa, 0x0, 0x1);
        gbc.writeMem(0xd927, { 0x9d });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xb9c3, gbc.sp());
        EXPECT(0xd928, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xd927));
        // 9D 0354
        gbc.setState(0x66ca, 0x9754, 0x6460, 0xd6ec, 0x7413, 0x702e, 0x0, 0x1);
        gbc.writeMem(0x66ca, { 0x9d });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x9754, gbc.sp());
        EXPECT(0x66cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9D 0355
        gbc.setState(0x7840, 0x5f17, 0x1480, 0xc486, 0x6ffe, 0x61a0, 0x0, 0x1);
        gbc.writeMem(0x7840, { 0x9d });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x5f17, gbc.sp());
        EXPECT(0x7841, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9D 0356
        gbc.setState(0xbf66, 0x681a, 0xd040, 0xfc2c, 0xf2ce, 0x50f5, 0x1, 0x0);
        gbc.writeMem(0xbf66, { 0x9d });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x681a, gbc.sp());
        EXPECT(0xbf67, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xbf66));
        // 9D 0357
        gbc.setState(0x8f69, 0xd5a6, 0x8c50, 0xbfd, 0x3a81, 0x896e, 0x0, 0x1);
        gbc.writeMem(0x8f69, { 0x9d });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xd5a6, gbc.sp());
        EXPECT(0x8f6a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0x8f69));
        // 9D 0358
        gbc.setState(0x1eba, 0x5a3b, 0x7150, 0x39c6, 0xb3bb, 0x1725, 0x0, 0x1);
        gbc.writeMem(0x1eba, { 0x9d });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x5a3b, gbc.sp());
        EXPECT(0x1ebb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9D 0359
        gbc.setState(0xd440, 0x8a00, 0x2f40, 0x533d, 0xbc8d, 0x1f69, 0x1, 0x0);
        gbc.writeMem(0xd440, { 0x9d });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x8a00, gbc.sp());
        EXPECT(0xd441, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xd440));
        // 9D 035A
        gbc.setState(0xa590, 0xf006, 0x8d0, 0x9eb4, 0xbf7e, 0xe408, 0x0, 0x1);
        gbc.writeMem(0xa590, { 0x9d });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xf006, gbc.sp());
        EXPECT(0xa591, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xa590));
        // 9D 035B
        gbc.setState(0x51b8, 0x8bf7, 0x5310, 0x2c40, 0xb9f4, 0x8567, 0x1, 0x1);
        gbc.writeMem(0x51b8, { 0x9d });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x8bf7, gbc.sp());
        EXPECT(0x51b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9D 035C
        gbc.setState(0x4271, 0x26a, 0x1900, 0x9de9, 0x68cd, 0xcf52, 0x0, 0x0);
        gbc.writeMem(0x4271, { 0x9d });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x26a, gbc.sp());
        EXPECT(0x4272, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9D 035D
        gbc.setState(0xa7e5, 0x47cc, 0x9aa0, 0xc2fc, 0xabfa, 0xef21, 0x0, 0x0);
        gbc.writeMem(0xa7e5, { 0x9d });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x47cc, gbc.sp());
        EXPECT(0xa7e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xa7e5));
        // 9D 035E
        gbc.setState(0x1e54, 0xe68a, 0xd640, 0x32a4, 0x7fe4, 0x28ba, 0x0, 0x1);
        gbc.writeMem(0x1e54, { 0x9d });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xe68a, gbc.sp());
        EXPECT(0x1e55, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9D 035F
        gbc.setState(0xc9bd, 0x2ab2, 0x3460, 0xf45a, 0x26ca, 0x202b, 0x0, 0x1);
        gbc.writeMem(0xc9bd, { 0x9d });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x2ab2, gbc.sp());
        EXPECT(0xc9be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xc9bd));
        // 9D 0360
        gbc.setState(0x535c, 0x5832, 0xf650, 0xa9fa, 0x6509, 0x449, 0x1, 0x1);
        gbc.writeMem(0x535c, { 0x9d });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x5832, gbc.sp());
        EXPECT(0x535d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9D 0361
        gbc.setState(0x908e, 0x4501, 0x2330, 0x8a3, 0xc51, 0x31df, 0x0, 0x1);
        gbc.writeMem(0x908e, { 0x9d });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x4501, gbc.sp());
        EXPECT(0x908f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0x908e));
        // 9D 0362
        gbc.setState(0xb8ef, 0xfda5, 0x7cd0, 0x155a, 0x97e5, 0x7bd2, 0x0, 0x1);
        gbc.writeMem(0xb8ef, { 0x9d });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xfda5, gbc.sp());
        EXPECT(0xb8f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xb8ef));
        // 9D 0364
        gbc.setState(0x59fd, 0xdbbf, 0x1020, 0x55ae, 0xbef8, 0x473e, 0x1, 0x1);
        gbc.writeMem(0x59fd, { 0x9d });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xdbbf, gbc.sp());
        EXPECT(0x59fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9D 0365
        gbc.setState(0xbcba, 0x42b7, 0xcef0, 0x908f, 0xec84, 0x225e, 0x0, 0x0);
        gbc.writeMem(0xbcba, { 0x9d });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x42b7, gbc.sp());
        EXPECT(0xbcbb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xbcba));
        // 9D 0366
        gbc.setState(0x5d68, 0x84c5, 0xc950, 0xa1db, 0xe279, 0x4bad, 0x0, 0x0);
        gbc.writeMem(0x5d68, { 0x9d });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x84c5, gbc.sp());
        EXPECT(0x5d69, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9D 0367
        gbc.setState(0x7a5f, 0x6a49, 0x43e0, 0x6a0d, 0x7935, 0xfa2f, 0x0, 0x1);
        gbc.writeMem(0x7a5f, { 0x9d });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x6a49, gbc.sp());
        EXPECT(0x7a60, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9D 0368
        gbc.setState(0xca49, 0x6a4c, 0xdcd0, 0xdff, 0x9cce, 0x5bc4, 0x1, 0x0);
        gbc.writeMem(0xca49, { 0x9d });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x6a4c, gbc.sp());
        EXPECT(0xca4a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xca49));
        // 9D 0369
        gbc.setState(0x6e56, 0xffdd, 0x8740, 0xaa7e, 0x3b4e, 0x33a8, 0x0, 0x1);
        gbc.writeMem(0x6e56, { 0x9d });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xffdd, gbc.sp());
        EXPECT(0x6e57, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9D 036A
        gbc.setState(0x9df5, 0x1a7b, 0x39f0, 0xca5b, 0x62f8, 0x82a4, 0x0, 0x1);
        gbc.writeMem(0x9df5, { 0x9d });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x1a7b, gbc.sp());
        EXPECT(0x9df6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0x9df5));
        // 9D 036B
        gbc.setState(0x1a1d, 0x51c1, 0x98e0, 0x2119, 0x98dd, 0xdbb2, 0x1, 0x1);
        gbc.writeMem(0x1a1d, { 0x9d });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x51c1, gbc.sp());
        EXPECT(0x1a1e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9D 036C
        gbc.setState(0xdea7, 0x6ce7, 0xe880, 0x617, 0xd634, 0x1d47, 0x1, 0x1);
        gbc.writeMem(0xdea7, { 0x9d });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x6ce7, gbc.sp());
        EXPECT(0xdea8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xdea7));
        // 9D 036D
        gbc.setState(0x83a3, 0x492e, 0x4990, 0x27d6, 0x4387, 0xcc9, 0x1, 0x1);
        gbc.writeMem(0x83a3, { 0x9d });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x492e, gbc.sp());
        EXPECT(0x83a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0x83a3));
        // 9D 036E
        gbc.setState(0xbc5a, 0xc422, 0xa350, 0x505e, 0xb9d4, 0x5c5d, 0x0, 0x0);
        gbc.writeMem(0xbc5a, { 0x9d });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xc422, gbc.sp());
        EXPECT(0xbc5b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xbc5a));
        // 9D 036F
        gbc.setState(0x8554, 0xb398, 0x35b0, 0xa801, 0x6d9e, 0x172b, 0x0, 0x0);
        gbc.writeMem(0x8554, { 0x9d });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xb398, gbc.sp());
        EXPECT(0x8555, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0x8554));
        // 9D 0370
        gbc.setState(0x6e60, 0xc6b3, 0x1940, 0x392e, 0x2134, 0x2353, 0x1, 0x0);
        gbc.writeMem(0x6e60, { 0x9d });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xc6b3, gbc.sp());
        EXPECT(0x6e61, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9D 0371
        gbc.setState(0x1491, 0x15d3, 0x5840, 0x51a5, 0xc88c, 0x1427, 0x1, 0x0);
        gbc.writeMem(0x1491, { 0x9d });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x15d3, gbc.sp());
        EXPECT(0x1492, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9D 0372
        gbc.setState(0x52fe, 0x6fb2, 0x48b0, 0x1bb7, 0x572f, 0xcdb4, 0x0, 0x1);
        gbc.writeMem(0x52fe, { 0x9d });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x6fb2, gbc.sp());
        EXPECT(0x52ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9D 0373
        gbc.setState(0xbae7, 0xed52, 0x9e60, 0x3f99, 0x3892, 0xe018, 0x0, 0x1);
        gbc.writeMem(0xbae7, { 0x9d });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xed52, gbc.sp());
        EXPECT(0xbae8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xbae7));
        // 9D 0374
        gbc.setState(0xa9a3, 0xe1ea, 0x1090, 0x6e27, 0xfc38, 0x7a95, 0x1, 0x0);
        gbc.writeMem(0xa9a3, { 0x9d });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xe1ea, gbc.sp());
        EXPECT(0xa9a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xa9a3));
        // 9D 0375
        gbc.setState(0x94d4, 0x8d64, 0xdc40, 0x255a, 0xd31d, 0x6177, 0x1, 0x1);
        gbc.writeMem(0x94d4, { 0x9d });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x8d64, gbc.sp());
        EXPECT(0x94d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0x94d4));
        // 9D 0376
        gbc.setState(0xe3f8, 0x4a9b, 0x9cc0, 0x6ef6, 0x45e0, 0xcebd, 0x1, 0x0);
        gbc.writeMem(0xe3f8, { 0x9d });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x4a9b, gbc.sp());
        EXPECT(0xe3f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xe3f8));
        // 9D 0377
        gbc.setState(0x4f1, 0x8d49, 0x2e60, 0xf1f4, 0xd110, 0x489d, 0x0, 0x1);
        gbc.writeMem(0x4f1, { 0x9d });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x8d49, gbc.sp());
        EXPECT(0x4f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9D 0378
        gbc.setState(0x192b, 0xedd6, 0xdef0, 0xcefd, 0x325a, 0x6eb, 0x0, 0x0);
        gbc.writeMem(0x192b, { 0x9d });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xedd6, gbc.sp());
        EXPECT(0x192c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9D 0379
        gbc.setState(0x9556, 0x9f9b, 0xef20, 0x29ee, 0xa604, 0xd106, 0x0, 0x0);
        gbc.writeMem(0x9556, { 0x9d });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x9f9b, gbc.sp());
        EXPECT(0x9557, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0x9556));
        // 9D 037C
        gbc.setState(0xda64, 0x4eda, 0xbd70, 0xebc7, 0x2abe, 0x50bc, 0x1, 0x1);
        gbc.writeMem(0xda64, { 0x9d });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x4eda, gbc.sp());
        EXPECT(0xda65, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xda64));
        // 9D 037D
        gbc.setState(0x90d6, 0x62a8, 0x8490, 0xa4b2, 0x56cc, 0x4f59, 0x1, 0x0);
        gbc.writeMem(0x90d6, { 0x9d });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x62a8, gbc.sp());
        EXPECT(0x90d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0x90d6));
        // 9D 037E
        gbc.setState(0xda95, 0xa267, 0xa510, 0xb283, 0xfeab, 0x8df, 0x0, 0x0);
        gbc.writeMem(0xda95, { 0x9d });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xa267, gbc.sp());
        EXPECT(0xda96, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xda95));
        // 9D 0380
        gbc.setState(0xbffc, 0x76e1, 0xf00, 0xa365, 0x6441, 0x98f3, 0x0, 0x1);
        gbc.writeMem(0xbffc, { 0x9d });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x76e1, gbc.sp());
        EXPECT(0xbffd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xbffc));
        // 9D 0381
        gbc.setState(0xb7dd, 0x251a, 0x17f0, 0x5a2e, 0xd52d, 0x40be, 0x0, 0x1);
        gbc.writeMem(0xb7dd, { 0x9d });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x251a, gbc.sp());
        EXPECT(0xb7de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xb7dd));
        // 9D 0382
        gbc.setState(0x9d3a, 0x49b4, 0x6a40, 0xa6c, 0xd461, 0x1d0d, 0x1, 0x1);
        gbc.writeMem(0x9d3a, { 0x9d });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x49b4, gbc.sp());
        EXPECT(0x9d3b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0x9d3a));
        // 9D 0383
        gbc.setState(0x5d7e, 0xd5bb, 0x7f10, 0xa44d, 0xc9c3, 0xbecf, 0x1, 0x0);
        gbc.writeMem(0x5d7e, { 0x9d });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xd5bb, gbc.sp());
        EXPECT(0x5d7f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9D 0384
        gbc.setState(0x5a52, 0xb51a, 0x87e0, 0x9a45, 0x61ce, 0x954b, 0x0, 0x1);
        gbc.writeMem(0x5a52, { 0x9d });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xb51a, gbc.sp());
        EXPECT(0x5a53, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9D 0385
        gbc.setState(0x6f93, 0x8469, 0x9580, 0xd7ff, 0x2dd2, 0xcf0, 0x0, 0x1);
        gbc.writeMem(0x6f93, { 0x9d });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x8469, gbc.sp());
        EXPECT(0x6f94, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9D 0386
        gbc.setState(0x4113, 0x9401, 0x7880, 0xf539, 0x992a, 0x807e, 0x0, 0x0);
        gbc.writeMem(0x4113, { 0x9d });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x9401, gbc.sp());
        EXPECT(0x4114, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9D 0387
        gbc.setState(0xe290, 0xf41c, 0x6be0, 0x96a8, 0x19d2, 0x3d94, 0x1, 0x1);
        gbc.writeMem(0xe290, { 0x9d });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xf41c, gbc.sp());
        EXPECT(0xe291, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xe290));
        // 9D 0388
        gbc.setState(0xbaf4, 0x7dbc, 0x5e10, 0x2c7, 0x4d19, 0xcc76, 0x1, 0x1);
        gbc.writeMem(0xbaf4, { 0x9d });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x7dbc, gbc.sp());
        EXPECT(0xbaf5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xbaf4));
        // 9D 0389
        gbc.setState(0x7baf, 0x1e56, 0xd940, 0x348a, 0x9116, 0x5f35, 0x0, 0x0);
        gbc.writeMem(0x7baf, { 0x9d });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x1e56, gbc.sp());
        EXPECT(0x7bb0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9D 038A
        gbc.setState(0x8c2a, 0xf629, 0x71a0, 0xb17e, 0x941a, 0x8264, 0x0, 0x0);
        gbc.writeMem(0x8c2a, { 0x9d });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xf629, gbc.sp());
        EXPECT(0x8c2b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0x8c2a));
        // 9D 038B
        gbc.setState(0x8c0e, 0x8646, 0x5060, 0x4119, 0xc198, 0xfaa, 0x0, 0x1);
        gbc.writeMem(0x8c0e, { 0x9d });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x8646, gbc.sp());
        EXPECT(0x8c0f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0x8c0e));
        // 9D 038C
        gbc.setState(0xd2c8, 0x2ef0, 0x2a10, 0x47ea, 0x4d20, 0xd194, 0x0, 0x1);
        gbc.writeMem(0xd2c8, { 0x9d });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x2ef0, gbc.sp());
        EXPECT(0xd2c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xd2c8));
        // 9D 038D
        gbc.setState(0xac6a, 0xe248, 0xe640, 0xd127, 0x99ee, 0xb050, 0x0, 0x1);
        gbc.writeMem(0xac6a, { 0x9d });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xe248, gbc.sp());
        EXPECT(0xac6b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xac6a));
        // 9D 038E
        gbc.setState(0x9bbe, 0x16c2, 0x6560, 0xd644, 0x5e4e, 0xfe28, 0x1, 0x0);
        gbc.writeMem(0x9bbe, { 0x9d });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x16c2, gbc.sp());
        EXPECT(0x9bbf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0x9bbe));
        // 9D 038F
        gbc.setState(0x567f, 0x96da, 0x1a20, 0x1236, 0x8372, 0xd272, 0x0, 0x0);
        gbc.writeMem(0x567f, { 0x9d });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x96da, gbc.sp());
        EXPECT(0x5680, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9D 0390
        gbc.setState(0x2b7, 0x5a15, 0x5c90, 0x7d7d, 0x4eba, 0x6488, 0x0, 0x1);
        gbc.writeMem(0x2b7, { 0x9d });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x5a15, gbc.sp());
        EXPECT(0x2b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9D 0391
        gbc.setState(0x9ec4, 0x2bbb, 0xaed0, 0xbb44, 0xb516, 0x81ba, 0x0, 0x1);
        gbc.writeMem(0x9ec4, { 0x9d });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x2bbb, gbc.sp());
        EXPECT(0x9ec5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0x9ec4));
        // 9D 0392
        gbc.setState(0xd5e8, 0x4fcb, 0x90a0, 0x79c9, 0xdcfa, 0x5a67, 0x1, 0x1);
        gbc.writeMem(0xd5e8, { 0x9d });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x4fcb, gbc.sp());
        EXPECT(0xd5e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xd5e8));
        // 9D 0393
        gbc.setState(0x819d, 0x19, 0x3760, 0x66f2, 0x7242, 0x9d51, 0x1, 0x0);
        gbc.writeMem(0x819d, { 0x9d });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x19, gbc.sp());
        EXPECT(0x819e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0x819d));
        // 9D 0394
        gbc.setState(0x1b67, 0xffef, 0xaca0, 0x42bd, 0x23bf, 0xb959, 0x1, 0x1);
        gbc.writeMem(0x1b67, { 0x9d });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xffef, gbc.sp());
        EXPECT(0x1b68, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9D 0395
        gbc.setState(0xbbed, 0x1d8f, 0xcc00, 0x705b, 0xe02b, 0xc768, 0x0, 0x0);
        gbc.writeMem(0xbbed, { 0x9d });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x1d8f, gbc.sp());
        EXPECT(0xbbee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xbbed));
        // 9D 0396
        gbc.setState(0xa8a, 0x21c1, 0xff80, 0x1430, 0x7a85, 0x30c3, 0x0, 0x0);
        gbc.writeMem(0xa8a, { 0x9d });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x21c1, gbc.sp());
        EXPECT(0xa8b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9D 0397
        gbc.setState(0xa3f4, 0x8477, 0xb9a0, 0x31e1, 0x5265, 0xe795, 0x1, 0x0);
        gbc.writeMem(0xa3f4, { 0x9d });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x8477, gbc.sp());
        EXPECT(0xa3f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xa3f4));
        // 9D 0398
        gbc.setState(0xbd89, 0x3986, 0xb580, 0xd738, 0x35b9, 0x197d, 0x1, 0x0);
        gbc.writeMem(0xbd89, { 0x9d });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x3986, gbc.sp());
        EXPECT(0xbd8a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xbd89));
        // 9D 0399
        gbc.setState(0x14d4, 0x8599, 0x56b0, 0xf53c, 0x55ef, 0x9b59, 0x1, 0x0);
        gbc.writeMem(0x14d4, { 0x9d });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x8599, gbc.sp());
        EXPECT(0x14d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9D 039A
        gbc.setState(0x2987, 0xd0bf, 0x92a0, 0x941a, 0x7c97, 0xba3b, 0x1, 0x0);
        gbc.writeMem(0x2987, { 0x9d });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xd0bf, gbc.sp());
        EXPECT(0x2988, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9D 039B
        gbc.setState(0xe881, 0x4be, 0x280, 0x6fd5, 0x21d9, 0x7c0f, 0x0, 0x1);
        gbc.writeMem(0xe881, { 0x9d });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x4be, gbc.sp());
        EXPECT(0xe882, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xe881));
        // 9D 039C
        gbc.setState(0x5070, 0x5f3, 0x9d0, 0x2c21, 0x12c2, 0xe742, 0x0, 0x1);
        gbc.writeMem(0x5070, { 0x9d });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x5f3, gbc.sp());
        EXPECT(0x5071, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9D 039D
        gbc.setState(0x9e02, 0xeff2, 0xea00, 0x6712, 0x252f, 0x49e6, 0x1, 0x0);
        gbc.writeMem(0x9e02, { 0x9d });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xeff2, gbc.sp());
        EXPECT(0x9e03, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0x9e02));
        // 9D 039E
        gbc.setState(0xac74, 0x1e4a, 0xfb60, 0x9eb4, 0x9e95, 0x3179, 0x0, 0x0);
        gbc.writeMem(0xac74, { 0x9d });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x1e4a, gbc.sp());
        EXPECT(0xac75, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xac74));
        // 9D 039F
        gbc.setState(0x9d20, 0xa3b0, 0x3360, 0x326f, 0xdf04, 0x5bd4, 0x1, 0x1);
        gbc.writeMem(0x9d20, { 0x9d });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xa3b0, gbc.sp());
        EXPECT(0x9d21, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0x9d20));
        // 9D 03A0
        gbc.setState(0xb0f, 0xf8e4, 0xa570, 0x15c0, 0xf884, 0x6f36, 0x1, 0x1);
        gbc.writeMem(0xb0f, { 0x9d });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xf8e4, gbc.sp());
        EXPECT(0xb10, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9D 03A1
        gbc.setState(0x695, 0xc40, 0xb9c0, 0x7145, 0xd2d7, 0x45ac, 0x1, 0x0);
        gbc.writeMem(0x695, { 0x9d });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xc40, gbc.sp());
        EXPECT(0x696, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9D 03A2
        gbc.setState(0xecb1, 0x4aa6, 0x4c40, 0x4021, 0xce16, 0x132e, 0x0, 0x0);
        gbc.writeMem(0xecb1, { 0x9d });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x4aa6, gbc.sp());
        EXPECT(0xecb2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xecb1));
        // 9D 03A3
        gbc.setState(0xdea3, 0x1574, 0x1070, 0x9929, 0x794, 0xabc, 0x0, 0x1);
        gbc.writeMem(0xdea3, { 0x9d });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x1574, gbc.sp());
        EXPECT(0xdea4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xdea3));
        // 9D 03A4
        gbc.setState(0xf68, 0xa2f2, 0x2c0, 0x9999, 0xcaf4, 0x4a67, 0x1, 0x0);
        gbc.writeMem(0xf68, { 0x9d });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xa2f2, gbc.sp());
        EXPECT(0xf69, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9D 03A5
        gbc.setState(0x523, 0xc7bc, 0x8bf0, 0xfd0c, 0x18d3, 0xd695, 0x0, 0x0);
        gbc.writeMem(0x523, { 0x9d });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xc7bc, gbc.sp());
        EXPECT(0x524, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9D 03A6
        gbc.setState(0xa196, 0x7b90, 0x5d50, 0x2fbb, 0x4529, 0xbd5c, 0x0, 0x0);
        gbc.writeMem(0xa196, { 0x9d });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x7b90, gbc.sp());
        EXPECT(0xa197, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xa196));
        // 9D 03A7
        gbc.setState(0x63a1, 0xaa93, 0xd680, 0x18c0, 0x4c68, 0x81a1, 0x1, 0x1);
        gbc.writeMem(0x63a1, { 0x9d });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xaa93, gbc.sp());
        EXPECT(0x63a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9D 03A8
        gbc.setState(0x884c, 0x8d23, 0x5140, 0xfb30, 0xd38b, 0x93bb, 0x1, 0x1);
        gbc.writeMem(0x884c, { 0x9d });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x8d23, gbc.sp());
        EXPECT(0x884d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0x884c));
        // 9D 03A9
        gbc.setState(0xbd92, 0xabd5, 0xe160, 0x84ec, 0xcb46, 0xe347, 0x1, 0x1);
        gbc.writeMem(0xbd92, { 0x9d });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xabd5, gbc.sp());
        EXPECT(0xbd93, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xbd92));
        // 9D 03AA
        gbc.setState(0xe9f0, 0x7c90, 0xbc50, 0x9ad5, 0xedfb, 0x5bee, 0x1, 0x1);
        gbc.writeMem(0xe9f0, { 0x9d });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x7c90, gbc.sp());
        EXPECT(0xe9f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xe9f0));
        // 9D 03AB
        gbc.setState(0x471e, 0x4164, 0xafb0, 0x4e4c, 0xedb7, 0x8058, 0x1, 0x0);
        gbc.writeMem(0x471e, { 0x9d });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x4164, gbc.sp());
        EXPECT(0x471f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9D 03AC
        gbc.setState(0x29cd, 0x97b8, 0x98c0, 0xaabc, 0xa361, 0x7bfc, 0x0, 0x0);
        gbc.writeMem(0x29cd, { 0x9d });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x97b8, gbc.sp());
        EXPECT(0x29ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9D 03AD
        gbc.setState(0x87e2, 0x4a94, 0x9610, 0xa74, 0x2a76, 0x19ba, 0x0, 0x0);
        gbc.writeMem(0x87e2, { 0x9d });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x4a94, gbc.sp());
        EXPECT(0x87e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0x87e2));
        // 9D 03AE
        gbc.setState(0xd1ca, 0x76e9, 0x61e0, 0xea11, 0x9750, 0x3eeb, 0x0, 0x1);
        gbc.writeMem(0xd1ca, { 0x9d });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x76e9, gbc.sp());
        EXPECT(0xd1cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xd1ca));
        // 9D 03AF
        gbc.setState(0xd337, 0xa027, 0xafa0, 0xacf6, 0x1f3, 0x85f4, 0x0, 0x0);
        gbc.writeMem(0xd337, { 0x9d });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xa027, gbc.sp());
        EXPECT(0xd338, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xd337));
        // 9D 03B0
        gbc.setState(0xcad9, 0xe34d, 0x8f0, 0x691b, 0xa4f8, 0x37da, 0x0, 0x1);
        gbc.writeMem(0xcad9, { 0x9d });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xe34d, gbc.sp());
        EXPECT(0xcada, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xcad9));
        // 9D 03B1
        gbc.setState(0xefe9, 0x2c0, 0x9890, 0x6253, 0x1747, 0x3819, 0x0, 0x0);
        gbc.writeMem(0xefe9, { 0x9d });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x2c0, gbc.sp());
        EXPECT(0xefea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xefe9));
        // 9D 03B2
        gbc.setState(0x35a9, 0x9e4e, 0x5570, 0x3736, 0xbfd4, 0x2ab6, 0x1, 0x0);
        gbc.writeMem(0x35a9, { 0x9d });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x9e4e, gbc.sp());
        EXPECT(0x35aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9D 03B3
        gbc.setState(0x6622, 0xa477, 0x54e0, 0x983, 0x15ec, 0x2a99, 0x1, 0x0);
        gbc.writeMem(0x6622, { 0x9d });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xa477, gbc.sp());
        EXPECT(0x6623, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9D 03B4
        gbc.setState(0x2625, 0xdb9d, 0x9760, 0x9ef9, 0xc5c9, 0x8fcb, 0x1, 0x0);
        gbc.writeMem(0x2625, { 0x9d });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xdb9d, gbc.sp());
        EXPECT(0x2626, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9D 03B5
        gbc.setState(0x3689, 0xa2ca, 0xd190, 0xeaf6, 0x5668, 0xe23, 0x0, 0x0);
        gbc.writeMem(0x3689, { 0x9d });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xa2ca, gbc.sp());
        EXPECT(0x368a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9D 03B6
        gbc.setState(0x2af4, 0xfddb, 0x2a40, 0x5222, 0x8122, 0x6a1f, 0x1, 0x1);
        gbc.writeMem(0x2af4, { 0x9d });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xfddb, gbc.sp());
        EXPECT(0x2af5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9D 03B7
        gbc.setState(0x4cbc, 0xde, 0xc420, 0x71b1, 0xf6a6, 0x9706, 0x1, 0x1);
        gbc.writeMem(0x4cbc, { 0x9d });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xde, gbc.sp());
        EXPECT(0x4cbd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9D 03B8
        gbc.setState(0x8fdc, 0xa7f6, 0xae60, 0xd2a8, 0xfd4b, 0x6a2e, 0x1, 0x1);
        gbc.writeMem(0x8fdc, { 0x9d });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xa7f6, gbc.sp());
        EXPECT(0x8fdd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0x8fdc));
        // 9D 03B9
        gbc.setState(0xeba2, 0x3e4c, 0xba00, 0xcc9d, 0x9afd, 0x260d, 0x1, 0x1);
        gbc.writeMem(0xeba2, { 0x9d });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x3e4c, gbc.sp());
        EXPECT(0xeba3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xeba2));
        // 9D 03BA
        gbc.setState(0x9e94, 0x7614, 0xd000, 0xf60, 0x8d5a, 0x3601, 0x0, 0x0);
        gbc.writeMem(0x9e94, { 0x9d });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x7614, gbc.sp());
        EXPECT(0x9e95, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0x9e94));
        // 9D 03BB
        gbc.setState(0x99ba, 0x9b47, 0x160, 0x9ec3, 0x67a7, 0xa0f9, 0x1, 0x0);
        gbc.writeMem(0x99ba, { 0x9d });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x9b47, gbc.sp());
        EXPECT(0x99bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0x99ba));
        // 9D 03BC
        gbc.setState(0x2a51, 0x5fb, 0x4e90, 0xbbde, 0x4415, 0x6ae0, 0x0, 0x0);
        gbc.writeMem(0x2a51, { 0x9d });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x5fb, gbc.sp());
        EXPECT(0x2a52, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9D 03BD
        gbc.setState(0x34d2, 0xc40, 0xa0d0, 0x53ff, 0xcdda, 0x3340, 0x0, 0x1);
        gbc.writeMem(0x34d2, { 0x9d });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xc40, gbc.sp());
        EXPECT(0x34d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9D 03BE
        gbc.setState(0x8e8a, 0xa81a, 0xa050, 0x48f3, 0xf5ae, 0xde50, 0x1, 0x1);
        gbc.writeMem(0x8e8a, { 0x9d });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xa81a, gbc.sp());
        EXPECT(0x8e8b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0x8e8a));
        // 9D 03BF
        gbc.setState(0x8eb0, 0x3d33, 0xc8b0, 0xec05, 0x1a7a, 0x6c54, 0x0, 0x0);
        gbc.writeMem(0x8eb0, { 0x9d });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x3d33, gbc.sp());
        EXPECT(0x8eb1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0x8eb0));
        // 9D 03C0
        gbc.setState(0x16e1, 0xbe3a, 0x2710, 0xe5a3, 0x106f, 0xbb33, 0x0, 0x0);
        gbc.writeMem(0x16e1, { 0x9d });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xbe3a, gbc.sp());
        EXPECT(0x16e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9D 03C1
        gbc.setState(0xe0, 0x5982, 0x3100, 0x8aee, 0xc504, 0xecb1, 0x0, 0x0);
        gbc.writeMem(0xe0, { 0x9d });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x5982, gbc.sp());
        EXPECT(0xe1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9D 03C2
        gbc.setState(0x874a, 0xf8a4, 0xfc70, 0xc287, 0x42a2, 0x21f5, 0x0, 0x1);
        gbc.writeMem(0x874a, { 0x9d });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xf8a4, gbc.sp());
        EXPECT(0x874b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0x874a));
        // 9D 03C3
        gbc.setState(0x2800, 0x5b95, 0x24b0, 0x5642, 0x1de8, 0x1575, 0x1, 0x1);
        gbc.writeMem(0x2800, { 0x9d });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x5b95, gbc.sp());
        EXPECT(0x2801, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9D 03C4
        gbc.setState(0xde25, 0x8314, 0xe210, 0x8fb1, 0xdf0c, 0x542c, 0x0, 0x1);
        gbc.writeMem(0xde25, { 0x9d });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x8314, gbc.sp());
        EXPECT(0xde26, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xde25));
        // 9D 03C5
        gbc.setState(0x5a73, 0x59bb, 0x7710, 0x9a39, 0x9f78, 0x9a82, 0x0, 0x1);
        gbc.writeMem(0x5a73, { 0x9d });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x59bb, gbc.sp());
        EXPECT(0x5a74, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9D 03C6
        gbc.setState(0xcaa3, 0x155f, 0x160, 0x448e, 0x75c5, 0xeaf1, 0x0, 0x0);
        gbc.writeMem(0xcaa3, { 0x9d });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x155f, gbc.sp());
        EXPECT(0xcaa4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xcaa3));
        // 9D 03C7
        gbc.setState(0x3504, 0x5fa0, 0x54a0, 0x8174, 0x58f0, 0x7ca7, 0x1, 0x1);
        gbc.writeMem(0x3504, { 0x9d });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x5fa0, gbc.sp());
        EXPECT(0x3505, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9D 03C8
        gbc.setState(0x4436, 0x265, 0xa730, 0x9a19, 0xd7c, 0xb722, 0x0, 0x0);
        gbc.writeMem(0x4436, { 0x9d });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x265, gbc.sp());
        EXPECT(0x4437, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9D 03C9
        gbc.setState(0x2f5d, 0x96b9, 0x2c50, 0xe833, 0x7a95, 0x38b4, 0x0, 0x1);
        gbc.writeMem(0x2f5d, { 0x9d });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x96b9, gbc.sp());
        EXPECT(0x2f5e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9D 03CA
        gbc.setState(0xea99, 0x4f0, 0xd630, 0x1dd3, 0xc75a, 0x84a7, 0x1, 0x1);
        gbc.writeMem(0xea99, { 0x9d });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x4f0, gbc.sp());
        EXPECT(0xea9a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xea99));
        // 9D 03CB
        gbc.setState(0x9f78, 0xfe15, 0xa9f0, 0x7a8e, 0xca33, 0x39ef, 0x0, 0x0);
        gbc.writeMem(0x9f78, { 0x9d });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xfe15, gbc.sp());
        EXPECT(0x9f79, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0x9f78));
        // 9D 03CC
        gbc.setState(0x7ab8, 0xbe19, 0x2d60, 0x8ead, 0x9b6c, 0x856d, 0x0, 0x1);
        gbc.writeMem(0x7ab8, { 0x9d });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xbe19, gbc.sp());
        EXPECT(0x7ab9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9D 03CD
        gbc.setState(0x56f8, 0x6053, 0x19e0, 0xb7a1, 0xc2ff, 0x9844, 0x0, 0x1);
        gbc.writeMem(0x56f8, { 0x9d });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x6053, gbc.sp());
        EXPECT(0x56f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9D 03CE
        gbc.setState(0x2632, 0x3168, 0x6150, 0xd14a, 0x6645, 0x5712, 0x1, 0x1);
        gbc.writeMem(0x2632, { 0x9d });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x3168, gbc.sp());
        EXPECT(0x2633, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9D 03CF
        gbc.setState(0x968d, 0x69b, 0x54f0, 0x1f40, 0xcb78, 0xb337, 0x1, 0x0);
        gbc.writeMem(0x968d, { 0x9d });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x69b, gbc.sp());
        EXPECT(0x968e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0x968d));
        // 9D 03D0
        gbc.setState(0x4d5b, 0x1efb, 0xda20, 0x2f93, 0x5883, 0x1d5e, 0x1, 0x1);
        gbc.writeMem(0x4d5b, { 0x9d });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x1efb, gbc.sp());
        EXPECT(0x4d5c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9D 03D1
        gbc.setState(0xd5e8, 0xd765, 0xc030, 0x5035, 0x1f43, 0x67e5, 0x1, 0x0);
        gbc.writeMem(0xd5e8, { 0x9d });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xd765, gbc.sp());
        EXPECT(0xd5e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xd5e8));
        // 9D 03D2
        gbc.setState(0xdb4, 0x73ae, 0x59b0, 0x5ec7, 0x194f, 0x92f, 0x0, 0x0);
        gbc.writeMem(0xdb4, { 0x9d });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x73ae, gbc.sp());
        EXPECT(0xdb5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9D 03D3
        gbc.setState(0xa4bb, 0xd990, 0x7e00, 0xa791, 0xaa05, 0xa517, 0x1, 0x1);
        gbc.writeMem(0xa4bb, { 0x9d });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xd990, gbc.sp());
        EXPECT(0xa4bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xa4bb));
        // 9D 03D4
        gbc.setState(0x9ede, 0x6577, 0xfcd0, 0x8352, 0x263f, 0xb48, 0x0, 0x0);
        gbc.writeMem(0x9ede, { 0x9d });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x6577, gbc.sp());
        EXPECT(0x9edf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0x9ede));
        // 9D 03D5
        gbc.setState(0x3a35, 0x4b5c, 0x9230, 0x6aa7, 0x539e, 0x5a21, 0x1, 0x0);
        gbc.writeMem(0x3a35, { 0x9d });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x4b5c, gbc.sp());
        EXPECT(0x3a36, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9D 03D6
        gbc.setState(0xdf7e, 0x4a5e, 0x4520, 0x516f, 0x1a3f, 0xc670, 0x1, 0x0);
        gbc.writeMem(0xdf7e, { 0x9d });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x4a5e, gbc.sp());
        EXPECT(0xdf7f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xdf7e));
        // 9D 03D7
        gbc.setState(0xb7df, 0x8f5a, 0x70a0, 0xf655, 0x749f, 0x2e3, 0x0, 0x0);
        gbc.writeMem(0xb7df, { 0x9d });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x8f5a, gbc.sp());
        EXPECT(0xb7e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xb7df));
        // 9D 03D8
        gbc.setState(0xe1c2, 0x3b25, 0xcf40, 0xcdc1, 0xe05b, 0xc21c, 0x1, 0x0);
        gbc.writeMem(0xe1c2, { 0x9d });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x3b25, gbc.sp());
        EXPECT(0xe1c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xe1c2));
        // 9D 03D9
        gbc.setState(0xe40d, 0xcd1a, 0xecf0, 0x33c7, 0x9fc, 0x9ecb, 0x1, 0x1);
        gbc.writeMem(0xe40d, { 0x9d });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xcd1a, gbc.sp());
        EXPECT(0xe40e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xe40d));
        // 9D 03DA
        gbc.setState(0x9d66, 0x81fb, 0xbb20, 0x3a39, 0xfe7, 0xbbd5, 0x0, 0x1);
        gbc.writeMem(0x9d66, { 0x9d });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x81fb, gbc.sp());
        EXPECT(0x9d67, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0x9d66));
        // 9D 03DB
        gbc.setState(0x10d4, 0x9cba, 0x8f00, 0x9649, 0xf9, 0xaeba, 0x1, 0x0);
        gbc.writeMem(0x10d4, { 0x9d });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x9cba, gbc.sp());
        EXPECT(0x10d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9D 03DC
        gbc.setState(0x4a35, 0x93f9, 0x3220, 0x3ab3, 0x4f92, 0x99de, 0x0, 0x1);
        gbc.writeMem(0x4a35, { 0x9d });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x93f9, gbc.sp());
        EXPECT(0x4a36, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9D 03DD
        gbc.setState(0x24e0, 0xdfb3, 0xb4b0, 0x6c19, 0xc196, 0xcd31, 0x1, 0x0);
        gbc.writeMem(0x24e0, { 0x9d });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xdfb3, gbc.sp());
        EXPECT(0x24e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9D 03DE
        gbc.setState(0xbf37, 0x74a0, 0x2160, 0x4bf0, 0xfcf, 0xa8e8, 0x1, 0x0);
        gbc.writeMem(0xbf37, { 0x9d });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x74a0, gbc.sp());
        EXPECT(0xbf38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xbf37));
        // 9D 03DF
        gbc.setState(0x9e43, 0x1e6c, 0x2510, 0x99df, 0x3b20, 0x9031, 0x1, 0x0);
        gbc.writeMem(0x9e43, { 0x9d });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x1e6c, gbc.sp());
        EXPECT(0x9e44, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0x9e43));
        // 9D 03E0
        gbc.setState(0x1c56, 0x1992, 0xef90, 0xbc18, 0xbe6a, 0x52f5, 0x1, 0x1);
        gbc.writeMem(0x1c56, { 0x9d });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x1992, gbc.sp());
        EXPECT(0x1c57, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9D 03E1
        gbc.setState(0x1557, 0x2de3, 0xa550, 0x1daa, 0x3003, 0x1441, 0x1, 0x1);
        gbc.writeMem(0x1557, { 0x9d });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x2de3, gbc.sp());
        EXPECT(0x1558, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9D 03E2
        gbc.setState(0x6c0, 0x9538, 0x9fc0, 0xca40, 0x36d, 0x2478, 0x0, 0x0);
        gbc.writeMem(0x6c0, { 0x9d });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x9538, gbc.sp());
        EXPECT(0x6c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9D 03E3
        gbc.setState(0xab5e, 0x3528, 0x9ba0, 0x5bbc, 0x8368, 0xdeeb, 0x1, 0x1);
        gbc.writeMem(0xab5e, { 0x9d });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x3528, gbc.sp());
        EXPECT(0xab5f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xab5e));
        // 9D 03E4
        gbc.setState(0xe376, 0x7a4a, 0x1940, 0x81e3, 0x27de, 0x4470, 0x1, 0x1);
        gbc.writeMem(0xe376, { 0x9d });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x7a4a, gbc.sp());
        EXPECT(0xe377, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xe376));
        // 9D 03E5
        gbc.setState(0xb24e, 0x58f, 0x5940, 0xe922, 0x5563, 0x38a0, 0x1, 0x1);
        gbc.writeMem(0xb24e, { 0x9d });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x58f, gbc.sp());
        EXPECT(0xb24f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xb24e));
        // 9D 03E6
        gbc.setState(0x60c7, 0xd261, 0x8b60, 0xe9f, 0xf8f7, 0x5c7f, 0x1, 0x1);
        gbc.writeMem(0x60c7, { 0x9d });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xd261, gbc.sp());
        EXPECT(0x60c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9D 03E7
        gbc.setState(0xb5c4, 0x9e48, 0x5fe0, 0xa7ff, 0x4c56, 0xeb58, 0x0, 0x0);
        gbc.writeMem(0xb5c4, { 0x9d });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x9e48, gbc.sp());
        EXPECT(0xb5c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xb5c4));
    }
