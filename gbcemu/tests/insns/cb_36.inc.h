    TEST(gbcemu, opcode_cb_36) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB 36 0000
        gbc.setState(0xca24, 0x326c, 0x9260, 0xb4dd, 0xef55, 0x915b, 0x0, 0x1);
        gbc.writeMem(0x915b, { 0x89 });
        gbc.writeMem(0xca24, { 0xcb, 0x36 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x326c, gbc.sp());
        EXPECT(0xca26, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0x915b));
        EXPECT(0xcb, gbc.readMem(0xca24));
        EXPECT(0x36, gbc.readMem(0xca25));
        // CB 36 0001
        gbc.setState(0xa0e3, 0xdf7a, 0x25a0, 0x1470, 0xcb3e, 0xacb0, 0x1, 0x0);
        gbc.writeMem(0xa0e3, { 0xcb, 0x36 });
        gbc.writeMem(0xacb0, { 0xe1 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xdf7a, gbc.sp());
        EXPECT(0xa0e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa0e3));
        EXPECT(0x36, gbc.readMem(0xa0e4));
        EXPECT(0x1e, gbc.readMem(0xacb0));
        // CB 36 0005
        gbc.setState(0x6520, 0xf79b, 0xee30, 0x1c68, 0xd2b, 0xa180, 0x1, 0x1);
        gbc.writeMem(0x6520, { 0xcb, 0x36 });
        gbc.writeMem(0xa180, { 0xf1 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xf79b, gbc.sp());
        EXPECT(0x6522, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1f, gbc.readMem(0xa180));
        // CB 36 0007
        gbc.setState(0xd9c7, 0x8fed, 0x8920, 0x2488, 0xca54, 0x9ff0, 0x1, 0x1);
        gbc.writeMem(0x9ff0, { 0xc2 });
        gbc.writeMem(0xd9c7, { 0xcb, 0x36 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x8fed, gbc.sp());
        EXPECT(0xd9c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0x9ff0));
        EXPECT(0xcb, gbc.readMem(0xd9c7));
        EXPECT(0x36, gbc.readMem(0xd9c8));
        // CB 36 0009
        gbc.setState(0xdd84, 0xd907, 0xfa0, 0x6221, 0x8daf, 0x8d7f, 0x1, 0x1);
        gbc.writeMem(0x8d7f, { 0x4b });
        gbc.writeMem(0xdd84, { 0xcb, 0x36 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xd907, gbc.sp());
        EXPECT(0xdd86, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb4, gbc.readMem(0x8d7f));
        EXPECT(0xcb, gbc.readMem(0xdd84));
        EXPECT(0x36, gbc.readMem(0xdd85));
        // CB 36 000A
        gbc.setState(0x9a00, 0x4de1, 0x6080, 0x99f1, 0xd3d, 0xfb52, 0x0, 0x1);
        gbc.writeMem(0x9a00, { 0xcb, 0x36 });
        gbc.writeMem(0xfb52, { 0xf6 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x4de1, gbc.sp());
        EXPECT(0x9a02, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a00));
        EXPECT(0x36, gbc.readMem(0x9a01));
        EXPECT(0x6f, gbc.readMem(0xfb52));
        // CB 36 000E
        gbc.setState(0x6959, 0x3ad8, 0xd600, 0xa99b, 0xe7c7, 0x8084, 0x0, 0x0);
        gbc.writeMem(0x6959, { 0xcb, 0x36 });
        gbc.writeMem(0x8084, { 0xe });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x3ad8, gbc.sp());
        EXPECT(0x695b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0x8084));
        // CB 36 0011
        gbc.setState(0x9f3, 0xca12, 0x9d70, 0xb756, 0xcc63, 0xfcc1, 0x1, 0x0);
        gbc.writeMem(0x9f3, { 0xcb, 0x36 });
        gbc.writeMem(0xfcc1, { 0x7 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xca12, gbc.sp());
        EXPECT(0x9f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x70, gbc.readMem(0xfcc1));
        // CB 36 0014
        gbc.setState(0x764b, 0x67d1, 0x1060, 0x313c, 0x3d46, 0xcb1d, 0x1, 0x1);
        gbc.writeMem(0x764b, { 0xcb, 0x36 });
        gbc.writeMem(0xcb1d, { 0x24 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x67d1, gbc.sp());
        EXPECT(0x764d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xcb1d));
        // CB 36 0016
        gbc.setState(0x6ee2, 0x7b7, 0x6020, 0xfa28, 0x4108, 0xbb6b, 0x0, 0x0);
        gbc.writeMem(0x6ee2, { 0xcb, 0x36 });
        gbc.writeMem(0xbb6b, { 0xe4 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x7b7, gbc.sp());
        EXPECT(0x6ee4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xbb6b));
        // CB 36 0017
        gbc.setState(0x2940, 0xa044, 0xa30, 0x95a6, 0x75b8, 0xf4fb, 0x1, 0x1);
        gbc.writeMem(0x2940, { 0xcb, 0x36 });
        gbc.writeMem(0xf4fb, { 0xc });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xa044, gbc.sp());
        EXPECT(0x2942, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc0, gbc.readMem(0xf4fb));
        // CB 36 0019
        gbc.setState(0x980b, 0xc37d, 0x2e90, 0x4910, 0xe763, 0xf404, 0x0, 0x1);
        gbc.writeMem(0x980b, { 0xcb, 0x36 });
        gbc.writeMem(0xf404, { 0xb7 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xc37d, gbc.sp());
        EXPECT(0x980d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x980b));
        EXPECT(0x36, gbc.readMem(0x980c));
        EXPECT(0x7b, gbc.readMem(0xf404));
        // CB 36 001A
        gbc.setState(0x8315, 0x2129, 0x7580, 0xbc2f, 0x2713, 0xf639, 0x1, 0x1);
        gbc.writeMem(0x8315, { 0xcb, 0x36 });
        gbc.writeMem(0xf639, { 0xfa });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x2129, gbc.sp());
        EXPECT(0x8317, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8315));
        EXPECT(0x36, gbc.readMem(0x8316));
        EXPECT(0xaf, gbc.readMem(0xf639));
        // CB 36 001C
        gbc.setState(0x8d96, 0x1da1, 0xe100, 0xdef9, 0x1289, 0xa6db, 0x0, 0x1);
        gbc.writeMem(0x8d96, { 0xcb, 0x36 });
        gbc.writeMem(0xa6db, { 0x97 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x1da1, gbc.sp());
        EXPECT(0x8d98, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d96));
        EXPECT(0x36, gbc.readMem(0x8d97));
        EXPECT(0x79, gbc.readMem(0xa6db));
        // CB 36 0020
        gbc.setState(0x2138, 0x19bd, 0xe910, 0x4c88, 0xc41a, 0xc46d, 0x0, 0x1);
        gbc.writeMem(0x2138, { 0xcb, 0x36 });
        gbc.writeMem(0xc46d, { 0xfe });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x19bd, gbc.sp());
        EXPECT(0x213a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xef, gbc.readMem(0xc46d));
        // CB 36 0021
        gbc.setState(0x6a6, 0x9c83, 0xae0, 0x6f47, 0x9f0a, 0x9325, 0x0, 0x0);
        gbc.writeMem(0x6a6, { 0xcb, 0x36 });
        gbc.writeMem(0x9325, { 0x6c });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x9c83, gbc.sp());
        EXPECT(0x6a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0x9325));
        // CB 36 0022
        gbc.setState(0x5042, 0x14ab, 0x52f0, 0x95db, 0x28a8, 0xed06, 0x1, 0x0);
        gbc.writeMem(0x5042, { 0xcb, 0x36 });
        gbc.writeMem(0xed06, { 0x7c });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x14ab, gbc.sp());
        EXPECT(0x5044, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc7, gbc.readMem(0xed06));
        // CB 36 0024
        gbc.setState(0xa822, 0x6753, 0x6990, 0x5be1, 0x14d3, 0xa2aa, 0x0, 0x0);
        gbc.writeMem(0xa2aa, { 0x47 });
        gbc.writeMem(0xa822, { 0xcb, 0x36 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x6753, gbc.sp());
        EXPECT(0xa824, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x74, gbc.readMem(0xa2aa));
        EXPECT(0xcb, gbc.readMem(0xa822));
        EXPECT(0x36, gbc.readMem(0xa823));
        // CB 36 0025
        gbc.setState(0x5983, 0x1ca6, 0xb120, 0x2b4a, 0xeabf, 0xb4c5, 0x0, 0x1);
        gbc.writeMem(0x5983, { 0xcb, 0x36 });
        gbc.writeMem(0xb4c5, { 0xe6 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x1ca6, gbc.sp());
        EXPECT(0x5985, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xb4c5));
        // CB 36 0027
        gbc.setState(0x2eb3, 0xb4f1, 0x62e0, 0xef91, 0x96c2, 0x8b4b, 0x0, 0x1);
        gbc.writeMem(0x2eb3, { 0xcb, 0x36 });
        gbc.writeMem(0x8b4b, { 0xe9 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xb4f1, gbc.sp());
        EXPECT(0x2eb5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0x8b4b));
        // CB 36 002C
        gbc.setState(0x3f33, 0x4fa1, 0x8830, 0xf522, 0x5190, 0x8dad, 0x1, 0x0);
        gbc.writeMem(0x3f33, { 0xcb, 0x36 });
        gbc.writeMem(0x8dad, { 0x72 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x4fa1, gbc.sp());
        EXPECT(0x3f35, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0x8dad));
        // CB 36 002F
        gbc.setState(0x834, 0xc43b, 0x6670, 0x60a1, 0xe7cb, 0xd85a, 0x1, 0x1);
        gbc.writeMem(0x834, { 0xcb, 0x36 });
        gbc.writeMem(0xd85a, { 0x5 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xc43b, gbc.sp());
        EXPECT(0x836, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xd85a));
        // CB 36 0030
        gbc.setState(0x4be0, 0x2e83, 0xee80, 0x3988, 0xf7bb, 0xce43, 0x0, 0x1);
        gbc.writeMem(0x4be0, { 0xcb, 0x36 });
        gbc.writeMem(0xce43, { 0x72 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x2e83, gbc.sp());
        EXPECT(0x4be2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xce43));
        // CB 36 0032
        gbc.setState(0x78da, 0x9ed8, 0x9cf0, 0x1f53, 0x242e, 0xe7a7, 0x1, 0x0);
        gbc.writeMem(0x78da, { 0xcb, 0x36 });
        gbc.writeMem(0xe7a7, { 0x14 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x9ed8, gbc.sp());
        EXPECT(0x78dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x41, gbc.readMem(0xe7a7));
        // CB 36 0033
        gbc.setState(0xe6ef, 0x638f, 0xe510, 0x70cd, 0x1224, 0xae2f, 0x0, 0x1);
        gbc.writeMem(0xae2f, { 0x25 });
        gbc.writeMem(0xe6ef, { 0xcb, 0x36 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x638f, gbc.sp());
        EXPECT(0xe6f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xae2f));
        EXPECT(0xcb, gbc.readMem(0xe6ef));
        EXPECT(0x36, gbc.readMem(0xe6f0));
        // CB 36 0037
        gbc.setState(0x694, 0x5735, 0x7cf0, 0xd73d, 0x537b, 0xc3cc, 0x1, 0x0);
        gbc.writeMem(0x694, { 0xcb, 0x36 });
        gbc.writeMem(0xc3cc, { 0x72 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x5735, gbc.sp());
        EXPECT(0x696, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xc3cc));
        // CB 36 003B
        gbc.setState(0x3c04, 0x81d6, 0x9440, 0xe8a7, 0x5b2f, 0x906c, 0x1, 0x0);
        gbc.writeMem(0x3c04, { 0xcb, 0x36 });
        gbc.writeMem(0x906c, { 0x84 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x81d6, gbc.sp());
        EXPECT(0x3c06, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0x906c));
        // CB 36 003D
        gbc.setState(0x2c98, 0xeda3, 0x64a0, 0x1f93, 0x6316, 0xa656, 0x0, 0x0);
        gbc.writeMem(0x2c98, { 0xcb, 0x36 });
        gbc.writeMem(0xa656, { 0xa });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xeda3, gbc.sp());
        EXPECT(0x2c9a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xa656));
        // CB 36 003F
        gbc.setState(0x566e, 0x2dea, 0x2b70, 0x228e, 0x9295, 0x9dcf, 0x1, 0x1);
        gbc.writeMem(0x566e, { 0xcb, 0x36 });
        gbc.writeMem(0x9dcf, { 0x2a });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x2dea, gbc.sp());
        EXPECT(0x5670, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0x9dcf));
        // CB 36 0040
        gbc.setState(0x8184, 0x7464, 0xfbc0, 0x86d5, 0xe4ae, 0xc030, 0x1, 0x0);
        gbc.writeMem(0x8184, { 0xcb, 0x36 });
        gbc.writeMem(0xc030, { 0xc4 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x7464, gbc.sp());
        EXPECT(0x8186, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8184));
        EXPECT(0x36, gbc.readMem(0x8185));
        EXPECT(0x4c, gbc.readMem(0xc030));
        // CB 36 0041
        gbc.setState(0x511, 0x1880, 0xc5e0, 0x53bc, 0x8dc4, 0xdb28, 0x0, 0x1);
        gbc.writeMem(0x511, { 0xcb, 0x36 });
        gbc.writeMem(0xdb28, { 0x86 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x1880, gbc.sp());
        EXPECT(0x513, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xdb28));
        // CB 36 0042
        gbc.setState(0x149e, 0xe1bf, 0x4de0, 0x2e55, 0x38fa, 0x2d17, 0x1, 0x0);
        gbc.writeMem(0x149e, { 0xcb, 0x36 });
        gbc.writeMem(0x2d17, { 0x22 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xe1bf, gbc.sp());
        EXPECT(0x14a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 36 0043
        gbc.setState(0x75b7, 0x7560, 0xcb70, 0x4408, 0xb37f, 0xd320, 0x0, 0x0);
        gbc.writeMem(0x75b7, { 0xcb, 0x36 });
        gbc.writeMem(0xd320, { 0xa });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x7560, gbc.sp());
        EXPECT(0x75b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xd320));
        // CB 36 0045
        gbc.setState(0x837b, 0x9e6d, 0xb1d0, 0x4500, 0xec30, 0xb77c, 0x1, 0x0);
        gbc.writeMem(0x837b, { 0xcb, 0x36 });
        gbc.writeMem(0xb77c, { 0x17 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x9e6d, gbc.sp());
        EXPECT(0x837d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x837b));
        EXPECT(0x36, gbc.readMem(0x837c));
        EXPECT(0x71, gbc.readMem(0xb77c));
        // CB 36 0048
        gbc.setState(0x94f4, 0x822d, 0x8630, 0x2058, 0x38c, 0xa0f3, 0x1, 0x1);
        gbc.writeMem(0x94f4, { 0xcb, 0x36 });
        gbc.writeMem(0xa0f3, { 0xd8 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x822d, gbc.sp());
        EXPECT(0x94f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x94f4));
        EXPECT(0x36, gbc.readMem(0x94f5));
        EXPECT(0x8d, gbc.readMem(0xa0f3));
        // CB 36 004A
        gbc.setState(0xdac9, 0x5fde, 0xdb40, 0xc5d8, 0x8bde, 0xf07c, 0x0, 0x0);
        gbc.writeMem(0xdac9, { 0xcb, 0x36 });
        gbc.writeMem(0xf07c, { 0x74 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x5fde, gbc.sp());
        EXPECT(0xdacb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdac9));
        EXPECT(0x36, gbc.readMem(0xdaca));
        EXPECT(0x47, gbc.readMem(0xf07c));
        // CB 36 004B
        gbc.setState(0x86c3, 0x19fe, 0x9760, 0xfb92, 0xbfa4, 0xed0e, 0x1, 0x1);
        gbc.writeMem(0x86c3, { 0xcb, 0x36 });
        gbc.writeMem(0xed0e, { 0x24 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x19fe, gbc.sp());
        EXPECT(0x86c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x86c3));
        EXPECT(0x36, gbc.readMem(0x86c4));
        EXPECT(0x42, gbc.readMem(0xed0e));
        // CB 36 004D
        gbc.setState(0xd66f, 0xabda, 0x6300, 0xab9e, 0x41b3, 0xcf5f, 0x0, 0x1);
        gbc.writeMem(0xcf5f, { 0x7f });
        gbc.writeMem(0xd66f, { 0xcb, 0x36 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xabda, gbc.sp());
        EXPECT(0xd671, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf7, gbc.readMem(0xcf5f));
        EXPECT(0xcb, gbc.readMem(0xd66f));
        EXPECT(0x36, gbc.readMem(0xd670));
        // CB 36 004E
        gbc.setState(0x8788, 0xe1c7, 0x1aa0, 0xf17, 0x5682, 0xb07a, 0x0, 0x1);
        gbc.writeMem(0x8788, { 0xcb, 0x36 });
        gbc.writeMem(0xb07a, { 0x28 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xe1c7, gbc.sp());
        EXPECT(0x878a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8788));
        EXPECT(0x36, gbc.readMem(0x8789));
        EXPECT(0x82, gbc.readMem(0xb07a));
        // CB 36 0054
        gbc.setState(0xd260, 0x216c, 0x3fd0, 0x1cef, 0x16d5, 0xca31, 0x1, 0x0);
        gbc.writeMem(0xca31, { 0x57 });
        gbc.writeMem(0xd260, { 0xcb, 0x36 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x216c, gbc.sp());
        EXPECT(0xd262, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x75, gbc.readMem(0xca31));
        EXPECT(0xcb, gbc.readMem(0xd260));
        EXPECT(0x36, gbc.readMem(0xd261));
        // CB 36 0056
        gbc.setState(0x7620, 0x9e1d, 0x7530, 0x8eb9, 0x9a79, 0xd25c, 0x0, 0x0);
        gbc.writeMem(0x7620, { 0xcb, 0x36 });
        gbc.writeMem(0xd25c, { 0xfa });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x9e1d, gbc.sp());
        EXPECT(0x7622, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaf, gbc.readMem(0xd25c));
        // CB 36 0059
        gbc.setState(0x6426, 0xd9c, 0x30, 0x8fcf, 0x2ea8, 0xc582, 0x1, 0x0);
        gbc.writeMem(0x6426, { 0xcb, 0x36 });
        gbc.writeMem(0xc582, { 0xf8 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xd9c, gbc.sp());
        EXPECT(0x6428, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xc582));
        // CB 36 005A
        gbc.setState(0xd3c6, 0x6bb4, 0xdf00, 0x3b8f, 0x51b8, 0x9b2c, 0x1, 0x0);
        gbc.writeMem(0x9b2c, { 0x9a });
        gbc.writeMem(0xd3c6, { 0xcb, 0x36 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x6bb4, gbc.sp());
        EXPECT(0xd3c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa9, gbc.readMem(0x9b2c));
        EXPECT(0xcb, gbc.readMem(0xd3c6));
        EXPECT(0x36, gbc.readMem(0xd3c7));
        // CB 36 005B
        gbc.setState(0x76a0, 0xbb1c, 0xa710, 0xf548, 0x2dc2, 0xbd27, 0x1, 0x1);
        gbc.writeMem(0x76a0, { 0xcb, 0x36 });
        gbc.writeMem(0xbd27, { 0x7d });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xbb1c, gbc.sp());
        EXPECT(0x76a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd7, gbc.readMem(0xbd27));
        // CB 36 005D
        gbc.setState(0x21b, 0xfab6, 0x5c20, 0x56e8, 0xa845, 0x8c3d, 0x1, 0x1);
        gbc.writeMem(0x21b, { 0xcb, 0x36 });
        gbc.writeMem(0x8c3d, { 0x91 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xfab6, gbc.sp());
        EXPECT(0x21d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0x8c3d));
        // CB 36 005E
        gbc.setState(0x28ac, 0x95b1, 0x6990, 0xeab3, 0x7683, 0x81a9, 0x1, 0x0);
        gbc.writeMem(0x28ac, { 0xcb, 0x36 });
        gbc.writeMem(0x81a9, { 0xe });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x95b1, gbc.sp());
        EXPECT(0x28ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0x81a9));
        // CB 36 0060
        gbc.setState(0x265e, 0x8823, 0x4c0, 0x97a3, 0xa35f, 0x4d17, 0x1, 0x1);
        gbc.writeMem(0x265e, { 0xcb, 0x36 });
        gbc.writeMem(0x4d17, { 0xaa });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x8823, gbc.sp());
        EXPECT(0x2660, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 36 0065
        gbc.setState(0x9854, 0x4eda, 0xdbf0, 0xf709, 0x7ab7, 0xfaa6, 0x1, 0x0);
        gbc.writeMem(0x9854, { 0xcb, 0x36 });
        gbc.writeMem(0xfaa6, { 0x5 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x4eda, gbc.sp());
        EXPECT(0x9856, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9854));
        EXPECT(0x36, gbc.readMem(0x9855));
        EXPECT(0x50, gbc.readMem(0xfaa6));
        // CB 36 0068
        gbc.setState(0xa77b, 0xed7, 0xe9d0, 0x59ee, 0x6135, 0xebf7, 0x0, 0x0);
        gbc.writeMem(0xa77b, { 0xcb, 0x36 });
        gbc.writeMem(0xebf7, { 0xe5 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xed7, gbc.sp());
        EXPECT(0xa77d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa77b));
        EXPECT(0x36, gbc.readMem(0xa77c));
        EXPECT(0x5e, gbc.readMem(0xebf7));
        // CB 36 006A
        gbc.setState(0x47c2, 0xda, 0xe3d0, 0xfc47, 0xef, 0xd627, 0x0, 0x0);
        gbc.writeMem(0x47c2, { 0xcb, 0x36 });
        gbc.writeMem(0xd627, { 0xf5 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xda, gbc.sp());
        EXPECT(0x47c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5f, gbc.readMem(0xd627));
        // CB 36 006B
        gbc.setState(0xb864, 0x7656, 0x3bf0, 0xe3de, 0xfa27, 0xe543, 0x1, 0x1);
        gbc.writeMem(0xb864, { 0xcb, 0x36 });
        gbc.writeMem(0xe543, { 0xa7 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x7656, gbc.sp());
        EXPECT(0xb866, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb864));
        EXPECT(0x36, gbc.readMem(0xb865));
        EXPECT(0x7a, gbc.readMem(0xe543));
        // CB 36 006F
        gbc.setState(0xb0f6, 0x68f3, 0xea00, 0x8089, 0xaa5e, 0xafa8, 0x1, 0x1);
        gbc.writeMem(0xafa8, { 0xf3 });
        gbc.writeMem(0xb0f6, { 0xcb, 0x36 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x68f3, gbc.sp());
        EXPECT(0xb0f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xafa8));
        EXPECT(0xcb, gbc.readMem(0xb0f6));
        EXPECT(0x36, gbc.readMem(0xb0f7));
        // CB 36 0070
        gbc.setState(0x4033, 0x4a41, 0x580, 0xe965, 0x3d66, 0x9244, 0x0, 0x1);
        gbc.writeMem(0x4033, { 0xcb, 0x36 });
        gbc.writeMem(0x9244, { 0x7 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x4a41, gbc.sp());
        EXPECT(0x4035, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x70, gbc.readMem(0x9244));
        // CB 36 0071
        gbc.setState(0x5fd3, 0xed5d, 0xe3b0, 0x1aff, 0xf2dc, 0xa132, 0x1, 0x1);
        gbc.writeMem(0x5fd3, { 0xcb, 0x36 });
        gbc.writeMem(0xa132, { 0xbe });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xed5d, gbc.sp());
        EXPECT(0x5fd5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xeb, gbc.readMem(0xa132));
        // CB 36 0072
        gbc.setState(0x30f9, 0x3747, 0x3e10, 0xa4f, 0xf13c, 0xf9f6, 0x0, 0x1);
        gbc.writeMem(0x30f9, { 0xcb, 0x36 });
        gbc.writeMem(0xf9f6, { 0x6d });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x3747, gbc.sp());
        EXPECT(0x30fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xf9f6));
        // CB 36 0073
        gbc.setState(0xa82, 0x7a68, 0x1de0, 0xc91e, 0x3588, 0xce58, 0x1, 0x0);
        gbc.writeMem(0xa82, { 0xcb, 0x36 });
        gbc.writeMem(0xce58, { 0xcc });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x7a68, gbc.sp());
        EXPECT(0xa84, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcc, gbc.readMem(0xce58));
        // CB 36 0074
        gbc.setState(0xe310, 0x7e4, 0x51c0, 0xef5d, 0xc730, 0x9d32, 0x1, 0x1);
        gbc.writeMem(0x9d32, { 0xf9 });
        gbc.writeMem(0xe310, { 0xcb, 0x36 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x7e4, gbc.sp());
        EXPECT(0xe312, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0x9d32));
        EXPECT(0xcb, gbc.readMem(0xe310));
        EXPECT(0x36, gbc.readMem(0xe311));
        // CB 36 0075
        gbc.setState(0x111b, 0x7c84, 0x26b0, 0x212f, 0xd98e, 0xc151, 0x1, 0x0);
        gbc.writeMem(0x111b, { 0xcb, 0x36 });
        gbc.writeMem(0xc151, { 0x2e });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x7c84, gbc.sp());
        EXPECT(0x111d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xc151));
        // CB 36 0076
        gbc.setState(0x95e1, 0x62c2, 0x4340, 0xc304, 0xa01c, 0xc74f, 0x0, 0x0);
        gbc.writeMem(0x95e1, { 0xcb, 0x36 });
        gbc.writeMem(0xc74f, { 0x24 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x62c2, gbc.sp());
        EXPECT(0x95e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x95e1));
        EXPECT(0x36, gbc.readMem(0x95e2));
        EXPECT(0x42, gbc.readMem(0xc74f));
        // CB 36 0077
        gbc.setState(0x370e, 0xc291, 0x41b0, 0xd44a, 0x3f60, 0xf0ae, 0x1, 0x0);
        gbc.writeMem(0x370e, { 0xcb, 0x36 });
        gbc.writeMem(0xf0ae, { 0x23 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xc291, gbc.sp());
        EXPECT(0x3710, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x32, gbc.readMem(0xf0ae));
        // CB 36 0078
        gbc.setState(0x21e1, 0x66be, 0x4dd0, 0xc04c, 0xc2a, 0x68e6, 0x1, 0x0);
        gbc.writeMem(0x21e1, { 0xcb, 0x36 });
        gbc.writeMem(0x68e6, { 0x11 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x66be, gbc.sp());
        EXPECT(0x21e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 36 0079
        gbc.setState(0x9535, 0xcef4, 0xb660, 0x6187, 0xcd37, 0x8ca9, 0x1, 0x1);
        gbc.writeMem(0x8ca9, { 0x32 });
        gbc.writeMem(0x9535, { 0xcb, 0x36 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xcef4, gbc.sp());
        EXPECT(0x9537, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x23, gbc.readMem(0x8ca9));
        EXPECT(0xcb, gbc.readMem(0x9535));
        EXPECT(0x36, gbc.readMem(0x9536));
        // CB 36 007B
        gbc.setState(0x6507, 0x1ccf, 0xd70, 0xf30b, 0xf2ee, 0xf8d0, 0x1, 0x0);
        gbc.writeMem(0x6507, { 0xcb, 0x36 });
        gbc.writeMem(0xf8d0, { 0x94 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x1ccf, gbc.sp());
        EXPECT(0x6509, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xf8d0));
        // CB 36 007C
        gbc.setState(0xce75, 0x7e68, 0xc940, 0x5c5d, 0x1dc0, 0xb67b, 0x0, 0x1);
        gbc.writeMem(0xb67b, { 0x14 });
        gbc.writeMem(0xce75, { 0xcb, 0x36 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x7e68, gbc.sp());
        EXPECT(0xce77, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x41, gbc.readMem(0xb67b));
        EXPECT(0xcb, gbc.readMem(0xce75));
        EXPECT(0x36, gbc.readMem(0xce76));
        // CB 36 0080
        gbc.setState(0x3044, 0x26a4, 0x2df0, 0xf578, 0xc8ec, 0xf87a, 0x0, 0x1);
        gbc.writeMem(0x3044, { 0xcb, 0x36 });
        gbc.writeMem(0xf87a, { 0x5c });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x26a4, gbc.sp());
        EXPECT(0x3046, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc5, gbc.readMem(0xf87a));
        // CB 36 0084
        gbc.setState(0x28e4, 0x4742, 0xbff0, 0xe5ce, 0xd6dd, 0xc218, 0x1, 0x1);
        gbc.writeMem(0x28e4, { 0xcb, 0x36 });
        gbc.writeMem(0xc218, { 0xc5 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x4742, gbc.sp());
        EXPECT(0x28e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5c, gbc.readMem(0xc218));
        // CB 36 0086
        gbc.setState(0x7824, 0x43d3, 0xa350, 0x3898, 0x4c1c, 0x9511, 0x1, 0x0);
        gbc.writeMem(0x7824, { 0xcb, 0x36 });
        gbc.writeMem(0x9511, { 0x14 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x43d3, gbc.sp());
        EXPECT(0x7826, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x41, gbc.readMem(0x9511));
        // CB 36 0087
        gbc.setState(0xdc2b, 0xf3ec, 0xfff0, 0x2cd5, 0xf107, 0x589d, 0x1, 0x1);
        gbc.writeMem(0x589d, { 0x88 });
        gbc.writeMem(0xdc2b, { 0xcb, 0x36 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xf3ec, gbc.sp());
        EXPECT(0xdc2d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc2b));
        EXPECT(0x36, gbc.readMem(0xdc2c));
        // CB 36 0088
        gbc.setState(0x7058, 0x3296, 0xdf70, 0xb1a7, 0xd6ed, 0xeb8e, 0x1, 0x1);
        gbc.writeMem(0x7058, { 0xcb, 0x36 });
        gbc.writeMem(0xeb8e, { 0x30 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x3296, gbc.sp());
        EXPECT(0x705a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xeb8e));
        // CB 36 0089
        gbc.setState(0x7775, 0x64c4, 0xc370, 0x6a3b, 0x5fc7, 0x9e6f, 0x1, 0x0);
        gbc.writeMem(0x7775, { 0xcb, 0x36 });
        gbc.writeMem(0x9e6f, { 0x7a });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x64c4, gbc.sp());
        EXPECT(0x7777, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0x9e6f));
        // CB 36 008B
        gbc.setState(0xc896, 0x4a1f, 0x31b0, 0x486b, 0x83f7, 0xb0bb, 0x1, 0x0);
        gbc.writeMem(0xb0bb, { 0xd3 });
        gbc.writeMem(0xc896, { 0xcb, 0x36 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x4a1f, gbc.sp());
        EXPECT(0xc898, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3d, gbc.readMem(0xb0bb));
        EXPECT(0xcb, gbc.readMem(0xc896));
        EXPECT(0x36, gbc.readMem(0xc897));
        // CB 36 008C
        gbc.setState(0x9adf, 0xb5aa, 0xd7e0, 0x5ec2, 0x577a, 0x88ad, 0x1, 0x0);
        gbc.writeMem(0x88ad, { 0x6 });
        gbc.writeMem(0x9adf, { 0xcb, 0x36 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xb5aa, gbc.sp());
        EXPECT(0x9ae1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x60, gbc.readMem(0x88ad));
        EXPECT(0xcb, gbc.readMem(0x9adf));
        EXPECT(0x36, gbc.readMem(0x9ae0));
        // CB 36 008E
        gbc.setState(0x67ba, 0xdf5e, 0xea30, 0xffe0, 0x65dc, 0x92c2, 0x0, 0x0);
        gbc.writeMem(0x67ba, { 0xcb, 0x36 });
        gbc.writeMem(0x92c2, { 0x8d });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xdf5e, gbc.sp());
        EXPECT(0x67bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd8, gbc.readMem(0x92c2));
        // CB 36 008F
        gbc.setState(0xde33, 0x3876, 0x2cd0, 0x462d, 0x6353, 0xa031, 0x0, 0x0);
        gbc.writeMem(0xa031, { 0xdb });
        gbc.writeMem(0xde33, { 0xcb, 0x36 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x3876, gbc.sp());
        EXPECT(0xde35, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xa031));
        EXPECT(0xcb, gbc.readMem(0xde33));
        EXPECT(0x36, gbc.readMem(0xde34));
        // CB 36 0090
        gbc.setState(0x36b7, 0xe913, 0x5d30, 0x1136, 0x349b, 0xa0df, 0x0, 0x1);
        gbc.writeMem(0x36b7, { 0xcb, 0x36 });
        gbc.writeMem(0xa0df, { 0x36 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xe913, gbc.sp());
        EXPECT(0x36b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x63, gbc.readMem(0xa0df));
        // CB 36 0091
        gbc.setState(0xb353, 0x697f, 0x7430, 0x143f, 0x7ba2, 0xa3da, 0x1, 0x0);
        gbc.writeMem(0xa3da, { 0xe1 });
        gbc.writeMem(0xb353, { 0xcb, 0x36 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x697f, gbc.sp());
        EXPECT(0xb355, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1e, gbc.readMem(0xa3da));
        EXPECT(0xcb, gbc.readMem(0xb353));
        EXPECT(0x36, gbc.readMem(0xb354));
        // CB 36 0093
        gbc.setState(0x8b1d, 0x6a75, 0x7650, 0x7238, 0xd038, 0x9942, 0x0, 0x0);
        gbc.writeMem(0x8b1d, { 0xcb, 0x36 });
        gbc.writeMem(0x9942, { 0x12 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x6a75, gbc.sp());
        EXPECT(0x8b1f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b1d));
        EXPECT(0x36, gbc.readMem(0x8b1e));
        EXPECT(0x21, gbc.readMem(0x9942));
        // CB 36 0095
        gbc.setState(0xcc12, 0x6484, 0x8240, 0x99d5, 0x8c36, 0xf6dc, 0x0, 0x0);
        gbc.writeMem(0xcc12, { 0xcb, 0x36 });
        gbc.writeMem(0xf6dc, { 0x34 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x6484, gbc.sp());
        EXPECT(0xcc14, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc12));
        EXPECT(0x36, gbc.readMem(0xcc13));
        EXPECT(0x43, gbc.readMem(0xf6dc));
        // CB 36 0097
        gbc.setState(0x850a, 0x23e0, 0xbfb0, 0x8bc3, 0xd251, 0xb0fe, 0x1, 0x0);
        gbc.writeMem(0x850a, { 0xcb, 0x36 });
        gbc.writeMem(0xb0fe, { 0xf9 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x23e0, gbc.sp());
        EXPECT(0x850c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x850a));
        EXPECT(0x36, gbc.readMem(0x850b));
        EXPECT(0x9f, gbc.readMem(0xb0fe));
        // CB 36 0098
        gbc.setState(0x4e, 0x83a6, 0x3e00, 0x8b89, 0x1273, 0xe9be, 0x0, 0x1);
        gbc.writeMem(0x4e, { 0xcb, 0x36 });
        gbc.writeMem(0xe9be, { 0x3f });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x83a6, gbc.sp());
        EXPECT(0x50, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf3, gbc.readMem(0xe9be));
        // CB 36 009D
        gbc.setState(0xb5c, 0xe00, 0xf830, 0x267f, 0x4b27, 0xc860, 0x0, 0x1);
        gbc.writeMem(0xb5c, { 0xcb, 0x36 });
        gbc.writeMem(0xc860, { 0x10 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xe00, gbc.sp());
        EXPECT(0xb5e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1, gbc.readMem(0xc860));
        // CB 36 009E
        gbc.setState(0x2f5d, 0xb9e6, 0x29e0, 0x5f75, 0x7667, 0xf444, 0x1, 0x0);
        gbc.writeMem(0x2f5d, { 0xcb, 0x36 });
        gbc.writeMem(0xf444, { 0x7c });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xb9e6, gbc.sp());
        EXPECT(0x2f5f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc7, gbc.readMem(0xf444));
        // CB 36 00A1
        gbc.setState(0xee51, 0x3ae5, 0x5620, 0xa731, 0x11b8, 0x9280, 0x0, 0x0);
        gbc.writeMem(0x9280, { 0x1 });
        gbc.writeMem(0xee51, { 0xcb, 0x36 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x3ae5, gbc.sp());
        EXPECT(0xee53, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0x9280));
        EXPECT(0xcb, gbc.readMem(0xee51));
        EXPECT(0x36, gbc.readMem(0xee52));
        // CB 36 00A3
        gbc.setState(0x372, 0xd319, 0x2b50, 0xaa5f, 0xeb91, 0x8828, 0x1, 0x1);
        gbc.writeMem(0x372, { 0xcb, 0x36 });
        gbc.writeMem(0x8828, { 0x6f });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xd319, gbc.sp());
        EXPECT(0x374, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf6, gbc.readMem(0x8828));
        // CB 36 00A4
        gbc.setState(0x9cda, 0xd296, 0x6a00, 0xf468, 0xe86f, 0xb9b1, 0x0, 0x1);
        gbc.writeMem(0x9cda, { 0xcb, 0x36 });
        gbc.writeMem(0xb9b1, { 0xed });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xd296, gbc.sp());
        EXPECT(0x9cdc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9cda));
        EXPECT(0x36, gbc.readMem(0x9cdb));
        EXPECT(0xde, gbc.readMem(0xb9b1));
        // CB 36 00A6
        gbc.setState(0xd2ab, 0x1fda, 0xee70, 0x6bad, 0xd5fc, 0xd173, 0x0, 0x0);
        gbc.writeMem(0xd173, { 0x5d });
        gbc.writeMem(0xd2ab, { 0xcb, 0x36 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x1fda, gbc.sp());
        EXPECT(0xd2ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd5, gbc.readMem(0xd173));
        EXPECT(0xcb, gbc.readMem(0xd2ab));
        EXPECT(0x36, gbc.readMem(0xd2ac));
        // CB 36 00A7
        gbc.setState(0xe591, 0xd2f3, 0x2890, 0xbffd, 0xd304, 0x85e1, 0x1, 0x1);
        gbc.writeMem(0x85e1, { 0x57 });
        gbc.writeMem(0xe591, { 0xcb, 0x36 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xd2f3, gbc.sp());
        EXPECT(0xe593, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x75, gbc.readMem(0x85e1));
        EXPECT(0xcb, gbc.readMem(0xe591));
        EXPECT(0x36, gbc.readMem(0xe592));
        // CB 36 00A9
        gbc.setState(0xea6, 0xef15, 0x5cd0, 0x9918, 0x61e3, 0xea15, 0x1, 0x1);
        gbc.writeMem(0xea6, { 0xcb, 0x36 });
        gbc.writeMem(0xea15, { 0x96 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xef15, gbc.sp());
        EXPECT(0xea8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xea15));
        // CB 36 00AA
        gbc.setState(0x91a5, 0x2c34, 0x290, 0x5826, 0xd7b6, 0xc335, 0x1, 0x1);
        gbc.writeMem(0x91a5, { 0xcb, 0x36 });
        gbc.writeMem(0xc335, { 0xd1 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x2c34, gbc.sp());
        EXPECT(0x91a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x91a5));
        EXPECT(0x36, gbc.readMem(0x91a6));
        EXPECT(0x1d, gbc.readMem(0xc335));
        // CB 36 00AD
        gbc.setState(0x330, 0x5923, 0xa8d0, 0xcfa4, 0xdf2f, 0xd6f0, 0x1, 0x1);
        gbc.writeMem(0x330, { 0xcb, 0x36 });
        gbc.writeMem(0xd6f0, { 0x4c });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x5923, gbc.sp());
        EXPECT(0x332, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc4, gbc.readMem(0xd6f0));
        // CB 36 00AE
        gbc.setState(0x797e, 0xe75, 0x3980, 0x7633, 0x3f8a, 0xa443, 0x0, 0x1);
        gbc.writeMem(0x797e, { 0xcb, 0x36 });
        gbc.writeMem(0xa443, { 0xce });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xe75, gbc.sp());
        EXPECT(0x7980, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xec, gbc.readMem(0xa443));
        // CB 36 00B0
        gbc.setState(0x6fc, 0x771d, 0x41a0, 0x435f, 0x4863, 0x9088, 0x0, 0x1);
        gbc.writeMem(0x6fc, { 0xcb, 0x36 });
        gbc.writeMem(0x9088, { 0xdb });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x771d, gbc.sp());
        EXPECT(0x6fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0x9088));
        // CB 36 00B1
        gbc.setState(0x3415, 0x77c6, 0xa4b0, 0x6e89, 0x14ca, 0xc031, 0x1, 0x0);
        gbc.writeMem(0x3415, { 0xcb, 0x36 });
        gbc.writeMem(0xc031, { 0xd0 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x77c6, gbc.sp());
        EXPECT(0x3417, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd, gbc.readMem(0xc031));
        // CB 36 00B2
        gbc.setState(0x5ff8, 0xf016, 0x18a0, 0x9a8, 0xd182, 0xbb2f, 0x1, 0x0);
        gbc.writeMem(0x5ff8, { 0xcb, 0x36 });
        gbc.writeMem(0xbb2f, { 0x27 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xf016, gbc.sp());
        EXPECT(0x5ffa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x72, gbc.readMem(0xbb2f));
        // CB 36 00B3
        gbc.setState(0x8e09, 0xbb8f, 0x3410, 0x8d30, 0x9773, 0x948f, 0x0, 0x1);
        gbc.writeMem(0x8e09, { 0xcb, 0x36 });
        gbc.writeMem(0x948f, { 0xc5 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xbb8f, gbc.sp());
        EXPECT(0x8e0b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e09));
        EXPECT(0x36, gbc.readMem(0x8e0a));
        EXPECT(0x5c, gbc.readMem(0x948f));
        // CB 36 00B7
        gbc.setState(0x890e, 0xe910, 0xc200, 0x8cae, 0xb25b, 0x828d, 0x0, 0x0);
        gbc.writeMem(0x828d, { 0x52 });
        gbc.writeMem(0x890e, { 0xcb, 0x36 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xe910, gbc.sp());
        EXPECT(0x8910, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0x828d));
        EXPECT(0xcb, gbc.readMem(0x890e));
        EXPECT(0x36, gbc.readMem(0x890f));
        // CB 36 00B8
        gbc.setState(0xa827, 0x268b, 0x4480, 0x8c4c, 0xdcfc, 0xe7ca, 0x1, 0x1);
        gbc.writeMem(0xa827, { 0xcb, 0x36 });
        gbc.writeMem(0xe7ca, { 0x76 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x268b, gbc.sp());
        EXPECT(0xa829, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa827));
        EXPECT(0x36, gbc.readMem(0xa828));
        EXPECT(0x67, gbc.readMem(0xe7ca));
        // CB 36 00BA
        gbc.setState(0x43c7, 0x6cda, 0xd050, 0x698e, 0xf293, 0xd00a, 0x1, 0x0);
        gbc.writeMem(0x43c7, { 0xcb, 0x36 });
        gbc.writeMem(0xd00a, { 0x41 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x6cda, gbc.sp());
        EXPECT(0x43c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xd00a));
        // CB 36 00BB
        gbc.setState(0x9442, 0x2653, 0xc650, 0x6cb, 0xe512, 0x5567, 0x1, 0x1);
        gbc.writeMem(0x5567, { 0xaa });
        gbc.writeMem(0x9442, { 0xcb, 0x36 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x2653, gbc.sp());
        EXPECT(0x9444, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9442));
        EXPECT(0x36, gbc.readMem(0x9443));
        // CB 36 00BD
        gbc.setState(0x708f, 0xd20f, 0x93a0, 0x204e, 0xb32b, 0x9b7a, 0x1, 0x0);
        gbc.writeMem(0x708f, { 0xcb, 0x36 });
        gbc.writeMem(0x9b7a, { 0xa0 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xd20f, gbc.sp());
        EXPECT(0x7091, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0x9b7a));
        // CB 36 00BF
        gbc.setState(0x264c, 0x92f5, 0x9fc0, 0xc436, 0xc53e, 0x9392, 0x1, 0x1);
        gbc.writeMem(0x264c, { 0xcb, 0x36 });
        gbc.writeMem(0x9392, { 0x1b });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x92f5, gbc.sp());
        EXPECT(0x264e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb1, gbc.readMem(0x9392));
        // CB 36 00C1
        gbc.setState(0x5fa9, 0x2042, 0x190, 0x5956, 0x425f, 0xe89a, 0x0, 0x1);
        gbc.writeMem(0x5fa9, { 0xcb, 0x36 });
        gbc.writeMem(0xe89a, { 0x1c });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x2042, gbc.sp());
        EXPECT(0x5fab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xe89a));
        // CB 36 00C2
        gbc.setState(0x747, 0x4683, 0x64a0, 0x208b, 0x695d, 0x9dc1, 0x0, 0x0);
        gbc.writeMem(0x747, { 0xcb, 0x36 });
        gbc.writeMem(0x9dc1, { 0x3d });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x4683, gbc.sp());
        EXPECT(0x749, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd3, gbc.readMem(0x9dc1));
        // CB 36 00C3
        gbc.setState(0xa327, 0x6386, 0x2ba0, 0x3788, 0xfaf6, 0xfae1, 0x0, 0x0);
        gbc.writeMem(0xa327, { 0xcb, 0x36 });
        gbc.writeMem(0xfae1, { 0x80 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x6386, gbc.sp());
        EXPECT(0xa329, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa327));
        EXPECT(0x36, gbc.readMem(0xa328));
        EXPECT(0x8, gbc.readMem(0xfae1));
        // CB 36 00C7
        gbc.setState(0x9ae8, 0xd67c, 0xd340, 0x31d4, 0xce1a, 0xdde5, 0x0, 0x1);
        gbc.writeMem(0x9ae8, { 0xcb, 0x36 });
        gbc.writeMem(0xdde5, { 0x74 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xd67c, gbc.sp());
        EXPECT(0x9aea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ae8));
        EXPECT(0x36, gbc.readMem(0x9ae9));
        EXPECT(0x47, gbc.readMem(0xdde5));
        // CB 36 00C9
        gbc.setState(0x2cbe, 0xb753, 0xff60, 0x1eda, 0x3a0, 0xf678, 0x1, 0x1);
        gbc.writeMem(0x2cbe, { 0xcb, 0x36 });
        gbc.writeMem(0xf678, { 0x8f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xb753, gbc.sp());
        EXPECT(0x2cc0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xf678));
        // CB 36 00CB
        gbc.setState(0x48ba, 0xc6a2, 0x4f40, 0xb504, 0x4702, 0xd196, 0x1, 0x1);
        gbc.writeMem(0x48ba, { 0xcb, 0x36 });
        gbc.writeMem(0xd196, { 0xe6 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xc6a2, gbc.sp());
        EXPECT(0x48bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xd196));
        // CB 36 00CC
        gbc.setState(0x7774, 0x5272, 0x7b90, 0x443d, 0x217e, 0xb4cd, 0x0, 0x1);
        gbc.writeMem(0x7774, { 0xcb, 0x36 });
        gbc.writeMem(0xb4cd, { 0xdd });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x5272, gbc.sp());
        EXPECT(0x7776, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xdd, gbc.readMem(0xb4cd));
        // CB 36 00D1
        gbc.setState(0x95ca, 0x5e2a, 0x94b0, 0x44c1, 0x3020, 0x9b00, 0x1, 0x1);
        gbc.writeMem(0x95ca, { 0xcb, 0x36 });
        gbc.writeMem(0x9b00, { 0x79 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x5e2a, gbc.sp());
        EXPECT(0x95cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x95ca));
        EXPECT(0x36, gbc.readMem(0x95cb));
        EXPECT(0x97, gbc.readMem(0x9b00));
        // CB 36 00D2
        gbc.setState(0x7993, 0xc4a1, 0xcbe0, 0x5f3f, 0xcf50, 0xfeab, 0x0, 0x0);
        gbc.writeMem(0x7993, { 0xcb, 0x36 });
        gbc.writeMem(0xfeab, { 0xcb });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xc4a1, gbc.sp());
        EXPECT(0x7995, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xfeab));
        // CB 36 00D3
        gbc.setState(0x410a, 0xd5e0, 0x4cf0, 0xac76, 0xeca3, 0xf1b2, 0x1, 0x0);
        gbc.writeMem(0x410a, { 0xcb, 0x36 });
        gbc.writeMem(0xf1b2, { 0x64 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xd5e0, gbc.sp());
        EXPECT(0x410c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x46, gbc.readMem(0xf1b2));
        // CB 36 00D4
        gbc.setState(0xd723, 0xd576, 0x1f10, 0xb7dc, 0x430e, 0x88ae, 0x0, 0x0);
        gbc.writeMem(0x88ae, { 0xb1 });
        gbc.writeMem(0xd723, { 0xcb, 0x36 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xd576, gbc.sp());
        EXPECT(0xd725, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1b, gbc.readMem(0x88ae));
        EXPECT(0xcb, gbc.readMem(0xd723));
        EXPECT(0x36, gbc.readMem(0xd724));
        // CB 36 00D7
        gbc.setState(0xc93a, 0x4471, 0xcaf0, 0xbb8f, 0x2ba1, 0x7a9f, 0x1, 0x1);
        gbc.writeMem(0x7a9f, { 0x33 });
        gbc.writeMem(0xc93a, { 0xcb, 0x36 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x4471, gbc.sp());
        EXPECT(0xc93c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc93a));
        EXPECT(0x36, gbc.readMem(0xc93b));
        // CB 36 00D9
        gbc.setState(0x3229, 0xb249, 0xd740, 0xd64b, 0xd233, 0xa375, 0x1, 0x0);
        gbc.writeMem(0x3229, { 0xcb, 0x36 });
        gbc.writeMem(0xa375, { 0xe1 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xb249, gbc.sp());
        EXPECT(0x322b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1e, gbc.readMem(0xa375));
        // CB 36 00DC
        gbc.setState(0x3f9f, 0x704a, 0x3330, 0xe209, 0x40d4, 0xba17, 0x1, 0x0);
        gbc.writeMem(0x3f9f, { 0xcb, 0x36 });
        gbc.writeMem(0xba17, { 0xac });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x704a, gbc.sp());
        EXPECT(0x3fa1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xca, gbc.readMem(0xba17));
        // CB 36 00E2
        gbc.setState(0x30b9, 0x178e, 0x8b50, 0xd617, 0x282b, 0x9d45, 0x0, 0x0);
        gbc.writeMem(0x30b9, { 0xcb, 0x36 });
        gbc.writeMem(0x9d45, { 0xfa });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x178e, gbc.sp());
        EXPECT(0x30bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaf, gbc.readMem(0x9d45));
        // CB 36 00E4
        gbc.setState(0x1991, 0x6d1, 0xfda0, 0x86b5, 0xf0ac, 0xd279, 0x0, 0x0);
        gbc.writeMem(0x1991, { 0xcb, 0x36 });
        gbc.writeMem(0xd279, { 0x9b });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x6d1, gbc.sp());
        EXPECT(0x1993, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xd279));
        // CB 36 00E5
        gbc.setState(0x4df0, 0xc5dd, 0x67a0, 0x5d7e, 0x7c61, 0x8c0e, 0x0, 0x1);
        gbc.writeMem(0x4df0, { 0xcb, 0x36 });
        gbc.writeMem(0x8c0e, { 0x12 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xc5dd, gbc.sp());
        EXPECT(0x4df2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0x8c0e));
        // CB 36 00E8
        gbc.setState(0x1c20, 0x43f1, 0xe800, 0x4001, 0x8bc, 0x805c, 0x0, 0x0);
        gbc.writeMem(0x1c20, { 0xcb, 0x36 });
        gbc.writeMem(0x805c, { 0xa });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x43f1, gbc.sp());
        EXPECT(0x1c22, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0x805c));
        // CB 36 00E9
        gbc.setState(0x3245, 0x5, 0x4a10, 0x2283, 0x9b10, 0xf9e0, 0x1, 0x0);
        gbc.writeMem(0x3245, { 0xcb, 0x36 });
        gbc.writeMem(0xf9e0, { 0xdd });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x5, gbc.sp());
        EXPECT(0x3247, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xdd, gbc.readMem(0xf9e0));
        // CB 36 00EE
        gbc.setState(0x74fb, 0x18e2, 0x4770, 0x1d81, 0x160b, 0xffc8, 0x1, 0x0);
        gbc.writeMem(0x74fb, { 0xcb, 0x36 });
        gbc.writeMem(0xffc8, { 0x7a });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x18e2, gbc.sp());
        EXPECT(0x74fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xffc8));
        // CB 36 00EF
        gbc.setState(0x9bcb, 0x9390, 0x8250, 0xf5b1, 0xfd18, 0x6c3f, 0x0, 0x1);
        gbc.writeMem(0x6c3f, { 0x22 });
        gbc.writeMem(0x9bcb, { 0xcb, 0x36 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x9390, gbc.sp());
        EXPECT(0x9bcd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9bcb));
        EXPECT(0x36, gbc.readMem(0x9bcc));
        // CB 36 00F0
        gbc.setState(0x61fa, 0x730b, 0x8ca0, 0x37d9, 0x3f2, 0x34dd, 0x1, 0x1);
        gbc.writeMem(0x34dd, { 0x22 });
        gbc.writeMem(0x61fa, { 0xcb, 0x36 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x730b, gbc.sp());
        EXPECT(0x61fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 36 00F1
        gbc.setState(0x15e3, 0x6077, 0x4a40, 0x7e34, 0xe9c6, 0xb026, 0x0, 0x1);
        gbc.writeMem(0x15e3, { 0xcb, 0x36 });
        gbc.writeMem(0xb026, { 0x82 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x6077, gbc.sp());
        EXPECT(0x15e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x28, gbc.readMem(0xb026));
        // CB 36 00F3
        gbc.setState(0xb3d6, 0xc9f6, 0xeb50, 0xf96c, 0x3561, 0x9eb4, 0x1, 0x0);
        gbc.writeMem(0x9eb4, { 0x7d });
        gbc.writeMem(0xb3d6, { 0xcb, 0x36 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xc9f6, gbc.sp());
        EXPECT(0xb3d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd7, gbc.readMem(0x9eb4));
        EXPECT(0xcb, gbc.readMem(0xb3d6));
        EXPECT(0x36, gbc.readMem(0xb3d7));
        // CB 36 00F4
        gbc.setState(0x58c9, 0xfcdd, 0xc2d0, 0x2d54, 0xf517, 0xa410, 0x1, 0x1);
        gbc.writeMem(0x58c9, { 0xcb, 0x36 });
        gbc.writeMem(0xa410, { 0x9c });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xfcdd, gbc.sp());
        EXPECT(0x58cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xa410));
        // CB 36 00F5
        gbc.setState(0xd28f, 0x375d, 0x3290, 0x11b2, 0x2c79, 0xb19, 0x1, 0x0);
        gbc.writeMem(0xb19, { 0xaa });
        gbc.writeMem(0xd28f, { 0xcb, 0x36 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x375d, gbc.sp());
        EXPECT(0xd291, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd28f));
        EXPECT(0x36, gbc.readMem(0xd290));
        // CB 36 00F6
        gbc.setState(0x1125, 0x1434, 0xedc0, 0x5981, 0xabd9, 0xaaad, 0x0, 0x1);
        gbc.writeMem(0x1125, { 0xcb, 0x36 });
        gbc.writeMem(0xaaad, { 0xa4 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x1434, gbc.sp());
        EXPECT(0x1127, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4a, gbc.readMem(0xaaad));
        // CB 36 00F7
        gbc.setState(0x3775, 0x1fb, 0x38d0, 0x53b6, 0x9318, 0xd8dd, 0x1, 0x0);
        gbc.writeMem(0x3775, { 0xcb, 0x36 });
        gbc.writeMem(0xd8dd, { 0x47 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x1fb, gbc.sp());
        EXPECT(0x3777, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x74, gbc.readMem(0xd8dd));
        // CB 36 00F8
        gbc.setState(0xc1dd, 0x2880, 0x87a0, 0x2811, 0x8620, 0xffd7, 0x1, 0x0);
        gbc.writeMem(0xc1dd, { 0xcb, 0x36 });
        gbc.writeMem(0xffd7, { 0x96 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x2880, gbc.sp());
        EXPECT(0xc1df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc1dd));
        EXPECT(0x36, gbc.readMem(0xc1de));
        EXPECT(0x69, gbc.readMem(0xffd7));
        // CB 36 00FB
        gbc.setState(0xb6fc, 0x6178, 0x7970, 0x5198, 0x1955, 0xd6cb, 0x0, 0x0);
        gbc.writeMem(0xb6fc, { 0xcb, 0x36 });
        gbc.writeMem(0xd6cb, { 0x33 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x6178, gbc.sp());
        EXPECT(0xb6fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb6fc));
        EXPECT(0x36, gbc.readMem(0xb6fd));
        EXPECT(0x33, gbc.readMem(0xd6cb));
        // CB 36 00FF
        gbc.setState(0xd69, 0x5a9c, 0xbe20, 0x6bf3, 0xa114, 0xab59, 0x1, 0x1);
        gbc.writeMem(0xd69, { 0xcb, 0x36 });
        gbc.writeMem(0xab59, { 0xe5 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x5a9c, gbc.sp());
        EXPECT(0xd6b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xab59));
        // CB 36 0100
        gbc.setState(0x4b1a, 0xeab8, 0x37b0, 0xbcbd, 0x5de4, 0x91c1, 0x0, 0x0);
        gbc.writeMem(0x4b1a, { 0xcb, 0x36 });
        gbc.writeMem(0x91c1, { 0x49 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xeab8, gbc.sp());
        EXPECT(0x4b1c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0x91c1));
        // CB 36 0101
        gbc.setState(0x1697, 0xa738, 0xf820, 0x4006, 0xadc9, 0xf183, 0x0, 0x1);
        gbc.writeMem(0x1697, { 0xcb, 0x36 });
        gbc.writeMem(0xf183, { 0x2d });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xa738, gbc.sp());
        EXPECT(0x1699, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd2, gbc.readMem(0xf183));
        // CB 36 0105
        gbc.setState(0xc5a9, 0x309c, 0xbbc0, 0xa9f8, 0x347c, 0xa373, 0x1, 0x0);
        gbc.writeMem(0xa373, { 0xef });
        gbc.writeMem(0xc5a9, { 0xcb, 0x36 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x309c, gbc.sp());
        EXPECT(0xc5ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xa373));
        EXPECT(0xcb, gbc.readMem(0xc5a9));
        EXPECT(0x36, gbc.readMem(0xc5aa));
        // CB 36 0106
        gbc.setState(0x8bb6, 0xd80d, 0xf7e0, 0x6b3f, 0xd30e, 0xd97c, 0x0, 0x1);
        gbc.writeMem(0x8bb6, { 0xcb, 0x36 });
        gbc.writeMem(0xd97c, { 0x30 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xd80d, gbc.sp());
        EXPECT(0x8bb8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8bb6));
        EXPECT(0x36, gbc.readMem(0x8bb7));
        EXPECT(0x3, gbc.readMem(0xd97c));
        // CB 36 0107
        gbc.setState(0xa41e, 0x768e, 0xd840, 0xb21f, 0x7d35, 0xdd8a, 0x1, 0x1);
        gbc.writeMem(0xa41e, { 0xcb, 0x36 });
        gbc.writeMem(0xdd8a, { 0xb3 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x768e, gbc.sp());
        EXPECT(0xa420, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa41e));
        EXPECT(0x36, gbc.readMem(0xa41f));
        EXPECT(0x3b, gbc.readMem(0xdd8a));
        // CB 36 0109
        gbc.setState(0x4af3, 0xb566, 0x4910, 0xe8fb, 0xf9c9, 0xb585, 0x1, 0x1);
        gbc.writeMem(0x4af3, { 0xcb, 0x36 });
        gbc.writeMem(0xb585, { 0x56 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xb566, gbc.sp());
        EXPECT(0x4af5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xb585));
        // CB 36 0112
        gbc.setState(0x5fcf, 0x27d6, 0x8560, 0x8cac, 0x10ae, 0xecb9, 0x1, 0x1);
        gbc.writeMem(0x5fcf, { 0xcb, 0x36 });
        gbc.writeMem(0xecb9, { 0x1c });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x27d6, gbc.sp());
        EXPECT(0x5fd1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xecb9));
        // CB 36 0113
        gbc.setState(0xbc7, 0x47be, 0xa770, 0xcc71, 0x2018, 0x968a, 0x1, 0x0);
        gbc.writeMem(0xbc7, { 0xcb, 0x36 });
        gbc.writeMem(0x968a, { 0x33 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x47be, gbc.sp());
        EXPECT(0xbc9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0x968a));
        // CB 36 0114
        gbc.setState(0x15da, 0xfa68, 0xce00, 0xe46b, 0x7e6c, 0xfbf9, 0x1, 0x0);
        gbc.writeMem(0x15da, { 0xcb, 0x36 });
        gbc.writeMem(0xfbf9, { 0x74 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xfa68, gbc.sp());
        EXPECT(0x15dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xfbf9));
        // CB 36 0115
        gbc.setState(0x5961, 0xf04a, 0x9c80, 0xe315, 0xf156, 0x9fe2, 0x1, 0x0);
        gbc.writeMem(0x5961, { 0xcb, 0x36 });
        gbc.writeMem(0x9fe2, { 0x3e });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xf04a, gbc.sp());
        EXPECT(0x5963, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe3, gbc.readMem(0x9fe2));
        // CB 36 0116
        gbc.setState(0xe3c4, 0x41e1, 0xd070, 0xc7e3, 0xac65, 0xe58d, 0x1, 0x1);
        gbc.writeMem(0xe3c4, { 0xcb, 0x36 });
        gbc.writeMem(0xe58d, { 0xe6 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x41e1, gbc.sp());
        EXPECT(0xe3c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe3c4));
        EXPECT(0x36, gbc.readMem(0xe3c5));
        EXPECT(0x6e, gbc.readMem(0xe58d));
        // CB 36 0118
        gbc.setState(0xcc16, 0xa6a2, 0x4050, 0xdbeb, 0xd249, 0xa8ba, 0x0, 0x1);
        gbc.writeMem(0xa8ba, { 0x50 });
        gbc.writeMem(0xcc16, { 0xcb, 0x36 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xa6a2, gbc.sp());
        EXPECT(0xcc18, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xa8ba));
        EXPECT(0xcb, gbc.readMem(0xcc16));
        EXPECT(0x36, gbc.readMem(0xcc17));
        // CB 36 011C
        gbc.setState(0x4301, 0x1cc9, 0x4a00, 0xb479, 0xc081, 0xf070, 0x0, 0x0);
        gbc.writeMem(0x4301, { 0xcb, 0x36 });
        gbc.writeMem(0xf070, { 0x9 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x1cc9, gbc.sp());
        EXPECT(0x4303, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x90, gbc.readMem(0xf070));
        // CB 36 011F
        gbc.setState(0x342a, 0xf122, 0x2f10, 0xd787, 0xc78a, 0xd6e3, 0x1, 0x1);
        gbc.writeMem(0x342a, { 0xcb, 0x36 });
        gbc.writeMem(0xd6e3, { 0xee });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xf122, gbc.sp());
        EXPECT(0x342c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xee, gbc.readMem(0xd6e3));
        // CB 36 0120
        gbc.setState(0xc7a0, 0x7f53, 0x3220, 0xeb18, 0xbff5, 0xd524, 0x0, 0x0);
        gbc.writeMem(0xc7a0, { 0xcb, 0x36 });
        gbc.writeMem(0xd524, { 0x2 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x7f53, gbc.sp());
        EXPECT(0xc7a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc7a0));
        EXPECT(0x36, gbc.readMem(0xc7a1));
        EXPECT(0x20, gbc.readMem(0xd524));
        // CB 36 0121
        gbc.setState(0xbf4c, 0xeede, 0x24e0, 0xfac9, 0x6581, 0xcdd3, 0x0, 0x0);
        gbc.writeMem(0xbf4c, { 0xcb, 0x36 });
        gbc.writeMem(0xcdd3, { 0x4a });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xeede, gbc.sp());
        EXPECT(0xbf4e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf4c));
        EXPECT(0x36, gbc.readMem(0xbf4d));
        EXPECT(0xa4, gbc.readMem(0xcdd3));
        // CB 36 0122
        gbc.setState(0x8c94, 0x643f, 0xde00, 0xe0d3, 0xa6af, 0xf301, 0x1, 0x0);
        gbc.writeMem(0x8c94, { 0xcb, 0x36 });
        gbc.writeMem(0xf301, { 0x69 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x643f, gbc.sp());
        EXPECT(0x8c96, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c94));
        EXPECT(0x36, gbc.readMem(0x8c95));
        EXPECT(0x96, gbc.readMem(0xf301));
        // CB 36 0127
        gbc.setState(0xe449, 0x3b6b, 0xcde0, 0x461c, 0x13e1, 0x8c09, 0x0, 0x0);
        gbc.writeMem(0x8c09, { 0x16 });
        gbc.writeMem(0xe449, { 0xcb, 0x36 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x3b6b, gbc.sp());
        EXPECT(0xe44b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0x8c09));
        EXPECT(0xcb, gbc.readMem(0xe449));
        EXPECT(0x36, gbc.readMem(0xe44a));
        // CB 36 0128
        gbc.setState(0x4b2e, 0x2ac7, 0x5770, 0x896c, 0x138e, 0x36ce, 0x1, 0x0);
        gbc.writeMem(0x36ce, { 0x33 });
        gbc.writeMem(0x4b2e, { 0xcb, 0x36 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x2ac7, gbc.sp());
        EXPECT(0x4b30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 36 0129
        gbc.setState(0x8ba1, 0xaf40, 0xaf30, 0xa8ca, 0xf69b, 0xac30, 0x0, 0x0);
        gbc.writeMem(0x8ba1, { 0xcb, 0x36 });
        gbc.writeMem(0xac30, { 0x4a });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xaf40, gbc.sp());
        EXPECT(0x8ba3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ba1));
        EXPECT(0x36, gbc.readMem(0x8ba2));
        EXPECT(0xa4, gbc.readMem(0xac30));
        // CB 36 012B
        gbc.setState(0xb2f8, 0xa7d9, 0x7e0, 0xb22d, 0x928b, 0x839b, 0x0, 0x0);
        gbc.writeMem(0x839b, { 0xa2 });
        gbc.writeMem(0xb2f8, { 0xcb, 0x36 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xa7d9, gbc.sp());
        EXPECT(0xb2fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2a, gbc.readMem(0x839b));
        EXPECT(0xcb, gbc.readMem(0xb2f8));
        EXPECT(0x36, gbc.readMem(0xb2f9));
        // CB 36 012C
        gbc.setState(0xcb1c, 0x2bf3, 0x8d80, 0x2309, 0x53a6, 0x9ed5, 0x1, 0x0);
        gbc.writeMem(0x9ed5, { 0xb0 });
        gbc.writeMem(0xcb1c, { 0xcb, 0x36 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x2bf3, gbc.sp());
        EXPECT(0xcb1e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0x9ed5));
        EXPECT(0xcb, gbc.readMem(0xcb1c));
        EXPECT(0x36, gbc.readMem(0xcb1d));
        // CB 36 012D
        gbc.setState(0x1488, 0x90b5, 0xa6b0, 0x24dc, 0x778c, 0x153f, 0x0, 0x0);
        gbc.writeMem(0x1488, { 0xcb, 0x36 });
        gbc.writeMem(0x153f, { 0x0 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x90b5, gbc.sp());
        EXPECT(0x148a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 36 012F
        gbc.setState(0x6a6, 0x62f9, 0xfda0, 0x399d, 0x1b97, 0xc25f, 0x0, 0x0);
        gbc.writeMem(0x6a6, { 0xcb, 0x36 });
        gbc.writeMem(0xc25f, { 0x7e });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x62f9, gbc.sp());
        EXPECT(0x6a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe7, gbc.readMem(0xc25f));
        // CB 36 0131
        gbc.setState(0x93b4, 0x5639, 0x4940, 0xcf49, 0x4290, 0xc31c, 0x0, 0x1);
        gbc.writeMem(0x93b4, { 0xcb, 0x36 });
        gbc.writeMem(0xc31c, { 0x60 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x5639, gbc.sp());
        EXPECT(0x93b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x93b4));
        EXPECT(0x36, gbc.readMem(0x93b5));
        EXPECT(0x6, gbc.readMem(0xc31c));
        // CB 36 0132
        gbc.setState(0x2d43, 0x1b08, 0xaaf0, 0xe64c, 0xfb8f, 0xd4c7, 0x1, 0x1);
        gbc.writeMem(0x2d43, { 0xcb, 0x36 });
        gbc.writeMem(0xd4c7, { 0xce });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x1b08, gbc.sp());
        EXPECT(0x2d45, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xec, gbc.readMem(0xd4c7));
        // CB 36 0134
        gbc.setState(0xb72b, 0x22d5, 0xc350, 0xad58, 0xb241, 0xae56, 0x1, 0x0);
        gbc.writeMem(0xae56, { 0x78 });
        gbc.writeMem(0xb72b, { 0xcb, 0x36 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x22d5, gbc.sp());
        EXPECT(0xb72d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xae56));
        EXPECT(0xcb, gbc.readMem(0xb72b));
        EXPECT(0x36, gbc.readMem(0xb72c));
        // CB 36 0135
        gbc.setState(0x43ec, 0xc5d3, 0xd0, 0x8e91, 0xc95f, 0xddab, 0x0, 0x0);
        gbc.writeMem(0x43ec, { 0xcb, 0x36 });
        gbc.writeMem(0xddab, { 0xd8 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xc5d3, gbc.sp());
        EXPECT(0x43ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xddab));
        // CB 36 0136
        gbc.setState(0x27ff, 0x5f5a, 0xfa20, 0x2456, 0x645, 0xcd15, 0x1, 0x1);
        gbc.writeMem(0x27ff, { 0xcb, 0x36 });
        gbc.writeMem(0xcd15, { 0x66 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x5f5a, gbc.sp());
        EXPECT(0x2801, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xcd15));
        // CB 36 0137
        gbc.setState(0xddca, 0xc011, 0x1790, 0xc153, 0x4209, 0x269f, 0x0, 0x1);
        gbc.writeMem(0x269f, { 0xbb });
        gbc.writeMem(0xddca, { 0xcb, 0x36 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xc011, gbc.sp());
        EXPECT(0xddcc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xddca));
        EXPECT(0x36, gbc.readMem(0xddcb));
        // CB 36 0138
        gbc.setState(0xbea8, 0x9b9f, 0x2210, 0xfcc5, 0x15e6, 0x93a5, 0x1, 0x0);
        gbc.writeMem(0x93a5, { 0x54 });
        gbc.writeMem(0xbea8, { 0xcb, 0x36 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x9b9f, gbc.sp());
        EXPECT(0xbeaa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x45, gbc.readMem(0x93a5));
        EXPECT(0xcb, gbc.readMem(0xbea8));
        EXPECT(0x36, gbc.readMem(0xbea9));
        // CB 36 013A
        gbc.setState(0x8199, 0xf51, 0xaa80, 0xa7a9, 0xa5ed, 0xb355, 0x0, 0x0);
        gbc.writeMem(0x8199, { 0xcb, 0x36 });
        gbc.writeMem(0xb355, { 0xeb });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xf51, gbc.sp());
        EXPECT(0x819b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8199));
        EXPECT(0x36, gbc.readMem(0x819a));
        EXPECT(0xbe, gbc.readMem(0xb355));
        // CB 36 013C
        gbc.setState(0x9191, 0x2dcb, 0x2c90, 0xb425, 0xf950, 0xe3db, 0x1, 0x1);
        gbc.writeMem(0x9191, { 0xcb, 0x36 });
        gbc.writeMem(0xe3db, { 0xa7 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x2dcb, gbc.sp());
        EXPECT(0x9193, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9191));
        EXPECT(0x36, gbc.readMem(0x9192));
        EXPECT(0x7a, gbc.readMem(0xe3db));
        // CB 36 0140
        gbc.setState(0xeba3, 0xea1c, 0x5300, 0xe203, 0x2971, 0x664d, 0x1, 0x1);
        gbc.writeMem(0x664d, { 0xcc });
        gbc.writeMem(0xeba3, { 0xcb, 0x36 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xea1c, gbc.sp());
        EXPECT(0xeba5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeba3));
        EXPECT(0x36, gbc.readMem(0xeba4));
        // CB 36 0144
        gbc.setState(0xad8f, 0x23ab, 0x57a0, 0x85e1, 0x7a3e, 0xa41b, 0x0, 0x1);
        gbc.writeMem(0xa41b, { 0x86 });
        gbc.writeMem(0xad8f, { 0xcb, 0x36 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x23ab, gbc.sp());
        EXPECT(0xad91, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xa41b));
        EXPECT(0xcb, gbc.readMem(0xad8f));
        EXPECT(0x36, gbc.readMem(0xad90));
        // CB 36 0147
        gbc.setState(0x9574, 0x3ffc, 0x6890, 0x7dc3, 0x46c5, 0xc437, 0x1, 0x1);
        gbc.writeMem(0x9574, { 0xcb, 0x36 });
        gbc.writeMem(0xc437, { 0xc3 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x3ffc, gbc.sp());
        EXPECT(0x9576, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9574));
        EXPECT(0x36, gbc.readMem(0x9575));
        EXPECT(0x3c, gbc.readMem(0xc437));
        // CB 36 0148
        gbc.setState(0x30b0, 0x27d, 0xe3c0, 0x16fa, 0xcd6f, 0x82e3, 0x1, 0x0);
        gbc.writeMem(0x30b0, { 0xcb, 0x36 });
        gbc.writeMem(0x82e3, { 0x7e });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x27d, gbc.sp());
        EXPECT(0x30b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe7, gbc.readMem(0x82e3));
        // CB 36 014A
        gbc.setState(0x1afd, 0x8761, 0x15f0, 0x2d11, 0x7d14, 0xd2c6, 0x1, 0x0);
        gbc.writeMem(0x1afd, { 0xcb, 0x36 });
        gbc.writeMem(0xd2c6, { 0x31 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x8761, gbc.sp());
        EXPECT(0x1aff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xd2c6));
        // CB 36 014C
        gbc.setState(0x3d5e, 0x930e, 0xfb60, 0x3306, 0x5f7c, 0xe567, 0x0, 0x1);
        gbc.writeMem(0x3d5e, { 0xcb, 0x36 });
        gbc.writeMem(0xe567, { 0x2b });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x930e, gbc.sp());
        EXPECT(0x3d60, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xe567));
        // CB 36 014D
        gbc.setState(0x9721, 0x9a51, 0xf870, 0xe21, 0x2074, 0xe390, 0x1, 0x0);
        gbc.writeMem(0x9721, { 0xcb, 0x36 });
        gbc.writeMem(0xe390, { 0x3b });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x9a51, gbc.sp());
        EXPECT(0x9723, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9721));
        EXPECT(0x36, gbc.readMem(0x9722));
        EXPECT(0xb3, gbc.readMem(0xe390));
        // CB 36 014F
        gbc.setState(0x86a8, 0xca13, 0xf620, 0xe022, 0x19e2, 0xda46, 0x1, 0x1);
        gbc.writeMem(0x86a8, { 0xcb, 0x36 });
        gbc.writeMem(0xda46, { 0xcd });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xca13, gbc.sp());
        EXPECT(0x86aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x86a8));
        EXPECT(0x36, gbc.readMem(0x86a9));
        EXPECT(0xdc, gbc.readMem(0xda46));
        // CB 36 0151
        gbc.setState(0x7e23, 0x4f54, 0x9430, 0x9cf3, 0x5cdb, 0xc758, 0x1, 0x0);
        gbc.writeMem(0x7e23, { 0xcb, 0x36 });
        gbc.writeMem(0xc758, { 0xfe });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x4f54, gbc.sp());
        EXPECT(0x7e25, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xef, gbc.readMem(0xc758));
        // CB 36 0152
        gbc.setState(0xd436, 0xf306, 0x8ae0, 0x469d, 0x3e0f, 0xba99, 0x1, 0x0);
        gbc.writeMem(0xba99, { 0xb7 });
        gbc.writeMem(0xd436, { 0xcb, 0x36 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xf306, gbc.sp());
        EXPECT(0xd438, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xba99));
        EXPECT(0xcb, gbc.readMem(0xd436));
        EXPECT(0x36, gbc.readMem(0xd437));
        // CB 36 0154
        gbc.setState(0x6409, 0x463b, 0x1fb0, 0xa6de, 0x5daf, 0xa1be, 0x0, 0x0);
        gbc.writeMem(0x6409, { 0xcb, 0x36 });
        gbc.writeMem(0xa1be, { 0x91 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x463b, gbc.sp());
        EXPECT(0x640b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xa1be));
        // CB 36 0157
        gbc.setState(0x2878, 0xc823, 0x4c0, 0x4f0e, 0x208b, 0xab36, 0x0, 0x0);
        gbc.writeMem(0x2878, { 0xcb, 0x36 });
        gbc.writeMem(0xab36, { 0xa4 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xc823, gbc.sp());
        EXPECT(0x287a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4a, gbc.readMem(0xab36));
        // CB 36 015A
        gbc.setState(0x8a54, 0xfa39, 0x6d30, 0xdeb4, 0xe29e, 0x98a3, 0x1, 0x1);
        gbc.writeMem(0x8a54, { 0xcb, 0x36 });
        gbc.writeMem(0x98a3, { 0x44 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xfa39, gbc.sp());
        EXPECT(0x8a56, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a54));
        EXPECT(0x36, gbc.readMem(0x8a55));
        EXPECT(0x44, gbc.readMem(0x98a3));
        // CB 36 015B
        gbc.setState(0x1f44, 0x5782, 0x87e0, 0x5848, 0x8323, 0xf2a2, 0x0, 0x0);
        gbc.writeMem(0x1f44, { 0xcb, 0x36 });
        gbc.writeMem(0xf2a2, { 0x2d });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x5782, gbc.sp());
        EXPECT(0x1f46, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd2, gbc.readMem(0xf2a2));
        // CB 36 015D
        gbc.setState(0x3889, 0xe910, 0xd90, 0xe931, 0x10bf, 0x92fc, 0x1, 0x0);
        gbc.writeMem(0x3889, { 0xcb, 0x36 });
        gbc.writeMem(0x92fc, { 0xe7 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xe910, gbc.sp());
        EXPECT(0x388b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0x92fc));
        // CB 36 015E
        gbc.setState(0xc52d, 0xf148, 0x2030, 0x3fc8, 0x402c, 0xca8b, 0x0, 0x0);
        gbc.writeMem(0xc52d, { 0xcb, 0x36 });
        gbc.writeMem(0xca8b, { 0xda });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xf148, gbc.sp());
        EXPECT(0xc52f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc52d));
        EXPECT(0x36, gbc.readMem(0xc52e));
        EXPECT(0xad, gbc.readMem(0xca8b));
        // CB 36 0161
        gbc.setState(0x7fe2, 0x5205, 0xdff0, 0x1276, 0x2f3f, 0x82bb, 0x1, 0x1);
        gbc.writeMem(0x7fe2, { 0xcb, 0x36 });
        gbc.writeMem(0x82bb, { 0x21 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x5205, gbc.sp());
        EXPECT(0x7fe4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x12, gbc.readMem(0x82bb));
        // CB 36 0162
        gbc.setState(0xb6f2, 0xdb34, 0x76d0, 0xfac9, 0xae53, 0xb0c4, 0x0, 0x1);
        gbc.writeMem(0xb0c4, { 0x1e });
        gbc.writeMem(0xb6f2, { 0xcb, 0x36 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xdb34, gbc.sp());
        EXPECT(0xb6f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xb0c4));
        EXPECT(0xcb, gbc.readMem(0xb6f2));
        EXPECT(0x36, gbc.readMem(0xb6f3));
        // CB 36 0163
        gbc.setState(0xc1fa, 0x5af0, 0x3e40, 0x2414, 0xea0f, 0xcdb9, 0x1, 0x0);
        gbc.writeMem(0xc1fa, { 0xcb, 0x36 });
        gbc.writeMem(0xcdb9, { 0x18 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x5af0, gbc.sp());
        EXPECT(0xc1fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc1fa));
        EXPECT(0x36, gbc.readMem(0xc1fb));
        EXPECT(0x81, gbc.readMem(0xcdb9));
        // CB 36 0164
        gbc.setState(0x5e4d, 0xcd98, 0xd610, 0xee52, 0x872c, 0x3ca5, 0x1, 0x0);
        gbc.writeMem(0x3ca5, { 0x77 });
        gbc.writeMem(0x5e4d, { 0xcb, 0x36 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xcd98, gbc.sp());
        EXPECT(0x5e4f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 36 0165
        gbc.setState(0x201e, 0xe6c2, 0xbe0, 0x7b65, 0x2cbe, 0xed9f, 0x0, 0x1);
        gbc.writeMem(0x201e, { 0xcb, 0x36 });
        gbc.writeMem(0xed9f, { 0x9a });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xe6c2, gbc.sp());
        EXPECT(0x2020, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa9, gbc.readMem(0xed9f));
        // CB 36 0166
        gbc.setState(0x902b, 0xbfc2, 0x6780, 0x345b, 0x8879, 0x9d85, 0x0, 0x1);
        gbc.writeMem(0x902b, { 0xcb, 0x36 });
        gbc.writeMem(0x9d85, { 0xc4 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xbfc2, gbc.sp());
        EXPECT(0x902d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x902b));
        EXPECT(0x36, gbc.readMem(0x902c));
        EXPECT(0x4c, gbc.readMem(0x9d85));
        // CB 36 016B
        gbc.setState(0x806a, 0x94b3, 0xd970, 0x733e, 0xb9c9, 0xf577, 0x0, 0x1);
        gbc.writeMem(0x806a, { 0xcb, 0x36 });
        gbc.writeMem(0xf577, { 0xc5 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x94b3, gbc.sp());
        EXPECT(0x806c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x806a));
        EXPECT(0x36, gbc.readMem(0x806b));
        EXPECT(0x5c, gbc.readMem(0xf577));
        // CB 36 016D
        gbc.setState(0xdd0a, 0xd032, 0xb4d0, 0xb687, 0xebc, 0xef9c, 0x0, 0x0);
        gbc.writeMem(0xdd0a, { 0xcb, 0x36 });
        gbc.writeMem(0xef9c, { 0x55 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xd032, gbc.sp());
        EXPECT(0xdd0c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd0a));
        EXPECT(0x36, gbc.readMem(0xdd0b));
        EXPECT(0x55, gbc.readMem(0xef9c));
        // CB 36 016E
        gbc.setState(0x9cb2, 0xd3d2, 0x5790, 0x68d9, 0x535, 0x9547, 0x1, 0x0);
        gbc.writeMem(0x9547, { 0x39 });
        gbc.writeMem(0x9cb2, { 0xcb, 0x36 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xd3d2, gbc.sp());
        EXPECT(0x9cb4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0x9547));
        EXPECT(0xcb, gbc.readMem(0x9cb2));
        EXPECT(0x36, gbc.readMem(0x9cb3));
        // CB 36 016F
        gbc.setState(0xaa09, 0x60af, 0xe920, 0x7690, 0xe973, 0x160e, 0x0, 0x0);
        gbc.writeMem(0x160e, { 0xcc });
        gbc.writeMem(0xaa09, { 0xcb, 0x36 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x60af, gbc.sp());
        EXPECT(0xaa0b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa09));
        EXPECT(0x36, gbc.readMem(0xaa0a));
        // CB 36 0170
        gbc.setState(0x6d07, 0x457, 0xe480, 0x2229, 0xc51d, 0xe202, 0x0, 0x0);
        gbc.writeMem(0x6d07, { 0xcb, 0x36 });
        gbc.writeMem(0xe202, { 0xa3 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x457, gbc.sp());
        EXPECT(0x6d09, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3a, gbc.readMem(0xe202));
        // CB 36 0172
        gbc.setState(0xd2fe, 0xcf3f, 0xd980, 0x3218, 0x5759, 0x8166, 0x0, 0x1);
        gbc.writeMem(0x8166, { 0xb5 });
        gbc.writeMem(0xd2fe, { 0xcb, 0x36 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xcf3f, gbc.sp());
        EXPECT(0xd300, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0x8166));
        EXPECT(0xcb, gbc.readMem(0xd2fe));
        EXPECT(0x36, gbc.readMem(0xd2ff));
        // CB 36 0174
        gbc.setState(0xa32a, 0x2f1a, 0x3840, 0x39d4, 0x61a8, 0xbf6e, 0x0, 0x1);
        gbc.writeMem(0xa32a, { 0xcb, 0x36 });
        gbc.writeMem(0xbf6e, { 0xa0 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x2f1a, gbc.sp());
        EXPECT(0xa32c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa32a));
        EXPECT(0x36, gbc.readMem(0xa32b));
        EXPECT(0xa, gbc.readMem(0xbf6e));
        // CB 36 0175
        gbc.setState(0x7394, 0x125b, 0x15c0, 0xacbc, 0x4677, 0xcc84, 0x0, 0x1);
        gbc.writeMem(0x7394, { 0xcb, 0x36 });
        gbc.writeMem(0xcc84, { 0x63 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x125b, gbc.sp());
        EXPECT(0x7396, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x36, gbc.readMem(0xcc84));
        // CB 36 0176
        gbc.setState(0x66b0, 0x7309, 0x61b0, 0xd768, 0x43e0, 0xd0fa, 0x0, 0x1);
        gbc.writeMem(0x66b0, { 0xcb, 0x36 });
        gbc.writeMem(0xd0fa, { 0xf3 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x7309, gbc.sp());
        EXPECT(0x66b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xd0fa));
        // CB 36 017B
        gbc.setState(0x8b64, 0xf69f, 0x51a0, 0x349, 0xc5e1, 0xe0b1, 0x1, 0x1);
        gbc.writeMem(0x8b64, { 0xcb, 0x36 });
        gbc.writeMem(0xe0b1, { 0xe4 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xf69f, gbc.sp());
        EXPECT(0x8b66, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b64));
        EXPECT(0x36, gbc.readMem(0x8b65));
        EXPECT(0x4e, gbc.readMem(0xe0b1));
        // CB 36 017E
        gbc.setState(0x9260, 0x1efa, 0x6ff0, 0x437, 0x53cd, 0xffb5, 0x0, 0x1);
        gbc.writeMem(0x9260, { 0xcb, 0x36 });
        gbc.writeMem(0xffb5, { 0x1b });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x1efa, gbc.sp());
        EXPECT(0x9262, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9260));
        EXPECT(0x36, gbc.readMem(0x9261));
        EXPECT(0xb1, gbc.readMem(0xffb5));
        // CB 36 0181
        gbc.setState(0x3ac9, 0x82e5, 0x9d00, 0xa109, 0xc543, 0xcb52, 0x0, 0x1);
        gbc.writeMem(0x3ac9, { 0xcb, 0x36 });
        gbc.writeMem(0xcb52, { 0x86 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x82e5, gbc.sp());
        EXPECT(0x3acb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xcb52));
        // CB 36 0182
        gbc.setState(0xa62d, 0x33db, 0x8a70, 0xeed8, 0x9e16, 0xee81, 0x0, 0x0);
        gbc.writeMem(0xa62d, { 0xcb, 0x36 });
        gbc.writeMem(0xee81, { 0xd0 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x33db, gbc.sp());
        EXPECT(0xa62f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa62d));
        EXPECT(0x36, gbc.readMem(0xa62e));
        EXPECT(0xd, gbc.readMem(0xee81));
        // CB 36 0183
        gbc.setState(0x3060, 0xad53, 0x430, 0x55ec, 0xde6b, 0xc10d, 0x0, 0x0);
        gbc.writeMem(0x3060, { 0xcb, 0x36 });
        gbc.writeMem(0xc10d, { 0x39 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xad53, gbc.sp());
        EXPECT(0x3062, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xc10d));
        // CB 36 0184
        gbc.setState(0x49d3, 0xa9ce, 0x46c0, 0x61ce, 0xe8f4, 0x1681, 0x0, 0x0);
        gbc.writeMem(0x1681, { 0x44 });
        gbc.writeMem(0x49d3, { 0xcb, 0x36 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xa9ce, gbc.sp());
        EXPECT(0x49d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 36 0187
        gbc.setState(0x419c, 0x6d7b, 0x8e60, 0xcef0, 0xd7bd, 0xa1ea, 0x1, 0x0);
        gbc.writeMem(0x419c, { 0xcb, 0x36 });
        gbc.writeMem(0xa1ea, { 0xf6 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x6d7b, gbc.sp());
        EXPECT(0x419e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6f, gbc.readMem(0xa1ea));
        // CB 36 018B
        gbc.setState(0xd385, 0xa649, 0xf300, 0x5a04, 0xb26d, 0xd9c0, 0x0, 0x1);
        gbc.writeMem(0xd385, { 0xcb, 0x36 });
        gbc.writeMem(0xd9c0, { 0x5e });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xa649, gbc.sp());
        EXPECT(0xd387, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd385));
        EXPECT(0x36, gbc.readMem(0xd386));
        EXPECT(0xe5, gbc.readMem(0xd9c0));
        // CB 36 018C
        gbc.setState(0x351e, 0x19fa, 0xe470, 0xa4fb, 0xc358, 0x91eb, 0x1, 0x1);
        gbc.writeMem(0x351e, { 0xcb, 0x36 });
        gbc.writeMem(0x91eb, { 0x9b });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x19fa, gbc.sp());
        EXPECT(0x3520, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0x91eb));
        // CB 36 018E
        gbc.setState(0x5cd5, 0x47f, 0x4a90, 0x9d3c, 0x30a6, 0x954c, 0x1, 0x0);
        gbc.writeMem(0x5cd5, { 0xcb, 0x36 });
        gbc.writeMem(0x954c, { 0xe4 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x47f, gbc.sp());
        EXPECT(0x5cd7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0x954c));
        // CB 36 018F
        gbc.setState(0x6361, 0xc350, 0x2510, 0x7111, 0xb2e7, 0xd580, 0x1, 0x0);
        gbc.writeMem(0x6361, { 0xcb, 0x36 });
        gbc.writeMem(0xd580, { 0xbb });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xc350, gbc.sp());
        EXPECT(0x6363, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xd580));
        // CB 36 0193
        gbc.setState(0xead1, 0x77f6, 0xfa70, 0x1c97, 0xe822, 0xc1b8, 0x0, 0x0);
        gbc.writeMem(0xc1b8, { 0xa9 });
        gbc.writeMem(0xead1, { 0xcb, 0x36 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x77f6, gbc.sp());
        EXPECT(0xead3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xc1b8));
        EXPECT(0xcb, gbc.readMem(0xead1));
        EXPECT(0x36, gbc.readMem(0xead2));
        // CB 36 0195
        gbc.setState(0x1f9c, 0xc129, 0xf050, 0x44f9, 0xe034, 0x9951, 0x0, 0x0);
        gbc.writeMem(0x1f9c, { 0xcb, 0x36 });
        gbc.writeMem(0x9951, { 0x1a });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xc129, gbc.sp());
        EXPECT(0x1f9e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0x9951));
        // CB 36 0197
        gbc.setState(0xdbe1, 0x5fb7, 0xd930, 0x64b0, 0xbb1a, 0xa4e3, 0x0, 0x1);
        gbc.writeMem(0xa4e3, { 0x22 });
        gbc.writeMem(0xdbe1, { 0xcb, 0x36 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x5fb7, gbc.sp());
        EXPECT(0xdbe3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x22, gbc.readMem(0xa4e3));
        EXPECT(0xcb, gbc.readMem(0xdbe1));
        EXPECT(0x36, gbc.readMem(0xdbe2));
        // CB 36 0198
        gbc.setState(0x335f, 0x9086, 0xb370, 0x6893, 0xa93d, 0xc01e, 0x1, 0x1);
        gbc.writeMem(0x335f, { 0xcb, 0x36 });
        gbc.writeMem(0xc01e, { 0xcf });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x9086, gbc.sp());
        EXPECT(0x3361, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfc, gbc.readMem(0xc01e));
        // CB 36 019A
        gbc.setState(0xe12f, 0xda92, 0x8280, 0xae4b, 0x3853, 0xa794, 0x0, 0x0);
        gbc.writeMem(0xa794, { 0x21 });
        gbc.writeMem(0xe12f, { 0xcb, 0x36 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xda92, gbc.sp());
        EXPECT(0xe131, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x12, gbc.readMem(0xa794));
        EXPECT(0xcb, gbc.readMem(0xe12f));
        EXPECT(0x36, gbc.readMem(0xe130));
        // CB 36 019C
        gbc.setState(0x3fd6, 0xc4c7, 0x86f0, 0x51ea, 0x3a3c, 0xf00a, 0x1, 0x1);
        gbc.writeMem(0x3fd6, { 0xcb, 0x36 });
        gbc.writeMem(0xf00a, { 0x2f });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xc4c7, gbc.sp());
        EXPECT(0x3fd8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf2, gbc.readMem(0xf00a));
        // CB 36 01A2
        gbc.setState(0xddc9, 0xef6e, 0x8100, 0x4273, 0x2b1b, 0xefea, 0x1, 0x1);
        gbc.writeMem(0xddc9, { 0xcb, 0x36 });
        gbc.writeMem(0xefea, { 0xd9 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xef6e, gbc.sp());
        EXPECT(0xddcb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xddc9));
        EXPECT(0x36, gbc.readMem(0xddca));
        EXPECT(0x9d, gbc.readMem(0xefea));
        // CB 36 01A5
        gbc.setState(0x49b5, 0x309f, 0x80e0, 0x7162, 0x5321, 0xc7ad, 0x0, 0x0);
        gbc.writeMem(0x49b5, { 0xcb, 0x36 });
        gbc.writeMem(0xc7ad, { 0xba });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x309f, gbc.sp());
        EXPECT(0x49b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xab, gbc.readMem(0xc7ad));
        // CB 36 01A7
        gbc.setState(0x4867, 0x18c0, 0x1030, 0x70e3, 0x1846, 0x957f, 0x0, 0x1);
        gbc.writeMem(0x4867, { 0xcb, 0x36 });
        gbc.writeMem(0x957f, { 0xc6 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x18c0, gbc.sp());
        EXPECT(0x4869, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0x957f));
        // CB 36 01A9
        gbc.setState(0x4555, 0xa114, 0x7d60, 0xbc15, 0xecac, 0xb132, 0x1, 0x0);
        gbc.writeMem(0x4555, { 0xcb, 0x36 });
        gbc.writeMem(0xb132, { 0xad });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xa114, gbc.sp());
        EXPECT(0x4557, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xb132));
        // CB 36 01AB
        gbc.setState(0x6f2b, 0x5ef2, 0x91c0, 0x1f8e, 0xd01e, 0xce1f, 0x1, 0x1);
        gbc.writeMem(0x6f2b, { 0xcb, 0x36 });
        gbc.writeMem(0xce1f, { 0xc8 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x5ef2, gbc.sp());
        EXPECT(0x6f2d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xce1f));
        // CB 36 01AF
        gbc.setState(0x6da8, 0x139d, 0x56f0, 0x3705, 0x8fa8, 0xd3ac, 0x0, 0x1);
        gbc.writeMem(0x6da8, { 0xcb, 0x36 });
        gbc.writeMem(0xd3ac, { 0xed });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x139d, gbc.sp());
        EXPECT(0x6daa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xde, gbc.readMem(0xd3ac));
        // CB 36 01B4
        gbc.setState(0xc64b, 0xb6d, 0x24a0, 0x6104, 0x797, 0xa628, 0x1, 0x0);
        gbc.writeMem(0xa628, { 0x4b });
        gbc.writeMem(0xc64b, { 0xcb, 0x36 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xb6d, gbc.sp());
        EXPECT(0xc64d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb4, gbc.readMem(0xa628));
        EXPECT(0xcb, gbc.readMem(0xc64b));
        EXPECT(0x36, gbc.readMem(0xc64c));
        // CB 36 01B5
        gbc.setState(0x8bd7, 0x70fc, 0xdcf0, 0xa37f, 0x4826, 0xe587, 0x0, 0x0);
        gbc.writeMem(0x8bd7, { 0xcb, 0x36 });
        gbc.writeMem(0xe587, { 0x0 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x70fc, gbc.sp());
        EXPECT(0x8bd9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8bd7));
        EXPECT(0x36, gbc.readMem(0x8bd8));
        EXPECT(0x0, gbc.readMem(0xe587));
        // CB 36 01B6
        gbc.setState(0x7abd, 0x2ea1, 0x6a90, 0xad97, 0x783, 0x96d1, 0x1, 0x0);
        gbc.writeMem(0x7abd, { 0xcb, 0x36 });
        gbc.writeMem(0x96d1, { 0x4a });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x2ea1, gbc.sp());
        EXPECT(0x7abf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0x96d1));
        // CB 36 01B7
        gbc.setState(0x15e2, 0x9b1f, 0x3cf0, 0xe234, 0x920, 0xdb6e, 0x0, 0x1);
        gbc.writeMem(0x15e2, { 0xcb, 0x36 });
        gbc.writeMem(0xdb6e, { 0xfb });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x9b1f, gbc.sp());
        EXPECT(0x15e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xdb6e));
        // CB 36 01B8
        gbc.setState(0x880d, 0x6491, 0x4a90, 0xaafb, 0x1041, 0xc18e, 0x1, 0x0);
        gbc.writeMem(0x880d, { 0xcb, 0x36 });
        gbc.writeMem(0xc18e, { 0x22 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x6491, gbc.sp());
        EXPECT(0x880f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x880d));
        EXPECT(0x36, gbc.readMem(0x880e));
        EXPECT(0x22, gbc.readMem(0xc18e));
        // CB 36 01BC
        gbc.setState(0xc61f, 0x4452, 0x53f0, 0x72ec, 0x56ae, 0xfc81, 0x0, 0x0);
        gbc.writeMem(0xc61f, { 0xcb, 0x36 });
        gbc.writeMem(0xfc81, { 0x4e });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x4452, gbc.sp());
        EXPECT(0xc621, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc61f));
        EXPECT(0x36, gbc.readMem(0xc620));
        EXPECT(0xe4, gbc.readMem(0xfc81));
        // CB 36 01BD
        gbc.setState(0x5798, 0x6c8d, 0xb8d0, 0xc867, 0xa97c, 0x8f50, 0x1, 0x1);
        gbc.writeMem(0x5798, { 0xcb, 0x36 });
        gbc.writeMem(0x8f50, { 0x1a });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x6c8d, gbc.sp());
        EXPECT(0x579a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0x8f50));
        // CB 36 01BE
        gbc.setState(0x96e7, 0xdd55, 0x60f0, 0xc13, 0xfb3, 0x9e3b, 0x0, 0x1);
        gbc.writeMem(0x96e7, { 0xcb, 0x36 });
        gbc.writeMem(0x9e3b, { 0x33 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xdd55, gbc.sp());
        EXPECT(0x96e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x96e7));
        EXPECT(0x36, gbc.readMem(0x96e8));
        EXPECT(0x33, gbc.readMem(0x9e3b));
        // CB 36 01C0
        gbc.setState(0x5ad5, 0x5cb7, 0xc5c0, 0xd21d, 0x9df3, 0xe26c, 0x1, 0x0);
        gbc.writeMem(0x5ad5, { 0xcb, 0x36 });
        gbc.writeMem(0xe26c, { 0x2 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x5cb7, gbc.sp());
        EXPECT(0x5ad7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xe26c));
        // CB 36 01C1
        gbc.setState(0x661c, 0x21bd, 0x74b0, 0xc25c, 0x1e13, 0xf7a8, 0x1, 0x0);
        gbc.writeMem(0x661c, { 0xcb, 0x36 });
        gbc.writeMem(0xf7a8, { 0x3f });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x21bd, gbc.sp());
        EXPECT(0x661e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf3, gbc.readMem(0xf7a8));
        // CB 36 01C2
        gbc.setState(0xef70, 0x55a9, 0x4e50, 0x9310, 0xed10, 0xdb23, 0x1, 0x1);
        gbc.writeMem(0xdb23, { 0x2d });
        gbc.writeMem(0xef70, { 0xcb, 0x36 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x55a9, gbc.sp());
        EXPECT(0xef72, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd2, gbc.readMem(0xdb23));
        EXPECT(0xcb, gbc.readMem(0xef70));
        EXPECT(0x36, gbc.readMem(0xef71));
        // CB 36 01C3
        gbc.setState(0x1c83, 0xd1d7, 0x6110, 0x5f30, 0x5037, 0xf66e, 0x1, 0x0);
        gbc.writeMem(0x1c83, { 0xcb, 0x36 });
        gbc.writeMem(0xf66e, { 0x6a });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xd1d7, gbc.sp());
        EXPECT(0x1c85, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xf66e));
        // CB 36 01C4
        gbc.setState(0xaa08, 0x8cde, 0xe020, 0x6fc5, 0x8768, 0xc9ac, 0x1, 0x1);
        gbc.writeMem(0xaa08, { 0xcb, 0x36 });
        gbc.writeMem(0xc9ac, { 0x7a });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x8cde, gbc.sp());
        EXPECT(0xaa0a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa08));
        EXPECT(0x36, gbc.readMem(0xaa09));
        EXPECT(0xa7, gbc.readMem(0xc9ac));
        // CB 36 01C6
        gbc.setState(0x41c9, 0x889c, 0x8320, 0xfdc0, 0xe5ce, 0x936f, 0x1, 0x0);
        gbc.writeMem(0x41c9, { 0xcb, 0x36 });
        gbc.writeMem(0x936f, { 0xd0 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x889c, gbc.sp());
        EXPECT(0x41cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd, gbc.readMem(0x936f));
        // CB 36 01CB
        gbc.setState(0x21e7, 0x5e6d, 0xfbb0, 0xfad9, 0x309c, 0xdc8a, 0x1, 0x0);
        gbc.writeMem(0x21e7, { 0xcb, 0x36 });
        gbc.writeMem(0xdc8a, { 0xe5 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x5e6d, gbc.sp());
        EXPECT(0x21e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xdc8a));
        // CB 36 01CD
        gbc.setState(0xce48, 0x82bd, 0xdda0, 0x1cc1, 0x2c42, 0xb25e, 0x0, 0x0);
        gbc.writeMem(0xb25e, { 0x6d });
        gbc.writeMem(0xce48, { 0xcb, 0x36 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x82bd, gbc.sp());
        EXPECT(0xce4a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xb25e));
        EXPECT(0xcb, gbc.readMem(0xce48));
        EXPECT(0x36, gbc.readMem(0xce49));
        // CB 36 01D0
        gbc.setState(0x3474, 0xf503, 0x72c0, 0x4cb9, 0xccd4, 0xd07e, 0x0, 0x1);
        gbc.writeMem(0x3474, { 0xcb, 0x36 });
        gbc.writeMem(0xd07e, { 0x52 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xf503, gbc.sp());
        EXPECT(0x3476, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xd07e));
        // CB 36 01D1
        gbc.setState(0x7228, 0x8d4d, 0x4c20, 0x7849, 0x1a08, 0xca0d, 0x1, 0x0);
        gbc.writeMem(0x7228, { 0xcb, 0x36 });
        gbc.writeMem(0xca0d, { 0xab });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x8d4d, gbc.sp());
        EXPECT(0x722a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xba, gbc.readMem(0xca0d));
        // CB 36 01D9
        gbc.setState(0x58db, 0xa54e, 0x70a0, 0x9c71, 0x4f6d, 0x8dfd, 0x0, 0x1);
        gbc.writeMem(0x58db, { 0xcb, 0x36 });
        gbc.writeMem(0x8dfd, { 0xe4 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xa54e, gbc.sp());
        EXPECT(0x58dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0x8dfd));
        // CB 36 01DB
        gbc.setState(0x3b65, 0xcf7e, 0xade0, 0x3a1d, 0x7791, 0xcde7, 0x0, 0x1);
        gbc.writeMem(0x3b65, { 0xcb, 0x36 });
        gbc.writeMem(0xcde7, { 0x97 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xcf7e, gbc.sp());
        EXPECT(0x3b67, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xcde7));
        // CB 36 01DD
        gbc.setState(0x8a63, 0x63be, 0x4930, 0x929, 0x26fe, 0xddd6, 0x1, 0x1);
        gbc.writeMem(0x8a63, { 0xcb, 0x36 });
        gbc.writeMem(0xddd6, { 0xf9 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x63be, gbc.sp());
        EXPECT(0x8a65, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a63));
        EXPECT(0x36, gbc.readMem(0x8a64));
        EXPECT(0x9f, gbc.readMem(0xddd6));
        // CB 36 01DF
        gbc.setState(0x2e15, 0x805b, 0xd0e0, 0x2b1e, 0x3b27, 0xdae8, 0x0, 0x1);
        gbc.writeMem(0x2e15, { 0xcb, 0x36 });
        gbc.writeMem(0xdae8, { 0x60 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x805b, gbc.sp());
        EXPECT(0x2e17, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xdae8));
        // CB 36 01E0
        gbc.setState(0x5ca2, 0x9915, 0x63d0, 0x11ec, 0x48af, 0xe5ce, 0x0, 0x1);
        gbc.writeMem(0x5ca2, { 0xcb, 0x36 });
        gbc.writeMem(0xe5ce, { 0x59 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x9915, gbc.sp());
        EXPECT(0x5ca4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xe5ce));
        // CB 36 01E4
        gbc.setState(0x31aa, 0xb802, 0x3e70, 0x1cb0, 0x2e4e, 0xb129, 0x1, 0x0);
        gbc.writeMem(0x31aa, { 0xcb, 0x36 });
        gbc.writeMem(0xb129, { 0x7e });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xb802, gbc.sp());
        EXPECT(0x31ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe7, gbc.readMem(0xb129));
        // CB 36 01E6
        gbc.setState(0xb731, 0x7740, 0xd4f0, 0x79c3, 0xfe53, 0xeb8b, 0x0, 0x1);
        gbc.writeMem(0xb731, { 0xcb, 0x36 });
        gbc.writeMem(0xeb8b, { 0xf9 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x7740, gbc.sp());
        EXPECT(0xb733, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb731));
        EXPECT(0x36, gbc.readMem(0xb732));
        EXPECT(0x9f, gbc.readMem(0xeb8b));
        // CB 36 01E7
        gbc.setState(0x693e, 0x4dca, 0x8ec0, 0xc4da, 0xc339, 0xbcc6, 0x0, 0x0);
        gbc.writeMem(0x693e, { 0xcb, 0x36 });
        gbc.writeMem(0xbcc6, { 0xfa });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x4dca, gbc.sp());
        EXPECT(0x6940, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaf, gbc.readMem(0xbcc6));
        // CB 36 01E8
        gbc.setState(0xd467, 0x51e1, 0x5380, 0x469b, 0x391f, 0xbbeb, 0x0, 0x0);
        gbc.writeMem(0xbbeb, { 0x6a });
        gbc.writeMem(0xd467, { 0xcb, 0x36 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x51e1, gbc.sp());
        EXPECT(0xd469, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xbbeb));
        EXPECT(0xcb, gbc.readMem(0xd467));
        EXPECT(0x36, gbc.readMem(0xd468));
        // CB 36 01E9
        gbc.setState(0xaae, 0x226e, 0x7780, 0x6fb7, 0xeb33, 0x881e, 0x0, 0x0);
        gbc.writeMem(0xaae, { 0xcb, 0x36 });
        gbc.writeMem(0x881e, { 0x54 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x226e, gbc.sp());
        EXPECT(0xab0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x45, gbc.readMem(0x881e));
        // CB 36 01EC
        gbc.setState(0x9f37, 0x3e99, 0x9570, 0xb4d1, 0xb847, 0xedb8, 0x0, 0x0);
        gbc.writeMem(0x9f37, { 0xcb, 0x36 });
        gbc.writeMem(0xedb8, { 0x91 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x3e99, gbc.sp());
        EXPECT(0x9f39, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f37));
        EXPECT(0x36, gbc.readMem(0x9f38));
        EXPECT(0x19, gbc.readMem(0xedb8));
        // CB 36 01ED
        gbc.setState(0x2f39, 0x7d3a, 0x3920, 0x8cfb, 0x68cb, 0x923a, 0x0, 0x0);
        gbc.writeMem(0x2f39, { 0xcb, 0x36 });
        gbc.writeMem(0x923a, { 0x30 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x7d3a, gbc.sp());
        EXPECT(0x2f3b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0x923a));
        // CB 36 01EF
        gbc.setState(0x28c7, 0xba93, 0x5030, 0xd9cc, 0x9170, 0xf606, 0x0, 0x1);
        gbc.writeMem(0x28c7, { 0xcb, 0x36 });
        gbc.writeMem(0xf606, { 0xbd });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xba93, gbc.sp());
        EXPECT(0x28c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xdb, gbc.readMem(0xf606));
        // CB 36 01F1
        gbc.setState(0x46d4, 0xf488, 0x9e90, 0x7612, 0xa3d2, 0x8e9f, 0x1, 0x0);
        gbc.writeMem(0x46d4, { 0xcb, 0x36 });
        gbc.writeMem(0x8e9f, { 0xfe });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xf488, gbc.sp());
        EXPECT(0x46d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xef, gbc.readMem(0x8e9f));
        // CB 36 01F2
        gbc.setState(0xc100, 0xee12, 0xc830, 0x3c02, 0xc4e8, 0xa985, 0x1, 0x0);
        gbc.writeMem(0xa985, { 0x99 });
        gbc.writeMem(0xc100, { 0xcb, 0x36 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xee12, gbc.sp());
        EXPECT(0xc102, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xa985));
        EXPECT(0xcb, gbc.readMem(0xc100));
        EXPECT(0x36, gbc.readMem(0xc101));
        // CB 36 01F3
        gbc.setState(0x9736, 0x352d, 0x580, 0x9b97, 0xbb87, 0x8b0f, 0x1, 0x1);
        gbc.writeMem(0x8b0f, { 0xd2 });
        gbc.writeMem(0x9736, { 0xcb, 0x36 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x352d, gbc.sp());
        EXPECT(0x9738, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0x8b0f));
        EXPECT(0xcb, gbc.readMem(0x9736));
        EXPECT(0x36, gbc.readMem(0x9737));
        // CB 36 01F4
        gbc.setState(0x2dd2, 0x2764, 0x5a10, 0xc49b, 0x3866, 0xce36, 0x1, 0x1);
        gbc.writeMem(0x2dd2, { 0xcb, 0x36 });
        gbc.writeMem(0xce36, { 0xd6 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x2764, gbc.sp());
        EXPECT(0x2dd4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xce36));
        // CB 36 01F5
        gbc.setState(0x8259, 0x3f01, 0xb2b0, 0x80ca, 0x6883, 0xa2e7, 0x1, 0x0);
        gbc.writeMem(0x8259, { 0xcb, 0x36 });
        gbc.writeMem(0xa2e7, { 0xfc });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x3f01, gbc.sp());
        EXPECT(0x825b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8259));
        EXPECT(0x36, gbc.readMem(0x825a));
        EXPECT(0xcf, gbc.readMem(0xa2e7));
        // CB 36 01F7
        gbc.setState(0x7799, 0x84c9, 0x2c60, 0x60e7, 0xbac0, 0xb556, 0x1, 0x0);
        gbc.writeMem(0x7799, { 0xcb, 0x36 });
        gbc.writeMem(0xb556, { 0xb5 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x84c9, gbc.sp());
        EXPECT(0x779b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xb556));
        // CB 36 01F8
        gbc.setState(0x4d94, 0x91fb, 0x6940, 0x6856, 0x2c, 0x8fef, 0x1, 0x1);
        gbc.writeMem(0x4d94, { 0xcb, 0x36 });
        gbc.writeMem(0x8fef, { 0xde });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x91fb, gbc.sp());
        EXPECT(0x4d96, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xed, gbc.readMem(0x8fef));
        // CB 36 01F9
        gbc.setState(0x55f1, 0x5cf, 0x520, 0xd65a, 0x82ad, 0xdf94, 0x0, 0x0);
        gbc.writeMem(0x55f1, { 0xcb, 0x36 });
        gbc.writeMem(0xdf94, { 0x44 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x5cf, gbc.sp());
        EXPECT(0x55f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xdf94));
        // CB 36 01FB
        gbc.setState(0x5eb5, 0xfd7, 0xb900, 0xbeea, 0xa665, 0xe8be, 0x0, 0x1);
        gbc.writeMem(0x5eb5, { 0xcb, 0x36 });
        gbc.writeMem(0xe8be, { 0x1e });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xfd7, gbc.sp());
        EXPECT(0x5eb7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xe8be));
        // CB 36 01FC
        gbc.setState(0x7a3f, 0xea94, 0x1980, 0x5427, 0x5e2a, 0x1ebe, 0x0, 0x1);
        gbc.writeMem(0x1ebe, { 0x66 });
        gbc.writeMem(0x7a3f, { 0xcb, 0x36 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xea94, gbc.sp());
        EXPECT(0x7a41, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 36 01FD
        gbc.setState(0xeb82, 0xb8e9, 0x82f0, 0xe48f, 0xb6f2, 0xf73f, 0x1, 0x0);
        gbc.writeMem(0xeb82, { 0xcb, 0x36 });
        gbc.writeMem(0xf73f, { 0xaf });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xb8e9, gbc.sp());
        EXPECT(0xeb84, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb82));
        EXPECT(0x36, gbc.readMem(0xeb83));
        EXPECT(0xfa, gbc.readMem(0xf73f));
        // CB 36 01FF
        gbc.setState(0xb97c, 0x3129, 0xe220, 0x88a5, 0x2796, 0xfcb1, 0x0, 0x0);
        gbc.writeMem(0xb97c, { 0xcb, 0x36 });
        gbc.writeMem(0xfcb1, { 0xf0 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x3129, gbc.sp());
        EXPECT(0xb97e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb97c));
        EXPECT(0x36, gbc.readMem(0xb97d));
        EXPECT(0xf, gbc.readMem(0xfcb1));
        // CB 36 0200
        gbc.setState(0x79bd, 0xdd44, 0x1650, 0x1145, 0x3965, 0xebeb, 0x0, 0x1);
        gbc.writeMem(0x79bd, { 0xcb, 0x36 });
        gbc.writeMem(0xebeb, { 0x7d });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xdd44, gbc.sp());
        EXPECT(0x79bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd7, gbc.readMem(0xebeb));
        // CB 36 0205
        gbc.setState(0x6223, 0xef4a, 0x7ea0, 0xa78e, 0xc0b0, 0xe84a, 0x1, 0x0);
        gbc.writeMem(0x6223, { 0xcb, 0x36 });
        gbc.writeMem(0xe84a, { 0x41 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xef4a, gbc.sp());
        EXPECT(0x6225, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xe84a));
        // CB 36 0209
        gbc.setState(0x2444, 0x4d8b, 0x8f40, 0xba58, 0xf45a, 0x89f9, 0x1, 0x1);
        gbc.writeMem(0x2444, { 0xcb, 0x36 });
        gbc.writeMem(0x89f9, { 0x40 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x4d8b, gbc.sp());
        EXPECT(0x2446, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0x89f9));
        // CB 36 020A
        gbc.setState(0x6a6e, 0x2e8e, 0x9670, 0x2b73, 0x143, 0xccb5, 0x1, 0x1);
        gbc.writeMem(0x6a6e, { 0xcb, 0x36 });
        gbc.writeMem(0xccb5, { 0x16 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x2e8e, gbc.sp());
        EXPECT(0x6a70, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xccb5));
        // CB 36 020C
        gbc.setState(0xe1f1, 0x8fed, 0x5ef0, 0xc95b, 0x696c, 0xf41d, 0x0, 0x0);
        gbc.writeMem(0xe1f1, { 0xcb, 0x36 });
        gbc.writeMem(0xf41d, { 0xd1 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x8fed, gbc.sp());
        EXPECT(0xe1f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe1f1));
        EXPECT(0x36, gbc.readMem(0xe1f2));
        EXPECT(0x1d, gbc.readMem(0xf41d));
        // CB 36 0210
        gbc.setState(0xf69, 0x99a7, 0x9580, 0x9dac, 0x25f6, 0xe769, 0x0, 0x1);
        gbc.writeMem(0xf69, { 0xcb, 0x36 });
        gbc.writeMem(0xe769, { 0x66 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x99a7, gbc.sp());
        EXPECT(0xf6b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xe769));
        // CB 36 0216
        gbc.setState(0xc9ae, 0xaf76, 0x36e0, 0xa639, 0x13d3, 0xe07e, 0x0, 0x1);
        gbc.writeMem(0xc9ae, { 0xcb, 0x36 });
        gbc.writeMem(0xe07e, { 0xb2 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xaf76, gbc.sp());
        EXPECT(0xc9b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc9ae));
        EXPECT(0x36, gbc.readMem(0xc9af));
        EXPECT(0x2b, gbc.readMem(0xe07e));
        // CB 36 0217
        gbc.setState(0x87a8, 0x7ac9, 0x5680, 0xfa54, 0x4a65, 0x929e, 0x0, 0x0);
        gbc.writeMem(0x87a8, { 0xcb, 0x36 });
        gbc.writeMem(0x929e, { 0xcc });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x7ac9, gbc.sp());
        EXPECT(0x87aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x87a8));
        EXPECT(0x36, gbc.readMem(0x87a9));
        EXPECT(0xcc, gbc.readMem(0x929e));
        // CB 36 0219
        gbc.setState(0x2199, 0xfc51, 0x5e0, 0x684a, 0x9067, 0x8a86, 0x1, 0x1);
        gbc.writeMem(0x2199, { 0xcb, 0x36 });
        gbc.writeMem(0x8a86, { 0x43 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xfc51, gbc.sp());
        EXPECT(0x219b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x34, gbc.readMem(0x8a86));
        // CB 36 021C
        gbc.setState(0x10c3, 0x609, 0x8b50, 0x8276, 0x3dae, 0xc11b, 0x0, 0x0);
        gbc.writeMem(0x10c3, { 0xcb, 0x36 });
        gbc.writeMem(0xc11b, { 0x4a });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x609, gbc.sp());
        EXPECT(0x10c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xc11b));
        // CB 36 021E
        gbc.setState(0xc887, 0x962b, 0x470, 0xc70f, 0x9c90, 0xcfe6, 0x1, 0x1);
        gbc.writeMem(0xc887, { 0xcb, 0x36 });
        gbc.writeMem(0xcfe6, { 0x60 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x962b, gbc.sp());
        EXPECT(0xc889, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc887));
        EXPECT(0x36, gbc.readMem(0xc888));
        EXPECT(0x6, gbc.readMem(0xcfe6));
        // CB 36 0220
        gbc.setState(0x6dbb, 0xc8fa, 0x8510, 0x335, 0xc7b0, 0xa9e1, 0x0, 0x1);
        gbc.writeMem(0x6dbb, { 0xcb, 0x36 });
        gbc.writeMem(0xa9e1, { 0xcd });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xc8fa, gbc.sp());
        EXPECT(0x6dbd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xdc, gbc.readMem(0xa9e1));
        // CB 36 0221
        gbc.setState(0x2c38, 0x9945, 0x46d0, 0x9b6b, 0x777d, 0xe39f, 0x0, 0x1);
        gbc.writeMem(0x2c38, { 0xcb, 0x36 });
        gbc.writeMem(0xe39f, { 0xf8 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x9945, gbc.sp());
        EXPECT(0x2c3a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xe39f));
        // CB 36 0222
        gbc.setState(0xc71b, 0xfe6b, 0xeb90, 0x666b, 0x89a5, 0xd318, 0x1, 0x1);
        gbc.writeMem(0xc71b, { 0xcb, 0x36 });
        gbc.writeMem(0xd318, { 0x94 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xfe6b, gbc.sp());
        EXPECT(0xc71d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc71b));
        EXPECT(0x36, gbc.readMem(0xc71c));
        EXPECT(0x49, gbc.readMem(0xd318));
        // CB 36 0223
        gbc.setState(0x5ef2, 0xf2a2, 0x3bc0, 0xe907, 0x6c91, 0xa8c9, 0x0, 0x1);
        gbc.writeMem(0x5ef2, { 0xcb, 0x36 });
        gbc.writeMem(0xa8c9, { 0x6c });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xf2a2, gbc.sp());
        EXPECT(0x5ef4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xa8c9));
        // CB 36 0224
        gbc.setState(0x6094, 0x12f0, 0x4050, 0xd229, 0xc8a4, 0xc7d9, 0x0, 0x0);
        gbc.writeMem(0x6094, { 0xcb, 0x36 });
        gbc.writeMem(0xc7d9, { 0xf7 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x12f0, gbc.sp());
        EXPECT(0x6096, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7f, gbc.readMem(0xc7d9));
        // CB 36 022C
        gbc.setState(0x5a26, 0x93de, 0x45d0, 0x6cb0, 0x9797, 0xbbb0, 0x0, 0x1);
        gbc.writeMem(0x5a26, { 0xcb, 0x36 });
        gbc.writeMem(0xbbb0, { 0xc9 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x93de, gbc.sp());
        EXPECT(0x5a28, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xbbb0));
        // CB 36 022E
        gbc.setState(0x3ba4, 0xc918, 0xaed0, 0x763e, 0x1668, 0xc19c, 0x1, 0x1);
        gbc.writeMem(0x3ba4, { 0xcb, 0x36 });
        gbc.writeMem(0xc19c, { 0x6 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xc918, gbc.sp());
        EXPECT(0x3ba6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x60, gbc.readMem(0xc19c));
        // CB 36 0235
        gbc.setState(0x48dd, 0xca19, 0x8df0, 0xf7c0, 0xc3a1, 0xf4be, 0x0, 0x0);
        gbc.writeMem(0x48dd, { 0xcb, 0x36 });
        gbc.writeMem(0xf4be, { 0x85 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xca19, gbc.sp());
        EXPECT(0x48df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xf4be));
        // CB 36 0237
        gbc.setState(0x340d, 0xcd58, 0x3570, 0x8f4f, 0xefe3, 0xe712, 0x1, 0x0);
        gbc.writeMem(0x340d, { 0xcb, 0x36 });
        gbc.writeMem(0xe712, { 0x2d });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xcd58, gbc.sp());
        EXPECT(0x340f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd2, gbc.readMem(0xe712));
        // CB 36 0238
        gbc.setState(0x47e7, 0xfaa1, 0xb9d0, 0xf91b, 0xa631, 0xf29e, 0x0, 0x1);
        gbc.writeMem(0x47e7, { 0xcb, 0x36 });
        gbc.writeMem(0xf29e, { 0x77 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xfaa1, gbc.sp());
        EXPECT(0x47e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x77, gbc.readMem(0xf29e));
        // CB 36 023A
        gbc.setState(0x1765, 0x8aed, 0x4880, 0x4e78, 0xd09d, 0xee1a, 0x1, 0x1);
        gbc.writeMem(0x1765, { 0xcb, 0x36 });
        gbc.writeMem(0xee1a, { 0xba });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x8aed, gbc.sp());
        EXPECT(0x1767, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xab, gbc.readMem(0xee1a));
        // CB 36 023B
        gbc.setState(0x8982, 0xb332, 0x7af0, 0xa3d2, 0x98c7, 0xc480, 0x1, 0x0);
        gbc.writeMem(0x8982, { 0xcb, 0x36 });
        gbc.writeMem(0xc480, { 0xd7 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xb332, gbc.sp());
        EXPECT(0x8984, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8982));
        EXPECT(0x36, gbc.readMem(0x8983));
        EXPECT(0x7d, gbc.readMem(0xc480));
        // CB 36 023C
        gbc.setState(0x5651, 0xdff, 0x32f0, 0xf673, 0xb2ab, 0x9805, 0x0, 0x0);
        gbc.writeMem(0x5651, { 0xcb, 0x36 });
        gbc.writeMem(0x9805, { 0xaf });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xdff, gbc.sp());
        EXPECT(0x5653, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0x9805));
        // CB 36 023D
        gbc.setState(0xc497, 0x59bd, 0x70d0, 0x1d04, 0xe61d, 0x6243, 0x1, 0x1);
        gbc.writeMem(0x6243, { 0xdd });
        gbc.writeMem(0xc497, { 0xcb, 0x36 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x59bd, gbc.sp());
        EXPECT(0xc499, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc497));
        EXPECT(0x36, gbc.readMem(0xc498));
        // CB 36 023E
        gbc.setState(0xb821, 0x725c, 0xa7c0, 0xa4bf, 0xd2a8, 0xc5e0, 0x0, 0x1);
        gbc.writeMem(0xb821, { 0xcb, 0x36 });
        gbc.writeMem(0xc5e0, { 0x3a });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x725c, gbc.sp());
        EXPECT(0xb823, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb821));
        EXPECT(0x36, gbc.readMem(0xb822));
        EXPECT(0xa3, gbc.readMem(0xc5e0));
        // CB 36 023F
        gbc.setState(0x3b46, 0xd76e, 0xd950, 0xd106, 0xa30c, 0xe6e1, 0x0, 0x1);
        gbc.writeMem(0x3b46, { 0xcb, 0x36 });
        gbc.writeMem(0xe6e1, { 0xe });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xd76e, gbc.sp());
        EXPECT(0x3b48, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xe6e1));
        // CB 36 0242
        gbc.setState(0xcee0, 0x48ea, 0x93d0, 0xf365, 0xb484, 0x9c8d, 0x1, 0x1);
        gbc.writeMem(0x9c8d, { 0xd0 });
        gbc.writeMem(0xcee0, { 0xcb, 0x36 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x48ea, gbc.sp());
        EXPECT(0xcee2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd, gbc.readMem(0x9c8d));
        EXPECT(0xcb, gbc.readMem(0xcee0));
        EXPECT(0x36, gbc.readMem(0xcee1));
        // CB 36 0243
        gbc.setState(0xe7cc, 0x26a4, 0x41b0, 0xfbf1, 0xda0b, 0x8175, 0x0, 0x0);
        gbc.writeMem(0x8175, { 0xa2 });
        gbc.writeMem(0xe7cc, { 0xcb, 0x36 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x26a4, gbc.sp());
        EXPECT(0xe7ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2a, gbc.readMem(0x8175));
        EXPECT(0xcb, gbc.readMem(0xe7cc));
        EXPECT(0x36, gbc.readMem(0xe7cd));
        // CB 36 0245
        gbc.setState(0x969f, 0x29a9, 0x13f0, 0xb040, 0x71d2, 0x89d7, 0x0, 0x0);
        gbc.writeMem(0x89d7, { 0x73 });
        gbc.writeMem(0x969f, { 0xcb, 0x36 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x29a9, gbc.sp());
        EXPECT(0x96a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0x89d7));
        EXPECT(0xcb, gbc.readMem(0x969f));
        EXPECT(0x36, gbc.readMem(0x96a0));
        // CB 36 0246
        gbc.setState(0x62b9, 0xcf43, 0xcbe0, 0x4085, 0xfe23, 0xf1f0, 0x1, 0x0);
        gbc.writeMem(0x62b9, { 0xcb, 0x36 });
        gbc.writeMem(0xf1f0, { 0xe2 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xcf43, gbc.sp());
        EXPECT(0x62bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xf1f0));
        // CB 36 0247
        gbc.setState(0xe5c9, 0x12e8, 0xddb0, 0x8cb8, 0xb15a, 0xa1c9, 0x1, 0x1);
        gbc.writeMem(0xa1c9, { 0xaa });
        gbc.writeMem(0xe5c9, { 0xcb, 0x36 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x12e8, gbc.sp());
        EXPECT(0xe5cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xa1c9));
        EXPECT(0xcb, gbc.readMem(0xe5c9));
        EXPECT(0x36, gbc.readMem(0xe5ca));
        // CB 36 024B
        gbc.setState(0xc34a, 0xcd8d, 0x7a20, 0xb990, 0xd327, 0xfe56, 0x0, 0x0);
        gbc.writeMem(0xc34a, { 0xcb, 0x36 });
        gbc.writeMem(0xfe56, { 0xb0 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xcd8d, gbc.sp());
        EXPECT(0xc34c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc34a));
        EXPECT(0x36, gbc.readMem(0xc34b));
        EXPECT(0xb, gbc.readMem(0xfe56));
        // CB 36 024D
        gbc.setState(0xe27b, 0xb8fe, 0xe7e0, 0xec53, 0x20d6, 0x9ed5, 0x1, 0x1);
        gbc.writeMem(0x9ed5, { 0xb0 });
        gbc.writeMem(0xe27b, { 0xcb, 0x36 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xb8fe, gbc.sp());
        EXPECT(0xe27d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0x9ed5));
        EXPECT(0xcb, gbc.readMem(0xe27b));
        EXPECT(0x36, gbc.readMem(0xe27c));
        // CB 36 024F
        gbc.setState(0x32fe, 0x204b, 0x52c0, 0xc2cc, 0x451c, 0xb8cf, 0x1, 0x1);
        gbc.writeMem(0x32fe, { 0xcb, 0x36 });
        gbc.writeMem(0xb8cf, { 0xde });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x204b, gbc.sp());
        EXPECT(0x3300, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xed, gbc.readMem(0xb8cf));
        // CB 36 0250
        gbc.setState(0x9bb8, 0x2a46, 0x7de0, 0x5c59, 0xcff, 0xda19, 0x1, 0x0);
        gbc.writeMem(0x9bb8, { 0xcb, 0x36 });
        gbc.writeMem(0xda19, { 0x63 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x2a46, gbc.sp());
        EXPECT(0x9bba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9bb8));
        EXPECT(0x36, gbc.readMem(0x9bb9));
        EXPECT(0x36, gbc.readMem(0xda19));
        // CB 36 0251
        gbc.setState(0xeaf2, 0x3a51, 0xe160, 0x70c3, 0xe340, 0xade2, 0x0, 0x1);
        gbc.writeMem(0xade2, { 0xab });
        gbc.writeMem(0xeaf2, { 0xcb, 0x36 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x3a51, gbc.sp());
        EXPECT(0xeaf4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xba, gbc.readMem(0xade2));
        EXPECT(0xcb, gbc.readMem(0xeaf2));
        EXPECT(0x36, gbc.readMem(0xeaf3));
        // CB 36 0254
        gbc.setState(0xa89, 0x48d6, 0x1060, 0x628a, 0x78ab, 0x171b, 0x1, 0x0);
        gbc.writeMem(0xa89, { 0xcb, 0x36 });
        gbc.writeMem(0x171b, { 0xcc });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x48d6, gbc.sp());
        EXPECT(0xa8b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 36 0258
        gbc.setState(0xa08e, 0xf9, 0xd450, 0x2faf, 0xe553, 0xdb2f, 0x0, 0x1);
        gbc.writeMem(0xa08e, { 0xcb, 0x36 });
        gbc.writeMem(0xdb2f, { 0x41 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xf9, gbc.sp());
        EXPECT(0xa090, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa08e));
        EXPECT(0x36, gbc.readMem(0xa08f));
        EXPECT(0x14, gbc.readMem(0xdb2f));
        // CB 36 025A
        gbc.setState(0x67c0, 0x556e, 0xe620, 0x4ede, 0x4321, 0x97b5, 0x0, 0x0);
        gbc.writeMem(0x67c0, { 0xcb, 0x36 });
        gbc.writeMem(0x97b5, { 0x1 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x556e, gbc.sp());
        EXPECT(0x67c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0x97b5));
        // CB 36 025C
        gbc.setState(0x14a3, 0x6f81, 0x8dc0, 0xf595, 0x7ef9, 0xfb72, 0x1, 0x1);
        gbc.writeMem(0x14a3, { 0xcb, 0x36 });
        gbc.writeMem(0xfb72, { 0xfa });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x6f81, gbc.sp());
        EXPECT(0x14a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaf, gbc.readMem(0xfb72));
        // CB 36 025F
        gbc.setState(0xc1f9, 0x5ec6, 0x20a0, 0xda31, 0x5a5f, 0xf859, 0x0, 0x0);
        gbc.writeMem(0xc1f9, { 0xcb, 0x36 });
        gbc.writeMem(0xf859, { 0xfa });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x5ec6, gbc.sp());
        EXPECT(0xc1fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc1f9));
        EXPECT(0x36, gbc.readMem(0xc1fa));
        EXPECT(0xaf, gbc.readMem(0xf859));
        // CB 36 0261
        gbc.setState(0x5801, 0x6b49, 0x6940, 0x5376, 0xfbd1, 0xf902, 0x1, 0x0);
        gbc.writeMem(0x5801, { 0xcb, 0x36 });
        gbc.writeMem(0xf902, { 0x8 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x6b49, gbc.sp());
        EXPECT(0x5803, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xf902));
        // CB 36 0262
        gbc.setState(0x2978, 0xeb1e, 0x59a0, 0x952e, 0x2fb9, 0x8c5d, 0x1, 0x0);
        gbc.writeMem(0x2978, { 0xcb, 0x36 });
        gbc.writeMem(0x8c5d, { 0x1d });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xeb1e, gbc.sp());
        EXPECT(0x297a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd1, gbc.readMem(0x8c5d));
        // CB 36 0264
        gbc.setState(0xa60b, 0x6935, 0xf730, 0xf7e9, 0x5b84, 0xa02a, 0x1, 0x1);
        gbc.writeMem(0xa02a, { 0x69 });
        gbc.writeMem(0xa60b, { 0xcb, 0x36 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x6935, gbc.sp());
        EXPECT(0xa60d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x96, gbc.readMem(0xa02a));
        EXPECT(0xcb, gbc.readMem(0xa60b));
        EXPECT(0x36, gbc.readMem(0xa60c));
        // CB 36 0265
        gbc.setState(0xe55c, 0x8b21, 0xe170, 0x6528, 0x3936, 0xe3fd, 0x0, 0x0);
        gbc.writeMem(0xe3fd, { 0x39 });
        gbc.writeMem(0xe55c, { 0xcb, 0x36 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x8b21, gbc.sp());
        EXPECT(0xe55e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xe3fd));
        EXPECT(0xcb, gbc.readMem(0xe55c));
        EXPECT(0x36, gbc.readMem(0xe55d));
        // CB 36 0266
        gbc.setState(0x3c87, 0x1c03, 0x9500, 0xc0a4, 0xbb3f, 0xe5ff, 0x1, 0x0);
        gbc.writeMem(0x3c87, { 0xcb, 0x36 });
        gbc.writeMem(0xe5ff, { 0xbb });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x1c03, gbc.sp());
        EXPECT(0x3c89, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xe5ff));
        // CB 36 0269
        gbc.setState(0xced3, 0xcc3c, 0x92f0, 0xd24b, 0x1660, 0xd8f1, 0x1, 0x1);
        gbc.writeMem(0xced3, { 0xcb, 0x36 });
        gbc.writeMem(0xd8f1, { 0x7e });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xcc3c, gbc.sp());
        EXPECT(0xced5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xced3));
        EXPECT(0x36, gbc.readMem(0xced4));
        EXPECT(0xe7, gbc.readMem(0xd8f1));
        // CB 36 026A
        gbc.setState(0xafb8, 0x990b, 0x6300, 0x8cd8, 0x648c, 0xa32e, 0x0, 0x1);
        gbc.writeMem(0xa32e, { 0xc6 });
        gbc.writeMem(0xafb8, { 0xcb, 0x36 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x990b, gbc.sp());
        EXPECT(0xafba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xa32e));
        EXPECT(0xcb, gbc.readMem(0xafb8));
        EXPECT(0x36, gbc.readMem(0xafb9));
        // CB 36 026C
        gbc.setState(0x8e88, 0x82f4, 0xdfb0, 0xfed, 0x7e86, 0x250f, 0x0, 0x0);
        gbc.writeMem(0x250f, { 0x33 });
        gbc.writeMem(0x8e88, { 0xcb, 0x36 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x82f4, gbc.sp());
        EXPECT(0x8e8a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e88));
        EXPECT(0x36, gbc.readMem(0x8e89));
        // CB 36 026D
        gbc.setState(0xb8e4, 0xcbf3, 0xa4a0, 0xf5ac, 0x400b, 0xac20, 0x1, 0x1);
        gbc.writeMem(0xac20, { 0x3f });
        gbc.writeMem(0xb8e4, { 0xcb, 0x36 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xcbf3, gbc.sp());
        EXPECT(0xb8e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf3, gbc.readMem(0xac20));
        EXPECT(0xcb, gbc.readMem(0xb8e4));
        EXPECT(0x36, gbc.readMem(0xb8e5));
        // CB 36 026E
        gbc.setState(0x476d, 0x6fa8, 0x3b50, 0x1916, 0x8519, 0xe46f, 0x0, 0x0);
        gbc.writeMem(0x476d, { 0xcb, 0x36 });
        gbc.writeMem(0xe46f, { 0xaa });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x6fa8, gbc.sp());
        EXPECT(0x476f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xe46f));
        // CB 36 0270
        gbc.setState(0x8725, 0x93ea, 0x9dc0, 0x89f1, 0xaf70, 0xfd4e, 0x1, 0x1);
        gbc.writeMem(0x8725, { 0xcb, 0x36 });
        gbc.writeMem(0xfd4e, { 0x75 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x93ea, gbc.sp());
        EXPECT(0x8727, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8725));
        EXPECT(0x36, gbc.readMem(0x8726));
        EXPECT(0x57, gbc.readMem(0xfd4e));
        // CB 36 0274
        gbc.setState(0x260d, 0xbca3, 0xaa70, 0x89ff, 0xb197, 0xbe6b, 0x1, 0x0);
        gbc.writeMem(0x260d, { 0xcb, 0x36 });
        gbc.writeMem(0xbe6b, { 0x73 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xbca3, gbc.sp());
        EXPECT(0x260f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xbe6b));
        // CB 36 0275
        gbc.setState(0x3627, 0xa17c, 0x4a10, 0xc0e6, 0x997c, 0xd51b, 0x1, 0x1);
        gbc.writeMem(0x3627, { 0xcb, 0x36 });
        gbc.writeMem(0xd51b, { 0xa2 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xa17c, gbc.sp());
        EXPECT(0x3629, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2a, gbc.readMem(0xd51b));
        // CB 36 0277
        gbc.setState(0xc7a7, 0xc067, 0x67e0, 0xf11f, 0x4f85, 0x834b, 0x0, 0x1);
        gbc.writeMem(0x834b, { 0x74 });
        gbc.writeMem(0xc7a7, { 0xcb, 0x36 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xc067, gbc.sp());
        EXPECT(0xc7a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0x834b));
        EXPECT(0xcb, gbc.readMem(0xc7a7));
        EXPECT(0x36, gbc.readMem(0xc7a8));
        // CB 36 0278
        gbc.setState(0xbe44, 0x536b, 0xe410, 0x5fd9, 0xd19f, 0xdf2f, 0x0, 0x0);
        gbc.writeMem(0xbe44, { 0xcb, 0x36 });
        gbc.writeMem(0xdf2f, { 0xcd });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x536b, gbc.sp());
        EXPECT(0xbe46, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe44));
        EXPECT(0x36, gbc.readMem(0xbe45));
        EXPECT(0xdc, gbc.readMem(0xdf2f));
        // CB 36 0279
        gbc.setState(0x6755, 0x3e6f, 0x1670, 0x2721, 0x318b, 0xa53f, 0x0, 0x1);
        gbc.writeMem(0x6755, { 0xcb, 0x36 });
        gbc.writeMem(0xa53f, { 0xe1 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x3e6f, gbc.sp());
        EXPECT(0x6757, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1e, gbc.readMem(0xa53f));
        // CB 36 027B
        gbc.setState(0x3823, 0x23e0, 0xd8f0, 0x716b, 0xe503, 0xa238, 0x1, 0x1);
        gbc.writeMem(0x3823, { 0xcb, 0x36 });
        gbc.writeMem(0xa238, { 0x35 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x23e0, gbc.sp());
        EXPECT(0x3825, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xa238));
        // CB 36 0280
        gbc.setState(0xe58, 0xded4, 0xcbc0, 0x436c, 0xdd5, 0xa2fa, 0x0, 0x0);
        gbc.writeMem(0xe58, { 0xcb, 0x36 });
        gbc.writeMem(0xa2fa, { 0xb3 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xded4, gbc.sp());
        EXPECT(0xe5a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xa2fa));
        // CB 36 0281
        gbc.setState(0x63b2, 0xa43b, 0xa620, 0x1def, 0x63b6, 0x8d95, 0x0, 0x0);
        gbc.writeMem(0x63b2, { 0xcb, 0x36 });
        gbc.writeMem(0x8d95, { 0xfc });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xa43b, gbc.sp());
        EXPECT(0x63b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcf, gbc.readMem(0x8d95));
        // CB 36 0282
        gbc.setState(0xd40a, 0x16fd, 0x4d10, 0xd21f, 0x3786, 0x9362, 0x0, 0x1);
        gbc.writeMem(0x9362, { 0x89 });
        gbc.writeMem(0xd40a, { 0xcb, 0x36 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x16fd, gbc.sp());
        EXPECT(0xd40c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0x9362));
        EXPECT(0xcb, gbc.readMem(0xd40a));
        EXPECT(0x36, gbc.readMem(0xd40b));
        // CB 36 0283
        gbc.setState(0x31d8, 0x5f80, 0x95f0, 0xd99c, 0x1ae0, 0xf887, 0x1, 0x0);
        gbc.writeMem(0x31d8, { 0xcb, 0x36 });
        gbc.writeMem(0xf887, { 0xa5 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x5f80, gbc.sp());
        EXPECT(0x31da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5a, gbc.readMem(0xf887));
        // CB 36 0284
        gbc.setState(0xe108, 0xe314, 0x1d90, 0x4497, 0xe336, 0x9250, 0x0, 0x0);
        gbc.writeMem(0x9250, { 0x4a });
        gbc.writeMem(0xe108, { 0xcb, 0x36 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xe314, gbc.sp());
        EXPECT(0xe10a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0x9250));
        EXPECT(0xcb, gbc.readMem(0xe108));
        EXPECT(0x36, gbc.readMem(0xe109));
        // CB 36 0287
        gbc.setState(0x6b9, 0xa235, 0x6350, 0x1303, 0x91f5, 0xdf46, 0x1, 0x1);
        gbc.writeMem(0x6b9, { 0xcb, 0x36 });
        gbc.writeMem(0xdf46, { 0xa1 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xa235, gbc.sp());
        EXPECT(0x6bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xdf46));
        // CB 36 0288
        gbc.setState(0x5715, 0xc71f, 0xe110, 0x4260, 0xab5f, 0xb1a5, 0x0, 0x0);
        gbc.writeMem(0x5715, { 0xcb, 0x36 });
        gbc.writeMem(0xb1a5, { 0x7d });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xc71f, gbc.sp());
        EXPECT(0x5717, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd7, gbc.readMem(0xb1a5));
        // CB 36 028A
        gbc.setState(0xe5c0, 0x832e, 0xf200, 0x2564, 0xc6ca, 0xeeeb, 0x0, 0x0);
        gbc.writeMem(0xe5c0, { 0xcb, 0x36 });
        gbc.writeMem(0xeeeb, { 0x64 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x832e, gbc.sp());
        EXPECT(0xe5c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe5c0));
        EXPECT(0x36, gbc.readMem(0xe5c1));
        EXPECT(0x46, gbc.readMem(0xeeeb));
        // CB 36 028B
        gbc.setState(0xcfa0, 0xefb4, 0xbfd0, 0x5e82, 0x8cb8, 0xd8cb, 0x0, 0x0);
        gbc.writeMem(0xcfa0, { 0xcb, 0x36 });
        gbc.writeMem(0xd8cb, { 0x8f });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xefb4, gbc.sp());
        EXPECT(0xcfa2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcfa0));
        EXPECT(0x36, gbc.readMem(0xcfa1));
        EXPECT(0xf8, gbc.readMem(0xd8cb));
        // CB 36 028C
        gbc.setState(0xc712, 0x6aca, 0xbca0, 0xf0f1, 0x947c, 0xdfbb, 0x0, 0x1);
        gbc.writeMem(0xc712, { 0xcb, 0x36 });
        gbc.writeMem(0xdfbb, { 0xa1 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x6aca, gbc.sp());
        EXPECT(0xc714, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc712));
        EXPECT(0x36, gbc.readMem(0xc713));
        EXPECT(0x1a, gbc.readMem(0xdfbb));
        // CB 36 028F
        gbc.setState(0xe162, 0xbb3e, 0xdff0, 0xc2b5, 0x6825, 0x9ed0, 0x1, 0x1);
        gbc.writeMem(0x9ed0, { 0x71 });
        gbc.writeMem(0xe162, { 0xcb, 0x36 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xbb3e, gbc.sp());
        EXPECT(0xe164, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x17, gbc.readMem(0x9ed0));
        EXPECT(0xcb, gbc.readMem(0xe162));
        EXPECT(0x36, gbc.readMem(0xe163));
        // CB 36 0290
        gbc.setState(0x9aec, 0xce85, 0xc810, 0x8bb, 0x88f8, 0xf045, 0x0, 0x0);
        gbc.writeMem(0x9aec, { 0xcb, 0x36 });
        gbc.writeMem(0xf045, { 0xdd });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xce85, gbc.sp());
        EXPECT(0x9aee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9aec));
        EXPECT(0x36, gbc.readMem(0x9aed));
        EXPECT(0xdd, gbc.readMem(0xf045));
        // CB 36 0291
        gbc.setState(0x42aa, 0x3463, 0x3140, 0xeca7, 0x481f, 0xb8eb, 0x1, 0x1);
        gbc.writeMem(0x42aa, { 0xcb, 0x36 });
        gbc.writeMem(0xb8eb, { 0xc8 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x3463, gbc.sp());
        EXPECT(0x42ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xb8eb));
        // CB 36 0292
        gbc.setState(0x32b5, 0x7720, 0x1660, 0x3df7, 0x256b, 0xf512, 0x1, 0x1);
        gbc.writeMem(0x32b5, { 0xcb, 0x36 });
        gbc.writeMem(0xf512, { 0x98 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x7720, gbc.sp());
        EXPECT(0x32b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xf512));
        // CB 36 0293
        gbc.setState(0xc0e1, 0xd4a1, 0x28a0, 0x65de, 0x58eb, 0xa4ca, 0x0, 0x1);
        gbc.writeMem(0xa4ca, { 0x80 });
        gbc.writeMem(0xc0e1, { 0xcb, 0x36 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xd4a1, gbc.sp());
        EXPECT(0xc0e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8, gbc.readMem(0xa4ca));
        EXPECT(0xcb, gbc.readMem(0xc0e1));
        EXPECT(0x36, gbc.readMem(0xc0e2));
        // CB 36 0296
        gbc.setState(0xe6c1, 0xe377, 0x4650, 0x522d, 0x2a7b, 0xa76f, 0x1, 0x1);
        gbc.writeMem(0xa76f, { 0x7b });
        gbc.writeMem(0xe6c1, { 0xcb, 0x36 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xe377, gbc.sp());
        EXPECT(0xe6c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xa76f));
        EXPECT(0xcb, gbc.readMem(0xe6c1));
        EXPECT(0x36, gbc.readMem(0xe6c2));
        // CB 36 0298
        gbc.setState(0xe0b4, 0x1ff9, 0xbb0, 0x19bb, 0xfb2, 0xed43, 0x1, 0x1);
        gbc.writeMem(0xe0b4, { 0xcb, 0x36 });
        gbc.writeMem(0xed43, { 0x1c });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x1ff9, gbc.sp());
        EXPECT(0xe0b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe0b4));
        EXPECT(0x36, gbc.readMem(0xe0b5));
        EXPECT(0xc1, gbc.readMem(0xed43));
        // CB 36 029A
        gbc.setState(0x5388, 0xa653, 0x2620, 0x306e, 0xaf48, 0xbd36, 0x0, 0x0);
        gbc.writeMem(0x5388, { 0xcb, 0x36 });
        gbc.writeMem(0xbd36, { 0x8a });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xa653, gbc.sp());
        EXPECT(0x538a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa8, gbc.readMem(0xbd36));
        // CB 36 029B
        gbc.setState(0xcc48, 0xc02, 0x2fe0, 0xdc07, 0x575f, 0x9832, 0x1, 0x1);
        gbc.writeMem(0x9832, { 0xb4 });
        gbc.writeMem(0xcc48, { 0xcb, 0x36 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xc02, gbc.sp());
        EXPECT(0xcc4a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0x9832));
        EXPECT(0xcb, gbc.readMem(0xcc48));
        EXPECT(0x36, gbc.readMem(0xcc49));
        // CB 36 029F
        gbc.setState(0x2c3e, 0xa123, 0xb6e0, 0x6329, 0x4dc2, 0xf7fa, 0x1, 0x1);
        gbc.writeMem(0x2c3e, { 0xcb, 0x36 });
        gbc.writeMem(0xf7fa, { 0x41 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xa123, gbc.sp());
        EXPECT(0x2c40, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xf7fa));
        // CB 36 02A0
        gbc.setState(0x1081, 0xb366, 0xca10, 0xe61c, 0xc83e, 0xd61c, 0x0, 0x1);
        gbc.writeMem(0x1081, { 0xcb, 0x36 });
        gbc.writeMem(0xd61c, { 0xef });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xb366, gbc.sp());
        EXPECT(0x1083, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xd61c));
        // CB 36 02A2
        gbc.setState(0xc19, 0xaf2c, 0xf5e0, 0xdb32, 0x4d5b, 0xc25b, 0x1, 0x1);
        gbc.writeMem(0xc19, { 0xcb, 0x36 });
        gbc.writeMem(0xc25b, { 0x88 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xaf2c, gbc.sp());
        EXPECT(0xc1b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xc25b));
        // CB 36 02A3
        gbc.setState(0xc610, 0x2719, 0xd1d0, 0x16c0, 0x12a1, 0xc471, 0x1, 0x0);
        gbc.writeMem(0xc471, { 0xeb });
        gbc.writeMem(0xc610, { 0xcb, 0x36 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x2719, gbc.sp());
        EXPECT(0xc612, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbe, gbc.readMem(0xc471));
        EXPECT(0xcb, gbc.readMem(0xc610));
        EXPECT(0x36, gbc.readMem(0xc611));
        // CB 36 02A4
        gbc.setState(0xe14b, 0xd9db, 0x3ca0, 0xbe58, 0x600c, 0x317a, 0x1, 0x0);
        gbc.writeMem(0x317a, { 0x11 });
        gbc.writeMem(0xe14b, { 0xcb, 0x36 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xd9db, gbc.sp());
        EXPECT(0xe14d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe14b));
        EXPECT(0x36, gbc.readMem(0xe14c));
        // CB 36 02A5
        gbc.setState(0x9165, 0x78ec, 0xd5b0, 0x9e7a, 0x9cb5, 0xe0e0, 0x0, 0x0);
        gbc.writeMem(0x9165, { 0xcb, 0x36 });
        gbc.writeMem(0xe0e0, { 0xa4 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x78ec, gbc.sp());
        EXPECT(0x9167, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9165));
        EXPECT(0x36, gbc.readMem(0x9166));
        EXPECT(0x4a, gbc.readMem(0xe0e0));
        // CB 36 02A7
        gbc.setState(0xcdaa, 0xf3fb, 0x6330, 0x3697, 0x62d7, 0xb745, 0x0, 0x0);
        gbc.writeMem(0xb745, { 0xd5 });
        gbc.writeMem(0xcdaa, { 0xcb, 0x36 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xf3fb, gbc.sp());
        EXPECT(0xcdac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xb745));
        EXPECT(0xcb, gbc.readMem(0xcdaa));
        EXPECT(0x36, gbc.readMem(0xcdab));
        // CB 36 02A8
        gbc.setState(0xb466, 0x2fe2, 0xe40, 0x85d0, 0xe27d, 0xb3dc, 0x0, 0x1);
        gbc.writeMem(0xb3dc, { 0xa1 });
        gbc.writeMem(0xb466, { 0xcb, 0x36 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x2fe2, gbc.sp());
        EXPECT(0xb468, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xb3dc));
        EXPECT(0xcb, gbc.readMem(0xb466));
        EXPECT(0x36, gbc.readMem(0xb467));
        // CB 36 02A9
        gbc.setState(0x6925, 0x883f, 0xe970, 0x8e3, 0x7f93, 0xd621, 0x0, 0x1);
        gbc.writeMem(0x6925, { 0xcb, 0x36 });
        gbc.writeMem(0xd621, { 0x99 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x883f, gbc.sp());
        EXPECT(0x6927, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xd621));
        // CB 36 02AA
        gbc.setState(0x9517, 0xc993, 0x5a90, 0x9c75, 0xa98c, 0xd2ab, 0x0, 0x1);
        gbc.writeMem(0x9517, { 0xcb, 0x36 });
        gbc.writeMem(0xd2ab, { 0x74 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xc993, gbc.sp());
        EXPECT(0x9519, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9517));
        EXPECT(0x36, gbc.readMem(0x9518));
        EXPECT(0x47, gbc.readMem(0xd2ab));
        // CB 36 02AC
        gbc.setState(0x1d4, 0x7645, 0xfa10, 0x8ad3, 0x346, 0x9942, 0x0, 0x1);
        gbc.writeMem(0x1d4, { 0xcb, 0x36 });
        gbc.writeMem(0x9942, { 0x12 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x7645, gbc.sp());
        EXPECT(0x1d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0x9942));
        // CB 36 02AE
        gbc.setState(0x2c3, 0xd0d0, 0xc80, 0x13a5, 0xe231, 0xdb39, 0x0, 0x1);
        gbc.writeMem(0x2c3, { 0xcb, 0x36 });
        gbc.writeMem(0xdb39, { 0x60 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xd0d0, gbc.sp());
        EXPECT(0x2c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xdb39));
        // CB 36 02B1
        gbc.setState(0x4ccc, 0x13ce, 0x8ec0, 0x6e4c, 0x4b05, 0xd3d3, 0x0, 0x1);
        gbc.writeMem(0x4ccc, { 0xcb, 0x36 });
        gbc.writeMem(0xd3d3, { 0x4 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x13ce, gbc.sp());
        EXPECT(0x4cce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xd3d3));
        // CB 36 02B4
        gbc.setState(0x77bc, 0x503b, 0x4b50, 0xaa2f, 0x7b95, 0xbb86, 0x0, 0x0);
        gbc.writeMem(0x77bc, { 0xcb, 0x36 });
        gbc.writeMem(0xbb86, { 0xff });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x503b, gbc.sp());
        EXPECT(0x77be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xff, gbc.readMem(0xbb86));
        // CB 36 02B6
        gbc.setState(0x6fb5, 0x7d5f, 0x4a40, 0x9c6b, 0x1ad6, 0xe4a3, 0x0, 0x1);
        gbc.writeMem(0x6fb5, { 0xcb, 0x36 });
        gbc.writeMem(0xe4a3, { 0x2e });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x7d5f, gbc.sp());
        EXPECT(0x6fb7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xe4a3));
        // CB 36 02B9
        gbc.setState(0xed55, 0x7e85, 0x9070, 0xc6a6, 0x9b08, 0x8bc6, 0x1, 0x1);
        gbc.writeMem(0x8bc6, { 0xc0 });
        gbc.writeMem(0xed55, { 0xcb, 0x36 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x7e85, gbc.sp());
        EXPECT(0xed57, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0x8bc6));
        EXPECT(0xcb, gbc.readMem(0xed55));
        EXPECT(0x36, gbc.readMem(0xed56));
        // CB 36 02BB
        gbc.setState(0x26d4, 0x1080, 0xc6d0, 0x341a, 0x675a, 0xa405, 0x0, 0x0);
        gbc.writeMem(0x26d4, { 0xcb, 0x36 });
        gbc.writeMem(0xa405, { 0x56 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x1080, gbc.sp());
        EXPECT(0x26d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xa405));
        // CB 36 02BC
        gbc.setState(0x62ab, 0xe38b, 0x3d70, 0xb5a0, 0xa2ff, 0xbbe3, 0x1, 0x0);
        gbc.writeMem(0x62ab, { 0xcb, 0x36 });
        gbc.writeMem(0xbbe3, { 0x67 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xe38b, gbc.sp());
        EXPECT(0x62ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xbbe3));
        // CB 36 02BF
        gbc.setState(0x622e, 0x2b81, 0x7c0, 0x41f2, 0xd821, 0xbcd2, 0x1, 0x0);
        gbc.writeMem(0x622e, { 0xcb, 0x36 });
        gbc.writeMem(0xbcd2, { 0x2d });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x2b81, gbc.sp());
        EXPECT(0x6230, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd2, gbc.readMem(0xbcd2));
        // CB 36 02C4
        gbc.setState(0x7aae, 0xb4d1, 0xf6a0, 0x5b76, 0x3ca9, 0xaca9, 0x0, 0x1);
        gbc.writeMem(0x7aae, { 0xcb, 0x36 });
        gbc.writeMem(0xaca9, { 0xaf });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xb4d1, gbc.sp());
        EXPECT(0x7ab0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xaca9));
        // CB 36 02C6
        gbc.setState(0xa1b4, 0xa52d, 0x6150, 0x28dd, 0xb57a, 0xee7d, 0x1, 0x0);
        gbc.writeMem(0xa1b4, { 0xcb, 0x36 });
        gbc.writeMem(0xee7d, { 0x8d });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xa52d, gbc.sp());
        EXPECT(0xa1b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa1b4));
        EXPECT(0x36, gbc.readMem(0xa1b5));
        EXPECT(0xd8, gbc.readMem(0xee7d));
        // CB 36 02C8
        gbc.setState(0xc16e, 0xd2bd, 0x2210, 0x62ac, 0x5504, 0xae74, 0x1, 0x0);
        gbc.writeMem(0xae74, { 0x4b });
        gbc.writeMem(0xc16e, { 0xcb, 0x36 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xd2bd, gbc.sp());
        EXPECT(0xc170, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb4, gbc.readMem(0xae74));
        EXPECT(0xcb, gbc.readMem(0xc16e));
        EXPECT(0x36, gbc.readMem(0xc16f));
        // CB 36 02C9
        gbc.setState(0x6e89, 0x6254, 0xc370, 0x9f48, 0x1ff9, 0x965b, 0x1, 0x1);
        gbc.writeMem(0x6e89, { 0xcb, 0x36 });
        gbc.writeMem(0x965b, { 0x29 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x6254, gbc.sp());
        EXPECT(0x6e8b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0x965b));
        // CB 36 02CA
        gbc.setState(0x631, 0x6fd7, 0x9140, 0x9e8a, 0x157f, 0xe78b, 0x0, 0x1);
        gbc.writeMem(0x631, { 0xcb, 0x36 });
        gbc.writeMem(0xe78b, { 0x71 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x6fd7, gbc.sp());
        EXPECT(0x633, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x17, gbc.readMem(0xe78b));
        // CB 36 02CD
        gbc.setState(0x6b33, 0x92fd, 0x79f0, 0xdc74, 0x37d3, 0xf04f, 0x0, 0x1);
        gbc.writeMem(0x6b33, { 0xcb, 0x36 });
        gbc.writeMem(0xf04f, { 0x5f });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x92fd, gbc.sp());
        EXPECT(0x6b35, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf5, gbc.readMem(0xf04f));
        // CB 36 02CE
        gbc.setState(0xb3e2, 0x5ae7, 0x8c20, 0x39ca, 0x5410, 0x9f8e, 0x1, 0x1);
        gbc.writeMem(0x9f8e, { 0x9f });
        gbc.writeMem(0xb3e2, { 0xcb, 0x36 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x5ae7, gbc.sp());
        EXPECT(0xb3e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf9, gbc.readMem(0x9f8e));
        EXPECT(0xcb, gbc.readMem(0xb3e2));
        EXPECT(0x36, gbc.readMem(0xb3e3));
        // CB 36 02D1
        gbc.setState(0x50bd, 0x5855, 0xa9d0, 0x89e1, 0xdb6c, 0xa9af, 0x1, 0x1);
        gbc.writeMem(0x50bd, { 0xcb, 0x36 });
        gbc.writeMem(0xa9af, { 0x5d });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x5855, gbc.sp());
        EXPECT(0x50bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd5, gbc.readMem(0xa9af));
        // CB 36 02D2
        gbc.setState(0x5ce7, 0x5701, 0xba60, 0xaa4f, 0xe0eb, 0xb7d9, 0x1, 0x0);
        gbc.writeMem(0x5ce7, { 0xcb, 0x36 });
        gbc.writeMem(0xb7d9, { 0xea });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x5701, gbc.sp());
        EXPECT(0x5ce9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xae, gbc.readMem(0xb7d9));
        // CB 36 02D5
        gbc.setState(0x16e4, 0xa8cc, 0xb640, 0xc761, 0xdabd, 0xd93e, 0x0, 0x1);
        gbc.writeMem(0x16e4, { 0xcb, 0x36 });
        gbc.writeMem(0xd93e, { 0x13 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xa8cc, gbc.sp());
        EXPECT(0x16e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xd93e));
        // CB 36 02D6
        gbc.setState(0xf9a, 0x78c5, 0x8510, 0xbc16, 0x14a9, 0xcb0d, 0x1, 0x1);
        gbc.writeMem(0xf9a, { 0xcb, 0x36 });
        gbc.writeMem(0xcb0d, { 0x72 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x78c5, gbc.sp());
        EXPECT(0xf9c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xcb0d));
        // CB 36 02D7
        gbc.setState(0x3f57, 0x253e, 0xe4f0, 0xebff, 0x5b, 0xc1d3, 0x0, 0x1);
        gbc.writeMem(0x3f57, { 0xcb, 0x36 });
        gbc.writeMem(0xc1d3, { 0xd });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x253e, gbc.sp());
        EXPECT(0x3f59, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xc1d3));
        // CB 36 02DA
        gbc.setState(0x1ac0, 0x5124, 0x5eb0, 0xd203, 0x6367, 0xba32, 0x0, 0x0);
        gbc.writeMem(0x1ac0, { 0xcb, 0x36 });
        gbc.writeMem(0xba32, { 0x16 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x5124, gbc.sp());
        EXPECT(0x1ac2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xba32));
        // CB 36 02DB
        gbc.setState(0x7a73, 0xbf79, 0x2220, 0xf6de, 0x3564, 0x9314, 0x1, 0x1);
        gbc.writeMem(0x7a73, { 0xcb, 0x36 });
        gbc.writeMem(0x9314, { 0x3b });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xbf79, gbc.sp());
        EXPECT(0x7a75, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0x9314));
        // CB 36 02DD
        gbc.setState(0xe63f, 0xa3d0, 0x1c30, 0xc0db, 0x7b38, 0xdab3, 0x0, 0x0);
        gbc.writeMem(0xdab3, { 0xe2 });
        gbc.writeMem(0xe63f, { 0xcb, 0x36 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xa3d0, gbc.sp());
        EXPECT(0xe641, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xdab3));
        EXPECT(0xcb, gbc.readMem(0xe63f));
        EXPECT(0x36, gbc.readMem(0xe640));
        // CB 36 02DE
        gbc.setState(0xb1d0, 0x9e43, 0xf100, 0x84f3, 0x3fa1, 0xc0c4, 0x1, 0x0);
        gbc.writeMem(0xb1d0, { 0xcb, 0x36 });
        gbc.writeMem(0xc0c4, { 0xdd });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x9e43, gbc.sp());
        EXPECT(0xb1d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb1d0));
        EXPECT(0x36, gbc.readMem(0xb1d1));
        EXPECT(0xdd, gbc.readMem(0xc0c4));
        // CB 36 02E0
        gbc.setState(0xc63, 0xc6e7, 0x2f40, 0x1e01, 0xd7c4, 0xdda7, 0x1, 0x1);
        gbc.writeMem(0xc63, { 0xcb, 0x36 });
        gbc.writeMem(0xdda7, { 0x7f });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xc6e7, gbc.sp());
        EXPECT(0xc65, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf7, gbc.readMem(0xdda7));
        // CB 36 02E2
        gbc.setState(0xe671, 0xe303, 0x2cc0, 0x6a5d, 0xbe22, 0xbe3a, 0x1, 0x0);
        gbc.writeMem(0xbe3a, { 0x4 });
        gbc.writeMem(0xe671, { 0xcb, 0x36 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xe303, gbc.sp());
        EXPECT(0xe673, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xbe3a));
        EXPECT(0xcb, gbc.readMem(0xe671));
        EXPECT(0x36, gbc.readMem(0xe672));
        // CB 36 02E7
        gbc.setState(0xe68d, 0xe2f1, 0x26a0, 0xd809, 0x2c50, 0xce68, 0x1, 0x1);
        gbc.writeMem(0xce68, { 0xc4 });
        gbc.writeMem(0xe68d, { 0xcb, 0x36 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xe2f1, gbc.sp());
        EXPECT(0xe68f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xce68));
        EXPECT(0xcb, gbc.readMem(0xe68d));
        EXPECT(0x36, gbc.readMem(0xe68e));
        // CB 36 02EA
        gbc.setState(0x5517, 0xf989, 0x4580, 0xa8a7, 0xf866, 0x9313, 0x1, 0x0);
        gbc.writeMem(0x5517, { 0xcb, 0x36 });
        gbc.writeMem(0x9313, { 0xbe });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xf989, gbc.sp());
        EXPECT(0x5519, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xeb, gbc.readMem(0x9313));
        // CB 36 02EB
        gbc.setState(0x6169, 0xf05c, 0xca90, 0x248f, 0x2dcc, 0xbd6a, 0x1, 0x0);
        gbc.writeMem(0x6169, { 0xcb, 0x36 });
        gbc.writeMem(0xbd6a, { 0x4c });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xf05c, gbc.sp());
        EXPECT(0x616b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc4, gbc.readMem(0xbd6a));
        // CB 36 02EC
        gbc.setState(0x80a7, 0x261a, 0xc0f0, 0xfeee, 0x9203, 0xaa12, 0x1, 0x1);
        gbc.writeMem(0x80a7, { 0xcb, 0x36 });
        gbc.writeMem(0xaa12, { 0xa2 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x261a, gbc.sp());
        EXPECT(0x80a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x80a7));
        EXPECT(0x36, gbc.readMem(0x80a8));
        EXPECT(0x2a, gbc.readMem(0xaa12));
        // CB 36 02ED
        gbc.setState(0xa88d, 0x4684, 0x70, 0xc117, 0x565d, 0x7cd8, 0x0, 0x0);
        gbc.writeMem(0x7cd8, { 0x11 });
        gbc.writeMem(0xa88d, { 0xcb, 0x36 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x4684, gbc.sp());
        EXPECT(0xa88f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa88d));
        EXPECT(0x36, gbc.readMem(0xa88e));
        // CB 36 02F0
        gbc.setState(0xb397, 0x4813, 0xd7b0, 0x718, 0xbfae, 0x3e95, 0x1, 0x1);
        gbc.writeMem(0x3e95, { 0x33 });
        gbc.writeMem(0xb397, { 0xcb, 0x36 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x4813, gbc.sp());
        EXPECT(0xb399, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb397));
        EXPECT(0x36, gbc.readMem(0xb398));
        // CB 36 02F1
        gbc.setState(0xcacf, 0x9ac0, 0xb080, 0xa4bd, 0xfd9d, 0xe6fd, 0x1, 0x0);
        gbc.writeMem(0xcacf, { 0xcb, 0x36 });
        gbc.writeMem(0xe6fd, { 0x9f });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x9ac0, gbc.sp());
        EXPECT(0xcad1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcacf));
        EXPECT(0x36, gbc.readMem(0xcad0));
        EXPECT(0xf9, gbc.readMem(0xe6fd));
        // CB 36 02F2
        gbc.setState(0x6d91, 0x96, 0xa090, 0xed40, 0xb162, 0xa0b1, 0x0, 0x1);
        gbc.writeMem(0x6d91, { 0xcb, 0x36 });
        gbc.writeMem(0xa0b1, { 0x8a });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x96, gbc.sp());
        EXPECT(0x6d93, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa8, gbc.readMem(0xa0b1));
        // CB 36 02F3
        gbc.setState(0x1202, 0x7ec7, 0xcd40, 0x24b4, 0x7833, 0xf2e6, 0x1, 0x1);
        gbc.writeMem(0x1202, { 0xcb, 0x36 });
        gbc.writeMem(0xf2e6, { 0x10 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x7ec7, gbc.sp());
        EXPECT(0x1204, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1, gbc.readMem(0xf2e6));
        // CB 36 02F4
        gbc.setState(0x35dd, 0x6ddc, 0x6d60, 0xcb43, 0xf4de, 0xeb1c, 0x1, 0x1);
        gbc.writeMem(0x35dd, { 0xcb, 0x36 });
        gbc.writeMem(0xeb1c, { 0x44 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x6ddc, gbc.sp());
        EXPECT(0x35df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xeb1c));
        // CB 36 02F8
        gbc.setState(0xb806, 0x1740, 0xbc20, 0x8c47, 0xe07c, 0xeb14, 0x1, 0x1);
        gbc.writeMem(0xb806, { 0xcb, 0x36 });
        gbc.writeMem(0xeb14, { 0x8c });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x1740, gbc.sp());
        EXPECT(0xb808, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb806));
        EXPECT(0x36, gbc.readMem(0xb807));
        EXPECT(0xc8, gbc.readMem(0xeb14));
        // CB 36 02FA
        gbc.setState(0xed3, 0xf5b4, 0x6790, 0xda6e, 0x2551, 0xfc89, 0x0, 0x0);
        gbc.writeMem(0xed3, { 0xcb, 0x36 });
        gbc.writeMem(0xfc89, { 0x14 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xf5b4, gbc.sp());
        EXPECT(0xed5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x41, gbc.readMem(0xfc89));
        // CB 36 02FC
        gbc.setState(0x667e, 0xd2d2, 0x3030, 0xa789, 0x9369, 0xad8c, 0x1, 0x1);
        gbc.writeMem(0x667e, { 0xcb, 0x36 });
        gbc.writeMem(0xad8c, { 0x81 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xd2d2, gbc.sp());
        EXPECT(0x6680, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x18, gbc.readMem(0xad8c));
        // CB 36 02FF
        gbc.setState(0x8ed1, 0xeb64, 0xbf00, 0xd341, 0x5e2b, 0xe649, 0x1, 0x0);
        gbc.writeMem(0x8ed1, { 0xcb, 0x36 });
        gbc.writeMem(0xe649, { 0x98 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xeb64, gbc.sp());
        EXPECT(0x8ed3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ed1));
        EXPECT(0x36, gbc.readMem(0x8ed2));
        EXPECT(0x89, gbc.readMem(0xe649));
        // CB 36 0303
        gbc.setState(0x7a2a, 0xe93d, 0x10b0, 0xf8c, 0x4048, 0xaa05, 0x0, 0x0);
        gbc.writeMem(0x7a2a, { 0xcb, 0x36 });
        gbc.writeMem(0xaa05, { 0x19 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xe93d, gbc.sp());
        EXPECT(0x7a2c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xaa05));
        // CB 36 0306
        gbc.setState(0x4838, 0x5229, 0x3e10, 0xe181, 0x9e42, 0x99ab, 0x1, 0x0);
        gbc.writeMem(0x4838, { 0xcb, 0x36 });
        gbc.writeMem(0x99ab, { 0xcb });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x5229, gbc.sp());
        EXPECT(0x483a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0x99ab));
        // CB 36 0307
        gbc.setState(0xba87, 0x2227, 0x77d0, 0x12bb, 0xe9db, 0xefba, 0x0, 0x0);
        gbc.writeMem(0xba87, { 0xcb, 0x36 });
        gbc.writeMem(0xefba, { 0x2c });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x2227, gbc.sp());
        EXPECT(0xba89, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba87));
        EXPECT(0x36, gbc.readMem(0xba88));
        EXPECT(0xc2, gbc.readMem(0xefba));
        // CB 36 0309
        gbc.setState(0x4089, 0x3db3, 0x870, 0x9eb, 0x940f, 0x87c5, 0x1, 0x0);
        gbc.writeMem(0x4089, { 0xcb, 0x36 });
        gbc.writeMem(0x87c5, { 0xce });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x3db3, gbc.sp());
        EXPECT(0x408b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xec, gbc.readMem(0x87c5));
        // CB 36 030B
        gbc.setState(0x25fd, 0x7f6d, 0xeb90, 0x312a, 0x2569, 0xced0, 0x0, 0x0);
        gbc.writeMem(0x25fd, { 0xcb, 0x36 });
        gbc.writeMem(0xced0, { 0xee });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x7f6d, gbc.sp());
        EXPECT(0x25ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xee, gbc.readMem(0xced0));
        // CB 36 030D
        gbc.setState(0x185c, 0xe939, 0xefc0, 0x6d7b, 0x2e1c, 0xe105, 0x1, 0x0);
        gbc.writeMem(0x185c, { 0xcb, 0x36 });
        gbc.writeMem(0xe105, { 0xea });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xe939, gbc.sp());
        EXPECT(0x185e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xae, gbc.readMem(0xe105));
        // CB 36 030E
        gbc.setState(0x7c8d, 0xbc3c, 0xddc0, 0xa4fb, 0x56c2, 0xaf45, 0x0, 0x0);
        gbc.writeMem(0x7c8d, { 0xcb, 0x36 });
        gbc.writeMem(0xaf45, { 0xdf });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xbc3c, gbc.sp());
        EXPECT(0x7c8f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfd, gbc.readMem(0xaf45));
        // CB 36 0313
        gbc.setState(0x5d6e, 0x2d4c, 0x6b0, 0x6a6d, 0x826b, 0xbbac, 0x0, 0x1);
        gbc.writeMem(0x5d6e, { 0xcb, 0x36 });
        gbc.writeMem(0xbbac, { 0x91 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x2d4c, gbc.sp());
        EXPECT(0x5d70, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xbbac));
        // CB 36 0314
        gbc.setState(0x997f, 0x2818, 0xb040, 0x9815, 0xb908, 0xfb07, 0x1, 0x1);
        gbc.writeMem(0x997f, { 0xcb, 0x36 });
        gbc.writeMem(0xfb07, { 0x7a });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x2818, gbc.sp());
        EXPECT(0x9981, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x997f));
        EXPECT(0x36, gbc.readMem(0x9980));
        EXPECT(0xa7, gbc.readMem(0xfb07));
        // CB 36 0316
        gbc.setState(0x9c26, 0x4444, 0xc4d0, 0x5720, 0x96da, 0xd207, 0x0, 0x1);
        gbc.writeMem(0x9c26, { 0xcb, 0x36 });
        gbc.writeMem(0xd207, { 0x16 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x4444, gbc.sp());
        EXPECT(0x9c28, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c26));
        EXPECT(0x36, gbc.readMem(0x9c27));
        EXPECT(0x61, gbc.readMem(0xd207));
        // CB 36 0317
        gbc.setState(0x814c, 0x8012, 0x18e0, 0xd5bd, 0xcf7f, 0x90c6, 0x0, 0x1);
        gbc.writeMem(0x814c, { 0xcb, 0x36 });
        gbc.writeMem(0x90c6, { 0xc9 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x8012, gbc.sp());
        EXPECT(0x814e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x814c));
        EXPECT(0x36, gbc.readMem(0x814d));
        EXPECT(0x9c, gbc.readMem(0x90c6));
        // CB 36 0318
        gbc.setState(0xb7e2, 0xf501, 0x1cb0, 0x23e9, 0x416d, 0x92da, 0x1, 0x0);
        gbc.writeMem(0x92da, { 0xa6 });
        gbc.writeMem(0xb7e2, { 0xcb, 0x36 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xf501, gbc.sp());
        EXPECT(0xb7e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0x92da));
        EXPECT(0xcb, gbc.readMem(0xb7e2));
        EXPECT(0x36, gbc.readMem(0xb7e3));
        // CB 36 0319
        gbc.setState(0x73e, 0x5c88, 0x9f80, 0x7bfa, 0x3e54, 0x7767, 0x0, 0x0);
        gbc.writeMem(0x73e, { 0xcb, 0x36 });
        gbc.writeMem(0x7767, { 0xff });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x5c88, gbc.sp());
        EXPECT(0x740, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 36 031B
        gbc.setState(0xb42, 0xdd97, 0x4b80, 0xa400, 0x2055, 0xc964, 0x0, 0x0);
        gbc.writeMem(0xb42, { 0xcb, 0x36 });
        gbc.writeMem(0xc964, { 0x15 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xdd97, gbc.sp());
        EXPECT(0xb44, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xc964));
        // CB 36 031D
        gbc.setState(0x43d2, 0xc4a9, 0x7a60, 0x7614, 0xd579, 0xdb56, 0x0, 0x1);
        gbc.writeMem(0x43d2, { 0xcb, 0x36 });
        gbc.writeMem(0xdb56, { 0xe4 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xc4a9, gbc.sp());
        EXPECT(0x43d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xdb56));
        // CB 36 031F
        gbc.setState(0x4b33, 0xf32a, 0xe170, 0x96fb, 0xa97d, 0xc187, 0x1, 0x1);
        gbc.writeMem(0x4b33, { 0xcb, 0x36 });
        gbc.writeMem(0xc187, { 0xda });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xf32a, gbc.sp());
        EXPECT(0x4b35, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xad, gbc.readMem(0xc187));
        // CB 36 0320
        gbc.setState(0x63fe, 0xa111, 0xa010, 0xf8f7, 0x9c4, 0xd8ea, 0x0, 0x1);
        gbc.writeMem(0x63fe, { 0xcb, 0x36 });
        gbc.writeMem(0xd8ea, { 0xc2 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xa111, gbc.sp());
        EXPECT(0x6400, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xd8ea));
        // CB 36 0327
        gbc.setState(0x4bfd, 0x341, 0x5000, 0xc9ae, 0xe1b2, 0x269f, 0x1, 0x0);
        gbc.writeMem(0x269f, { 0xbb });
        gbc.writeMem(0x4bfd, { 0xcb, 0x36 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x341, gbc.sp());
        EXPECT(0x4bff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 36 032B
        gbc.setState(0xdbbb, 0xc519, 0x6550, 0x1e35, 0x87b2, 0xd672, 0x1, 0x1);
        gbc.writeMem(0xd672, { 0xb9 });
        gbc.writeMem(0xdbbb, { 0xcb, 0x36 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xc519, gbc.sp());
        EXPECT(0xdbbd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xd672));
        EXPECT(0xcb, gbc.readMem(0xdbbb));
        EXPECT(0x36, gbc.readMem(0xdbbc));
        // CB 36 032C
        gbc.setState(0x4838, 0xdbb2, 0xd630, 0x3602, 0xb0be, 0xb619, 0x0, 0x0);
        gbc.writeMem(0x4838, { 0xcb, 0x36 });
        gbc.writeMem(0xb619, { 0x54 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xdbb2, gbc.sp());
        EXPECT(0x483a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x45, gbc.readMem(0xb619));
        // CB 36 032D
        gbc.setState(0x3d43, 0xf593, 0xb00, 0x9eee, 0x74a0, 0xce51, 0x0, 0x1);
        gbc.writeMem(0x3d43, { 0xcb, 0x36 });
        gbc.writeMem(0xce51, { 0x3f });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xf593, gbc.sp());
        EXPECT(0x3d45, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf3, gbc.readMem(0xce51));
        // CB 36 032F
        gbc.setState(0xc8a1, 0x1ec0, 0x32d0, 0xd3ad, 0x50b0, 0xa427, 0x1, 0x0);
        gbc.writeMem(0xa427, { 0xed });
        gbc.writeMem(0xc8a1, { 0xcb, 0x36 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x1ec0, gbc.sp());
        EXPECT(0xc8a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xde, gbc.readMem(0xa427));
        EXPECT(0xcb, gbc.readMem(0xc8a1));
        EXPECT(0x36, gbc.readMem(0xc8a2));
        // CB 36 0330
        gbc.setState(0x9be2, 0x53a3, 0xc4c0, 0xa063, 0xa8b9, 0xa698, 0x1, 0x1);
        gbc.writeMem(0x9be2, { 0xcb, 0x36 });
        gbc.writeMem(0xa698, { 0x9d });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x53a3, gbc.sp());
        EXPECT(0x9be4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9be2));
        EXPECT(0x36, gbc.readMem(0x9be3));
        EXPECT(0xd9, gbc.readMem(0xa698));
        // CB 36 0334
        gbc.setState(0x7fab, 0xc058, 0x3a10, 0xc567, 0xb7ac, 0xe6a2, 0x0, 0x1);
        gbc.writeMem(0x7fab, { 0xcb, 0x36 });
        gbc.writeMem(0xe6a2, { 0xce });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xc058, gbc.sp());
        EXPECT(0x7fad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xec, gbc.readMem(0xe6a2));
        // CB 36 0336
        gbc.setState(0xe07a, 0xcd6b, 0x60c0, 0x26cc, 0x3da4, 0x530a, 0x0, 0x0);
        gbc.writeMem(0x530a, { 0x44 });
        gbc.writeMem(0xe07a, { 0xcb, 0x36 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xcd6b, gbc.sp());
        EXPECT(0xe07c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe07a));
        EXPECT(0x36, gbc.readMem(0xe07b));
        // CB 36 0337
        gbc.setState(0x1369, 0xf47, 0xb050, 0x3043, 0xd031, 0x1667, 0x0, 0x1);
        gbc.writeMem(0x1369, { 0xcb, 0x36 });
        gbc.writeMem(0x1667, { 0x77 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xf47, gbc.sp());
        EXPECT(0x136b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 36 0338
        gbc.setState(0x4a44, 0xbc45, 0x62f0, 0x34cc, 0x7b24, 0xe41f, 0x1, 0x0);
        gbc.writeMem(0x4a44, { 0xcb, 0x36 });
        gbc.writeMem(0xe41f, { 0xdd });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xbc45, gbc.sp());
        EXPECT(0x4a46, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xdd, gbc.readMem(0xe41f));
        // CB 36 0339
        gbc.setState(0xef8c, 0x21a9, 0x49f0, 0xc665, 0x7fab, 0xaba3, 0x1, 0x0);
        gbc.writeMem(0xaba3, { 0xe });
        gbc.writeMem(0xef8c, { 0xcb, 0x36 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x21a9, gbc.sp());
        EXPECT(0xef8e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xaba3));
        EXPECT(0xcb, gbc.readMem(0xef8c));
        EXPECT(0x36, gbc.readMem(0xef8d));
        // CB 36 033C
        gbc.setState(0x42fd, 0x2855, 0xc8e0, 0x69ea, 0x1e60, 0xc6dd, 0x0, 0x1);
        gbc.writeMem(0x42fd, { 0xcb, 0x36 });
        gbc.writeMem(0xc6dd, { 0xa9 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x2855, gbc.sp());
        EXPECT(0x42ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xc6dd));
        // CB 36 033D
        gbc.setState(0x91c3, 0x6ac5, 0x3ab0, 0x4629, 0x6cee, 0xcf0c, 0x1, 0x0);
        gbc.writeMem(0x91c3, { 0xcb, 0x36 });
        gbc.writeMem(0xcf0c, { 0x2b });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x6ac5, gbc.sp());
        EXPECT(0x91c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x91c3));
        EXPECT(0x36, gbc.readMem(0x91c4));
        EXPECT(0xb2, gbc.readMem(0xcf0c));
        // CB 36 033E
        gbc.setState(0x7bc2, 0xd93, 0xbc60, 0xc931, 0xa9b9, 0xda30, 0x0, 0x0);
        gbc.writeMem(0x7bc2, { 0xcb, 0x36 });
        gbc.writeMem(0xda30, { 0x30 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xd93, gbc.sp());
        EXPECT(0x7bc4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xda30));
        // CB 36 033F
        gbc.setState(0x59e8, 0x791f, 0xb3c0, 0x36d5, 0x37fb, 0x8850, 0x1, 0x0);
        gbc.writeMem(0x59e8, { 0xcb, 0x36 });
        gbc.writeMem(0x8850, { 0xc4 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x791f, gbc.sp());
        EXPECT(0x59ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0x8850));
        // CB 36 0340
        gbc.setState(0xdb7a, 0xb4ed, 0xfe70, 0xc62d, 0x5afc, 0xcfe8, 0x0, 0x1);
        gbc.writeMem(0xcfe8, { 0xee });
        gbc.writeMem(0xdb7a, { 0xcb, 0x36 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xb4ed, gbc.sp());
        EXPECT(0xdb7c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xee, gbc.readMem(0xcfe8));
        EXPECT(0xcb, gbc.readMem(0xdb7a));
        EXPECT(0x36, gbc.readMem(0xdb7b));
        // CB 36 0341
        gbc.setState(0x126c, 0xc307, 0x40a0, 0x4fd, 0x8310, 0xe5c9, 0x0, 0x1);
        gbc.writeMem(0x126c, { 0xcb, 0x36 });
        gbc.writeMem(0xe5c9, { 0x97 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xc307, gbc.sp());
        EXPECT(0x126e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xe5c9));
        // CB 36 0342
        gbc.setState(0xde37, 0x2852, 0x44d0, 0x5f05, 0xef96, 0xef7d, 0x1, 0x1);
        gbc.writeMem(0xde37, { 0xcb, 0x36 });
        gbc.writeMem(0xef7d, { 0x94 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x2852, gbc.sp());
        EXPECT(0xde39, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde37));
        EXPECT(0x36, gbc.readMem(0xde38));
        EXPECT(0x49, gbc.readMem(0xef7d));
        // CB 36 0343
        gbc.setState(0xb92b, 0xbae5, 0xeb50, 0x95f4, 0xb1c1, 0xcb21, 0x1, 0x0);
        gbc.writeMem(0xb92b, { 0xcb, 0x36 });
        gbc.writeMem(0xcb21, { 0xa2 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xbae5, gbc.sp());
        EXPECT(0xb92d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb92b));
        EXPECT(0x36, gbc.readMem(0xb92c));
        EXPECT(0x2a, gbc.readMem(0xcb21));
        // CB 36 0347
        gbc.setState(0x1c00, 0xfb87, 0xac10, 0xd5a9, 0xbf74, 0xd85a, 0x0, 0x1);
        gbc.writeMem(0x1c00, { 0xcb, 0x36 });
        gbc.writeMem(0xd85a, { 0x5 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xfb87, gbc.sp());
        EXPECT(0x1c02, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xd85a));
        // CB 36 0348
        gbc.setState(0x4121, 0xde39, 0xeee0, 0x102, 0x40b, 0xe022, 0x0, 0x0);
        gbc.writeMem(0x4121, { 0xcb, 0x36 });
        gbc.writeMem(0xe022, { 0xbd });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xde39, gbc.sp());
        EXPECT(0x4123, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xdb, gbc.readMem(0xe022));
        // CB 36 034A
        gbc.setState(0xe20e, 0x8921, 0xf6a0, 0x6c4a, 0xf359, 0xa781, 0x0, 0x0);
        gbc.writeMem(0xa781, { 0xca });
        gbc.writeMem(0xe20e, { 0xcb, 0x36 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x8921, gbc.sp());
        EXPECT(0xe210, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xa781));
        EXPECT(0xcb, gbc.readMem(0xe20e));
        EXPECT(0x36, gbc.readMem(0xe20f));
        // CB 36 034C
        gbc.setState(0x40ae, 0x5275, 0xa940, 0xea9e, 0x6952, 0x671b, 0x1, 0x1);
        gbc.writeMem(0x40ae, { 0xcb, 0x36 });
        gbc.writeMem(0x671b, { 0x77 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x5275, gbc.sp());
        EXPECT(0x40b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 36 034D
        gbc.setState(0xa757, 0x6d6c, 0x9da0, 0x1169, 0x9b46, 0xd887, 0x0, 0x0);
        gbc.writeMem(0xa757, { 0xcb, 0x36 });
        gbc.writeMem(0xd887, { 0x48 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x6d6c, gbc.sp());
        EXPECT(0xa759, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa757));
        EXPECT(0x36, gbc.readMem(0xa758));
        EXPECT(0x84, gbc.readMem(0xd887));
        // CB 36 034E
        gbc.setState(0xbecb, 0x304b, 0x1f90, 0xa581, 0xaa15, 0xfcd4, 0x0, 0x0);
        gbc.writeMem(0xbecb, { 0xcb, 0x36 });
        gbc.writeMem(0xfcd4, { 0x1c });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x304b, gbc.sp());
        EXPECT(0xbecd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbecb));
        EXPECT(0x36, gbc.readMem(0xbecc));
        EXPECT(0xc1, gbc.readMem(0xfcd4));
        // CB 36 0350
        gbc.setState(0x99ef, 0x80dc, 0x9c80, 0xd7ad, 0xb723, 0xa8cf, 0x1, 0x0);
        gbc.writeMem(0x99ef, { 0xcb, 0x36 });
        gbc.writeMem(0xa8cf, { 0xa6 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x80dc, gbc.sp());
        EXPECT(0x99f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x99ef));
        EXPECT(0x36, gbc.readMem(0x99f0));
        EXPECT(0x6a, gbc.readMem(0xa8cf));
        // CB 36 0351
        gbc.setState(0x6fe2, 0xcfb1, 0xdc80, 0xb3eb, 0xec0d, 0x887d, 0x0, 0x1);
        gbc.writeMem(0x6fe2, { 0xcb, 0x36 });
        gbc.writeMem(0x887d, { 0x6d });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xcfb1, gbc.sp());
        EXPECT(0x6fe4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0x887d));
        // CB 36 0357
        gbc.setState(0x4308, 0x71e1, 0x4be0, 0x6d76, 0x6468, 0xa235, 0x0, 0x0);
        gbc.writeMem(0x4308, { 0xcb, 0x36 });
        gbc.writeMem(0xa235, { 0x61 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x71e1, gbc.sp());
        EXPECT(0x430a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xa235));
        // CB 36 0358
        gbc.setState(0x7b21, 0x157c, 0x7960, 0x3579, 0xf02f, 0x9ef7, 0x0, 0x1);
        gbc.writeMem(0x7b21, { 0xcb, 0x36 });
        gbc.writeMem(0x9ef7, { 0xc });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x157c, gbc.sp());
        EXPECT(0x7b23, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc0, gbc.readMem(0x9ef7));
        // CB 36 035B
        gbc.setState(0x333e, 0x1dc2, 0x92e0, 0x3212, 0xb85, 0xafa5, 0x0, 0x0);
        gbc.writeMem(0x333e, { 0xcb, 0x36 });
        gbc.writeMem(0xafa5, { 0xca });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x1dc2, gbc.sp());
        EXPECT(0x3340, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xafa5));
        // CB 36 035D
        gbc.setState(0xc4f1, 0x723a, 0xbf40, 0x6bda, 0xddf9, 0xf9df, 0x0, 0x1);
        gbc.writeMem(0xc4f1, { 0xcb, 0x36 });
        gbc.writeMem(0xf9df, { 0xf3 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x723a, gbc.sp());
        EXPECT(0xc4f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc4f1));
        EXPECT(0x36, gbc.readMem(0xc4f2));
        EXPECT(0x3f, gbc.readMem(0xf9df));
        // CB 36 0360
        gbc.setState(0x93f2, 0xe7a8, 0x7770, 0x571, 0xd5da, 0xf8c9, 0x1, 0x0);
        gbc.writeMem(0x93f2, { 0xcb, 0x36 });
        gbc.writeMem(0xf8c9, { 0x64 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xe7a8, gbc.sp());
        EXPECT(0x93f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x93f2));
        EXPECT(0x36, gbc.readMem(0x93f3));
        EXPECT(0x46, gbc.readMem(0xf8c9));
        // CB 36 0362
        gbc.setState(0x4d49, 0xb11d, 0xdfa0, 0xff2c, 0x8b7c, 0x844e, 0x0, 0x1);
        gbc.writeMem(0x4d49, { 0xcb, 0x36 });
        gbc.writeMem(0x844e, { 0xc5 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xb11d, gbc.sp());
        EXPECT(0x4d4b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5c, gbc.readMem(0x844e));
        // CB 36 0363
        gbc.setState(0x5553, 0xb072, 0x11b0, 0x161b, 0x701a, 0x8954, 0x1, 0x0);
        gbc.writeMem(0x5553, { 0xcb, 0x36 });
        gbc.writeMem(0x8954, { 0xf9 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xb072, gbc.sp());
        EXPECT(0x5555, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0x8954));
        // CB 36 0366
        gbc.setState(0xe6c6, 0x708d, 0x9f0, 0xbce3, 0xecf0, 0xbc11, 0x0, 0x1);
        gbc.writeMem(0xbc11, { 0xb0 });
        gbc.writeMem(0xe6c6, { 0xcb, 0x36 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x708d, gbc.sp());
        EXPECT(0xe6c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xbc11));
        EXPECT(0xcb, gbc.readMem(0xe6c6));
        EXPECT(0x36, gbc.readMem(0xe6c7));
        // CB 36 0367
        gbc.setState(0x2ef2, 0xb806, 0xf1a0, 0x4847, 0xc4cf, 0xc420, 0x0, 0x0);
        gbc.writeMem(0x2ef2, { 0xcb, 0x36 });
        gbc.writeMem(0xc420, { 0x71 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xb806, gbc.sp());
        EXPECT(0x2ef4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x17, gbc.readMem(0xc420));
        // CB 36 036F
        gbc.setState(0x1c44, 0xd559, 0x160, 0x65e9, 0x4fda, 0x89e5, 0x1, 0x0);
        gbc.writeMem(0x1c44, { 0xcb, 0x36 });
        gbc.writeMem(0x89e5, { 0x99 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xd559, gbc.sp());
        EXPECT(0x1c46, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0x89e5));
        // CB 36 0374
        gbc.setState(0x8f9e, 0x121b, 0xb5c0, 0xa4ca, 0x2101, 0xc5c3, 0x0, 0x0);
        gbc.writeMem(0x8f9e, { 0xcb, 0x36 });
        gbc.writeMem(0xc5c3, { 0xe5 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x121b, gbc.sp());
        EXPECT(0x8fa0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f9e));
        EXPECT(0x36, gbc.readMem(0x8f9f));
        EXPECT(0x5e, gbc.readMem(0xc5c3));
        // CB 36 0376
        gbc.setState(0xd886, 0x272a, 0x5e0, 0x1cd2, 0x8e35, 0xbbc6, 0x0, 0x0);
        gbc.writeMem(0xbbc6, { 0xcc });
        gbc.writeMem(0xd886, { 0xcb, 0x36 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x272a, gbc.sp());
        EXPECT(0xd888, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcc, gbc.readMem(0xbbc6));
        EXPECT(0xcb, gbc.readMem(0xd886));
        EXPECT(0x36, gbc.readMem(0xd887));
        // CB 36 0377
        gbc.setState(0x7e14, 0x448, 0x2590, 0x86c5, 0xd38e, 0xfdc8, 0x0, 0x1);
        gbc.writeMem(0x7e14, { 0xcb, 0x36 });
        gbc.writeMem(0xfdc8, { 0x19 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x448, gbc.sp());
        EXPECT(0x7e16, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xfdc8));
        // CB 36 037B
        gbc.setState(0x46bf, 0xf53c, 0x6b80, 0xd8a6, 0xe09e, 0xfebe, 0x0, 0x0);
        gbc.writeMem(0x46bf, { 0xcb, 0x36 });
        gbc.writeMem(0xfebe, { 0xc0 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xf53c, gbc.sp());
        EXPECT(0x46c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xfebe));
        // CB 36 037D
        gbc.setState(0xa5fe, 0xd63, 0xb4c0, 0xd138, 0xe569, 0xd482, 0x0, 0x0);
        gbc.writeMem(0xa5fe, { 0xcb, 0x36 });
        gbc.writeMem(0xd482, { 0xd0 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xd63, gbc.sp());
        EXPECT(0xa600, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa5fe));
        EXPECT(0x36, gbc.readMem(0xa5ff));
        EXPECT(0xd, gbc.readMem(0xd482));
        // CB 36 037E
        gbc.setState(0x1c94, 0x6005, 0xd560, 0xb8c2, 0xfe04, 0xfd6e, 0x1, 0x0);
        gbc.writeMem(0x1c94, { 0xcb, 0x36 });
        gbc.writeMem(0xfd6e, { 0xf4 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x6005, gbc.sp());
        EXPECT(0x1c96, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4f, gbc.readMem(0xfd6e));
        // CB 36 037F
        gbc.setState(0x4fce, 0x7448, 0x7180, 0x2590, 0xc3fa, 0xb6b5, 0x0, 0x1);
        gbc.writeMem(0x4fce, { 0xcb, 0x36 });
        gbc.writeMem(0xb6b5, { 0xa3 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x7448, gbc.sp());
        EXPECT(0x4fd0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3a, gbc.readMem(0xb6b5));
        // CB 36 0381
        gbc.setState(0x1bf6, 0x9953, 0xc760, 0x6de2, 0x2c07, 0xa172, 0x0, 0x0);
        gbc.writeMem(0x1bf6, { 0xcb, 0x36 });
        gbc.writeMem(0xa172, { 0x3a });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x9953, gbc.sp());
        EXPECT(0x1bf8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xa172));
        // CB 36 0382
        gbc.setState(0x487a, 0x1090, 0xb110, 0x5682, 0xa396, 0xddec, 0x0, 0x0);
        gbc.writeMem(0x487a, { 0xcb, 0x36 });
        gbc.writeMem(0xddec, { 0xa4 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x1090, gbc.sp());
        EXPECT(0x487c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4a, gbc.readMem(0xddec));
        // CB 36 0383
        gbc.setState(0x1798, 0x907, 0x9600, 0x2e9d, 0x3eca, 0xac59, 0x1, 0x0);
        gbc.writeMem(0x1798, { 0xcb, 0x36 });
        gbc.writeMem(0xac59, { 0xd6 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x907, gbc.sp());
        EXPECT(0x179a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xac59));
        // CB 36 0384
        gbc.setState(0x30c0, 0xb80, 0xefc0, 0x66ee, 0x6660, 0xfa3b, 0x1, 0x0);
        gbc.writeMem(0x30c0, { 0xcb, 0x36 });
        gbc.writeMem(0xfa3b, { 0x4b });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xb80, gbc.sp());
        EXPECT(0x30c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb4, gbc.readMem(0xfa3b));
        // CB 36 0385
        gbc.setState(0x8df4, 0xdb1f, 0xaea0, 0xb128, 0x1c56, 0x36ce, 0x0, 0x1);
        gbc.writeMem(0x36ce, { 0x33 });
        gbc.writeMem(0x8df4, { 0xcb, 0x36 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xdb1f, gbc.sp());
        EXPECT(0x8df6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8df4));
        EXPECT(0x36, gbc.readMem(0x8df5));
        // CB 36 0389
        gbc.setState(0xaad8, 0xa16f, 0x57c0, 0xfbe2, 0xfefc, 0x9cbd, 0x0, 0x1);
        gbc.writeMem(0x9cbd, { 0x4c });
        gbc.writeMem(0xaad8, { 0xcb, 0x36 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xa16f, gbc.sp());
        EXPECT(0xaada, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc4, gbc.readMem(0x9cbd));
        EXPECT(0xcb, gbc.readMem(0xaad8));
        EXPECT(0x36, gbc.readMem(0xaad9));
        // CB 36 038B
        gbc.setState(0x9fcd, 0x2c70, 0xe6d0, 0xef48, 0xd9b4, 0xff04, 0x0, 0x0);
        gbc.writeMem(0x9fcd, { 0xcb, 0x36 });
        gbc.writeMem(0xff04, { 0x59 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x2c70, gbc.sp());
        EXPECT(0x9fcf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9fcd));
        EXPECT(0x36, gbc.readMem(0x9fce));
        EXPECT(0x95, gbc.readMem(0xff04));
        // CB 36 038C
        gbc.setState(0x891a, 0x71c5, 0x6dd0, 0x2a15, 0x860d, 0xd3b5, 0x1, 0x1);
        gbc.writeMem(0x891a, { 0xcb, 0x36 });
        gbc.writeMem(0xd3b5, { 0x27 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x71c5, gbc.sp());
        EXPECT(0x891c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x891a));
        EXPECT(0x36, gbc.readMem(0x891b));
        EXPECT(0x72, gbc.readMem(0xd3b5));
        // CB 36 038E
        gbc.setState(0x42bb, 0x7114, 0xe2e0, 0x5946, 0xec06, 0xb81b, 0x1, 0x1);
        gbc.writeMem(0x42bb, { 0xcb, 0x36 });
        gbc.writeMem(0xb81b, { 0xf0 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x7114, gbc.sp());
        EXPECT(0x42bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf, gbc.readMem(0xb81b));
        // CB 36 038F
        gbc.setState(0x43e3, 0xa940, 0x3f10, 0xd58d, 0xe9cf, 0x75dd, 0x1, 0x1);
        gbc.writeMem(0x43e3, { 0xcb, 0x36 });
        gbc.writeMem(0x75dd, { 0x44 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xa940, gbc.sp());
        EXPECT(0x43e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 36 0394
        gbc.setState(0xe98c, 0xac64, 0x60a0, 0x9ce9, 0x801a, 0x81e4, 0x1, 0x0);
        gbc.writeMem(0x81e4, { 0x5 });
        gbc.writeMem(0xe98c, { 0xcb, 0x36 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xac64, gbc.sp());
        EXPECT(0xe98e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0x81e4));
        EXPECT(0xcb, gbc.readMem(0xe98c));
        EXPECT(0x36, gbc.readMem(0xe98d));
        // CB 36 0396
        gbc.setState(0xc3c1, 0xe163, 0xd000, 0xd3b5, 0xdce6, 0xa5b5, 0x0, 0x1);
        gbc.writeMem(0xa5b5, { 0xc5 });
        gbc.writeMem(0xc3c1, { 0xcb, 0x36 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xe163, gbc.sp());
        EXPECT(0xc3c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5c, gbc.readMem(0xa5b5));
        EXPECT(0xcb, gbc.readMem(0xc3c1));
        EXPECT(0x36, gbc.readMem(0xc3c2));
        // CB 36 0397
        gbc.setState(0x53a2, 0xb8e4, 0xcfd0, 0xe21a, 0x29a, 0xd3b7, 0x0, 0x0);
        gbc.writeMem(0x53a2, { 0xcb, 0x36 });
        gbc.writeMem(0xd3b7, { 0xe4 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xb8e4, gbc.sp());
        EXPECT(0x53a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xd3b7));
        // CB 36 0399
        gbc.setState(0x9a8b, 0x127f, 0x98e0, 0xb00a, 0x33c, 0xc4ae, 0x1, 0x0);
        gbc.writeMem(0x9a8b, { 0xcb, 0x36 });
        gbc.writeMem(0xc4ae, { 0xc2 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x127f, gbc.sp());
        EXPECT(0x9a8d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a8b));
        EXPECT(0x36, gbc.readMem(0x9a8c));
        EXPECT(0x2c, gbc.readMem(0xc4ae));
        // CB 36 039B
        gbc.setState(0x477f, 0xf70, 0xc270, 0xf67b, 0x340d, 0xd4f5, 0x1, 0x0);
        gbc.writeMem(0x477f, { 0xcb, 0x36 });
        gbc.writeMem(0xd4f5, { 0xe8 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xf70, gbc.sp());
        EXPECT(0x4781, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8e, gbc.readMem(0xd4f5));
        // CB 36 039C
        gbc.setState(0x3773, 0x1cab, 0x9270, 0x9deb, 0xbd4e, 0xd266, 0x0, 0x1);
        gbc.writeMem(0x3773, { 0xcb, 0x36 });
        gbc.writeMem(0xd266, { 0xd9 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x1cab, gbc.sp());
        EXPECT(0x3775, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xd266));
        // CB 36 039E
        gbc.setState(0x720a, 0x1d95, 0x5910, 0x5dca, 0x574c, 0xb7e6, 0x0, 0x1);
        gbc.writeMem(0x720a, { 0xcb, 0x36 });
        gbc.writeMem(0xb7e6, { 0x18 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x1d95, gbc.sp());
        EXPECT(0x720c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xb7e6));
        // CB 36 039F
        gbc.setState(0xe304, 0x44c0, 0xbb60, 0xfddf, 0x1017, 0xa312, 0x1, 0x1);
        gbc.writeMem(0xa312, { 0x5f });
        gbc.writeMem(0xe304, { 0xcb, 0x36 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x44c0, gbc.sp());
        EXPECT(0xe306, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf5, gbc.readMem(0xa312));
        EXPECT(0xcb, gbc.readMem(0xe304));
        EXPECT(0x36, gbc.readMem(0xe305));
        // CB 36 03A0
        gbc.setState(0xea29, 0x52cf, 0xf50, 0x62e3, 0x713d, 0x835f, 0x1, 0x1);
        gbc.writeMem(0x835f, { 0x27 });
        gbc.writeMem(0xea29, { 0xcb, 0x36 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x52cf, gbc.sp());
        EXPECT(0xea2b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x72, gbc.readMem(0x835f));
        EXPECT(0xcb, gbc.readMem(0xea29));
        EXPECT(0x36, gbc.readMem(0xea2a));
        // CB 36 03A1
        gbc.setState(0xbae8, 0x9c1a, 0x4b50, 0xb1bf, 0x8899, 0xbde8, 0x0, 0x0);
        gbc.writeMem(0xbae8, { 0xcb, 0x36 });
        gbc.writeMem(0xbde8, { 0x33 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x9c1a, gbc.sp());
        EXPECT(0xbaea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbae8));
        EXPECT(0x36, gbc.readMem(0xbae9));
        EXPECT(0x33, gbc.readMem(0xbde8));
        // CB 36 03A2
        gbc.setState(0xc76b, 0x68f2, 0x4040, 0x449d, 0x2d96, 0xc313, 0x0, 0x1);
        gbc.writeMem(0xc313, { 0xea });
        gbc.writeMem(0xc76b, { 0xcb, 0x36 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x68f2, gbc.sp());
        EXPECT(0xc76d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xae, gbc.readMem(0xc313));
        EXPECT(0xcb, gbc.readMem(0xc76b));
        EXPECT(0x36, gbc.readMem(0xc76c));
        // CB 36 03A3
        gbc.setState(0x8fe4, 0xaa6a, 0x28e0, 0xcf25, 0x19b3, 0xe74f, 0x1, 0x1);
        gbc.writeMem(0x8fe4, { 0xcb, 0x36 });
        gbc.writeMem(0xe74f, { 0xb2 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xaa6a, gbc.sp());
        EXPECT(0x8fe6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8fe4));
        EXPECT(0x36, gbc.readMem(0x8fe5));
        EXPECT(0x2b, gbc.readMem(0xe74f));
        // CB 36 03A5
        gbc.setState(0xce35, 0x9990, 0xacd0, 0x44a, 0xa9c9, 0xcd36, 0x0, 0x1);
        gbc.writeMem(0xcd36, { 0x72 });
        gbc.writeMem(0xce35, { 0xcb, 0x36 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x9990, gbc.sp());
        EXPECT(0xce37, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xcd36));
        EXPECT(0xcb, gbc.readMem(0xce35));
        EXPECT(0x36, gbc.readMem(0xce36));
        // CB 36 03A8
        gbc.setState(0xe3b7, 0xc4dd, 0x5d30, 0x8503, 0xbaae, 0x32ed, 0x0, 0x0);
        gbc.writeMem(0x32ed, { 0xff });
        gbc.writeMem(0xe3b7, { 0xcb, 0x36 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xc4dd, gbc.sp());
        EXPECT(0xe3b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe3b7));
        EXPECT(0x36, gbc.readMem(0xe3b8));
        // CB 36 03A9
        gbc.setState(0x4b9b, 0xaf1d, 0xaf80, 0xe098, 0x17d1, 0x8534, 0x0, 0x1);
        gbc.writeMem(0x4b9b, { 0xcb, 0x36 });
        gbc.writeMem(0x8534, { 0x38 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xaf1d, gbc.sp());
        EXPECT(0x4b9d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x83, gbc.readMem(0x8534));
        // CB 36 03AA
        gbc.setState(0xa7e1, 0xfcda, 0x9d80, 0xfb1e, 0xa69b, 0xded7, 0x0, 0x1);
        gbc.writeMem(0xa7e1, { 0xcb, 0x36 });
        gbc.writeMem(0xded7, { 0x4e });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xfcda, gbc.sp());
        EXPECT(0xa7e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa7e1));
        EXPECT(0x36, gbc.readMem(0xa7e2));
        EXPECT(0xe4, gbc.readMem(0xded7));
        // CB 36 03AC
        gbc.setState(0x9ba1, 0x76e, 0xe780, 0xa7d1, 0xbf8, 0xe6f3, 0x0, 0x0);
        gbc.writeMem(0x9ba1, { 0xcb, 0x36 });
        gbc.writeMem(0xe6f3, { 0xf7 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x76e, gbc.sp());
        EXPECT(0x9ba3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ba1));
        EXPECT(0x36, gbc.readMem(0x9ba2));
        EXPECT(0x7f, gbc.readMem(0xe6f3));
        // CB 36 03AD
        gbc.setState(0x757d, 0x61c7, 0x5810, 0x57a2, 0xe68c, 0xe4c1, 0x1, 0x1);
        gbc.writeMem(0x757d, { 0xcb, 0x36 });
        gbc.writeMem(0xe4c1, { 0x2b });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x61c7, gbc.sp());
        EXPECT(0x757f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xe4c1));
        // CB 36 03B8
        gbc.setState(0x798b, 0xc8d0, 0x45e0, 0x4802, 0x7aa0, 0xa5d5, 0x1, 0x1);
        gbc.writeMem(0x798b, { 0xcb, 0x36 });
        gbc.writeMem(0xa5d5, { 0xbd });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xc8d0, gbc.sp());
        EXPECT(0x798d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xdb, gbc.readMem(0xa5d5));
        // CB 36 03B9
        gbc.setState(0x6e12, 0xb01d, 0x23c0, 0x9a25, 0xbd56, 0xaf4a, 0x0, 0x0);
        gbc.writeMem(0x6e12, { 0xcb, 0x36 });
        gbc.writeMem(0xaf4a, { 0xf0 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xb01d, gbc.sp());
        EXPECT(0x6e14, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf, gbc.readMem(0xaf4a));
        // CB 36 03BB
        gbc.setState(0x98e5, 0xc4e9, 0x1a40, 0x7dbd, 0x207d, 0xfcb3, 0x0, 0x1);
        gbc.writeMem(0x98e5, { 0xcb, 0x36 });
        gbc.writeMem(0xfcb3, { 0x84 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xc4e9, gbc.sp());
        EXPECT(0x98e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x98e5));
        EXPECT(0x36, gbc.readMem(0x98e6));
        EXPECT(0x48, gbc.readMem(0xfcb3));
        // CB 36 03BC
        gbc.setState(0xde9d, 0x49b5, 0xe880, 0x45a2, 0x9e60, 0x83dc, 0x1, 0x0);
        gbc.writeMem(0x83dc, { 0x98 });
        gbc.writeMem(0xde9d, { 0xcb, 0x36 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x49b5, gbc.sp());
        EXPECT(0xde9f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0x83dc));
        EXPECT(0xcb, gbc.readMem(0xde9d));
        EXPECT(0x36, gbc.readMem(0xde9e));
        // CB 36 03BE
        gbc.setState(0xe615, 0x1a67, 0x4bd0, 0xa17e, 0x9483, 0xf6fa, 0x0, 0x0);
        gbc.writeMem(0xe615, { 0xcb, 0x36 });
        gbc.writeMem(0xf6fa, { 0xb5 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x1a67, gbc.sp());
        EXPECT(0xe617, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe615));
        EXPECT(0x36, gbc.readMem(0xe616));
        EXPECT(0x5b, gbc.readMem(0xf6fa));
        // CB 36 03C3
        gbc.setState(0x237a, 0xb883, 0xfa80, 0xdadf, 0x139, 0xfd5a, 0x0, 0x0);
        gbc.writeMem(0x237a, { 0xcb, 0x36 });
        gbc.writeMem(0xfd5a, { 0x64 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xb883, gbc.sp());
        EXPECT(0x237c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x46, gbc.readMem(0xfd5a));
        // CB 36 03C4
        gbc.setState(0x65c7, 0x4ba6, 0x43a0, 0x355c, 0x1188, 0xed02, 0x0, 0x0);
        gbc.writeMem(0x65c7, { 0xcb, 0x36 });
        gbc.writeMem(0xed02, { 0x77 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x4ba6, gbc.sp());
        EXPECT(0x65c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x77, gbc.readMem(0xed02));
        // CB 36 03C5
        gbc.setState(0xecaf, 0x2b0, 0x6460, 0x6640, 0x894d, 0xacab, 0x1, 0x1);
        gbc.writeMem(0xacab, { 0xa7 });
        gbc.writeMem(0xecaf, { 0xcb, 0x36 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x2b0, gbc.sp());
        EXPECT(0xecb1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xacab));
        EXPECT(0xcb, gbc.readMem(0xecaf));
        EXPECT(0x36, gbc.readMem(0xecb0));
        // CB 36 03C6
        gbc.setState(0x9817, 0xc15f, 0x8570, 0xcdf8, 0xd7dc, 0xd52d, 0x0, 0x1);
        gbc.writeMem(0x9817, { 0xcb, 0x36 });
        gbc.writeMem(0xd52d, { 0xe6 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xc15f, gbc.sp());
        EXPECT(0x9819, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9817));
        EXPECT(0x36, gbc.readMem(0x9818));
        EXPECT(0x6e, gbc.readMem(0xd52d));
        // CB 36 03C7
        gbc.setState(0xae6b, 0x10b, 0x480, 0xd5a4, 0x636, 0xf3e6, 0x1, 0x1);
        gbc.writeMem(0xae6b, { 0xcb, 0x36 });
        gbc.writeMem(0xf3e6, { 0xc3 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x10b, gbc.sp());
        EXPECT(0xae6d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae6b));
        EXPECT(0x36, gbc.readMem(0xae6c));
        EXPECT(0x3c, gbc.readMem(0xf3e6));
        // CB 36 03C8
        gbc.setState(0x72a1, 0x8f45, 0x700, 0x23a2, 0xa996, 0x9054, 0x1, 0x0);
        gbc.writeMem(0x72a1, { 0xcb, 0x36 });
        gbc.writeMem(0x9054, { 0x7e });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x8f45, gbc.sp());
        EXPECT(0x72a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe7, gbc.readMem(0x9054));
        // CB 36 03C9
        gbc.setState(0x2d38, 0x7f20, 0x7ab0, 0xaa97, 0x9afc, 0xdf0f, 0x0, 0x0);
        gbc.writeMem(0x2d38, { 0xcb, 0x36 });
        gbc.writeMem(0xdf0f, { 0xf2 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x7f20, gbc.sp());
        EXPECT(0x2d3a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xdf0f));
        // CB 36 03CB
        gbc.setState(0xcfa3, 0xff64, 0x2440, 0xed1e, 0xeb30, 0x82b0, 0x1, 0x0);
        gbc.writeMem(0x82b0, { 0x11 });
        gbc.writeMem(0xcfa3, { 0xcb, 0x36 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xff64, gbc.sp());
        EXPECT(0xcfa5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0x82b0));
        EXPECT(0xcb, gbc.readMem(0xcfa3));
        EXPECT(0x36, gbc.readMem(0xcfa4));
        // CB 36 03CC
        gbc.setState(0xb490, 0x50a5, 0x3300, 0x1585, 0x2f94, 0x91d6, 0x1, 0x0);
        gbc.writeMem(0x91d6, { 0x65 });
        gbc.writeMem(0xb490, { 0xcb, 0x36 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x50a5, gbc.sp());
        EXPECT(0xb492, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0x91d6));
        EXPECT(0xcb, gbc.readMem(0xb490));
        EXPECT(0x36, gbc.readMem(0xb491));
        // CB 36 03CD
        gbc.setState(0x2d6e, 0x4469, 0xfdf0, 0xd684, 0x11df, 0xb763, 0x0, 0x1);
        gbc.writeMem(0x2d6e, { 0xcb, 0x36 });
        gbc.writeMem(0xb763, { 0xf1 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x4469, gbc.sp());
        EXPECT(0x2d70, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1f, gbc.readMem(0xb763));
        // CB 36 03D0
        gbc.setState(0x92fc, 0xe0ab, 0xe460, 0x3cf6, 0xb084, 0xadf0, 0x1, 0x1);
        gbc.writeMem(0x92fc, { 0xcb, 0x36 });
        gbc.writeMem(0xadf0, { 0xb });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xe0ab, gbc.sp());
        EXPECT(0x92fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x92fc));
        EXPECT(0x36, gbc.readMem(0x92fd));
        EXPECT(0xb0, gbc.readMem(0xadf0));
        // CB 36 03D2
        gbc.setState(0x482a, 0x209b, 0xd2b0, 0x9569, 0x2ab2, 0xde96, 0x0, 0x1);
        gbc.writeMem(0x482a, { 0xcb, 0x36 });
        gbc.writeMem(0xde96, { 0xb6 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x209b, gbc.sp());
        EXPECT(0x482c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6b, gbc.readMem(0xde96));
        // CB 36 03D4
        gbc.setState(0x7496, 0xd3b0, 0xb3b0, 0xb52a, 0xaea0, 0xb682, 0x1, 0x0);
        gbc.writeMem(0x7496, { 0xcb, 0x36 });
        gbc.writeMem(0xb682, { 0x31 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xd3b0, gbc.sp());
        EXPECT(0x7498, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xb682));
        // CB 36 03D5
        gbc.setState(0x459a, 0xe624, 0xb00, 0x963c, 0xe620, 0xb70a, 0x1, 0x1);
        gbc.writeMem(0x459a, { 0xcb, 0x36 });
        gbc.writeMem(0xb70a, { 0x9a });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xe624, gbc.sp());
        EXPECT(0x459c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa9, gbc.readMem(0xb70a));
        // CB 36 03D7
        gbc.setState(0x5631, 0xd48b, 0xe240, 0x89a6, 0xa78e, 0xb4af, 0x0, 0x0);
        gbc.writeMem(0x5631, { 0xcb, 0x36 });
        gbc.writeMem(0xb4af, { 0x19 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xd48b, gbc.sp());
        EXPECT(0x5633, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xb4af));
        // CB 36 03DC
        gbc.setState(0x3b37, 0xc587, 0x22e0, 0xbd52, 0x70cc, 0xa4f3, 0x0, 0x0);
        gbc.writeMem(0x3b37, { 0xcb, 0x36 });
        gbc.writeMem(0xa4f3, { 0xdc });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xc587, gbc.sp());
        EXPECT(0x3b39, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcd, gbc.readMem(0xa4f3));
        // CB 36 03DF
        gbc.setState(0x422f, 0xe710, 0x19a0, 0x964e, 0x743c, 0x9c6a, 0x1, 0x1);
        gbc.writeMem(0x422f, { 0xcb, 0x36 });
        gbc.writeMem(0x9c6a, { 0xa2 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xe710, gbc.sp());
        EXPECT(0x4231, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2a, gbc.readMem(0x9c6a));
        // CB 36 03E0
        gbc.setState(0x6f36, 0x3d3e, 0x7bc0, 0x938e, 0x8871, 0xbef3, 0x1, 0x0);
        gbc.writeMem(0x6f36, { 0xcb, 0x36 });
        gbc.writeMem(0xbef3, { 0xb5 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x3d3e, gbc.sp());
        EXPECT(0x6f38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xbef3));
        // CB 36 03E4
        gbc.setState(0xd720, 0xdfdd, 0x5650, 0x9be2, 0xd974, 0xd5a2, 0x0, 0x0);
        gbc.writeMem(0xd5a2, { 0x6d });
        gbc.writeMem(0xd720, { 0xcb, 0x36 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xdfdd, gbc.sp());
        EXPECT(0xd722, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xd5a2));
        EXPECT(0xcb, gbc.readMem(0xd720));
        EXPECT(0x36, gbc.readMem(0xd721));
        // CB 36 03E5
        gbc.setState(0x8d86, 0xf6e, 0x1d10, 0x8bad, 0xd743, 0x84d6, 0x1, 0x0);
        gbc.writeMem(0x84d6, { 0xfd });
        gbc.writeMem(0x8d86, { 0xcb, 0x36 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xf6e, gbc.sp());
        EXPECT(0x8d88, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xdf, gbc.readMem(0x84d6));
        EXPECT(0xcb, gbc.readMem(0x8d86));
        EXPECT(0x36, gbc.readMem(0x8d87));
    }
