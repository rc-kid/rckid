    TEST(gbcemu, opcode_cb_06) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB 06 0000
        gbc.setState(0xd792, 0x230f, 0x2060, 0xc5d6, 0x626a, 0x8c9b, 0x0, 0x1);
        gbc.writeMem(0x8c9b, { 0x3d });
        gbc.writeMem(0xd792, { 0xcb, 0x6 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x230f, gbc.sp());
        EXPECT(0xd794, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0x8c9b));
        EXPECT(0xcb, gbc.readMem(0xd792));
        EXPECT(0x6, gbc.readMem(0xd793));
        // CB 06 0003
        gbc.setState(0x8d71, 0x3eba, 0x5a70, 0x6c5a, 0x2bf4, 0x9f49, 0x0, 0x0);
        gbc.writeMem(0x8d71, { 0xcb, 0x6 });
        gbc.writeMem(0x9f49, { 0x38 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x3eba, gbc.sp());
        EXPECT(0x8d73, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d71));
        EXPECT(0x6, gbc.readMem(0x8d72));
        EXPECT(0x70, gbc.readMem(0x9f49));
        // CB 06 0007
        gbc.setState(0x3b16, 0x30c, 0xac70, 0x2f76, 0xdddf, 0xa741, 0x0, 0x0);
        gbc.writeMem(0x3b16, { 0xcb, 0x6 });
        gbc.writeMem(0xa741, { 0xcb });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x30c, gbc.sp());
        EXPECT(0x3b18, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xa741));
        // CB 06 0009
        gbc.setState(0x9909, 0x45d3, 0x4510, 0x8404, 0x8a10, 0xb72b, 0x1, 0x1);
        gbc.writeMem(0x9909, { 0xcb, 0x6 });
        gbc.writeMem(0xb72b, { 0x8f });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x45d3, gbc.sp());
        EXPECT(0x990b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9909));
        EXPECT(0x6, gbc.readMem(0x990a));
        EXPECT(0x1f, gbc.readMem(0xb72b));
        // CB 06 000A
        gbc.setState(0x882a, 0x818d, 0xcdb0, 0x685c, 0x904a, 0xcfb1, 0x0, 0x0);
        gbc.writeMem(0x882a, { 0xcb, 0x6 });
        gbc.writeMem(0xcfb1, { 0x30 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x818d, gbc.sp());
        EXPECT(0x882c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x882a));
        EXPECT(0x6, gbc.readMem(0x882b));
        EXPECT(0x60, gbc.readMem(0xcfb1));
        // CB 06 000C
        gbc.setState(0xeeb6, 0x401f, 0xa990, 0xe6df, 0xd8b9, 0xbeca, 0x0, 0x0);
        gbc.writeMem(0xbeca, { 0x96 });
        gbc.writeMem(0xeeb6, { 0xcb, 0x6 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x401f, gbc.sp());
        EXPECT(0xeeb8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xbeca));
        EXPECT(0xcb, gbc.readMem(0xeeb6));
        EXPECT(0x6, gbc.readMem(0xeeb7));
        // CB 06 000F
        gbc.setState(0xa87c, 0xc99b, 0x960, 0x7e17, 0x1fbb, 0x95c3, 0x1, 0x0);
        gbc.writeMem(0x95c3, { 0x1e });
        gbc.writeMem(0xa87c, { 0xcb, 0x6 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xc99b, gbc.sp());
        EXPECT(0xa87e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0x95c3));
        EXPECT(0xcb, gbc.readMem(0xa87c));
        EXPECT(0x6, gbc.readMem(0xa87d));
        // CB 06 0011
        gbc.setState(0x8ac9, 0xcd4d, 0x70d0, 0xbf6c, 0xcf4e, 0x9af7, 0x1, 0x1);
        gbc.writeMem(0x8ac9, { 0xcb, 0x6 });
        gbc.writeMem(0x9af7, { 0x27 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xcd4d, gbc.sp());
        EXPECT(0x8acb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ac9));
        EXPECT(0x6, gbc.readMem(0x8aca));
        EXPECT(0x4e, gbc.readMem(0x9af7));
        // CB 06 0012
        gbc.setState(0x405d, 0xb51a, 0x2fd0, 0x9a2e, 0x59f9, 0xb135, 0x1, 0x0);
        gbc.writeMem(0x405d, { 0xcb, 0x6 });
        gbc.writeMem(0xb135, { 0x57 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xb51a, gbc.sp());
        EXPECT(0x405f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xae, gbc.readMem(0xb135));
        // CB 06 0013
        gbc.setState(0x4222, 0xd99b, 0xf550, 0xa51e, 0x7342, 0xb8b5, 0x1, 0x0);
        gbc.writeMem(0x4222, { 0xcb, 0x6 });
        gbc.writeMem(0xb8b5, { 0x51 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xd99b, gbc.sp());
        EXPECT(0x4224, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xb8b5));
        // CB 06 0017
        gbc.setState(0x98a2, 0x23ed, 0xe050, 0x4b8a, 0x30cd, 0x8f31, 0x1, 0x1);
        gbc.writeMem(0x8f31, { 0xcf });
        gbc.writeMem(0x98a2, { 0xcb, 0x6 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x23ed, gbc.sp());
        EXPECT(0x98a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0x8f31));
        EXPECT(0xcb, gbc.readMem(0x98a2));
        EXPECT(0x6, gbc.readMem(0x98a3));
        // CB 06 001A
        gbc.setState(0x2342, 0x3295, 0x6f40, 0x3283, 0x5d7b, 0xbc53, 0x1, 0x1);
        gbc.writeMem(0x2342, { 0xcb, 0x6 });
        gbc.writeMem(0xbc53, { 0x33 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x3295, gbc.sp());
        EXPECT(0x2344, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xbc53));
        // CB 06 001B
        gbc.setState(0x2cab, 0x66e5, 0xdf90, 0xfca0, 0xd8b0, 0xc484, 0x1, 0x1);
        gbc.writeMem(0x2cab, { 0xcb, 0x6 });
        gbc.writeMem(0xc484, { 0x8d });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x66e5, gbc.sp());
        EXPECT(0x2cad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1b, gbc.readMem(0xc484));
        // CB 06 001E
        gbc.setState(0x3c09, 0x5019, 0x2e80, 0x1111, 0x36b3, 0x8c36, 0x1, 0x0);
        gbc.writeMem(0x3c09, { 0xcb, 0x6 });
        gbc.writeMem(0x8c36, { 0xe4 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x5019, gbc.sp());
        EXPECT(0x3c0b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0x8c36));
        // CB 06 001F
        gbc.setState(0x7dd, 0x7e80, 0x1300, 0x6a74, 0xeb50, 0xebe7, 0x0, 0x0);
        gbc.writeMem(0x7dd, { 0xcb, 0x6 });
        gbc.writeMem(0xebe7, { 0x81 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x7e80, gbc.sp());
        EXPECT(0x7df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xebe7));
        // CB 06 0020
        gbc.setState(0x344f, 0x50a0, 0x4c0, 0x8aeb, 0x6102, 0x81a3, 0x1, 0x0);
        gbc.writeMem(0x344f, { 0xcb, 0x6 });
        gbc.writeMem(0x81a3, { 0x27 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x50a0, gbc.sp());
        EXPECT(0x3451, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0x81a3));
        // CB 06 0022
        gbc.setState(0xbdb6, 0xbd04, 0xdec0, 0x999b, 0xbd09, 0xab7d, 0x0, 0x1);
        gbc.writeMem(0xab7d, { 0x7f });
        gbc.writeMem(0xbdb6, { 0xcb, 0x6 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xbd04, gbc.sp());
        EXPECT(0xbdb8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xab7d));
        EXPECT(0xcb, gbc.readMem(0xbdb6));
        EXPECT(0x6, gbc.readMem(0xbdb7));
        // CB 06 0029
        gbc.setState(0x14fe, 0xc446, 0x5e00, 0x1dfc, 0xa148, 0xf012, 0x0, 0x1);
        gbc.writeMem(0x14fe, { 0xcb, 0x6 });
        gbc.writeMem(0xf012, { 0xf7 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xc446, gbc.sp());
        EXPECT(0x1500, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xef, gbc.readMem(0xf012));
        // CB 06 0030
        gbc.setState(0xc00b, 0xed8, 0x22a0, 0xfc58, 0x8e72, 0xec4e, 0x1, 0x1);
        gbc.writeMem(0xc00b, { 0xcb, 0x6 });
        gbc.writeMem(0xec4e, { 0xdf });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xed8, gbc.sp());
        EXPECT(0xc00d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc00b));
        EXPECT(0x6, gbc.readMem(0xc00c));
        EXPECT(0xbf, gbc.readMem(0xec4e));
        // CB 06 0033
        gbc.setState(0x1fa8, 0x4d53, 0xd230, 0xe5dd, 0xbad4, 0xa7cc, 0x1, 0x1);
        gbc.writeMem(0x1fa8, { 0xcb, 0x6 });
        gbc.writeMem(0xa7cc, { 0xc6 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x4d53, gbc.sp());
        EXPECT(0x1faa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xa7cc));
        // CB 06 0035
        gbc.setState(0xb986, 0xc11f, 0x9950, 0x9bbd, 0xfa74, 0xd57d, 0x1, 0x1);
        gbc.writeMem(0xb986, { 0xcb, 0x6 });
        gbc.writeMem(0xd57d, { 0xab });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xc11f, gbc.sp());
        EXPECT(0xb988, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb986));
        EXPECT(0x6, gbc.readMem(0xb987));
        EXPECT(0x57, gbc.readMem(0xd57d));
        // CB 06 0036
        gbc.setState(0xa7c3, 0x5e88, 0xca30, 0x55ef, 0xe98e, 0x913b, 0x1, 0x0);
        gbc.writeMem(0x913b, { 0xee });
        gbc.writeMem(0xa7c3, { 0xcb, 0x6 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x5e88, gbc.sp());
        EXPECT(0xa7c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xdd, gbc.readMem(0x913b));
        EXPECT(0xcb, gbc.readMem(0xa7c3));
        EXPECT(0x6, gbc.readMem(0xa7c4));
        // CB 06 0037
        gbc.setState(0x3b0f, 0x2089, 0x7120, 0xe24, 0xe56, 0xe048, 0x0, 0x0);
        gbc.writeMem(0x3b0f, { 0xcb, 0x6 });
        gbc.writeMem(0xe048, { 0x16 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x2089, gbc.sp());
        EXPECT(0x3b11, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xe048));
        // CB 06 003E
        gbc.setState(0x8a3c, 0x9cd9, 0xf7d0, 0x41c9, 0xc58c, 0xc914, 0x0, 0x0);
        gbc.writeMem(0x8a3c, { 0xcb, 0x6 });
        gbc.writeMem(0xc914, { 0x7e });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x9cd9, gbc.sp());
        EXPECT(0x8a3e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a3c));
        EXPECT(0x6, gbc.readMem(0x8a3d));
        EXPECT(0xfc, gbc.readMem(0xc914));
        // CB 06 003F
        gbc.setState(0x987e, 0x579e, 0x1f10, 0x7049, 0x43d, 0x8b0f, 0x1, 0x1);
        gbc.writeMem(0x8b0f, { 0xd2 });
        gbc.writeMem(0x987e, { 0xcb, 0x6 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x579e, gbc.sp());
        EXPECT(0x9880, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa5, gbc.readMem(0x8b0f));
        EXPECT(0xcb, gbc.readMem(0x987e));
        EXPECT(0x6, gbc.readMem(0x987f));
        // CB 06 0042
        gbc.setState(0x13f6, 0xa95a, 0xdfc0, 0x2ce9, 0xff85, 0xd9ae, 0x1, 0x1);
        gbc.writeMem(0x13f6, { 0xcb, 0x6 });
        gbc.writeMem(0xd9ae, { 0xfd });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xa95a, gbc.sp());
        EXPECT(0x13f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfb, gbc.readMem(0xd9ae));
        // CB 06 0044
        gbc.setState(0x105d, 0x341b, 0x8f30, 0x89ed, 0xfee5, 0xc476, 0x1, 0x0);
        gbc.writeMem(0x105d, { 0xcb, 0x6 });
        gbc.writeMem(0xc476, { 0xc0 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x341b, gbc.sp());
        EXPECT(0x105f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xc476));
        // CB 06 0045
        gbc.setState(0x5dfc, 0x8704, 0x76d0, 0xdb62, 0xe8eb, 0xf8ff, 0x0, 0x0);
        gbc.writeMem(0x5dfc, { 0xcb, 0x6 });
        gbc.writeMem(0xf8ff, { 0x3a });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x8704, gbc.sp());
        EXPECT(0x5dfe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x74, gbc.readMem(0xf8ff));
        // CB 06 0047
        gbc.setState(0xa58b, 0xed04, 0x3340, 0x4114, 0xf5e0, 0xd49d, 0x0, 0x1);
        gbc.writeMem(0xa58b, { 0xcb, 0x6 });
        gbc.writeMem(0xd49d, { 0xee });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xed04, gbc.sp());
        EXPECT(0xa58d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa58b));
        EXPECT(0x6, gbc.readMem(0xa58c));
        EXPECT(0xdd, gbc.readMem(0xd49d));
        // CB 06 004A
        gbc.setState(0x71f3, 0xdb60, 0xd870, 0x23d, 0xc8e, 0xec40, 0x1, 0x0);
        gbc.writeMem(0x71f3, { 0xcb, 0x6 });
        gbc.writeMem(0xec40, { 0x23 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xdb60, gbc.sp());
        EXPECT(0x71f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x46, gbc.readMem(0xec40));
        // CB 06 004F
        gbc.setState(0xc253, 0x1e00, 0x9660, 0x684a, 0xcf83, 0xe827, 0x0, 0x1);
        gbc.writeMem(0xc253, { 0xcb, 0x6 });
        gbc.writeMem(0xe827, { 0x44 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x1e00, gbc.sp());
        EXPECT(0xc255, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc253));
        EXPECT(0x6, gbc.readMem(0xc254));
        EXPECT(0x88, gbc.readMem(0xe827));
        // CB 06 0054
        gbc.setState(0xb5f, 0x5c6d, 0xc800, 0x71eb, 0x72e2, 0xc921, 0x1, 0x1);
        gbc.writeMem(0xb5f, { 0xcb, 0x6 });
        gbc.writeMem(0xc921, { 0x52 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x5c6d, gbc.sp());
        EXPECT(0xb61, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xc921));
        // CB 06 0056
        gbc.setState(0x30b1, 0xd03e, 0xfc10, 0x9252, 0x1f14, 0xe649, 0x0, 0x0);
        gbc.writeMem(0x30b1, { 0xcb, 0x6 });
        gbc.writeMem(0xe649, { 0x98 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xd03e, gbc.sp());
        EXPECT(0x30b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xe649));
        // CB 06 005C
        gbc.setState(0x7236, 0x49d, 0xeed0, 0xe42d, 0x2fe2, 0xfd54, 0x0, 0x1);
        gbc.writeMem(0x7236, { 0xcb, 0x6 });
        gbc.writeMem(0xfd54, { 0xd4 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x49d, gbc.sp());
        EXPECT(0x7238, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa9, gbc.readMem(0xfd54));
        // CB 06 005F
        gbc.setState(0x4d46, 0x709e, 0x6fa0, 0xa130, 0x9d1b, 0x9604, 0x0, 0x0);
        gbc.writeMem(0x4d46, { 0xcb, 0x6 });
        gbc.writeMem(0x9604, { 0x49 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x709e, gbc.sp());
        EXPECT(0x4d48, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0x9604));
        // CB 06 0060
        gbc.setState(0xbcb1, 0x7797, 0x78b0, 0x6f39, 0x1f09, 0xb261, 0x1, 0x0);
        gbc.writeMem(0xb261, { 0xb6 });
        gbc.writeMem(0xbcb1, { 0xcb, 0x6 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x7797, gbc.sp());
        EXPECT(0xbcb3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xb261));
        EXPECT(0xcb, gbc.readMem(0xbcb1));
        EXPECT(0x6, gbc.readMem(0xbcb2));
        // CB 06 0061
        gbc.setState(0x5810, 0xdc04, 0x8b80, 0x59b7, 0x23c6, 0xfebc, 0x1, 0x1);
        gbc.writeMem(0x5810, { 0xcb, 0x6 });
        gbc.writeMem(0xfebc, { 0x6d });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xdc04, gbc.sp());
        EXPECT(0x5812, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xfebc));
        // CB 06 0062
        gbc.setState(0xa4c9, 0xcc35, 0x4940, 0x841c, 0xfb49, 0xa121, 0x0, 0x1);
        gbc.writeMem(0xa121, { 0xde });
        gbc.writeMem(0xa4c9, { 0xcb, 0x6 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xcc35, gbc.sp());
        EXPECT(0xa4cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xa121));
        EXPECT(0xcb, gbc.readMem(0xa4c9));
        EXPECT(0x6, gbc.readMem(0xa4ca));
        // CB 06 0063
        gbc.setState(0x5ea9, 0xebd6, 0x12a0, 0x3629, 0x2bb0, 0xe145, 0x0, 0x1);
        gbc.writeMem(0x5ea9, { 0xcb, 0x6 });
        gbc.writeMem(0xe145, { 0xda });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xebd6, gbc.sp());
        EXPECT(0x5eab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xe145));
        // CB 06 0064
        gbc.setState(0x484a, 0xf79f, 0x780, 0x1cd1, 0xa913, 0xc0b2, 0x1, 0x0);
        gbc.writeMem(0x484a, { 0xcb, 0x6 });
        gbc.writeMem(0xc0b2, { 0xc1 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xf79f, gbc.sp());
        EXPECT(0x484c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x83, gbc.readMem(0xc0b2));
        // CB 06 0067
        gbc.setState(0x27d8, 0x5c43, 0x31d0, 0x1915, 0x2456, 0xdde1, 0x1, 0x1);
        gbc.writeMem(0x27d8, { 0xcb, 0x6 });
        gbc.writeMem(0xdde1, { 0x48 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x5c43, gbc.sp());
        EXPECT(0x27da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x90, gbc.readMem(0xdde1));
        // CB 06 0068
        gbc.setState(0x7e31, 0x693e, 0x79b0, 0xb11e, 0x5610, 0xbfdf, 0x1, 0x1);
        gbc.writeMem(0x7e31, { 0xcb, 0x6 });
        gbc.writeMem(0xbfdf, { 0x52 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x693e, gbc.sp());
        EXPECT(0x7e33, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xbfdf));
        // CB 06 006A
        gbc.setState(0x706a, 0x23fb, 0x6f60, 0x9168, 0x52f0, 0xa8fb, 0x1, 0x1);
        gbc.writeMem(0x706a, { 0xcb, 0x6 });
        gbc.writeMem(0xa8fb, { 0x76 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x23fb, gbc.sp());
        EXPECT(0x706c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xec, gbc.readMem(0xa8fb));
        // CB 06 006C
        gbc.setState(0x5aa5, 0x9a30, 0xaf50, 0x3dc1, 0x825f, 0xedd5, 0x1, 0x0);
        gbc.writeMem(0x5aa5, { 0xcb, 0x6 });
        gbc.writeMem(0xedd5, { 0xe8 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x9a30, gbc.sp());
        EXPECT(0x5aa7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd1, gbc.readMem(0xedd5));
        // CB 06 006D
        gbc.setState(0x5b18, 0xc0c7, 0xfa70, 0x95c2, 0xf3d9, 0x82fa, 0x0, 0x0);
        gbc.writeMem(0x5b18, { 0xcb, 0x6 });
        gbc.writeMem(0x82fa, { 0x3 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xc0c7, gbc.sp());
        EXPECT(0x5b1a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0x82fa));
        // CB 06 006E
        gbc.setState(0x1fe1, 0x952a, 0x47c0, 0xcb4f, 0x8145, 0xc9e3, 0x1, 0x0);
        gbc.writeMem(0x1fe1, { 0xcb, 0x6 });
        gbc.writeMem(0xc9e3, { 0x54 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x952a, gbc.sp());
        EXPECT(0x1fe3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa8, gbc.readMem(0xc9e3));
        // CB 06 006F
        gbc.setState(0x7ec1, 0x5ca7, 0x8c0, 0x4fce, 0xaead, 0xe206, 0x0, 0x1);
        gbc.writeMem(0x7ec1, { 0xcb, 0x6 });
        gbc.writeMem(0xe206, { 0xfc });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x5ca7, gbc.sp());
        EXPECT(0x7ec3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf9, gbc.readMem(0xe206));
        // CB 06 0070
        gbc.setState(0x9247, 0x5895, 0xf390, 0x3e78, 0x2418, 0x8552, 0x1, 0x1);
        gbc.writeMem(0x8552, { 0xb4 });
        gbc.writeMem(0x9247, { 0xcb, 0x6 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x5895, gbc.sp());
        EXPECT(0x9249, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0x8552));
        EXPECT(0xcb, gbc.readMem(0x9247));
        EXPECT(0x6, gbc.readMem(0x9248));
        // CB 06 0071
        gbc.setState(0x2ae9, 0xdbbf, 0xa250, 0x58e3, 0x42f6, 0xb76e, 0x0, 0x1);
        gbc.writeMem(0x2ae9, { 0xcb, 0x6 });
        gbc.writeMem(0xb76e, { 0xfa });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xdbbf, gbc.sp());
        EXPECT(0x2aeb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf5, gbc.readMem(0xb76e));
        // CB 06 0075
        gbc.setState(0xb288, 0x8916, 0xb780, 0xb2ac, 0x1a4b, 0x8600, 0x1, 0x0);
        gbc.writeMem(0x8600, { 0xb3 });
        gbc.writeMem(0xb288, { 0xcb, 0x6 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x8916, gbc.sp());
        EXPECT(0xb28a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x67, gbc.readMem(0x8600));
        EXPECT(0xcb, gbc.readMem(0xb288));
        EXPECT(0x6, gbc.readMem(0xb289));
        // CB 06 0077
        gbc.setState(0x77b6, 0xa9ee, 0xb510, 0x7f17, 0x8d59, 0xba3b, 0x1, 0x1);
        gbc.writeMem(0x77b6, { 0xcb, 0x6 });
        gbc.writeMem(0xba3b, { 0x79 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xa9ee, gbc.sp());
        EXPECT(0x77b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf2, gbc.readMem(0xba3b));
        // CB 06 0078
        gbc.setState(0x4ae0, 0x8842, 0x6c40, 0x548a, 0xec1f, 0x81d0, 0x0, 0x1);
        gbc.writeMem(0x4ae0, { 0xcb, 0x6 });
        gbc.writeMem(0x81d0, { 0x1e });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x8842, gbc.sp());
        EXPECT(0x4ae2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0x81d0));
        // CB 06 0079
        gbc.setState(0x9969, 0xe15f, 0xd750, 0xe6b6, 0xa480, 0xb078, 0x1, 0x1);
        gbc.writeMem(0x9969, { 0xcb, 0x6 });
        gbc.writeMem(0xb078, { 0x55 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xe15f, gbc.sp());
        EXPECT(0x996b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9969));
        EXPECT(0x6, gbc.readMem(0x996a));
        EXPECT(0xaa, gbc.readMem(0xb078));
        // CB 06 007A
        gbc.setState(0xd164, 0xdb91, 0x2dc0, 0x3b0, 0x479c, 0xfdf3, 0x0, 0x0);
        gbc.writeMem(0xd164, { 0xcb, 0x6 });
        gbc.writeMem(0xfdf3, { 0xa6 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xdb91, gbc.sp());
        EXPECT(0xd166, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd164));
        EXPECT(0x6, gbc.readMem(0xd165));
        EXPECT(0x4d, gbc.readMem(0xfdf3));
        // CB 06 007C
        gbc.setState(0x7497, 0x72bf, 0x9e80, 0xf88a, 0x5116, 0x9b01, 0x1, 0x1);
        gbc.writeMem(0x7497, { 0xcb, 0x6 });
        gbc.writeMem(0x9b01, { 0xbe });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x72bf, gbc.sp());
        EXPECT(0x7499, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0x9b01));
        // CB 06 007D
        gbc.setState(0xab8, 0x5e3c, 0xba0, 0x4dad, 0xe83a, 0xbe83, 0x1, 0x1);
        gbc.writeMem(0xab8, { 0xcb, 0x6 });
        gbc.writeMem(0xbe83, { 0xbe });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x5e3c, gbc.sp());
        EXPECT(0xaba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xbe83));
        // CB 06 0085
        gbc.setState(0x81a7, 0x95c1, 0x34c0, 0xa461, 0x640d, 0xe371, 0x1, 0x0);
        gbc.writeMem(0x81a7, { 0xcb, 0x6 });
        gbc.writeMem(0xe371, { 0x51 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x95c1, gbc.sp());
        EXPECT(0x81a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x81a7));
        EXPECT(0x6, gbc.readMem(0x81a8));
        EXPECT(0xa2, gbc.readMem(0xe371));
        // CB 06 0087
        gbc.setState(0x81ae, 0x3206, 0x2190, 0x1530, 0x5dcc, 0xcefb, 0x0, 0x1);
        gbc.writeMem(0x81ae, { 0xcb, 0x6 });
        gbc.writeMem(0xcefb, { 0x3a });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x3206, gbc.sp());
        EXPECT(0x81b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x81ae));
        EXPECT(0x6, gbc.readMem(0x81af));
        EXPECT(0x74, gbc.readMem(0xcefb));
        // CB 06 0089
        gbc.setState(0x2c7c, 0x5b05, 0xed50, 0x5543, 0x59c, 0xe1a4, 0x0, 0x1);
        gbc.writeMem(0x2c7c, { 0xcb, 0x6 });
        gbc.writeMem(0xe1a4, { 0xef });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x5b05, gbc.sp());
        EXPECT(0x2c7e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xdf, gbc.readMem(0xe1a4));
        // CB 06 008B
        gbc.setState(0xbd32, 0x9e7c, 0x6340, 0xf0e2, 0xb5ea, 0xe3c4, 0x0, 0x0);
        gbc.writeMem(0xbd32, { 0xcb, 0x6 });
        gbc.writeMem(0xe3c4, { 0x92 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x9e7c, gbc.sp());
        EXPECT(0xbd34, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd32));
        EXPECT(0x6, gbc.readMem(0xbd33));
        EXPECT(0x25, gbc.readMem(0xe3c4));
        // CB 06 008E
        gbc.setState(0xd78f, 0x8215, 0xc40, 0x7a35, 0x30e6, 0xb823, 0x1, 0x0);
        gbc.writeMem(0xb823, { 0x38 });
        gbc.writeMem(0xd78f, { 0xcb, 0x6 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x8215, gbc.sp());
        EXPECT(0xd791, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x70, gbc.readMem(0xb823));
        EXPECT(0xcb, gbc.readMem(0xd78f));
        EXPECT(0x6, gbc.readMem(0xd790));
        // CB 06 008F
        gbc.setState(0xb03e, 0x3516, 0xaf0, 0xff2a, 0xd559, 0x9dc5, 0x0, 0x1);
        gbc.writeMem(0x9dc5, { 0x0 });
        gbc.writeMem(0xb03e, { 0xcb, 0x6 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x3516, gbc.sp());
        EXPECT(0xb040, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0x9dc5));
        EXPECT(0xcb, gbc.readMem(0xb03e));
        EXPECT(0x6, gbc.readMem(0xb03f));
        // CB 06 0090
        gbc.setState(0xdb0a, 0xb8b6, 0xf7b0, 0x14d2, 0xf614, 0xc061, 0x1, 0x0);
        gbc.writeMem(0xc061, { 0x5a });
        gbc.writeMem(0xdb0a, { 0xcb, 0x6 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xb8b6, gbc.sp());
        EXPECT(0xdb0c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb4, gbc.readMem(0xc061));
        EXPECT(0xcb, gbc.readMem(0xdb0a));
        EXPECT(0x6, gbc.readMem(0xdb0b));
        // CB 06 0093
        gbc.setState(0x2870, 0xe589, 0x9510, 0xf70f, 0xd0e8, 0xafa4, 0x0, 0x1);
        gbc.writeMem(0x2870, { 0xcb, 0x6 });
        gbc.writeMem(0xafa4, { 0xba });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xe589, gbc.sp());
        EXPECT(0x2872, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x75, gbc.readMem(0xafa4));
        // CB 06 0095
        gbc.setState(0x4e9, 0x898c, 0xd680, 0x3de1, 0xf616, 0xf8b2, 0x1, 0x1);
        gbc.writeMem(0x4e9, { 0xcb, 0x6 });
        gbc.writeMem(0xf8b2, { 0xe5 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x898c, gbc.sp());
        EXPECT(0x4eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xf8b2));
        // CB 06 0097
        gbc.setState(0x3233, 0xdd11, 0x9c00, 0xcfd0, 0xc2a2, 0xab25, 0x1, 0x1);
        gbc.writeMem(0x3233, { 0xcb, 0x6 });
        gbc.writeMem(0xab25, { 0xc9 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xdd11, gbc.sp());
        EXPECT(0x3235, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xab25));
        // CB 06 009B
        gbc.setState(0x30a, 0x3a55, 0xb740, 0xa955, 0x4347, 0xc265, 0x0, 0x1);
        gbc.writeMem(0x30a, { 0xcb, 0x6 });
        gbc.writeMem(0xc265, { 0x9a });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x3a55, gbc.sp());
        EXPECT(0x30c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x35, gbc.readMem(0xc265));
        // CB 06 009C
        gbc.setState(0x1e33, 0xa243, 0x72a0, 0xabe9, 0x9564, 0xea5a, 0x0, 0x0);
        gbc.writeMem(0x1e33, { 0xcb, 0x6 });
        gbc.writeMem(0xea5a, { 0x2c });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xa243, gbc.sp());
        EXPECT(0x1e35, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xea5a));
        // CB 06 009F
        gbc.setState(0x31ac, 0x3085, 0xc390, 0x380c, 0xc164, 0x9783, 0x1, 0x0);
        gbc.writeMem(0x31ac, { 0xcb, 0x6 });
        gbc.writeMem(0x9783, { 0x92 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x3085, gbc.sp());
        EXPECT(0x31ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0x9783));
        // CB 06 00A3
        gbc.setState(0x5ff0, 0xc508, 0x47e0, 0x3f50, 0xa0d6, 0x8673, 0x1, 0x1);
        gbc.writeMem(0x5ff0, { 0xcb, 0x6 });
        gbc.writeMem(0x8673, { 0xa5 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xc508, gbc.sp());
        EXPECT(0x5ff2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0x8673));
        // CB 06 00A4
        gbc.setState(0xcaad, 0x452f, 0xca50, 0x46c2, 0x77cf, 0xf9f2, 0x1, 0x0);
        gbc.writeMem(0xcaad, { 0xcb, 0x6 });
        gbc.writeMem(0xf9f2, { 0xd1 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x452f, gbc.sp());
        EXPECT(0xcaaf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcaad));
        EXPECT(0x6, gbc.readMem(0xcaae));
        EXPECT(0xa3, gbc.readMem(0xf9f2));
        // CB 06 00A5
        gbc.setState(0x6143, 0xd495, 0x8470, 0xcf89, 0x3e88, 0xeef5, 0x1, 0x0);
        gbc.writeMem(0x6143, { 0xcb, 0x6 });
        gbc.writeMem(0xeef5, { 0xd9 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xd495, gbc.sp());
        EXPECT(0x6145, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xeef5));
        // CB 06 00A6
        gbc.setState(0xb89b, 0x439, 0x9cf0, 0x35e, 0x99a7, 0xc86d, 0x1, 0x0);
        gbc.writeMem(0xb89b, { 0xcb, 0x6 });
        gbc.writeMem(0xc86d, { 0x22 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x439, gbc.sp());
        EXPECT(0xb89d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb89b));
        EXPECT(0x6, gbc.readMem(0xb89c));
        EXPECT(0x44, gbc.readMem(0xc86d));
        // CB 06 00AB
        gbc.setState(0x6197, 0x9d74, 0x5ae0, 0x6da3, 0x4b56, 0xab37, 0x0, 0x1);
        gbc.writeMem(0x6197, { 0xcb, 0x6 });
        gbc.writeMem(0xab37, { 0x86 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x9d74, gbc.sp());
        EXPECT(0x6199, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd, gbc.readMem(0xab37));
        // CB 06 00AF
        gbc.setState(0x8270, 0x766a, 0xb810, 0xcb72, 0x65ee, 0x9538, 0x1, 0x1);
        gbc.writeMem(0x8270, { 0xcb, 0x6 });
        gbc.writeMem(0x9538, { 0xd1 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x766a, gbc.sp());
        EXPECT(0x8272, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8270));
        EXPECT(0x6, gbc.readMem(0x8271));
        EXPECT(0xa3, gbc.readMem(0x9538));
        // CB 06 00B3
        gbc.setState(0x42bc, 0x7d0c, 0x8890, 0x82db, 0x9933, 0xbfd9, 0x1, 0x0);
        gbc.writeMem(0x42bc, { 0xcb, 0x6 });
        gbc.writeMem(0xbfd9, { 0xc1 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x7d0c, gbc.sp());
        EXPECT(0x42be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x83, gbc.readMem(0xbfd9));
        // CB 06 00B6
        gbc.setState(0x97d4, 0x2fda, 0xf9c0, 0x692d, 0x564f, 0xb868, 0x0, 0x0);
        gbc.writeMem(0x97d4, { 0xcb, 0x6 });
        gbc.writeMem(0xb868, { 0x6e });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x2fda, gbc.sp());
        EXPECT(0x97d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x97d4));
        EXPECT(0x6, gbc.readMem(0x97d5));
        EXPECT(0xdc, gbc.readMem(0xb868));
        // CB 06 00B7
        gbc.setState(0x59c5, 0xc630, 0xf220, 0xde8f, 0x7b81, 0x87f7, 0x1, 0x1);
        gbc.writeMem(0x59c5, { 0xcb, 0x6 });
        gbc.writeMem(0x87f7, { 0xc5 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xc630, gbc.sp());
        EXPECT(0x59c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8b, gbc.readMem(0x87f7));
        // CB 06 00B8
        gbc.setState(0xbf85, 0x59d0, 0x3380, 0xe27, 0xad34, 0xbed5, 0x1, 0x0);
        gbc.writeMem(0xbed5, { 0x6e });
        gbc.writeMem(0xbf85, { 0xcb, 0x6 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x59d0, gbc.sp());
        EXPECT(0xbf87, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xdc, gbc.readMem(0xbed5));
        EXPECT(0xcb, gbc.readMem(0xbf85));
        EXPECT(0x6, gbc.readMem(0xbf86));
        // CB 06 00B9
        gbc.setState(0x234d, 0xdbc, 0x6760, 0xd234, 0xe074, 0x9933, 0x0, 0x1);
        gbc.writeMem(0x234d, { 0xcb, 0x6 });
        gbc.writeMem(0x9933, { 0xd3 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xdbc, gbc.sp());
        EXPECT(0x234f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0x9933));
        // CB 06 00BC
        gbc.setState(0xb870, 0x1894, 0xf100, 0x69ce, 0x23dc, 0x8b77, 0x1, 0x0);
        gbc.writeMem(0x8b77, { 0xd9 });
        gbc.writeMem(0xb870, { 0xcb, 0x6 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x1894, gbc.sp());
        EXPECT(0xb872, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0x8b77));
        EXPECT(0xcb, gbc.readMem(0xb870));
        EXPECT(0x6, gbc.readMem(0xb871));
        // CB 06 00BE
        gbc.setState(0xa068, 0xfca6, 0x63f0, 0xc9cb, 0x390a, 0x9d51, 0x0, 0x0);
        gbc.writeMem(0x9d51, { 0x1f });
        gbc.writeMem(0xa068, { 0xcb, 0x6 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xfca6, gbc.sp());
        EXPECT(0xa06a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0x9d51));
        EXPECT(0xcb, gbc.readMem(0xa068));
        EXPECT(0x6, gbc.readMem(0xa069));
        // CB 06 00C3
        gbc.setState(0x259d, 0xafd8, 0x40f0, 0x1247, 0xef7f, 0xf5b0, 0x1, 0x1);
        gbc.writeMem(0x259d, { 0xcb, 0x6 });
        gbc.writeMem(0xf5b0, { 0x27 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xafd8, gbc.sp());
        EXPECT(0x259f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xf5b0));
        // CB 06 00C4
        gbc.setState(0x28f6, 0x255e, 0x6660, 0xf737, 0xd63f, 0xca44, 0x0, 0x0);
        gbc.writeMem(0x28f6, { 0xcb, 0x6 });
        gbc.writeMem(0xca44, { 0xa5 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x255e, gbc.sp());
        EXPECT(0x28f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xca44));
        // CB 06 00CC
        gbc.setState(0x5fad, 0x34ad, 0x5fc0, 0x8b7a, 0x3a16, 0xadeb, 0x0, 0x1);
        gbc.writeMem(0x5fad, { 0xcb, 0x6 });
        gbc.writeMem(0xadeb, { 0x97 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x34ad, gbc.sp());
        EXPECT(0x5faf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xadeb));
        // CB 06 00CD
        gbc.setState(0x7cbf, 0x5590, 0xdac0, 0x898a, 0xc555, 0xe25a, 0x1, 0x1);
        gbc.writeMem(0x7cbf, { 0xcb, 0x6 });
        gbc.writeMem(0xe25a, { 0xcf });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x5590, gbc.sp());
        EXPECT(0x7cc1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xe25a));
        // CB 06 00CE
        gbc.setState(0x6c40, 0xc7f4, 0x94c0, 0x103a, 0xe70, 0xc67c, 0x1, 0x1);
        gbc.writeMem(0x6c40, { 0xcb, 0x6 });
        gbc.writeMem(0xc67c, { 0x65 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xc7f4, gbc.sp());
        EXPECT(0x6c42, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xca, gbc.readMem(0xc67c));
        // CB 06 00D4
        gbc.setState(0x51f2, 0xeb3e, 0x45b0, 0xd136, 0x68fb, 0xcec8, 0x0, 0x0);
        gbc.writeMem(0x51f2, { 0xcb, 0x6 });
        gbc.writeMem(0xcec8, { 0xfc });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xeb3e, gbc.sp());
        EXPECT(0x51f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf9, gbc.readMem(0xcec8));
        // CB 06 00D6
        gbc.setState(0x6843, 0xdcfa, 0xfb70, 0x276d, 0xe664, 0xeceb, 0x1, 0x0);
        gbc.writeMem(0x6843, { 0xcb, 0x6 });
        gbc.writeMem(0xeceb, { 0xa1 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xdcfa, gbc.sp());
        EXPECT(0x6845, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xeceb));
        // CB 06 00D7
        gbc.setState(0x3ce5, 0x8543, 0xb430, 0xce27, 0xf03e, 0xda76, 0x1, 0x1);
        gbc.writeMem(0x3ce5, { 0xcb, 0x6 });
        gbc.writeMem(0xda76, { 0x12 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x8543, gbc.sp());
        EXPECT(0x3ce7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x24, gbc.readMem(0xda76));
        // CB 06 00D8
        gbc.setState(0x5153, 0xbbdb, 0x1b70, 0x598d, 0x6410, 0xa5ba, 0x0, 0x1);
        gbc.writeMem(0x5153, { 0xcb, 0x6 });
        gbc.writeMem(0xa5ba, { 0x23 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xbbdb, gbc.sp());
        EXPECT(0x5155, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x46, gbc.readMem(0xa5ba));
        // CB 06 00D9
        gbc.setState(0x8de4, 0xc70, 0x5090, 0x1e56, 0xca23, 0xb12e, 0x0, 0x0);
        gbc.writeMem(0x8de4, { 0xcb, 0x6 });
        gbc.writeMem(0xb12e, { 0xcb });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xc70, gbc.sp());
        EXPECT(0x8de6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8de4));
        EXPECT(0x6, gbc.readMem(0x8de5));
        EXPECT(0x97, gbc.readMem(0xb12e));
        // CB 06 00DC
        gbc.setState(0x59aa, 0xb7d, 0x5a20, 0x1691, 0xadce, 0xb363, 0x1, 0x0);
        gbc.writeMem(0x59aa, { 0xcb, 0x6 });
        gbc.writeMem(0xb363, { 0xe2 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xb7d, gbc.sp());
        EXPECT(0x59ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc5, gbc.readMem(0xb363));
        // CB 06 00E1
        gbc.setState(0xa306, 0x9590, 0xddb0, 0x32e2, 0x271b, 0xd44b, 0x0, 0x1);
        gbc.writeMem(0xa306, { 0xcb, 0x6 });
        gbc.writeMem(0xd44b, { 0x23 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x9590, gbc.sp());
        EXPECT(0xa308, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa306));
        EXPECT(0x6, gbc.readMem(0xa307));
        EXPECT(0x46, gbc.readMem(0xd44b));
        // CB 06 00E4
        gbc.setState(0xb1e6, 0x38fb, 0x9400, 0x1b4e, 0xbe42, 0x8092, 0x1, 0x0);
        gbc.writeMem(0x8092, { 0x30 });
        gbc.writeMem(0xb1e6, { 0xcb, 0x6 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x38fb, gbc.sp());
        EXPECT(0xb1e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x60, gbc.readMem(0x8092));
        EXPECT(0xcb, gbc.readMem(0xb1e6));
        EXPECT(0x6, gbc.readMem(0xb1e7));
        // CB 06 00E8
        gbc.setState(0x5ce2, 0x3e1, 0x3030, 0x9887, 0xd479, 0x8ae3, 0x1, 0x1);
        gbc.writeMem(0x5ce2, { 0xcb, 0x6 });
        gbc.writeMem(0x8ae3, { 0x8b });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x3e1, gbc.sp());
        EXPECT(0x5ce4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x17, gbc.readMem(0x8ae3));
        // CB 06 00EE
        gbc.setState(0x2571, 0x3188, 0x7310, 0x1ac5, 0x57cc, 0xbbf5, 0x0, 0x1);
        gbc.writeMem(0x2571, { 0xcb, 0x6 });
        gbc.writeMem(0xbbf5, { 0x58 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x3188, gbc.sp());
        EXPECT(0x2573, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xbbf5));
        // CB 06 00F2
        gbc.setState(0x6e11, 0x1f34, 0xafa0, 0x9f34, 0xd4f0, 0x8163, 0x1, 0x0);
        gbc.writeMem(0x6e11, { 0xcb, 0x6 });
        gbc.writeMem(0x8163, { 0x42 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x1f34, gbc.sp());
        EXPECT(0x6e13, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x84, gbc.readMem(0x8163));
        // CB 06 00F3
        gbc.setState(0x58f0, 0x583, 0xf60, 0xf0a8, 0xc21b, 0xee6e, 0x1, 0x0);
        gbc.writeMem(0x58f0, { 0xcb, 0x6 });
        gbc.writeMem(0xee6e, { 0x7 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x583, gbc.sp());
        EXPECT(0x58f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xee6e));
        // CB 06 00F4
        gbc.setState(0x844, 0xe66a, 0xfc60, 0x6988, 0x7faf, 0xbfa3, 0x1, 0x0);
        gbc.writeMem(0x844, { 0xcb, 0x6 });
        gbc.writeMem(0xbfa3, { 0x90 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xe66a, gbc.sp());
        EXPECT(0x846, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xbfa3));
        // CB 06 00F5
        gbc.setState(0xc164, 0xcb13, 0x6370, 0x8fa0, 0xbc61, 0xc294, 0x0, 0x0);
        gbc.writeMem(0xc164, { 0xcb, 0x6 });
        gbc.writeMem(0xc294, { 0xf0 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xcb13, gbc.sp());
        EXPECT(0xc166, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc164));
        EXPECT(0x6, gbc.readMem(0xc165));
        EXPECT(0xe1, gbc.readMem(0xc294));
        // CB 06 00F8
        gbc.setState(0xa84e, 0xe32b, 0xa790, 0xd072, 0x3106, 0x896a, 0x1, 0x1);
        gbc.writeMem(0x896a, { 0x2e });
        gbc.writeMem(0xa84e, { 0xcb, 0x6 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xe32b, gbc.sp());
        EXPECT(0xa850, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5c, gbc.readMem(0x896a));
        EXPECT(0xcb, gbc.readMem(0xa84e));
        EXPECT(0x6, gbc.readMem(0xa84f));
        // CB 06 00FA
        gbc.setState(0x3a5a, 0xb0db, 0xa940, 0x1cf1, 0x6860, 0x988a, 0x0, 0x1);
        gbc.writeMem(0x3a5a, { 0xcb, 0x6 });
        gbc.writeMem(0x988a, { 0xe3 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xb0db, gbc.sp());
        EXPECT(0x3a5c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc7, gbc.readMem(0x988a));
        // CB 06 00FB
        gbc.setState(0x60b4, 0xad81, 0x4e20, 0xfca0, 0xb7ff, 0xdfad, 0x0, 0x0);
        gbc.writeMem(0x60b4, { 0xcb, 0x6 });
        gbc.writeMem(0xdfad, { 0x49 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xad81, gbc.sp());
        EXPECT(0x60b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xdfad));
        // CB 06 00FD
        gbc.setState(0x9309, 0x8b6b, 0xdf80, 0x616f, 0x3e8a, 0x9da4, 0x1, 0x1);
        gbc.writeMem(0x9309, { 0xcb, 0x6 });
        gbc.writeMem(0x9da4, { 0x3b });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x8b6b, gbc.sp());
        EXPECT(0x930b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9309));
        EXPECT(0x6, gbc.readMem(0x930a));
        EXPECT(0x76, gbc.readMem(0x9da4));
        // CB 06 00FE
        gbc.setState(0xde1b, 0x8661, 0xbf40, 0xec0b, 0x95bb, 0xdbb6, 0x1, 0x0);
        gbc.writeMem(0xdbb6, { 0x76 });
        gbc.writeMem(0xde1b, { 0xcb, 0x6 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x8661, gbc.sp());
        EXPECT(0xde1d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xec, gbc.readMem(0xdbb6));
        EXPECT(0xcb, gbc.readMem(0xde1b));
        EXPECT(0x6, gbc.readMem(0xde1c));
        // CB 06 00FF
        gbc.setState(0xe093, 0x6ed7, 0xb90, 0xafab, 0xd749, 0x966e, 0x1, 0x0);
        gbc.writeMem(0x966e, { 0x5b });
        gbc.writeMem(0xe093, { 0xcb, 0x6 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x6ed7, gbc.sp());
        EXPECT(0xe095, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0x966e));
        EXPECT(0xcb, gbc.readMem(0xe093));
        EXPECT(0x6, gbc.readMem(0xe094));
        // CB 06 0100
        gbc.setState(0xa07, 0x5295, 0xf710, 0x846b, 0x5524, 0x8f89, 0x0, 0x0);
        gbc.writeMem(0xa07, { 0xcb, 0x6 });
        gbc.writeMem(0x8f89, { 0x45 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x5295, gbc.sp());
        EXPECT(0xa09, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0x8f89));
        // CB 06 0101
        gbc.setState(0x107, 0xbd7c, 0x81c0, 0x1e46, 0x9222, 0x8d49, 0x0, 0x1);
        gbc.writeMem(0x107, { 0xcb, 0x6 });
        gbc.writeMem(0x8d49, { 0x45 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xbd7c, gbc.sp());
        EXPECT(0x109, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0x8d49));
        // CB 06 0104
        gbc.setState(0x71ed, 0x4864, 0x5160, 0xc0c6, 0xece0, 0xf801, 0x1, 0x0);
        gbc.writeMem(0x71ed, { 0xcb, 0x6 });
        gbc.writeMem(0xf801, { 0x3f });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x4864, gbc.sp());
        EXPECT(0x71ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xf801));
        // CB 06 0106
        gbc.setState(0xdc4f, 0x2d65, 0x2280, 0x9b31, 0x2dfb, 0x27fb, 0x0, 0x0);
        gbc.writeMem(0x27fb, { 0xff });
        gbc.writeMem(0xdc4f, { 0xcb, 0x6 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x2d65, gbc.sp());
        EXPECT(0xdc51, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc4f));
        EXPECT(0x6, gbc.readMem(0xdc50));
        // CB 06 0107
        gbc.setState(0x687, 0xdf22, 0x4050, 0xa5f6, 0xffdd, 0xacff, 0x1, 0x0);
        gbc.writeMem(0x687, { 0xcb, 0x6 });
        gbc.writeMem(0xacff, { 0x5e });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xdf22, gbc.sp());
        EXPECT(0x689, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xacff));
        // CB 06 0108
        gbc.setState(0x3520, 0x7d65, 0x7a70, 0xbcc1, 0x5a92, 0xd727, 0x0, 0x0);
        gbc.writeMem(0x3520, { 0xcb, 0x6 });
        gbc.writeMem(0xd727, { 0xca });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x7d65, gbc.sp());
        EXPECT(0x3522, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xd727));
        // CB 06 010A
        gbc.setState(0x761, 0x44b4, 0x7640, 0x446d, 0xd1b7, 0xa889, 0x0, 0x1);
        gbc.writeMem(0x761, { 0xcb, 0x6 });
        gbc.writeMem(0xa889, { 0x89 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x44b4, gbc.sp());
        EXPECT(0x763, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xa889));
        // CB 06 010C
        gbc.setState(0x99dd, 0x408c, 0x8f20, 0x871b, 0x50f, 0xb858, 0x0, 0x0);
        gbc.writeMem(0x99dd, { 0xcb, 0x6 });
        gbc.writeMem(0xb858, { 0x0 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x408c, gbc.sp());
        EXPECT(0x99df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x99dd));
        EXPECT(0x6, gbc.readMem(0x99de));
        EXPECT(0x0, gbc.readMem(0xb858));
        // CB 06 0110
        gbc.setState(0x4aee, 0xc81a, 0x98b0, 0x57b2, 0xe8b3, 0x8c0f, 0x1, 0x0);
        gbc.writeMem(0x4aee, { 0xcb, 0x6 });
        gbc.writeMem(0x8c0f, { 0x46 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xc81a, gbc.sp());
        EXPECT(0x4af0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0x8c0f));
        // CB 06 0111
        gbc.setState(0xca1a, 0x7335, 0xd240, 0x6b87, 0xb085, 0x95eb, 0x1, 0x1);
        gbc.writeMem(0x95eb, { 0x19 });
        gbc.writeMem(0xca1a, { 0xcb, 0x6 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x7335, gbc.sp());
        EXPECT(0xca1c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x32, gbc.readMem(0x95eb));
        EXPECT(0xcb, gbc.readMem(0xca1a));
        EXPECT(0x6, gbc.readMem(0xca1b));
        // CB 06 0112
        gbc.setState(0x409, 0x110b, 0x9200, 0xd77d, 0x4683, 0xba84, 0x0, 0x0);
        gbc.writeMem(0x409, { 0xcb, 0x6 });
        gbc.writeMem(0xba84, { 0x9d });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x110b, gbc.sp());
        EXPECT(0x40b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xba84));
        // CB 06 0115
        gbc.setState(0xb014, 0xeda1, 0x8df0, 0xa82c, 0x2d9c, 0xc228, 0x1, 0x1);
        gbc.writeMem(0xb014, { 0xcb, 0x6 });
        gbc.writeMem(0xc228, { 0xdf });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xeda1, gbc.sp());
        EXPECT(0xb016, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb014));
        EXPECT(0x6, gbc.readMem(0xb015));
        EXPECT(0xbf, gbc.readMem(0xc228));
        // CB 06 0117
        gbc.setState(0x1f39, 0xdc8b, 0x5c80, 0x5de7, 0xfd40, 0x929e, 0x0, 0x1);
        gbc.writeMem(0x1f39, { 0xcb, 0x6 });
        gbc.writeMem(0x929e, { 0xcc });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xdc8b, gbc.sp());
        EXPECT(0x1f3b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0x929e));
        // CB 06 011A
        gbc.setState(0x6605, 0xa315, 0xa140, 0x15a1, 0xc057, 0x8840, 0x0, 0x0);
        gbc.writeMem(0x6605, { 0xcb, 0x6 });
        gbc.writeMem(0x8840, { 0x2 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xa315, gbc.sp());
        EXPECT(0x6607, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0x8840));
        // CB 06 011C
        gbc.setState(0xcb8b, 0xcd32, 0x4170, 0xabdc, 0xd261, 0xdfe1, 0x0, 0x1);
        gbc.writeMem(0xcb8b, { 0xcb, 0x6 });
        gbc.writeMem(0xdfe1, { 0x87 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xcd32, gbc.sp());
        EXPECT(0xcb8d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb8b));
        EXPECT(0x6, gbc.readMem(0xcb8c));
        EXPECT(0xf, gbc.readMem(0xdfe1));
        // CB 06 011F
        gbc.setState(0x9b24, 0x331e, 0x72d0, 0xde8f, 0x7c1a, 0xc9ad, 0x1, 0x1);
        gbc.writeMem(0x9b24, { 0xcb, 0x6 });
        gbc.writeMem(0xc9ad, { 0x30 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x331e, gbc.sp());
        EXPECT(0x9b26, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b24));
        EXPECT(0x6, gbc.readMem(0x9b25));
        EXPECT(0x60, gbc.readMem(0xc9ad));
        // CB 06 0121
        gbc.setState(0x2cf6, 0xdb6f, 0x8ba0, 0xe0e3, 0xfa0d, 0xd8ae, 0x0, 0x1);
        gbc.writeMem(0x2cf6, { 0xcb, 0x6 });
        gbc.writeMem(0xd8ae, { 0x52 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xdb6f, gbc.sp());
        EXPECT(0x2cf8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xd8ae));
        // CB 06 0122
        gbc.setState(0x3217, 0xfeec, 0x4580, 0x8788, 0x8376, 0x9a28, 0x1, 0x0);
        gbc.writeMem(0x3217, { 0xcb, 0x6 });
        gbc.writeMem(0x9a28, { 0x28 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xfeec, gbc.sp());
        EXPECT(0x3219, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0x9a28));
        // CB 06 0123
        gbc.setState(0x957c, 0x27e2, 0x4640, 0x3867, 0xd2be, 0xca55, 0x1, 0x0);
        gbc.writeMem(0x957c, { 0xcb, 0x6 });
        gbc.writeMem(0xca55, { 0x11 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x27e2, gbc.sp());
        EXPECT(0x957e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x957c));
        EXPECT(0x6, gbc.readMem(0x957d));
        EXPECT(0x22, gbc.readMem(0xca55));
        // CB 06 0124
        gbc.setState(0x33e3, 0x8537, 0xc170, 0xc5ae, 0xfaad, 0x8501, 0x0, 0x0);
        gbc.writeMem(0x33e3, { 0xcb, 0x6 });
        gbc.writeMem(0x8501, { 0xe6 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x8537, gbc.sp());
        EXPECT(0x33e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcd, gbc.readMem(0x8501));
        // CB 06 0129
        gbc.setState(0xa53a, 0x7b76, 0x81e0, 0x1243, 0x42f2, 0xdc2b, 0x1, 0x1);
        gbc.writeMem(0xa53a, { 0xcb, 0x6 });
        gbc.writeMem(0xdc2b, { 0x17 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x7b76, gbc.sp());
        EXPECT(0xa53c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa53a));
        EXPECT(0x6, gbc.readMem(0xa53b));
        EXPECT(0x2e, gbc.readMem(0xdc2b));
        // CB 06 012A
        gbc.setState(0xd5c8, 0xf599, 0x12b0, 0x61a2, 0x96e2, 0x90db, 0x1, 0x1);
        gbc.writeMem(0x90db, { 0xcf });
        gbc.writeMem(0xd5c8, { 0xcb, 0x6 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xf599, gbc.sp());
        EXPECT(0xd5ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0x90db));
        EXPECT(0xcb, gbc.readMem(0xd5c8));
        EXPECT(0x6, gbc.readMem(0xd5c9));
        // CB 06 012C
        gbc.setState(0xab3b, 0xc7cf, 0x6500, 0xb836, 0x2a6d, 0xc095, 0x0, 0x1);
        gbc.writeMem(0xab3b, { 0xcb, 0x6 });
        gbc.writeMem(0xc095, { 0x4a });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xc7cf, gbc.sp());
        EXPECT(0xab3d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab3b));
        EXPECT(0x6, gbc.readMem(0xab3c));
        EXPECT(0x94, gbc.readMem(0xc095));
        // CB 06 012D
        gbc.setState(0xd739, 0x81c, 0x1d80, 0xca2c, 0xedb0, 0x91b9, 0x0, 0x0);
        gbc.writeMem(0x91b9, { 0x20 });
        gbc.writeMem(0xd739, { 0xcb, 0x6 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x81c, gbc.sp());
        EXPECT(0xd73b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0x91b9));
        EXPECT(0xcb, gbc.readMem(0xd739));
        EXPECT(0x6, gbc.readMem(0xd73a));
        // CB 06 012F
        gbc.setState(0xb6f, 0xa195, 0x14e0, 0x1a7a, 0xd643, 0x8524, 0x1, 0x0);
        gbc.writeMem(0xb6f, { 0xcb, 0x6 });
        gbc.writeMem(0x8524, { 0x7d });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xa195, gbc.sp());
        EXPECT(0xb71, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0x8524));
        // CB 06 0130
        gbc.setState(0xcabe, 0x2b5a, 0x8c80, 0x47a7, 0xda83, 0xb036, 0x1, 0x1);
        gbc.writeMem(0xb036, { 0xc8 });
        gbc.writeMem(0xcabe, { 0xcb, 0x6 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x2b5a, gbc.sp());
        EXPECT(0xcac0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xb036));
        EXPECT(0xcb, gbc.readMem(0xcabe));
        EXPECT(0x6, gbc.readMem(0xcabf));
        // CB 06 0135
        gbc.setState(0x44a2, 0xb336, 0x3a50, 0x7616, 0xf009, 0xdac5, 0x0, 0x0);
        gbc.writeMem(0x44a2, { 0xcb, 0x6 });
        gbc.writeMem(0xdac5, { 0x6d });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xb336, gbc.sp());
        EXPECT(0x44a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xdac5));
        // CB 06 0136
        gbc.setState(0xa7d7, 0xb16a, 0xe660, 0x17bd, 0xc835, 0xdb11, 0x1, 0x1);
        gbc.writeMem(0xa7d7, { 0xcb, 0x6 });
        gbc.writeMem(0xdb11, { 0xb0 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xb16a, gbc.sp());
        EXPECT(0xa7d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa7d7));
        EXPECT(0x6, gbc.readMem(0xa7d8));
        EXPECT(0x61, gbc.readMem(0xdb11));
        // CB 06 0137
        gbc.setState(0xb770, 0x34cb, 0x9c50, 0xe4f1, 0x80f1, 0xde96, 0x0, 0x0);
        gbc.writeMem(0xb770, { 0xcb, 0x6 });
        gbc.writeMem(0xde96, { 0xb6 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x34cb, gbc.sp());
        EXPECT(0xb772, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb770));
        EXPECT(0x6, gbc.readMem(0xb771));
        EXPECT(0x6d, gbc.readMem(0xde96));
        // CB 06 013C
        gbc.setState(0x3ffb, 0x508d, 0x54a0, 0xdfc9, 0x1959, 0xa310, 0x1, 0x1);
        gbc.writeMem(0x3ffb, { 0xcb, 0x6 });
        gbc.writeMem(0xa310, { 0xda });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x508d, gbc.sp());
        EXPECT(0x3ffd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xa310));
        // CB 06 013F
        gbc.setState(0xd797, 0xfe29, 0x6480, 0x234b, 0xa2ab, 0xe86c, 0x1, 0x0);
        gbc.writeMem(0xd797, { 0xcb, 0x6 });
        gbc.writeMem(0xe86c, { 0xbf });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xfe29, gbc.sp());
        EXPECT(0xd799, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd797));
        EXPECT(0x6, gbc.readMem(0xd798));
        EXPECT(0x7f, gbc.readMem(0xe86c));
        // CB 06 0144
        gbc.setState(0x4a6a, 0xbd96, 0x20f0, 0xeb94, 0xea9c, 0xa312, 0x1, 0x1);
        gbc.writeMem(0x4a6a, { 0xcb, 0x6 });
        gbc.writeMem(0xa312, { 0x5f });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xbd96, gbc.sp());
        EXPECT(0x4a6c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbe, gbc.readMem(0xa312));
        // CB 06 0147
        gbc.setState(0xb5af, 0xc617, 0xa80, 0x6ed7, 0xeac2, 0xe1d9, 0x1, 0x1);
        gbc.writeMem(0xb5af, { 0xcb, 0x6 });
        gbc.writeMem(0xe1d9, { 0x35 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xc617, gbc.sp());
        EXPECT(0xb5b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb5af));
        EXPECT(0x6, gbc.readMem(0xb5b0));
        EXPECT(0x6a, gbc.readMem(0xe1d9));
        // CB 06 0148
        gbc.setState(0x4722, 0x36c8, 0x590, 0x962f, 0x1457, 0xf15c, 0x1, 0x0);
        gbc.writeMem(0x4722, { 0xcb, 0x6 });
        gbc.writeMem(0xf15c, { 0xa3 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x36c8, gbc.sp());
        EXPECT(0x4724, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xf15c));
        // CB 06 014B
        gbc.setState(0x97c6, 0x895, 0x5d00, 0x9eef, 0x6a3f, 0xcc60, 0x0, 0x0);
        gbc.writeMem(0x97c6, { 0xcb, 0x6 });
        gbc.writeMem(0xcc60, { 0xf9 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x895, gbc.sp());
        EXPECT(0x97c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x97c6));
        EXPECT(0x6, gbc.readMem(0x97c7));
        EXPECT(0xf3, gbc.readMem(0xcc60));
        // CB 06 014E
        gbc.setState(0x1c95, 0xc39f, 0xe00, 0x6154, 0x2199, 0xf795, 0x1, 0x1);
        gbc.writeMem(0x1c95, { 0xcb, 0x6 });
        gbc.writeMem(0xf795, { 0x66 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xc39f, gbc.sp());
        EXPECT(0x1c97, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcc, gbc.readMem(0xf795));
        // CB 06 0150
        gbc.setState(0x386a, 0xefba, 0x40d0, 0xa2d8, 0xac23, 0xaa71, 0x0, 0x0);
        gbc.writeMem(0x386a, { 0xcb, 0x6 });
        gbc.writeMem(0xaa71, { 0xb0 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xefba, gbc.sp());
        EXPECT(0x386c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xaa71));
        // CB 06 0151
        gbc.setState(0x8052, 0x3260, 0x8fd0, 0xa27e, 0x8924, 0x964f, 0x0, 0x1);
        gbc.writeMem(0x8052, { 0xcb, 0x6 });
        gbc.writeMem(0x964f, { 0xd6 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x3260, gbc.sp());
        EXPECT(0x8054, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8052));
        EXPECT(0x6, gbc.readMem(0x8053));
        EXPECT(0xad, gbc.readMem(0x964f));
        // CB 06 0155
        gbc.setState(0xd070, 0x96a3, 0x5bc0, 0x90fe, 0x5b54, 0xb731, 0x0, 0x1);
        gbc.writeMem(0xb731, { 0x56 });
        gbc.writeMem(0xd070, { 0xcb, 0x6 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x96a3, gbc.sp());
        EXPECT(0xd072, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xb731));
        EXPECT(0xcb, gbc.readMem(0xd070));
        EXPECT(0x6, gbc.readMem(0xd071));
        // CB 06 0158
        gbc.setState(0xc331, 0x68db, 0x4d30, 0xa2d5, 0xdaea, 0xeb66, 0x0, 0x1);
        gbc.writeMem(0xc331, { 0xcb, 0x6 });
        gbc.writeMem(0xeb66, { 0xc });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x68db, gbc.sp());
        EXPECT(0xc333, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc331));
        EXPECT(0x6, gbc.readMem(0xc332));
        EXPECT(0x18, gbc.readMem(0xeb66));
        // CB 06 0159
        gbc.setState(0x9ed1, 0xa362, 0x28e0, 0xd067, 0xe8ca, 0x995f, 0x0, 0x1);
        gbc.writeMem(0x995f, { 0xbc });
        gbc.writeMem(0x9ed1, { 0xcb, 0x6 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xa362, gbc.sp());
        EXPECT(0x9ed3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0x995f));
        EXPECT(0xcb, gbc.readMem(0x9ed1));
        EXPECT(0x6, gbc.readMem(0x9ed2));
        // CB 06 015B
        gbc.setState(0x178e, 0xfd88, 0xba40, 0xf60c, 0x2bda, 0x9006, 0x0, 0x0);
        gbc.writeMem(0x178e, { 0xcb, 0x6 });
        gbc.writeMem(0x9006, { 0xed });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xfd88, gbc.sp());
        EXPECT(0x1790, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xdb, gbc.readMem(0x9006));
        // CB 06 015C
        gbc.setState(0xd030, 0x8e57, 0xdd60, 0x772e, 0x9aaf, 0xd543, 0x0, 0x0);
        gbc.writeMem(0xd030, { 0xcb, 0x6 });
        gbc.writeMem(0xd543, { 0x76 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x8e57, gbc.sp());
        EXPECT(0xd032, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd030));
        EXPECT(0x6, gbc.readMem(0xd031));
        EXPECT(0xec, gbc.readMem(0xd543));
        // CB 06 015D
        gbc.setState(0x89f, 0x4fce, 0x5610, 0x5c88, 0xe812, 0x90b0, 0x0, 0x1);
        gbc.writeMem(0x89f, { 0xcb, 0x6 });
        gbc.writeMem(0x90b0, { 0xc7 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x4fce, gbc.sp());
        EXPECT(0x8a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0x90b0));
        // CB 06 015E
        gbc.setState(0x258d, 0x5d51, 0x7c40, 0xcee5, 0x341a, 0x94a3, 0x0, 0x1);
        gbc.writeMem(0x258d, { 0xcb, 0x6 });
        gbc.writeMem(0x94a3, { 0xcd });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x5d51, gbc.sp());
        EXPECT(0x258f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0x94a3));
        // CB 06 015F
        gbc.setState(0x9cb1, 0xcd67, 0x8e40, 0xd9c5, 0xb55f, 0xcb1c, 0x0, 0x1);
        gbc.writeMem(0x9cb1, { 0xcb, 0x6 });
        gbc.writeMem(0xcb1c, { 0x71 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xcd67, gbc.sp());
        EXPECT(0x9cb3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9cb1));
        EXPECT(0x6, gbc.readMem(0x9cb2));
        EXPECT(0xe2, gbc.readMem(0xcb1c));
        // CB 06 0162
        gbc.setState(0xef93, 0xbb83, 0x83b0, 0xbf7e, 0xb24c, 0x8e65, 0x1, 0x0);
        gbc.writeMem(0x8e65, { 0x99 });
        gbc.writeMem(0xef93, { 0xcb, 0x6 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xbb83, gbc.sp());
        EXPECT(0xef95, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0x8e65));
        EXPECT(0xcb, gbc.readMem(0xef93));
        EXPECT(0x6, gbc.readMem(0xef94));
        // CB 06 0164
        gbc.setState(0x6dd9, 0xb1c1, 0x7940, 0xf9e7, 0xbe23, 0x92a6, 0x0, 0x1);
        gbc.writeMem(0x6dd9, { 0xcb, 0x6 });
        gbc.writeMem(0x92a6, { 0xbe });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xb1c1, gbc.sp());
        EXPECT(0x6ddb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0x92a6));
        // CB 06 0167
        gbc.setState(0xaa25, 0x4a27, 0xa000, 0x823b, 0x2583, 0xe77c, 0x0, 0x1);
        gbc.writeMem(0xaa25, { 0xcb, 0x6 });
        gbc.writeMem(0xe77c, { 0x2c });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x4a27, gbc.sp());
        EXPECT(0xaa27, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa25));
        EXPECT(0x6, gbc.readMem(0xaa26));
        EXPECT(0x58, gbc.readMem(0xe77c));
        // CB 06 016B
        gbc.setState(0x9f1a, 0x5db3, 0x6320, 0x2a92, 0x5d78, 0xb23a, 0x0, 0x1);
        gbc.writeMem(0x9f1a, { 0xcb, 0x6 });
        gbc.writeMem(0xb23a, { 0x10 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x5db3, gbc.sp());
        EXPECT(0x9f1c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f1a));
        EXPECT(0x6, gbc.readMem(0x9f1b));
        EXPECT(0x20, gbc.readMem(0xb23a));
        // CB 06 016D
        gbc.setState(0x1f6f, 0xdee3, 0x7b90, 0x9fb8, 0xefc4, 0xd84d, 0x1, 0x0);
        gbc.writeMem(0x1f6f, { 0xcb, 0x6 });
        gbc.writeMem(0xd84d, { 0x28 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xdee3, gbc.sp());
        EXPECT(0x1f71, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xd84d));
        // CB 06 0171
        gbc.setState(0x1220, 0x64ef, 0xed0, 0x75a3, 0xf0a, 0xa191, 0x1, 0x1);
        gbc.writeMem(0x1220, { 0xcb, 0x6 });
        gbc.writeMem(0xa191, { 0xbe });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x64ef, gbc.sp());
        EXPECT(0x1222, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xa191));
        // CB 06 0173
        gbc.setState(0xe16b, 0x2f4c, 0x3310, 0xc9f0, 0x2e6e, 0x8b15, 0x1, 0x1);
        gbc.writeMem(0x8b15, { 0x25 });
        gbc.writeMem(0xe16b, { 0xcb, 0x6 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x2f4c, gbc.sp());
        EXPECT(0xe16d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4a, gbc.readMem(0x8b15));
        EXPECT(0xcb, gbc.readMem(0xe16b));
        EXPECT(0x6, gbc.readMem(0xe16c));
        // CB 06 0176
        gbc.setState(0xeacd, 0xc82, 0x4b20, 0xd227, 0x5387, 0xc39f, 0x1, 0x1);
        gbc.writeMem(0xc39f, { 0xd8 });
        gbc.writeMem(0xeacd, { 0xcb, 0x6 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xc82, gbc.sp());
        EXPECT(0xeacf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb1, gbc.readMem(0xc39f));
        EXPECT(0xcb, gbc.readMem(0xeacd));
        EXPECT(0x6, gbc.readMem(0xeace));
        // CB 06 0179
        gbc.setState(0xe5ef, 0x3dfb, 0x2480, 0xf5a5, 0x6018, 0xba9f, 0x0, 0x0);
        gbc.writeMem(0xba9f, { 0xc5 });
        gbc.writeMem(0xe5ef, { 0xcb, 0x6 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x3dfb, gbc.sp());
        EXPECT(0xe5f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8b, gbc.readMem(0xba9f));
        EXPECT(0xcb, gbc.readMem(0xe5ef));
        EXPECT(0x6, gbc.readMem(0xe5f0));
        // CB 06 017A
        gbc.setState(0x85ac, 0xb279, 0xb5d0, 0x3d97, 0x21db, 0xafaf, 0x1, 0x0);
        gbc.writeMem(0x85ac, { 0xcb, 0x6 });
        gbc.writeMem(0xafaf, { 0xa3 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xb279, gbc.sp());
        EXPECT(0x85ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x85ac));
        EXPECT(0x6, gbc.readMem(0x85ad));
        EXPECT(0x47, gbc.readMem(0xafaf));
        // CB 06 017C
        gbc.setState(0x80a9, 0x3f91, 0x5260, 0xa23e, 0x24d8, 0xd8d1, 0x1, 0x0);
        gbc.writeMem(0x80a9, { 0xcb, 0x6 });
        gbc.writeMem(0xd8d1, { 0x4d });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x3f91, gbc.sp());
        EXPECT(0x80ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x80a9));
        EXPECT(0x6, gbc.readMem(0x80aa));
        EXPECT(0x9a, gbc.readMem(0xd8d1));
        // CB 06 017D
        gbc.setState(0x7dd6, 0x4979, 0x42e0, 0x8d03, 0xfe3d, 0xc663, 0x1, 0x1);
        gbc.writeMem(0x7dd6, { 0xcb, 0x6 });
        gbc.writeMem(0xc663, { 0x49 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x4979, gbc.sp());
        EXPECT(0x7dd8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xc663));
        // CB 06 017F
        gbc.setState(0xbb62, 0x2432, 0xac60, 0x9067, 0x975b, 0xd6e4, 0x0, 0x0);
        gbc.writeMem(0xbb62, { 0xcb, 0x6 });
        gbc.writeMem(0xd6e4, { 0x4c });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x2432, gbc.sp());
        EXPECT(0xbb64, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb62));
        EXPECT(0x6, gbc.readMem(0xbb63));
        EXPECT(0x98, gbc.readMem(0xd6e4));
        // CB 06 0182
        gbc.setState(0xec0b, 0x7ac9, 0x3430, 0x1dac, 0x42ba, 0xf8ab, 0x1, 0x0);
        gbc.writeMem(0xec0b, { 0xcb, 0x6 });
        gbc.writeMem(0xf8ab, { 0x4f });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x7ac9, gbc.sp());
        EXPECT(0xec0d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec0b));
        EXPECT(0x6, gbc.readMem(0xec0c));
        EXPECT(0x9e, gbc.readMem(0xf8ab));
        // CB 06 0183
        gbc.setState(0x5610, 0x51de, 0xefe0, 0xda24, 0xc6b9, 0xe090, 0x1, 0x1);
        gbc.writeMem(0x5610, { 0xcb, 0x6 });
        gbc.writeMem(0xe090, { 0x1e });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x51de, gbc.sp());
        EXPECT(0x5612, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xe090));
        // CB 06 0184
        gbc.setState(0x64af, 0xef35, 0xc430, 0xf4e9, 0xf6eb, 0xf30f, 0x1, 0x0);
        gbc.writeMem(0x64af, { 0xcb, 0x6 });
        gbc.writeMem(0xf30f, { 0xb0 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xef35, gbc.sp());
        EXPECT(0x64b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xf30f));
        // CB 06 0185
        gbc.setState(0x6713, 0x7ad5, 0x63f0, 0xc097, 0x624b, 0xae55, 0x0, 0x0);
        gbc.writeMem(0x6713, { 0xcb, 0x6 });
        gbc.writeMem(0xae55, { 0xa });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x7ad5, gbc.sp());
        EXPECT(0x6715, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xae55));
        // CB 06 0187
        gbc.setState(0xccac, 0x86eb, 0x5ff0, 0x56c8, 0x76d, 0x8078, 0x1, 0x1);
        gbc.writeMem(0x8078, { 0xac });
        gbc.writeMem(0xccac, { 0xcb, 0x6 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x86eb, gbc.sp());
        EXPECT(0xccae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x59, gbc.readMem(0x8078));
        EXPECT(0xcb, gbc.readMem(0xccac));
        EXPECT(0x6, gbc.readMem(0xccad));
        // CB 06 0189
        gbc.setState(0x77a6, 0x580d, 0x3790, 0xd19f, 0x7332, 0x937d, 0x1, 0x1);
        gbc.writeMem(0x77a6, { 0xcb, 0x6 });
        gbc.writeMem(0x937d, { 0xec });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x580d, gbc.sp());
        EXPECT(0x77a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0x937d));
        // CB 06 018B
        gbc.setState(0x5f15, 0x7619, 0xc390, 0x9a05, 0x101f, 0xf891, 0x0, 0x1);
        gbc.writeMem(0x5f15, { 0xcb, 0x6 });
        gbc.writeMem(0xf891, { 0xf4 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x7619, gbc.sp());
        EXPECT(0x5f17, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xf891));
        // CB 06 018D
        gbc.setState(0x717f, 0x3eb0, 0x5420, 0x29f7, 0xf363, 0x8aea, 0x0, 0x0);
        gbc.writeMem(0x717f, { 0xcb, 0x6 });
        gbc.writeMem(0x8aea, { 0x6b });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x3eb0, gbc.sp());
        EXPECT(0x7181, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0x8aea));
        // CB 06 018E
        gbc.setState(0xf3, 0x7ac9, 0xe110, 0x9df8, 0xa4f3, 0xae14, 0x0, 0x1);
        gbc.writeMem(0xf3, { 0xcb, 0x6 });
        gbc.writeMem(0xae14, { 0xc2 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x7ac9, gbc.sp());
        EXPECT(0xf5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xae14));
        // CB 06 0191
        gbc.setState(0x3290, 0x55ba, 0x5450, 0x24cb, 0x24d6, 0xe35c, 0x1, 0x0);
        gbc.writeMem(0x3290, { 0xcb, 0x6 });
        gbc.writeMem(0xe35c, { 0xa3 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x55ba, gbc.sp());
        EXPECT(0x3292, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xe35c));
        // CB 06 0195
        gbc.setState(0x822a, 0x28ce, 0xf00, 0xcf61, 0xc6bb, 0xf77d, 0x0, 0x0);
        gbc.writeMem(0x822a, { 0xcb, 0x6 });
        gbc.writeMem(0xf77d, { 0xf5 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x28ce, gbc.sp());
        EXPECT(0x822c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x822a));
        EXPECT(0x6, gbc.readMem(0x822b));
        EXPECT(0xeb, gbc.readMem(0xf77d));
        // CB 06 0196
        gbc.setState(0x82b6, 0xd208, 0x9ed0, 0xc95c, 0x4263, 0xdfa9, 0x0, 0x0);
        gbc.writeMem(0x82b6, { 0xcb, 0x6 });
        gbc.writeMem(0xdfa9, { 0xba });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xd208, gbc.sp());
        EXPECT(0x82b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x82b6));
        EXPECT(0x6, gbc.readMem(0x82b7));
        EXPECT(0x75, gbc.readMem(0xdfa9));
        // CB 06 0198
        gbc.setState(0x3eef, 0x5c47, 0xfe30, 0x90e3, 0x9b90, 0x8cb6, 0x1, 0x0);
        gbc.writeMem(0x3eef, { 0xcb, 0x6 });
        gbc.writeMem(0x8cb6, { 0x2b });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x5c47, gbc.sp());
        EXPECT(0x3ef1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0x8cb6));
        // CB 06 0199
        gbc.setState(0x71fb, 0xd6b9, 0xf6f0, 0x7877, 0xb078, 0x9f6f, 0x1, 0x0);
        gbc.writeMem(0x71fb, { 0xcb, 0x6 });
        gbc.writeMem(0x9f6f, { 0xa7 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xd6b9, gbc.sp());
        EXPECT(0x71fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4f, gbc.readMem(0x9f6f));
        // CB 06 019A
        gbc.setState(0xefd, 0x4179, 0x9f10, 0x4091, 0x9da3, 0xd045, 0x1, 0x1);
        gbc.writeMem(0xefd, { 0xcb, 0x6 });
        gbc.writeMem(0xd045, { 0x28 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x4179, gbc.sp());
        EXPECT(0xeff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xd045));
        // CB 06 019B
        gbc.setState(0x861f, 0xf141, 0xcdb0, 0x698, 0x4c26, 0xe3cf, 0x0, 0x1);
        gbc.writeMem(0x861f, { 0xcb, 0x6 });
        gbc.writeMem(0xe3cf, { 0xa4 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xf141, gbc.sp());
        EXPECT(0x8621, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x861f));
        EXPECT(0x6, gbc.readMem(0x8620));
        EXPECT(0x49, gbc.readMem(0xe3cf));
        // CB 06 019C
        gbc.setState(0x2b68, 0x9b12, 0xc4a0, 0xc395, 0xb791, 0xf4ac, 0x0, 0x1);
        gbc.writeMem(0x2b68, { 0xcb, 0x6 });
        gbc.writeMem(0xf4ac, { 0xb1 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x9b12, gbc.sp());
        EXPECT(0x2b6a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x63, gbc.readMem(0xf4ac));
        // CB 06 019D
        gbc.setState(0x738d, 0x8e27, 0x4ec0, 0x46f5, 0x1e9d, 0xb2b2, 0x0, 0x0);
        gbc.writeMem(0x738d, { 0xcb, 0x6 });
        gbc.writeMem(0xb2b2, { 0x43 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x8e27, gbc.sp());
        EXPECT(0x738f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xb2b2));
        // CB 06 019F
        gbc.setState(0x8722, 0x4c23, 0x9730, 0x7cec, 0xd99a, 0xbf22, 0x1, 0x1);
        gbc.writeMem(0x8722, { 0xcb, 0x6 });
        gbc.writeMem(0xbf22, { 0x5b });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x4c23, gbc.sp());
        EXPECT(0x8724, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8722));
        EXPECT(0x6, gbc.readMem(0x8723));
        EXPECT(0xb6, gbc.readMem(0xbf22));
        // CB 06 01A1
        gbc.setState(0xbdc, 0x80b, 0xb3c0, 0x78cd, 0x8493, 0x9ccd, 0x1, 0x0);
        gbc.writeMem(0xbdc, { 0xcb, 0x6 });
        gbc.writeMem(0x9ccd, { 0xd8 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x80b, gbc.sp());
        EXPECT(0xbde, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb1, gbc.readMem(0x9ccd));
        // CB 06 01A2
        gbc.setState(0x3e86, 0xa93f, 0xac30, 0x625a, 0x6790, 0x9655, 0x1, 0x1);
        gbc.writeMem(0x3e86, { 0xcb, 0x6 });
        gbc.writeMem(0x9655, { 0xdf });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xa93f, gbc.sp());
        EXPECT(0x3e88, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0x9655));
        // CB 06 01A4
        gbc.setState(0xcf11, 0x4647, 0x4be0, 0xfe1b, 0xeab3, 0xe60b, 0x1, 0x1);
        gbc.writeMem(0xcf11, { 0xcb, 0x6 });
        gbc.writeMem(0xe60b, { 0x12 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x4647, gbc.sp());
        EXPECT(0xcf13, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf11));
        EXPECT(0x6, gbc.readMem(0xcf12));
        EXPECT(0x24, gbc.readMem(0xe60b));
        // CB 06 01AA
        gbc.setState(0x2691, 0xc8a4, 0x3da0, 0x3664, 0xfdca, 0xf930, 0x0, 0x1);
        gbc.writeMem(0x2691, { 0xcb, 0x6 });
        gbc.writeMem(0xf930, { 0x10 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xc8a4, gbc.sp());
        EXPECT(0x2693, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xf930));
        // CB 06 01AC
        gbc.setState(0xd30f, 0xeae8, 0x93d0, 0x536a, 0x47f8, 0xadb6, 0x0, 0x1);
        gbc.writeMem(0xadb6, { 0x84 });
        gbc.writeMem(0xd30f, { 0xcb, 0x6 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xeae8, gbc.sp());
        EXPECT(0xd311, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xadb6));
        EXPECT(0xcb, gbc.readMem(0xd30f));
        EXPECT(0x6, gbc.readMem(0xd310));
        // CB 06 01AE
        gbc.setState(0x3b00, 0xb4b9, 0x4b10, 0xb80c, 0xe835, 0xa3f9, 0x1, 0x1);
        gbc.writeMem(0x3b00, { 0xcb, 0x6 });
        gbc.writeMem(0xa3f9, { 0xbb });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xb4b9, gbc.sp());
        EXPECT(0x3b02, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x77, gbc.readMem(0xa3f9));
        // CB 06 01B2
        gbc.setState(0x6125, 0xe79d, 0x33a0, 0x8e06, 0xfb15, 0xa10e, 0x0, 0x0);
        gbc.writeMem(0x6125, { 0xcb, 0x6 });
        gbc.writeMem(0xa10e, { 0x59 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xe79d, gbc.sp());
        EXPECT(0x6127, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xa10e));
        // CB 06 01B4
        gbc.setState(0xa88e, 0x9714, 0xbe60, 0x2a1, 0x42f0, 0xe57d, 0x1, 0x1);
        gbc.writeMem(0xa88e, { 0xcb, 0x6 });
        gbc.writeMem(0xe57d, { 0x70 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x9714, gbc.sp());
        EXPECT(0xa890, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa88e));
        EXPECT(0x6, gbc.readMem(0xa88f));
        EXPECT(0xe0, gbc.readMem(0xe57d));
        // CB 06 01B8
        gbc.setState(0xbd9, 0x3bb3, 0x5870, 0x847b, 0xdd4e, 0xab99, 0x0, 0x0);
        gbc.writeMem(0xbd9, { 0xcb, 0x6 });
        gbc.writeMem(0xab99, { 0x4 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x3bb3, gbc.sp());
        EXPECT(0xbdb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8, gbc.readMem(0xab99));
        // CB 06 01B9
        gbc.setState(0x559b, 0xd840, 0xeb80, 0x56a5, 0x8b39, 0xf186, 0x1, 0x1);
        gbc.writeMem(0x559b, { 0xcb, 0x6 });
        gbc.writeMem(0xf186, { 0x37 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xd840, gbc.sp());
        EXPECT(0x559d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xf186));
        // CB 06 01BB
        gbc.setState(0xb01a, 0x40c2, 0x6da0, 0x55e9, 0xe8f0, 0xe76b, 0x1, 0x1);
        gbc.writeMem(0xb01a, { 0xcb, 0x6 });
        gbc.writeMem(0xe76b, { 0xc9 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x40c2, gbc.sp());
        EXPECT(0xb01c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb01a));
        EXPECT(0x6, gbc.readMem(0xb01b));
        EXPECT(0x93, gbc.readMem(0xe76b));
        // CB 06 01BE
        gbc.setState(0x862b, 0x83b1, 0xeb20, 0x6b1, 0xebfe, 0xb7dd, 0x1, 0x0);
        gbc.writeMem(0x862b, { 0xcb, 0x6 });
        gbc.writeMem(0xb7dd, { 0x28 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x83b1, gbc.sp());
        EXPECT(0x862d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x862b));
        EXPECT(0x6, gbc.readMem(0x862c));
        EXPECT(0x50, gbc.readMem(0xb7dd));
        // CB 06 01C0
        gbc.setState(0x242a, 0xa1c, 0x4630, 0x775c, 0x9988, 0x8199, 0x1, 0x1);
        gbc.writeMem(0x242a, { 0xcb, 0x6 });
        gbc.writeMem(0x8199, { 0xc8 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xa1c, gbc.sp());
        EXPECT(0x242c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0x8199));
        // CB 06 01C5
        gbc.setState(0xda76, 0xd2da, 0x7790, 0x8648, 0x540, 0xc1ed, 0x0, 0x1);
        gbc.writeMem(0xc1ed, { 0xc5 });
        gbc.writeMem(0xda76, { 0xcb, 0x6 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xd2da, gbc.sp());
        EXPECT(0xda78, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8b, gbc.readMem(0xc1ed));
        EXPECT(0xcb, gbc.readMem(0xda76));
        EXPECT(0x6, gbc.readMem(0xda77));
        // CB 06 01C8
        gbc.setState(0x9eb9, 0x4a24, 0xd9c0, 0x38f7, 0x92f4, 0xf8c0, 0x1, 0x0);
        gbc.writeMem(0x9eb9, { 0xcb, 0x6 });
        gbc.writeMem(0xf8c0, { 0xd2 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x4a24, gbc.sp());
        EXPECT(0x9ebb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9eb9));
        EXPECT(0x6, gbc.readMem(0x9eba));
        EXPECT(0xa5, gbc.readMem(0xf8c0));
        // CB 06 01CA
        gbc.setState(0x5cd8, 0xfd54, 0xc150, 0x9efe, 0xf817, 0xd7ca, 0x1, 0x0);
        gbc.writeMem(0x5cd8, { 0xcb, 0x6 });
        gbc.writeMem(0xd7ca, { 0x84 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xfd54, gbc.sp());
        EXPECT(0x5cda, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xd7ca));
        // CB 06 01CB
        gbc.setState(0x2e66, 0x902f, 0x2cf0, 0x9d8c, 0xa6c0, 0xc6dd, 0x1, 0x1);
        gbc.writeMem(0x2e66, { 0xcb, 0x6 });
        gbc.writeMem(0xc6dd, { 0xa9 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x902f, gbc.sp());
        EXPECT(0x2e68, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xc6dd));
        // CB 06 01D2
        gbc.setState(0xe00e, 0xf92, 0x6670, 0x961c, 0x9750, 0xc24e, 0x0, 0x1);
        gbc.writeMem(0xc24e, { 0x12 });
        gbc.writeMem(0xe00e, { 0xcb, 0x6 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xf92, gbc.sp());
        EXPECT(0xe010, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x24, gbc.readMem(0xc24e));
        EXPECT(0xcb, gbc.readMem(0xe00e));
        EXPECT(0x6, gbc.readMem(0xe00f));
        // CB 06 01D7
        gbc.setState(0x773e, 0x9bfa, 0x270, 0xcdcf, 0x50cf, 0xc266, 0x0, 0x0);
        gbc.writeMem(0x773e, { 0xcb, 0x6 });
        gbc.writeMem(0xc266, { 0xa8 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x9bfa, gbc.sp());
        EXPECT(0x7740, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xc266));
        // CB 06 01DA
        gbc.setState(0x431a, 0x69f2, 0xac90, 0x3fd8, 0x1d04, 0xbeb0, 0x1, 0x0);
        gbc.writeMem(0x431a, { 0xcb, 0x6 });
        gbc.writeMem(0xbeb0, { 0x84 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x69f2, gbc.sp());
        EXPECT(0x431c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xbeb0));
        // CB 06 01DB
        gbc.setState(0xbe8c, 0x1705, 0x92a0, 0x2c65, 0x3bca, 0xd964, 0x0, 0x0);
        gbc.writeMem(0xbe8c, { 0xcb, 0x6 });
        gbc.writeMem(0xd964, { 0x6a });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x1705, gbc.sp());
        EXPECT(0xbe8e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe8c));
        EXPECT(0x6, gbc.readMem(0xbe8d));
        EXPECT(0xd4, gbc.readMem(0xd964));
        // CB 06 01DC
        gbc.setState(0x8e00, 0xbf14, 0x6b80, 0x10ae, 0x7864, 0x84ee, 0x1, 0x1);
        gbc.writeMem(0x84ee, { 0xd4 });
        gbc.writeMem(0x8e00, { 0xcb, 0x6 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xbf14, gbc.sp());
        EXPECT(0x8e02, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa9, gbc.readMem(0x84ee));
        EXPECT(0xcb, gbc.readMem(0x8e00));
        EXPECT(0x6, gbc.readMem(0x8e01));
        // CB 06 01E0
        gbc.setState(0xcef, 0xb29d, 0x2d70, 0x44cf, 0xf6e2, 0xe455, 0x0, 0x1);
        gbc.writeMem(0xcef, { 0xcb, 0x6 });
        gbc.writeMem(0xe455, { 0x67 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xb29d, gbc.sp());
        EXPECT(0xcf1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xce, gbc.readMem(0xe455));
        // CB 06 01E2
        gbc.setState(0xda1f, 0xf2d8, 0x19e0, 0xe66f, 0xd37b, 0xe882, 0x1, 0x0);
        gbc.writeMem(0xda1f, { 0xcb, 0x6 });
        gbc.writeMem(0xe882, { 0xc3 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xf2d8, gbc.sp());
        EXPECT(0xda21, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda1f));
        EXPECT(0x6, gbc.readMem(0xda20));
        EXPECT(0x87, gbc.readMem(0xe882));
        // CB 06 01E4
        gbc.setState(0xd9a9, 0x599d, 0x9ff0, 0xf6f0, 0x27f3, 0xc8c4, 0x1, 0x0);
        gbc.writeMem(0xc8c4, { 0xf2 });
        gbc.writeMem(0xd9a9, { 0xcb, 0x6 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x599d, gbc.sp());
        EXPECT(0xd9ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe5, gbc.readMem(0xc8c4));
        EXPECT(0xcb, gbc.readMem(0xd9a9));
        EXPECT(0x6, gbc.readMem(0xd9aa));
        // CB 06 01E7
        gbc.setState(0x259c, 0xf5cd, 0x7fe0, 0xd03f, 0x4b94, 0xa081, 0x0, 0x0);
        gbc.writeMem(0x259c, { 0xcb, 0x6 });
        gbc.writeMem(0xa081, { 0xfa });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xf5cd, gbc.sp());
        EXPECT(0x259e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf5, gbc.readMem(0xa081));
        // CB 06 01E8
        gbc.setState(0x8f76, 0x5717, 0xc850, 0xba48, 0xdfe0, 0xf09c, 0x1, 0x0);
        gbc.writeMem(0x8f76, { 0xcb, 0x6 });
        gbc.writeMem(0xf09c, { 0xf3 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x5717, gbc.sp());
        EXPECT(0x8f78, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f76));
        EXPECT(0x6, gbc.readMem(0x8f77));
        EXPECT(0xe7, gbc.readMem(0xf09c));
        // CB 06 01EA
        gbc.setState(0x1b8a, 0x8188, 0x96d0, 0x8991, 0xe9d8, 0xc26d, 0x0, 0x0);
        gbc.writeMem(0x1b8a, { 0xcb, 0x6 });
        gbc.writeMem(0xc26d, { 0xe5 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x8188, gbc.sp());
        EXPECT(0x1b8c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc26d));
        // CB 06 01EB
        gbc.setState(0xb8a5, 0xdf0f, 0x9320, 0xed01, 0x5118, 0xbdee, 0x1, 0x0);
        gbc.writeMem(0xb8a5, { 0xcb, 0x6 });
        gbc.writeMem(0xbdee, { 0xfc });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xdf0f, gbc.sp());
        EXPECT(0xb8a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb8a5));
        EXPECT(0x6, gbc.readMem(0xb8a6));
        EXPECT(0xf9, gbc.readMem(0xbdee));
        // CB 06 01ED
        gbc.setState(0x372f, 0xd46b, 0x6460, 0xcb5f, 0x7308, 0xcc75, 0x0, 0x1);
        gbc.writeMem(0x372f, { 0xcb, 0x6 });
        gbc.writeMem(0xcc75, { 0x41 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xd46b, gbc.sp());
        EXPECT(0x3731, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xcc75));
        // CB 06 01EE
        gbc.setState(0xdbd6, 0x9d29, 0x1cf0, 0x7acb, 0x725, 0xcb58, 0x1, 0x1);
        gbc.writeMem(0xcb58, { 0x4a });
        gbc.writeMem(0xdbd6, { 0xcb, 0x6 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x9d29, gbc.sp());
        EXPECT(0xdbd8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xcb58));
        EXPECT(0xcb, gbc.readMem(0xdbd6));
        EXPECT(0x6, gbc.readMem(0xdbd7));
        // CB 06 01EF
        gbc.setState(0x8f47, 0x1ece, 0xfff0, 0x2cc3, 0x45ef, 0xba47, 0x0, 0x0);
        gbc.writeMem(0x8f47, { 0xcb, 0x6 });
        gbc.writeMem(0xba47, { 0xf9 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x1ece, gbc.sp());
        EXPECT(0x8f49, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f47));
        EXPECT(0x6, gbc.readMem(0x8f48));
        EXPECT(0xf3, gbc.readMem(0xba47));
        // CB 06 01F1
        gbc.setState(0x5f39, 0xd18b, 0x5870, 0xb1eb, 0x4bb3, 0xe305, 0x1, 0x1);
        gbc.writeMem(0x5f39, { 0xcb, 0x6 });
        gbc.writeMem(0xe305, { 0x64 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xd18b, gbc.sp());
        EXPECT(0x5f3b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xe305));
        // CB 06 01F5
        gbc.setState(0x4541, 0xdb0c, 0x6730, 0x3221, 0xb3f8, 0x85be, 0x1, 0x0);
        gbc.writeMem(0x4541, { 0xcb, 0x6 });
        gbc.writeMem(0x85be, { 0x24 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xdb0c, gbc.sp());
        EXPECT(0x4543, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0x85be));
        // CB 06 01F6
        gbc.setState(0xce46, 0xa2ae, 0x7880, 0x8623, 0x79a4, 0xb5bc, 0x0, 0x1);
        gbc.writeMem(0xb5bc, { 0x79 });
        gbc.writeMem(0xce46, { 0xcb, 0x6 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xa2ae, gbc.sp());
        EXPECT(0xce48, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf2, gbc.readMem(0xb5bc));
        EXPECT(0xcb, gbc.readMem(0xce46));
        EXPECT(0x6, gbc.readMem(0xce47));
        // CB 06 01F7
        gbc.setState(0x8132, 0x5027, 0x1bf0, 0x26ba, 0x9250, 0x8bd0, 0x0, 0x1);
        gbc.writeMem(0x8132, { 0xcb, 0x6 });
        gbc.writeMem(0x8bd0, { 0xf9 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x5027, gbc.sp());
        EXPECT(0x8134, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8132));
        EXPECT(0x6, gbc.readMem(0x8133));
        EXPECT(0xf3, gbc.readMem(0x8bd0));
        // CB 06 01F8
        gbc.setState(0x5c3, 0x581a, 0x3030, 0x2198, 0x58fc, 0xd888, 0x0, 0x1);
        gbc.writeMem(0x5c3, { 0xcb, 0x6 });
        gbc.writeMem(0xd888, { 0xdb });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x581a, gbc.sp());
        EXPECT(0x5c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xd888));
        // CB 06 01FC
        gbc.setState(0x54a, 0x1ab7, 0x66d0, 0x33e9, 0xc2d7, 0xd406, 0x1, 0x0);
        gbc.writeMem(0x54a, { 0xcb, 0x6 });
        gbc.writeMem(0xd406, { 0x20 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x1ab7, gbc.sp());
        EXPECT(0x54c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xd406));
        // CB 06 0201
        gbc.setState(0xcb58, 0x262e, 0x99a0, 0x688d, 0x2e29, 0xa6c2, 0x1, 0x1);
        gbc.writeMem(0xa6c2, { 0x5d });
        gbc.writeMem(0xcb58, { 0xcb, 0x6 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x262e, gbc.sp());
        EXPECT(0xcb5a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xba, gbc.readMem(0xa6c2));
        EXPECT(0xcb, gbc.readMem(0xcb58));
        EXPECT(0x6, gbc.readMem(0xcb59));
        // CB 06 0202
        gbc.setState(0xd709, 0xcf2f, 0xaa0, 0xc0f0, 0xb589, 0xe3f4, 0x0, 0x0);
        gbc.writeMem(0xd709, { 0xcb, 0x6 });
        gbc.writeMem(0xe3f4, { 0x62 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xcf2f, gbc.sp());
        EXPECT(0xd70b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd709));
        EXPECT(0x6, gbc.readMem(0xd70a));
        EXPECT(0xc4, gbc.readMem(0xe3f4));
        // CB 06 0205
        gbc.setState(0xb31f, 0x3b0c, 0xaa20, 0x4425, 0x54ef, 0xc22f, 0x1, 0x0);
        gbc.writeMem(0xb31f, { 0xcb, 0x6 });
        gbc.writeMem(0xc22f, { 0x1f });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x3b0c, gbc.sp());
        EXPECT(0xb321, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb31f));
        EXPECT(0x6, gbc.readMem(0xb320));
        EXPECT(0x3e, gbc.readMem(0xc22f));
        // CB 06 0209
        gbc.setState(0xee00, 0x650, 0x2d40, 0xb7e5, 0x7c76, 0xc71a, 0x0, 0x1);
        gbc.writeMem(0xc71a, { 0x68 });
        gbc.writeMem(0xee00, { 0xcb, 0x6 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x650, gbc.sp());
        EXPECT(0xee02, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xc71a));
        EXPECT(0xcb, gbc.readMem(0xee00));
        EXPECT(0x6, gbc.readMem(0xee01));
        // CB 06 020A
        gbc.setState(0xc5a7, 0xe9e7, 0x3480, 0xa231, 0xf1b6, 0xb379, 0x0, 0x0);
        gbc.writeMem(0xb379, { 0x3f });
        gbc.writeMem(0xc5a7, { 0xcb, 0x6 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xe9e7, gbc.sp());
        EXPECT(0xc5a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xb379));
        EXPECT(0xcb, gbc.readMem(0xc5a7));
        EXPECT(0x6, gbc.readMem(0xc5a8));
        // CB 06 020B
        gbc.setState(0x5755, 0xab8a, 0xc750, 0x3c7d, 0x4aa3, 0x86ea, 0x1, 0x0);
        gbc.writeMem(0x5755, { 0xcb, 0x6 });
        gbc.writeMem(0x86ea, { 0xe0 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xab8a, gbc.sp());
        EXPECT(0x5757, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0x86ea));
        // CB 06 020D
        gbc.setState(0x7cbb, 0x7558, 0xaba0, 0xe973, 0xdffb, 0x9cfe, 0x0, 0x0);
        gbc.writeMem(0x7cbb, { 0xcb, 0x6 });
        gbc.writeMem(0x9cfe, { 0x5e });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x7558, gbc.sp());
        EXPECT(0x7cbd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0x9cfe));
        // CB 06 020F
        gbc.setState(0x8591, 0x8d0b, 0x4a0, 0xe306, 0xf9e6, 0xdd25, 0x0, 0x1);
        gbc.writeMem(0x8591, { 0xcb, 0x6 });
        gbc.writeMem(0xdd25, { 0x4d });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x8d0b, gbc.sp());
        EXPECT(0x8593, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8591));
        EXPECT(0x6, gbc.readMem(0x8592));
        EXPECT(0x9a, gbc.readMem(0xdd25));
        // CB 06 0210
        gbc.setState(0x283c, 0x8b82, 0x6550, 0xa401, 0x3480, 0xad56, 0x0, 0x1);
        gbc.writeMem(0x283c, { 0xcb, 0x6 });
        gbc.writeMem(0xad56, { 0x76 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x8b82, gbc.sp());
        EXPECT(0x283e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xec, gbc.readMem(0xad56));
        // CB 06 0211
        gbc.setState(0x1116, 0x9e6d, 0x83d0, 0x3179, 0x67d3, 0xeb36, 0x1, 0x1);
        gbc.writeMem(0x1116, { 0xcb, 0x6 });
        gbc.writeMem(0xeb36, { 0x38 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x9e6d, gbc.sp());
        EXPECT(0x1118, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x70, gbc.readMem(0xeb36));
        // CB 06 0216
        gbc.setState(0x230, 0x4c42, 0x1070, 0xce5, 0x92ff, 0xebb6, 0x0, 0x1);
        gbc.writeMem(0x230, { 0xcb, 0x6 });
        gbc.writeMem(0xebb6, { 0xb0 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x4c42, gbc.sp());
        EXPECT(0x232, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xebb6));
        // CB 06 0218
        gbc.setState(0x7a00, 0x472a, 0xadc0, 0x9f77, 0x3d9e, 0x8fee, 0x0, 0x0);
        gbc.writeMem(0x7a00, { 0xcb, 0x6 });
        gbc.writeMem(0x8fee, { 0x71 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x472a, gbc.sp());
        EXPECT(0x7a02, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0x8fee));
        // CB 06 021A
        gbc.setState(0xcbbe, 0x4275, 0xf9d0, 0x91cf, 0xf9f9, 0xbeb7, 0x0, 0x1);
        gbc.writeMem(0xbeb7, { 0xd5 });
        gbc.writeMem(0xcbbe, { 0xcb, 0x6 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x4275, gbc.sp());
        EXPECT(0xcbc0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xab, gbc.readMem(0xbeb7));
        EXPECT(0xcb, gbc.readMem(0xcbbe));
        EXPECT(0x6, gbc.readMem(0xcbbf));
        // CB 06 021F
        gbc.setState(0x715a, 0x198c, 0xcf90, 0x9876, 0xaacf, 0x9b07, 0x0, 0x1);
        gbc.writeMem(0x715a, { 0xcb, 0x6 });
        gbc.writeMem(0x9b07, { 0xe3 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x198c, gbc.sp());
        EXPECT(0x715c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc7, gbc.readMem(0x9b07));
        // CB 06 0222
        gbc.setState(0xcff4, 0xc7e2, 0xb350, 0x61b5, 0x76e4, 0xba25, 0x1, 0x1);
        gbc.writeMem(0xba25, { 0xb8 });
        gbc.writeMem(0xcff4, { 0xcb, 0x6 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xc7e2, gbc.sp());
        EXPECT(0xcff6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x71, gbc.readMem(0xba25));
        EXPECT(0xcb, gbc.readMem(0xcff4));
        EXPECT(0x6, gbc.readMem(0xcff5));
        // CB 06 0223
        gbc.setState(0x6b78, 0x6d9b, 0x90f0, 0x554c, 0x9482, 0x9e6e, 0x0, 0x1);
        gbc.writeMem(0x6b78, { 0xcb, 0x6 });
        gbc.writeMem(0x9e6e, { 0x26 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x6d9b, gbc.sp());
        EXPECT(0x6b7a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0x9e6e));
        // CB 06 0227
        gbc.setState(0xc96f, 0x7060, 0xfc30, 0xce0e, 0xaff8, 0xd19a, 0x0, 0x1);
        gbc.writeMem(0xc96f, { 0xcb, 0x6 });
        gbc.writeMem(0xd19a, { 0x86 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x7060, gbc.sp());
        EXPECT(0xc971, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc96f));
        EXPECT(0x6, gbc.readMem(0xc970));
        EXPECT(0xd, gbc.readMem(0xd19a));
        // CB 06 0228
        gbc.setState(0x24d3, 0xf460, 0x48c0, 0x37e6, 0xb60b, 0x8a69, 0x1, 0x0);
        gbc.writeMem(0x24d3, { 0xcb, 0x6 });
        gbc.writeMem(0x8a69, { 0x8 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xf460, gbc.sp());
        EXPECT(0x24d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0x8a69));
        // CB 06 0229
        gbc.setState(0x4cc5, 0xa870, 0x3640, 0xcdc7, 0xe312, 0xe4a4, 0x1, 0x1);
        gbc.writeMem(0x4cc5, { 0xcb, 0x6 });
        gbc.writeMem(0xe4a4, { 0x77 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xa870, gbc.sp());
        EXPECT(0x4cc7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xee, gbc.readMem(0xe4a4));
        // CB 06 022A
        gbc.setState(0x7da2, 0x9d4c, 0x4940, 0x94d8, 0x82d4, 0xdf5d, 0x1, 0x0);
        gbc.writeMem(0x7da2, { 0xcb, 0x6 });
        gbc.writeMem(0xdf5d, { 0x47 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x9d4c, gbc.sp());
        EXPECT(0x7da4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8e, gbc.readMem(0xdf5d));
        // CB 06 022C
        gbc.setState(0x4f5a, 0xff2, 0x9cc0, 0xa4fc, 0x23d3, 0xe88c, 0x0, 0x1);
        gbc.writeMem(0x4f5a, { 0xcb, 0x6 });
        gbc.writeMem(0xe88c, { 0xa4 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xff2, gbc.sp());
        EXPECT(0x4f5c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xe88c));
        // CB 06 0232
        gbc.setState(0x44a1, 0x954a, 0x8160, 0x8ad3, 0xdb, 0x8680, 0x0, 0x1);
        gbc.writeMem(0x44a1, { 0xcb, 0x6 });
        gbc.writeMem(0x8680, { 0xf7 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x954a, gbc.sp());
        EXPECT(0x44a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xef, gbc.readMem(0x8680));
        // CB 06 0234
        gbc.setState(0x11e1, 0xab09, 0x7510, 0xcb43, 0xc46d, 0xb130, 0x0, 0x0);
        gbc.writeMem(0x11e1, { 0xcb, 0x6 });
        gbc.writeMem(0xb130, { 0xeb });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xab09, gbc.sp());
        EXPECT(0x11e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd7, gbc.readMem(0xb130));
        // CB 06 0237
        gbc.setState(0x715a, 0x414a, 0x6590, 0xa5e0, 0xe6e1, 0xfaa8, 0x0, 0x1);
        gbc.writeMem(0x715a, { 0xcb, 0x6 });
        gbc.writeMem(0xfaa8, { 0x76 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x414a, gbc.sp());
        EXPECT(0x715c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xec, gbc.readMem(0xfaa8));
        // CB 06 023A
        gbc.setState(0x11ac, 0x901a, 0xab00, 0xb9bc, 0xd6e9, 0x976d, 0x1, 0x0);
        gbc.writeMem(0x11ac, { 0xcb, 0x6 });
        gbc.writeMem(0x976d, { 0xb7 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x901a, gbc.sp());
        EXPECT(0x11ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6f, gbc.readMem(0x976d));
        // CB 06 023B
        gbc.setState(0xa9d0, 0xb52e, 0xb500, 0xf363, 0xc9c6, 0xdd7a, 0x1, 0x0);
        gbc.writeMem(0xa9d0, { 0xcb, 0x6 });
        gbc.writeMem(0xdd7a, { 0x8d });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xb52e, gbc.sp());
        EXPECT(0xa9d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa9d0));
        EXPECT(0x6, gbc.readMem(0xa9d1));
        EXPECT(0x1b, gbc.readMem(0xdd7a));
        // CB 06 023E
        gbc.setState(0xef7a, 0x24e, 0x9b80, 0x24c7, 0xac52, 0xdce7, 0x1, 0x1);
        gbc.writeMem(0xdce7, { 0x61 });
        gbc.writeMem(0xef7a, { 0xcb, 0x6 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x24e, gbc.sp());
        EXPECT(0xef7c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xdce7));
        EXPECT(0xcb, gbc.readMem(0xef7a));
        EXPECT(0x6, gbc.readMem(0xef7b));
        // CB 06 0240
        gbc.setState(0x1ed4, 0x6d9d, 0x2be0, 0x219f, 0xcdd0, 0xda3b, 0x1, 0x0);
        gbc.writeMem(0x1ed4, { 0xcb, 0x6 });
        gbc.writeMem(0xda3b, { 0x10 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x6d9d, gbc.sp());
        EXPECT(0x1ed6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xda3b));
        // CB 06 0241
        gbc.setState(0x4fc7, 0xa37, 0x9830, 0x2b8e, 0x8a97, 0xc1a3, 0x0, 0x1);
        gbc.writeMem(0x4fc7, { 0xcb, 0x6 });
        gbc.writeMem(0xc1a3, { 0x6d });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xa37, gbc.sp());
        EXPECT(0x4fc9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xc1a3));
        // CB 06 0242
        gbc.setState(0x19ce, 0xc392, 0xe620, 0x8f43, 0xf497, 0xc8eb, 0x0, 0x0);
        gbc.writeMem(0x19ce, { 0xcb, 0x6 });
        gbc.writeMem(0xc8eb, { 0x63 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xc392, gbc.sp());
        EXPECT(0x19d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xc8eb));
        // CB 06 0244
        gbc.setState(0xa052, 0xbaac, 0xdf20, 0x58b8, 0x7eed, 0x9bdc, 0x1, 0x0);
        gbc.writeMem(0x9bdc, { 0x43 });
        gbc.writeMem(0xa052, { 0xcb, 0x6 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xbaac, gbc.sp());
        EXPECT(0xa054, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0x9bdc));
        EXPECT(0xcb, gbc.readMem(0xa052));
        EXPECT(0x6, gbc.readMem(0xa053));
        // CB 06 0246
        gbc.setState(0xc05c, 0xcd23, 0x8090, 0x903a, 0x503d, 0xc763, 0x1, 0x1);
        gbc.writeMem(0xc05c, { 0xcb, 0x6 });
        gbc.writeMem(0xc763, { 0xfd });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xcd23, gbc.sp());
        EXPECT(0xc05e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc05c));
        EXPECT(0x6, gbc.readMem(0xc05d));
        EXPECT(0xfb, gbc.readMem(0xc763));
        // CB 06 0247
        gbc.setState(0x63c2, 0x2e79, 0x4b90, 0xa629, 0xd387, 0xc56e, 0x0, 0x1);
        gbc.writeMem(0x63c2, { 0xcb, 0x6 });
        gbc.writeMem(0xc56e, { 0xd1 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x2e79, gbc.sp());
        EXPECT(0x63c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xc56e));
        // CB 06 024B
        gbc.setState(0xc384, 0x4652, 0x2c30, 0xa6bd, 0x3c15, 0xc5c8, 0x1, 0x0);
        gbc.writeMem(0xc384, { 0xcb, 0x6 });
        gbc.writeMem(0xc5c8, { 0xf });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x4652, gbc.sp());
        EXPECT(0xc386, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc384));
        EXPECT(0x6, gbc.readMem(0xc385));
        EXPECT(0x1e, gbc.readMem(0xc5c8));
        // CB 06 024D
        gbc.setState(0xed53, 0xac16, 0xc860, 0x3e97, 0xfaef, 0xba97, 0x0, 0x1);
        gbc.writeMem(0xba97, { 0xe5 });
        gbc.writeMem(0xed53, { 0xcb, 0x6 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xac16, gbc.sp());
        EXPECT(0xed55, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba97));
        EXPECT(0xcb, gbc.readMem(0xed53));
        EXPECT(0x6, gbc.readMem(0xed54));
        // CB 06 024F
        gbc.setState(0x3135, 0x94ce, 0xc8b0, 0x22f7, 0x98ee, 0xcc27, 0x1, 0x0);
        gbc.writeMem(0x3135, { 0xcb, 0x6 });
        gbc.writeMem(0xcc27, { 0xdf });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x94ce, gbc.sp());
        EXPECT(0x3137, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xcc27));
        // CB 06 0251
        gbc.setState(0xa60d, 0xf828, 0x7370, 0x5bd5, 0xcbae, 0x8dd9, 0x0, 0x1);
        gbc.writeMem(0x8dd9, { 0xe0 });
        gbc.writeMem(0xa60d, { 0xcb, 0x6 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xf828, gbc.sp());
        EXPECT(0xa60f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0x8dd9));
        EXPECT(0xcb, gbc.readMem(0xa60d));
        EXPECT(0x6, gbc.readMem(0xa60e));
        // CB 06 0254
        gbc.setState(0x6611, 0xb993, 0x58f0, 0xbc0, 0xe3ec, 0x7afc, 0x0, 0x1);
        gbc.writeMem(0x6611, { 0xcb, 0x6 });
        gbc.writeMem(0x7afc, { 0x0 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xb993, gbc.sp());
        EXPECT(0x6613, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 06 0255
        gbc.setState(0x6c4b, 0xb1ba, 0x1300, 0x391e, 0xd448, 0xc32c, 0x0, 0x0);
        gbc.writeMem(0x6c4b, { 0xcb, 0x6 });
        gbc.writeMem(0xc32c, { 0x57 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xb1ba, gbc.sp());
        EXPECT(0x6c4d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xae, gbc.readMem(0xc32c));
        // CB 06 0257
        gbc.setState(0x6033, 0x369f, 0xea30, 0x4f21, 0xfb16, 0x9082, 0x0, 0x1);
        gbc.writeMem(0x6033, { 0xcb, 0x6 });
        gbc.writeMem(0x9082, { 0xbc });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x369f, gbc.sp());
        EXPECT(0x6035, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0x9082));
        // CB 06 0259
        gbc.setState(0x6a17, 0x37b7, 0xc980, 0xab81, 0x1feb, 0x9694, 0x1, 0x1);
        gbc.writeMem(0x6a17, { 0xcb, 0x6 });
        gbc.writeMem(0x9694, { 0xc1 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x37b7, gbc.sp());
        EXPECT(0x6a19, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x83, gbc.readMem(0x9694));
        // CB 06 025A
        gbc.setState(0x397e, 0xee37, 0x6780, 0xb391, 0x9ad6, 0xec06, 0x1, 0x1);
        gbc.writeMem(0x397e, { 0xcb, 0x6 });
        gbc.writeMem(0xec06, { 0x8a });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xee37, gbc.sp());
        EXPECT(0x3980, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xec06));
        // CB 06 025B
        gbc.setState(0x1d49, 0xa3ba, 0x3bf0, 0xe120, 0x4d93, 0xe56d, 0x1, 0x1);
        gbc.writeMem(0x1d49, { 0xcb, 0x6 });
        gbc.writeMem(0xe56d, { 0x5e });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xa3ba, gbc.sp());
        EXPECT(0x1d4b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xe56d));
        // CB 06 025C
        gbc.setState(0x7762, 0xe44e, 0x8470, 0x66d0, 0x3ead, 0xa507, 0x0, 0x1);
        gbc.writeMem(0x7762, { 0xcb, 0x6 });
        gbc.writeMem(0xa507, { 0xfc });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xe44e, gbc.sp());
        EXPECT(0x7764, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf9, gbc.readMem(0xa507));
        // CB 06 025F
        gbc.setState(0x62d3, 0x46f, 0xfcb0, 0x2a07, 0x6283, 0xda7e, 0x1, 0x0);
        gbc.writeMem(0x62d3, { 0xcb, 0x6 });
        gbc.writeMem(0xda7e, { 0x11 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x46f, gbc.sp());
        EXPECT(0x62d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x22, gbc.readMem(0xda7e));
        // CB 06 0260
        gbc.setState(0xc9a1, 0xd39a, 0x9e0, 0xa159, 0x4cad, 0xedc9, 0x0, 0x0);
        gbc.writeMem(0xc9a1, { 0xcb, 0x6 });
        gbc.writeMem(0xedc9, { 0x23 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xd39a, gbc.sp());
        EXPECT(0xc9a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc9a1));
        EXPECT(0x6, gbc.readMem(0xc9a2));
        EXPECT(0x46, gbc.readMem(0xedc9));
        // CB 06 0261
        gbc.setState(0x469, 0x7b8, 0x3720, 0x61b6, 0x973d, 0xa615, 0x1, 0x0);
        gbc.writeMem(0x469, { 0xcb, 0x6 });
        gbc.writeMem(0xa615, { 0x92 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x7b8, gbc.sp());
        EXPECT(0x46b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xa615));
        // CB 06 0263
        gbc.setState(0xc137, 0xadc8, 0xde60, 0x6c0e, 0x7bbf, 0x8986, 0x0, 0x1);
        gbc.writeMem(0x8986, { 0xea });
        gbc.writeMem(0xc137, { 0xcb, 0x6 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xadc8, gbc.sp());
        EXPECT(0xc139, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd5, gbc.readMem(0x8986));
        EXPECT(0xcb, gbc.readMem(0xc137));
        EXPECT(0x6, gbc.readMem(0xc138));
        // CB 06 0265
        gbc.setState(0xe61a, 0xcfd4, 0x9250, 0x6622, 0xb5a7, 0xb7a4, 0x1, 0x1);
        gbc.writeMem(0xb7a4, { 0xf8 });
        gbc.writeMem(0xe61a, { 0xcb, 0x6 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xcfd4, gbc.sp());
        EXPECT(0xe61c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xb7a4));
        EXPECT(0xcb, gbc.readMem(0xe61a));
        EXPECT(0x6, gbc.readMem(0xe61b));
        // CB 06 0266
        gbc.setState(0x2285, 0xf914, 0xabc0, 0xd33b, 0x4c72, 0x8d8c, 0x1, 0x1);
        gbc.writeMem(0x2285, { 0xcb, 0x6 });
        gbc.writeMem(0x8d8c, { 0xee });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xf914, gbc.sp());
        EXPECT(0x2287, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xdd, gbc.readMem(0x8d8c));
        // CB 06 0267
        gbc.setState(0x8ead, 0xc7ae, 0x58d0, 0x9625, 0xcb09, 0x921c, 0x1, 0x1);
        gbc.writeMem(0x8ead, { 0xcb, 0x6 });
        gbc.writeMem(0x921c, { 0xad });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xc7ae, gbc.sp());
        EXPECT(0x8eaf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ead));
        EXPECT(0x6, gbc.readMem(0x8eae));
        EXPECT(0x5b, gbc.readMem(0x921c));
        // CB 06 0268
        gbc.setState(0xbf1c, 0xed92, 0x5430, 0x60e3, 0xd8d5, 0x9527, 0x0, 0x0);
        gbc.writeMem(0x9527, { 0x50 });
        gbc.writeMem(0xbf1c, { 0xcb, 0x6 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xed92, gbc.sp());
        EXPECT(0xbf1e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0x9527));
        EXPECT(0xcb, gbc.readMem(0xbf1c));
        EXPECT(0x6, gbc.readMem(0xbf1d));
        // CB 06 0269
        gbc.setState(0xcc52, 0x9cb2, 0xba10, 0x5474, 0xdb7d, 0xf2e7, 0x1, 0x1);
        gbc.writeMem(0xcc52, { 0xcb, 0x6 });
        gbc.writeMem(0xf2e7, { 0x74 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x9cb2, gbc.sp());
        EXPECT(0xcc54, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc52));
        EXPECT(0x6, gbc.readMem(0xcc53));
        EXPECT(0xe8, gbc.readMem(0xf2e7));
        // CB 06 026A
        gbc.setState(0x218, 0x7ae2, 0x4f70, 0xe9e9, 0xf548, 0xd707, 0x1, 0x1);
        gbc.writeMem(0x218, { 0xcb, 0x6 });
        gbc.writeMem(0xd707, { 0x7a });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x7ae2, gbc.sp());
        EXPECT(0x21a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf4, gbc.readMem(0xd707));
        // CB 06 026B
        gbc.setState(0x1fa3, 0x9ab, 0xdca0, 0x420d, 0x7bb7, 0xf07f, 0x0, 0x1);
        gbc.writeMem(0x1fa3, { 0xcb, 0x6 });
        gbc.writeMem(0xf07f, { 0x49 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x9ab, gbc.sp());
        EXPECT(0x1fa5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xf07f));
        // CB 06 0272
        gbc.setState(0x8879, 0x6905, 0x16d0, 0xd803, 0x6d91, 0xf6ff, 0x0, 0x1);
        gbc.writeMem(0x8879, { 0xcb, 0x6 });
        gbc.writeMem(0xf6ff, { 0x72 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x6905, gbc.sp());
        EXPECT(0x887b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8879));
        EXPECT(0x6, gbc.readMem(0x887a));
        EXPECT(0xe4, gbc.readMem(0xf6ff));
        // CB 06 0273
        gbc.setState(0x9b41, 0xc5c1, 0xc2e0, 0xd3ea, 0x23a8, 0xe38d, 0x1, 0x0);
        gbc.writeMem(0x9b41, { 0xcb, 0x6 });
        gbc.writeMem(0xe38d, { 0x6a });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xc5c1, gbc.sp());
        EXPECT(0x9b43, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b41));
        EXPECT(0x6, gbc.readMem(0x9b42));
        EXPECT(0xd4, gbc.readMem(0xe38d));
        // CB 06 0274
        gbc.setState(0x2f95, 0xeb1d, 0xe140, 0xcd88, 0x1b71, 0xb161, 0x1, 0x0);
        gbc.writeMem(0x2f95, { 0xcb, 0x6 });
        gbc.writeMem(0xb161, { 0xef });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xeb1d, gbc.sp());
        EXPECT(0x2f97, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xdf, gbc.readMem(0xb161));
        // CB 06 0277
        gbc.setState(0xec3e, 0x817e, 0x57f0, 0x7364, 0xc551, 0x6063, 0x1, 0x0);
        gbc.writeMem(0x6063, { 0x0 });
        gbc.writeMem(0xec3e, { 0xcb, 0x6 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x817e, gbc.sp());
        EXPECT(0xec40, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec3e));
        EXPECT(0x6, gbc.readMem(0xec3f));
        // CB 06 0278
        gbc.setState(0x33dc, 0x4689, 0x4f60, 0x28a, 0x3a01, 0x9d13, 0x0, 0x1);
        gbc.writeMem(0x33dc, { 0xcb, 0x6 });
        gbc.writeMem(0x9d13, { 0x18 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x4689, gbc.sp());
        EXPECT(0x33de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x30, gbc.readMem(0x9d13));
        // CB 06 0279
        gbc.setState(0x568f, 0xdf60, 0xa4f0, 0x70d6, 0x3faf, 0xfb7a, 0x0, 0x1);
        gbc.writeMem(0x568f, { 0xcb, 0x6 });
        gbc.writeMem(0xfb7a, { 0x13 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xdf60, gbc.sp());
        EXPECT(0x5691, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xfb7a));
        // CB 06 027F
        gbc.setState(0xd518, 0x2471, 0x8fa0, 0x72bb, 0x4cef, 0xffcd, 0x0, 0x1);
        gbc.writeMem(0xd518, { 0xcb, 0x6 });
        gbc.writeMem(0xffcd, { 0x10 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x2471, gbc.sp());
        EXPECT(0xd51a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd518));
        EXPECT(0x6, gbc.readMem(0xd519));
        EXPECT(0x20, gbc.readMem(0xffcd));
        // CB 06 0281
        gbc.setState(0x7b11, 0x536c, 0xe250, 0xb417, 0xc07, 0xd437, 0x0, 0x0);
        gbc.writeMem(0x7b11, { 0xcb, 0x6 });
        gbc.writeMem(0xd437, { 0x2 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x536c, gbc.sp());
        EXPECT(0x7b13, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xd437));
        // CB 06 0282
        gbc.setState(0x5678, 0xd65d, 0x4550, 0xab99, 0xb244, 0xa887, 0x1, 0x1);
        gbc.writeMem(0x5678, { 0xcb, 0x6 });
        gbc.writeMem(0xa887, { 0xa });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xd65d, gbc.sp());
        EXPECT(0x567a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xa887));
        // CB 06 0285
        gbc.setState(0x470d, 0x1d3c, 0xab40, 0xe979, 0x8511, 0xade8, 0x1, 0x0);
        gbc.writeMem(0x470d, { 0xcb, 0x6 });
        gbc.writeMem(0xade8, { 0xd6 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x1d3c, gbc.sp());
        EXPECT(0x470f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xad, gbc.readMem(0xade8));
        // CB 06 0286
        gbc.setState(0x7682, 0x22a0, 0x81b0, 0xb109, 0xceb1, 0xd383, 0x0, 0x1);
        gbc.writeMem(0x7682, { 0xcb, 0x6 });
        gbc.writeMem(0xd383, { 0x4f });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x22a0, gbc.sp());
        EXPECT(0x7684, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xd383));
        // CB 06 0287
        gbc.setState(0x8c34, 0x82c1, 0x400, 0xeb08, 0x8eb7, 0xd069, 0x1, 0x0);
        gbc.writeMem(0x8c34, { 0xcb, 0x6 });
        gbc.writeMem(0xd069, { 0xab });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x82c1, gbc.sp());
        EXPECT(0x8c36, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c34));
        EXPECT(0x6, gbc.readMem(0x8c35));
        EXPECT(0x57, gbc.readMem(0xd069));
        // CB 06 028B
        gbc.setState(0x7d5d, 0xf65f, 0xcfe0, 0x3f06, 0x1e9a, 0xf084, 0x1, 0x0);
        gbc.writeMem(0x7d5d, { 0xcb, 0x6 });
        gbc.writeMem(0xf084, { 0x60 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xf65f, gbc.sp());
        EXPECT(0x7d5f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc0, gbc.readMem(0xf084));
        // CB 06 028C
        gbc.setState(0x12b3, 0x416f, 0x95a0, 0x8e9a, 0x178a, 0xc203, 0x1, 0x0);
        gbc.writeMem(0x12b3, { 0xcb, 0x6 });
        gbc.writeMem(0xc203, { 0xbf });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x416f, gbc.sp());
        EXPECT(0x12b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7f, gbc.readMem(0xc203));
        // CB 06 028E
        gbc.setState(0x9f6b, 0x8b65, 0x5110, 0xf094, 0xe22c, 0xfea2, 0x0, 0x1);
        gbc.writeMem(0x9f6b, { 0xcb, 0x6 });
        gbc.writeMem(0xfea2, { 0x28 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x8b65, gbc.sp());
        EXPECT(0x9f6d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f6b));
        EXPECT(0x6, gbc.readMem(0x9f6c));
        EXPECT(0x50, gbc.readMem(0xfea2));
        // CB 06 0290
        gbc.setState(0xd25, 0xf7e5, 0x6180, 0x18b1, 0x9e88, 0xb486, 0x1, 0x1);
        gbc.writeMem(0xd25, { 0xcb, 0x6 });
        gbc.writeMem(0xb486, { 0x47 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xf7e5, gbc.sp());
        EXPECT(0xd27, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8e, gbc.readMem(0xb486));
        // CB 06 0292
        gbc.setState(0xe6d9, 0x73d3, 0xa370, 0xdc44, 0x27e, 0xf3df, 0x1, 0x1);
        gbc.writeMem(0xe6d9, { 0xcb, 0x6 });
        gbc.writeMem(0xf3df, { 0xf8 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x73d3, gbc.sp());
        EXPECT(0xe6db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe6d9));
        EXPECT(0x6, gbc.readMem(0xe6da));
        EXPECT(0xf1, gbc.readMem(0xf3df));
        // CB 06 0293
        gbc.setState(0x5c0e, 0xfedf, 0xaad0, 0xa4c6, 0x1015, 0xc6c4, 0x1, 0x0);
        gbc.writeMem(0x5c0e, { 0xcb, 0x6 });
        gbc.writeMem(0xc6c4, { 0xcf });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xfedf, gbc.sp());
        EXPECT(0x5c10, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xc6c4));
        // CB 06 0297
        gbc.setState(0x6d00, 0x742f, 0x6ce0, 0x1fa5, 0xac82, 0xdd1c, 0x0, 0x0);
        gbc.writeMem(0x6d00, { 0xcb, 0x6 });
        gbc.writeMem(0xdd1c, { 0xa2 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x742f, gbc.sp());
        EXPECT(0x6d02, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x45, gbc.readMem(0xdd1c));
        // CB 06 0299
        gbc.setState(0x60a4, 0xf990, 0x8fc0, 0x19d9, 0x552, 0x81dc, 0x1, 0x0);
        gbc.writeMem(0x60a4, { 0xcb, 0x6 });
        gbc.writeMem(0x81dc, { 0x4c });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xf990, gbc.sp());
        EXPECT(0x60a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0x81dc));
        // CB 06 029A
        gbc.setState(0x9a33, 0x2699, 0x9770, 0x5e9b, 0xb0ac, 0xdb4a, 0x0, 0x1);
        gbc.writeMem(0x9a33, { 0xcb, 0x6 });
        gbc.writeMem(0xdb4a, { 0x95 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x2699, gbc.sp());
        EXPECT(0x9a35, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a33));
        EXPECT(0x6, gbc.readMem(0x9a34));
        EXPECT(0x2b, gbc.readMem(0xdb4a));
        // CB 06 029B
        gbc.setState(0x43dd, 0xf537, 0x23d0, 0xe1f7, 0x7e0f, 0x9bf8, 0x1, 0x1);
        gbc.writeMem(0x43dd, { 0xcb, 0x6 });
        gbc.writeMem(0x9bf8, { 0xb7 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xf537, gbc.sp());
        EXPECT(0x43df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6f, gbc.readMem(0x9bf8));
        // CB 06 029F
        gbc.setState(0xbda0, 0x6930, 0xb080, 0xd3e8, 0x7f52, 0x9a21, 0x0, 0x0);
        gbc.writeMem(0x9a21, { 0xa5 });
        gbc.writeMem(0xbda0, { 0xcb, 0x6 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x6930, gbc.sp());
        EXPECT(0xbda2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0x9a21));
        EXPECT(0xcb, gbc.readMem(0xbda0));
        EXPECT(0x6, gbc.readMem(0xbda1));
        // CB 06 02A2
        gbc.setState(0x67d2, 0xd47e, 0x2d90, 0xe228, 0x9c18, 0x9f02, 0x1, 0x0);
        gbc.writeMem(0x67d2, { 0xcb, 0x6 });
        gbc.writeMem(0x9f02, { 0xac });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xd47e, gbc.sp());
        EXPECT(0x67d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x59, gbc.readMem(0x9f02));
        // CB 06 02A3
        gbc.setState(0x1033, 0x8626, 0x2270, 0x4fff, 0xfc57, 0xd834, 0x1, 0x0);
        gbc.writeMem(0x1033, { 0xcb, 0x6 });
        gbc.writeMem(0xd834, { 0x47 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x8626, gbc.sp());
        EXPECT(0x1035, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8e, gbc.readMem(0xd834));
        // CB 06 02A7
        gbc.setState(0x3020, 0x6be7, 0xebd0, 0xb119, 0xdc8f, 0xb1ef, 0x1, 0x1);
        gbc.writeMem(0x3020, { 0xcb, 0x6 });
        gbc.writeMem(0xb1ef, { 0x6e });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x6be7, gbc.sp());
        EXPECT(0x3022, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xdc, gbc.readMem(0xb1ef));
        // CB 06 02A8
        gbc.setState(0xd84e, 0x768e, 0x1430, 0xf171, 0x398d, 0xc5c5, 0x0, 0x1);
        gbc.writeMem(0xc5c5, { 0x26 });
        gbc.writeMem(0xd84e, { 0xcb, 0x6 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x768e, gbc.sp());
        EXPECT(0xd850, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xc5c5));
        EXPECT(0xcb, gbc.readMem(0xd84e));
        EXPECT(0x6, gbc.readMem(0xd84f));
        // CB 06 02A9
        gbc.setState(0xdb86, 0x93fb, 0xc6f0, 0x9c8a, 0x5f1d, 0x8f05, 0x1, 0x1);
        gbc.writeMem(0x8f05, { 0x96 });
        gbc.writeMem(0xdb86, { 0xcb, 0x6 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x93fb, gbc.sp());
        EXPECT(0xdb88, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0x8f05));
        EXPECT(0xcb, gbc.readMem(0xdb86));
        EXPECT(0x6, gbc.readMem(0xdb87));
        // CB 06 02AA
        gbc.setState(0xeaf3, 0xae9d, 0xd370, 0x1b06, 0x5a9e, 0xcbff, 0x1, 0x1);
        gbc.writeMem(0xcbff, { 0x65 });
        gbc.writeMem(0xeaf3, { 0xcb, 0x6 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xae9d, gbc.sp());
        EXPECT(0xeaf5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xca, gbc.readMem(0xcbff));
        EXPECT(0xcb, gbc.readMem(0xeaf3));
        EXPECT(0x6, gbc.readMem(0xeaf4));
        // CB 06 02AB
        gbc.setState(0x2031, 0xa3e0, 0x9f60, 0xc7ab, 0x9776, 0xd5a3, 0x1, 0x0);
        gbc.writeMem(0x2031, { 0xcb, 0x6 });
        gbc.writeMem(0xd5a3, { 0x3b });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xa3e0, gbc.sp());
        EXPECT(0x2033, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xd5a3));
        // CB 06 02AC
        gbc.setState(0x470e, 0x900, 0x9a0, 0x4f59, 0xacfa, 0xc34e, 0x0, 0x0);
        gbc.writeMem(0x470e, { 0xcb, 0x6 });
        gbc.writeMem(0xc34e, { 0xdc });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x900, gbc.sp());
        EXPECT(0x4710, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xc34e));
        // CB 06 02AD
        gbc.setState(0xe38a, 0xb58c, 0x9bb0, 0xe4dd, 0x6d28, 0x979b, 0x1, 0x0);
        gbc.writeMem(0x979b, { 0x87 });
        gbc.writeMem(0xe38a, { 0xcb, 0x6 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xb58c, gbc.sp());
        EXPECT(0xe38c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf, gbc.readMem(0x979b));
        EXPECT(0xcb, gbc.readMem(0xe38a));
        EXPECT(0x6, gbc.readMem(0xe38b));
        // CB 06 02AE
        gbc.setState(0xbcb7, 0xcec8, 0xc5c0, 0x3a29, 0x578, 0xf115, 0x0, 0x1);
        gbc.writeMem(0xbcb7, { 0xcb, 0x6 });
        gbc.writeMem(0xf115, { 0x7c });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xcec8, gbc.sp());
        EXPECT(0xbcb9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbcb7));
        EXPECT(0x6, gbc.readMem(0xbcb8));
        EXPECT(0xf8, gbc.readMem(0xf115));
        // CB 06 02AF
        gbc.setState(0x1d5d, 0x65dd, 0xabc0, 0x4ad0, 0xc171, 0xd97d, 0x0, 0x0);
        gbc.writeMem(0x1d5d, { 0xcb, 0x6 });
        gbc.writeMem(0xd97d, { 0x8a });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x65dd, gbc.sp());
        EXPECT(0x1d5f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xd97d));
        // CB 06 02B1
        gbc.setState(0x1793, 0x3637, 0x1590, 0xd290, 0x965d, 0xe5d6, 0x0, 0x1);
        gbc.writeMem(0x1793, { 0xcb, 0x6 });
        gbc.writeMem(0xe5d6, { 0x49 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x3637, gbc.sp());
        EXPECT(0x1795, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xe5d6));
        // CB 06 02B2
        gbc.setState(0x90c8, 0x2ee1, 0x8fa0, 0xb79, 0x47e1, 0xec51, 0x1, 0x1);
        gbc.writeMem(0x90c8, { 0xcb, 0x6 });
        gbc.writeMem(0xec51, { 0xd2 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x2ee1, gbc.sp());
        EXPECT(0x90ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x90c8));
        EXPECT(0x6, gbc.readMem(0x90c9));
        EXPECT(0xa5, gbc.readMem(0xec51));
        // CB 06 02B3
        gbc.setState(0x2621, 0xee15, 0xe220, 0x5cca, 0xa482, 0x9a26, 0x0, 0x0);
        gbc.writeMem(0x2621, { 0xcb, 0x6 });
        gbc.writeMem(0x9a26, { 0x8e });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xee15, gbc.sp());
        EXPECT(0x2623, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0x9a26));
        // CB 06 02B6
        gbc.setState(0xdae9, 0xa3d2, 0xa4c0, 0xfc60, 0xc07, 0xed01, 0x0, 0x0);
        gbc.writeMem(0xdae9, { 0xcb, 0x6 });
        gbc.writeMem(0xed01, { 0x84 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xa3d2, gbc.sp());
        EXPECT(0xdaeb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdae9));
        EXPECT(0x6, gbc.readMem(0xdaea));
        EXPECT(0x9, gbc.readMem(0xed01));
        // CB 06 02B8
        gbc.setState(0xd172, 0xad72, 0xdc80, 0xd068, 0xc58c, 0xb65d, 0x0, 0x1);
        gbc.writeMem(0xb65d, { 0x4b });
        gbc.writeMem(0xd172, { 0xcb, 0x6 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xad72, gbc.sp());
        EXPECT(0xd174, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x96, gbc.readMem(0xb65d));
        EXPECT(0xcb, gbc.readMem(0xd172));
        EXPECT(0x6, gbc.readMem(0xd173));
        // CB 06 02B9
        gbc.setState(0xc8e7, 0x5c41, 0xe4a0, 0x2d72, 0x9ea3, 0xc367, 0x1, 0x1);
        gbc.writeMem(0xc367, { 0x85 });
        gbc.writeMem(0xc8e7, { 0xcb, 0x6 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x5c41, gbc.sp());
        EXPECT(0xc8e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xc367));
        EXPECT(0xcb, gbc.readMem(0xc8e7));
        EXPECT(0x6, gbc.readMem(0xc8e8));
        // CB 06 02BA
        gbc.setState(0xa8cc, 0x9940, 0xf080, 0x72ca, 0xe598, 0xefcf, 0x0, 0x0);
        gbc.writeMem(0xa8cc, { 0xcb, 0x6 });
        gbc.writeMem(0xefcf, { 0x4e });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x9940, gbc.sp());
        EXPECT(0xa8ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa8cc));
        EXPECT(0x6, gbc.readMem(0xa8cd));
        EXPECT(0x9c, gbc.readMem(0xefcf));
        // CB 06 02BD
        gbc.setState(0x58b3, 0x55fe, 0xbf50, 0x2d28, 0x8a0a, 0xf989, 0x0, 0x1);
        gbc.writeMem(0x58b3, { 0xcb, 0x6 });
        gbc.writeMem(0xf989, { 0x6f });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x55fe, gbc.sp());
        EXPECT(0x58b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xde, gbc.readMem(0xf989));
        // CB 06 02C2
        gbc.setState(0x6cd6, 0x1f5, 0xa130, 0x1d84, 0xd60e, 0xa286, 0x1, 0x0);
        gbc.writeMem(0x6cd6, { 0xcb, 0x6 });
        gbc.writeMem(0xa286, { 0x51 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x1f5, gbc.sp());
        EXPECT(0x6cd8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xa286));
        // CB 06 02C3
        gbc.setState(0x5aef, 0xf3ec, 0x6960, 0x9e8c, 0x68b4, 0xef9f, 0x0, 0x0);
        gbc.writeMem(0x5aef, { 0xcb, 0x6 });
        gbc.writeMem(0xef9f, { 0x4f });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xf3ec, gbc.sp());
        EXPECT(0x5af1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xef9f));
        // CB 06 02C5
        gbc.setState(0x8a85, 0x2b2b, 0x55a0, 0xc05a, 0xebbd, 0x995a, 0x1, 0x0);
        gbc.writeMem(0x8a85, { 0xcb, 0x6 });
        gbc.writeMem(0x995a, { 0xbe });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x2b2b, gbc.sp());
        EXPECT(0x8a87, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a85));
        EXPECT(0x6, gbc.readMem(0x8a86));
        EXPECT(0x7d, gbc.readMem(0x995a));
        // CB 06 02C8
        gbc.setState(0x267a, 0xfb4b, 0x7460, 0x529c, 0xf471, 0xb5dd, 0x0, 0x1);
        gbc.writeMem(0x267a, { 0xcb, 0x6 });
        gbc.writeMem(0xb5dd, { 0x8c });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xfb4b, gbc.sp());
        EXPECT(0x267c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xb5dd));
        // CB 06 02CA
        gbc.setState(0xe574, 0xfb59, 0x2f10, 0x1c83, 0x18b4, 0xe2e3, 0x0, 0x0);
        gbc.writeMem(0xe2e3, { 0xd9 });
        gbc.writeMem(0xe574, { 0xcb, 0x6 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xfb59, gbc.sp());
        EXPECT(0xe576, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xe2e3));
        EXPECT(0xcb, gbc.readMem(0xe574));
        EXPECT(0x6, gbc.readMem(0xe575));
        // CB 06 02CD
        gbc.setState(0x24a0, 0x5def, 0x90a0, 0x4b6f, 0x6b1a, 0xcd7a, 0x1, 0x0);
        gbc.writeMem(0x24a0, { 0xcb, 0x6 });
        gbc.writeMem(0xcd7a, { 0xa5 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x5def, gbc.sp());
        EXPECT(0x24a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xcd7a));
        // CB 06 02CE
        gbc.setState(0x6f8b, 0xedc0, 0x6e0, 0xdb8a, 0x8d36, 0xbd43, 0x0, 0x0);
        gbc.writeMem(0x6f8b, { 0xcb, 0x6 });
        gbc.writeMem(0xbd43, { 0xdb });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xedc0, gbc.sp());
        EXPECT(0x6f8d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xbd43));
        // CB 06 02D1
        gbc.setState(0xd518, 0x302e, 0x47a0, 0x6f9c, 0x36e5, 0xeba1, 0x0, 0x1);
        gbc.writeMem(0xd518, { 0xcb, 0x6 });
        gbc.writeMem(0xeba1, { 0x8a });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x302e, gbc.sp());
        EXPECT(0xd51a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd518));
        EXPECT(0x6, gbc.readMem(0xd519));
        EXPECT(0x15, gbc.readMem(0xeba1));
        // CB 06 02D2
        gbc.setState(0x1aa4, 0x32a1, 0x2580, 0x687c, 0xce14, 0xe031, 0x1, 0x0);
        gbc.writeMem(0x1aa4, { 0xcb, 0x6 });
        gbc.writeMem(0xe031, { 0x3 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x32a1, gbc.sp());
        EXPECT(0x1aa6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xe031));
        // CB 06 02D3
        gbc.setState(0xe43a, 0xbb44, 0xed0, 0xc96, 0x69e2, 0xbb91, 0x1, 0x1);
        gbc.writeMem(0xbb91, { 0x61 });
        gbc.writeMem(0xe43a, { 0xcb, 0x6 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xbb44, gbc.sp());
        EXPECT(0xe43c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xbb91));
        EXPECT(0xcb, gbc.readMem(0xe43a));
        EXPECT(0x6, gbc.readMem(0xe43b));
        // CB 06 02D4
        gbc.setState(0xcc, 0xf51c, 0x960, 0x61fc, 0xf3b0, 0xa4b0, 0x1, 0x0);
        gbc.writeMem(0xcc, { 0xcb, 0x6 });
        gbc.writeMem(0xa4b0, { 0x6b });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xf51c, gbc.sp());
        EXPECT(0xce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xa4b0));
        // CB 06 02D8
        gbc.setState(0x98a8, 0x52d5, 0xd520, 0x17e7, 0x7866, 0x8d74, 0x0, 0x0);
        gbc.writeMem(0x8d74, { 0x67 });
        gbc.writeMem(0x98a8, { 0xcb, 0x6 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x52d5, gbc.sp());
        EXPECT(0x98aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xce, gbc.readMem(0x8d74));
        EXPECT(0xcb, gbc.readMem(0x98a8));
        EXPECT(0x6, gbc.readMem(0x98a9));
        // CB 06 02D9
        gbc.setState(0x2f5, 0xea3, 0x1ed0, 0x1955, 0x454a, 0xa99f, 0x1, 0x0);
        gbc.writeMem(0x2f5, { 0xcb, 0x6 });
        gbc.writeMem(0xa99f, { 0xf7 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xea3, gbc.sp());
        EXPECT(0x2f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xef, gbc.readMem(0xa99f));
        // CB 06 02DA
        gbc.setState(0x31b1, 0x80fc, 0x6f60, 0x1d70, 0x7f37, 0xe587, 0x1, 0x0);
        gbc.writeMem(0x31b1, { 0xcb, 0x6 });
        gbc.writeMem(0xe587, { 0x0 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x80fc, gbc.sp());
        EXPECT(0x31b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xe587));
        // CB 06 02DD
        gbc.setState(0xa783, 0xca6d, 0xa1c0, 0x6cb7, 0xa3cc, 0xcd89, 0x0, 0x0);
        gbc.writeMem(0xa783, { 0xcb, 0x6 });
        gbc.writeMem(0xcd89, { 0xcc });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xca6d, gbc.sp());
        EXPECT(0xa785, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa783));
        EXPECT(0x6, gbc.readMem(0xa784));
        EXPECT(0x99, gbc.readMem(0xcd89));
        // CB 06 02E3
        gbc.setState(0x78af, 0x7a42, 0xec30, 0xf02b, 0xd98b, 0xed70, 0x1, 0x1);
        gbc.writeMem(0x78af, { 0xcb, 0x6 });
        gbc.writeMem(0xed70, { 0x51 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x7a42, gbc.sp());
        EXPECT(0x78b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xed70));
        // CB 06 02E4
        gbc.setState(0x71bb, 0xadf4, 0x460, 0x571e, 0x5865, 0xd88d, 0x1, 0x1);
        gbc.writeMem(0x71bb, { 0xcb, 0x6 });
        gbc.writeMem(0xd88d, { 0x10 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xadf4, gbc.sp());
        EXPECT(0x71bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xd88d));
        // CB 06 02E5
        gbc.setState(0xb9d1, 0x26fd, 0xeb20, 0x85bf, 0xd515, 0xb2c2, 0x1, 0x0);
        gbc.writeMem(0xb2c2, { 0x32 });
        gbc.writeMem(0xb9d1, { 0xcb, 0x6 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x26fd, gbc.sp());
        EXPECT(0xb9d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xb2c2));
        EXPECT(0xcb, gbc.readMem(0xb9d1));
        EXPECT(0x6, gbc.readMem(0xb9d2));
        // CB 06 02E6
        gbc.setState(0x7ce2, 0xe226, 0x5420, 0xbb5, 0x2d35, 0xec28, 0x0, 0x0);
        gbc.writeMem(0x7ce2, { 0xcb, 0x6 });
        gbc.writeMem(0xec28, { 0x66 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xe226, gbc.sp());
        EXPECT(0x7ce4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcc, gbc.readMem(0xec28));
        // CB 06 02E7
        gbc.setState(0x9fb3, 0xd785, 0x1320, 0xf902, 0x66d2, 0xdbb3, 0x0, 0x1);
        gbc.writeMem(0x9fb3, { 0xcb, 0x6 });
        gbc.writeMem(0xdbb3, { 0xe2 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xd785, gbc.sp());
        EXPECT(0x9fb5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9fb3));
        EXPECT(0x6, gbc.readMem(0x9fb4));
        EXPECT(0xc5, gbc.readMem(0xdbb3));
        // CB 06 02EB
        gbc.setState(0x4afe, 0xd7db, 0xa210, 0x4ba9, 0xeceb, 0xa165, 0x0, 0x0);
        gbc.writeMem(0x4afe, { 0xcb, 0x6 });
        gbc.writeMem(0xa165, { 0x55 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xd7db, gbc.sp());
        EXPECT(0x4b00, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xa165));
        // CB 06 02EC
        gbc.setState(0xeca6, 0x5813, 0x16f0, 0x4750, 0xae3a, 0xe6aa, 0x1, 0x1);
        gbc.writeMem(0xe6aa, { 0x97 });
        gbc.writeMem(0xeca6, { 0xcb, 0x6 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x5813, gbc.sp());
        EXPECT(0xeca8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xe6aa));
        EXPECT(0xcb, gbc.readMem(0xeca6));
        EXPECT(0x6, gbc.readMem(0xeca7));
        // CB 06 02EE
        gbc.setState(0x7580, 0x1969, 0x1110, 0x2e77, 0x61fe, 0xe331, 0x0, 0x0);
        gbc.writeMem(0x7580, { 0xcb, 0x6 });
        gbc.writeMem(0xe331, { 0x95 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x1969, gbc.sp());
        EXPECT(0x7582, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xe331));
        // CB 06 02F3
        gbc.setState(0x6d72, 0xfeca, 0x80b0, 0x37f1, 0x872, 0xfab8, 0x1, 0x1);
        gbc.writeMem(0x6d72, { 0xcb, 0x6 });
        gbc.writeMem(0xfab8, { 0x37 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xfeca, gbc.sp());
        EXPECT(0x6d74, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xfab8));
        // CB 06 02F5
        gbc.setState(0xcaf1, 0x6457, 0x56e0, 0x16d4, 0x930b, 0xc7d1, 0x1, 0x1);
        gbc.writeMem(0xc7d1, { 0xe1 });
        gbc.writeMem(0xcaf1, { 0xcb, 0x6 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x6457, gbc.sp());
        EXPECT(0xcaf3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xc7d1));
        EXPECT(0xcb, gbc.readMem(0xcaf1));
        EXPECT(0x6, gbc.readMem(0xcaf2));
        // CB 06 02F7
        gbc.setState(0xbe5, 0x5926, 0xad50, 0x11f1, 0x561a, 0xec17, 0x1, 0x0);
        gbc.writeMem(0xbe5, { 0xcb, 0x6 });
        gbc.writeMem(0xec17, { 0xd });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x5926, gbc.sp());
        EXPECT(0xbe7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xec17));
        // CB 06 02F8
        gbc.setState(0xbdcb, 0xf22a, 0xd3e0, 0x3cf3, 0xae37, 0xe524, 0x0, 0x1);
        gbc.writeMem(0xbdcb, { 0xcb, 0x6 });
        gbc.writeMem(0xe524, { 0x5b });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xf22a, gbc.sp());
        EXPECT(0xbdcd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbdcb));
        EXPECT(0x6, gbc.readMem(0xbdcc));
        EXPECT(0xb6, gbc.readMem(0xe524));
        // CB 06 02F9
        gbc.setState(0xb6c9, 0xb01, 0x1850, 0xa7c6, 0xc9bb, 0xbea0, 0x0, 0x1);
        gbc.writeMem(0xb6c9, { 0xcb, 0x6 });
        gbc.writeMem(0xbea0, { 0x6c });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xb01, gbc.sp());
        EXPECT(0xb6cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb6c9));
        EXPECT(0x6, gbc.readMem(0xb6ca));
        EXPECT(0xd8, gbc.readMem(0xbea0));
        // CB 06 02FA
        gbc.setState(0xd09b, 0xb5cd, 0x5280, 0x333f, 0x1455, 0x86d0, 0x0, 0x0);
        gbc.writeMem(0x86d0, { 0x1e });
        gbc.writeMem(0xd09b, { 0xcb, 0x6 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xb5cd, gbc.sp());
        EXPECT(0xd09d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0x86d0));
        EXPECT(0xcb, gbc.readMem(0xd09b));
        EXPECT(0x6, gbc.readMem(0xd09c));
        // CB 06 02FC
        gbc.setState(0x43ae, 0xaf89, 0x7780, 0x1426, 0x549a, 0xf7f5, 0x1, 0x0);
        gbc.writeMem(0x43ae, { 0xcb, 0x6 });
        gbc.writeMem(0xf7f5, { 0x51 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xaf89, gbc.sp());
        EXPECT(0x43b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xf7f5));
        // CB 06 02FD
        gbc.setState(0x5a80, 0xebaf, 0xf290, 0x2ab3, 0x53eb, 0xe9d7, 0x0, 0x1);
        gbc.writeMem(0x5a80, { 0xcb, 0x6 });
        gbc.writeMem(0xe9d7, { 0xad });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xebaf, gbc.sp());
        EXPECT(0x5a82, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xe9d7));
        // CB 06 0305
        gbc.setState(0x8869, 0x84f0, 0x86d0, 0x8d0f, 0x8b60, 0x9951, 0x1, 0x1);
        gbc.writeMem(0x8869, { 0xcb, 0x6 });
        gbc.writeMem(0x9951, { 0x1a });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x84f0, gbc.sp());
        EXPECT(0x886b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8869));
        EXPECT(0x6, gbc.readMem(0x886a));
        EXPECT(0x34, gbc.readMem(0x9951));
        // CB 06 0306
        gbc.setState(0x4a4e, 0x7a89, 0xfd0, 0x2638, 0xc280, 0xd04b, 0x0, 0x0);
        gbc.writeMem(0x4a4e, { 0xcb, 0x6 });
        gbc.writeMem(0xd04b, { 0x6c });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x7a89, gbc.sp());
        EXPECT(0x4a50, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd8, gbc.readMem(0xd04b));
        // CB 06 0308
        gbc.setState(0x8816, 0xffb3, 0x1de0, 0x1dc6, 0x387c, 0xe395, 0x1, 0x1);
        gbc.writeMem(0x8816, { 0xcb, 0x6 });
        gbc.writeMem(0xe395, { 0x5e });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xffb3, gbc.sp());
        EXPECT(0x8818, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8816));
        EXPECT(0x6, gbc.readMem(0x8817));
        EXPECT(0xbc, gbc.readMem(0xe395));
        // CB 06 030F
        gbc.setState(0x7e92, 0x5659, 0x1350, 0x3f5f, 0xaacc, 0x97a6, 0x0, 0x1);
        gbc.writeMem(0x7e92, { 0xcb, 0x6 });
        gbc.writeMem(0x97a6, { 0xb4 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x5659, gbc.sp());
        EXPECT(0x7e94, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0x97a6));
        // CB 06 0310
        gbc.setState(0x4414, 0x1007, 0x1110, 0x3df3, 0x7860, 0xc82c, 0x1, 0x0);
        gbc.writeMem(0x4414, { 0xcb, 0x6 });
        gbc.writeMem(0xc82c, { 0xd5 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x1007, gbc.sp());
        EXPECT(0x4416, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xab, gbc.readMem(0xc82c));
        // CB 06 0311
        gbc.setState(0xd412, 0x98b7, 0x17f0, 0xb6ef, 0xde4b, 0xb51d, 0x1, 0x1);
        gbc.writeMem(0xb51d, { 0x90 });
        gbc.writeMem(0xd412, { 0xcb, 0x6 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x98b7, gbc.sp());
        EXPECT(0xd414, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xb51d));
        EXPECT(0xcb, gbc.readMem(0xd412));
        EXPECT(0x6, gbc.readMem(0xd413));
        // CB 06 0312
        gbc.setState(0xcbde, 0xa910, 0x7590, 0xe4d6, 0x23f2, 0xf9a8, 0x0, 0x0);
        gbc.writeMem(0xcbde, { 0xcb, 0x6 });
        gbc.writeMem(0xf9a8, { 0x10 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xa910, gbc.sp());
        EXPECT(0xcbe0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcbde));
        EXPECT(0x6, gbc.readMem(0xcbdf));
        EXPECT(0x20, gbc.readMem(0xf9a8));
        // CB 06 0313
        gbc.setState(0xc226, 0xf1fe, 0x5930, 0xfae1, 0xb39a, 0x8a92, 0x0, 0x0);
        gbc.writeMem(0x8a92, { 0xa8 });
        gbc.writeMem(0xc226, { 0xcb, 0x6 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xf1fe, gbc.sp());
        EXPECT(0xc228, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0x8a92));
        EXPECT(0xcb, gbc.readMem(0xc226));
        EXPECT(0x6, gbc.readMem(0xc227));
        // CB 06 0314
        gbc.setState(0x4503, 0xbab, 0x6a20, 0xd136, 0xba90, 0xfee1, 0x1, 0x0);
        gbc.writeMem(0x4503, { 0xcb, 0x6 });
        gbc.writeMem(0xfee1, { 0x9 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xbab, gbc.sp());
        EXPECT(0x4505, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x12, gbc.readMem(0xfee1));
        // CB 06 0315
        gbc.setState(0xd883, 0xded3, 0x2ab0, 0x11d0, 0xc21a, 0xabc1, 0x1, 0x1);
        gbc.writeMem(0xabc1, { 0x3e });
        gbc.writeMem(0xd883, { 0xcb, 0x6 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xded3, gbc.sp());
        EXPECT(0xd885, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7c, gbc.readMem(0xabc1));
        EXPECT(0xcb, gbc.readMem(0xd883));
        EXPECT(0x6, gbc.readMem(0xd884));
        // CB 06 0317
        gbc.setState(0x3566, 0x633f, 0xce70, 0x6068, 0x9e96, 0xb340, 0x1, 0x1);
        gbc.writeMem(0x3566, { 0xcb, 0x6 });
        gbc.writeMem(0xb340, { 0x59 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x633f, gbc.sp());
        EXPECT(0x3568, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xb340));
        // CB 06 0318
        gbc.setState(0x386c, 0x3b30, 0x6e30, 0xc775, 0xcbff, 0xdd94, 0x1, 0x0);
        gbc.writeMem(0x386c, { 0xcb, 0x6 });
        gbc.writeMem(0xdd94, { 0x51 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x3b30, gbc.sp());
        EXPECT(0x386e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xdd94));
        // CB 06 0319
        gbc.setState(0xb191, 0x805a, 0x1610, 0xdce6, 0xe917, 0xb622, 0x1, 0x1);
        gbc.writeMem(0xb191, { 0xcb, 0x6 });
        gbc.writeMem(0xb622, { 0xbd });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x805a, gbc.sp());
        EXPECT(0xb193, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb191));
        EXPECT(0x6, gbc.readMem(0xb192));
        EXPECT(0x7b, gbc.readMem(0xb622));
        // CB 06 031F
        gbc.setState(0x3b1f, 0xf024, 0x74d0, 0xc5e8, 0xbc50, 0xea2a, 0x0, 0x0);
        gbc.writeMem(0x3b1f, { 0xcb, 0x6 });
        gbc.writeMem(0xea2a, { 0x8d });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xf024, gbc.sp());
        EXPECT(0x3b21, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1b, gbc.readMem(0xea2a));
        // CB 06 0320
        gbc.setState(0xe37b, 0x1981, 0xf920, 0xfccb, 0x4fce, 0xe192, 0x1, 0x1);
        gbc.writeMem(0xe192, { 0x0 });
        gbc.writeMem(0xe37b, { 0xcb, 0x6 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x1981, gbc.sp());
        EXPECT(0xe37d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xe192));
        EXPECT(0xcb, gbc.readMem(0xe37b));
        EXPECT(0x6, gbc.readMem(0xe37c));
        // CB 06 0321
        gbc.setState(0x134f, 0xd709, 0xdb80, 0x9c83, 0xd08, 0xa8ed, 0x0, 0x1);
        gbc.writeMem(0x134f, { 0xcb, 0x6 });
        gbc.writeMem(0xa8ed, { 0xc });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xd709, gbc.sp());
        EXPECT(0x1351, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x18, gbc.readMem(0xa8ed));
        // CB 06 0322
        gbc.setState(0x23b9, 0x73e4, 0xa260, 0x2283, 0xccea, 0xe798, 0x1, 0x0);
        gbc.writeMem(0x23b9, { 0xcb, 0x6 });
        gbc.writeMem(0xe798, { 0x23 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x73e4, gbc.sp());
        EXPECT(0x23bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x46, gbc.readMem(0xe798));
        // CB 06 0323
        gbc.setState(0xc2ae, 0xf3a4, 0xae80, 0xd53a, 0x6575, 0xd17e, 0x1, 0x0);
        gbc.writeMem(0xc2ae, { 0xcb, 0x6 });
        gbc.writeMem(0xd17e, { 0xb7 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xf3a4, gbc.sp());
        EXPECT(0xc2b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc2ae));
        EXPECT(0x6, gbc.readMem(0xc2af));
        EXPECT(0x6f, gbc.readMem(0xd17e));
        // CB 06 0325
        gbc.setState(0xc6d1, 0x45d6, 0x2d20, 0x1f1a, 0x4596, 0xee73, 0x1, 0x0);
        gbc.writeMem(0xc6d1, { 0xcb, 0x6 });
        gbc.writeMem(0xee73, { 0x92 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x45d6, gbc.sp());
        EXPECT(0xc6d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc6d1));
        EXPECT(0x6, gbc.readMem(0xc6d2));
        EXPECT(0x25, gbc.readMem(0xee73));
        // CB 06 0326
        gbc.setState(0xdf05, 0x74ef, 0x3c60, 0xa607, 0x513b, 0xb5fb, 0x1, 0x1);
        gbc.writeMem(0xb5fb, { 0xd6 });
        gbc.writeMem(0xdf05, { 0xcb, 0x6 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x74ef, gbc.sp());
        EXPECT(0xdf07, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xad, gbc.readMem(0xb5fb));
        EXPECT(0xcb, gbc.readMem(0xdf05));
        EXPECT(0x6, gbc.readMem(0xdf06));
        // CB 06 0328
        gbc.setState(0x7999, 0xe2af, 0xd190, 0x3800, 0xf938, 0xc982, 0x0, 0x0);
        gbc.writeMem(0x7999, { 0xcb, 0x6 });
        gbc.writeMem(0xc982, { 0x18 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xe2af, gbc.sp());
        EXPECT(0x799b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x30, gbc.readMem(0xc982));
        // CB 06 032C
        gbc.setState(0x4f2d, 0x50ad, 0x15c0, 0xc61a, 0x58b8, 0xa8a5, 0x0, 0x0);
        gbc.writeMem(0x4f2d, { 0xcb, 0x6 });
        gbc.writeMem(0xa8a5, { 0xc7 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x50ad, gbc.sp());
        EXPECT(0x4f2f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xa8a5));
        // CB 06 032D
        gbc.setState(0x719d, 0xf542, 0xf500, 0xf4a0, 0x2a2a, 0xfc32, 0x0, 0x1);
        gbc.writeMem(0x719d, { 0xcb, 0x6 });
        gbc.writeMem(0xfc32, { 0x6c });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xf542, gbc.sp());
        EXPECT(0x719f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd8, gbc.readMem(0xfc32));
        // CB 06 0330
        gbc.setState(0x9279, 0xea06, 0x4960, 0xc3fb, 0x3fd8, 0x874b, 0x0, 0x0);
        gbc.writeMem(0x874b, { 0x7a });
        gbc.writeMem(0x9279, { 0xcb, 0x6 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xea06, gbc.sp());
        EXPECT(0x927b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf4, gbc.readMem(0x874b));
        EXPECT(0xcb, gbc.readMem(0x9279));
        EXPECT(0x6, gbc.readMem(0x927a));
        // CB 06 0331
        gbc.setState(0x1eed, 0x6170, 0xef20, 0x936a, 0x4fc1, 0xe402, 0x1, 0x0);
        gbc.writeMem(0x1eed, { 0xcb, 0x6 });
        gbc.writeMem(0xe402, { 0x89 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x6170, gbc.sp());
        EXPECT(0x1eef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xe402));
        // CB 06 0335
        gbc.setState(0x7fa7, 0x3c1a, 0x3c10, 0x354d, 0xec2, 0xc0b2, 0x0, 0x0);
        gbc.writeMem(0x7fa7, { 0xcb, 0x6 });
        gbc.writeMem(0xc0b2, { 0xc1 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x3c1a, gbc.sp());
        EXPECT(0x7fa9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x83, gbc.readMem(0xc0b2));
        // CB 06 0337
        gbc.setState(0x3951, 0xa3f6, 0x59b0, 0x486, 0x5c49, 0xbc8d, 0x0, 0x1);
        gbc.writeMem(0x3951, { 0xcb, 0x6 });
        gbc.writeMem(0xbc8d, { 0x73 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xa3f6, gbc.sp());
        EXPECT(0x3953, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xbc8d));
        // CB 06 0338
        gbc.setState(0x6ea8, 0x3883, 0x44d0, 0x7d21, 0x2945, 0xb8eb, 0x0, 0x0);
        gbc.writeMem(0x6ea8, { 0xcb, 0x6 });
        gbc.writeMem(0xb8eb, { 0xc8 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x3883, gbc.sp());
        EXPECT(0x6eaa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xb8eb));
        // CB 06 033B
        gbc.setState(0x9216, 0x21c7, 0x78a0, 0x4df8, 0xf1a2, 0xb056, 0x0, 0x0);
        gbc.writeMem(0x9216, { 0xcb, 0x6 });
        gbc.writeMem(0xb056, { 0xdc });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x21c7, gbc.sp());
        EXPECT(0x9218, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9216));
        EXPECT(0x6, gbc.readMem(0x9217));
        EXPECT(0xb9, gbc.readMem(0xb056));
        // CB 06 033C
        gbc.setState(0xa583, 0x1e5b, 0x4c90, 0x5526, 0x1d32, 0xa712, 0x1, 0x0);
        gbc.writeMem(0xa583, { 0xcb, 0x6 });
        gbc.writeMem(0xa712, { 0xd0 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x1e5b, gbc.sp());
        EXPECT(0xa585, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa583));
        EXPECT(0x6, gbc.readMem(0xa584));
        EXPECT(0xa1, gbc.readMem(0xa712));
        // CB 06 033D
        gbc.setState(0x296f, 0x7f40, 0x34e0, 0x78ca, 0x9e84, 0xc5e2, 0x0, 0x0);
        gbc.writeMem(0x296f, { 0xcb, 0x6 });
        gbc.writeMem(0xc5e2, { 0x7a });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x7f40, gbc.sp());
        EXPECT(0x2971, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf4, gbc.readMem(0xc5e2));
        // CB 06 0340
        gbc.setState(0xea77, 0xd6d6, 0x79d0, 0x6d12, 0x43c3, 0xc820, 0x1, 0x1);
        gbc.writeMem(0xc820, { 0xec });
        gbc.writeMem(0xea77, { 0xcb, 0x6 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xd6d6, gbc.sp());
        EXPECT(0xea79, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xc820));
        EXPECT(0xcb, gbc.readMem(0xea77));
        EXPECT(0x6, gbc.readMem(0xea78));
        // CB 06 0341
        gbc.setState(0xe8e4, 0x84a2, 0xf110, 0x66b, 0x40f6, 0xe355, 0x1, 0x1);
        gbc.writeMem(0xe355, { 0xe9 });
        gbc.writeMem(0xe8e4, { 0xcb, 0x6 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x84a2, gbc.sp());
        EXPECT(0xe8e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd3, gbc.readMem(0xe355));
        EXPECT(0xcb, gbc.readMem(0xe8e4));
        EXPECT(0x6, gbc.readMem(0xe8e5));
        // CB 06 0342
        gbc.setState(0xe49d, 0xee3d, 0xb290, 0x47af, 0x96c3, 0xd778, 0x1, 0x0);
        gbc.writeMem(0xd778, { 0x69 });
        gbc.writeMem(0xe49d, { 0xcb, 0x6 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xee3d, gbc.sp());
        EXPECT(0xe49f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd2, gbc.readMem(0xd778));
        EXPECT(0xcb, gbc.readMem(0xe49d));
        EXPECT(0x6, gbc.readMem(0xe49e));
        // CB 06 0343
        gbc.setState(0xc419, 0x7d90, 0xb4e0, 0xfd92, 0x893f, 0xee2a, 0x0, 0x1);
        gbc.writeMem(0xc419, { 0xcb, 0x6 });
        gbc.writeMem(0xee2a, { 0x52 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x7d90, gbc.sp());
        EXPECT(0xc41b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc419));
        EXPECT(0x6, gbc.readMem(0xc41a));
        EXPECT(0xa4, gbc.readMem(0xee2a));
        // CB 06 0345
        gbc.setState(0x2900, 0x58af, 0x2e0, 0xd736, 0x5a7f, 0xd8ca, 0x0, 0x0);
        gbc.writeMem(0x2900, { 0xcb, 0x6 });
        gbc.writeMem(0xd8ca, { 0x6f });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x58af, gbc.sp());
        EXPECT(0x2902, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xde, gbc.readMem(0xd8ca));
        // CB 06 0348
        gbc.setState(0x44a1, 0xf3ba, 0x3f30, 0x52f1, 0xa2ea, 0xd654, 0x0, 0x0);
        gbc.writeMem(0x44a1, { 0xcb, 0x6 });
        gbc.writeMem(0xd654, { 0x66 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xf3ba, gbc.sp());
        EXPECT(0x44a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcc, gbc.readMem(0xd654));
        // CB 06 0349
        gbc.setState(0xcb8a, 0x38db, 0x4690, 0xf81b, 0xf10e, 0x8bb4, 0x1, 0x0);
        gbc.writeMem(0x8bb4, { 0x81 });
        gbc.writeMem(0xcb8a, { 0xcb, 0x6 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x38db, gbc.sp());
        EXPECT(0xcb8c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0x8bb4));
        EXPECT(0xcb, gbc.readMem(0xcb8a));
        EXPECT(0x6, gbc.readMem(0xcb8b));
        // CB 06 034B
        gbc.setState(0xd8c4, 0xea94, 0xb560, 0x9c70, 0x4543, 0xc861, 0x1, 0x1);
        gbc.writeMem(0xc861, { 0x99 });
        gbc.writeMem(0xd8c4, { 0xcb, 0x6 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xea94, gbc.sp());
        EXPECT(0xd8c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xc861));
        EXPECT(0xcb, gbc.readMem(0xd8c4));
        EXPECT(0x6, gbc.readMem(0xd8c5));
        // CB 06 034C
        gbc.setState(0xe052, 0xca68, 0xbdd0, 0x5fe7, 0xb909, 0xad9e, 0x1, 0x1);
        gbc.writeMem(0xad9e, { 0xd7 });
        gbc.writeMem(0xe052, { 0xcb, 0x6 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xca68, gbc.sp());
        EXPECT(0xe054, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xaf, gbc.readMem(0xad9e));
        EXPECT(0xcb, gbc.readMem(0xe052));
        EXPECT(0x6, gbc.readMem(0xe053));
        // CB 06 034D
        gbc.setState(0x4afe, 0x52dd, 0xf290, 0x63b1, 0xfd28, 0xd391, 0x0, 0x1);
        gbc.writeMem(0x4afe, { 0xcb, 0x6 });
        gbc.writeMem(0xd391, { 0xe });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x52dd, gbc.sp());
        EXPECT(0x4b00, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1c, gbc.readMem(0xd391));
        // CB 06 034E
        gbc.setState(0x1a11, 0x2de1, 0xe890, 0x7250, 0x6c5c, 0xb96c, 0x0, 0x0);
        gbc.writeMem(0x1a11, { 0xcb, 0x6 });
        gbc.writeMem(0xb96c, { 0xa5 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x2de1, gbc.sp());
        EXPECT(0x1a13, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xb96c));
        // CB 06 034F
        gbc.setState(0x3917, 0xb7a1, 0xfd80, 0xd94f, 0x6041, 0xdf14, 0x1, 0x1);
        gbc.writeMem(0x3917, { 0xcb, 0x6 });
        gbc.writeMem(0xdf14, { 0x7b });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xb7a1, gbc.sp());
        EXPECT(0x3919, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf6, gbc.readMem(0xdf14));
        // CB 06 0351
        gbc.setState(0x5ce7, 0x59e1, 0x33b0, 0x6166, 0xad07, 0x9836, 0x0, 0x1);
        gbc.writeMem(0x5ce7, { 0xcb, 0x6 });
        gbc.writeMem(0x9836, { 0xf1 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x59e1, gbc.sp());
        EXPECT(0x5ce9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe3, gbc.readMem(0x9836));
        // CB 06 0353
        gbc.setState(0x39f0, 0x38c1, 0xd8c0, 0xeafe, 0x7532, 0xc693, 0x1, 0x1);
        gbc.writeMem(0x39f0, { 0xcb, 0x6 });
        gbc.writeMem(0xc693, { 0xfb });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x38c1, gbc.sp());
        EXPECT(0x39f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf7, gbc.readMem(0xc693));
        // CB 06 0355
        gbc.setState(0xb844, 0x8ee6, 0xca40, 0x663c, 0x2999, 0xa3a2, 0x0, 0x1);
        gbc.writeMem(0xa3a2, { 0x33 });
        gbc.writeMem(0xb844, { 0xcb, 0x6 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x8ee6, gbc.sp());
        EXPECT(0xb846, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xa3a2));
        EXPECT(0xcb, gbc.readMem(0xb844));
        EXPECT(0x6, gbc.readMem(0xb845));
        // CB 06 0357
        gbc.setState(0x241b, 0x7b7a, 0x7170, 0x821c, 0x3302, 0xac4c, 0x1, 0x0);
        gbc.writeMem(0x241b, { 0xcb, 0x6 });
        gbc.writeMem(0xac4c, { 0x7b });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x7b7a, gbc.sp());
        EXPECT(0x241d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf6, gbc.readMem(0xac4c));
        // CB 06 035C
        gbc.setState(0x7e50, 0x9f41, 0xf3b0, 0x5b5, 0xfbd0, 0x8032, 0x0, 0x1);
        gbc.writeMem(0x7e50, { 0xcb, 0x6 });
        gbc.writeMem(0x8032, { 0xf9 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x9f41, gbc.sp());
        EXPECT(0x7e52, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf3, gbc.readMem(0x8032));
        // CB 06 035D
        gbc.setState(0x6724, 0xed46, 0xdf30, 0x1cea, 0x5b65, 0xcb47, 0x0, 0x0);
        gbc.writeMem(0x6724, { 0xcb, 0x6 });
        gbc.writeMem(0xcb47, { 0x15 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xed46, gbc.sp());
        EXPECT(0x6726, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2a, gbc.readMem(0xcb47));
        // CB 06 035E
        gbc.setState(0xcf6f, 0x601b, 0x8f40, 0x6df0, 0x3508, 0xe634, 0x0, 0x1);
        gbc.writeMem(0xcf6f, { 0xcb, 0x6 });
        gbc.writeMem(0xe634, { 0x66 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x601b, gbc.sp());
        EXPECT(0xcf71, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf6f));
        EXPECT(0x6, gbc.readMem(0xcf70));
        EXPECT(0xcc, gbc.readMem(0xe634));
        // CB 06 0361
        gbc.setState(0xbcfe, 0x814b, 0xef50, 0xeacc, 0xedb2, 0xb61d, 0x0, 0x1);
        gbc.writeMem(0xb61d, { 0xbd });
        gbc.writeMem(0xbcfe, { 0xcb, 0x6 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x814b, gbc.sp());
        EXPECT(0xbd00, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xb61d));
        EXPECT(0xcb, gbc.readMem(0xbcfe));
        EXPECT(0x6, gbc.readMem(0xbcff));
        // CB 06 0363
        gbc.setState(0xa53f, 0x694a, 0xc280, 0x38dc, 0xfd6e, 0xd8af, 0x0, 0x1);
        gbc.writeMem(0xa53f, { 0xcb, 0x6 });
        gbc.writeMem(0xd8af, { 0x45 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x694a, gbc.sp());
        EXPECT(0xa541, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa53f));
        EXPECT(0x6, gbc.readMem(0xa540));
        EXPECT(0x8a, gbc.readMem(0xd8af));
        // CB 06 0364
        gbc.setState(0xd893, 0xcbb3, 0x24e0, 0x65cc, 0x6215, 0xd3f1, 0x0, 0x1);
        gbc.writeMem(0xd3f1, { 0x66 });
        gbc.writeMem(0xd893, { 0xcb, 0x6 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xcbb3, gbc.sp());
        EXPECT(0xd895, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcc, gbc.readMem(0xd3f1));
        EXPECT(0xcb, gbc.readMem(0xd893));
        EXPECT(0x6, gbc.readMem(0xd894));
        // CB 06 0365
        gbc.setState(0xbbd2, 0xabb3, 0xfce0, 0x119a, 0xe139, 0x9a96, 0x1, 0x1);
        gbc.writeMem(0x9a96, { 0x39 });
        gbc.writeMem(0xbbd2, { 0xcb, 0x6 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xabb3, gbc.sp());
        EXPECT(0xbbd4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x72, gbc.readMem(0x9a96));
        EXPECT(0xcb, gbc.readMem(0xbbd2));
        EXPECT(0x6, gbc.readMem(0xbbd3));
        // CB 06 0369
        gbc.setState(0xdd3a, 0xbadb, 0xa4e0, 0x2b6, 0x34dd, 0xdde9, 0x0, 0x1);
        gbc.writeMem(0xdd3a, { 0xcb, 0x6 });
        gbc.writeMem(0xdde9, { 0x72 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xbadb, gbc.sp());
        EXPECT(0xdd3c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd3a));
        EXPECT(0x6, gbc.readMem(0xdd3b));
        EXPECT(0xe4, gbc.readMem(0xdde9));
        // CB 06 036C
        gbc.setState(0x67eb, 0xeeac, 0xdb60, 0x39e, 0x3ec0, 0x8c87, 0x0, 0x0);
        gbc.writeMem(0x67eb, { 0xcb, 0x6 });
        gbc.writeMem(0x8c87, { 0x84 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xeeac, gbc.sp());
        EXPECT(0x67ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0x8c87));
        // CB 06 036D
        gbc.setState(0x9633, 0xab70, 0x2e90, 0x573f, 0x978b, 0x8a76, 0x1, 0x0);
        gbc.writeMem(0x8a76, { 0xc2 });
        gbc.writeMem(0x9633, { 0xcb, 0x6 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xab70, gbc.sp());
        EXPECT(0x9635, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0x8a76));
        EXPECT(0xcb, gbc.readMem(0x9633));
        EXPECT(0x6, gbc.readMem(0x9634));
        // CB 06 036F
        gbc.setState(0x611b, 0xdf6f, 0xd020, 0x2c3f, 0x53c5, 0xa0e7, 0x1, 0x1);
        gbc.writeMem(0x611b, { 0xcb, 0x6 });
        gbc.writeMem(0xa0e7, { 0xbf });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xdf6f, gbc.sp());
        EXPECT(0x611d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7f, gbc.readMem(0xa0e7));
        // CB 06 0370
        gbc.setState(0x4e10, 0xad12, 0xe0a0, 0x8748, 0xd611, 0xdfb6, 0x0, 0x0);
        gbc.writeMem(0x4e10, { 0xcb, 0x6 });
        gbc.writeMem(0xdfb6, { 0x8a });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xad12, gbc.sp());
        EXPECT(0x4e12, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xdfb6));
        // CB 06 0377
        gbc.setState(0x44c9, 0x6c4c, 0x10a0, 0x2c1c, 0xd78b, 0xae8d, 0x0, 0x0);
        gbc.writeMem(0x44c9, { 0xcb, 0x6 });
        gbc.writeMem(0xae8d, { 0xaa });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x6c4c, gbc.sp());
        EXPECT(0x44cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xae8d));
        // CB 06 037B
        gbc.setState(0x5a67, 0x2127, 0xb770, 0xf787, 0xfd5f, 0xd69a, 0x0, 0x0);
        gbc.writeMem(0x5a67, { 0xcb, 0x6 });
        gbc.writeMem(0xd69a, { 0x10 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x2127, gbc.sp());
        EXPECT(0x5a69, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xd69a));
        // CB 06 037C
        gbc.setState(0xc50f, 0xb504, 0xb410, 0x7cda, 0xaa5e, 0x9c30, 0x0, 0x1);
        gbc.writeMem(0x9c30, { 0x77 });
        gbc.writeMem(0xc50f, { 0xcb, 0x6 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xb504, gbc.sp());
        EXPECT(0xc511, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xee, gbc.readMem(0x9c30));
        EXPECT(0xcb, gbc.readMem(0xc50f));
        EXPECT(0x6, gbc.readMem(0xc510));
        // CB 06 037D
        gbc.setState(0x3bdc, 0x101f, 0x80b0, 0x75e5, 0x3e73, 0x9cd0, 0x0, 0x1);
        gbc.writeMem(0x3bdc, { 0xcb, 0x6 });
        gbc.writeMem(0x9cd0, { 0xbe });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x101f, gbc.sp());
        EXPECT(0x3bde, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0x9cd0));
        // CB 06 0381
        gbc.setState(0xd712, 0xa937, 0x29d0, 0x411b, 0xc1e8, 0xf2b3, 0x1, 0x1);
        gbc.writeMem(0xd712, { 0xcb, 0x6 });
        gbc.writeMem(0xf2b3, { 0x7c });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xa937, gbc.sp());
        EXPECT(0xd714, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd712));
        EXPECT(0x6, gbc.readMem(0xd713));
        EXPECT(0xf8, gbc.readMem(0xf2b3));
        // CB 06 0382
        gbc.setState(0x4846, 0x49bb, 0xf600, 0x5bcf, 0xc385, 0xaf87, 0x0, 0x1);
        gbc.writeMem(0x4846, { 0xcb, 0x6 });
        gbc.writeMem(0xaf87, { 0xaa });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x49bb, gbc.sp());
        EXPECT(0x4848, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xaf87));
        // CB 06 0384
        gbc.setState(0xa470, 0x6af3, 0xc350, 0xf5aa, 0xb22b, 0xdd11, 0x0, 0x0);
        gbc.writeMem(0xa470, { 0xcb, 0x6 });
        gbc.writeMem(0xdd11, { 0x77 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x6af3, gbc.sp());
        EXPECT(0xa472, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa470));
        EXPECT(0x6, gbc.readMem(0xa471));
        EXPECT(0xee, gbc.readMem(0xdd11));
        // CB 06 0387
        gbc.setState(0x5874, 0x1720, 0x2b20, 0xaf2e, 0xc6fe, 0xe648, 0x1, 0x0);
        gbc.writeMem(0x5874, { 0xcb, 0x6 });
        gbc.writeMem(0xe648, { 0x10 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x1720, gbc.sp());
        EXPECT(0x5876, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xe648));
        // CB 06 0388
        gbc.setState(0x3e6b, 0xccb2, 0x47a0, 0xd256, 0x30fd, 0xd0ca, 0x1, 0x0);
        gbc.writeMem(0x3e6b, { 0xcb, 0x6 });
        gbc.writeMem(0xd0ca, { 0xf0 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xccb2, gbc.sp());
        EXPECT(0x3e6d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xd0ca));
        // CB 06 038A
        gbc.setState(0x29a0, 0xe157, 0x8080, 0x780e, 0xb7c4, 0x81c9, 0x0, 0x0);
        gbc.writeMem(0x29a0, { 0xcb, 0x6 });
        gbc.writeMem(0x81c9, { 0x5f });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xe157, gbc.sp());
        EXPECT(0x29a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbe, gbc.readMem(0x81c9));
        // CB 06 038C
        gbc.setState(0x3a92, 0xa859, 0x6650, 0x6fda, 0x6637, 0xe4f9, 0x0, 0x1);
        gbc.writeMem(0x3a92, { 0xcb, 0x6 });
        gbc.writeMem(0xe4f9, { 0x2 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xa859, gbc.sp());
        EXPECT(0x3a94, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xe4f9));
        // CB 06 038F
        gbc.setState(0xefba, 0x6d09, 0x6e10, 0xff82, 0x9bf6, 0xa6a2, 0x1, 0x1);
        gbc.writeMem(0xa6a2, { 0x5d });
        gbc.writeMem(0xefba, { 0xcb, 0x6 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x6d09, gbc.sp());
        EXPECT(0xefbc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xba, gbc.readMem(0xa6a2));
        EXPECT(0xcb, gbc.readMem(0xefba));
        EXPECT(0x6, gbc.readMem(0xefbb));
        // CB 06 0391
        gbc.setState(0x1ba5, 0x7151, 0xa3c0, 0x1d51, 0xee0c, 0xec7a, 0x0, 0x0);
        gbc.writeMem(0x1ba5, { 0xcb, 0x6 });
        gbc.writeMem(0xec7a, { 0xad });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x7151, gbc.sp());
        EXPECT(0x1ba7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xec7a));
        // CB 06 0394
        gbc.setState(0x5ad0, 0xafeb, 0x1950, 0xfed5, 0x9a9c, 0xb212, 0x0, 0x1);
        gbc.writeMem(0x5ad0, { 0xcb, 0x6 });
        gbc.writeMem(0xb212, { 0xe6 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xafeb, gbc.sp());
        EXPECT(0x5ad2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcd, gbc.readMem(0xb212));
        // CB 06 0395
        gbc.setState(0x6215, 0xf1c5, 0x8fd0, 0x14fe, 0x3b2a, 0xbb86, 0x1, 0x0);
        gbc.writeMem(0x6215, { 0xcb, 0x6 });
        gbc.writeMem(0xbb86, { 0xff });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xf1c5, gbc.sp());
        EXPECT(0x6217, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xff, gbc.readMem(0xbb86));
        // CB 06 0396
        gbc.setState(0x19b0, 0x2e4b, 0xa440, 0x5984, 0x9835, 0x896e, 0x1, 0x1);
        gbc.writeMem(0x19b0, { 0xcb, 0x6 });
        gbc.writeMem(0x896e, { 0x8b });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x2e4b, gbc.sp());
        EXPECT(0x19b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x17, gbc.readMem(0x896e));
        // CB 06 0397
        gbc.setState(0x7cd3, 0x79ef, 0x25d0, 0x2ae9, 0x85b6, 0xabc0, 0x0, 0x0);
        gbc.writeMem(0x7cd3, { 0xcb, 0x6 });
        gbc.writeMem(0xabc0, { 0xbc });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x79ef, gbc.sp());
        EXPECT(0x7cd5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xabc0));
        // CB 06 0398
        gbc.setState(0xd199, 0x36c0, 0x6520, 0x4d2f, 0xceb4, 0x8a6f, 0x1, 0x0);
        gbc.writeMem(0x8a6f, { 0x8b });
        gbc.writeMem(0xd199, { 0xcb, 0x6 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x36c0, gbc.sp());
        EXPECT(0xd19b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x17, gbc.readMem(0x8a6f));
        EXPECT(0xcb, gbc.readMem(0xd199));
        EXPECT(0x6, gbc.readMem(0xd19a));
        // CB 06 039B
        gbc.setState(0x4468, 0x1ad2, 0x7b70, 0xdf1f, 0xeaa2, 0xd460, 0x1, 0x1);
        gbc.writeMem(0x4468, { 0xcb, 0x6 });
        gbc.writeMem(0xd460, { 0x2e });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x1ad2, gbc.sp());
        EXPECT(0x446a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5c, gbc.readMem(0xd460));
        // CB 06 039C
        gbc.setState(0x5a9a, 0x7843, 0xee20, 0x243c, 0xe44d, 0xf721, 0x0, 0x0);
        gbc.writeMem(0x5a9a, { 0xcb, 0x6 });
        gbc.writeMem(0xf721, { 0x30 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x7843, gbc.sp());
        EXPECT(0x5a9c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x60, gbc.readMem(0xf721));
        // CB 06 03A1
        gbc.setState(0x8bcc, 0x6e07, 0x7570, 0x181f, 0x476b, 0x998d, 0x0, 0x1);
        gbc.writeMem(0x8bcc, { 0xcb, 0x6 });
        gbc.writeMem(0x998d, { 0x5d });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x6e07, gbc.sp());
        EXPECT(0x8bce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8bcc));
        EXPECT(0x6, gbc.readMem(0x8bcd));
        EXPECT(0xba, gbc.readMem(0x998d));
        // CB 06 03A3
        gbc.setState(0xed22, 0xb077, 0x1380, 0x5278, 0x5164, 0xdb10, 0x0, 0x0);
        gbc.writeMem(0xdb10, { 0xaa });
        gbc.writeMem(0xed22, { 0xcb, 0x6 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xb077, gbc.sp());
        EXPECT(0xed24, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xdb10));
        EXPECT(0xcb, gbc.readMem(0xed22));
        EXPECT(0x6, gbc.readMem(0xed23));
        // CB 06 03A9
        gbc.setState(0x3500, 0x47c6, 0xf710, 0x74bf, 0x3a3e, 0x8610, 0x1, 0x1);
        gbc.writeMem(0x3500, { 0xcb, 0x6 });
        gbc.writeMem(0x8610, { 0x95 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x47c6, gbc.sp());
        EXPECT(0x3502, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0x8610));
        // CB 06 03AD
        gbc.setState(0xc753, 0x8b04, 0xdfa0, 0x579a, 0x9e90, 0xfdd7, 0x1, 0x0);
        gbc.writeMem(0xc753, { 0xcb, 0x6 });
        gbc.writeMem(0xfdd7, { 0xa4 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x8b04, gbc.sp());
        EXPECT(0xc755, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc753));
        EXPECT(0x6, gbc.readMem(0xc754));
        EXPECT(0x49, gbc.readMem(0xfdd7));
        // CB 06 03B0
        gbc.setState(0x480a, 0xe9f3, 0xf4f0, 0xfe52, 0xd860, 0x9c75, 0x1, 0x1);
        gbc.writeMem(0x480a, { 0xcb, 0x6 });
        gbc.writeMem(0x9c75, { 0x4f });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xe9f3, gbc.sp());
        EXPECT(0x480c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0x9c75));
        // CB 06 03B2
        gbc.setState(0x8d6, 0xebb2, 0xbf0, 0x291d, 0xa6d1, 0xa821, 0x0, 0x1);
        gbc.writeMem(0x8d6, { 0xcb, 0x6 });
        gbc.writeMem(0xa821, { 0x51 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xebb2, gbc.sp());
        EXPECT(0x8d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xa821));
        // CB 06 03BA
        gbc.setState(0xa71b, 0xb882, 0x9bc0, 0x857f, 0x51ff, 0x8c6b, 0x0, 0x0);
        gbc.writeMem(0x8c6b, { 0x57 });
        gbc.writeMem(0xa71b, { 0xcb, 0x6 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xb882, gbc.sp());
        EXPECT(0xa71d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xae, gbc.readMem(0x8c6b));
        EXPECT(0xcb, gbc.readMem(0xa71b));
        EXPECT(0x6, gbc.readMem(0xa71c));
        // CB 06 03BC
        gbc.setState(0x8f0f, 0xc02a, 0xa650, 0xd94f, 0xc3a5, 0x95b4, 0x0, 0x1);
        gbc.writeMem(0x8f0f, { 0xcb, 0x6 });
        gbc.writeMem(0x95b4, { 0x7d });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xc02a, gbc.sp());
        EXPECT(0x8f11, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f0f));
        EXPECT(0x6, gbc.readMem(0x8f10));
        EXPECT(0xfa, gbc.readMem(0x95b4));
        // CB 06 03C3
        gbc.setState(0x579c, 0x8f4c, 0x8680, 0x7341, 0x6634, 0xe395, 0x1, 0x1);
        gbc.writeMem(0x579c, { 0xcb, 0x6 });
        gbc.writeMem(0xe395, { 0x5e });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x8f4c, gbc.sp());
        EXPECT(0x579e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xe395));
        // CB 06 03C9
        gbc.setState(0xda38, 0xd01c, 0xd750, 0x2661, 0x21ba, 0xb013, 0x0, 0x0);
        gbc.writeMem(0xb013, { 0x8f });
        gbc.writeMem(0xda38, { 0xcb, 0x6 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xd01c, gbc.sp());
        EXPECT(0xda3a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1f, gbc.readMem(0xb013));
        EXPECT(0xcb, gbc.readMem(0xda38));
        EXPECT(0x6, gbc.readMem(0xda39));
        // CB 06 03CD
        gbc.setState(0xc71e, 0x6480, 0xd160, 0xd369, 0x9328, 0x81e8, 0x1, 0x1);
        gbc.writeMem(0x81e8, { 0x22 });
        gbc.writeMem(0xc71e, { 0xcb, 0x6 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x6480, gbc.sp());
        EXPECT(0xc720, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0x81e8));
        EXPECT(0xcb, gbc.readMem(0xc71e));
        EXPECT(0x6, gbc.readMem(0xc71f));
        // CB 06 03CE
        gbc.setState(0xc4b1, 0x85e, 0x3890, 0xbd8f, 0x4679, 0x9638, 0x0, 0x0);
        gbc.writeMem(0x9638, { 0xe7 });
        gbc.writeMem(0xc4b1, { 0xcb, 0x6 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x85e, gbc.sp());
        EXPECT(0xc4b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcf, gbc.readMem(0x9638));
        EXPECT(0xcb, gbc.readMem(0xc4b1));
        EXPECT(0x6, gbc.readMem(0xc4b2));
        // CB 06 03D1
        gbc.setState(0x5c13, 0xd109, 0xf7b0, 0x34dd, 0x8bd5, 0xaea2, 0x0, 0x0);
        gbc.writeMem(0x5c13, { 0xcb, 0x6 });
        gbc.writeMem(0xaea2, { 0xfc });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xd109, gbc.sp());
        EXPECT(0x5c15, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf9, gbc.readMem(0xaea2));
        // CB 06 03D2
        gbc.setState(0x3294, 0xb56, 0xc0b0, 0x378e, 0xce36, 0x8814, 0x1, 0x0);
        gbc.writeMem(0x3294, { 0xcb, 0x6 });
        gbc.writeMem(0x8814, { 0x4b });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xb56, gbc.sp());
        EXPECT(0x3296, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x96, gbc.readMem(0x8814));
        // CB 06 03D4
        gbc.setState(0x4f9d, 0x4559, 0xfa10, 0x58cf, 0xb0d1, 0x9c45, 0x1, 0x0);
        gbc.writeMem(0x4f9d, { 0xcb, 0x6 });
        gbc.writeMem(0x9c45, { 0x6 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x4559, gbc.sp());
        EXPECT(0x4f9f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0x9c45));
        // CB 06 03D5
        gbc.setState(0x350c, 0x9257, 0x24f0, 0x958d, 0xa9d9, 0xf9ad, 0x0, 0x0);
        gbc.writeMem(0x350c, { 0xcb, 0x6 });
        gbc.writeMem(0xf9ad, { 0x60 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x9257, gbc.sp());
        EXPECT(0x350e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc0, gbc.readMem(0xf9ad));
        // CB 06 03D6
        gbc.setState(0xcfb0, 0xfaad, 0x2c20, 0x2ad8, 0x31ae, 0xab19, 0x1, 0x1);
        gbc.writeMem(0xab19, { 0x95 });
        gbc.writeMem(0xcfb0, { 0xcb, 0x6 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xfaad, gbc.sp());
        EXPECT(0xcfb2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xab19));
        EXPECT(0xcb, gbc.readMem(0xcfb0));
        EXPECT(0x6, gbc.readMem(0xcfb1));
        // CB 06 03D7
        gbc.setState(0x1b0f, 0xadac, 0x8250, 0x6e98, 0xbc6d, 0x961c, 0x1, 0x1);
        gbc.writeMem(0x1b0f, { 0xcb, 0x6 });
        gbc.writeMem(0x961c, { 0x32 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xadac, gbc.sp());
        EXPECT(0x1b11, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0x961c));
        // CB 06 03DB
        gbc.setState(0x924f, 0xd7d2, 0x9610, 0x5271, 0xf6cb, 0xda42, 0x1, 0x0);
        gbc.writeMem(0x924f, { 0xcb, 0x6 });
        gbc.writeMem(0xda42, { 0x77 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xd7d2, gbc.sp());
        EXPECT(0x9251, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x924f));
        EXPECT(0x6, gbc.readMem(0x9250));
        EXPECT(0xee, gbc.readMem(0xda42));
        // CB 06 03DF
        gbc.setState(0x3f30, 0xb0b9, 0xcf90, 0xee, 0x748b, 0x89eb, 0x0, 0x1);
        gbc.writeMem(0x3f30, { 0xcb, 0x6 });
        gbc.writeMem(0x89eb, { 0x43 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xb0b9, gbc.sp());
        EXPECT(0x3f32, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0x89eb));
        // CB 06 03E1
        gbc.setState(0x90d5, 0xae08, 0x41e0, 0x82b6, 0xe747, 0xcfcf, 0x1, 0x1);
        gbc.writeMem(0x90d5, { 0xcb, 0x6 });
        gbc.writeMem(0xcfcf, { 0x23 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xae08, gbc.sp());
        EXPECT(0x90d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x90d5));
        EXPECT(0x6, gbc.readMem(0x90d6));
        EXPECT(0x46, gbc.readMem(0xcfcf));
        // CB 06 03E2
        gbc.setState(0x6cf8, 0xe319, 0xc620, 0x49a5, 0xea4, 0xe4be, 0x1, 0x0);
        gbc.writeMem(0x6cf8, { 0xcb, 0x6 });
        gbc.writeMem(0xe4be, { 0xd5 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xe319, gbc.sp());
        EXPECT(0x6cfa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xab, gbc.readMem(0xe4be));
        // CB 06 03E6
        gbc.setState(0xab7d, 0x525b, 0x19c0, 0x9040, 0x9d22, 0xd914, 0x1, 0x1);
        gbc.writeMem(0xab7d, { 0xcb, 0x6 });
        gbc.writeMem(0xd914, { 0xe9 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x525b, gbc.sp());
        EXPECT(0xab7f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab7d));
        EXPECT(0x6, gbc.readMem(0xab7e));
        EXPECT(0xd3, gbc.readMem(0xd914));
        // CB 06 03E7
        gbc.setState(0xdff7, 0xb828, 0xa4b0, 0x9f0d, 0x98d1, 0xb54f, 0x0, 0x0);
        gbc.writeMem(0xb54f, { 0xbd });
        gbc.writeMem(0xdff7, { 0xcb, 0x6 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xb828, gbc.sp());
        EXPECT(0xdff9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xb54f));
        EXPECT(0xcb, gbc.readMem(0xdff7));
        EXPECT(0x6, gbc.readMem(0xdff8));
    }
