    TEST(gbcemu, opcode_cb_3b) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB 3B 0000
        gbc.setState(0x8892, 0x7a09, 0x11a0, 0x5af2, 0xe458, 0x9db0, 0x1, 0x0);
        gbc.writeMem(0x8892, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x7a09, gbc.sp());
        EXPECT(0x8894, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8892));
        EXPECT(0x3b, gbc.readMem(0x8893));
        // CB 3B 0001
        gbc.setState(0xaf0b, 0x3b3, 0x6890, 0xe0a7, 0xb1cb, 0xa41a, 0x1, 0x1);
        gbc.writeMem(0xaf0b, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x3b3, gbc.sp());
        EXPECT(0xaf0d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf0b));
        EXPECT(0x3b, gbc.readMem(0xaf0c));
        // CB 3B 0004
        gbc.setState(0x657b, 0xeeaa, 0xd640, 0x97ed, 0xc571, 0x7d26, 0x1, 0x0);
        gbc.writeMem(0x657b, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xeeaa, gbc.sp());
        EXPECT(0x657d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3B 0005
        gbc.setState(0x40f5, 0x7dbf, 0x3110, 0x73f6, 0xfdf8, 0xaa5c, 0x1, 0x1);
        gbc.writeMem(0x40f5, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x7dbf, gbc.sp());
        EXPECT(0x40f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3B 0006
        gbc.setState(0x7c7, 0xa2ca, 0xb2c0, 0x7071, 0x3a47, 0xbef4, 0x0, 0x1);
        gbc.writeMem(0x7c7, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xa2ca, gbc.sp());
        EXPECT(0x7c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3B 0007
        gbc.setState(0x7500, 0x3859, 0xac10, 0x784b, 0x9d77, 0xe42c, 0x0, 0x0);
        gbc.writeMem(0x7500, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x3859, gbc.sp());
        EXPECT(0x7502, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3B 0008
        gbc.setState(0xe716, 0x8dba, 0x1ca0, 0x9a79, 0x87f9, 0x4f9c, 0x1, 0x1);
        gbc.writeMem(0xe716, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x8dba, gbc.sp());
        EXPECT(0xe718, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe716));
        EXPECT(0x3b, gbc.readMem(0xe717));
        // CB 3B 0009
        gbc.setState(0xbe50, 0x2e7a, 0x2b20, 0xeaf2, 0xa2ee, 0xc49f, 0x0, 0x1);
        gbc.writeMem(0xbe50, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x2e7a, gbc.sp());
        EXPECT(0xbe52, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe50));
        EXPECT(0x3b, gbc.readMem(0xbe51));
        // CB 3B 000A
        gbc.setState(0x3b95, 0xcf3c, 0xbc10, 0xc62a, 0x2588, 0xfa84, 0x0, 0x1);
        gbc.writeMem(0x3b95, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xcf3c, gbc.sp());
        EXPECT(0x3b97, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3B 000B
        gbc.setState(0x1089, 0x7458, 0x7620, 0xd800, 0x1df9, 0xb065, 0x0, 0x0);
        gbc.writeMem(0x1089, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x7458, gbc.sp());
        EXPECT(0x108b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3B 000C
        gbc.setState(0x7475, 0x4d39, 0x34a0, 0xd620, 0x2684, 0xc1c7, 0x0, 0x0);
        gbc.writeMem(0x7475, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x4d39, gbc.sp());
        EXPECT(0x7477, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3B 000D
        gbc.setState(0x2961, 0xbe20, 0xb010, 0x5e88, 0x84ce, 0x9816, 0x1, 0x0);
        gbc.writeMem(0x2961, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xbe20, gbc.sp());
        EXPECT(0x2963, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3B 000E
        gbc.setState(0x10c0, 0xa095, 0xa670, 0xe3f6, 0x78a3, 0x3527, 0x0, 0x0);
        gbc.writeMem(0x10c0, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xa095, gbc.sp());
        EXPECT(0x10c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3B 000F
        gbc.setState(0xdc68, 0x28e5, 0xa9e0, 0x7d35, 0xde1e, 0xaf6f, 0x1, 0x0);
        gbc.writeMem(0xdc68, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x28e5, gbc.sp());
        EXPECT(0xdc6a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc68));
        EXPECT(0x3b, gbc.readMem(0xdc69));
        // CB 3B 0010
        gbc.setState(0x38a9, 0xb9c9, 0xabe0, 0xcc55, 0x8919, 0x7617, 0x0, 0x1);
        gbc.writeMem(0x38a9, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xb9c9, gbc.sp());
        EXPECT(0x38ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3B 0011
        gbc.setState(0x9fb3, 0x29a5, 0x8090, 0x20ca, 0x89ba, 0x21b5, 0x1, 0x0);
        gbc.writeMem(0x9fb3, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x29a5, gbc.sp());
        EXPECT(0x9fb5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9fb3));
        EXPECT(0x3b, gbc.readMem(0x9fb4));
        // CB 3B 0012
        gbc.setState(0x5d48, 0x71a8, 0xcda0, 0x6e7b, 0xf6bc, 0x3de3, 0x1, 0x0);
        gbc.writeMem(0x5d48, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x71a8, gbc.sp());
        EXPECT(0x5d4a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3B 0013
        gbc.setState(0x3eb8, 0x5963, 0x7f70, 0x4ac, 0x8042, 0xb562, 0x1, 0x0);
        gbc.writeMem(0x3eb8, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x5963, gbc.sp());
        EXPECT(0x3eba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3B 0014
        gbc.setState(0x8e08, 0x5828, 0x3a0, 0x1d66, 0x668c, 0xc732, 0x0, 0x1);
        gbc.writeMem(0x8e08, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x5828, gbc.sp());
        EXPECT(0x8e0a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e08));
        EXPECT(0x3b, gbc.readMem(0x8e09));
        // CB 3B 0015
        gbc.setState(0x1ac6, 0x1e07, 0x34f0, 0x147a, 0x7ae0, 0x38dc, 0x1, 0x1);
        gbc.writeMem(0x1ac6, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x1e07, gbc.sp());
        EXPECT(0x1ac8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3B 0017
        gbc.setState(0xead, 0x7fec, 0xcec0, 0x372f, 0x3f95, 0x433d, 0x0, 0x1);
        gbc.writeMem(0xead, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x7fec, gbc.sp());
        EXPECT(0xeaf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3B 0018
        gbc.setState(0x76b5, 0x8a88, 0xfb00, 0x9803, 0xef75, 0xa9e7, 0x0, 0x1);
        gbc.writeMem(0x76b5, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x8a88, gbc.sp());
        EXPECT(0x76b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3B 0019
        gbc.setState(0x2b19, 0x54f6, 0xd500, 0xcadf, 0xf0ee, 0x5eb1, 0x1, 0x0);
        gbc.writeMem(0x2b19, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x54f6, gbc.sp());
        EXPECT(0x2b1b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3B 001A
        gbc.setState(0xb124, 0x446c, 0x13d0, 0x305b, 0x3669, 0x7cc1, 0x0, 0x1);
        gbc.writeMem(0xb124, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x446c, gbc.sp());
        EXPECT(0xb126, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb124));
        EXPECT(0x3b, gbc.readMem(0xb125));
        // CB 3B 001B
        gbc.setState(0xd21d, 0x789e, 0x7450, 0x4eb6, 0x7193, 0x6c20, 0x1, 0x1);
        gbc.writeMem(0xd21d, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x789e, gbc.sp());
        EXPECT(0xd21f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd21d));
        EXPECT(0x3b, gbc.readMem(0xd21e));
        // CB 3B 001C
        gbc.setState(0xd45f, 0xc6a1, 0x28e0, 0xf94, 0x920, 0x3e3b, 0x0, 0x1);
        gbc.writeMem(0xd45f, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xc6a1, gbc.sp());
        EXPECT(0xd461, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd45f));
        EXPECT(0x3b, gbc.readMem(0xd460));
        // CB 3B 001F
        gbc.setState(0xb460, 0x8203, 0x550, 0x6fd2, 0xb0a2, 0x483, 0x0, 0x1);
        gbc.writeMem(0xb460, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x8203, gbc.sp());
        EXPECT(0xb462, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb460));
        EXPECT(0x3b, gbc.readMem(0xb461));
        // CB 3B 0020
        gbc.setState(0x80f4, 0x5225, 0x77e0, 0x6af6, 0xc931, 0xa8d1, 0x0, 0x0);
        gbc.writeMem(0x80f4, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x5225, gbc.sp());
        EXPECT(0x80f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x80f4));
        EXPECT(0x3b, gbc.readMem(0x80f5));
        // CB 3B 0021
        gbc.setState(0x13a5, 0xcc9b, 0x7180, 0x6abe, 0x9338, 0x78a1, 0x1, 0x1);
        gbc.writeMem(0x13a5, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xcc9b, gbc.sp());
        EXPECT(0x13a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3B 0022
        gbc.setState(0xb9c7, 0x29ce, 0xd3e0, 0xe249, 0x5f68, 0xa704, 0x0, 0x0);
        gbc.writeMem(0xb9c7, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x29ce, gbc.sp());
        EXPECT(0xb9c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb9c7));
        EXPECT(0x3b, gbc.readMem(0xb9c8));
        // CB 3B 0023
        gbc.setState(0x5a07, 0x3917, 0xe8f0, 0x9605, 0x651, 0xfd6, 0x1, 0x1);
        gbc.writeMem(0x5a07, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x3917, gbc.sp());
        EXPECT(0x5a09, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3B 0024
        gbc.setState(0x91fc, 0x294, 0x5820, 0x681d, 0xe9d1, 0xc95e, 0x0, 0x0);
        gbc.writeMem(0x91fc, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x294, gbc.sp());
        EXPECT(0x91fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x91fc));
        EXPECT(0x3b, gbc.readMem(0x91fd));
        // CB 3B 0025
        gbc.setState(0xb738, 0xf8b9, 0xe600, 0x55aa, 0x2014, 0xcda9, 0x1, 0x1);
        gbc.writeMem(0xb738, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xf8b9, gbc.sp());
        EXPECT(0xb73a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb738));
        EXPECT(0x3b, gbc.readMem(0xb739));
        // CB 3B 0026
        gbc.setState(0xac42, 0xda29, 0x3590, 0x3f21, 0xd937, 0xefbf, 0x1, 0x1);
        gbc.writeMem(0xac42, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xda29, gbc.sp());
        EXPECT(0xac44, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac42));
        EXPECT(0x3b, gbc.readMem(0xac43));
        // CB 3B 0027
        gbc.setState(0xacca, 0x30c, 0x5d90, 0x38d1, 0x74ff, 0x416, 0x1, 0x1);
        gbc.writeMem(0xacca, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x30c, gbc.sp());
        EXPECT(0xaccc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xacca));
        EXPECT(0x3b, gbc.readMem(0xaccb));
        // CB 3B 0028
        gbc.setState(0x39f0, 0xeb4a, 0x91c0, 0x29e0, 0xa81d, 0xbba0, 0x1, 0x0);
        gbc.writeMem(0x39f0, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xeb4a, gbc.sp());
        EXPECT(0x39f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3B 0029
        gbc.setState(0x8293, 0x9698, 0x4380, 0x2b4c, 0x3943, 0x6681, 0x1, 0x1);
        gbc.writeMem(0x8293, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x9698, gbc.sp());
        EXPECT(0x8295, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8293));
        EXPECT(0x3b, gbc.readMem(0x8294));
        // CB 3B 002A
        gbc.setState(0x7b86, 0x998a, 0x7100, 0x5017, 0xe5a6, 0x370, 0x0, 0x0);
        gbc.writeMem(0x7b86, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x998a, gbc.sp());
        EXPECT(0x7b88, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3B 002B
        gbc.setState(0xbf25, 0xdffd, 0x28e0, 0x115a, 0x86d8, 0x893e, 0x1, 0x0);
        gbc.writeMem(0xbf25, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xdffd, gbc.sp());
        EXPECT(0xbf27, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf25));
        EXPECT(0x3b, gbc.readMem(0xbf26));
        // CB 3B 002C
        gbc.setState(0xd296, 0x212f, 0x8e50, 0x9d1c, 0xec0b, 0x82a1, 0x1, 0x1);
        gbc.writeMem(0xd296, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x212f, gbc.sp());
        EXPECT(0xd298, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd296));
        EXPECT(0x3b, gbc.readMem(0xd297));
        // CB 3B 002D
        gbc.setState(0x9823, 0xa276, 0xfa40, 0x4299, 0x66a1, 0xe8f, 0x0, 0x1);
        gbc.writeMem(0x9823, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xa276, gbc.sp());
        EXPECT(0x9825, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9823));
        EXPECT(0x3b, gbc.readMem(0x9824));
        // CB 3B 002E
        gbc.setState(0x705, 0x4c8, 0x6d10, 0xa8d8, 0x25cb, 0xa64a, 0x1, 0x0);
        gbc.writeMem(0x705, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x4c8, gbc.sp());
        EXPECT(0x707, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3B 002F
        gbc.setState(0xd9a2, 0x9681, 0xe250, 0x8f08, 0xec05, 0x4170, 0x1, 0x1);
        gbc.writeMem(0xd9a2, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x9681, gbc.sp());
        EXPECT(0xd9a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd9a2));
        EXPECT(0x3b, gbc.readMem(0xd9a3));
        // CB 3B 0030
        gbc.setState(0xd0c5, 0xa420, 0x6970, 0xa153, 0x7cfc, 0x98e4, 0x0, 0x1);
        gbc.writeMem(0xd0c5, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xa420, gbc.sp());
        EXPECT(0xd0c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd0c5));
        EXPECT(0x3b, gbc.readMem(0xd0c6));
        // CB 3B 0031
        gbc.setState(0xe0c1, 0x33a7, 0x9b20, 0x4e9b, 0x1ac6, 0xc26e, 0x1, 0x1);
        gbc.writeMem(0xe0c1, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x33a7, gbc.sp());
        EXPECT(0xe0c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe0c1));
        EXPECT(0x3b, gbc.readMem(0xe0c2));
        // CB 3B 0032
        gbc.setState(0x6299, 0xad7e, 0xdf70, 0x936, 0x11ea, 0x2b47, 0x0, 0x0);
        gbc.writeMem(0x6299, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xad7e, gbc.sp());
        EXPECT(0x629b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3B 0033
        gbc.setState(0xba5b, 0x9e9b, 0x6bf0, 0x77a9, 0xa011, 0x90c0, 0x1, 0x1);
        gbc.writeMem(0xba5b, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x9e9b, gbc.sp());
        EXPECT(0xba5d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba5b));
        EXPECT(0x3b, gbc.readMem(0xba5c));
        // CB 3B 0034
        gbc.setState(0xa906, 0xf170, 0xa2b0, 0x8b85, 0x587a, 0x9853, 0x1, 0x1);
        gbc.writeMem(0xa906, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xf170, gbc.sp());
        EXPECT(0xa908, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa906));
        EXPECT(0x3b, gbc.readMem(0xa907));
        // CB 3B 0035
        gbc.setState(0x6cd4, 0x749e, 0x6eb0, 0xc83e, 0xb2ae, 0x463b, 0x0, 0x1);
        gbc.writeMem(0x6cd4, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x749e, gbc.sp());
        EXPECT(0x6cd6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3B 0036
        gbc.setState(0x2f13, 0x6e1e, 0xc250, 0xfa3a, 0xf03a, 0x6d6d, 0x1, 0x1);
        gbc.writeMem(0x2f13, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x6e1e, gbc.sp());
        EXPECT(0x2f15, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3B 0037
        gbc.setState(0x6443, 0x92f1, 0xaa40, 0x72b0, 0x3124, 0xe6e6, 0x1, 0x1);
        gbc.writeMem(0x6443, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x92f1, gbc.sp());
        EXPECT(0x6445, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3B 0038
        gbc.setState(0xa1c6, 0xead6, 0x2c00, 0xa979, 0x4198, 0x58e0, 0x1, 0x0);
        gbc.writeMem(0xa1c6, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xead6, gbc.sp());
        EXPECT(0xa1c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa1c6));
        EXPECT(0x3b, gbc.readMem(0xa1c7));
        // CB 3B 0039
        gbc.setState(0x4e42, 0xb214, 0x3fa0, 0x2725, 0x79e6, 0xe26b, 0x0, 0x0);
        gbc.writeMem(0x4e42, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xb214, gbc.sp());
        EXPECT(0x4e44, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3B 003A
        gbc.setState(0x66e2, 0x8ba9, 0xd610, 0xc843, 0xebde, 0x6420, 0x0, 0x1);
        gbc.writeMem(0x66e2, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x8ba9, gbc.sp());
        EXPECT(0x66e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3B 003B
        gbc.setState(0x1cfb, 0x4410, 0x3e00, 0xe957, 0x2e28, 0xc5ef, 0x0, 0x1);
        gbc.writeMem(0x1cfb, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x4410, gbc.sp());
        EXPECT(0x1cfd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3B 003C
        gbc.setState(0x3aec, 0x6310, 0x8be0, 0x265c, 0xadba, 0xfba0, 0x0, 0x1);
        gbc.writeMem(0x3aec, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x6310, gbc.sp());
        EXPECT(0x3aee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3B 003D
        gbc.setState(0xeb3a, 0x7d71, 0x6350, 0xf2bd, 0x76a5, 0x5b68, 0x1, 0x1);
        gbc.writeMem(0xeb3a, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x7d71, gbc.sp());
        EXPECT(0xeb3c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb3a));
        EXPECT(0x3b, gbc.readMem(0xeb3b));
        // CB 3B 003E
        gbc.setState(0xa40b, 0xd25c, 0x9900, 0x8d63, 0x7d15, 0x77a5, 0x0, 0x1);
        gbc.writeMem(0xa40b, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xd25c, gbc.sp());
        EXPECT(0xa40d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa40b));
        EXPECT(0x3b, gbc.readMem(0xa40c));
        // CB 3B 003F
        gbc.setState(0xac7, 0xbe50, 0x4dc0, 0xc013, 0x386b, 0xe801, 0x1, 0x1);
        gbc.writeMem(0xac7, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xbe50, gbc.sp());
        EXPECT(0xac9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3B 0040
        gbc.setState(0x6629, 0xc2b5, 0xa230, 0x59af, 0x1bfb, 0x3bf6, 0x1, 0x1);
        gbc.writeMem(0x6629, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xc2b5, gbc.sp());
        EXPECT(0x662b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3B 0041
        gbc.setState(0x7814, 0x30ae, 0x1510, 0xd34, 0x3ba9, 0x2b27, 0x1, 0x0);
        gbc.writeMem(0x7814, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x30ae, gbc.sp());
        EXPECT(0x7816, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3B 0042
        gbc.setState(0x2170, 0xa9e1, 0x1570, 0x9b4f, 0x1a29, 0xb231, 0x1, 0x1);
        gbc.writeMem(0x2170, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xa9e1, gbc.sp());
        EXPECT(0x2172, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3B 0043
        gbc.setState(0xc939, 0x4356, 0xb260, 0x88c4, 0xd0a9, 0x9954, 0x0, 0x0);
        gbc.writeMem(0xc939, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x4356, gbc.sp());
        EXPECT(0xc93b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc939));
        EXPECT(0x3b, gbc.readMem(0xc93a));
        // CB 3B 0044
        gbc.setState(0x4146, 0x171b, 0xa950, 0x91e3, 0xb06, 0xeffb, 0x1, 0x0);
        gbc.writeMem(0x4146, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x171b, gbc.sp());
        EXPECT(0x4148, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3B 0045
        gbc.setState(0x9fa3, 0x125d, 0x2b50, 0x8f8b, 0x2666, 0x9313, 0x0, 0x1);
        gbc.writeMem(0x9fa3, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x125d, gbc.sp());
        EXPECT(0x9fa5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9fa3));
        EXPECT(0x3b, gbc.readMem(0x9fa4));
        // CB 3B 0046
        gbc.setState(0x591, 0x68c, 0xb0f0, 0x4568, 0x51d3, 0xd582, 0x1, 0x1);
        gbc.writeMem(0x591, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x68c, gbc.sp());
        EXPECT(0x593, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3B 0047
        gbc.setState(0xdd5d, 0x1aac, 0xf470, 0x7223, 0x11a6, 0xefc1, 0x0, 0x0);
        gbc.writeMem(0xdd5d, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x1aac, gbc.sp());
        EXPECT(0xdd5f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd5d));
        EXPECT(0x3b, gbc.readMem(0xdd5e));
        // CB 3B 0048
        gbc.setState(0xc4a9, 0x62f0, 0xf710, 0x34b0, 0xa4e7, 0x4d0d, 0x0, 0x1);
        gbc.writeMem(0xc4a9, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x62f0, gbc.sp());
        EXPECT(0xc4ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc4a9));
        EXPECT(0x3b, gbc.readMem(0xc4aa));
        // CB 3B 0049
        gbc.setState(0xb78f, 0xa745, 0xc380, 0xbf68, 0x378d, 0x5f17, 0x0, 0x0);
        gbc.writeMem(0xb78f, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xa745, gbc.sp());
        EXPECT(0xb791, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb78f));
        EXPECT(0x3b, gbc.readMem(0xb790));
        // CB 3B 004B
        gbc.setState(0xde4e, 0x859d, 0x20d0, 0x59af, 0x1892, 0x327d, 0x1, 0x1);
        gbc.writeMem(0xde4e, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x859d, gbc.sp());
        EXPECT(0xde50, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde4e));
        EXPECT(0x3b, gbc.readMem(0xde4f));
        // CB 3B 004C
        gbc.setState(0xb013, 0x9524, 0xc3f0, 0x8b69, 0xd12a, 0xed6c, 0x0, 0x1);
        gbc.writeMem(0xb013, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x9524, gbc.sp());
        EXPECT(0xb015, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb013));
        EXPECT(0x3b, gbc.readMem(0xb014));
        // CB 3B 004D
        gbc.setState(0xac04, 0x6b91, 0x1880, 0x8f15, 0xd474, 0xace3, 0x0, 0x0);
        gbc.writeMem(0xac04, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x6b91, gbc.sp());
        EXPECT(0xac06, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac04));
        EXPECT(0x3b, gbc.readMem(0xac05));
        // CB 3B 004E
        gbc.setState(0x8324, 0x7ae1, 0xcfb0, 0x7e31, 0x36, 0x9faa, 0x0, 0x0);
        gbc.writeMem(0x8324, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x7ae1, gbc.sp());
        EXPECT(0x8326, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8324));
        EXPECT(0x3b, gbc.readMem(0x8325));
        // CB 3B 004F
        gbc.setState(0x4f57, 0x3021, 0xb060, 0x5e41, 0x12a4, 0x8278, 0x0, 0x1);
        gbc.writeMem(0x4f57, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x3021, gbc.sp());
        EXPECT(0x4f59, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3B 0050
        gbc.setState(0xa233, 0xc686, 0x2c70, 0xd38f, 0xf780, 0xfca1, 0x0, 0x1);
        gbc.writeMem(0xa233, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xc686, gbc.sp());
        EXPECT(0xa235, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa233));
        EXPECT(0x3b, gbc.readMem(0xa234));
        // CB 3B 0051
        gbc.setState(0x5c23, 0x9b1f, 0xa560, 0x4fb1, 0x53a3, 0xe811, 0x0, 0x1);
        gbc.writeMem(0x5c23, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x9b1f, gbc.sp());
        EXPECT(0x5c25, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3B 0052
        gbc.setState(0x7d69, 0x53ed, 0xe090, 0xb88a, 0x4e7f, 0x1a9c, 0x0, 0x0);
        gbc.writeMem(0x7d69, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x53ed, gbc.sp());
        EXPECT(0x7d6b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3B 0054
        gbc.setState(0x4b28, 0x809, 0x8aa0, 0x872d, 0x3696, 0x49ab, 0x1, 0x1);
        gbc.writeMem(0x4b28, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x809, gbc.sp());
        EXPECT(0x4b2a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3B 0055
        gbc.setState(0xaf60, 0x47b4, 0x1cc0, 0x8e44, 0x9143, 0xf6a4, 0x1, 0x1);
        gbc.writeMem(0xaf60, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x47b4, gbc.sp());
        EXPECT(0xaf62, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf60));
        EXPECT(0x3b, gbc.readMem(0xaf61));
        // CB 3B 0056
        gbc.setState(0x1f62, 0xec4d, 0x79e0, 0x1f35, 0xab54, 0x46ab, 0x0, 0x0);
        gbc.writeMem(0x1f62, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xec4d, gbc.sp());
        EXPECT(0x1f64, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3B 0057
        gbc.setState(0xac2f, 0xa2b, 0xf2f0, 0x8778, 0xe805, 0x5f56, 0x1, 0x0);
        gbc.writeMem(0xac2f, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xa2b, gbc.sp());
        EXPECT(0xac31, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac2f));
        EXPECT(0x3b, gbc.readMem(0xac30));
        // CB 3B 0058
        gbc.setState(0xa597, 0x7ca2, 0x5840, 0x6179, 0x7992, 0x372c, 0x0, 0x1);
        gbc.writeMem(0xa597, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x7ca2, gbc.sp());
        EXPECT(0xa599, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa597));
        EXPECT(0x3b, gbc.readMem(0xa598));
        // CB 3B 0059
        gbc.setState(0x9a0b, 0x31a2, 0xb610, 0x63a4, 0x22f7, 0x1104, 0x0, 0x0);
        gbc.writeMem(0x9a0b, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x31a2, gbc.sp());
        EXPECT(0x9a0d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a0b));
        EXPECT(0x3b, gbc.readMem(0x9a0c));
        // CB 3B 005A
        gbc.setState(0x1efd, 0x3e67, 0x95a0, 0x27a0, 0x26e3, 0xde7e, 0x1, 0x1);
        gbc.writeMem(0x1efd, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x3e67, gbc.sp());
        EXPECT(0x1eff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3B 005B
        gbc.setState(0x46f7, 0xa5f, 0x990, 0x8766, 0x617b, 0x1497, 0x1, 0x0);
        gbc.writeMem(0x46f7, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xa5f, gbc.sp());
        EXPECT(0x46f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3B 005C
        gbc.setState(0x2aed, 0xad33, 0x15f0, 0xd640, 0x9efc, 0x558d, 0x0, 0x0);
        gbc.writeMem(0x2aed, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xad33, gbc.sp());
        EXPECT(0x2aef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3B 005D
        gbc.setState(0x171e, 0xb86f, 0x4170, 0x9f66, 0xe58e, 0xc627, 0x0, 0x0);
        gbc.writeMem(0x171e, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xb86f, gbc.sp());
        EXPECT(0x1720, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3B 0060
        gbc.setState(0x87a9, 0x4bb, 0x7d0, 0x2a77, 0x8301, 0xafca, 0x0, 0x0);
        gbc.writeMem(0x87a9, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x4bb, gbc.sp());
        EXPECT(0x87ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x87a9));
        EXPECT(0x3b, gbc.readMem(0x87aa));
        // CB 3B 0061
        gbc.setState(0xbb3e, 0x7a62, 0xe590, 0x4526, 0x53fd, 0xe90e, 0x0, 0x1);
        gbc.writeMem(0xbb3e, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x7a62, gbc.sp());
        EXPECT(0xbb40, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb3e));
        EXPECT(0x3b, gbc.readMem(0xbb3f));
        // CB 3B 0062
        gbc.setState(0x552, 0xa17a, 0xf500, 0x96e0, 0x9165, 0xb84a, 0x0, 0x0);
        gbc.writeMem(0x552, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xa17a, gbc.sp());
        EXPECT(0x554, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3B 0063
        gbc.setState(0x8d2, 0xab07, 0x6190, 0x239b, 0xd583, 0x2bd5, 0x0, 0x1);
        gbc.writeMem(0x8d2, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xab07, gbc.sp());
        EXPECT(0x8d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3B 0064
        gbc.setState(0xd51f, 0x20, 0xb820, 0xba4a, 0xbded, 0x5850, 0x0, 0x0);
        gbc.writeMem(0xd51f, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x20, gbc.sp());
        EXPECT(0xd521, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd51f));
        EXPECT(0x3b, gbc.readMem(0xd520));
        // CB 3B 0066
        gbc.setState(0x9532, 0x8f30, 0x4060, 0xb6ea, 0xdb6d, 0xcc86, 0x0, 0x1);
        gbc.writeMem(0x9532, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x8f30, gbc.sp());
        EXPECT(0x9534, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9532));
        EXPECT(0x3b, gbc.readMem(0x9533));
        // CB 3B 0067
        gbc.setState(0xb57c, 0x5531, 0x10c0, 0x9eb7, 0x8261, 0x4b91, 0x1, 0x0);
        gbc.writeMem(0xb57c, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x5531, gbc.sp());
        EXPECT(0xb57e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb57c));
        EXPECT(0x3b, gbc.readMem(0xb57d));
        // CB 3B 0068
        gbc.setState(0x2a8a, 0x964d, 0x2e20, 0x573b, 0x3dd6, 0x47bf, 0x1, 0x0);
        gbc.writeMem(0x2a8a, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x964d, gbc.sp());
        EXPECT(0x2a8c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3B 0069
        gbc.setState(0xe005, 0xd061, 0x31a0, 0x1521, 0x34de, 0xb6a4, 0x1, 0x0);
        gbc.writeMem(0xe005, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xd061, gbc.sp());
        EXPECT(0xe007, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe005));
        EXPECT(0x3b, gbc.readMem(0xe006));
        // CB 3B 006A
        gbc.setState(0xc6dd, 0x756, 0x620, 0xd1ce, 0x236d, 0x99e, 0x0, 0x1);
        gbc.writeMem(0xc6dd, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x756, gbc.sp());
        EXPECT(0xc6df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc6dd));
        EXPECT(0x3b, gbc.readMem(0xc6de));
        // CB 3B 006B
        gbc.setState(0xa58e, 0xf08d, 0xcd50, 0x7034, 0x545, 0x77a1, 0x1, 0x0);
        gbc.writeMem(0xa58e, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xf08d, gbc.sp());
        EXPECT(0xa590, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa58e));
        EXPECT(0x3b, gbc.readMem(0xa58f));
        // CB 3B 006C
        gbc.setState(0xec76, 0x9a78, 0xf770, 0x508c, 0xe99f, 0x28a5, 0x0, 0x0);
        gbc.writeMem(0xec76, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x9a78, gbc.sp());
        EXPECT(0xec78, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec76));
        EXPECT(0x3b, gbc.readMem(0xec77));
        // CB 3B 006D
        gbc.setState(0xae8d, 0x7816, 0x8d90, 0x885b, 0xf309, 0xc944, 0x0, 0x1);
        gbc.writeMem(0xae8d, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x7816, gbc.sp());
        EXPECT(0xae8f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae8d));
        EXPECT(0x3b, gbc.readMem(0xae8e));
        // CB 3B 006E
        gbc.setState(0x143, 0x5c8f, 0xbaf0, 0x43de, 0xa741, 0xc008, 0x1, 0x1);
        gbc.writeMem(0x143, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x5c8f, gbc.sp());
        EXPECT(0x145, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3B 006F
        gbc.setState(0xbf8d, 0xdf84, 0xb050, 0xf00b, 0xab53, 0x9f32, 0x0, 0x1);
        gbc.writeMem(0xbf8d, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xdf84, gbc.sp());
        EXPECT(0xbf8f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf8d));
        EXPECT(0x3b, gbc.readMem(0xbf8e));
        // CB 3B 0070
        gbc.setState(0xfad, 0xfd3f, 0x3e20, 0x9166, 0x7140, 0xf87d, 0x1, 0x0);
        gbc.writeMem(0xfad, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xfd3f, gbc.sp());
        EXPECT(0xfaf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3B 0071
        gbc.setState(0x5e25, 0xd299, 0x3ff0, 0x8ca8, 0x41d5, 0x8853, 0x1, 0x0);
        gbc.writeMem(0x5e25, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xd299, gbc.sp());
        EXPECT(0x5e27, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3B 0072
        gbc.setState(0xb28, 0x1ee1, 0x9d80, 0xdec, 0xa53b, 0xdb0c, 0x1, 0x1);
        gbc.writeMem(0xb28, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x1ee1, gbc.sp());
        EXPECT(0xb2a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3B 0073
        gbc.setState(0x7113, 0xfb86, 0x46c0, 0x8ef8, 0x75bd, 0x5d51, 0x0, 0x0);
        gbc.writeMem(0x7113, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xfb86, gbc.sp());
        EXPECT(0x7115, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3B 0075
        gbc.setState(0xcc4c, 0xeea0, 0xd3c0, 0x86ae, 0xd3a5, 0x3448, 0x0, 0x0);
        gbc.writeMem(0xcc4c, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xeea0, gbc.sp());
        EXPECT(0xcc4e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc4c));
        EXPECT(0x3b, gbc.readMem(0xcc4d));
        // CB 3B 0076
        gbc.setState(0x63c0, 0x4839, 0x140, 0xe0bc, 0x249a, 0xec0f, 0x0, 0x0);
        gbc.writeMem(0x63c0, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x4839, gbc.sp());
        EXPECT(0x63c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3B 0077
        gbc.setState(0xd0c, 0x4e32, 0xb450, 0x8eab, 0x6daf, 0x4dcf, 0x1, 0x1);
        gbc.writeMem(0xd0c, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x4e32, gbc.sp());
        EXPECT(0xd0e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3B 0078
        gbc.setState(0x3f1c, 0x477, 0x1160, 0x77ef, 0x8ab, 0x5ac3, 0x1, 0x1);
        gbc.writeMem(0x3f1c, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x477, gbc.sp());
        EXPECT(0x3f1e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3B 0079
        gbc.setState(0xeb28, 0x5d0d, 0x27b0, 0xea32, 0xc7f, 0xfccc, 0x1, 0x1);
        gbc.writeMem(0xeb28, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x5d0d, gbc.sp());
        EXPECT(0xeb2a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb28));
        EXPECT(0x3b, gbc.readMem(0xeb29));
        // CB 3B 007A
        gbc.setState(0x3127, 0x3b93, 0x4a60, 0xc3e5, 0x3904, 0x226c, 0x1, 0x1);
        gbc.writeMem(0x3127, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x3b93, gbc.sp());
        EXPECT(0x3129, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3B 007B
        gbc.setState(0xd49a, 0x75c9, 0x5460, 0xd88d, 0x2301, 0x3c62, 0x0, 0x0);
        gbc.writeMem(0xd49a, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x75c9, gbc.sp());
        EXPECT(0xd49c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd49a));
        EXPECT(0x3b, gbc.readMem(0xd49b));
        // CB 3B 007C
        gbc.setState(0xc7a3, 0x7be4, 0x66e0, 0x621, 0x1463, 0x8a54, 0x0, 0x0);
        gbc.writeMem(0xc7a3, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x7be4, gbc.sp());
        EXPECT(0xc7a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc7a3));
        EXPECT(0x3b, gbc.readMem(0xc7a4));
        // CB 3B 007D
        gbc.setState(0xa05, 0xcb6d, 0xf520, 0xddc8, 0xf50d, 0x29b0, 0x0, 0x0);
        gbc.writeMem(0xa05, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xcb6d, gbc.sp());
        EXPECT(0xa07, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3B 007E
        gbc.setState(0x4561, 0xa8f9, 0xd280, 0x4008, 0xe0e5, 0x53b3, 0x0, 0x1);
        gbc.writeMem(0x4561, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xa8f9, gbc.sp());
        EXPECT(0x4563, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3B 007F
        gbc.setState(0x553f, 0xbe9c, 0x2c80, 0x3bd3, 0x8ff6, 0xd935, 0x0, 0x1);
        gbc.writeMem(0x553f, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xbe9c, gbc.sp());
        EXPECT(0x5541, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3B 0080
        gbc.setState(0x929d, 0xf390, 0xf40, 0x8825, 0x5eea, 0x657b, 0x1, 0x0);
        gbc.writeMem(0x929d, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xf390, gbc.sp());
        EXPECT(0x929f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x929d));
        EXPECT(0x3b, gbc.readMem(0x929e));
        // CB 3B 0081
        gbc.setState(0x2098, 0x192b, 0x3640, 0x2fdb, 0xbdcc, 0x3591, 0x1, 0x1);
        gbc.writeMem(0x2098, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x192b, gbc.sp());
        EXPECT(0x209a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3B 0082
        gbc.setState(0xa1b7, 0xc1a9, 0x3680, 0xb9b6, 0x2998, 0x89d, 0x1, 0x0);
        gbc.writeMem(0xa1b7, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xc1a9, gbc.sp());
        EXPECT(0xa1b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa1b7));
        EXPECT(0x3b, gbc.readMem(0xa1b8));
        // CB 3B 0083
        gbc.setState(0x4d6d, 0xf888, 0xaac0, 0x30fa, 0xb3d2, 0xbfdb, 0x1, 0x1);
        gbc.writeMem(0x4d6d, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xf888, gbc.sp());
        EXPECT(0x4d6f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3B 0084
        gbc.setState(0xb743, 0xb3a1, 0x28f0, 0xff4, 0x31cd, 0x2796, 0x0, 0x0);
        gbc.writeMem(0xb743, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xb3a1, gbc.sp());
        EXPECT(0xb745, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb743));
        EXPECT(0x3b, gbc.readMem(0xb744));
        // CB 3B 0085
        gbc.setState(0x1024, 0x8342, 0xc620, 0x9f54, 0xa816, 0x251b, 0x0, 0x0);
        gbc.writeMem(0x1024, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x8342, gbc.sp());
        EXPECT(0x1026, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3B 0086
        gbc.setState(0x519a, 0x8975, 0xd1b0, 0x829d, 0x4e90, 0x7ec5, 0x1, 0x1);
        gbc.writeMem(0x519a, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x8975, gbc.sp());
        EXPECT(0x519c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3B 0087
        gbc.setState(0x235e, 0x49a9, 0x69d0, 0xc1a2, 0x9241, 0x16e5, 0x1, 0x0);
        gbc.writeMem(0x235e, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x49a9, gbc.sp());
        EXPECT(0x2360, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3B 0088
        gbc.setState(0x8e9f, 0x61c7, 0xe0, 0x5e7f, 0x507f, 0xa31b, 0x0, 0x0);
        gbc.writeMem(0x8e9f, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x61c7, gbc.sp());
        EXPECT(0x8ea1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e9f));
        EXPECT(0x3b, gbc.readMem(0x8ea0));
        // CB 3B 0089
        gbc.setState(0xe34b, 0x38b9, 0xe470, 0xb715, 0x98ce, 0x4e7c, 0x0, 0x0);
        gbc.writeMem(0xe34b, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x38b9, gbc.sp());
        EXPECT(0xe34d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe34b));
        EXPECT(0x3b, gbc.readMem(0xe34c));
        // CB 3B 008A
        gbc.setState(0xacf0, 0xa739, 0xe9a0, 0xfd86, 0x15b4, 0xe60b, 0x1, 0x1);
        gbc.writeMem(0xacf0, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xa739, gbc.sp());
        EXPECT(0xacf2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xacf0));
        EXPECT(0x3b, gbc.readMem(0xacf1));
        // CB 3B 008B
        gbc.setState(0x480e, 0xb406, 0x2c80, 0x6ff3, 0x11c1, 0xcba3, 0x1, 0x1);
        gbc.writeMem(0x480e, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xb406, gbc.sp());
        EXPECT(0x4810, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3B 008D
        gbc.setState(0xd619, 0x6c03, 0xaac0, 0xef78, 0x2576, 0x90c4, 0x0, 0x0);
        gbc.writeMem(0xd619, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x6c03, gbc.sp());
        EXPECT(0xd61b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd619));
        EXPECT(0x3b, gbc.readMem(0xd61a));
        // CB 3B 008E
        gbc.setState(0x3c56, 0xbb41, 0x50f0, 0xf1d, 0xd354, 0xbd78, 0x1, 0x1);
        gbc.writeMem(0x3c56, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xbb41, gbc.sp());
        EXPECT(0x3c58, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3B 008F
        gbc.setState(0xa690, 0xea65, 0x3130, 0x6af9, 0x64e1, 0x11cc, 0x1, 0x1);
        gbc.writeMem(0xa690, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xea65, gbc.sp());
        EXPECT(0xa692, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa690));
        EXPECT(0x3b, gbc.readMem(0xa691));
        // CB 3B 0090
        gbc.setState(0x6f63, 0x8593, 0xb4a0, 0x2070, 0x3f03, 0xef2a, 0x1, 0x0);
        gbc.writeMem(0x6f63, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x8593, gbc.sp());
        EXPECT(0x6f65, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3B 0091
        gbc.setState(0x2fb4, 0xf0cd, 0x4e30, 0xa9f7, 0x494f, 0x7579, 0x1, 0x0);
        gbc.writeMem(0x2fb4, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xf0cd, gbc.sp());
        EXPECT(0x2fb6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3B 0092
        gbc.setState(0x714a, 0xba28, 0x9470, 0xf151, 0x760e, 0x1e3, 0x0, 0x0);
        gbc.writeMem(0x714a, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xba28, gbc.sp());
        EXPECT(0x714c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3B 0093
        gbc.setState(0xdc24, 0x532b, 0xfca0, 0x76e7, 0x2640, 0x17ed, 0x1, 0x0);
        gbc.writeMem(0xdc24, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x532b, gbc.sp());
        EXPECT(0xdc26, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc24));
        EXPECT(0x3b, gbc.readMem(0xdc25));
        // CB 3B 0094
        gbc.setState(0x589d, 0xde0, 0xdfe0, 0x1e34, 0xc881, 0xde61, 0x1, 0x0);
        gbc.writeMem(0x589d, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xde0, gbc.sp());
        EXPECT(0x589f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3B 0095
        gbc.setState(0x6145, 0x9ee9, 0xdbf0, 0xeab1, 0xdda4, 0xe07e, 0x1, 0x0);
        gbc.writeMem(0x6145, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x9ee9, gbc.sp());
        EXPECT(0x6147, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3B 0096
        gbc.setState(0xc13, 0x7807, 0x1470, 0xc518, 0x7cb0, 0xeb19, 0x1, 0x0);
        gbc.writeMem(0xc13, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x7807, gbc.sp());
        EXPECT(0xc15, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3B 0097
        gbc.setState(0x6ccc, 0x96d5, 0x7b50, 0xc51d, 0x70dc, 0xeffb, 0x1, 0x0);
        gbc.writeMem(0x6ccc, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x96d5, gbc.sp());
        EXPECT(0x6cce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3B 0098
        gbc.setState(0xcaef, 0x34cc, 0x6360, 0x7f96, 0x9786, 0x1f0c, 0x1, 0x0);
        gbc.writeMem(0xcaef, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x34cc, gbc.sp());
        EXPECT(0xcaf1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcaef));
        EXPECT(0x3b, gbc.readMem(0xcaf0));
        // CB 3B 0099
        gbc.setState(0x671e, 0xb9b, 0x8030, 0x4049, 0xbd86, 0x9d88, 0x1, 0x0);
        gbc.writeMem(0x671e, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xb9b, gbc.sp());
        EXPECT(0x6720, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3B 009A
        gbc.setState(0xe302, 0xa693, 0x150, 0xf26c, 0xf5a0, 0x1f12, 0x0, 0x1);
        gbc.writeMem(0xe302, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xa693, gbc.sp());
        EXPECT(0xe304, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe302));
        EXPECT(0x3b, gbc.readMem(0xe303));
        // CB 3B 009B
        gbc.setState(0x1b81, 0x293b, 0xc160, 0xbc5f, 0xa08c, 0x4f5d, 0x0, 0x0);
        gbc.writeMem(0x1b81, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x293b, gbc.sp());
        EXPECT(0x1b83, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3B 009C
        gbc.setState(0xc198, 0xd92e, 0x5f0, 0x54e0, 0xad1a, 0xd875, 0x1, 0x1);
        gbc.writeMem(0xc198, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xd92e, gbc.sp());
        EXPECT(0xc19a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc198));
        EXPECT(0x3b, gbc.readMem(0xc199));
        // CB 3B 009D
        gbc.setState(0x728f, 0x38ba, 0xae90, 0x3926, 0xaa91, 0x7fe0, 0x0, 0x0);
        gbc.writeMem(0x728f, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x38ba, gbc.sp());
        EXPECT(0x7291, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3B 009E
        gbc.setState(0xa644, 0xdfa7, 0x9810, 0x57f4, 0x5893, 0x9fef, 0x0, 0x1);
        gbc.writeMem(0xa644, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xdfa7, gbc.sp());
        EXPECT(0xa646, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa644));
        EXPECT(0x3b, gbc.readMem(0xa645));
        // CB 3B 009F
        gbc.setState(0xd444, 0xe463, 0x5500, 0xedc5, 0x65e7, 0x6718, 0x1, 0x0);
        gbc.writeMem(0xd444, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xe463, gbc.sp());
        EXPECT(0xd446, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd444));
        EXPECT(0x3b, gbc.readMem(0xd445));
        // CB 3B 00A0
        gbc.setState(0xc537, 0x61ba, 0x81a0, 0xbb2, 0x7563, 0x8721, 0x1, 0x0);
        gbc.writeMem(0xc537, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x61ba, gbc.sp());
        EXPECT(0xc539, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc537));
        EXPECT(0x3b, gbc.readMem(0xc538));
        // CB 3B 00A1
        gbc.setState(0xdfc, 0x8160, 0x3960, 0xdf01, 0xb45b, 0x7695, 0x1, 0x1);
        gbc.writeMem(0xdfc, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x8160, gbc.sp());
        EXPECT(0xdfe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3B 00A2
        gbc.setState(0xa6f6, 0x3ef, 0x28a0, 0x3497, 0xa518, 0x1c6b, 0x1, 0x0);
        gbc.writeMem(0xa6f6, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x3ef, gbc.sp());
        EXPECT(0xa6f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa6f6));
        EXPECT(0x3b, gbc.readMem(0xa6f7));
        // CB 3B 00A3
        gbc.setState(0x4cbc, 0xfd42, 0x4530, 0x5a87, 0xfd27, 0xd373, 0x1, 0x1);
        gbc.writeMem(0x4cbc, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xfd42, gbc.sp());
        EXPECT(0x4cbe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3B 00A4
        gbc.setState(0xbd64, 0x1208, 0x1630, 0x6b71, 0x4827, 0xe751, 0x1, 0x0);
        gbc.writeMem(0xbd64, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x1208, gbc.sp());
        EXPECT(0xbd66, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd64));
        EXPECT(0x3b, gbc.readMem(0xbd65));
        // CB 3B 00A5
        gbc.setState(0x22d1, 0x87fc, 0xcb80, 0x86c8, 0x722, 0xa580, 0x1, 0x0);
        gbc.writeMem(0x22d1, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x87fc, gbc.sp());
        EXPECT(0x22d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3B 00A6
        gbc.setState(0xdd13, 0x57aa, 0x6ee0, 0x3299, 0x2f53, 0x2333, 0x1, 0x0);
        gbc.writeMem(0xdd13, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x57aa, gbc.sp());
        EXPECT(0xdd15, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd13));
        EXPECT(0x3b, gbc.readMem(0xdd14));
        // CB 3B 00A7
        gbc.setState(0x7414, 0xf811, 0x1f10, 0x8dba, 0x73a4, 0x9f3b, 0x1, 0x0);
        gbc.writeMem(0x7414, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xf811, gbc.sp());
        EXPECT(0x7416, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3B 00A8
        gbc.setState(0x9423, 0xb13a, 0xed90, 0x482e, 0xfe87, 0xcb37, 0x1, 0x0);
        gbc.writeMem(0x9423, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xb13a, gbc.sp());
        EXPECT(0x9425, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9423));
        EXPECT(0x3b, gbc.readMem(0x9424));
        // CB 3B 00A9
        gbc.setState(0x5dd9, 0x2df6, 0xb190, 0xe17d, 0x7169, 0x81ab, 0x0, 0x1);
        gbc.writeMem(0x5dd9, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x2df6, gbc.sp());
        EXPECT(0x5ddb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3B 00AA
        gbc.setState(0xd16f, 0x2636, 0x940, 0x656f, 0x871e, 0x1c19, 0x0, 0x1);
        gbc.writeMem(0xd16f, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x2636, gbc.sp());
        EXPECT(0xd171, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd16f));
        EXPECT(0x3b, gbc.readMem(0xd170));
        // CB 3B 00AB
        gbc.setState(0x86cc, 0x3de5, 0xa9a0, 0xcd7f, 0xbe18, 0xd819, 0x1, 0x1);
        gbc.writeMem(0x86cc, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x3de5, gbc.sp());
        EXPECT(0x86ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x86cc));
        EXPECT(0x3b, gbc.readMem(0x86cd));
        // CB 3B 00AC
        gbc.setState(0x8897, 0xa487, 0x44d0, 0x153b, 0x3918, 0x8c81, 0x1, 0x1);
        gbc.writeMem(0x8897, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xa487, gbc.sp());
        EXPECT(0x8899, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8897));
        EXPECT(0x3b, gbc.readMem(0x8898));
        // CB 3B 00AD
        gbc.setState(0xca54, 0x1d09, 0x1320, 0xa828, 0x312b, 0x82c2, 0x0, 0x0);
        gbc.writeMem(0xca54, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x1d09, gbc.sp());
        EXPECT(0xca56, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca54));
        EXPECT(0x3b, gbc.readMem(0xca55));
        // CB 3B 00AE
        gbc.setState(0x6067, 0xa04c, 0xebe0, 0xceb9, 0x2002, 0xc1a0, 0x1, 0x1);
        gbc.writeMem(0x6067, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xa04c, gbc.sp());
        EXPECT(0x6069, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3B 00AF
        gbc.setState(0xdf0d, 0x208f, 0x1470, 0xfd1d, 0xa49f, 0x5397, 0x0, 0x1);
        gbc.writeMem(0xdf0d, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x208f, gbc.sp());
        EXPECT(0xdf0f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf0d));
        EXPECT(0x3b, gbc.readMem(0xdf0e));
        // CB 3B 00B0
        gbc.setState(0xd59a, 0x8bf6, 0x590, 0x3e75, 0x994a, 0x2179, 0x1, 0x0);
        gbc.writeMem(0xd59a, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x8bf6, gbc.sp());
        EXPECT(0xd59c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd59a));
        EXPECT(0x3b, gbc.readMem(0xd59b));
        // CB 3B 00B1
        gbc.setState(0x5815, 0xd947, 0xa710, 0xd265, 0x668a, 0xdf14, 0x1, 0x0);
        gbc.writeMem(0x5815, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xd947, gbc.sp());
        EXPECT(0x5817, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3B 00B2
        gbc.setState(0x6dc7, 0x1590, 0x8780, 0x38c7, 0xac97, 0xe25e, 0x1, 0x0);
        gbc.writeMem(0x6dc7, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x1590, gbc.sp());
        EXPECT(0x6dc9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3B 00B3
        gbc.setState(0x9418, 0x4d76, 0xd8d0, 0x744f, 0x5c21, 0x4894, 0x1, 0x0);
        gbc.writeMem(0x9418, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x4d76, gbc.sp());
        EXPECT(0x941a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9418));
        EXPECT(0x3b, gbc.readMem(0x9419));
        // CB 3B 00B5
        gbc.setState(0x711e, 0xf973, 0xada0, 0xc52f, 0x580e, 0xf517, 0x0, 0x0);
        gbc.writeMem(0x711e, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xf973, gbc.sp());
        EXPECT(0x7120, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3B 00B6
        gbc.setState(0x7acd, 0xe4f9, 0xf210, 0x22c9, 0x7c8d, 0x71c8, 0x0, 0x0);
        gbc.writeMem(0x7acd, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xe4f9, gbc.sp());
        EXPECT(0x7acf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3B 00B7
        gbc.setState(0xe6b1, 0x9f07, 0x9de0, 0x2e2c, 0xd36e, 0xd456, 0x1, 0x1);
        gbc.writeMem(0xe6b1, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x9f07, gbc.sp());
        EXPECT(0xe6b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe6b1));
        EXPECT(0x3b, gbc.readMem(0xe6b2));
        // CB 3B 00B8
        gbc.setState(0x8cde, 0xa537, 0x1b70, 0x77ee, 0x50ab, 0xfe79, 0x0, 0x1);
        gbc.writeMem(0x8cde, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xa537, gbc.sp());
        EXPECT(0x8ce0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8cde));
        EXPECT(0x3b, gbc.readMem(0x8cdf));
        // CB 3B 00B9
        gbc.setState(0x9a4d, 0x88fd, 0x8c60, 0x749b, 0x2504, 0xb8c9, 0x1, 0x0);
        gbc.writeMem(0x9a4d, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x88fd, gbc.sp());
        EXPECT(0x9a4f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a4d));
        EXPECT(0x3b, gbc.readMem(0x9a4e));
        // CB 3B 00BA
        gbc.setState(0xea27, 0x7ac0, 0xa3c0, 0x5d04, 0x3be0, 0x295b, 0x1, 0x1);
        gbc.writeMem(0xea27, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x7ac0, gbc.sp());
        EXPECT(0xea29, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea27));
        EXPECT(0x3b, gbc.readMem(0xea28));
        // CB 3B 00BB
        gbc.setState(0x7106, 0x4cef, 0xb130, 0x2c2e, 0xad56, 0x77a8, 0x1, 0x0);
        gbc.writeMem(0x7106, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x4cef, gbc.sp());
        EXPECT(0x7108, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3B 00BC
        gbc.setState(0x85f, 0x3d5e, 0x8f90, 0xb252, 0x2b3f, 0xecb5, 0x1, 0x1);
        gbc.writeMem(0x85f, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x3d5e, gbc.sp());
        EXPECT(0x861, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3B 00BD
        gbc.setState(0x5b4e, 0x59d4, 0x4720, 0x6e7a, 0xa735, 0x8485, 0x0, 0x1);
        gbc.writeMem(0x5b4e, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x59d4, gbc.sp());
        EXPECT(0x5b50, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3B 00BE
        gbc.setState(0x75c8, 0x4446, 0xd870, 0x5b69, 0x5532, 0xe7cb, 0x1, 0x0);
        gbc.writeMem(0x75c8, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x4446, gbc.sp());
        EXPECT(0x75ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3B 00BF
        gbc.setState(0xce3a, 0x1b37, 0x90f0, 0x4277, 0x53df, 0x4ff2, 0x1, 0x0);
        gbc.writeMem(0xce3a, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x1b37, gbc.sp());
        EXPECT(0xce3c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce3a));
        EXPECT(0x3b, gbc.readMem(0xce3b));
        // CB 3B 00C0
        gbc.setState(0x7d47, 0x5dde, 0x4e30, 0xd93, 0x35ad, 0xe131, 0x1, 0x1);
        gbc.writeMem(0x7d47, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x5dde, gbc.sp());
        EXPECT(0x7d49, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3B 00C1
        gbc.setState(0x926b, 0xf7e6, 0x7720, 0x6d91, 0x7900, 0xe4f7, 0x0, 0x0);
        gbc.writeMem(0x926b, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xf7e6, gbc.sp());
        EXPECT(0x926d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x926b));
        EXPECT(0x3b, gbc.readMem(0x926c));
        // CB 3B 00C2
        gbc.setState(0xcc79, 0xe9dc, 0xd1f0, 0x2ce5, 0xc4d8, 0x1330, 0x1, 0x0);
        gbc.writeMem(0xcc79, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xe9dc, gbc.sp());
        EXPECT(0xcc7b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc79));
        EXPECT(0x3b, gbc.readMem(0xcc7a));
        // CB 3B 00C3
        gbc.setState(0x98b7, 0x7729, 0xbe00, 0x319d, 0xf444, 0x3600, 0x1, 0x1);
        gbc.writeMem(0x98b7, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x7729, gbc.sp());
        EXPECT(0x98b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x98b7));
        EXPECT(0x3b, gbc.readMem(0x98b8));
        // CB 3B 00C4
        gbc.setState(0x76cc, 0x1f2e, 0x5a20, 0xc459, 0x82a4, 0x5c8e, 0x1, 0x1);
        gbc.writeMem(0x76cc, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x1f2e, gbc.sp());
        EXPECT(0x76ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3B 00C5
        gbc.setState(0x8206, 0x6799, 0x6ff0, 0x88fd, 0x37fe, 0x4822, 0x0, 0x0);
        gbc.writeMem(0x8206, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x6799, gbc.sp());
        EXPECT(0x8208, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8206));
        EXPECT(0x3b, gbc.readMem(0x8207));
        // CB 3B 00C6
        gbc.setState(0xebd1, 0xbb66, 0xd850, 0xc077, 0x4b0d, 0x6e71, 0x0, 0x0);
        gbc.writeMem(0xebd1, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xbb66, gbc.sp());
        EXPECT(0xebd3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xebd1));
        EXPECT(0x3b, gbc.readMem(0xebd2));
        // CB 3B 00C7
        gbc.setState(0x503f, 0xa53a, 0x6fc0, 0x78f1, 0xa679, 0x57ba, 0x0, 0x0);
        gbc.writeMem(0x503f, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xa53a, gbc.sp());
        EXPECT(0x5041, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3B 00C8
        gbc.setState(0xbf8b, 0x9fc6, 0xea80, 0xeba9, 0x29e4, 0xd15c, 0x1, 0x1);
        gbc.writeMem(0xbf8b, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x9fc6, gbc.sp());
        EXPECT(0xbf8d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf8b));
        EXPECT(0x3b, gbc.readMem(0xbf8c));
        // CB 3B 00C9
        gbc.setState(0xcd65, 0xea32, 0xc390, 0x358d, 0x4edc, 0x5a85, 0x1, 0x0);
        gbc.writeMem(0xcd65, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xea32, gbc.sp());
        EXPECT(0xcd67, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd65));
        EXPECT(0x3b, gbc.readMem(0xcd66));
        // CB 3B 00CA
        gbc.setState(0xed04, 0x2bb2, 0xf360, 0xf7ae, 0x1206, 0x275e, 0x1, 0x1);
        gbc.writeMem(0xed04, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x2bb2, gbc.sp());
        EXPECT(0xed06, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed04));
        EXPECT(0x3b, gbc.readMem(0xed05));
        // CB 3B 00CB
        gbc.setState(0x20ec, 0x2f45, 0x5da0, 0xc460, 0xc590, 0xd1b3, 0x1, 0x1);
        gbc.writeMem(0x20ec, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x2f45, gbc.sp());
        EXPECT(0x20ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3B 00CC
        gbc.setState(0x9e51, 0x92fd, 0x5990, 0x4025, 0x67a0, 0x1bb1, 0x0, 0x1);
        gbc.writeMem(0x9e51, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x92fd, gbc.sp());
        EXPECT(0x9e53, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e51));
        EXPECT(0x3b, gbc.readMem(0x9e52));
        // CB 3B 00CD
        gbc.setState(0xc515, 0xea4, 0x7e80, 0x698b, 0xa10, 0x7d97, 0x0, 0x0);
        gbc.writeMem(0xc515, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xea4, gbc.sp());
        EXPECT(0xc517, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc515));
        EXPECT(0x3b, gbc.readMem(0xc516));
        // CB 3B 00CE
        gbc.setState(0xd272, 0x30b5, 0x3dc0, 0x84b, 0xd1f5, 0x103f, 0x1, 0x0);
        gbc.writeMem(0xd272, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x30b5, gbc.sp());
        EXPECT(0xd274, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd272));
        EXPECT(0x3b, gbc.readMem(0xd273));
        // CB 3B 00CF
        gbc.setState(0xc18, 0xca6, 0x23c0, 0xabe9, 0x8449, 0x13f6, 0x1, 0x0);
        gbc.writeMem(0xc18, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xca6, gbc.sp());
        EXPECT(0xc1a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3B 00D0
        gbc.setState(0x6171, 0x9e49, 0xf760, 0x6ce, 0xfa0d, 0x46a0, 0x0, 0x1);
        gbc.writeMem(0x6171, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x9e49, gbc.sp());
        EXPECT(0x6173, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3B 00D1
        gbc.setState(0x5861, 0xdd29, 0xe90, 0x86a9, 0x1e84, 0x1e13, 0x0, 0x0);
        gbc.writeMem(0x5861, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xdd29, gbc.sp());
        EXPECT(0x5863, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3B 00D2
        gbc.setState(0x8e8c, 0x22f4, 0xd3d0, 0x96bf, 0x90f, 0x1352, 0x0, 0x0);
        gbc.writeMem(0x8e8c, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x22f4, gbc.sp());
        EXPECT(0x8e8e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e8c));
        EXPECT(0x3b, gbc.readMem(0x8e8d));
        // CB 3B 00D3
        gbc.setState(0x94, 0xfbe6, 0x72c0, 0x523f, 0x70c1, 0xa4fa, 0x0, 0x0);
        gbc.writeMem(0x94, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xfbe6, gbc.sp());
        EXPECT(0x96, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3B 00D5
        gbc.setState(0x20ef, 0xbde2, 0x37f0, 0xe887, 0x18f6, 0xed3f, 0x1, 0x0);
        gbc.writeMem(0x20ef, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xbde2, gbc.sp());
        EXPECT(0x20f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3B 00D6
        gbc.setState(0xac88, 0xcc2, 0xd840, 0x6b, 0x105a, 0x9952, 0x1, 0x0);
        gbc.writeMem(0xac88, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xcc2, gbc.sp());
        EXPECT(0xac8a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac88));
        EXPECT(0x3b, gbc.readMem(0xac89));
        // CB 3B 00D7
        gbc.setState(0x60b1, 0x78b8, 0x9870, 0x96e4, 0x349, 0x6e1f, 0x1, 0x0);
        gbc.writeMem(0x60b1, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x78b8, gbc.sp());
        EXPECT(0x60b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3B 00D8
        gbc.setState(0xabc6, 0xee2, 0x8900, 0xf19e, 0xb0a9, 0x502d, 0x0, 0x0);
        gbc.writeMem(0xabc6, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xee2, gbc.sp());
        EXPECT(0xabc8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xabc6));
        EXPECT(0x3b, gbc.readMem(0xabc7));
        // CB 3B 00D9
        gbc.setState(0xb230, 0xe6e3, 0x15a0, 0xc9ef, 0xdd39, 0xa3c8, 0x0, 0x1);
        gbc.writeMem(0xb230, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xe6e3, gbc.sp());
        EXPECT(0xb232, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb230));
        EXPECT(0x3b, gbc.readMem(0xb231));
        // CB 3B 00DA
        gbc.setState(0x1aec, 0x5e4a, 0x5c80, 0xdcf3, 0x7b90, 0x6976, 0x0, 0x1);
        gbc.writeMem(0x1aec, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x5e4a, gbc.sp());
        EXPECT(0x1aee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3B 00DB
        gbc.setState(0x9ed3, 0x9856, 0x36f0, 0x9e52, 0xb82, 0xf9f5, 0x0, 0x0);
        gbc.writeMem(0x9ed3, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x9856, gbc.sp());
        EXPECT(0x9ed5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ed3));
        EXPECT(0x3b, gbc.readMem(0x9ed4));
        // CB 3B 00DC
        gbc.setState(0x10ba, 0x758c, 0xde10, 0xcaf0, 0xeb41, 0x66a6, 0x0, 0x0);
        gbc.writeMem(0x10ba, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x758c, gbc.sp());
        EXPECT(0x10bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3B 00DD
        gbc.setState(0xc055, 0x95a0, 0x5ba0, 0x8262, 0x1a5, 0x9ec5, 0x1, 0x1);
        gbc.writeMem(0xc055, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x95a0, gbc.sp());
        EXPECT(0xc057, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc055));
        EXPECT(0x3b, gbc.readMem(0xc056));
        // CB 3B 00DE
        gbc.setState(0xb4b7, 0x5d8b, 0x1c30, 0x69c5, 0x85f8, 0x305c, 0x0, 0x0);
        gbc.writeMem(0xb4b7, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x5d8b, gbc.sp());
        EXPECT(0xb4b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb4b7));
        EXPECT(0x3b, gbc.readMem(0xb4b8));
        // CB 3B 00DF
        gbc.setState(0xb190, 0x44f6, 0xa870, 0xec51, 0xb66d, 0x561d, 0x1, 0x0);
        gbc.writeMem(0xb190, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x44f6, gbc.sp());
        EXPECT(0xb192, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb190));
        EXPECT(0x3b, gbc.readMem(0xb191));
        // CB 3B 00E0
        gbc.setState(0x330, 0x5049, 0xd040, 0x9f1e, 0x90b2, 0xcb9f, 0x1, 0x0);
        gbc.writeMem(0x330, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x5049, gbc.sp());
        EXPECT(0x332, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3B 00E1
        gbc.setState(0x9ae7, 0x3544, 0xde70, 0x55c7, 0xfe88, 0x4250, 0x0, 0x1);
        gbc.writeMem(0x9ae7, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x3544, gbc.sp());
        EXPECT(0x9ae9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ae7));
        EXPECT(0x3b, gbc.readMem(0x9ae8));
        // CB 3B 00E2
        gbc.setState(0x2a05, 0xf060, 0xc970, 0x1e76, 0x683, 0x1661, 0x0, 0x1);
        gbc.writeMem(0x2a05, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xf060, gbc.sp());
        EXPECT(0x2a07, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3B 00E3
        gbc.setState(0x3d8b, 0xb2d7, 0xd7e0, 0x3cf4, 0x4c6, 0xb453, 0x1, 0x1);
        gbc.writeMem(0x3d8b, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xb2d7, gbc.sp());
        EXPECT(0x3d8d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3B 00E4
        gbc.setState(0xd429, 0x16a2, 0xf700, 0xb29f, 0xe4f0, 0xdc22, 0x1, 0x0);
        gbc.writeMem(0xd429, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x16a2, gbc.sp());
        EXPECT(0xd42b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd429));
        EXPECT(0x3b, gbc.readMem(0xd42a));
        // CB 3B 00E5
        gbc.setState(0x2d36, 0xe411, 0x1e90, 0x7c10, 0xf2f6, 0x8a92, 0x0, 0x0);
        gbc.writeMem(0x2d36, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xe411, gbc.sp());
        EXPECT(0x2d38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3B 00E6
        gbc.setState(0x5404, 0x4393, 0x17f0, 0x72a1, 0x5be2, 0xd1c6, 0x1, 0x0);
        gbc.writeMem(0x5404, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x4393, gbc.sp());
        EXPECT(0x5406, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3B 00E7
        gbc.setState(0x2297, 0xfeea, 0x2520, 0x19a6, 0xbf05, 0xdc76, 0x0, 0x1);
        gbc.writeMem(0x2297, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xfeea, gbc.sp());
        EXPECT(0x2299, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3B 00E8
        gbc.setState(0x1c06, 0x91b2, 0x82a0, 0xbb75, 0x9a06, 0xff91, 0x1, 0x0);
        gbc.writeMem(0x1c06, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x91b2, gbc.sp());
        EXPECT(0x1c08, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3B 00E9
        gbc.setState(0x8630, 0x379d, 0x20c0, 0x605d, 0xa524, 0xace7, 0x0, 0x0);
        gbc.writeMem(0x8630, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x379d, gbc.sp());
        EXPECT(0x8632, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8630));
        EXPECT(0x3b, gbc.readMem(0x8631));
        // CB 3B 00EA
        gbc.setState(0x1bef, 0xadf2, 0xc100, 0x7e12, 0x5665, 0x76c9, 0x0, 0x0);
        gbc.writeMem(0x1bef, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xadf2, gbc.sp());
        EXPECT(0x1bf1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3B 00EB
        gbc.setState(0x47fc, 0x8768, 0x1330, 0x1ca, 0x27ef, 0x6627, 0x1, 0x0);
        gbc.writeMem(0x47fc, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x8768, gbc.sp());
        EXPECT(0x47fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3B 00EC
        gbc.setState(0x903c, 0x1f5b, 0xd610, 0xa3fd, 0xa11d, 0x63b8, 0x1, 0x0);
        gbc.writeMem(0x903c, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x1f5b, gbc.sp());
        EXPECT(0x903e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x903c));
        EXPECT(0x3b, gbc.readMem(0x903d));
        // CB 3B 00ED
        gbc.setState(0x63ef, 0x6bf, 0x2a00, 0x67d, 0x59f8, 0x3768, 0x0, 0x0);
        gbc.writeMem(0x63ef, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x6bf, gbc.sp());
        EXPECT(0x63f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3B 00EE
        gbc.setState(0xe289, 0xae65, 0x4f10, 0x5012, 0x5f1b, 0xd4c0, 0x1, 0x0);
        gbc.writeMem(0xe289, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xae65, gbc.sp());
        EXPECT(0xe28b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe289));
        EXPECT(0x3b, gbc.readMem(0xe28a));
        // CB 3B 00EF
        gbc.setState(0xe453, 0x3c64, 0x2220, 0x1dc9, 0x6512, 0x811, 0x1, 0x1);
        gbc.writeMem(0xe453, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x3c64, gbc.sp());
        EXPECT(0xe455, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe453));
        EXPECT(0x3b, gbc.readMem(0xe454));
        // CB 3B 00F0
        gbc.setState(0x71ef, 0x6791, 0xcc20, 0x6cd8, 0xfa33, 0x5db8, 0x0, 0x0);
        gbc.writeMem(0x71ef, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x6791, gbc.sp());
        EXPECT(0x71f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3B 00F1
        gbc.setState(0x5708, 0xc757, 0x2cb0, 0x98a3, 0xc6cf, 0x2ba1, 0x1, 0x0);
        gbc.writeMem(0x5708, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xc757, gbc.sp());
        EXPECT(0x570a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3B 00F2
        gbc.setState(0x2dc1, 0xe403, 0x63a0, 0x5b5c, 0xb976, 0x567f, 0x1, 0x1);
        gbc.writeMem(0x2dc1, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xe403, gbc.sp());
        EXPECT(0x2dc3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3B 00F3
        gbc.setState(0xdd14, 0xf5c1, 0x820, 0x45f7, 0x19f0, 0x3d48, 0x0, 0x0);
        gbc.writeMem(0xdd14, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xf5c1, gbc.sp());
        EXPECT(0xdd16, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd14));
        EXPECT(0x3b, gbc.readMem(0xdd15));
        // CB 3B 00F4
        gbc.setState(0x308b, 0x4d65, 0xf020, 0x18aa, 0x29dd, 0x171, 0x0, 0x0);
        gbc.writeMem(0x308b, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x4d65, gbc.sp());
        EXPECT(0x308d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3B 00F5
        gbc.setState(0xe8b7, 0x1e6c, 0xafc0, 0x3c3f, 0xf098, 0xc18, 0x0, 0x1);
        gbc.writeMem(0xe8b7, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x1e6c, gbc.sp());
        EXPECT(0xe8b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe8b7));
        EXPECT(0x3b, gbc.readMem(0xe8b8));
        // CB 3B 00F6
        gbc.setState(0x2e96, 0xff43, 0x8540, 0x60ad, 0xb195, 0xce14, 0x1, 0x0);
        gbc.writeMem(0x2e96, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xff43, gbc.sp());
        EXPECT(0x2e98, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3B 00F7
        gbc.setState(0x62a1, 0xd409, 0xf6e0, 0x50cc, 0xa0ea, 0x8225, 0x1, 0x1);
        gbc.writeMem(0x62a1, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xd409, gbc.sp());
        EXPECT(0x62a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3B 00F8
        gbc.setState(0x7221, 0xd332, 0x1120, 0x81ad, 0xb796, 0x7bb4, 0x0, 0x1);
        gbc.writeMem(0x7221, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xd332, gbc.sp());
        EXPECT(0x7223, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3B 00F9
        gbc.setState(0x6f8b, 0x476a, 0x45b0, 0x5973, 0x3393, 0x1e87, 0x0, 0x1);
        gbc.writeMem(0x6f8b, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x476a, gbc.sp());
        EXPECT(0x6f8d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3B 00FA
        gbc.setState(0xc21e, 0x29b1, 0xe630, 0xce85, 0x4758, 0xd186, 0x1, 0x1);
        gbc.writeMem(0xc21e, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x29b1, gbc.sp());
        EXPECT(0xc220, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc21e));
        EXPECT(0x3b, gbc.readMem(0xc21f));
        // CB 3B 00FB
        gbc.setState(0x30f0, 0x2d74, 0x7430, 0x4df7, 0x1ba3, 0x53c, 0x1, 0x0);
        gbc.writeMem(0x30f0, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x2d74, gbc.sp());
        EXPECT(0x30f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3B 00FC
        gbc.setState(0xd048, 0x938a, 0xbea0, 0x5698, 0x29f1, 0x1f43, 0x0, 0x0);
        gbc.writeMem(0xd048, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x938a, gbc.sp());
        EXPECT(0xd04a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd048));
        EXPECT(0x3b, gbc.readMem(0xd049));
        // CB 3B 00FD
        gbc.setState(0x8857, 0x5ba2, 0x3000, 0x2959, 0xaf50, 0x3303, 0x1, 0x1);
        gbc.writeMem(0x8857, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x5ba2, gbc.sp());
        EXPECT(0x8859, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8857));
        EXPECT(0x3b, gbc.readMem(0x8858));
        // CB 3B 00FE
        gbc.setState(0xe190, 0x81d7, 0x47d0, 0x4634, 0x26b9, 0x3051, 0x1, 0x1);
        gbc.writeMem(0xe190, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x81d7, gbc.sp());
        EXPECT(0xe192, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe190));
        EXPECT(0x3b, gbc.readMem(0xe191));
        // CB 3B 00FF
        gbc.setState(0x910a, 0xe2ba, 0xbd0, 0xf987, 0x80ab, 0x4196, 0x0, 0x1);
        gbc.writeMem(0x910a, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xe2ba, gbc.sp());
        EXPECT(0x910c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x910a));
        EXPECT(0x3b, gbc.readMem(0x910b));
        // CB 3B 0100
        gbc.setState(0xea6e, 0xebc1, 0xe1f0, 0xf506, 0xf6ef, 0x63c6, 0x1, 0x1);
        gbc.writeMem(0xea6e, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xebc1, gbc.sp());
        EXPECT(0xea70, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea6e));
        EXPECT(0x3b, gbc.readMem(0xea6f));
        // CB 3B 0101
        gbc.setState(0xa31b, 0x9ac1, 0xede0, 0x91c3, 0x5e15, 0x571e, 0x1, 0x1);
        gbc.writeMem(0xa31b, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x9ac1, gbc.sp());
        EXPECT(0xa31d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa31b));
        EXPECT(0x3b, gbc.readMem(0xa31c));
        // CB 3B 0102
        gbc.setState(0x643e, 0xe97f, 0x4d90, 0xe64e, 0x6f6e, 0xe746, 0x1, 0x0);
        gbc.writeMem(0x643e, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xe97f, gbc.sp());
        EXPECT(0x6440, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3B 0103
        gbc.setState(0xc7e3, 0x9534, 0xfdd0, 0x8332, 0xc40a, 0x545e, 0x1, 0x0);
        gbc.writeMem(0xc7e3, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x9534, gbc.sp());
        EXPECT(0xc7e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc7e3));
        EXPECT(0x3b, gbc.readMem(0xc7e4));
        // CB 3B 0104
        gbc.setState(0x260e, 0x9da6, 0x7490, 0x10f9, 0x9436, 0x5400, 0x0, 0x0);
        gbc.writeMem(0x260e, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x9da6, gbc.sp());
        EXPECT(0x2610, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3B 0105
        gbc.setState(0x8c32, 0x8899, 0x130, 0x5cd8, 0x9a32, 0x5811, 0x1, 0x0);
        gbc.writeMem(0x8c32, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x8899, gbc.sp());
        EXPECT(0x8c34, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c32));
        EXPECT(0x3b, gbc.readMem(0x8c33));
        // CB 3B 0106
        gbc.setState(0x3443, 0xf78a, 0x7b60, 0x9316, 0xb29b, 0x117d, 0x0, 0x1);
        gbc.writeMem(0x3443, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xf78a, gbc.sp());
        EXPECT(0x3445, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3B 0107
        gbc.setState(0x659b, 0x949a, 0xfb40, 0xc359, 0xc104, 0x8d2f, 0x1, 0x1);
        gbc.writeMem(0x659b, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x949a, gbc.sp());
        EXPECT(0x659d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3B 0108
        gbc.setState(0x8eef, 0x84e7, 0x9ca0, 0xc47d, 0xee4c, 0xd415, 0x1, 0x1);
        gbc.writeMem(0x8eef, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x84e7, gbc.sp());
        EXPECT(0x8ef1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8eef));
        EXPECT(0x3b, gbc.readMem(0x8ef0));
        // CB 3B 010C
        gbc.setState(0x9848, 0x91ef, 0xd1c0, 0xd683, 0xc7fb, 0x10a, 0x0, 0x0);
        gbc.writeMem(0x9848, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x91ef, gbc.sp());
        EXPECT(0x984a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9848));
        EXPECT(0x3b, gbc.readMem(0x9849));
        // CB 3B 010D
        gbc.setState(0x445, 0xb012, 0xa5c0, 0x2eba, 0x101b, 0x608, 0x0, 0x1);
        gbc.writeMem(0x445, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xb012, gbc.sp());
        EXPECT(0x447, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3B 010E
        gbc.setState(0x70ee, 0x22f4, 0xd5c0, 0xdeb1, 0x3171, 0x7000, 0x1, 0x0);
        gbc.writeMem(0x70ee, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x22f4, gbc.sp());
        EXPECT(0x70f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3B 0110
        gbc.setState(0x7dea, 0x94d5, 0xf320, 0x562f, 0x1674, 0xcdc1, 0x0, 0x1);
        gbc.writeMem(0x7dea, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x94d5, gbc.sp());
        EXPECT(0x7dec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3B 0111
        gbc.setState(0x3fc2, 0x8237, 0x9750, 0xbda1, 0xd273, 0xe19b, 0x0, 0x0);
        gbc.writeMem(0x3fc2, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x8237, gbc.sp());
        EXPECT(0x3fc4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3B 0112
        gbc.setState(0x3841, 0xf379, 0xad30, 0xd8d3, 0x1b0d, 0x3a2c, 0x1, 0x1);
        gbc.writeMem(0x3841, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xf379, gbc.sp());
        EXPECT(0x3843, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3B 0113
        gbc.setState(0x941d, 0x9e69, 0x24d0, 0x9634, 0x19de, 0x9cf8, 0x0, 0x0);
        gbc.writeMem(0x941d, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x9e69, gbc.sp());
        EXPECT(0x941f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x941d));
        EXPECT(0x3b, gbc.readMem(0x941e));
        // CB 3B 0114
        gbc.setState(0xcff5, 0xd028, 0x3ce0, 0x55c4, 0xe6ed, 0x1987, 0x1, 0x1);
        gbc.writeMem(0xcff5, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xd028, gbc.sp());
        EXPECT(0xcff7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcff5));
        EXPECT(0x3b, gbc.readMem(0xcff6));
        // CB 3B 0115
        gbc.setState(0x90df, 0xb104, 0x79f0, 0xc47e, 0xf7ee, 0xff8, 0x1, 0x0);
        gbc.writeMem(0x90df, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xb104, gbc.sp());
        EXPECT(0x90e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x90df));
        EXPECT(0x3b, gbc.readMem(0x90e0));
        // CB 3B 0116
        gbc.setState(0x5dde, 0x61f0, 0x7330, 0x7513, 0xf7c2, 0x2e85, 0x0, 0x1);
        gbc.writeMem(0x5dde, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x61f0, gbc.sp());
        EXPECT(0x5de0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3B 0117
        gbc.setState(0x10ca, 0x7106, 0x1d10, 0x3afb, 0x212d, 0xc746, 0x0, 0x1);
        gbc.writeMem(0x10ca, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x7106, gbc.sp());
        EXPECT(0x10cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3B 0118
        gbc.setState(0xda58, 0x1eab, 0xca80, 0xb7b1, 0x827a, 0x9063, 0x0, 0x1);
        gbc.writeMem(0xda58, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x1eab, gbc.sp());
        EXPECT(0xda5a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda58));
        EXPECT(0x3b, gbc.readMem(0xda59));
        // CB 3B 0119
        gbc.setState(0xbf28, 0x2bb1, 0x9730, 0xbfcf, 0x12ad, 0xc31f, 0x1, 0x1);
        gbc.writeMem(0xbf28, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x2bb1, gbc.sp());
        EXPECT(0xbf2a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf28));
        EXPECT(0x3b, gbc.readMem(0xbf29));
        // CB 3B 011A
        gbc.setState(0x8832, 0x9d31, 0x6a70, 0x62be, 0xb950, 0x586c, 0x1, 0x1);
        gbc.writeMem(0x8832, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x9d31, gbc.sp());
        EXPECT(0x8834, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8832));
        EXPECT(0x3b, gbc.readMem(0x8833));
        // CB 3B 011B
        gbc.setState(0x991, 0x674c, 0xa4b0, 0xee14, 0x154a, 0xcc00, 0x1, 0x1);
        gbc.writeMem(0x991, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x674c, gbc.sp());
        EXPECT(0x993, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3B 011C
        gbc.setState(0x8360, 0x6485, 0x7c20, 0x4a06, 0x952e, 0xe584, 0x0, 0x0);
        gbc.writeMem(0x8360, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x6485, gbc.sp());
        EXPECT(0x8362, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8360));
        EXPECT(0x3b, gbc.readMem(0x8361));
        // CB 3B 011E
        gbc.setState(0xcf, 0xab1, 0x51c0, 0x98d9, 0xea1b, 0xde4e, 0x0, 0x1);
        gbc.writeMem(0xcf, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xab1, gbc.sp());
        EXPECT(0xd1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3B 011F
        gbc.setState(0xb384, 0x6aa0, 0xa610, 0xb9da, 0xb884, 0x8c46, 0x0, 0x1);
        gbc.writeMem(0xb384, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x6aa0, gbc.sp());
        EXPECT(0xb386, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb384));
        EXPECT(0x3b, gbc.readMem(0xb385));
        // CB 3B 0120
        gbc.setState(0xb0e5, 0xc67, 0xbde0, 0x3c3a, 0x9bd1, 0x2ace, 0x0, 0x0);
        gbc.writeMem(0xb0e5, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xc67, gbc.sp());
        EXPECT(0xb0e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb0e5));
        EXPECT(0x3b, gbc.readMem(0xb0e6));
        // CB 3B 0121
        gbc.setState(0xc7fc, 0xd9e3, 0x12f0, 0x3dcd, 0xccd5, 0x906e, 0x0, 0x0);
        gbc.writeMem(0xc7fc, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xd9e3, gbc.sp());
        EXPECT(0xc7fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc7fc));
        EXPECT(0x3b, gbc.readMem(0xc7fd));
        // CB 3B 0122
        gbc.setState(0x3191, 0xa7cb, 0x4f60, 0xb68c, 0xf3a, 0xfb1b, 0x1, 0x1);
        gbc.writeMem(0x3191, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xa7cb, gbc.sp());
        EXPECT(0x3193, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3B 0123
        gbc.setState(0x86fe, 0xa97c, 0xec10, 0xecb2, 0x790b, 0xaee, 0x0, 0x1);
        gbc.writeMem(0x86fe, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xa97c, gbc.sp());
        EXPECT(0x8700, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x86fe));
        EXPECT(0x3b, gbc.readMem(0x86ff));
        // CB 3B 0124
        gbc.setState(0x753b, 0x5776, 0xa840, 0x7b03, 0x3112, 0xb6b3, 0x1, 0x1);
        gbc.writeMem(0x753b, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x5776, gbc.sp());
        EXPECT(0x753d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3B 0125
        gbc.setState(0x50a5, 0x8328, 0xa880, 0x78df, 0x951b, 0xa000, 0x0, 0x0);
        gbc.writeMem(0x50a5, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x8328, gbc.sp());
        EXPECT(0x50a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3B 0126
        gbc.setState(0x8524, 0x60ff, 0x4790, 0xe4a8, 0x2474, 0xf9e7, 0x1, 0x0);
        gbc.writeMem(0x8524, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x60ff, gbc.sp());
        EXPECT(0x8526, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8524));
        EXPECT(0x3b, gbc.readMem(0x8525));
        // CB 3B 0127
        gbc.setState(0x537f, 0x165a, 0xc6c0, 0x8721, 0x8870, 0x8884, 0x0, 0x0);
        gbc.writeMem(0x537f, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x165a, gbc.sp());
        EXPECT(0x5381, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3B 0128
        gbc.setState(0x5c69, 0x1846, 0x5d20, 0xcac5, 0x8efa, 0x8360, 0x1, 0x1);
        gbc.writeMem(0x5c69, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x1846, gbc.sp());
        EXPECT(0x5c6b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3B 0129
        gbc.setState(0x3a9b, 0xbd0a, 0xdaa0, 0x52d, 0xa3e, 0x90ed, 0x0, 0x0);
        gbc.writeMem(0x3a9b, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xbd0a, gbc.sp());
        EXPECT(0x3a9d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3B 012A
        gbc.setState(0x683b, 0x2fb6, 0xee00, 0x9dca, 0x7320, 0xc16f, 0x0, 0x0);
        gbc.writeMem(0x683b, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x2fb6, gbc.sp());
        EXPECT(0x683d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3B 012B
        gbc.setState(0xdb01, 0x1917, 0x1ba0, 0x2a24, 0x898c, 0xdd31, 0x0, 0x0);
        gbc.writeMem(0xdb01, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x1917, gbc.sp());
        EXPECT(0xdb03, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb01));
        EXPECT(0x3b, gbc.readMem(0xdb02));
        // CB 3B 012C
        gbc.setState(0xbd19, 0x1526, 0xb990, 0x3f12, 0x253, 0x36d3, 0x1, 0x0);
        gbc.writeMem(0xbd19, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x1526, gbc.sp());
        EXPECT(0xbd1b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd19));
        EXPECT(0x3b, gbc.readMem(0xbd1a));
        // CB 3B 012D
        gbc.setState(0x4676, 0x4883, 0x44c0, 0xf80b, 0xe35d, 0x4c89, 0x1, 0x0);
        gbc.writeMem(0x4676, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x4883, gbc.sp());
        EXPECT(0x4678, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3B 012E
        gbc.setState(0x9fc7, 0xc120, 0x3af0, 0x8ca3, 0x9c20, 0x52f9, 0x1, 0x0);
        gbc.writeMem(0x9fc7, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xc120, gbc.sp());
        EXPECT(0x9fc9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9fc7));
        EXPECT(0x3b, gbc.readMem(0x9fc8));
        // CB 3B 0130
        gbc.setState(0x3d58, 0x7fca, 0xe5b0, 0xa156, 0xdee4, 0xbed, 0x0, 0x0);
        gbc.writeMem(0x3d58, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x7fca, gbc.sp());
        EXPECT(0x3d5a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3B 0131
        gbc.setState(0x9045, 0x81b6, 0x9560, 0xe84a, 0x1161, 0xca6c, 0x0, 0x1);
        gbc.writeMem(0x9045, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x81b6, gbc.sp());
        EXPECT(0x9047, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9045));
        EXPECT(0x3b, gbc.readMem(0x9046));
        // CB 3B 0132
        gbc.setState(0x8da, 0xd447, 0xc310, 0x77c9, 0x74f8, 0x70bb, 0x0, 0x0);
        gbc.writeMem(0x8da, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xd447, gbc.sp());
        EXPECT(0x8dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3B 0133
        gbc.setState(0x46d8, 0xd8d5, 0x5d10, 0xddcf, 0xa9b7, 0x7fd3, 0x1, 0x1);
        gbc.writeMem(0x46d8, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xd8d5, gbc.sp());
        EXPECT(0x46da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3B 0134
        gbc.setState(0xab6f, 0x970d, 0xcc00, 0xa271, 0xd75, 0xb752, 0x0, 0x0);
        gbc.writeMem(0xab6f, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x970d, gbc.sp());
        EXPECT(0xab71, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab6f));
        EXPECT(0x3b, gbc.readMem(0xab70));
        // CB 3B 0135
        gbc.setState(0x578f, 0xb7f2, 0xf680, 0x18b4, 0xbcdc, 0x6893, 0x1, 0x0);
        gbc.writeMem(0x578f, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xb7f2, gbc.sp());
        EXPECT(0x5791, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3B 0136
        gbc.setState(0x8fce, 0xc160, 0x5940, 0xfbed, 0x39e2, 0x276d, 0x1, 0x1);
        gbc.writeMem(0x8fce, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xc160, gbc.sp());
        EXPECT(0x8fd0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8fce));
        EXPECT(0x3b, gbc.readMem(0x8fcf));
        // CB 3B 0137
        gbc.setState(0x626d, 0x43e3, 0x4980, 0x2220, 0xafe9, 0x4a00, 0x1, 0x1);
        gbc.writeMem(0x626d, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x43e3, gbc.sp());
        EXPECT(0x626f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3B 0138
        gbc.setState(0x52f7, 0xb4c7, 0x8d50, 0x81f9, 0x877b, 0xdf12, 0x0, 0x0);
        gbc.writeMem(0x52f7, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xb4c7, gbc.sp());
        EXPECT(0x52f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3B 0139
        gbc.setState(0xda8b, 0x446e, 0x4b00, 0x1f03, 0xb527, 0xf377, 0x1, 0x1);
        gbc.writeMem(0xda8b, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x446e, gbc.sp());
        EXPECT(0xda8d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda8b));
        EXPECT(0x3b, gbc.readMem(0xda8c));
        // CB 3B 013A
        gbc.setState(0x6321, 0xa9d1, 0xfeb0, 0x1068, 0x9f9a, 0xf5a, 0x1, 0x1);
        gbc.writeMem(0x6321, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xa9d1, gbc.sp());
        EXPECT(0x6323, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3B 013B
        gbc.setState(0x5277, 0xd08c, 0x3400, 0x1d93, 0xfae4, 0x9af0, 0x1, 0x0);
        gbc.writeMem(0x5277, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xd08c, gbc.sp());
        EXPECT(0x5279, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3B 013C
        gbc.setState(0xb134, 0x363b, 0x73d0, 0x5b6e, 0x6900, 0x2b88, 0x0, 0x0);
        gbc.writeMem(0xb134, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x363b, gbc.sp());
        EXPECT(0xb136, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb134));
        EXPECT(0x3b, gbc.readMem(0xb135));
        // CB 3B 013D
        gbc.setState(0xcb90, 0xfe32, 0x61a0, 0xa9cc, 0xf17c, 0x8fce, 0x0, 0x1);
        gbc.writeMem(0xcb90, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xfe32, gbc.sp());
        EXPECT(0xcb92, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb90));
        EXPECT(0x3b, gbc.readMem(0xcb91));
        // CB 3B 013E
        gbc.setState(0x2311, 0x75c1, 0x9b0, 0xb382, 0x574d, 0x9e9c, 0x1, 0x1);
        gbc.writeMem(0x2311, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x75c1, gbc.sp());
        EXPECT(0x2313, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3B 013F
        gbc.setState(0xca5f, 0x1cbb, 0x3530, 0x32a3, 0x8021, 0x88aa, 0x0, 0x1);
        gbc.writeMem(0xca5f, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x1cbb, gbc.sp());
        EXPECT(0xca61, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca5f));
        EXPECT(0x3b, gbc.readMem(0xca60));
        // CB 3B 0141
        gbc.setState(0xa90f, 0x9b9d, 0x6fd0, 0x5f8d, 0x983b, 0x2709, 0x1, 0x1);
        gbc.writeMem(0xa90f, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x9b9d, gbc.sp());
        EXPECT(0xa911, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa90f));
        EXPECT(0x3b, gbc.readMem(0xa910));
        // CB 3B 0142
        gbc.setState(0xd23e, 0xe3b5, 0xce70, 0x7858, 0xc5a4, 0xe13a, 0x1, 0x1);
        gbc.writeMem(0xd23e, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xe3b5, gbc.sp());
        EXPECT(0xd240, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd23e));
        EXPECT(0x3b, gbc.readMem(0xd23f));
        // CB 3B 0143
        gbc.setState(0x611d, 0x9e6a, 0xce90, 0x182d, 0xbfb, 0x6ec5, 0x1, 0x1);
        gbc.writeMem(0x611d, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x9e6a, gbc.sp());
        EXPECT(0x611f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3B 0144
        gbc.setState(0x6bb0, 0x92d0, 0x7820, 0x598a, 0x5f26, 0xb775, 0x1, 0x1);
        gbc.writeMem(0x6bb0, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x92d0, gbc.sp());
        EXPECT(0x6bb2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3B 0145
        gbc.setState(0x8dfd, 0xb8db, 0xef50, 0xfcfe, 0x36f1, 0x2da7, 0x0, 0x1);
        gbc.writeMem(0x8dfd, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xb8db, gbc.sp());
        EXPECT(0x8dff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8dfd));
        EXPECT(0x3b, gbc.readMem(0x8dfe));
        // CB 3B 0146
        gbc.setState(0xc25, 0x38fc, 0xeae0, 0xfd63, 0xee13, 0x295f, 0x1, 0x0);
        gbc.writeMem(0xc25, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x38fc, gbc.sp());
        EXPECT(0xc27, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3B 0147
        gbc.setState(0xba94, 0x96bf, 0xb2e0, 0xf5eb, 0xf25b, 0x327c, 0x0, 0x1);
        gbc.writeMem(0xba94, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x96bf, gbc.sp());
        EXPECT(0xba96, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba94));
        EXPECT(0x3b, gbc.readMem(0xba95));
        // CB 3B 0148
        gbc.setState(0x16f2, 0xddd0, 0xfa0, 0x56b0, 0x603c, 0x6775, 0x1, 0x1);
        gbc.writeMem(0x16f2, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xddd0, gbc.sp());
        EXPECT(0x16f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3B 0149
        gbc.setState(0x1e56, 0x11db, 0x9f70, 0x7d0f, 0x551d, 0x90a1, 0x0, 0x1);
        gbc.writeMem(0x1e56, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x11db, gbc.sp());
        EXPECT(0x1e58, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3B 014A
        gbc.setState(0x53f5, 0x41a2, 0x7b50, 0x7888, 0xde52, 0x8e51, 0x0, 0x0);
        gbc.writeMem(0x53f5, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x41a2, gbc.sp());
        EXPECT(0x53f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3B 014B
        gbc.setState(0x46f5, 0x7e01, 0xb2f0, 0xa4a0, 0xbcab, 0x7d3b, 0x1, 0x1);
        gbc.writeMem(0x46f5, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x7e01, gbc.sp());
        EXPECT(0x46f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3B 014C
        gbc.setState(0x5163, 0x6b58, 0x3a40, 0xdbdd, 0x2791, 0x3a86, 0x0, 0x0);
        gbc.writeMem(0x5163, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x6b58, gbc.sp());
        EXPECT(0x5165, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3B 014D
        gbc.setState(0x925f, 0xcac4, 0x1390, 0xd5a8, 0xe0fd, 0x5eb0, 0x1, 0x1);
        gbc.writeMem(0x925f, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xcac4, gbc.sp());
        EXPECT(0x9261, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x925f));
        EXPECT(0x3b, gbc.readMem(0x9260));
        // CB 3B 014E
        gbc.setState(0xe0d7, 0xa96, 0xb740, 0xf632, 0x213c, 0x59b, 0x1, 0x0);
        gbc.writeMem(0xe0d7, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xa96, gbc.sp());
        EXPECT(0xe0d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe0d7));
        EXPECT(0x3b, gbc.readMem(0xe0d8));
        // CB 3B 014F
        gbc.setState(0xe961, 0x4855, 0x2500, 0x2c38, 0xbf36, 0xad01, 0x1, 0x1);
        gbc.writeMem(0xe961, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x4855, gbc.sp());
        EXPECT(0xe963, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe961));
        EXPECT(0x3b, gbc.readMem(0xe962));
        // CB 3B 0150
        gbc.setState(0x5d5c, 0xf35a, 0x3f0, 0xb0a6, 0x428, 0xd724, 0x0, 0x0);
        gbc.writeMem(0x5d5c, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xf35a, gbc.sp());
        EXPECT(0x5d5e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3B 0151
        gbc.setState(0xb241, 0x2d79, 0x5190, 0xbb23, 0x5ffb, 0xf6dd, 0x1, 0x0);
        gbc.writeMem(0xb241, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x2d79, gbc.sp());
        EXPECT(0xb243, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb241));
        EXPECT(0x3b, gbc.readMem(0xb242));
        // CB 3B 0152
        gbc.setState(0x5570, 0xa0e2, 0xecb0, 0x5e07, 0x7801, 0x36d5, 0x1, 0x1);
        gbc.writeMem(0x5570, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xa0e2, gbc.sp());
        EXPECT(0x5572, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3B 0153
        gbc.setState(0x8a6d, 0xb60f, 0xf0, 0xa054, 0xd445, 0x959d, 0x1, 0x0);
        gbc.writeMem(0x8a6d, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xb60f, gbc.sp());
        EXPECT(0x8a6f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a6d));
        EXPECT(0x3b, gbc.readMem(0x8a6e));
        // CB 3B 0154
        gbc.setState(0x182b, 0x9eb5, 0x7a20, 0xeea2, 0xd870, 0xfe05, 0x1, 0x0);
        gbc.writeMem(0x182b, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x9eb5, gbc.sp());
        EXPECT(0x182d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3B 0155
        gbc.setState(0x7958, 0xcdd7, 0x9170, 0x98ea, 0x811c, 0x9fce, 0x0, 0x0);
        gbc.writeMem(0x7958, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xcdd7, gbc.sp());
        EXPECT(0x795a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3B 0156
        gbc.setState(0xbbdd, 0xc8b5, 0xd2e0, 0x3d24, 0x3630, 0xd2b7, 0x0, 0x1);
        gbc.writeMem(0xbbdd, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xc8b5, gbc.sp());
        EXPECT(0xbbdf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbbdd));
        EXPECT(0x3b, gbc.readMem(0xbbde));
        // CB 3B 0157
        gbc.setState(0x6971, 0x8aa1, 0x3ac0, 0xaa4, 0x528, 0x4852, 0x1, 0x0);
        gbc.writeMem(0x6971, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x8aa1, gbc.sp());
        EXPECT(0x6973, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3B 0158
        gbc.setState(0x9072, 0x68e0, 0x3cf0, 0x1f50, 0x4d70, 0x706e, 0x1, 0x0);
        gbc.writeMem(0x9072, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x68e0, gbc.sp());
        EXPECT(0x9074, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9072));
        EXPECT(0x3b, gbc.readMem(0x9073));
        // CB 3B 0159
        gbc.setState(0xde6b, 0xab9a, 0x12c0, 0x633e, 0x4e23, 0x4aa2, 0x1, 0x0);
        gbc.writeMem(0xde6b, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xab9a, gbc.sp());
        EXPECT(0xde6d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde6b));
        EXPECT(0x3b, gbc.readMem(0xde6c));
        // CB 3B 015A
        gbc.setState(0xc9d9, 0x1425, 0x9c0, 0xfafb, 0xbb63, 0x6129, 0x0, 0x0);
        gbc.writeMem(0xc9d9, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x1425, gbc.sp());
        EXPECT(0xc9db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc9d9));
        EXPECT(0x3b, gbc.readMem(0xc9da));
        // CB 3B 015B
        gbc.setState(0x6594, 0xc7af, 0x8c60, 0x595b, 0x43a4, 0xddd5, 0x0, 0x1);
        gbc.writeMem(0x6594, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xc7af, gbc.sp());
        EXPECT(0x6596, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3B 015C
        gbc.setState(0x8e1b, 0x4e2d, 0xaa90, 0xf212, 0x2bfb, 0x3643, 0x1, 0x0);
        gbc.writeMem(0x8e1b, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x4e2d, gbc.sp());
        EXPECT(0x8e1d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e1b));
        EXPECT(0x3b, gbc.readMem(0x8e1c));
        // CB 3B 015D
        gbc.setState(0xcb93, 0x6994, 0xdd40, 0x19ee, 0x916e, 0xb824, 0x0, 0x1);
        gbc.writeMem(0xcb93, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x6994, gbc.sp());
        EXPECT(0xcb95, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb93));
        EXPECT(0x3b, gbc.readMem(0xcb94));
        // CB 3B 015E
        gbc.setState(0xca59, 0x8793, 0xde90, 0x25d, 0x2020, 0xfd27, 0x1, 0x0);
        gbc.writeMem(0xca59, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x8793, gbc.sp());
        EXPECT(0xca5b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca59));
        EXPECT(0x3b, gbc.readMem(0xca5a));
        // CB 3B 015F
        gbc.setState(0x17df, 0x8971, 0xfb70, 0x9974, 0x6c6e, 0x6709, 0x0, 0x1);
        gbc.writeMem(0x17df, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x8971, gbc.sp());
        EXPECT(0x17e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3B 0160
        gbc.setState(0x2bb7, 0x437b, 0x16e0, 0x1fb0, 0xcff, 0xfab3, 0x0, 0x1);
        gbc.writeMem(0x2bb7, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x437b, gbc.sp());
        EXPECT(0x2bb9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3B 0161
        gbc.setState(0xdf51, 0xd15b, 0xf700, 0xf92e, 0xce9f, 0x97bb, 0x0, 0x0);
        gbc.writeMem(0xdf51, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xd15b, gbc.sp());
        EXPECT(0xdf53, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf51));
        EXPECT(0x3b, gbc.readMem(0xdf52));
        // CB 3B 0162
        gbc.setState(0x4147, 0x6ff6, 0x960, 0x45b8, 0x696f, 0x3de7, 0x1, 0x1);
        gbc.writeMem(0x4147, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x6ff6, gbc.sp());
        EXPECT(0x4149, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3B 0163
        gbc.setState(0xad32, 0x1d43, 0xe7d0, 0xdabb, 0xc288, 0x5f2c, 0x1, 0x0);
        gbc.writeMem(0xad32, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x1d43, gbc.sp());
        EXPECT(0xad34, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad32));
        EXPECT(0x3b, gbc.readMem(0xad33));
        // CB 3B 0164
        gbc.setState(0x5ae4, 0x2b7, 0xcc60, 0x930e, 0xfffb, 0x756b, 0x1, 0x0);
        gbc.writeMem(0x5ae4, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x2b7, gbc.sp());
        EXPECT(0x5ae6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3B 0165
        gbc.setState(0x14ad, 0xe1c4, 0x6c70, 0xd2c3, 0xcd5e, 0x4cb1, 0x0, 0x0);
        gbc.writeMem(0x14ad, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xe1c4, gbc.sp());
        EXPECT(0x14af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3B 0166
        gbc.setState(0x65d4, 0xda61, 0x77f0, 0xdedf, 0xa866, 0x249e, 0x0, 0x1);
        gbc.writeMem(0x65d4, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xda61, gbc.sp());
        EXPECT(0x65d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3B 0167
        gbc.setState(0xc79, 0xa8bc, 0x3f00, 0xe49a, 0x92b8, 0x48bd, 0x0, 0x1);
        gbc.writeMem(0xc79, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xa8bc, gbc.sp());
        EXPECT(0xc7b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3B 0168
        gbc.setState(0xb11c, 0x7dd6, 0x2f40, 0x2429, 0xd43e, 0x5a18, 0x0, 0x0);
        gbc.writeMem(0xb11c, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x7dd6, gbc.sp());
        EXPECT(0xb11e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb11c));
        EXPECT(0x3b, gbc.readMem(0xb11d));
        // CB 3B 0169
        gbc.setState(0x3f71, 0x7a6d, 0xdb10, 0x4f3e, 0xc00a, 0x8cb1, 0x1, 0x0);
        gbc.writeMem(0x3f71, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x7a6d, gbc.sp());
        EXPECT(0x3f73, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3B 016A
        gbc.setState(0xd60f, 0x3b40, 0xaac0, 0xb890, 0x4a63, 0xc278, 0x0, 0x1);
        gbc.writeMem(0xd60f, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x3b40, gbc.sp());
        EXPECT(0xd611, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd60f));
        EXPECT(0x3b, gbc.readMem(0xd610));
        // CB 3B 016B
        gbc.setState(0xbff7, 0x36, 0xbac0, 0x6e70, 0xd40c, 0xd6d1, 0x1, 0x0);
        gbc.writeMem(0xbff7, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x36, gbc.sp());
        EXPECT(0xbff9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbff7));
        EXPECT(0x3b, gbc.readMem(0xbff8));
        // CB 3B 016C
        gbc.setState(0xc996, 0x1f27, 0x2270, 0xf9e9, 0xb65e, 0xf2c7, 0x0, 0x0);
        gbc.writeMem(0xc996, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x1f27, gbc.sp());
        EXPECT(0xc998, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc996));
        EXPECT(0x3b, gbc.readMem(0xc997));
        // CB 3B 016D
        gbc.setState(0x1ba8, 0xf5be, 0x1970, 0x3264, 0x378c, 0x40cc, 0x1, 0x0);
        gbc.writeMem(0x1ba8, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xf5be, gbc.sp());
        EXPECT(0x1baa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3B 016E
        gbc.setState(0xadac, 0xefed, 0x5d0, 0x9de, 0xf55e, 0x855e, 0x0, 0x1);
        gbc.writeMem(0xadac, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xefed, gbc.sp());
        EXPECT(0xadae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xadac));
        EXPECT(0x3b, gbc.readMem(0xadad));
        // CB 3B 016F
        gbc.setState(0xc4e9, 0xda70, 0x17d0, 0x41e7, 0x5a91, 0x698b, 0x1, 0x1);
        gbc.writeMem(0xc4e9, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xda70, gbc.sp());
        EXPECT(0xc4eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc4e9));
        EXPECT(0x3b, gbc.readMem(0xc4ea));
        // CB 3B 0170
        gbc.setState(0x3c1a, 0x7905, 0x9320, 0x9ffc, 0x901a, 0xe45, 0x1, 0x0);
        gbc.writeMem(0x3c1a, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x7905, gbc.sp());
        EXPECT(0x3c1c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3B 0171
        gbc.setState(0xa116, 0x1d7f, 0x6130, 0xc1b5, 0x6e55, 0xf071, 0x0, 0x0);
        gbc.writeMem(0xa116, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x1d7f, gbc.sp());
        EXPECT(0xa118, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa116));
        EXPECT(0x3b, gbc.readMem(0xa117));
        // CB 3B 0172
        gbc.setState(0x7d88, 0xcad4, 0xc1b0, 0xeb7f, 0xa912, 0xe5b9, 0x0, 0x0);
        gbc.writeMem(0x7d88, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xcad4, gbc.sp());
        EXPECT(0x7d8a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3B 0173
        gbc.setState(0x8d09, 0xc807, 0xd310, 0x549b, 0xbebc, 0x4f20, 0x1, 0x0);
        gbc.writeMem(0x8d09, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xc807, gbc.sp());
        EXPECT(0x8d0b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d09));
        EXPECT(0x3b, gbc.readMem(0x8d0a));
        // CB 3B 0174
        gbc.setState(0xece0, 0x98d5, 0x38e0, 0xa3b3, 0x7e86, 0xe445, 0x0, 0x1);
        gbc.writeMem(0xece0, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x98d5, gbc.sp());
        EXPECT(0xece2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xece0));
        EXPECT(0x3b, gbc.readMem(0xece1));
        // CB 3B 0175
        gbc.setState(0xbe3a, 0xc720, 0x7910, 0xbcea, 0x221e, 0x378f, 0x0, 0x0);
        gbc.writeMem(0xbe3a, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xc720, gbc.sp());
        EXPECT(0xbe3c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe3a));
        EXPECT(0x3b, gbc.readMem(0xbe3b));
        // CB 3B 0176
        gbc.setState(0x2be, 0xb5fa, 0x7150, 0x3f4a, 0xd234, 0x454, 0x1, 0x1);
        gbc.writeMem(0x2be, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xb5fa, gbc.sp());
        EXPECT(0x2c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3B 0177
        gbc.setState(0x494f, 0x81e, 0xe890, 0x97fb, 0xb353, 0x4af3, 0x0, 0x1);
        gbc.writeMem(0x494f, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x81e, gbc.sp());
        EXPECT(0x4951, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3B 0178
        gbc.setState(0x479b, 0xc077, 0xa770, 0x2e78, 0x2813, 0x9124, 0x1, 0x1);
        gbc.writeMem(0x479b, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xc077, gbc.sp());
        EXPECT(0x479d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3B 0179
        gbc.setState(0x35d6, 0x4541, 0xd2d0, 0x2e72, 0xc8e3, 0xd55f, 0x1, 0x0);
        gbc.writeMem(0x35d6, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x4541, gbc.sp());
        EXPECT(0x35d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3B 017A
        gbc.setState(0xd310, 0x3067, 0xc560, 0xfe34, 0x8c76, 0xdbd, 0x1, 0x1);
        gbc.writeMem(0xd310, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x3067, gbc.sp());
        EXPECT(0xd312, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd310));
        EXPECT(0x3b, gbc.readMem(0xd311));
        // CB 3B 017B
        gbc.setState(0x2c1f, 0xb4e7, 0x79d0, 0x3ea6, 0xfac0, 0x6fa5, 0x1, 0x1);
        gbc.writeMem(0x2c1f, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xb4e7, gbc.sp());
        EXPECT(0x2c21, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3B 017C
        gbc.setState(0xc443, 0x4a5, 0xe970, 0xdad6, 0x97db, 0x13c8, 0x0, 0x0);
        gbc.writeMem(0xc443, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x4a5, gbc.sp());
        EXPECT(0xc445, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc443));
        EXPECT(0x3b, gbc.readMem(0xc444));
        // CB 3B 017D
        gbc.setState(0x49e7, 0xfc5e, 0xab00, 0xab4, 0xe9de, 0x3be9, 0x0, 0x1);
        gbc.writeMem(0x49e7, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xfc5e, gbc.sp());
        EXPECT(0x49e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3B 017E
        gbc.setState(0xcb8a, 0x4409, 0x1a60, 0xcdba, 0xb658, 0xd5a0, 0x0, 0x1);
        gbc.writeMem(0xcb8a, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x4409, gbc.sp());
        EXPECT(0xcb8c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb8a));
        EXPECT(0x3b, gbc.readMem(0xcb8b));
        // CB 3B 017F
        gbc.setState(0xa6d6, 0x603d, 0x3fc0, 0xd8cb, 0x361a, 0x2e62, 0x0, 0x0);
        gbc.writeMem(0xa6d6, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x603d, gbc.sp());
        EXPECT(0xa6d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa6d6));
        EXPECT(0x3b, gbc.readMem(0xa6d7));
        // CB 3B 0180
        gbc.setState(0xce76, 0x9f17, 0xbf00, 0xd913, 0x45ba, 0x87f9, 0x1, 0x0);
        gbc.writeMem(0xce76, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x9f17, gbc.sp());
        EXPECT(0xce78, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce76));
        EXPECT(0x3b, gbc.readMem(0xce77));
        // CB 3B 0181
        gbc.setState(0xe87e, 0x431c, 0xff0, 0x9c20, 0xcc2d, 0x84ab, 0x1, 0x1);
        gbc.writeMem(0xe87e, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x431c, gbc.sp());
        EXPECT(0xe880, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe87e));
        EXPECT(0x3b, gbc.readMem(0xe87f));
        // CB 3B 0182
        gbc.setState(0x34e, 0x6936, 0x1d40, 0xc045, 0xace2, 0xa34e, 0x1, 0x1);
        gbc.writeMem(0x34e, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x6936, gbc.sp());
        EXPECT(0x350, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3B 0183
        gbc.setState(0xbb9b, 0x9f59, 0xe4a0, 0x87cf, 0x3bb2, 0x8969, 0x1, 0x1);
        gbc.writeMem(0xbb9b, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x9f59, gbc.sp());
        EXPECT(0xbb9d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb9b));
        EXPECT(0x3b, gbc.readMem(0xbb9c));
        // CB 3B 0184
        gbc.setState(0x1a9b, 0x6e7b, 0xe1c0, 0xc019, 0x77d2, 0xecfd, 0x1, 0x1);
        gbc.writeMem(0x1a9b, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x6e7b, gbc.sp());
        EXPECT(0x1a9d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3B 0185
        gbc.setState(0xebde, 0xd2b1, 0xeba0, 0x4cee, 0xe543, 0xd390, 0x0, 0x1);
        gbc.writeMem(0xebde, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xd2b1, gbc.sp());
        EXPECT(0xebe0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xebde));
        EXPECT(0x3b, gbc.readMem(0xebdf));
        // CB 3B 0186
        gbc.setState(0xc4cb, 0x82d4, 0xa9e0, 0xc6c0, 0x7288, 0xd960, 0x0, 0x0);
        gbc.writeMem(0xc4cb, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x82d4, gbc.sp());
        EXPECT(0xc4cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc4cb));
        EXPECT(0x3b, gbc.readMem(0xc4cc));
        // CB 3B 0187
        gbc.setState(0x6128, 0x74a1, 0xb120, 0x3868, 0xa000, 0x937c, 0x0, 0x0);
        gbc.writeMem(0x6128, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x74a1, gbc.sp());
        EXPECT(0x612a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3B 0188
        gbc.setState(0x2f80, 0x84d7, 0x7770, 0x8c81, 0x88ea, 0xde40, 0x0, 0x0);
        gbc.writeMem(0x2f80, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x84d7, gbc.sp());
        EXPECT(0x2f82, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3B 0189
        gbc.setState(0xb13, 0xdb21, 0xe050, 0x2258, 0x8d6e, 0x10c9, 0x1, 0x0);
        gbc.writeMem(0xb13, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xdb21, gbc.sp());
        EXPECT(0xb15, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3B 018B
        gbc.setState(0xd091, 0x5bed, 0x71c0, 0xb163, 0xc3e7, 0xea90, 0x1, 0x0);
        gbc.writeMem(0xd091, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x5bed, gbc.sp());
        EXPECT(0xd093, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd091));
        EXPECT(0x3b, gbc.readMem(0xd092));
        // CB 3B 018D
        gbc.setState(0x2b95, 0xaad7, 0xaa0, 0x2331, 0x549a, 0xf520, 0x0, 0x0);
        gbc.writeMem(0x2b95, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xaad7, gbc.sp());
        EXPECT(0x2b97, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3B 018E
        gbc.setState(0x498c, 0xbe71, 0x7860, 0xa550, 0xf810, 0xf4ab, 0x0, 0x0);
        gbc.writeMem(0x498c, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xbe71, gbc.sp());
        EXPECT(0x498e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3B 018F
        gbc.setState(0xccb7, 0xc201, 0x2400, 0x81d3, 0x11c4, 0x3b2f, 0x0, 0x1);
        gbc.writeMem(0xccb7, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xc201, gbc.sp());
        EXPECT(0xccb9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xccb7));
        EXPECT(0x3b, gbc.readMem(0xccb8));
        // CB 3B 0190
        gbc.setState(0xd719, 0xcf61, 0x32c0, 0x3c60, 0x94bb, 0xf5e8, 0x0, 0x0);
        gbc.writeMem(0xd719, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xcf61, gbc.sp());
        EXPECT(0xd71b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd719));
        EXPECT(0x3b, gbc.readMem(0xd71a));
        // CB 3B 0191
        gbc.setState(0xbbe8, 0x8a83, 0xdba0, 0x53fa, 0x949d, 0xf3f3, 0x1, 0x1);
        gbc.writeMem(0xbbe8, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x8a83, gbc.sp());
        EXPECT(0xbbea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbbe8));
        EXPECT(0x3b, gbc.readMem(0xbbe9));
        // CB 3B 0192
        gbc.setState(0xbd20, 0xb166, 0xb30, 0xa49d, 0x24f7, 0x1801, 0x0, 0x0);
        gbc.writeMem(0xbd20, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xb166, gbc.sp());
        EXPECT(0xbd22, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd20));
        EXPECT(0x3b, gbc.readMem(0xbd21));
        // CB 3B 0193
        gbc.setState(0x199c, 0xa5e3, 0x5440, 0xced5, 0x19d, 0xe778, 0x0, 0x1);
        gbc.writeMem(0x199c, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xa5e3, gbc.sp());
        EXPECT(0x199e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3B 0194
        gbc.setState(0x5f6f, 0x260, 0x5b70, 0xd2, 0xc670, 0xfbea, 0x1, 0x0);
        gbc.writeMem(0x5f6f, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x260, gbc.sp());
        EXPECT(0x5f71, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3B 0195
        gbc.setState(0xaa15, 0x1018, 0x9240, 0x61c, 0xc469, 0x4554, 0x1, 0x1);
        gbc.writeMem(0xaa15, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x1018, gbc.sp());
        EXPECT(0xaa17, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa15));
        EXPECT(0x3b, gbc.readMem(0xaa16));
        // CB 3B 0196
        gbc.setState(0x35c7, 0xe5d2, 0xa870, 0x251, 0xce97, 0xd977, 0x0, 0x0);
        gbc.writeMem(0x35c7, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xe5d2, gbc.sp());
        EXPECT(0x35c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3B 0197
        gbc.setState(0x26f7, 0xc0aa, 0xf430, 0x1472, 0x475f, 0x6135, 0x0, 0x1);
        gbc.writeMem(0x26f7, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xc0aa, gbc.sp());
        EXPECT(0x26f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3B 0198
        gbc.setState(0xca7c, 0x1c36, 0x5550, 0x95d8, 0x1b9c, 0x718d, 0x1, 0x1);
        gbc.writeMem(0xca7c, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x1c36, gbc.sp());
        EXPECT(0xca7e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca7c));
        EXPECT(0x3b, gbc.readMem(0xca7d));
        // CB 3B 0199
        gbc.setState(0x3414, 0x4783, 0xcc80, 0xc8a0, 0xa4e5, 0xaf14, 0x1, 0x1);
        gbc.writeMem(0x3414, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x4783, gbc.sp());
        EXPECT(0x3416, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3B 019A
        gbc.setState(0x316c, 0xa3e, 0x2320, 0xe831, 0xfb62, 0x6440, 0x0, 0x1);
        gbc.writeMem(0x316c, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xa3e, gbc.sp());
        EXPECT(0x316e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3B 019C
        gbc.setState(0x745d, 0x5fea, 0xb3d0, 0x2d18, 0x4211, 0xadc2, 0x0, 0x0);
        gbc.writeMem(0x745d, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x5fea, gbc.sp());
        EXPECT(0x745f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3B 019D
        gbc.setState(0xbb12, 0x4d2d, 0x4af0, 0x229e, 0x3b4f, 0xb3dc, 0x0, 0x0);
        gbc.writeMem(0xbb12, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x4d2d, gbc.sp());
        EXPECT(0xbb14, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb12));
        EXPECT(0x3b, gbc.readMem(0xbb13));
        // CB 3B 019E
        gbc.setState(0x40c4, 0x9c0f, 0xa90, 0x560c, 0x4d0b, 0xabb, 0x0, 0x0);
        gbc.writeMem(0x40c4, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x9c0f, gbc.sp());
        EXPECT(0x40c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3B 019F
        gbc.setState(0x3d05, 0xe320, 0x97f0, 0x9114, 0xcbf9, 0xdb96, 0x1, 0x0);
        gbc.writeMem(0x3d05, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xe320, gbc.sp());
        EXPECT(0x3d07, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3B 01A0
        gbc.setState(0x53e5, 0xb883, 0x1ed0, 0x5ed0, 0x6de3, 0xe97f, 0x1, 0x1);
        gbc.writeMem(0x53e5, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xb883, gbc.sp());
        EXPECT(0x53e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3B 01A1
        gbc.setState(0xb4e8, 0xa1a5, 0x76c0, 0xab7, 0x15c6, 0xb06c, 0x1, 0x0);
        gbc.writeMem(0xb4e8, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xa1a5, gbc.sp());
        EXPECT(0xb4ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb4e8));
        EXPECT(0x3b, gbc.readMem(0xb4e9));
        // CB 3B 01A2
        gbc.setState(0x4a9b, 0x1074, 0x9e40, 0xe80b, 0x2092, 0x2590, 0x0, 0x0);
        gbc.writeMem(0x4a9b, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x1074, gbc.sp());
        EXPECT(0x4a9d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3B 01A3
        gbc.setState(0xc633, 0x77d0, 0x6d80, 0x6745, 0x9505, 0xfc56, 0x1, 0x0);
        gbc.writeMem(0xc633, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x77d0, gbc.sp());
        EXPECT(0xc635, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc633));
        EXPECT(0x3b, gbc.readMem(0xc634));
        // CB 3B 01A4
        gbc.setState(0x20a6, 0x2ab3, 0xe360, 0x555f, 0x4a1, 0x418b, 0x0, 0x0);
        gbc.writeMem(0x20a6, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x2ab3, gbc.sp());
        EXPECT(0x20a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3B 01A5
        gbc.setState(0x86b, 0xc8eb, 0xa790, 0xe339, 0x34a9, 0x5bc3, 0x0, 0x0);
        gbc.writeMem(0x86b, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xc8eb, gbc.sp());
        EXPECT(0x86d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3B 01A6
        gbc.setState(0xdf17, 0x3fdf, 0x1880, 0x2fc2, 0xc4d4, 0x3de0, 0x0, 0x0);
        gbc.writeMem(0xdf17, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x3fdf, gbc.sp());
        EXPECT(0xdf19, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf17));
        EXPECT(0x3b, gbc.readMem(0xdf18));
        // CB 3B 01A7
        gbc.setState(0x825f, 0x1a45, 0x7cf0, 0x8242, 0x1e0e, 0xb699, 0x1, 0x0);
        gbc.writeMem(0x825f, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x1a45, gbc.sp());
        EXPECT(0x8261, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x825f));
        EXPECT(0x3b, gbc.readMem(0x8260));
        // CB 3B 01A8
        gbc.setState(0x73d9, 0x7444, 0xde00, 0x5666, 0xf694, 0x3124, 0x1, 0x0);
        gbc.writeMem(0x73d9, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x7444, gbc.sp());
        EXPECT(0x73db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3B 01A9
        gbc.setState(0x3ff3, 0xf3af, 0xaf70, 0x12d6, 0x11f3, 0xd2f5, 0x1, 0x1);
        gbc.writeMem(0x3ff3, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xf3af, gbc.sp());
        EXPECT(0x3ff5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3B 01AB
        gbc.setState(0xeaf0, 0xc0f3, 0x20c0, 0x65e4, 0xd606, 0xfd6c, 0x1, 0x0);
        gbc.writeMem(0xeaf0, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xc0f3, gbc.sp());
        EXPECT(0xeaf2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeaf0));
        EXPECT(0x3b, gbc.readMem(0xeaf1));
        // CB 3B 01AC
        gbc.setState(0x874a, 0x665d, 0xd160, 0x7661, 0x8ab6, 0xa9e7, 0x1, 0x1);
        gbc.writeMem(0x874a, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x665d, gbc.sp());
        EXPECT(0x874c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x874a));
        EXPECT(0x3b, gbc.readMem(0x874b));
        // CB 3B 01AD
        gbc.setState(0xca6, 0x117b, 0x2630, 0x4c38, 0x2913, 0x5b67, 0x0, 0x0);
        gbc.writeMem(0xca6, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x117b, gbc.sp());
        EXPECT(0xca8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3B 01AE
        gbc.setState(0x80bd, 0xb514, 0x7c0, 0x98ad, 0x41cb, 0xbacb, 0x0, 0x1);
        gbc.writeMem(0x80bd, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xb514, gbc.sp());
        EXPECT(0x80bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x80bd));
        EXPECT(0x3b, gbc.readMem(0x80be));
        // CB 3B 01AF
        gbc.setState(0x1a50, 0xd4f4, 0xb720, 0xd302, 0xf10b, 0x612, 0x1, 0x1);
        gbc.writeMem(0x1a50, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xd4f4, gbc.sp());
        EXPECT(0x1a52, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3B 01B0
        gbc.setState(0xdf5b, 0x9e08, 0x6a70, 0xf50d, 0x18de, 0xb451, 0x0, 0x1);
        gbc.writeMem(0xdf5b, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x9e08, gbc.sp());
        EXPECT(0xdf5d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf5b));
        EXPECT(0x3b, gbc.readMem(0xdf5c));
        // CB 3B 01B1
        gbc.setState(0x717c, 0x7c78, 0x28a0, 0x5708, 0x8f93, 0x235c, 0x0, 0x0);
        gbc.writeMem(0x717c, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x7c78, gbc.sp());
        EXPECT(0x717e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3B 01B2
        gbc.setState(0xc821, 0xa7ff, 0xee50, 0x8252, 0xbbe4, 0xd5dd, 0x0, 0x0);
        gbc.writeMem(0xc821, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xa7ff, gbc.sp());
        EXPECT(0xc823, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc821));
        EXPECT(0x3b, gbc.readMem(0xc822));
        // CB 3B 01B3
        gbc.setState(0x73a, 0x880, 0xdff0, 0xd252, 0x8dd9, 0x59bf, 0x1, 0x1);
        gbc.writeMem(0x73a, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x880, gbc.sp());
        EXPECT(0x73c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3B 01B4
        gbc.setState(0xc376, 0x1800, 0x5fb0, 0xd9a4, 0x29f6, 0x7272, 0x0, 0x1);
        gbc.writeMem(0xc376, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x1800, gbc.sp());
        EXPECT(0xc378, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc376));
        EXPECT(0x3b, gbc.readMem(0xc377));
        // CB 3B 01B5
        gbc.setState(0xc944, 0x10f2, 0x3b0, 0x64eb, 0xadf8, 0x1eb1, 0x1, 0x1);
        gbc.writeMem(0xc944, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x10f2, gbc.sp());
        EXPECT(0xc946, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc944));
        EXPECT(0x3b, gbc.readMem(0xc945));
        // CB 3B 01B6
        gbc.setState(0x666e, 0xe882, 0xc080, 0x76dc, 0xf73c, 0x16ed, 0x0, 0x0);
        gbc.writeMem(0x666e, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xe882, gbc.sp());
        EXPECT(0x6670, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3B 01B7
        gbc.setState(0xb17b, 0x2ea0, 0xde60, 0x9dbe, 0xec08, 0x2f6f, 0x0, 0x0);
        gbc.writeMem(0xb17b, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x2ea0, gbc.sp());
        EXPECT(0xb17d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb17b));
        EXPECT(0x3b, gbc.readMem(0xb17c));
        // CB 3B 01B8
        gbc.setState(0xeee3, 0xcf71, 0xb590, 0x40d4, 0x33bb, 0xc1f2, 0x0, 0x1);
        gbc.writeMem(0xeee3, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xcf71, gbc.sp());
        EXPECT(0xeee5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeee3));
        EXPECT(0x3b, gbc.readMem(0xeee4));
        // CB 3B 01B9
        gbc.setState(0x25a9, 0x23fc, 0x64c0, 0xb5ec, 0xcc04, 0x7e2c, 0x0, 0x1);
        gbc.writeMem(0x25a9, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x23fc, gbc.sp());
        EXPECT(0x25ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3B 01BA
        gbc.setState(0xb781, 0x97cc, 0x2750, 0x54b6, 0x38cb, 0x19c6, 0x0, 0x0);
        gbc.writeMem(0xb781, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x97cc, gbc.sp());
        EXPECT(0xb783, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb781));
        EXPECT(0x3b, gbc.readMem(0xb782));
        // CB 3B 01BB
        gbc.setState(0x45d8, 0xb7c2, 0x2c30, 0x4cd7, 0xace0, 0xdc9d, 0x1, 0x0);
        gbc.writeMem(0x45d8, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xb7c2, gbc.sp());
        EXPECT(0x45da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3B 01BC
        gbc.setState(0xd59b, 0xf451, 0x8f20, 0xfad, 0xa8dd, 0xa55f, 0x1, 0x1);
        gbc.writeMem(0xd59b, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xf451, gbc.sp());
        EXPECT(0xd59d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd59b));
        EXPECT(0x3b, gbc.readMem(0xd59c));
        // CB 3B 01BD
        gbc.setState(0x511, 0x9ae2, 0xa520, 0x997a, 0x9333, 0x242, 0x0, 0x0);
        gbc.writeMem(0x511, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x9ae2, gbc.sp());
        EXPECT(0x513, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3B 01BE
        gbc.setState(0x6e5e, 0x93f9, 0x98e0, 0x52b8, 0xf000, 0x2050, 0x0, 0x0);
        gbc.writeMem(0x6e5e, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x93f9, gbc.sp());
        EXPECT(0x6e60, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3B 01BF
        gbc.setState(0x31fe, 0x8e6a, 0xb140, 0xc1a2, 0xdacb, 0xed84, 0x0, 0x1);
        gbc.writeMem(0x31fe, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x8e6a, gbc.sp());
        EXPECT(0x3200, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3B 01C0
        gbc.setState(0x213f, 0xac97, 0xf900, 0xa8e0, 0x593e, 0x12a7, 0x1, 0x0);
        gbc.writeMem(0x213f, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xac97, gbc.sp());
        EXPECT(0x2141, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3B 01C1
        gbc.setState(0xb45a, 0xc206, 0x5260, 0x9f25, 0x10f8, 0xb09, 0x0, 0x1);
        gbc.writeMem(0xb45a, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xc206, gbc.sp());
        EXPECT(0xb45c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb45a));
        EXPECT(0x3b, gbc.readMem(0xb45b));
        // CB 3B 01C2
        gbc.setState(0x7e1f, 0x19f2, 0x53e0, 0x53e6, 0x445, 0xec3f, 0x1, 0x1);
        gbc.writeMem(0x7e1f, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x19f2, gbc.sp());
        EXPECT(0x7e21, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3B 01C3
        gbc.setState(0x52ad, 0xcb33, 0x1ca0, 0x9025, 0x3e42, 0x2fe4, 0x0, 0x1);
        gbc.writeMem(0x52ad, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xcb33, gbc.sp());
        EXPECT(0x52af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3B 01C4
        gbc.setState(0x91e9, 0x781d, 0x1450, 0xf9f5, 0xe9d4, 0x90d9, 0x1, 0x1);
        gbc.writeMem(0x91e9, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x781d, gbc.sp());
        EXPECT(0x91eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x91e9));
        EXPECT(0x3b, gbc.readMem(0x91ea));
        // CB 3B 01C5
        gbc.setState(0xe709, 0xab07, 0x4c90, 0xdd06, 0xf0bb, 0x330d, 0x0, 0x1);
        gbc.writeMem(0xe709, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xab07, gbc.sp());
        EXPECT(0xe70b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe709));
        EXPECT(0x3b, gbc.readMem(0xe70a));
        // CB 3B 01C6
        gbc.setState(0x48b1, 0x10fc, 0xdf00, 0x4e12, 0x9987, 0x55fc, 0x1, 0x1);
        gbc.writeMem(0x48b1, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x10fc, gbc.sp());
        EXPECT(0x48b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3B 01C7
        gbc.setState(0x157c, 0x3fe, 0x6260, 0xebe, 0x17c3, 0x19a9, 0x1, 0x1);
        gbc.writeMem(0x157c, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x3fe, gbc.sp());
        EXPECT(0x157e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3B 01C8
        gbc.setState(0xdfe7, 0x21f4, 0x2230, 0xe5a7, 0x4a5, 0x25d5, 0x0, 0x1);
        gbc.writeMem(0xdfe7, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x21f4, gbc.sp());
        EXPECT(0xdfe9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdfe7));
        EXPECT(0x3b, gbc.readMem(0xdfe8));
        // CB 3B 01C9
        gbc.setState(0xb771, 0x7df2, 0xa140, 0x9efa, 0x9a67, 0x790a, 0x0, 0x0);
        gbc.writeMem(0xb771, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x7df2, gbc.sp());
        EXPECT(0xb773, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb771));
        EXPECT(0x3b, gbc.readMem(0xb772));
        // CB 3B 01CA
        gbc.setState(0xd02b, 0x2c3e, 0x1a70, 0x9086, 0x5061, 0xbe2f, 0x0, 0x0);
        gbc.writeMem(0xd02b, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x2c3e, gbc.sp());
        EXPECT(0xd02d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd02b));
        EXPECT(0x3b, gbc.readMem(0xd02c));
        // CB 3B 01CB
        gbc.setState(0x2ab5, 0xf3d5, 0x9c10, 0x5105, 0x118, 0x6630, 0x0, 0x1);
        gbc.writeMem(0x2ab5, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xf3d5, gbc.sp());
        EXPECT(0x2ab7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3B 01CC
        gbc.setState(0x54ad, 0x86c4, 0x3050, 0x1be9, 0x5113, 0xabd4, 0x1, 0x1);
        gbc.writeMem(0x54ad, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x86c4, gbc.sp());
        EXPECT(0x54af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3B 01CE
        gbc.setState(0x7fc0, 0xe496, 0x9b50, 0x3d79, 0xc26, 0x39b6, 0x1, 0x1);
        gbc.writeMem(0x7fc0, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xe496, gbc.sp());
        EXPECT(0x7fc2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3B 01CF
        gbc.setState(0xd26b, 0xa90b, 0x38c0, 0xe4f2, 0xc500, 0x78f9, 0x1, 0x1);
        gbc.writeMem(0xd26b, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xa90b, gbc.sp());
        EXPECT(0xd26d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd26b));
        EXPECT(0x3b, gbc.readMem(0xd26c));
        // CB 3B 01D0
        gbc.setState(0x4699, 0xb9ac, 0x29b0, 0x5bf5, 0xa05c, 0x9d34, 0x0, 0x1);
        gbc.writeMem(0x4699, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xb9ac, gbc.sp());
        EXPECT(0x469b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3B 01D1
        gbc.setState(0xe1c3, 0x2feb, 0x4590, 0xcd99, 0x7e46, 0x20b, 0x1, 0x0);
        gbc.writeMem(0xe1c3, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x2feb, gbc.sp());
        EXPECT(0xe1c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe1c3));
        EXPECT(0x3b, gbc.readMem(0xe1c4));
        // CB 3B 01D2
        gbc.setState(0x3712, 0x9dc2, 0xd2c0, 0xf7b5, 0xb764, 0x7d61, 0x1, 0x1);
        gbc.writeMem(0x3712, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x9dc2, gbc.sp());
        EXPECT(0x3714, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3B 01D4
        gbc.setState(0x4195, 0xf85e, 0xff0, 0x72a9, 0x793d, 0xb129, 0x1, 0x1);
        gbc.writeMem(0x4195, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xf85e, gbc.sp());
        EXPECT(0x4197, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3B 01D5
        gbc.setState(0xb164, 0x8131, 0xc940, 0x9b61, 0xf1c2, 0x7e7, 0x0, 0x0);
        gbc.writeMem(0xb164, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x8131, gbc.sp());
        EXPECT(0xb166, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb164));
        EXPECT(0x3b, gbc.readMem(0xb165));
        // CB 3B 01D6
        gbc.setState(0xce69, 0x507a, 0x6e30, 0xf0bc, 0x391b, 0xe9d3, 0x0, 0x0);
        gbc.writeMem(0xce69, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x507a, gbc.sp());
        EXPECT(0xce6b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce69));
        EXPECT(0x3b, gbc.readMem(0xce6a));
        // CB 3B 01D7
        gbc.setState(0xba0b, 0xe780, 0xd890, 0xc7e5, 0x17f, 0x4b83, 0x1, 0x1);
        gbc.writeMem(0xba0b, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xe780, gbc.sp());
        EXPECT(0xba0d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba0b));
        EXPECT(0x3b, gbc.readMem(0xba0c));
        // CB 3B 01D8
        gbc.setState(0x1935, 0x27ff, 0x2880, 0xda07, 0xb90f, 0xaa99, 0x1, 0x1);
        gbc.writeMem(0x1935, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x27ff, gbc.sp());
        EXPECT(0x1937, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3B 01D9
        gbc.setState(0x8461, 0x6f90, 0xb0f0, 0xb339, 0xdf48, 0x794c, 0x0, 0x0);
        gbc.writeMem(0x8461, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x6f90, gbc.sp());
        EXPECT(0x8463, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8461));
        EXPECT(0x3b, gbc.readMem(0x8462));
        // CB 3B 01DA
        gbc.setState(0xa3ef, 0x452b, 0x9f80, 0xb5ec, 0xbcbd, 0x3396, 0x0, 0x0);
        gbc.writeMem(0xa3ef, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x452b, gbc.sp());
        EXPECT(0xa3f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa3ef));
        EXPECT(0x3b, gbc.readMem(0xa3f0));
        // CB 3B 01DB
        gbc.setState(0x914d, 0x136b, 0x70e0, 0x1dc1, 0x5f0e, 0xcc5a, 0x0, 0x0);
        gbc.writeMem(0x914d, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x136b, gbc.sp());
        EXPECT(0x914f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x914d));
        EXPECT(0x3b, gbc.readMem(0x914e));
        // CB 3B 01DC
        gbc.setState(0xafd0, 0x95f5, 0x1f20, 0xa229, 0x1963, 0x80bd, 0x0, 0x0);
        gbc.writeMem(0xafd0, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x95f5, gbc.sp());
        EXPECT(0xafd2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xafd0));
        EXPECT(0x3b, gbc.readMem(0xafd1));
        // CB 3B 01DD
        gbc.setState(0x139d, 0xdf76, 0x3330, 0x725b, 0x4c22, 0xc891, 0x0, 0x0);
        gbc.writeMem(0x139d, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xdf76, gbc.sp());
        EXPECT(0x139f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3B 01DF
        gbc.setState(0xe06c, 0x8a7c, 0xa2b0, 0x8b1e, 0x6b48, 0xcb68, 0x1, 0x1);
        gbc.writeMem(0xe06c, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x8a7c, gbc.sp());
        EXPECT(0xe06e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe06c));
        EXPECT(0x3b, gbc.readMem(0xe06d));
        // CB 3B 01E0
        gbc.setState(0x67f5, 0xb45b, 0x8be0, 0x5d9b, 0x29dc, 0xcb5a, 0x0, 0x1);
        gbc.writeMem(0x67f5, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xb45b, gbc.sp());
        EXPECT(0x67f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3B 01E1
        gbc.setState(0xb57f, 0x66e7, 0xccb0, 0x829e, 0x33ad, 0x9d39, 0x1, 0x1);
        gbc.writeMem(0xb57f, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x66e7, gbc.sp());
        EXPECT(0xb581, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb57f));
        EXPECT(0x3b, gbc.readMem(0xb580));
        // CB 3B 01E2
        gbc.setState(0x1cd3, 0x3ee2, 0x6a10, 0x1119, 0x27bc, 0xedb9, 0x0, 0x0);
        gbc.writeMem(0x1cd3, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x3ee2, gbc.sp());
        EXPECT(0x1cd5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3B 01E3
        gbc.setState(0xd481, 0x5003, 0xa5b0, 0xaec9, 0xd782, 0x19f8, 0x0, 0x0);
        gbc.writeMem(0xd481, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x5003, gbc.sp());
        EXPECT(0xd483, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd481));
        EXPECT(0x3b, gbc.readMem(0xd482));
        // CB 3B 01E4
        gbc.setState(0xc775, 0x97ec, 0x7660, 0xd23f, 0xe31a, 0x3e91, 0x1, 0x0);
        gbc.writeMem(0xc775, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x97ec, gbc.sp());
        EXPECT(0xc777, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc775));
        EXPECT(0x3b, gbc.readMem(0xc776));
        // CB 3B 01E5
        gbc.setState(0x35f5, 0x8b34, 0x83b0, 0xc5f2, 0xdefd, 0xeec2, 0x1, 0x1);
        gbc.writeMem(0x35f5, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x8b34, gbc.sp());
        EXPECT(0x35f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3B 01E6
        gbc.setState(0x4ff8, 0xdbd6, 0xe690, 0xbe0f, 0xe3c0, 0x71f, 0x0, 0x1);
        gbc.writeMem(0x4ff8, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xdbd6, gbc.sp());
        EXPECT(0x4ffa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3B 01E7
        gbc.setState(0x31b3, 0xda87, 0x5d10, 0xf7dd, 0x215d, 0x52fd, 0x0, 0x0);
        gbc.writeMem(0x31b3, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xda87, gbc.sp());
        EXPECT(0x31b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3B 01E8
        gbc.setState(0x5f8f, 0x7210, 0x1310, 0xb0c9, 0x5519, 0x462e, 0x0, 0x0);
        gbc.writeMem(0x5f8f, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x7210, gbc.sp());
        EXPECT(0x5f91, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3B 01E9
        gbc.setState(0xd599, 0x89a2, 0xabc0, 0xf848, 0x99d9, 0x511c, 0x1, 0x0);
        gbc.writeMem(0xd599, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x89a2, gbc.sp());
        EXPECT(0xd59b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd599));
        EXPECT(0x3b, gbc.readMem(0xd59a));
        // CB 3B 01EA
        gbc.setState(0x1551, 0x9af6, 0x8300, 0xea3f, 0x4dce, 0x20a8, 0x1, 0x0);
        gbc.writeMem(0x1551, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x9af6, gbc.sp());
        EXPECT(0x1553, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3B 01EB
        gbc.setState(0xc4d0, 0x2a7a, 0x8d50, 0x876b, 0x3ed5, 0xec9a, 0x1, 0x0);
        gbc.writeMem(0xc4d0, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x2a7a, gbc.sp());
        EXPECT(0xc4d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc4d0));
        EXPECT(0x3b, gbc.readMem(0xc4d1));
        // CB 3B 01EC
        gbc.setState(0x891d, 0xd7b3, 0x8e0, 0xfb68, 0x608a, 0x972c, 0x0, 0x1);
        gbc.writeMem(0x891d, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xd7b3, gbc.sp());
        EXPECT(0x891f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x891d));
        EXPECT(0x3b, gbc.readMem(0x891e));
        // CB 3B 01ED
        gbc.setState(0xc057, 0x853b, 0x6570, 0x1059, 0xb9d, 0xfa22, 0x0, 0x1);
        gbc.writeMem(0xc057, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x853b, gbc.sp());
        EXPECT(0xc059, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc057));
        EXPECT(0x3b, gbc.readMem(0xc058));
        // CB 3B 01EF
        gbc.setState(0x9817, 0x85f3, 0x3420, 0xb348, 0xfb87, 0x5846, 0x0, 0x0);
        gbc.writeMem(0x9817, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x85f3, gbc.sp());
        EXPECT(0x9819, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9817));
        EXPECT(0x3b, gbc.readMem(0x9818));
        // CB 3B 01F0
        gbc.setState(0x4fe8, 0xc800, 0x9a00, 0xc5c1, 0x1e1e, 0xc64, 0x0, 0x1);
        gbc.writeMem(0x4fe8, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xc800, gbc.sp());
        EXPECT(0x4fea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3B 01F1
        gbc.setState(0xbd4c, 0x572d, 0xcb80, 0x4ced, 0x59f5, 0x159d, 0x1, 0x0);
        gbc.writeMem(0xbd4c, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x572d, gbc.sp());
        EXPECT(0xbd4e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd4c));
        EXPECT(0x3b, gbc.readMem(0xbd4d));
        // CB 3B 01F2
        gbc.setState(0xcc57, 0xf643, 0x38d0, 0x422a, 0x2eb, 0x22c6, 0x1, 0x0);
        gbc.writeMem(0xcc57, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xf643, gbc.sp());
        EXPECT(0xcc59, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc57));
        EXPECT(0x3b, gbc.readMem(0xcc58));
        // CB 3B 01F3
        gbc.setState(0x9d6b, 0x8568, 0x18e0, 0x2c1a, 0x31e1, 0xefc6, 0x0, 0x0);
        gbc.writeMem(0x9d6b, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x8568, gbc.sp());
        EXPECT(0x9d6d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d6b));
        EXPECT(0x3b, gbc.readMem(0x9d6c));
        // CB 3B 01F4
        gbc.setState(0xd7e4, 0x300c, 0x7ac0, 0x35cd, 0x59a9, 0x8aa9, 0x1, 0x1);
        gbc.writeMem(0xd7e4, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x300c, gbc.sp());
        EXPECT(0xd7e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd7e4));
        EXPECT(0x3b, gbc.readMem(0xd7e5));
        // CB 3B 01F5
        gbc.setState(0x5825, 0xe06e, 0xc880, 0xc633, 0xc2f5, 0xa283, 0x0, 0x1);
        gbc.writeMem(0x5825, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xe06e, gbc.sp());
        EXPECT(0x5827, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3B 01F6
        gbc.setState(0x2628, 0x9a6d, 0x5090, 0xd347, 0x4c2f, 0x62f, 0x1, 0x0);
        gbc.writeMem(0x2628, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x9a6d, gbc.sp());
        EXPECT(0x262a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3B 01F7
        gbc.setState(0x681e, 0x9494, 0x6b30, 0xb0a1, 0x29bc, 0x5ab5, 0x0, 0x0);
        gbc.writeMem(0x681e, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x9494, gbc.sp());
        EXPECT(0x6820, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3B 01F8
        gbc.setState(0x167a, 0xa387, 0x6e20, 0x3587, 0x6793, 0xa995, 0x1, 0x1);
        gbc.writeMem(0x167a, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xa387, gbc.sp());
        EXPECT(0x167c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3B 01F9
        gbc.setState(0xed1c, 0xd9a3, 0x61a0, 0xb0ab, 0xa8c6, 0x5dde, 0x0, 0x0);
        gbc.writeMem(0xed1c, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xd9a3, gbc.sp());
        EXPECT(0xed1e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed1c));
        EXPECT(0x3b, gbc.readMem(0xed1d));
        // CB 3B 01FA
        gbc.setState(0x89e7, 0x68cc, 0xe8c0, 0xd1f2, 0x8b2b, 0xaabe, 0x1, 0x0);
        gbc.writeMem(0x89e7, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x68cc, gbc.sp());
        EXPECT(0x89e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x89e7));
        EXPECT(0x3b, gbc.readMem(0x89e8));
        // CB 3B 01FB
        gbc.setState(0x15b9, 0x9531, 0xfa40, 0xb88e, 0x559e, 0xbd4, 0x0, 0x1);
        gbc.writeMem(0x15b9, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x9531, gbc.sp());
        EXPECT(0x15bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3B 01FC
        gbc.setState(0xc01a, 0x7ca3, 0xfee0, 0x13d8, 0xf03c, 0xba43, 0x0, 0x1);
        gbc.writeMem(0xc01a, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x7ca3, gbc.sp());
        EXPECT(0xc01c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc01a));
        EXPECT(0x3b, gbc.readMem(0xc01b));
        // CB 3B 01FD
        gbc.setState(0xddbf, 0xb081, 0xf0, 0x9f3c, 0x40a3, 0xac19, 0x1, 0x0);
        gbc.writeMem(0xddbf, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xb081, gbc.sp());
        EXPECT(0xddc1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xddbf));
        EXPECT(0x3b, gbc.readMem(0xddc0));
        // CB 3B 01FE
        gbc.setState(0xba2d, 0x5131, 0x6920, 0x2e3, 0xd05d, 0x2321, 0x0, 0x0);
        gbc.writeMem(0xba2d, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x5131, gbc.sp());
        EXPECT(0xba2f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba2d));
        EXPECT(0x3b, gbc.readMem(0xba2e));
        // CB 3B 01FF
        gbc.setState(0x7bd8, 0xc13b, 0x5eb0, 0x7f, 0x5afa, 0xcffd, 0x1, 0x0);
        gbc.writeMem(0x7bd8, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xc13b, gbc.sp());
        EXPECT(0x7bda, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3B 0200
        gbc.setState(0x56e2, 0x78ca, 0xcc70, 0x387d, 0x935, 0x70bd, 0x1, 0x1);
        gbc.writeMem(0x56e2, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x78ca, gbc.sp());
        EXPECT(0x56e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3B 0201
        gbc.setState(0x6360, 0x36dd, 0xeb10, 0x6dc2, 0x1c08, 0xa7fa, 0x1, 0x1);
        gbc.writeMem(0x6360, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x36dd, gbc.sp());
        EXPECT(0x6362, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3B 0202
        gbc.setState(0x1f99, 0x5540, 0x9eb0, 0xa972, 0x1dfc, 0xf1e3, 0x1, 0x0);
        gbc.writeMem(0x1f99, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x5540, gbc.sp());
        EXPECT(0x1f9b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3B 0203
        gbc.setState(0x5ae7, 0x278c, 0x4e70, 0x22a4, 0x42c3, 0x243c, 0x1, 0x0);
        gbc.writeMem(0x5ae7, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x278c, gbc.sp());
        EXPECT(0x5ae9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3B 0204
        gbc.setState(0xca36, 0xe666, 0x6380, 0x846c, 0x1b96, 0x1e36, 0x0, 0x0);
        gbc.writeMem(0xca36, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xe666, gbc.sp());
        EXPECT(0xca38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca36));
        EXPECT(0x3b, gbc.readMem(0xca37));
        // CB 3B 0205
        gbc.setState(0xe860, 0x9bf9, 0x2fe0, 0x9fa, 0xb5f9, 0x1e70, 0x1, 0x0);
        gbc.writeMem(0xe860, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x9bf9, gbc.sp());
        EXPECT(0xe862, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe860));
        EXPECT(0x3b, gbc.readMem(0xe861));
        // CB 3B 0207
        gbc.setState(0xd96f, 0xc139, 0x9090, 0xd349, 0xdbda, 0xc53f, 0x1, 0x0);
        gbc.writeMem(0xd96f, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xc139, gbc.sp());
        EXPECT(0xd971, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd96f));
        EXPECT(0x3b, gbc.readMem(0xd970));
        // CB 3B 0208
        gbc.setState(0xa6a8, 0x5627, 0x6560, 0x1325, 0x4492, 0x9222, 0x0, 0x1);
        gbc.writeMem(0xa6a8, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x5627, gbc.sp());
        EXPECT(0xa6aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa6a8));
        EXPECT(0x3b, gbc.readMem(0xa6a9));
        // CB 3B 0209
        gbc.setState(0x48c8, 0x449e, 0xd9b0, 0x98eb, 0xa46f, 0x7ea7, 0x0, 0x0);
        gbc.writeMem(0x48c8, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x449e, gbc.sp());
        EXPECT(0x48ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3B 020A
        gbc.setState(0xaa45, 0x364d, 0x1b90, 0xb2fd, 0x1425, 0xfb3c, 0x1, 0x1);
        gbc.writeMem(0xaa45, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x364d, gbc.sp());
        EXPECT(0xaa47, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa45));
        EXPECT(0x3b, gbc.readMem(0xaa46));
        // CB 3B 020B
        gbc.setState(0x6bbe, 0x5e15, 0x41c0, 0x3036, 0xf660, 0x9e1c, 0x1, 0x0);
        gbc.writeMem(0x6bbe, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x5e15, gbc.sp());
        EXPECT(0x6bc0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3B 020C
        gbc.setState(0x129a, 0x1ff0, 0x1ee0, 0x2b28, 0x3ae6, 0x27f6, 0x1, 0x0);
        gbc.writeMem(0x129a, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x1ff0, gbc.sp());
        EXPECT(0x129c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3B 020D
        gbc.setState(0x3634, 0x7e13, 0x9860, 0xce42, 0xb05c, 0x12be, 0x0, 0x0);
        gbc.writeMem(0x3634, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x7e13, gbc.sp());
        EXPECT(0x3636, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3B 020E
        gbc.setState(0x700f, 0x71a, 0x6270, 0xbe8c, 0x50c1, 0xbfc0, 0x1, 0x1);
        gbc.writeMem(0x700f, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x71a, gbc.sp());
        EXPECT(0x7011, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3B 020F
        gbc.setState(0x8a9f, 0x2888, 0xdaa0, 0x2e7d, 0x1fec, 0x5713, 0x0, 0x0);
        gbc.writeMem(0x8a9f, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x2888, gbc.sp());
        EXPECT(0x8aa1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a9f));
        EXPECT(0x3b, gbc.readMem(0x8aa0));
        // CB 3B 0210
        gbc.setState(0x7ae5, 0xadec, 0xaf30, 0x68dc, 0x9df2, 0xea24, 0x1, 0x1);
        gbc.writeMem(0x7ae5, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xadec, gbc.sp());
        EXPECT(0x7ae7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3B 0211
        gbc.setState(0x98f2, 0x90f4, 0x38d0, 0xe85d, 0x2faa, 0x4891, 0x0, 0x1);
        gbc.writeMem(0x98f2, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x90f4, gbc.sp());
        EXPECT(0x98f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x98f2));
        EXPECT(0x3b, gbc.readMem(0x98f3));
        // CB 3B 0212
        gbc.setState(0x9aed, 0x6819, 0xd020, 0x6bda, 0x3e2e, 0xff0b, 0x1, 0x0);
        gbc.writeMem(0x9aed, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x6819, gbc.sp());
        EXPECT(0x9aef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9aed));
        EXPECT(0x3b, gbc.readMem(0x9aee));
        // CB 3B 0213
        gbc.setState(0xa116, 0xa70, 0x1ce0, 0xd497, 0xa9ce, 0x8a3, 0x0, 0x1);
        gbc.writeMem(0xa116, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xa70, gbc.sp());
        EXPECT(0xa118, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa116));
        EXPECT(0x3b, gbc.readMem(0xa117));
        // CB 3B 0214
        gbc.setState(0x8bca, 0x4720, 0x87f0, 0x1ffa, 0x3a08, 0xc418, 0x0, 0x1);
        gbc.writeMem(0x8bca, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x4720, gbc.sp());
        EXPECT(0x8bcc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8bca));
        EXPECT(0x3b, gbc.readMem(0x8bcb));
        // CB 3B 0215
        gbc.setState(0xeb69, 0x5dc1, 0xf160, 0xdbac, 0xe15, 0x67e9, 0x0, 0x1);
        gbc.writeMem(0xeb69, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x5dc1, gbc.sp());
        EXPECT(0xeb6b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb69));
        EXPECT(0x3b, gbc.readMem(0xeb6a));
        // CB 3B 0216
        gbc.setState(0x3425, 0x527d, 0xa4b0, 0xe075, 0x58ee, 0xb866, 0x1, 0x0);
        gbc.writeMem(0x3425, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x527d, gbc.sp());
        EXPECT(0x3427, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3B 0217
        gbc.setState(0x7cdb, 0x51ef, 0xe0c0, 0xf4b7, 0x7546, 0xc776, 0x1, 0x0);
        gbc.writeMem(0x7cdb, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x51ef, gbc.sp());
        EXPECT(0x7cdd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3B 0218
        gbc.setState(0x5b44, 0x5208, 0x95f0, 0x9520, 0x6720, 0xd3f0, 0x0, 0x0);
        gbc.writeMem(0x5b44, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x5208, gbc.sp());
        EXPECT(0x5b46, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3B 0219
        gbc.setState(0x836a, 0x17b3, 0x9030, 0x89e, 0xd2e6, 0xcd78, 0x0, 0x0);
        gbc.writeMem(0x836a, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x17b3, gbc.sp());
        EXPECT(0x836c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x836a));
        EXPECT(0x3b, gbc.readMem(0x836b));
        // CB 3B 021B
        gbc.setState(0xacae, 0xc9d1, 0xe570, 0x30fa, 0x824f, 0x6d21, 0x1, 0x1);
        gbc.writeMem(0xacae, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xc9d1, gbc.sp());
        EXPECT(0xacb0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xacae));
        EXPECT(0x3b, gbc.readMem(0xacaf));
        // CB 3B 021C
        gbc.setState(0x5423, 0xaa25, 0x8e70, 0xe03d, 0x6d1e, 0x1bbd, 0x0, 0x1);
        gbc.writeMem(0x5423, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xaa25, gbc.sp());
        EXPECT(0x5425, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3B 021D
        gbc.setState(0xa221, 0xfd7e, 0xd310, 0xbe9e, 0x7f93, 0xced5, 0x1, 0x1);
        gbc.writeMem(0xa221, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xfd7e, gbc.sp());
        EXPECT(0xa223, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa221));
        EXPECT(0x3b, gbc.readMem(0xa222));
        // CB 3B 021E
        gbc.setState(0x8573, 0x1382, 0x3940, 0x8af2, 0xe6e7, 0x99b5, 0x1, 0x1);
        gbc.writeMem(0x8573, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x1382, gbc.sp());
        EXPECT(0x8575, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8573));
        EXPECT(0x3b, gbc.readMem(0x8574));
        // CB 3B 021F
        gbc.setState(0x1b91, 0x8196, 0xc3b0, 0x95db, 0x6c4b, 0x9f71, 0x0, 0x1);
        gbc.writeMem(0x1b91, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x8196, gbc.sp());
        EXPECT(0x1b93, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3B 0220
        gbc.setState(0x1391, 0xf2f1, 0x5290, 0xee53, 0xd932, 0x5d74, 0x0, 0x0);
        gbc.writeMem(0x1391, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xf2f1, gbc.sp());
        EXPECT(0x1393, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3B 0221
        gbc.setState(0x66c1, 0xbb5d, 0x29b0, 0xd458, 0xec5c, 0x4a76, 0x1, 0x1);
        gbc.writeMem(0x66c1, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xbb5d, gbc.sp());
        EXPECT(0x66c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3B 0222
        gbc.setState(0x5705, 0x286b, 0x5180, 0x776c, 0x748, 0x47de, 0x0, 0x1);
        gbc.writeMem(0x5705, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x286b, gbc.sp());
        EXPECT(0x5707, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3B 0223
        gbc.setState(0x3b79, 0x11b3, 0x8f70, 0xa6be, 0xcf06, 0xfc53, 0x1, 0x0);
        gbc.writeMem(0x3b79, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x11b3, gbc.sp());
        EXPECT(0x3b7b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3B 0224
        gbc.setState(0x6667, 0xc852, 0x5740, 0x4cb, 0x6eef, 0x1129, 0x1, 0x1);
        gbc.writeMem(0x6667, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xc852, gbc.sp());
        EXPECT(0x6669, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3B 0225
        gbc.setState(0x8e6c, 0xac2e, 0xa110, 0xc8ef, 0x230a, 0x8bc7, 0x1, 0x1);
        gbc.writeMem(0x8e6c, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xac2e, gbc.sp());
        EXPECT(0x8e6e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e6c));
        EXPECT(0x3b, gbc.readMem(0x8e6d));
        // CB 3B 0226
        gbc.setState(0x7f20, 0xeb46, 0xe0a0, 0x5022, 0xcbce, 0x4b0c, 0x0, 0x1);
        gbc.writeMem(0x7f20, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xeb46, gbc.sp());
        EXPECT(0x7f22, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3B 0227
        gbc.setState(0x40a5, 0x7266, 0xac60, 0x1624, 0xea12, 0x1af6, 0x0, 0x1);
        gbc.writeMem(0x40a5, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x7266, gbc.sp());
        EXPECT(0x40a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3B 0229
        gbc.setState(0x4130, 0x3b14, 0xee20, 0x286, 0xc2cd, 0x3b8b, 0x0, 0x1);
        gbc.writeMem(0x4130, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x3b14, gbc.sp());
        EXPECT(0x4132, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3B 022A
        gbc.setState(0x261b, 0x4acd, 0x99a0, 0x8d25, 0xb5f9, 0x438e, 0x0, 0x1);
        gbc.writeMem(0x261b, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x4acd, gbc.sp());
        EXPECT(0x261d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3B 022B
        gbc.setState(0x6181, 0x7b6d, 0x3b40, 0xe646, 0x2ebf, 0x41a, 0x0, 0x1);
        gbc.writeMem(0x6181, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x7b6d, gbc.sp());
        EXPECT(0x6183, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3B 022C
        gbc.setState(0xc569, 0xff0e, 0x2eb0, 0x4e87, 0x4668, 0xce54, 0x1, 0x0);
        gbc.writeMem(0xc569, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xff0e, gbc.sp());
        EXPECT(0xc56b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc569));
        EXPECT(0x3b, gbc.readMem(0xc56a));
        // CB 3B 022D
        gbc.setState(0x3b36, 0x3a79, 0x44a0, 0x7249, 0xdc00, 0x1cad, 0x1, 0x0);
        gbc.writeMem(0x3b36, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x3a79, gbc.sp());
        EXPECT(0x3b38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3B 022E
        gbc.setState(0x4d34, 0x940d, 0xf710, 0xb6ca, 0x17ae, 0xcee0, 0x1, 0x0);
        gbc.writeMem(0x4d34, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x940d, gbc.sp());
        EXPECT(0x4d36, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3B 022F
        gbc.setState(0x86fa, 0xe9ad, 0x3430, 0xf90a, 0x2000, 0xcf97, 0x0, 0x0);
        gbc.writeMem(0x86fa, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xe9ad, gbc.sp());
        EXPECT(0x86fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x86fa));
        EXPECT(0x3b, gbc.readMem(0x86fb));
        // CB 3B 0230
        gbc.setState(0xafa5, 0xd238, 0x3550, 0x52ad, 0xf8f4, 0xb436, 0x1, 0x1);
        gbc.writeMem(0xafa5, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xd238, gbc.sp());
        EXPECT(0xafa7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xafa5));
        EXPECT(0x3b, gbc.readMem(0xafa6));
        // CB 3B 0231
        gbc.setState(0x18c8, 0x9e77, 0xbe20, 0x3302, 0x7569, 0x4779, 0x1, 0x0);
        gbc.writeMem(0x18c8, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x9e77, gbc.sp());
        EXPECT(0x18ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3B 0232
        gbc.setState(0x9af3, 0x7d5f, 0x4130, 0xb944, 0x5a13, 0x2719, 0x0, 0x0);
        gbc.writeMem(0x9af3, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x7d5f, gbc.sp());
        EXPECT(0x9af5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9af3));
        EXPECT(0x3b, gbc.readMem(0x9af4));
        // CB 3B 0233
        gbc.setState(0x7e26, 0x8bd4, 0xf060, 0x2da6, 0xc2d9, 0xe166, 0x1, 0x1);
        gbc.writeMem(0x7e26, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x8bd4, gbc.sp());
        EXPECT(0x7e28, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3B 0234
        gbc.setState(0x1b36, 0x992, 0xc0, 0x3cf5, 0x1c25, 0x28c8, 0x1, 0x1);
        gbc.writeMem(0x1b36, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x992, gbc.sp());
        EXPECT(0x1b38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3B 0235
        gbc.setState(0x9445, 0x1cd, 0x8690, 0xf042, 0x4f2e, 0x894, 0x1, 0x0);
        gbc.writeMem(0x9445, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x1cd, gbc.sp());
        EXPECT(0x9447, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9445));
        EXPECT(0x3b, gbc.readMem(0x9446));
        // CB 3B 0236
        gbc.setState(0xb5c7, 0xcc5e, 0xa730, 0xde8d, 0x61f7, 0x8e56, 0x0, 0x1);
        gbc.writeMem(0xb5c7, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xcc5e, gbc.sp());
        EXPECT(0xb5c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb5c7));
        EXPECT(0x3b, gbc.readMem(0xb5c8));
        // CB 3B 0237
        gbc.setState(0x943a, 0x2656, 0x8bb0, 0x3fcc, 0x6ae9, 0x3a29, 0x1, 0x1);
        gbc.writeMem(0x943a, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x2656, gbc.sp());
        EXPECT(0x943c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x943a));
        EXPECT(0x3b, gbc.readMem(0x943b));
        // CB 3B 0238
        gbc.setState(0x6c17, 0x95b9, 0x2c40, 0x94c4, 0xb19f, 0x3a88, 0x1, 0x1);
        gbc.writeMem(0x6c17, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x95b9, gbc.sp());
        EXPECT(0x6c19, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3B 0239
        gbc.setState(0x2d8a, 0x6097, 0xfc0, 0x9106, 0x87d7, 0xec3, 0x0, 0x1);
        gbc.writeMem(0x2d8a, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x6097, gbc.sp());
        EXPECT(0x2d8c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3B 023A
        gbc.setState(0x71fc, 0xb0b0, 0x10d0, 0x4b9a, 0x4c59, 0x5b8c, 0x0, 0x1);
        gbc.writeMem(0x71fc, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xb0b0, gbc.sp());
        EXPECT(0x71fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3B 023B
        gbc.setState(0xc798, 0xfe58, 0x33b0, 0xb3e4, 0x8fb2, 0x75ea, 0x1, 0x0);
        gbc.writeMem(0xc798, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xfe58, gbc.sp());
        EXPECT(0xc79a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc798));
        EXPECT(0x3b, gbc.readMem(0xc799));
        // CB 3B 023C
        gbc.setState(0x6b26, 0xaf64, 0xb50, 0x8095, 0x70fb, 0xbc4a, 0x1, 0x1);
        gbc.writeMem(0x6b26, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xaf64, gbc.sp());
        EXPECT(0x6b28, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3B 023D
        gbc.setState(0x3ed0, 0xbf77, 0xfd60, 0x1da2, 0xfeec, 0xc6ec, 0x1, 0x0);
        gbc.writeMem(0x3ed0, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xbf77, gbc.sp());
        EXPECT(0x3ed2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3B 023E
        gbc.setState(0xcae3, 0x94, 0x8530, 0xaf35, 0x8a08, 0xd4a9, 0x0, 0x1);
        gbc.writeMem(0xcae3, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x94, gbc.sp());
        EXPECT(0xcae5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcae3));
        EXPECT(0x3b, gbc.readMem(0xcae4));
        // CB 3B 023F
        gbc.setState(0x85bc, 0xe1d2, 0xcc50, 0xe0d6, 0x14fc, 0x2bb2, 0x1, 0x0);
        gbc.writeMem(0x85bc, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xe1d2, gbc.sp());
        EXPECT(0x85be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x85bc));
        EXPECT(0x3b, gbc.readMem(0x85bd));
        // CB 3B 0240
        gbc.setState(0x6dc3, 0xa019, 0x8040, 0x712c, 0xf0, 0xc73c, 0x1, 0x1);
        gbc.writeMem(0x6dc3, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xa019, gbc.sp());
        EXPECT(0x6dc5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3B 0241
        gbc.setState(0x33de, 0x8a01, 0x50, 0xde02, 0xf2df, 0xf5b9, 0x0, 0x1);
        gbc.writeMem(0x33de, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x8a01, gbc.sp());
        EXPECT(0x33e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3B 0242
        gbc.setState(0x7cfe, 0x4ebc, 0x36a0, 0xa619, 0xa274, 0x719d, 0x1, 0x0);
        gbc.writeMem(0x7cfe, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x4ebc, gbc.sp());
        EXPECT(0x7d00, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3B 0243
        gbc.setState(0xef77, 0x2597, 0x8600, 0x4eb, 0xa498, 0xf83f, 0x0, 0x1);
        gbc.writeMem(0xef77, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x2597, gbc.sp());
        EXPECT(0xef79, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef77));
        EXPECT(0x3b, gbc.readMem(0xef78));
        // CB 3B 0244
        gbc.setState(0xa194, 0xd77b, 0x260, 0x7a48, 0xb789, 0xfd83, 0x1, 0x0);
        gbc.writeMem(0xa194, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xd77b, gbc.sp());
        EXPECT(0xa196, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa194));
        EXPECT(0x3b, gbc.readMem(0xa195));
        // CB 3B 0245
        gbc.setState(0xb1f7, 0x1f00, 0x4ca0, 0x8bb8, 0x4f92, 0xf570, 0x0, 0x0);
        gbc.writeMem(0xb1f7, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x1f00, gbc.sp());
        EXPECT(0xb1f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb1f7));
        EXPECT(0x3b, gbc.readMem(0xb1f8));
        // CB 3B 0246
        gbc.setState(0x289a, 0x4b0, 0x39e0, 0xc9ff, 0x7cd9, 0xe12a, 0x0, 0x1);
        gbc.writeMem(0x289a, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x4b0, gbc.sp());
        EXPECT(0x289c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3B 0247
        gbc.setState(0x4c5e, 0x4646, 0xa860, 0x5119, 0xa090, 0x2527, 0x1, 0x0);
        gbc.writeMem(0x4c5e, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x4646, gbc.sp());
        EXPECT(0x4c60, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3B 0248
        gbc.setState(0x9320, 0xfe79, 0x52c0, 0x5f6a, 0x3a68, 0x2352, 0x0, 0x1);
        gbc.writeMem(0x9320, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xfe79, gbc.sp());
        EXPECT(0x9322, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9320));
        EXPECT(0x3b, gbc.readMem(0x9321));
        // CB 3B 0249
        gbc.setState(0x8244, 0xcc4e, 0x1e20, 0x418b, 0x3c05, 0xf10a, 0x1, 0x0);
        gbc.writeMem(0x8244, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xcc4e, gbc.sp());
        EXPECT(0x8246, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8244));
        EXPECT(0x3b, gbc.readMem(0x8245));
        // CB 3B 024A
        gbc.setState(0x687c, 0xa646, 0xd350, 0xdce9, 0x5bc0, 0x5b70, 0x0, 0x0);
        gbc.writeMem(0x687c, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xa646, gbc.sp());
        EXPECT(0x687e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3B 024B
        gbc.setState(0xda9f, 0xd9d7, 0x52e0, 0xc46c, 0x3f9d, 0x8dec, 0x1, 0x0);
        gbc.writeMem(0xda9f, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xd9d7, gbc.sp());
        EXPECT(0xdaa1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda9f));
        EXPECT(0x3b, gbc.readMem(0xdaa0));
        // CB 3B 024C
        gbc.setState(0xe9ac, 0xb53b, 0xed70, 0x6e48, 0x8f0b, 0xf82c, 0x0, 0x0);
        gbc.writeMem(0xe9ac, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xb53b, gbc.sp());
        EXPECT(0xe9ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe9ac));
        EXPECT(0x3b, gbc.readMem(0xe9ad));
        // CB 3B 024D
        gbc.setState(0x4aef, 0xb627, 0xe710, 0x8d4d, 0x5618, 0x37b5, 0x0, 0x0);
        gbc.writeMem(0x4aef, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xb627, gbc.sp());
        EXPECT(0x4af1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3B 024E
        gbc.setState(0x345c, 0x4cb6, 0xa6f0, 0xca1d, 0xc022, 0x28d6, 0x1, 0x0);
        gbc.writeMem(0x345c, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x4cb6, gbc.sp());
        EXPECT(0x345e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3B 024F
        gbc.setState(0x6544, 0x599d, 0x6880, 0x82b8, 0xbc6f, 0xe53f, 0x1, 0x1);
        gbc.writeMem(0x6544, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x599d, gbc.sp());
        EXPECT(0x6546, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3B 0250
        gbc.setState(0x8673, 0xbfa8, 0x8e70, 0x7e18, 0x703f, 0x4a58, 0x1, 0x0);
        gbc.writeMem(0x8673, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xbfa8, gbc.sp());
        EXPECT(0x8675, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8673));
        EXPECT(0x3b, gbc.readMem(0x8674));
        // CB 3B 0251
        gbc.setState(0x8a5a, 0x468c, 0x8680, 0x514d, 0x26fe, 0x463e, 0x1, 0x0);
        gbc.writeMem(0x8a5a, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x468c, gbc.sp());
        EXPECT(0x8a5c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a5a));
        EXPECT(0x3b, gbc.readMem(0x8a5b));
        // CB 3B 0252
        gbc.setState(0xd5c, 0xa866, 0x34d0, 0x7413, 0x7551, 0x301d, 0x0, 0x0);
        gbc.writeMem(0xd5c, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xa866, gbc.sp());
        EXPECT(0xd5e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3B 0253
        gbc.setState(0x12ed, 0x7b80, 0x5620, 0x3140, 0x2820, 0x8711, 0x0, 0x1);
        gbc.writeMem(0x12ed, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x7b80, gbc.sp());
        EXPECT(0x12ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3B 0255
        gbc.setState(0x16d7, 0x7b86, 0xfda0, 0xa074, 0x7d60, 0x1b7f, 0x1, 0x1);
        gbc.writeMem(0x16d7, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x7b86, gbc.sp());
        EXPECT(0x16d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3B 0256
        gbc.setState(0xdc25, 0x73, 0x8610, 0xa51e, 0x17e1, 0x908d, 0x1, 0x1);
        gbc.writeMem(0xdc25, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x73, gbc.sp());
        EXPECT(0xdc27, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc25));
        EXPECT(0x3b, gbc.readMem(0xdc26));
        // CB 3B 0257
        gbc.setState(0x8408, 0x86d, 0x5bd0, 0x1e41, 0xabd0, 0xf773, 0x0, 0x1);
        gbc.writeMem(0x8408, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x86d, gbc.sp());
        EXPECT(0x840a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8408));
        EXPECT(0x3b, gbc.readMem(0x8409));
        // CB 3B 0258
        gbc.setState(0x503e, 0xf95b, 0x5310, 0x9d98, 0x4b2d, 0xbeff, 0x0, 0x0);
        gbc.writeMem(0x503e, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xf95b, gbc.sp());
        EXPECT(0x5040, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3B 0259
        gbc.setState(0x4fc7, 0xba66, 0x18e0, 0x41a8, 0x177f, 0x4631, 0x0, 0x0);
        gbc.writeMem(0x4fc7, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xba66, gbc.sp());
        EXPECT(0x4fc9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3B 025A
        gbc.setState(0x5d5b, 0x4b47, 0x1b90, 0xe142, 0x2261, 0x3270, 0x1, 0x1);
        gbc.writeMem(0x5d5b, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x4b47, gbc.sp());
        EXPECT(0x5d5d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3B 025B
        gbc.setState(0x805, 0xd7b1, 0x2620, 0xa335, 0xbee2, 0x588a, 0x0, 0x0);
        gbc.writeMem(0x805, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xd7b1, gbc.sp());
        EXPECT(0x807, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3B 025C
        gbc.setState(0x61e0, 0x7e31, 0xb8c0, 0x81ed, 0xe8e0, 0x541c, 0x1, 0x0);
        gbc.writeMem(0x61e0, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x7e31, gbc.sp());
        EXPECT(0x61e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3B 025D
        gbc.setState(0x4dc4, 0x63e1, 0xc640, 0x608, 0x98df, 0x8a24, 0x1, 0x0);
        gbc.writeMem(0x4dc4, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x63e1, gbc.sp());
        EXPECT(0x4dc6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3B 025E
        gbc.setState(0xc1b5, 0x2c9a, 0x7820, 0x4a2d, 0x7317, 0x9ae, 0x1, 0x1);
        gbc.writeMem(0xc1b5, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x2c9a, gbc.sp());
        EXPECT(0xc1b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc1b5));
        EXPECT(0x3b, gbc.readMem(0xc1b6));
        // CB 3B 025F
        gbc.setState(0xb9f6, 0x2e3b, 0x3ae0, 0x5b5e, 0x19b8, 0x4443, 0x1, 0x1);
        gbc.writeMem(0xb9f6, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x2e3b, gbc.sp());
        EXPECT(0xb9f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb9f6));
        EXPECT(0x3b, gbc.readMem(0xb9f7));
        // CB 3B 0260
        gbc.setState(0xc724, 0x3649, 0xc200, 0xe306, 0x68c2, 0xc545, 0x0, 0x1);
        gbc.writeMem(0xc724, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x3649, gbc.sp());
        EXPECT(0xc726, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc724));
        EXPECT(0x3b, gbc.readMem(0xc725));
        // CB 3B 0261
        gbc.setState(0xbc1a, 0x247c, 0x3e20, 0xcc93, 0x73c5, 0xac8f, 0x0, 0x1);
        gbc.writeMem(0xbc1a, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x247c, gbc.sp());
        EXPECT(0xbc1c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc1a));
        EXPECT(0x3b, gbc.readMem(0xbc1b));
        // CB 3B 0262
        gbc.setState(0xc3f6, 0xde2e, 0xcc60, 0x1b4c, 0x3f6e, 0xc4a2, 0x0, 0x0);
        gbc.writeMem(0xc3f6, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xde2e, gbc.sp());
        EXPECT(0xc3f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc3f6));
        EXPECT(0x3b, gbc.readMem(0xc3f7));
        // CB 3B 0264
        gbc.setState(0x2eb0, 0xdfff, 0xf790, 0x7821, 0x7dd, 0xd61d, 0x1, 0x0);
        gbc.writeMem(0x2eb0, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xdfff, gbc.sp());
        EXPECT(0x2eb2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3B 0265
        gbc.setState(0x288d, 0x8d1a, 0x8330, 0xaa64, 0xa8ed, 0xf7b4, 0x1, 0x0);
        gbc.writeMem(0x288d, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x8d1a, gbc.sp());
        EXPECT(0x288f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3B 0266
        gbc.setState(0xc253, 0x6fb8, 0xcda0, 0x656b, 0x22dd, 0xb6c8, 0x1, 0x1);
        gbc.writeMem(0xc253, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x6fb8, gbc.sp());
        EXPECT(0xc255, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc253));
        EXPECT(0x3b, gbc.readMem(0xc254));
        // CB 3B 0267
        gbc.setState(0x74d3, 0xf454, 0x1680, 0xa4de, 0x5e96, 0xad3d, 0x0, 0x1);
        gbc.writeMem(0x74d3, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xf454, gbc.sp());
        EXPECT(0x74d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3B 0268
        gbc.setState(0x3564, 0xb70d, 0xca10, 0x50c2, 0x14dd, 0x8a2, 0x0, 0x1);
        gbc.writeMem(0x3564, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xb70d, gbc.sp());
        EXPECT(0x3566, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3B 0269
        gbc.setState(0x7b5b, 0xffa0, 0x6150, 0xf68f, 0xd9c6, 0xa463, 0x1, 0x1);
        gbc.writeMem(0x7b5b, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xffa0, gbc.sp());
        EXPECT(0x7b5d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3B 026A
        gbc.setState(0x81b5, 0x71cb, 0xec00, 0x98a1, 0x1c9c, 0x591c, 0x0, 0x0);
        gbc.writeMem(0x81b5, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x71cb, gbc.sp());
        EXPECT(0x81b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x81b5));
        EXPECT(0x3b, gbc.readMem(0x81b6));
        // CB 3B 026B
        gbc.setState(0x32e2, 0xf643, 0xd200, 0xedc1, 0x7eaa, 0xff96, 0x0, 0x1);
        gbc.writeMem(0x32e2, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xf643, gbc.sp());
        EXPECT(0x32e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3B 026C
        gbc.setState(0xd5a1, 0x3707, 0x9090, 0x880c, 0x68b2, 0xfcec, 0x0, 0x0);
        gbc.writeMem(0xd5a1, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x3707, gbc.sp());
        EXPECT(0xd5a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd5a1));
        EXPECT(0x3b, gbc.readMem(0xd5a2));
        // CB 3B 026D
        gbc.setState(0x3518, 0x8160, 0xd690, 0x3d29, 0x1b64, 0xe763, 0x0, 0x0);
        gbc.writeMem(0x3518, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x8160, gbc.sp());
        EXPECT(0x351a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3B 026E
        gbc.setState(0x8497, 0xa9c3, 0x3690, 0xf766, 0xb5a2, 0xf668, 0x0, 0x0);
        gbc.writeMem(0x8497, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xa9c3, gbc.sp());
        EXPECT(0x8499, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8497));
        EXPECT(0x3b, gbc.readMem(0x8498));
        // CB 3B 026F
        gbc.setState(0xac0f, 0x4b0, 0x3c60, 0xe63a, 0x6487, 0x4558, 0x1, 0x1);
        gbc.writeMem(0xac0f, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x4b0, gbc.sp());
        EXPECT(0xac11, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac0f));
        EXPECT(0x3b, gbc.readMem(0xac10));
        // CB 3B 0270
        gbc.setState(0x7107, 0xb206, 0x76b0, 0x78e9, 0x2104, 0x460, 0x0, 0x1);
        gbc.writeMem(0x7107, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xb206, gbc.sp());
        EXPECT(0x7109, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3B 0271
        gbc.setState(0x9b81, 0xe8af, 0x2620, 0x3f20, 0xd7b4, 0x5926, 0x1, 0x0);
        gbc.writeMem(0x9b81, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xe8af, gbc.sp());
        EXPECT(0x9b83, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b81));
        EXPECT(0x3b, gbc.readMem(0x9b82));
        // CB 3B 0272
        gbc.setState(0xa051, 0x9924, 0xb2f0, 0x9444, 0xc741, 0xdc38, 0x1, 0x0);
        gbc.writeMem(0xa051, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x9924, gbc.sp());
        EXPECT(0xa053, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa051));
        EXPECT(0x3b, gbc.readMem(0xa052));
        // CB 3B 0273
        gbc.setState(0xa88c, 0xcb9, 0x9610, 0x33de, 0xb012, 0x3bc3, 0x0, 0x0);
        gbc.writeMem(0xa88c, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xcb9, gbc.sp());
        EXPECT(0xa88e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa88c));
        EXPECT(0x3b, gbc.readMem(0xa88d));
        // CB 3B 0274
        gbc.setState(0x1be5, 0xd24f, 0xf1e0, 0xd191, 0xb481, 0xe908, 0x1, 0x1);
        gbc.writeMem(0x1be5, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xd24f, gbc.sp());
        EXPECT(0x1be7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3B 0275
        gbc.setState(0x327d, 0x1f3d, 0x3030, 0xd2af, 0xf479, 0xeda6, 0x0, 0x0);
        gbc.writeMem(0x327d, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x1f3d, gbc.sp());
        EXPECT(0x327f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3B 0276
        gbc.setState(0x5fdf, 0x99f6, 0xcf0, 0x1144, 0x116d, 0x4ded, 0x1, 0x0);
        gbc.writeMem(0x5fdf, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x99f6, gbc.sp());
        EXPECT(0x5fe1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3B 0277
        gbc.setState(0x2b37, 0xe34e, 0x5ef0, 0xf56b, 0x8882, 0x777a, 0x0, 0x1);
        gbc.writeMem(0x2b37, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xe34e, gbc.sp());
        EXPECT(0x2b39, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3B 0278
        gbc.setState(0xb757, 0x13b7, 0x300, 0x5263, 0x411a, 0x1e24, 0x1, 0x1);
        gbc.writeMem(0xb757, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x13b7, gbc.sp());
        EXPECT(0xb759, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb757));
        EXPECT(0x3b, gbc.readMem(0xb758));
        // CB 3B 0279
        gbc.setState(0x3349, 0xc630, 0xe9b0, 0x84ef, 0x8034, 0x623c, 0x1, 0x1);
        gbc.writeMem(0x3349, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xc630, gbc.sp());
        EXPECT(0x334b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3B 027B
        gbc.setState(0xbb10, 0x704, 0x7f0, 0x2d4b, 0xc7f5, 0x447a, 0x1, 0x0);
        gbc.writeMem(0xbb10, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x704, gbc.sp());
        EXPECT(0xbb12, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb10));
        EXPECT(0x3b, gbc.readMem(0xbb11));
        // CB 3B 027C
        gbc.setState(0xbf61, 0xab71, 0x7810, 0xb122, 0x28d, 0x3a49, 0x1, 0x1);
        gbc.writeMem(0xbf61, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xab71, gbc.sp());
        EXPECT(0xbf63, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf61));
        EXPECT(0x3b, gbc.readMem(0xbf62));
        // CB 3B 027D
        gbc.setState(0x4469, 0x5c5, 0x860, 0xa08a, 0x35f4, 0x280f, 0x0, 0x0);
        gbc.writeMem(0x4469, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x5c5, gbc.sp());
        EXPECT(0x446b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3B 027E
        gbc.setState(0xee00, 0x97d1, 0x1630, 0x2cec, 0x36cf, 0x8636, 0x1, 0x0);
        gbc.writeMem(0xee00, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x97d1, gbc.sp());
        EXPECT(0xee02, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee00));
        EXPECT(0x3b, gbc.readMem(0xee01));
        // CB 3B 027F
        gbc.setState(0x843d, 0xa6d1, 0xd080, 0x2c2a, 0x340e, 0x3885, 0x0, 0x0);
        gbc.writeMem(0x843d, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xa6d1, gbc.sp());
        EXPECT(0x843f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x843d));
        EXPECT(0x3b, gbc.readMem(0x843e));
        // CB 3B 0280
        gbc.setState(0xabe6, 0x9ef4, 0x9bd0, 0xa5a8, 0x5c1f, 0x7d98, 0x0, 0x1);
        gbc.writeMem(0xabe6, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x9ef4, gbc.sp());
        EXPECT(0xabe8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xabe6));
        EXPECT(0x3b, gbc.readMem(0xabe7));
        // CB 3B 0281
        gbc.setState(0x5815, 0x3875, 0x43a0, 0x7be9, 0x735a, 0x81a5, 0x1, 0x1);
        gbc.writeMem(0x5815, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x3875, gbc.sp());
        EXPECT(0x5817, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3B 0282
        gbc.setState(0x6215, 0x8609, 0x2d60, 0x4886, 0xb786, 0x65b0, 0x0, 0x1);
        gbc.writeMem(0x6215, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x8609, gbc.sp());
        EXPECT(0x6217, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3B 0283
        gbc.setState(0x29d3, 0xeda, 0x93e0, 0x5aa8, 0x1a48, 0x4a80, 0x0, 0x0);
        gbc.writeMem(0x29d3, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xeda, gbc.sp());
        EXPECT(0x29d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3B 0284
        gbc.setState(0xa795, 0xaa89, 0x3dd0, 0xfe65, 0x3752, 0x5664, 0x0, 0x1);
        gbc.writeMem(0xa795, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xaa89, gbc.sp());
        EXPECT(0xa797, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa795));
        EXPECT(0x3b, gbc.readMem(0xa796));
        // CB 3B 0285
        gbc.setState(0x36d8, 0x392e, 0x7460, 0x81c9, 0xae6b, 0x989e, 0x0, 0x1);
        gbc.writeMem(0x36d8, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x392e, gbc.sp());
        EXPECT(0x36da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3B 0286
        gbc.setState(0xcc11, 0xe4c6, 0xcd70, 0xd505, 0xcc26, 0x9add, 0x1, 0x1);
        gbc.writeMem(0xcc11, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xe4c6, gbc.sp());
        EXPECT(0xcc13, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc11));
        EXPECT(0x3b, gbc.readMem(0xcc12));
        // CB 3B 0287
        gbc.setState(0xa7b1, 0xfeb5, 0x550, 0xe3b1, 0x2ac4, 0x6938, 0x0, 0x1);
        gbc.writeMem(0xa7b1, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xfeb5, gbc.sp());
        EXPECT(0xa7b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa7b1));
        EXPECT(0x3b, gbc.readMem(0xa7b2));
        // CB 3B 0288
        gbc.setState(0x6d04, 0xaa56, 0x8ed0, 0x430a, 0x6afd, 0xd89d, 0x1, 0x0);
        gbc.writeMem(0x6d04, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xaa56, gbc.sp());
        EXPECT(0x6d06, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3B 0289
        gbc.setState(0x9ac3, 0x8948, 0x61a0, 0x7b10, 0x1ef8, 0x26d6, 0x1, 0x0);
        gbc.writeMem(0x9ac3, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x8948, gbc.sp());
        EXPECT(0x9ac5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ac3));
        EXPECT(0x3b, gbc.readMem(0x9ac4));
        // CB 3B 028A
        gbc.setState(0x59bd, 0xc8cf, 0x2320, 0x6302, 0x7f12, 0x87a2, 0x1, 0x1);
        gbc.writeMem(0x59bd, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xc8cf, gbc.sp());
        EXPECT(0x59bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3B 028B
        gbc.setState(0xa287, 0xbc36, 0x74d0, 0x2dbd, 0x85, 0xd28c, 0x1, 0x1);
        gbc.writeMem(0xa287, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xbc36, gbc.sp());
        EXPECT(0xa289, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa287));
        EXPECT(0x3b, gbc.readMem(0xa288));
        // CB 3B 028C
        gbc.setState(0x38ef, 0xba9, 0x55c0, 0xe6a3, 0x39e2, 0xa8f2, 0x0, 0x1);
        gbc.writeMem(0x38ef, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xba9, gbc.sp());
        EXPECT(0x38f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3B 028D
        gbc.setState(0x83c0, 0xfeb1, 0xf7c0, 0x2fb2, 0xf179, 0x78e9, 0x1, 0x0);
        gbc.writeMem(0x83c0, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xfeb1, gbc.sp());
        EXPECT(0x83c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x83c0));
        EXPECT(0x3b, gbc.readMem(0x83c1));
        // CB 3B 028E
        gbc.setState(0xb491, 0x632e, 0x73f0, 0xcc8b, 0xf20c, 0xcc9c, 0x0, 0x1);
        gbc.writeMem(0xb491, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x632e, gbc.sp());
        EXPECT(0xb493, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb491));
        EXPECT(0x3b, gbc.readMem(0xb492));
        // CB 3B 028F
        gbc.setState(0xe98b, 0x3fc3, 0x5900, 0xcb2, 0x7831, 0x5f0c, 0x1, 0x0);
        gbc.writeMem(0xe98b, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x3fc3, gbc.sp());
        EXPECT(0xe98d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe98b));
        EXPECT(0x3b, gbc.readMem(0xe98c));
        // CB 3B 0290
        gbc.setState(0xe94d, 0xad92, 0x8800, 0xdc63, 0xbaa4, 0x3261, 0x0, 0x0);
        gbc.writeMem(0xe94d, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xad92, gbc.sp());
        EXPECT(0xe94f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe94d));
        EXPECT(0x3b, gbc.readMem(0xe94e));
        // CB 3B 0291
        gbc.setState(0x4dd, 0xc38d, 0xe910, 0x68cb, 0x9317, 0x3f1d, 0x1, 0x1);
        gbc.writeMem(0x4dd, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xc38d, gbc.sp());
        EXPECT(0x4df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3B 0293
        gbc.setState(0xd963, 0x656d, 0xe8b0, 0xf3fd, 0x5af3, 0xd7b3, 0x1, 0x1);
        gbc.writeMem(0xd963, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x656d, gbc.sp());
        EXPECT(0xd965, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd963));
        EXPECT(0x3b, gbc.readMem(0xd964));
        // CB 3B 0294
        gbc.setState(0xaf5d, 0xb82f, 0x40, 0xa681, 0x12cb, 0x4bf4, 0x1, 0x0);
        gbc.writeMem(0xaf5d, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xb82f, gbc.sp());
        EXPECT(0xaf5f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf5d));
        EXPECT(0x3b, gbc.readMem(0xaf5e));
        // CB 3B 0295
        gbc.setState(0x70ab, 0x2646, 0xa9b0, 0x95bb, 0xc10b, 0xf5cb, 0x1, 0x1);
        gbc.writeMem(0x70ab, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x2646, gbc.sp());
        EXPECT(0x70ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3B 0296
        gbc.setState(0xa91f, 0x8dc8, 0x15b0, 0xfb0, 0x54e1, 0x38e1, 0x1, 0x1);
        gbc.writeMem(0xa91f, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x8dc8, gbc.sp());
        EXPECT(0xa921, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa91f));
        EXPECT(0x3b, gbc.readMem(0xa920));
        // CB 3B 0297
        gbc.setState(0x7a99, 0x2bab, 0x8f0, 0x99e1, 0xe241, 0x546a, 0x1, 0x1);
        gbc.writeMem(0x7a99, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x2bab, gbc.sp());
        EXPECT(0x7a9b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3B 0298
        gbc.setState(0xeed5, 0x8952, 0x6a20, 0x6b21, 0xdea5, 0x5b8d, 0x1, 0x0);
        gbc.writeMem(0xeed5, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x8952, gbc.sp());
        EXPECT(0xeed7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeed5));
        EXPECT(0x3b, gbc.readMem(0xeed6));
        // CB 3B 0299
        gbc.setState(0xe44, 0x7bd9, 0x99f0, 0x1243, 0x3a25, 0x58d9, 0x1, 0x1);
        gbc.writeMem(0xe44, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x7bd9, gbc.sp());
        EXPECT(0xe46, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3B 029A
        gbc.setState(0xef88, 0xc395, 0xdfa0, 0x9d75, 0x47b9, 0xf8f1, 0x0, 0x0);
        gbc.writeMem(0xef88, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xc395, gbc.sp());
        EXPECT(0xef8a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef88));
        EXPECT(0x3b, gbc.readMem(0xef89));
        // CB 3B 029B
        gbc.setState(0x8b5b, 0xa52f, 0x4e00, 0x325e, 0x949b, 0xdeaa, 0x0, 0x0);
        gbc.writeMem(0x8b5b, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xa52f, gbc.sp());
        EXPECT(0x8b5d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b5b));
        EXPECT(0x3b, gbc.readMem(0x8b5c));
        // CB 3B 029C
        gbc.setState(0xd457, 0x65bd, 0xce40, 0xe7d8, 0xa4c6, 0x594d, 0x0, 0x1);
        gbc.writeMem(0xd457, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x65bd, gbc.sp());
        EXPECT(0xd459, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd457));
        EXPECT(0x3b, gbc.readMem(0xd458));
        // CB 3B 029D
        gbc.setState(0x3487, 0x366e, 0x7390, 0x9350, 0x4ca8, 0x5482, 0x1, 0x0);
        gbc.writeMem(0x3487, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x366e, gbc.sp());
        EXPECT(0x3489, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3B 029E
        gbc.setState(0xfad, 0xcf87, 0x5410, 0x6bb1, 0x8e0b, 0x89cd, 0x1, 0x0);
        gbc.writeMem(0xfad, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xcf87, gbc.sp());
        EXPECT(0xfaf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3B 029F
        gbc.setState(0x1485, 0x225f, 0x5140, 0x35cd, 0x36fb, 0xe9de, 0x0, 0x0);
        gbc.writeMem(0x1485, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x225f, gbc.sp());
        EXPECT(0x1487, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3B 02A0
        gbc.setState(0x4fa4, 0x5e81, 0x7560, 0x34fe, 0xb309, 0xe508, 0x0, 0x1);
        gbc.writeMem(0x4fa4, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x5e81, gbc.sp());
        EXPECT(0x4fa6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3B 02A2
        gbc.setState(0x264c, 0x4c52, 0x75d0, 0xec45, 0x3e19, 0xa5ee, 0x1, 0x1);
        gbc.writeMem(0x264c, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x4c52, gbc.sp());
        EXPECT(0x264e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3B 02A3
        gbc.setState(0x78a4, 0xd080, 0xab0, 0x82f6, 0xdefd, 0xd387, 0x0, 0x1);
        gbc.writeMem(0x78a4, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xd080, gbc.sp());
        EXPECT(0x78a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3B 02A4
        gbc.setState(0xc751, 0x7c61, 0x64d0, 0xd420, 0x9112, 0x64eb, 0x0, 0x1);
        gbc.writeMem(0xc751, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x7c61, gbc.sp());
        EXPECT(0xc753, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc751));
        EXPECT(0x3b, gbc.readMem(0xc752));
        // CB 3B 02A5
        gbc.setState(0x39ed, 0xdf29, 0xca50, 0x3d80, 0xbb88, 0xaf3b, 0x0, 0x1);
        gbc.writeMem(0x39ed, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xdf29, gbc.sp());
        EXPECT(0x39ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3B 02A6
        gbc.setState(0x8e22, 0x8477, 0x290, 0x108c, 0xf33a, 0xfbf7, 0x1, 0x0);
        gbc.writeMem(0x8e22, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x8477, gbc.sp());
        EXPECT(0x8e24, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e22));
        EXPECT(0x3b, gbc.readMem(0x8e23));
        // CB 3B 02A7
        gbc.setState(0x28ce, 0xb845, 0x4e30, 0x8b55, 0xcb19, 0xddb3, 0x1, 0x1);
        gbc.writeMem(0x28ce, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xb845, gbc.sp());
        EXPECT(0x28d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3B 02A8
        gbc.setState(0x4668, 0xaa52, 0x3890, 0x76fa, 0xb5c6, 0x8370, 0x1, 0x1);
        gbc.writeMem(0x4668, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xaa52, gbc.sp());
        EXPECT(0x466a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3B 02A9
        gbc.setState(0x4560, 0x8563, 0xfd60, 0xdb4c, 0x4c4b, 0x4227, 0x0, 0x1);
        gbc.writeMem(0x4560, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x8563, gbc.sp());
        EXPECT(0x4562, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3B 02AA
        gbc.setState(0x9605, 0x758b, 0xa6d0, 0xf12, 0x8d60, 0x3f09, 0x1, 0x0);
        gbc.writeMem(0x9605, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x758b, gbc.sp());
        EXPECT(0x9607, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9605));
        EXPECT(0x3b, gbc.readMem(0x9606));
        // CB 3B 02AB
        gbc.setState(0xdad6, 0x8583, 0xc840, 0xe337, 0x2a71, 0xa3f3, 0x0, 0x1);
        gbc.writeMem(0xdad6, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x8583, gbc.sp());
        EXPECT(0xdad8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdad6));
        EXPECT(0x3b, gbc.readMem(0xdad7));
        // CB 3B 02AC
        gbc.setState(0xcca, 0x3739, 0x2480, 0xea38, 0x5395, 0x7467, 0x0, 0x1);
        gbc.writeMem(0xcca, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x3739, gbc.sp());
        EXPECT(0xccc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3B 02AD
        gbc.setState(0xa114, 0x2384, 0x3310, 0xb6da, 0x2afa, 0x15d9, 0x0, 0x1);
        gbc.writeMem(0xa114, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x2384, gbc.sp());
        EXPECT(0xa116, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa114));
        EXPECT(0x3b, gbc.readMem(0xa115));
        // CB 3B 02AE
        gbc.setState(0x2b6b, 0x6fb3, 0xd240, 0xa2f6, 0xfe4e, 0x70bf, 0x1, 0x0);
        gbc.writeMem(0x2b6b, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x6fb3, gbc.sp());
        EXPECT(0x2b6d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3B 02AF
        gbc.setState(0xc6c2, 0x3428, 0x4780, 0xec68, 0xa9b, 0xee89, 0x0, 0x1);
        gbc.writeMem(0xc6c2, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x3428, gbc.sp());
        EXPECT(0xc6c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc6c2));
        EXPECT(0x3b, gbc.readMem(0xc6c3));
        // CB 3B 02B0
        gbc.setState(0xca0f, 0xd44f, 0x10, 0x17c7, 0xce2d, 0x89c5, 0x0, 0x1);
        gbc.writeMem(0xca0f, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xd44f, gbc.sp());
        EXPECT(0xca11, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca0f));
        EXPECT(0x3b, gbc.readMem(0xca10));
        // CB 3B 02B1
        gbc.setState(0xd3ca, 0x490c, 0x4bb0, 0x868b, 0x7e0f, 0x8d4f, 0x1, 0x0);
        gbc.writeMem(0xd3ca, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x490c, gbc.sp());
        EXPECT(0xd3cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd3ca));
        EXPECT(0x3b, gbc.readMem(0xd3cb));
        // CB 3B 02B2
        gbc.setState(0x88e2, 0xa5a4, 0x23a0, 0x3739, 0x6063, 0x1ab3, 0x1, 0x1);
        gbc.writeMem(0x88e2, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xa5a4, gbc.sp());
        EXPECT(0x88e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x88e2));
        EXPECT(0x3b, gbc.readMem(0x88e3));
        // CB 3B 02B3
        gbc.setState(0xcd04, 0xfe29, 0xc070, 0xba4c, 0xcafa, 0xe253, 0x1, 0x1);
        gbc.writeMem(0xcd04, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xfe29, gbc.sp());
        EXPECT(0xcd06, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd04));
        EXPECT(0x3b, gbc.readMem(0xcd05));
        // CB 3B 02B5
        gbc.setState(0x88d2, 0x6c61, 0xdd70, 0x468e, 0x9f0c, 0xb8c1, 0x1, 0x1);
        gbc.writeMem(0x88d2, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x6c61, gbc.sp());
        EXPECT(0x88d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x88d2));
        EXPECT(0x3b, gbc.readMem(0x88d3));
        // CB 3B 02B6
        gbc.setState(0xabc8, 0xdb07, 0xc560, 0x68ee, 0xdd10, 0x3f00, 0x1, 0x1);
        gbc.writeMem(0xabc8, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xdb07, gbc.sp());
        EXPECT(0xabca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xabc8));
        EXPECT(0x3b, gbc.readMem(0xabc9));
        // CB 3B 02B8
        gbc.setState(0x6c41, 0xd893, 0x1210, 0x4073, 0xecc5, 0x6efa, 0x0, 0x0);
        gbc.writeMem(0x6c41, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xd893, gbc.sp());
        EXPECT(0x6c43, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3B 02B9
        gbc.setState(0x6dfa, 0xc855, 0xce60, 0xab65, 0x5e79, 0xb430, 0x1, 0x0);
        gbc.writeMem(0x6dfa, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xc855, gbc.sp());
        EXPECT(0x6dfc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3B 02BA
        gbc.setState(0xa4d8, 0x3335, 0x66e0, 0xcb3, 0x11c, 0xf254, 0x0, 0x0);
        gbc.writeMem(0xa4d8, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x3335, gbc.sp());
        EXPECT(0xa4da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa4d8));
        EXPECT(0x3b, gbc.readMem(0xa4d9));
        // CB 3B 02BB
        gbc.setState(0x3d56, 0x1127, 0x7870, 0x43df, 0x4ab8, 0xdc5c, 0x1, 0x0);
        gbc.writeMem(0x3d56, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x1127, gbc.sp());
        EXPECT(0x3d58, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3B 02BC
        gbc.setState(0x7c5a, 0xc394, 0x6fd0, 0x2b25, 0xc3fb, 0x45c7, 0x1, 0x0);
        gbc.writeMem(0x7c5a, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xc394, gbc.sp());
        EXPECT(0x7c5c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3B 02BD
        gbc.setState(0x906f, 0xd58c, 0x2bb0, 0xca0f, 0xdfd7, 0x8c04, 0x0, 0x0);
        gbc.writeMem(0x906f, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xd58c, gbc.sp());
        EXPECT(0x9071, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x906f));
        EXPECT(0x3b, gbc.readMem(0x9070));
        // CB 3B 02BE
        gbc.setState(0x3e56, 0xdd, 0x7670, 0xc40a, 0xa337, 0x14f7, 0x1, 0x1);
        gbc.writeMem(0x3e56, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xdd, gbc.sp());
        EXPECT(0x3e58, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3B 02BF
        gbc.setState(0x528, 0xd83b, 0xd840, 0xaea4, 0x9bca, 0x2659, 0x1, 0x0);
        gbc.writeMem(0x528, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xd83b, gbc.sp());
        EXPECT(0x52a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3B 02C0
        gbc.setState(0x62c7, 0xdf8c, 0xa310, 0x7f65, 0x2126, 0x3599, 0x0, 0x0);
        gbc.writeMem(0x62c7, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xdf8c, gbc.sp());
        EXPECT(0x62c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3B 02C1
        gbc.setState(0xc8a, 0xa7ba, 0x7ec0, 0x35b8, 0x995d, 0xcd91, 0x0, 0x1);
        gbc.writeMem(0xc8a, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xa7ba, gbc.sp());
        EXPECT(0xc8c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3B 02C2
        gbc.setState(0xbcb0, 0x2f88, 0x3430, 0x8b01, 0x4d54, 0x7ac1, 0x1, 0x0);
        gbc.writeMem(0xbcb0, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x2f88, gbc.sp());
        EXPECT(0xbcb2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbcb0));
        EXPECT(0x3b, gbc.readMem(0xbcb1));
        // CB 3B 02C3
        gbc.setState(0x8403, 0xb38d, 0x6e90, 0x5ecd, 0x6702, 0xe5aa, 0x0, 0x1);
        gbc.writeMem(0x8403, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xb38d, gbc.sp());
        EXPECT(0x8405, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8403));
        EXPECT(0x3b, gbc.readMem(0x8404));
        // CB 3B 02C4
        gbc.setState(0x8d44, 0x637b, 0xd900, 0x31d9, 0x67fa, 0x6b3b, 0x1, 0x1);
        gbc.writeMem(0x8d44, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x637b, gbc.sp());
        EXPECT(0x8d46, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d44));
        EXPECT(0x3b, gbc.readMem(0x8d45));
        // CB 3B 02C6
        gbc.setState(0xcaa8, 0x2e67, 0xbea0, 0x32d, 0xaff3, 0x3889, 0x0, 0x0);
        gbc.writeMem(0xcaa8, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x2e67, gbc.sp());
        EXPECT(0xcaaa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcaa8));
        EXPECT(0x3b, gbc.readMem(0xcaa9));
        // CB 3B 02C7
        gbc.setState(0x7912, 0xa8ec, 0xff10, 0xbb65, 0x46d1, 0xb25e, 0x0, 0x1);
        gbc.writeMem(0x7912, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xa8ec, gbc.sp());
        EXPECT(0x7914, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3B 02C8
        gbc.setState(0x45b0, 0xedd5, 0xa340, 0xe699, 0xc4dd, 0x8718, 0x0, 0x1);
        gbc.writeMem(0x45b0, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xedd5, gbc.sp());
        EXPECT(0x45b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3B 02C9
        gbc.setState(0xec0e, 0xa3ae, 0xf7c0, 0xe426, 0x50ab, 0xebce, 0x1, 0x0);
        gbc.writeMem(0xec0e, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xa3ae, gbc.sp());
        EXPECT(0xec10, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec0e));
        EXPECT(0x3b, gbc.readMem(0xec0f));
        // CB 3B 02CA
        gbc.setState(0xd28c, 0xb620, 0x2590, 0x8d90, 0x43b, 0x93df, 0x0, 0x1);
        gbc.writeMem(0xd28c, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xb620, gbc.sp());
        EXPECT(0xd28e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd28c));
        EXPECT(0x3b, gbc.readMem(0xd28d));
        // CB 3B 02CB
        gbc.setState(0x1992, 0x4d59, 0x4a90, 0x3949, 0x669e, 0x2dfc, 0x0, 0x1);
        gbc.writeMem(0x1992, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x4d59, gbc.sp());
        EXPECT(0x1994, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3B 02CD
        gbc.setState(0xc3aa, 0x9617, 0x3790, 0xadef, 0xf8b3, 0x172c, 0x0, 0x1);
        gbc.writeMem(0xc3aa, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x9617, gbc.sp());
        EXPECT(0xc3ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc3aa));
        EXPECT(0x3b, gbc.readMem(0xc3ab));
        // CB 3B 02CE
        gbc.setState(0x3396, 0xddf9, 0x7c10, 0xef71, 0xf0e9, 0xcbcf, 0x1, 0x0);
        gbc.writeMem(0x3396, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xddf9, gbc.sp());
        EXPECT(0x3398, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3B 02CF
        gbc.setState(0xdef2, 0x42b7, 0x5d30, 0x327e, 0x68d8, 0x5ff0, 0x0, 0x0);
        gbc.writeMem(0xdef2, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x42b7, gbc.sp());
        EXPECT(0xdef4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdef2));
        EXPECT(0x3b, gbc.readMem(0xdef3));
        // CB 3B 02D0
        gbc.setState(0x4149, 0xcb35, 0x7a40, 0x414d, 0xf5b9, 0x7152, 0x1, 0x1);
        gbc.writeMem(0x4149, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xcb35, gbc.sp());
        EXPECT(0x414b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3B 02D1
        gbc.setState(0x4b3, 0x30ef, 0x80d0, 0x3b99, 0xc24b, 0x6099, 0x1, 0x0);
        gbc.writeMem(0x4b3, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x30ef, gbc.sp());
        EXPECT(0x4b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3B 02D2
        gbc.setState(0x2614, 0xfe82, 0x2d40, 0xab8b, 0x1455, 0xb01e, 0x0, 0x0);
        gbc.writeMem(0x2614, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xfe82, gbc.sp());
        EXPECT(0x2616, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3B 02D3
        gbc.setState(0x79e8, 0xe467, 0x8220, 0x2f1f, 0xb1c8, 0x4f6, 0x1, 0x0);
        gbc.writeMem(0x79e8, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xe467, gbc.sp());
        EXPECT(0x79ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3B 02D4
        gbc.setState(0x6422, 0xf4b9, 0x1cb0, 0xa98b, 0x8fdc, 0x44a7, 0x0, 0x0);
        gbc.writeMem(0x6422, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xf4b9, gbc.sp());
        EXPECT(0x6424, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3B 02D5
        gbc.setState(0xe91e, 0x1d7d, 0x6f60, 0xb175, 0xa651, 0x1626, 0x0, 0x1);
        gbc.writeMem(0xe91e, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x1d7d, gbc.sp());
        EXPECT(0xe920, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe91e));
        EXPECT(0x3b, gbc.readMem(0xe91f));
        // CB 3B 02D6
        gbc.setState(0x22a, 0xbc10, 0xfd40, 0xe493, 0xeba0, 0x8107, 0x0, 0x0);
        gbc.writeMem(0x22a, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xbc10, gbc.sp());
        EXPECT(0x22c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3B 02D7
        gbc.setState(0xb3f, 0x149b, 0xc4d0, 0x4130, 0x4a60, 0xe952, 0x0, 0x1);
        gbc.writeMem(0xb3f, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x149b, gbc.sp());
        EXPECT(0xb41, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3B 02D8
        gbc.setState(0xe61e, 0xbe70, 0x91a0, 0x92b6, 0x5650, 0xc7ca, 0x1, 0x0);
        gbc.writeMem(0xe61e, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xbe70, gbc.sp());
        EXPECT(0xe620, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe61e));
        EXPECT(0x3b, gbc.readMem(0xe61f));
        // CB 3B 02D9
        gbc.setState(0x3a37, 0x87ca, 0x2ad0, 0x9eec, 0xbb88, 0xe6ad, 0x1, 0x0);
        gbc.writeMem(0x3a37, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x87ca, gbc.sp());
        EXPECT(0x3a39, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3B 02DA
        gbc.setState(0x186f, 0x69a8, 0x9180, 0x3751, 0xfc25, 0xa2c7, 0x0, 0x1);
        gbc.writeMem(0x186f, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x69a8, gbc.sp());
        EXPECT(0x1871, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3B 02DB
        gbc.setState(0xc0f2, 0x4a5a, 0xc250, 0x823f, 0xb04c, 0xd478, 0x0, 0x0);
        gbc.writeMem(0xc0f2, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x4a5a, gbc.sp());
        EXPECT(0xc0f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc0f2));
        EXPECT(0x3b, gbc.readMem(0xc0f3));
        // CB 3B 02DC
        gbc.setState(0xef42, 0x829e, 0xbb30, 0x2b5b, 0xb1fa, 0xaec, 0x1, 0x1);
        gbc.writeMem(0xef42, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x829e, gbc.sp());
        EXPECT(0xef44, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef42));
        EXPECT(0x3b, gbc.readMem(0xef43));
        // CB 3B 02DD
        gbc.setState(0x9594, 0x163a, 0xfe30, 0xb35a, 0xe907, 0x8a08, 0x1, 0x0);
        gbc.writeMem(0x9594, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x163a, gbc.sp());
        EXPECT(0x9596, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9594));
        EXPECT(0x3b, gbc.readMem(0x9595));
        // CB 3B 02DE
        gbc.setState(0xc624, 0xb05d, 0x3a90, 0xfe85, 0xdc13, 0xa387, 0x1, 0x1);
        gbc.writeMem(0xc624, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xb05d, gbc.sp());
        EXPECT(0xc626, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc624));
        EXPECT(0x3b, gbc.readMem(0xc625));
        // CB 3B 02DF
        gbc.setState(0x46d0, 0x224b, 0x90a0, 0x678c, 0xd2b8, 0x35b5, 0x0, 0x0);
        gbc.writeMem(0x46d0, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x224b, gbc.sp());
        EXPECT(0x46d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3B 02E0
        gbc.setState(0x9ad9, 0xfd9a, 0x3aa0, 0x8aea, 0xebd5, 0x6eb4, 0x1, 0x0);
        gbc.writeMem(0x9ad9, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xfd9a, gbc.sp());
        EXPECT(0x9adb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ad9));
        EXPECT(0x3b, gbc.readMem(0x9ada));
        // CB 3B 02E1
        gbc.setState(0xaa7a, 0x621b, 0x2c80, 0x5945, 0x19dc, 0x94d6, 0x0, 0x1);
        gbc.writeMem(0xaa7a, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x621b, gbc.sp());
        EXPECT(0xaa7c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa7a));
        EXPECT(0x3b, gbc.readMem(0xaa7b));
        // CB 3B 02E2
        gbc.setState(0x9c8d, 0x158d, 0xb4b0, 0xddfe, 0x9b62, 0x9ff2, 0x0, 0x0);
        gbc.writeMem(0x9c8d, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x158d, gbc.sp());
        EXPECT(0x9c8f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c8d));
        EXPECT(0x3b, gbc.readMem(0x9c8e));
        // CB 3B 02E3
        gbc.setState(0xc37e, 0x1823, 0xf0d0, 0x480, 0x5bf0, 0x12ef, 0x0, 0x1);
        gbc.writeMem(0xc37e, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x1823, gbc.sp());
        EXPECT(0xc380, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc37e));
        EXPECT(0x3b, gbc.readMem(0xc37f));
        // CB 3B 02E4
        gbc.setState(0x5440, 0x2648, 0x57b0, 0x702c, 0x4a6, 0xaa7b, 0x0, 0x0);
        gbc.writeMem(0x5440, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x2648, gbc.sp());
        EXPECT(0x5442, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3B 02E5
        gbc.setState(0xd42, 0x2103, 0x64d0, 0x2776, 0x5063, 0x5d65, 0x1, 0x1);
        gbc.writeMem(0xd42, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x2103, gbc.sp());
        EXPECT(0xd44, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3B 02E6
        gbc.setState(0x4a75, 0xf9fb, 0x7380, 0xff40, 0xd3b0, 0xc39f, 0x0, 0x0);
        gbc.writeMem(0x4a75, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xf9fb, gbc.sp());
        EXPECT(0x4a77, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3B 02E7
        gbc.setState(0xdf0e, 0x3380, 0x9f20, 0x5f74, 0x3289, 0x79, 0x1, 0x0);
        gbc.writeMem(0xdf0e, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x3380, gbc.sp());
        EXPECT(0xdf10, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf0e));
        EXPECT(0x3b, gbc.readMem(0xdf0f));
        // CB 3B 02E8
        gbc.setState(0xb24f, 0x1dce, 0xe670, 0x3423, 0x17b3, 0xec21, 0x0, 0x1);
        gbc.writeMem(0xb24f, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x1dce, gbc.sp());
        EXPECT(0xb251, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb24f));
        EXPECT(0x3b, gbc.readMem(0xb250));
        // CB 3B 02EA
        gbc.setState(0x2783, 0x6ab2, 0x3d0, 0x9983, 0x206c, 0x3e0e, 0x0, 0x0);
        gbc.writeMem(0x2783, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x6ab2, gbc.sp());
        EXPECT(0x2785, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3B 02EB
        gbc.setState(0x8866, 0x65bf, 0x7fa0, 0x8227, 0x116, 0xff62, 0x1, 0x1);
        gbc.writeMem(0x8866, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x65bf, gbc.sp());
        EXPECT(0x8868, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8866));
        EXPECT(0x3b, gbc.readMem(0x8867));
        // CB 3B 02EC
        gbc.setState(0xb449, 0x2f8a, 0xa610, 0x249a, 0xc105, 0x31bb, 0x1, 0x1);
        gbc.writeMem(0xb449, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x2f8a, gbc.sp());
        EXPECT(0xb44b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb449));
        EXPECT(0x3b, gbc.readMem(0xb44a));
        // CB 3B 02ED
        gbc.setState(0x5114, 0xdc2b, 0x9540, 0x159e, 0x80b9, 0x3acf, 0x0, 0x1);
        gbc.writeMem(0x5114, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xdc2b, gbc.sp());
        EXPECT(0x5116, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3B 02EE
        gbc.setState(0xb881, 0xb9f1, 0x6160, 0xb3cd, 0x4396, 0x1143, 0x1, 0x1);
        gbc.writeMem(0xb881, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xb9f1, gbc.sp());
        EXPECT(0xb883, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb881));
        EXPECT(0x3b, gbc.readMem(0xb882));
        // CB 3B 02EF
        gbc.setState(0xe2f5, 0x4d4d, 0xd1a0, 0xab08, 0x4ef8, 0x918f, 0x0, 0x1);
        gbc.writeMem(0xe2f5, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x4d4d, gbc.sp());
        EXPECT(0xe2f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe2f5));
        EXPECT(0x3b, gbc.readMem(0xe2f6));
        // CB 3B 02F0
        gbc.setState(0x849f, 0x1e4c, 0xd540, 0x8c64, 0xb5, 0x8e4f, 0x1, 0x0);
        gbc.writeMem(0x849f, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x1e4c, gbc.sp());
        EXPECT(0x84a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x849f));
        EXPECT(0x3b, gbc.readMem(0x84a0));
        // CB 3B 02F1
        gbc.setState(0xac7, 0xf32c, 0xc210, 0x8e36, 0xec62, 0x65a6, 0x0, 0x0);
        gbc.writeMem(0xac7, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xf32c, gbc.sp());
        EXPECT(0xac9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3B 02F3
        gbc.setState(0x5d99, 0x4876, 0x86a0, 0x6885, 0xb34d, 0x4988, 0x0, 0x0);
        gbc.writeMem(0x5d99, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x4876, gbc.sp());
        EXPECT(0x5d9b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3B 02F4
        gbc.setState(0x59c5, 0x275b, 0x2be0, 0xe605, 0x624b, 0xa9e5, 0x0, 0x1);
        gbc.writeMem(0x59c5, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x275b, gbc.sp());
        EXPECT(0x59c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3B 02F5
        gbc.setState(0x9559, 0x98ec, 0x1ce0, 0xedea, 0x24fc, 0xf34a, 0x1, 0x1);
        gbc.writeMem(0x9559, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x98ec, gbc.sp());
        EXPECT(0x955b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9559));
        EXPECT(0x3b, gbc.readMem(0x955a));
        // CB 3B 02F6
        gbc.setState(0xe968, 0xe9c7, 0xa8c0, 0x6878, 0x3cde, 0xf640, 0x1, 0x1);
        gbc.writeMem(0xe968, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xe9c7, gbc.sp());
        EXPECT(0xe96a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe968));
        EXPECT(0x3b, gbc.readMem(0xe969));
        // CB 3B 02F7
        gbc.setState(0xb3fe, 0x44fd, 0x40f0, 0x7db4, 0x7d0a, 0x7bf1, 0x0, 0x0);
        gbc.writeMem(0xb3fe, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x44fd, gbc.sp());
        EXPECT(0xb400, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb3fe));
        EXPECT(0x3b, gbc.readMem(0xb3ff));
        // CB 3B 02F8
        gbc.setState(0x565d, 0x97ff, 0xd580, 0x8057, 0x9dc1, 0x597a, 0x1, 0x1);
        gbc.writeMem(0x565d, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x97ff, gbc.sp());
        EXPECT(0x565f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3B 02F9
        gbc.setState(0xd774, 0x8286, 0xdde0, 0x773b, 0xa4a7, 0x631c, 0x1, 0x1);
        gbc.writeMem(0xd774, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x8286, gbc.sp());
        EXPECT(0xd776, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd774));
        EXPECT(0x3b, gbc.readMem(0xd775));
        // CB 3B 02FA
        gbc.setState(0x35e4, 0x6b9e, 0xe100, 0xa9a5, 0x79be, 0xc7ea, 0x0, 0x1);
        gbc.writeMem(0x35e4, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x6b9e, gbc.sp());
        EXPECT(0x35e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3B 02FB
        gbc.setState(0x27d5, 0x72c9, 0x8110, 0x9cfe, 0x8681, 0xd6ed, 0x1, 0x1);
        gbc.writeMem(0x27d5, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x72c9, gbc.sp());
        EXPECT(0x27d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3B 02FD
        gbc.setState(0x1668, 0xd0e0, 0x1230, 0x5235, 0x31e2, 0xabb8, 0x0, 0x1);
        gbc.writeMem(0x1668, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xd0e0, gbc.sp());
        EXPECT(0x166a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3B 02FE
        gbc.setState(0x1d0e, 0x8e2f, 0x6000, 0x6111, 0x69b9, 0x1e75, 0x0, 0x1);
        gbc.writeMem(0x1d0e, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x8e2f, gbc.sp());
        EXPECT(0x1d10, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3B 02FF
        gbc.setState(0x9159, 0xef4c, 0x35f0, 0x4f56, 0x478f, 0x4e3f, 0x0, 0x0);
        gbc.writeMem(0x9159, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xef4c, gbc.sp());
        EXPECT(0x915b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9159));
        EXPECT(0x3b, gbc.readMem(0x915a));
        // CB 3B 0300
        gbc.setState(0xebc9, 0x2b38, 0x1250, 0xf76d, 0xd4f1, 0x7fa, 0x1, 0x1);
        gbc.writeMem(0xebc9, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x2b38, gbc.sp());
        EXPECT(0xebcb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xebc9));
        EXPECT(0x3b, gbc.readMem(0xebca));
        // CB 3B 0301
        gbc.setState(0xcdae, 0xbebe, 0x4d40, 0x2e7, 0xf58d, 0xbb03, 0x1, 0x0);
        gbc.writeMem(0xcdae, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xbebe, gbc.sp());
        EXPECT(0xcdb0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcdae));
        EXPECT(0x3b, gbc.readMem(0xcdaf));
        // CB 3B 0303
        gbc.setState(0x9812, 0x3c53, 0xcaa0, 0x36f9, 0x65dc, 0xb8c1, 0x1, 0x0);
        gbc.writeMem(0x9812, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x3c53, gbc.sp());
        EXPECT(0x9814, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9812));
        EXPECT(0x3b, gbc.readMem(0x9813));
        // CB 3B 0304
        gbc.setState(0xa69b, 0x144a, 0x5410, 0x2c85, 0x797f, 0xd430, 0x1, 0x0);
        gbc.writeMem(0xa69b, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x144a, gbc.sp());
        EXPECT(0xa69d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa69b));
        EXPECT(0x3b, gbc.readMem(0xa69c));
        // CB 3B 0305
        gbc.setState(0x48eb, 0x2dce, 0x5360, 0xc445, 0xa69d, 0x96a8, 0x0, 0x1);
        gbc.writeMem(0x48eb, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x2dce, gbc.sp());
        EXPECT(0x48ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3B 0306
        gbc.setState(0x6b50, 0x2384, 0x7a50, 0xdfff, 0xf6ea, 0xfce8, 0x0, 0x0);
        gbc.writeMem(0x6b50, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x2384, gbc.sp());
        EXPECT(0x6b52, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3B 0308
        gbc.setState(0x72b3, 0x1e7c, 0x7690, 0x8cca, 0xdb6, 0x66c3, 0x1, 0x0);
        gbc.writeMem(0x72b3, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x1e7c, gbc.sp());
        EXPECT(0x72b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3B 0309
        gbc.setState(0x169a, 0xfa3, 0x4cb0, 0x74fe, 0x5de8, 0xde31, 0x1, 0x1);
        gbc.writeMem(0x169a, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xfa3, gbc.sp());
        EXPECT(0x169c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3B 030A
        gbc.setState(0x9d25, 0x4056, 0xf650, 0x35b2, 0x33eb, 0x984b, 0x1, 0x1);
        gbc.writeMem(0x9d25, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x4056, gbc.sp());
        EXPECT(0x9d27, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d25));
        EXPECT(0x3b, gbc.readMem(0x9d26));
        // CB 3B 030B
        gbc.setState(0x2908, 0x523e, 0x950, 0x82bb, 0x4df8, 0x61ee, 0x0, 0x1);
        gbc.writeMem(0x2908, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x523e, gbc.sp());
        EXPECT(0x290a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3B 030C
        gbc.setState(0xba05, 0xd826, 0xcfe0, 0x1795, 0xc753, 0x871e, 0x1, 0x0);
        gbc.writeMem(0xba05, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xd826, gbc.sp());
        EXPECT(0xba07, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba05));
        EXPECT(0x3b, gbc.readMem(0xba06));
        // CB 3B 030D
        gbc.setState(0xac48, 0xcb7f, 0xc070, 0xf799, 0xd75f, 0xeb37, 0x0, 0x0);
        gbc.writeMem(0xac48, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xcb7f, gbc.sp());
        EXPECT(0xac4a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac48));
        EXPECT(0x3b, gbc.readMem(0xac49));
        // CB 3B 030E
        gbc.setState(0x1948, 0xdec5, 0x97c0, 0x49a7, 0x9a13, 0xaa45, 0x1, 0x0);
        gbc.writeMem(0x1948, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xdec5, gbc.sp());
        EXPECT(0x194a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3B 030F
        gbc.setState(0x89bd, 0x61d6, 0xe2a0, 0x4169, 0x4b2a, 0x930e, 0x0, 0x0);
        gbc.writeMem(0x89bd, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x61d6, gbc.sp());
        EXPECT(0x89bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x89bd));
        EXPECT(0x3b, gbc.readMem(0x89be));
        // CB 3B 0310
        gbc.setState(0x3ab4, 0xc191, 0x55a0, 0x411a, 0xfa80, 0xfc54, 0x0, 0x1);
        gbc.writeMem(0x3ab4, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xc191, gbc.sp());
        EXPECT(0x3ab6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3B 0312
        gbc.setState(0x6933, 0x2106, 0xae00, 0x7a7, 0xbbc8, 0xce53, 0x1, 0x0);
        gbc.writeMem(0x6933, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x2106, gbc.sp());
        EXPECT(0x6935, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3B 0314
        gbc.setState(0x60d2, 0x79d0, 0x9e30, 0x9d91, 0xe216, 0x3fdf, 0x0, 0x0);
        gbc.writeMem(0x60d2, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x79d0, gbc.sp());
        EXPECT(0x60d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3B 0315
        gbc.setState(0xaff9, 0x7921, 0x2da0, 0xffac, 0x130c, 0x6d5d, 0x0, 0x0);
        gbc.writeMem(0xaff9, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x7921, gbc.sp());
        EXPECT(0xaffb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaff9));
        EXPECT(0x3b, gbc.readMem(0xaffa));
        // CB 3B 0316
        gbc.setState(0xbc49, 0xf7f7, 0xc570, 0xe78b, 0xef79, 0x15a, 0x0, 0x0);
        gbc.writeMem(0xbc49, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xf7f7, gbc.sp());
        EXPECT(0xbc4b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc49));
        EXPECT(0x3b, gbc.readMem(0xbc4a));
        // CB 3B 0317
        gbc.setState(0x7bfa, 0xf0d4, 0x9370, 0xd5aa, 0x5727, 0x1d89, 0x0, 0x1);
        gbc.writeMem(0x7bfa, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xf0d4, gbc.sp());
        EXPECT(0x7bfc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3B 0318
        gbc.setState(0xe700, 0x67b7, 0xafa0, 0x7861, 0xecd7, 0x9524, 0x0, 0x1);
        gbc.writeMem(0xe700, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x67b7, gbc.sp());
        EXPECT(0xe702, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe700));
        EXPECT(0x3b, gbc.readMem(0xe701));
        // CB 3B 0319
        gbc.setState(0xe514, 0x5178, 0x85f0, 0x68ea, 0x8865, 0xf9a7, 0x0, 0x1);
        gbc.writeMem(0xe514, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x5178, gbc.sp());
        EXPECT(0xe516, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe514));
        EXPECT(0x3b, gbc.readMem(0xe515));
        // CB 3B 031A
        gbc.setState(0x8757, 0xf94b, 0xd700, 0xf3c7, 0x2bf9, 0x8328, 0x0, 0x1);
        gbc.writeMem(0x8757, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xf94b, gbc.sp());
        EXPECT(0x8759, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8757));
        EXPECT(0x3b, gbc.readMem(0x8758));
        // CB 3B 031B
        gbc.setState(0xb12e, 0x8a03, 0x6e90, 0x9864, 0x57a9, 0x1f69, 0x1, 0x1);
        gbc.writeMem(0xb12e, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x8a03, gbc.sp());
        EXPECT(0xb130, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb12e));
        EXPECT(0x3b, gbc.readMem(0xb12f));
        // CB 3B 031C
        gbc.setState(0x53a8, 0xf3f2, 0x9a00, 0x9879, 0xaa60, 0xfe8a, 0x1, 0x1);
        gbc.writeMem(0x53a8, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xf3f2, gbc.sp());
        EXPECT(0x53aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3B 031D
        gbc.setState(0xb0c3, 0x9676, 0xda80, 0x96a4, 0xaf97, 0xac1, 0x0, 0x1);
        gbc.writeMem(0xb0c3, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x9676, gbc.sp());
        EXPECT(0xb0c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb0c3));
        EXPECT(0x3b, gbc.readMem(0xb0c4));
        // CB 3B 031E
        gbc.setState(0xbef7, 0x2f95, 0xd660, 0x34cc, 0xb2a7, 0x43ef, 0x1, 0x1);
        gbc.writeMem(0xbef7, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x2f95, gbc.sp());
        EXPECT(0xbef9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbef7));
        EXPECT(0x3b, gbc.readMem(0xbef8));
        // CB 3B 0320
        gbc.setState(0x541f, 0x3738, 0x3e60, 0xa5d5, 0x27bf, 0xe129, 0x0, 0x1);
        gbc.writeMem(0x541f, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x3738, gbc.sp());
        EXPECT(0x5421, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3B 0321
        gbc.setState(0x5d88, 0xebac, 0x99f0, 0x2ab4, 0xad2c, 0xc45c, 0x1, 0x0);
        gbc.writeMem(0x5d88, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xebac, gbc.sp());
        EXPECT(0x5d8a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3B 0322
        gbc.setState(0x43bd, 0xbd15, 0x57b0, 0x1584, 0x4b87, 0x6d3f, 0x0, 0x1);
        gbc.writeMem(0x43bd, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xbd15, gbc.sp());
        EXPECT(0x43bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3B 0323
        gbc.setState(0xa70e, 0x8664, 0x3480, 0xd1e7, 0x7fbe, 0xf0fb, 0x1, 0x0);
        gbc.writeMem(0xa70e, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x8664, gbc.sp());
        EXPECT(0xa710, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa70e));
        EXPECT(0x3b, gbc.readMem(0xa70f));
        // CB 3B 0324
        gbc.setState(0x4061, 0x216c, 0x4df0, 0x58af, 0x1067, 0xd12c, 0x1, 0x1);
        gbc.writeMem(0x4061, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x216c, gbc.sp());
        EXPECT(0x4063, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3B 0325
        gbc.setState(0x88, 0x2946, 0x22b0, 0xc21a, 0x98b2, 0x19b3, 0x1, 0x0);
        gbc.writeMem(0x88, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x2946, gbc.sp());
        EXPECT(0x8a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3B 0326
        gbc.setState(0x13ec, 0xaa46, 0x5920, 0x9c6d, 0x8fda, 0x8a08, 0x0, 0x1);
        gbc.writeMem(0x13ec, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xaa46, gbc.sp());
        EXPECT(0x13ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3B 0327
        gbc.setState(0x4fe, 0xa594, 0x7260, 0x76d, 0x8bb1, 0xa370, 0x1, 0x1);
        gbc.writeMem(0x4fe, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xa594, gbc.sp());
        EXPECT(0x500, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3B 0328
        gbc.setState(0xdd39, 0xd49d, 0x5a00, 0x5f5c, 0xe0dd, 0x9745, 0x1, 0x1);
        gbc.writeMem(0xdd39, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xd49d, gbc.sp());
        EXPECT(0xdd3b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd39));
        EXPECT(0x3b, gbc.readMem(0xdd3a));
        // CB 3B 0329
        gbc.setState(0xc5b3, 0x9573, 0x4dd0, 0x22eb, 0x7df0, 0xc36f, 0x0, 0x0);
        gbc.writeMem(0xc5b3, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x9573, gbc.sp());
        EXPECT(0xc5b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc5b3));
        EXPECT(0x3b, gbc.readMem(0xc5b4));
        // CB 3B 032A
        gbc.setState(0xc149, 0x5db, 0xd740, 0x5048, 0x1fff, 0x9fb, 0x0, 0x1);
        gbc.writeMem(0xc149, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x5db, gbc.sp());
        EXPECT(0xc14b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc149));
        EXPECT(0x3b, gbc.readMem(0xc14a));
        // CB 3B 032B
        gbc.setState(0x2588, 0x1a98, 0x4fa0, 0x7dea, 0xa5e9, 0xb184, 0x0, 0x0);
        gbc.writeMem(0x2588, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x1a98, gbc.sp());
        EXPECT(0x258a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3B 032C
        gbc.setState(0x4741, 0x2c9b, 0xe6e0, 0xc8e3, 0x277, 0x4192, 0x1, 0x1);
        gbc.writeMem(0x4741, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x2c9b, gbc.sp());
        EXPECT(0x4743, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3B 032D
        gbc.setState(0xb5a3, 0x2ffe, 0x2bb0, 0x3424, 0x4d2, 0xed2, 0x0, 0x0);
        gbc.writeMem(0xb5a3, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x2ffe, gbc.sp());
        EXPECT(0xb5a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb5a3));
        EXPECT(0x3b, gbc.readMem(0xb5a4));
        // CB 3B 032E
        gbc.setState(0xb4a8, 0x2fda, 0xa080, 0xbe3b, 0x8613, 0xabe4, 0x0, 0x1);
        gbc.writeMem(0xb4a8, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x2fda, gbc.sp());
        EXPECT(0xb4aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb4a8));
        EXPECT(0x3b, gbc.readMem(0xb4a9));
        // CB 3B 032F
        gbc.setState(0x43a2, 0x3327, 0x9490, 0xdf26, 0x292c, 0xb707, 0x0, 0x0);
        gbc.writeMem(0x43a2, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x3327, gbc.sp());
        EXPECT(0x43a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3B 0330
        gbc.setState(0x4b7f, 0x94d7, 0x6930, 0x1ecc, 0x8c29, 0x1a5d, 0x1, 0x0);
        gbc.writeMem(0x4b7f, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x94d7, gbc.sp());
        EXPECT(0x4b81, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3B 0331
        gbc.setState(0xc489, 0x4f53, 0x1d10, 0x1dca, 0xaa5a, 0xc1af, 0x1, 0x0);
        gbc.writeMem(0xc489, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x4f53, gbc.sp());
        EXPECT(0xc48b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc489));
        EXPECT(0x3b, gbc.readMem(0xc48a));
        // CB 3B 0332
        gbc.setState(0x886, 0x61f1, 0x9790, 0x7c09, 0x9254, 0x4acc, 0x1, 0x0);
        gbc.writeMem(0x886, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x61f1, gbc.sp());
        EXPECT(0x888, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3B 0333
        gbc.setState(0x8fff, 0x4dd7, 0x4e20, 0x245c, 0xedac, 0x278e, 0x0, 0x0);
        gbc.writeMem(0x8fff, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x4dd7, gbc.sp());
        EXPECT(0x9001, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8fff));
        EXPECT(0x3b, gbc.readMem(0x9000));
        // CB 3B 0334
        gbc.setState(0xa04a, 0x47c2, 0x1570, 0x33db, 0xd12a, 0xf08f, 0x0, 0x0);
        gbc.writeMem(0xa04a, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x47c2, gbc.sp());
        EXPECT(0xa04c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa04a));
        EXPECT(0x3b, gbc.readMem(0xa04b));
        // CB 3B 0335
        gbc.setState(0x938e, 0xffe0, 0x7d20, 0x628, 0x4c48, 0x619a, 0x0, 0x1);
        gbc.writeMem(0x938e, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xffe0, gbc.sp());
        EXPECT(0x9390, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x938e));
        EXPECT(0x3b, gbc.readMem(0x938f));
        // CB 3B 0336
        gbc.setState(0x3744, 0x4b22, 0xc9f0, 0x9bfe, 0x5b49, 0x483a, 0x0, 0x0);
        gbc.writeMem(0x3744, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x4b22, gbc.sp());
        EXPECT(0x3746, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3B 0337
        gbc.setState(0x48d9, 0xa3a1, 0x30d0, 0xfed5, 0xfb83, 0x3cd9, 0x1, 0x1);
        gbc.writeMem(0x48d9, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xa3a1, gbc.sp());
        EXPECT(0x48db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3B 0338
        gbc.setState(0x151b, 0x9bd9, 0x2500, 0xed96, 0x1ec3, 0x6a1e, 0x1, 0x0);
        gbc.writeMem(0x151b, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x9bd9, gbc.sp());
        EXPECT(0x151d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3B 0339
        gbc.setState(0x497e, 0x9217, 0xd860, 0x1078, 0xc071, 0x21fc, 0x0, 0x1);
        gbc.writeMem(0x497e, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x9217, gbc.sp());
        EXPECT(0x4980, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3B 033A
        gbc.setState(0x6421, 0xe5cf, 0xc020, 0x9ec9, 0xb5c9, 0x29fa, 0x0, 0x0);
        gbc.writeMem(0x6421, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xe5cf, gbc.sp());
        EXPECT(0x6423, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3B 033B
        gbc.setState(0x45f4, 0x6093, 0xfed0, 0x5993, 0x3e8, 0x3b8b, 0x1, 0x0);
        gbc.writeMem(0x45f4, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x6093, gbc.sp());
        EXPECT(0x45f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3B 033C
        gbc.setState(0xdbea, 0x309d, 0x5930, 0xe331, 0x9b7, 0xc016, 0x1, 0x1);
        gbc.writeMem(0xdbea, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x309d, gbc.sp());
        EXPECT(0xdbec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdbea));
        EXPECT(0x3b, gbc.readMem(0xdbeb));
        // CB 3B 033D
        gbc.setState(0xa57a, 0x78b3, 0x5800, 0xee96, 0x2672, 0x44e7, 0x1, 0x1);
        gbc.writeMem(0xa57a, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x78b3, gbc.sp());
        EXPECT(0xa57c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa57a));
        EXPECT(0x3b, gbc.readMem(0xa57b));
        // CB 3B 033E
        gbc.setState(0x8ecb, 0x5a6d, 0x2bc0, 0xdf44, 0xd09c, 0x40c9, 0x0, 0x1);
        gbc.writeMem(0x8ecb, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x5a6d, gbc.sp());
        EXPECT(0x8ecd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ecb));
        EXPECT(0x3b, gbc.readMem(0x8ecc));
        // CB 3B 033F
        gbc.setState(0x41ce, 0xbe60, 0xf3f0, 0xe99e, 0x6aa5, 0x99af, 0x0, 0x1);
        gbc.writeMem(0x41ce, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xbe60, gbc.sp());
        EXPECT(0x41d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3B 0340
        gbc.setState(0x38c9, 0x8ea, 0xd6f0, 0x702b, 0xf3bf, 0xf96f, 0x0, 0x1);
        gbc.writeMem(0x38c9, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x8ea, gbc.sp());
        EXPECT(0x38cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3B 0341
        gbc.setState(0x2502, 0xb180, 0x3460, 0xfced, 0xb0a0, 0x7181, 0x1, 0x1);
        gbc.writeMem(0x2502, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xb180, gbc.sp());
        EXPECT(0x2504, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3B 0342
        gbc.setState(0xa80a, 0xa20d, 0x9100, 0x9c4a, 0x34c, 0x3b62, 0x1, 0x1);
        gbc.writeMem(0xa80a, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xa20d, gbc.sp());
        EXPECT(0xa80c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa80a));
        EXPECT(0x3b, gbc.readMem(0xa80b));
        // CB 3B 0343
        gbc.setState(0x9d28, 0x1297, 0xddd0, 0x898d, 0x7047, 0x6e1, 0x0, 0x1);
        gbc.writeMem(0x9d28, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x1297, gbc.sp());
        EXPECT(0x9d2a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d28));
        EXPECT(0x3b, gbc.readMem(0x9d29));
        // CB 3B 0344
        gbc.setState(0x342d, 0xc61d, 0x7150, 0xe0ff, 0xad8a, 0x346f, 0x0, 0x0);
        gbc.writeMem(0x342d, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xc61d, gbc.sp());
        EXPECT(0x342f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3B 0345
        gbc.setState(0x4519, 0xc84d, 0x90f0, 0x75af, 0x22ae, 0x55c9, 0x0, 0x1);
        gbc.writeMem(0x4519, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xc84d, gbc.sp());
        EXPECT(0x451b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3B 0346
        gbc.setState(0xe5fe, 0xc969, 0x2860, 0xddc5, 0xdff9, 0xd30e, 0x0, 0x0);
        gbc.writeMem(0xe5fe, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xc969, gbc.sp());
        EXPECT(0xe600, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe5fe));
        EXPECT(0x3b, gbc.readMem(0xe5ff));
        // CB 3B 0348
        gbc.setState(0x4f21, 0xafb5, 0x25f0, 0x137, 0x1334, 0x1471, 0x0, 0x0);
        gbc.writeMem(0x4f21, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xafb5, gbc.sp());
        EXPECT(0x4f23, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3B 0349
        gbc.setState(0x5361, 0x7b05, 0xf8e0, 0xd1bb, 0x710f, 0xbca4, 0x0, 0x0);
        gbc.writeMem(0x5361, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x7b05, gbc.sp());
        EXPECT(0x5363, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3B 034A
        gbc.setState(0x2674, 0x8569, 0x8ed0, 0xa77d, 0xa77c, 0x172e, 0x1, 0x0);
        gbc.writeMem(0x2674, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x8569, gbc.sp());
        EXPECT(0x2676, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3B 034B
        gbc.setState(0x2c01, 0x9f48, 0x1200, 0xf6fb, 0x4cfb, 0x24bf, 0x0, 0x1);
        gbc.writeMem(0x2c01, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x9f48, gbc.sp());
        EXPECT(0x2c03, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3B 034D
        gbc.setState(0xdb79, 0x7707, 0x3890, 0xade8, 0x8718, 0x59e0, 0x1, 0x1);
        gbc.writeMem(0xdb79, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x7707, gbc.sp());
        EXPECT(0xdb7b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb79));
        EXPECT(0x3b, gbc.readMem(0xdb7a));
        // CB 3B 034E
        gbc.setState(0x642c, 0xb054, 0xd550, 0x6cb5, 0xa521, 0xf24b, 0x1, 0x0);
        gbc.writeMem(0x642c, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xb054, gbc.sp());
        EXPECT(0x642e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3B 034F
        gbc.setState(0x3980, 0xe1fa, 0xace0, 0xa311, 0x2c6, 0x5b33, 0x0, 0x1);
        gbc.writeMem(0x3980, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xe1fa, gbc.sp());
        EXPECT(0x3982, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3B 0350
        gbc.setState(0xe22e, 0xf373, 0x770, 0x302f, 0x52a9, 0x62f8, 0x0, 0x1);
        gbc.writeMem(0xe22e, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xf373, gbc.sp());
        EXPECT(0xe230, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe22e));
        EXPECT(0x3b, gbc.readMem(0xe22f));
        // CB 3B 0351
        gbc.setState(0xcf7a, 0x9213, 0x4e60, 0x5f87, 0xf9eb, 0x6726, 0x1, 0x1);
        gbc.writeMem(0xcf7a, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x9213, gbc.sp());
        EXPECT(0xcf7c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf7a));
        EXPECT(0x3b, gbc.readMem(0xcf7b));
        // CB 3B 0352
        gbc.setState(0x3a0d, 0xeb10, 0x70e0, 0x580d, 0x9b85, 0x5bcd, 0x0, 0x0);
        gbc.writeMem(0x3a0d, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xeb10, gbc.sp());
        EXPECT(0x3a0f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3B 0353
        gbc.setState(0x22de, 0xdf0d, 0x66f0, 0x13be, 0x2159, 0x6b75, 0x1, 0x0);
        gbc.writeMem(0x22de, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xdf0d, gbc.sp());
        EXPECT(0x22e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3B 0354
        gbc.setState(0xda81, 0x6c58, 0x150, 0x678c, 0xa880, 0x4f53, 0x0, 0x1);
        gbc.writeMem(0xda81, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x6c58, gbc.sp());
        EXPECT(0xda83, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda81));
        EXPECT(0x3b, gbc.readMem(0xda82));
        // CB 3B 0355
        gbc.setState(0x427, 0x77ff, 0x4590, 0x2b0a, 0x9e28, 0x513e, 0x0, 0x0);
        gbc.writeMem(0x427, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x77ff, gbc.sp());
        EXPECT(0x429, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3B 0356
        gbc.setState(0xefb2, 0x6c0, 0x1840, 0xad78, 0x1ae6, 0x754d, 0x1, 0x1);
        gbc.writeMem(0xefb2, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x6c0, gbc.sp());
        EXPECT(0xefb4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xefb2));
        EXPECT(0x3b, gbc.readMem(0xefb3));
        // CB 3B 0357
        gbc.setState(0xc957, 0x42c8, 0x8500, 0x8f46, 0xb1ca, 0xc4, 0x1, 0x1);
        gbc.writeMem(0xc957, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x42c8, gbc.sp());
        EXPECT(0xc959, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc957));
        EXPECT(0x3b, gbc.readMem(0xc958));
        // CB 3B 0359
        gbc.setState(0x85af, 0x5229, 0x2b40, 0x972c, 0x21d9, 0x5adc, 0x0, 0x1);
        gbc.writeMem(0x85af, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x5229, gbc.sp());
        EXPECT(0x85b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x85af));
        EXPECT(0x3b, gbc.readMem(0x85b0));
        // CB 3B 035A
        gbc.setState(0x5f2c, 0x1ccd, 0x6d70, 0x663a, 0xb113, 0x7d1, 0x0, 0x1);
        gbc.writeMem(0x5f2c, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x1ccd, gbc.sp());
        EXPECT(0x5f2e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3B 035B
        gbc.setState(0xd0c5, 0xeb72, 0x6f80, 0xcaed, 0xb815, 0x8ba8, 0x0, 0x1);
        gbc.writeMem(0xd0c5, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xeb72, gbc.sp());
        EXPECT(0xd0c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd0c5));
        EXPECT(0x3b, gbc.readMem(0xd0c6));
        // CB 3B 035D
        gbc.setState(0xa869, 0x13d5, 0x57c0, 0x3a72, 0x101d, 0xf017, 0x1, 0x0);
        gbc.writeMem(0xa869, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x13d5, gbc.sp());
        EXPECT(0xa86b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa869));
        EXPECT(0x3b, gbc.readMem(0xa86a));
        // CB 3B 035E
        gbc.setState(0xd16, 0x8f6f, 0xb180, 0x19f9, 0xa14d, 0xd6dd, 0x1, 0x1);
        gbc.writeMem(0xd16, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x8f6f, gbc.sp());
        EXPECT(0xd18, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3B 0360
        gbc.setState(0x29c5, 0x60e8, 0xdc30, 0xb136, 0x2b62, 0x1c3f, 0x0, 0x1);
        gbc.writeMem(0x29c5, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x60e8, gbc.sp());
        EXPECT(0x29c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3B 0361
        gbc.setState(0x5d73, 0x268f, 0x2e90, 0xd6b1, 0xc878, 0xeccf, 0x0, 0x0);
        gbc.writeMem(0x5d73, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x268f, gbc.sp());
        EXPECT(0x5d75, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3B 0362
        gbc.setState(0x82e, 0xf1c0, 0x8ab0, 0xd721, 0x2ad1, 0xbb74, 0x0, 0x0);
        gbc.writeMem(0x82e, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xf1c0, gbc.sp());
        EXPECT(0x830, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3B 0363
        gbc.setState(0x1f02, 0xa2a6, 0x14e0, 0x8b23, 0x59c9, 0xdc22, 0x1, 0x0);
        gbc.writeMem(0x1f02, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xa2a6, gbc.sp());
        EXPECT(0x1f04, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3B 0365
        gbc.setState(0xa154, 0xfc7b, 0x1c30, 0x66af, 0x274e, 0x258, 0x0, 0x1);
        gbc.writeMem(0xa154, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xfc7b, gbc.sp());
        EXPECT(0xa156, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa154));
        EXPECT(0x3b, gbc.readMem(0xa155));
        // CB 3B 0366
        gbc.setState(0xaf05, 0xae02, 0x1a10, 0x8cbe, 0x8078, 0xc120, 0x0, 0x0);
        gbc.writeMem(0xaf05, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xae02, gbc.sp());
        EXPECT(0xaf07, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf05));
        EXPECT(0x3b, gbc.readMem(0xaf06));
        // CB 3B 0368
        gbc.setState(0x2854, 0xed77, 0xf5f0, 0x2edf, 0xc8ec, 0x889b, 0x0, 0x0);
        gbc.writeMem(0x2854, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xed77, gbc.sp());
        EXPECT(0x2856, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3B 0369
        gbc.setState(0x96b3, 0xaaca, 0xc4a0, 0x55de, 0x6c64, 0x726c, 0x0, 0x0);
        gbc.writeMem(0x96b3, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xaaca, gbc.sp());
        EXPECT(0x96b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x96b3));
        EXPECT(0x3b, gbc.readMem(0x96b4));
        // CB 3B 036A
        gbc.setState(0x4f1f, 0xc855, 0x8150, 0x1633, 0xf8b6, 0x3eb6, 0x0, 0x1);
        gbc.writeMem(0x4f1f, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xc855, gbc.sp());
        EXPECT(0x4f21, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3B 036B
        gbc.setState(0xf9e, 0x9fb9, 0xc2f0, 0x3fe8, 0x267e, 0x1456, 0x1, 0x0);
        gbc.writeMem(0xf9e, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x9fb9, gbc.sp());
        EXPECT(0xfa0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3B 036C
        gbc.setState(0xcfb0, 0xc59a, 0x2560, 0x187c, 0xbaf7, 0x707b, 0x0, 0x0);
        gbc.writeMem(0xcfb0, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xc59a, gbc.sp());
        EXPECT(0xcfb2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcfb0));
        EXPECT(0x3b, gbc.readMem(0xcfb1));
        // CB 3B 036D
        gbc.setState(0xcf55, 0xcb2c, 0x57e0, 0x9297, 0xbe2f, 0xd1b7, 0x0, 0x1);
        gbc.writeMem(0xcf55, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xcb2c, gbc.sp());
        EXPECT(0xcf57, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf55));
        EXPECT(0x3b, gbc.readMem(0xcf56));
        // CB 3B 036E
        gbc.setState(0xc6b5, 0xa5d8, 0x8200, 0xbfd8, 0x31f2, 0x489b, 0x1, 0x1);
        gbc.writeMem(0xc6b5, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xa5d8, gbc.sp());
        EXPECT(0xc6b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc6b5));
        EXPECT(0x3b, gbc.readMem(0xc6b6));
        // CB 3B 036F
        gbc.setState(0x43fa, 0xfcfb, 0x1280, 0xb78d, 0x40d7, 0x199, 0x1, 0x0);
        gbc.writeMem(0x43fa, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xfcfb, gbc.sp());
        EXPECT(0x43fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3B 0370
        gbc.setState(0x8080, 0x716b, 0xc880, 0x6d7e, 0x3b89, 0x5d90, 0x0, 0x0);
        gbc.writeMem(0x8080, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x716b, gbc.sp());
        EXPECT(0x8082, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8080));
        EXPECT(0x3b, gbc.readMem(0x8081));
        // CB 3B 0371
        gbc.setState(0x7c83, 0xd7a8, 0xd4e0, 0x146c, 0xf803, 0xd106, 0x1, 0x0);
        gbc.writeMem(0x7c83, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xd7a8, gbc.sp());
        EXPECT(0x7c85, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3B 0372
        gbc.setState(0xbe50, 0x2c42, 0xf7a0, 0x255d, 0xf615, 0x1ea6, 0x1, 0x0);
        gbc.writeMem(0xbe50, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x2c42, gbc.sp());
        EXPECT(0xbe52, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe50));
        EXPECT(0x3b, gbc.readMem(0xbe51));
        // CB 3B 0373
        gbc.setState(0x63e0, 0xc533, 0x270, 0x7be, 0xfb3a, 0xeadc, 0x0, 0x1);
        gbc.writeMem(0x63e0, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xc533, gbc.sp());
        EXPECT(0x63e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3B 0374
        gbc.setState(0x864c, 0x20cf, 0xab50, 0x66f5, 0x7a80, 0x545d, 0x1, 0x0);
        gbc.writeMem(0x864c, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x20cf, gbc.sp());
        EXPECT(0x864e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x864c));
        EXPECT(0x3b, gbc.readMem(0x864d));
        // CB 3B 0375
        gbc.setState(0x46c2, 0x180c, 0xc4b0, 0x45ed, 0xa9fb, 0x552e, 0x1, 0x0);
        gbc.writeMem(0x46c2, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x180c, gbc.sp());
        EXPECT(0x46c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3B 0376
        gbc.setState(0x4616, 0xfee2, 0x7750, 0x8793, 0x7263, 0x4d18, 0x0, 0x0);
        gbc.writeMem(0x4616, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xfee2, gbc.sp());
        EXPECT(0x4618, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3B 0377
        gbc.setState(0x2bc0, 0x5464, 0xbe40, 0x13b4, 0xb2f, 0xa8d0, 0x1, 0x0);
        gbc.writeMem(0x2bc0, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x5464, gbc.sp());
        EXPECT(0x2bc2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3B 0379
        gbc.setState(0x8297, 0xdcf3, 0xab70, 0x5503, 0x887b, 0xd045, 0x0, 0x0);
        gbc.writeMem(0x8297, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xdcf3, gbc.sp());
        EXPECT(0x8299, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8297));
        EXPECT(0x3b, gbc.readMem(0x8298));
        // CB 3B 037A
        gbc.setState(0x55ea, 0x58a2, 0x65c0, 0xc2a3, 0x4fd7, 0xa85d, 0x1, 0x0);
        gbc.writeMem(0x55ea, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x58a2, gbc.sp());
        EXPECT(0x55ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3B 037B
        gbc.setState(0xc0af, 0x6943, 0x2f60, 0xc3e7, 0x38b6, 0x31d3, 0x1, 0x0);
        gbc.writeMem(0xc0af, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x6943, gbc.sp());
        EXPECT(0xc0b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc0af));
        EXPECT(0x3b, gbc.readMem(0xc0b0));
        // CB 3B 037C
        gbc.setState(0x369d, 0x606a, 0x5a70, 0xf291, 0x9949, 0x2638, 0x0, 0x0);
        gbc.writeMem(0x369d, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x606a, gbc.sp());
        EXPECT(0x369f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3B 037D
        gbc.setState(0x46f4, 0x9ef2, 0xe720, 0x3f5, 0xdac0, 0x6377, 0x1, 0x0);
        gbc.writeMem(0x46f4, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x9ef2, gbc.sp());
        EXPECT(0x46f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3B 037E
        gbc.setState(0xcf20, 0xa8e1, 0x1510, 0xbdce, 0xa84a, 0xce19, 0x1, 0x1);
        gbc.writeMem(0xcf20, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xa8e1, gbc.sp());
        EXPECT(0xcf22, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf20));
        EXPECT(0x3b, gbc.readMem(0xcf21));
        // CB 3B 037F
        gbc.setState(0x8377, 0x800, 0xb650, 0x32e0, 0xbfab, 0xe072, 0x0, 0x0);
        gbc.writeMem(0x8377, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x800, gbc.sp());
        EXPECT(0x8379, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8377));
        EXPECT(0x3b, gbc.readMem(0x8378));
        // CB 3B 0380
        gbc.setState(0x5a21, 0x9feb, 0x8900, 0x6d90, 0x9628, 0x5dec, 0x1, 0x1);
        gbc.writeMem(0x5a21, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x9feb, gbc.sp());
        EXPECT(0x5a23, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3B 0381
        gbc.setState(0x79d7, 0xe0ec, 0xe10, 0xf628, 0x8608, 0xa8d8, 0x1, 0x1);
        gbc.writeMem(0x79d7, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xe0ec, gbc.sp());
        EXPECT(0x79d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3B 0382
        gbc.setState(0x704f, 0x12b2, 0x7b20, 0x3e3e, 0x5459, 0x530b, 0x1, 0x0);
        gbc.writeMem(0x704f, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x12b2, gbc.sp());
        EXPECT(0x7051, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3B 0383
        gbc.setState(0xe805, 0xac27, 0x4af0, 0x90ad, 0x4e75, 0xf3e4, 0x0, 0x0);
        gbc.writeMem(0xe805, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xac27, gbc.sp());
        EXPECT(0xe807, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe805));
        EXPECT(0x3b, gbc.readMem(0xe806));
        // CB 3B 0384
        gbc.setState(0xd20f, 0xa31b, 0xeb00, 0x5167, 0xbed8, 0xabfc, 0x1, 0x0);
        gbc.writeMem(0xd20f, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xa31b, gbc.sp());
        EXPECT(0xd211, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd20f));
        EXPECT(0x3b, gbc.readMem(0xd210));
        // CB 3B 0385
        gbc.setState(0x68d0, 0x451c, 0x7e10, 0x5094, 0xa11d, 0xfe87, 0x1, 0x0);
        gbc.writeMem(0x68d0, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x451c, gbc.sp());
        EXPECT(0x68d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3B 0386
        gbc.setState(0x35c1, 0xf4d5, 0xa0e0, 0xf79b, 0x9dc3, 0xa2b2, 0x0, 0x1);
        gbc.writeMem(0x35c1, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xf4d5, gbc.sp());
        EXPECT(0x35c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3B 0387
        gbc.setState(0xdccf, 0x53a8, 0x3b80, 0x789, 0x234c, 0x4431, 0x0, 0x1);
        gbc.writeMem(0xdccf, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x53a8, gbc.sp());
        EXPECT(0xdcd1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdccf));
        EXPECT(0x3b, gbc.readMem(0xdcd0));
        // CB 3B 0388
        gbc.setState(0xe1c4, 0xf883, 0xaf40, 0xb410, 0x1ddc, 0x1e90, 0x1, 0x0);
        gbc.writeMem(0xe1c4, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xf883, gbc.sp());
        EXPECT(0xe1c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe1c4));
        EXPECT(0x3b, gbc.readMem(0xe1c5));
        // CB 3B 0389
        gbc.setState(0x4ded, 0xde48, 0x7950, 0xa2c1, 0x6618, 0x4523, 0x0, 0x1);
        gbc.writeMem(0x4ded, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xde48, gbc.sp());
        EXPECT(0x4def, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3B 038A
        gbc.setState(0xd696, 0x70b, 0x99f0, 0x759d, 0x1e11, 0xe6a5, 0x1, 0x1);
        gbc.writeMem(0xd696, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x70b, gbc.sp());
        EXPECT(0xd698, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd696));
        EXPECT(0x3b, gbc.readMem(0xd697));
        // CB 3B 038B
        gbc.setState(0xd4ac, 0x4976, 0xe0e0, 0x5742, 0xa37d, 0xea76, 0x1, 0x1);
        gbc.writeMem(0xd4ac, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x4976, gbc.sp());
        EXPECT(0xd4ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd4ac));
        EXPECT(0x3b, gbc.readMem(0xd4ad));
        // CB 3B 038D
        gbc.setState(0xcd22, 0x8e6a, 0xb4a0, 0x765, 0xc1ae, 0xf442, 0x0, 0x0);
        gbc.writeMem(0xcd22, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x8e6a, gbc.sp());
        EXPECT(0xcd24, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd22));
        EXPECT(0x3b, gbc.readMem(0xcd23));
        // CB 3B 038E
        gbc.setState(0xbb9c, 0x21dc, 0xc100, 0x3360, 0xba4d, 0x22c, 0x1, 0x1);
        gbc.writeMem(0xbb9c, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x21dc, gbc.sp());
        EXPECT(0xbb9e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb9c));
        EXPECT(0x3b, gbc.readMem(0xbb9d));
        // CB 3B 038F
        gbc.setState(0xd891, 0x2dea, 0x6cd0, 0x7277, 0xaced, 0x5895, 0x0, 0x1);
        gbc.writeMem(0xd891, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x2dea, gbc.sp());
        EXPECT(0xd893, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd891));
        EXPECT(0x3b, gbc.readMem(0xd892));
        // CB 3B 0390
        gbc.setState(0x3af, 0x3b41, 0x880, 0x8a41, 0x2f84, 0x7215, 0x1, 0x0);
        gbc.writeMem(0x3af, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x3b41, gbc.sp());
        EXPECT(0x3b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3B 0391
        gbc.setState(0xd9db, 0x40eb, 0x5dd0, 0x850f, 0x886d, 0x1884, 0x1, 0x1);
        gbc.writeMem(0xd9db, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x40eb, gbc.sp());
        EXPECT(0xd9dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd9db));
        EXPECT(0x3b, gbc.readMem(0xd9dc));
        // CB 3B 0392
        gbc.setState(0x1bd3, 0x5a01, 0x5300, 0xc6b9, 0xb370, 0x421f, 0x0, 0x0);
        gbc.writeMem(0x1bd3, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x5a01, gbc.sp());
        EXPECT(0x1bd5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3B 0394
        gbc.setState(0xe25b, 0x3fa9, 0x3e0, 0x8a76, 0xa583, 0x7e44, 0x0, 0x0);
        gbc.writeMem(0xe25b, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x3fa9, gbc.sp());
        EXPECT(0xe25d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe25b));
        EXPECT(0x3b, gbc.readMem(0xe25c));
        // CB 3B 0395
        gbc.setState(0x6e4d, 0x1c16, 0x9870, 0x9d13, 0x225e, 0x6899, 0x0, 0x1);
        gbc.writeMem(0x6e4d, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x1c16, gbc.sp());
        EXPECT(0x6e4f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3B 0396
        gbc.setState(0x87a0, 0x294b, 0x30b0, 0x9c93, 0x8be6, 0xc251, 0x1, 0x0);
        gbc.writeMem(0x87a0, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x294b, gbc.sp());
        EXPECT(0x87a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x87a0));
        EXPECT(0x3b, gbc.readMem(0x87a1));
        // CB 3B 0397
        gbc.setState(0xddb, 0x9dc6, 0x9f90, 0x58a5, 0x2734, 0x93b0, 0x0, 0x1);
        gbc.writeMem(0xddb, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x9dc6, gbc.sp());
        EXPECT(0xddd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3B 0398
        gbc.setState(0x9bc3, 0x9ca4, 0x64b0, 0x17ec, 0x7f53, 0x51d7, 0x0, 0x0);
        gbc.writeMem(0x9bc3, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x9ca4, gbc.sp());
        EXPECT(0x9bc5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9bc3));
        EXPECT(0x3b, gbc.readMem(0x9bc4));
        // CB 3B 0399
        gbc.setState(0xe399, 0x5e80, 0xa690, 0x38bf, 0x6a24, 0xd365, 0x0, 0x0);
        gbc.writeMem(0xe399, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x5e80, gbc.sp());
        EXPECT(0xe39b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe399));
        EXPECT(0x3b, gbc.readMem(0xe39a));
        // CB 3B 039A
        gbc.setState(0x6243, 0x9246, 0x2320, 0x13fe, 0xf4f0, 0x6781, 0x0, 0x1);
        gbc.writeMem(0x6243, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x9246, gbc.sp());
        EXPECT(0x6245, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3B 039B
        gbc.setState(0x77d0, 0x3849, 0x8ea0, 0x597f, 0xfbc9, 0x5dcc, 0x1, 0x1);
        gbc.writeMem(0x77d0, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x3849, gbc.sp());
        EXPECT(0x77d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3B 039C
        gbc.setState(0x830a, 0x3c88, 0xabd0, 0x4903, 0xf547, 0xefab, 0x0, 0x1);
        gbc.writeMem(0x830a, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x3c88, gbc.sp());
        EXPECT(0x830c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x830a));
        EXPECT(0x3b, gbc.readMem(0x830b));
        // CB 3B 039D
        gbc.setState(0xa7c, 0x3430, 0xb440, 0xe97e, 0xfa57, 0xac6e, 0x0, 0x1);
        gbc.writeMem(0xa7c, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x3430, gbc.sp());
        EXPECT(0xa7e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3B 039E
        gbc.setState(0x783b, 0x1038, 0xe300, 0xe709, 0xc399, 0xc1c1, 0x0, 0x1);
        gbc.writeMem(0x783b, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x1038, gbc.sp());
        EXPECT(0x783d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3B 03A0
        gbc.setState(0x3bdc, 0xf055, 0xb2b0, 0xe41e, 0xc72e, 0x1c15, 0x1, 0x1);
        gbc.writeMem(0x3bdc, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xf055, gbc.sp());
        EXPECT(0x3bde, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3B 03A1
        gbc.setState(0x494f, 0xf4de, 0xb260, 0x2d8d, 0x19a6, 0xd8a5, 0x1, 0x0);
        gbc.writeMem(0x494f, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xf4de, gbc.sp());
        EXPECT(0x4951, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3B 03A2
        gbc.setState(0xa164, 0xa271, 0x2ec0, 0x629c, 0x77ea, 0xb87d, 0x0, 0x1);
        gbc.writeMem(0xa164, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xa271, gbc.sp());
        EXPECT(0xa166, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa164));
        EXPECT(0x3b, gbc.readMem(0xa165));
        // CB 3B 03A3
        gbc.setState(0x6e7e, 0xb737, 0x8870, 0xb3e4, 0xa2eb, 0x4889, 0x0, 0x1);
        gbc.writeMem(0x6e7e, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xb737, gbc.sp());
        EXPECT(0x6e80, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3B 03A4
        gbc.setState(0xcbab, 0xc444, 0xa660, 0xd699, 0x5ed1, 0x7bb8, 0x0, 0x1);
        gbc.writeMem(0xcbab, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xc444, gbc.sp());
        EXPECT(0xcbad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcbab));
        EXPECT(0x3b, gbc.readMem(0xcbac));
        // CB 3B 03A5
        gbc.setState(0x9ec0, 0xac6d, 0x6e20, 0xb45a, 0x2b6c, 0xc44f, 0x1, 0x1);
        gbc.writeMem(0x9ec0, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xac6d, gbc.sp());
        EXPECT(0x9ec2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ec0));
        EXPECT(0x3b, gbc.readMem(0x9ec1));
        // CB 3B 03A6
        gbc.setState(0x408b, 0xb24c, 0xa710, 0xcdce, 0x4db6, 0xd3b1, 0x0, 0x1);
        gbc.writeMem(0x408b, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xb24c, gbc.sp());
        EXPECT(0x408d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3B 03A7
        gbc.setState(0xb1f9, 0x1f9b, 0xecc0, 0x1576, 0xbca4, 0x848e, 0x1, 0x0);
        gbc.writeMem(0xb1f9, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x1f9b, gbc.sp());
        EXPECT(0xb1fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb1f9));
        EXPECT(0x3b, gbc.readMem(0xb1fa));
        // CB 3B 03A8
        gbc.setState(0x9163, 0x7c04, 0x9400, 0x938b, 0xcc60, 0xad2f, 0x0, 0x0);
        gbc.writeMem(0x9163, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x7c04, gbc.sp());
        EXPECT(0x9165, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9163));
        EXPECT(0x3b, gbc.readMem(0x9164));
        // CB 3B 03A9
        gbc.setState(0x2f94, 0x2ea1, 0x4c30, 0x5ec4, 0x135b, 0x376c, 0x1, 0x1);
        gbc.writeMem(0x2f94, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x2ea1, gbc.sp());
        EXPECT(0x2f96, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3B 03AA
        gbc.setState(0xb5ce, 0x356e, 0xe1d0, 0xfc78, 0xb4e2, 0x5687, 0x1, 0x1);
        gbc.writeMem(0xb5ce, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x356e, gbc.sp());
        EXPECT(0xb5d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb5ce));
        EXPECT(0x3b, gbc.readMem(0xb5cf));
        // CB 3B 03AB
        gbc.setState(0x5738, 0x87b5, 0x4b20, 0x5929, 0x35a6, 0xb705, 0x0, 0x0);
        gbc.writeMem(0x5738, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x87b5, gbc.sp());
        EXPECT(0x573a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3B 03AC
        gbc.setState(0x3bb8, 0xa0c2, 0x1f0, 0x8879, 0x2295, 0x9f8, 0x0, 0x1);
        gbc.writeMem(0x3bb8, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xa0c2, gbc.sp());
        EXPECT(0x3bba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3B 03AD
        gbc.setState(0xb05f, 0xcd2c, 0xc530, 0x959c, 0x40f2, 0xc2cc, 0x1, 0x0);
        gbc.writeMem(0xb05f, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xcd2c, gbc.sp());
        EXPECT(0xb061, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb05f));
        EXPECT(0x3b, gbc.readMem(0xb060));
        // CB 3B 03AE
        gbc.setState(0x3cbb, 0xed4d, 0xea90, 0xb915, 0x5394, 0x8d3f, 0x0, 0x1);
        gbc.writeMem(0x3cbb, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xed4d, gbc.sp());
        EXPECT(0x3cbd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3B 03B0
        gbc.setState(0xcff2, 0x6c58, 0x67a0, 0x1630, 0x2c9f, 0x8111, 0x0, 0x0);
        gbc.writeMem(0xcff2, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x6c58, gbc.sp());
        EXPECT(0xcff4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcff2));
        EXPECT(0x3b, gbc.readMem(0xcff3));
        // CB 3B 03B1
        gbc.setState(0xba0b, 0xcdd9, 0xaa70, 0xc6b, 0xd047, 0x396b, 0x1, 0x0);
        gbc.writeMem(0xba0b, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xcdd9, gbc.sp());
        EXPECT(0xba0d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba0b));
        EXPECT(0x3b, gbc.readMem(0xba0c));
        // CB 3B 03B2
        gbc.setState(0x1bac, 0x69d2, 0x99e0, 0xac6b, 0x4ccb, 0xb54b, 0x0, 0x1);
        gbc.writeMem(0x1bac, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x69d2, gbc.sp());
        EXPECT(0x1bae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3B 03B4
        gbc.setState(0x233c, 0xb525, 0xa560, 0x6d07, 0x3503, 0xbc9, 0x0, 0x1);
        gbc.writeMem(0x233c, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xb525, gbc.sp());
        EXPECT(0x233e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3B 03B6
        gbc.setState(0xb8a0, 0x5e86, 0x8be0, 0xcff7, 0x585e, 0xd012, 0x1, 0x0);
        gbc.writeMem(0xb8a0, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x5e86, gbc.sp());
        EXPECT(0xb8a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb8a0));
        EXPECT(0x3b, gbc.readMem(0xb8a1));
        // CB 3B 03B7
        gbc.setState(0x489e, 0x165f, 0x6600, 0x7132, 0xdd10, 0xa01f, 0x1, 0x1);
        gbc.writeMem(0x489e, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x165f, gbc.sp());
        EXPECT(0x48a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3B 03B8
        gbc.setState(0x7e2e, 0x211, 0x6500, 0xecee, 0x4e1e, 0x5fcb, 0x0, 0x1);
        gbc.writeMem(0x7e2e, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x211, gbc.sp());
        EXPECT(0x7e30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3B 03B9
        gbc.setState(0x3a95, 0xfdc5, 0x3a70, 0x82dc, 0x8b46, 0xcef3, 0x0, 0x1);
        gbc.writeMem(0x3a95, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xfdc5, gbc.sp());
        EXPECT(0x3a97, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3B 03BA
        gbc.setState(0xcea7, 0x947d, 0xe3b0, 0x5739, 0xff68, 0x197e, 0x1, 0x0);
        gbc.writeMem(0xcea7, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x947d, gbc.sp());
        EXPECT(0xcea9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcea7));
        EXPECT(0x3b, gbc.readMem(0xcea8));
        // CB 3B 03BB
        gbc.setState(0xa865, 0xd3b6, 0x5f10, 0xce51, 0x2b08, 0x2460, 0x1, 0x0);
        gbc.writeMem(0xa865, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xd3b6, gbc.sp());
        EXPECT(0xa867, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa865));
        EXPECT(0x3b, gbc.readMem(0xa866));
        // CB 3B 03BC
        gbc.setState(0x3e8, 0x9edf, 0xb240, 0xfe50, 0x6c99, 0xd13f, 0x1, 0x1);
        gbc.writeMem(0x3e8, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x9edf, gbc.sp());
        EXPECT(0x3ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3B 03BE
        gbc.setState(0x1d5e, 0xd2a5, 0x1cb0, 0xd6b2, 0xb601, 0x4074, 0x0, 0x0);
        gbc.writeMem(0x1d5e, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xd2a5, gbc.sp());
        EXPECT(0x1d60, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3B 03BF
        gbc.setState(0x299b, 0x3fb2, 0x6330, 0xaec6, 0xd047, 0xfe3a, 0x1, 0x1);
        gbc.writeMem(0x299b, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x3fb2, gbc.sp());
        EXPECT(0x299d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3B 03C0
        gbc.setState(0x7e75, 0x953e, 0x37c0, 0xae6a, 0x36d1, 0x1b8a, 0x1, 0x0);
        gbc.writeMem(0x7e75, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x953e, gbc.sp());
        EXPECT(0x7e77, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3B 03C1
        gbc.setState(0xc9d3, 0xb470, 0x9f10, 0x1993, 0x5d5f, 0x7cdf, 0x0, 0x1);
        gbc.writeMem(0xc9d3, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xb470, gbc.sp());
        EXPECT(0xc9d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc9d3));
        EXPECT(0x3b, gbc.readMem(0xc9d4));
        // CB 3B 03C2
        gbc.setState(0x3bc0, 0x40b2, 0x8970, 0x75f7, 0x4fc4, 0x2865, 0x1, 0x1);
        gbc.writeMem(0x3bc0, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x40b2, gbc.sp());
        EXPECT(0x3bc2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3B 03C3
        gbc.setState(0x6422, 0xbc7f, 0x2b10, 0x390, 0x4562, 0x46df, 0x1, 0x1);
        gbc.writeMem(0x6422, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xbc7f, gbc.sp());
        EXPECT(0x6424, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3B 03C4
        gbc.setState(0x388c, 0xc909, 0x9030, 0xaa88, 0x70c3, 0x224c, 0x0, 0x1);
        gbc.writeMem(0x388c, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xc909, gbc.sp());
        EXPECT(0x388e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3B 03C5
        gbc.setState(0x3e33, 0xdb47, 0x8200, 0xd8de, 0x829b, 0x2d6f, 0x1, 0x1);
        gbc.writeMem(0x3e33, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xdb47, gbc.sp());
        EXPECT(0x3e35, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3B 03C6
        gbc.setState(0x3be1, 0x94e5, 0x3cc0, 0xcbdc, 0xbd7, 0x7627, 0x1, 0x1);
        gbc.writeMem(0x3be1, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x94e5, gbc.sp());
        EXPECT(0x3be3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3B 03C7
        gbc.setState(0x12dd, 0x3eb8, 0x4700, 0x8132, 0x5bd8, 0xca80, 0x0, 0x0);
        gbc.writeMem(0x12dd, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x3eb8, gbc.sp());
        EXPECT(0x12df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3B 03C8
        gbc.setState(0xb5a4, 0xa3b2, 0x7b40, 0x86b6, 0xd8be, 0xc6a, 0x1, 0x1);
        gbc.writeMem(0xb5a4, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xa3b2, gbc.sp());
        EXPECT(0xb5a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb5a4));
        EXPECT(0x3b, gbc.readMem(0xb5a5));
        // CB 3B 03C9
        gbc.setState(0x71f4, 0x9b40, 0x2920, 0xb52e, 0x7c72, 0xc3, 0x0, 0x0);
        gbc.writeMem(0x71f4, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x9b40, gbc.sp());
        EXPECT(0x71f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3B 03CA
        gbc.setState(0x2b0a, 0x8d94, 0x47a0, 0x7cd9, 0xb4ce, 0x582e, 0x1, 0x0);
        gbc.writeMem(0x2b0a, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x8d94, gbc.sp());
        EXPECT(0x2b0c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3B 03CB
        gbc.setState(0x2b92, 0xaa7b, 0xf2f0, 0xe17d, 0xc319, 0x3ba7, 0x0, 0x1);
        gbc.writeMem(0x2b92, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xaa7b, gbc.sp());
        EXPECT(0x2b94, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3B 03CC
        gbc.setState(0x36ff, 0x4f73, 0x91f0, 0xfe09, 0x152f, 0x1397, 0x1, 0x0);
        gbc.writeMem(0x36ff, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x4f73, gbc.sp());
        EXPECT(0x3701, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3B 03CD
        gbc.setState(0x6b9e, 0x2b08, 0x4660, 0x5631, 0xd2d2, 0x912b, 0x0, 0x0);
        gbc.writeMem(0x6b9e, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x2b08, gbc.sp());
        EXPECT(0x6ba0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3B 03CE
        gbc.setState(0x28b1, 0x7e77, 0x6b00, 0x9ece, 0x3127, 0x55bf, 0x0, 0x0);
        gbc.writeMem(0x28b1, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x7e77, gbc.sp());
        EXPECT(0x28b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3B 03CF
        gbc.setState(0xbb46, 0xbe9b, 0xba90, 0x782a, 0xd926, 0xbc0b, 0x0, 0x0);
        gbc.writeMem(0xbb46, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xbe9b, gbc.sp());
        EXPECT(0xbb48, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb46));
        EXPECT(0x3b, gbc.readMem(0xbb47));
        // CB 3B 03D0
        gbc.setState(0xc03a, 0xc2a7, 0x79b0, 0x8da3, 0x68b1, 0x6bda, 0x1, 0x1);
        gbc.writeMem(0xc03a, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xc2a7, gbc.sp());
        EXPECT(0xc03c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc03a));
        EXPECT(0x3b, gbc.readMem(0xc03b));
        // CB 3B 03D1
        gbc.setState(0xee18, 0x4ea9, 0x66a0, 0xfbe1, 0xa928, 0x7955, 0x1, 0x1);
        gbc.writeMem(0xee18, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x4ea9, gbc.sp());
        EXPECT(0xee1a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee18));
        EXPECT(0x3b, gbc.readMem(0xee19));
        // CB 3B 03D2
        gbc.setState(0x2b32, 0x32a7, 0xa600, 0x2b79, 0x577f, 0x3117, 0x1, 0x1);
        gbc.writeMem(0x2b32, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x32a7, gbc.sp());
        EXPECT(0x2b34, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3B 03D3
        gbc.setState(0x9ad5, 0x9f08, 0x3750, 0x8d02, 0x4651, 0xa2cd, 0x1, 0x1);
        gbc.writeMem(0x9ad5, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x9f08, gbc.sp());
        EXPECT(0x9ad7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ad5));
        EXPECT(0x3b, gbc.readMem(0x9ad6));
        // CB 3B 03D4
        gbc.setState(0x480d, 0x440f, 0x8480, 0x5580, 0xafa2, 0x2db, 0x1, 0x1);
        gbc.writeMem(0x480d, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x440f, gbc.sp());
        EXPECT(0x480f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3B 03D5
        gbc.setState(0x7507, 0x780b, 0x37b0, 0xf4b8, 0xa778, 0xadeb, 0x0, 0x0);
        gbc.writeMem(0x7507, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x780b, gbc.sp());
        EXPECT(0x7509, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3B 03D7
        gbc.setState(0x7d76, 0x3475, 0xf770, 0xfd6d, 0xcd8, 0x76cf, 0x1, 0x1);
        gbc.writeMem(0x7d76, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x3475, gbc.sp());
        EXPECT(0x7d78, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3B 03D8
        gbc.setState(0xb3e8, 0xcf6a, 0x4f10, 0xbb3b, 0x61d2, 0xd89a, 0x1, 0x0);
        gbc.writeMem(0xb3e8, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xcf6a, gbc.sp());
        EXPECT(0xb3ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb3e8));
        EXPECT(0x3b, gbc.readMem(0xb3e9));
        // CB 3B 03D9
        gbc.setState(0x8bba, 0xdc64, 0x4fc0, 0x86e6, 0xd5d2, 0xeecb, 0x0, 0x1);
        gbc.writeMem(0x8bba, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xdc64, gbc.sp());
        EXPECT(0x8bbc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8bba));
        EXPECT(0x3b, gbc.readMem(0x8bbb));
        // CB 3B 03DA
        gbc.setState(0x845e, 0xbf1a, 0xae50, 0x3f7c, 0x1f6d, 0x45aa, 0x1, 0x0);
        gbc.writeMem(0x845e, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xbf1a, gbc.sp());
        EXPECT(0x8460, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x845e));
        EXPECT(0x3b, gbc.readMem(0x845f));
        // CB 3B 03DB
        gbc.setState(0xc384, 0xa311, 0x2960, 0xeae3, 0x1a4f, 0xbd4a, 0x0, 0x0);
        gbc.writeMem(0xc384, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xa311, gbc.sp());
        EXPECT(0xc386, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc384));
        EXPECT(0x3b, gbc.readMem(0xc385));
        // CB 3B 03DC
        gbc.setState(0x54be, 0x818c, 0x5a60, 0xa24c, 0xd1ce, 0x7d3c, 0x0, 0x1);
        gbc.writeMem(0x54be, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x818c, gbc.sp());
        EXPECT(0x54c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3B 03DD
        gbc.setState(0x6d80, 0x3d1e, 0x9c50, 0x7b78, 0xdb67, 0xaba0, 0x0, 0x1);
        gbc.writeMem(0x6d80, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x3d1e, gbc.sp());
        EXPECT(0x6d82, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3B 03DE
        gbc.setState(0x3e3c, 0x8bfe, 0x8aa0, 0xda2, 0x2b, 0xbcf1, 0x0, 0x1);
        gbc.writeMem(0x3e3c, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x8bfe, gbc.sp());
        EXPECT(0x3e3e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3B 03DF
        gbc.setState(0x875c, 0x4fc2, 0x2570, 0x6435, 0x74c3, 0xafab, 0x0, 0x1);
        gbc.writeMem(0x875c, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x4fc2, gbc.sp());
        EXPECT(0x875e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x875c));
        EXPECT(0x3b, gbc.readMem(0x875d));
        // CB 3B 03E0
        gbc.setState(0x481d, 0xa85b, 0xdb0, 0xfb53, 0x636e, 0x6a80, 0x1, 0x1);
        gbc.writeMem(0x481d, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xa85b, gbc.sp());
        EXPECT(0x481f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3B 03E1
        gbc.setState(0x5ea8, 0x5278, 0x70c0, 0x7302, 0x34a8, 0xc154, 0x0, 0x1);
        gbc.writeMem(0x5ea8, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x5278, gbc.sp());
        EXPECT(0x5eaa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3B 03E2
        gbc.setState(0xcf45, 0xa036, 0xd010, 0x94d, 0x1c06, 0xf94f, 0x0, 0x1);
        gbc.writeMem(0xcf45, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xa036, gbc.sp());
        EXPECT(0xcf47, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf45));
        EXPECT(0x3b, gbc.readMem(0xcf46));
        // CB 3B 03E3
        gbc.setState(0x8605, 0x6035, 0x95b0, 0xd202, 0xe8fc, 0xbc94, 0x0, 0x1);
        gbc.writeMem(0x8605, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x6035, gbc.sp());
        EXPECT(0x8607, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8605));
        EXPECT(0x3b, gbc.readMem(0x8606));
        // CB 3B 03E4
        gbc.setState(0xb30, 0xb22f, 0x8410, 0xe54c, 0x440f, 0xd064, 0x0, 0x1);
        gbc.writeMem(0xb30, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xb22f, gbc.sp());
        EXPECT(0xb32, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3B 03E5
        gbc.setState(0x35df, 0x4213, 0x9790, 0x93db, 0x24c, 0x99d0, 0x1, 0x0);
        gbc.writeMem(0x35df, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x4213, gbc.sp());
        EXPECT(0x35e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3B 03E6
        gbc.setState(0x55a5, 0x1c45, 0xd0, 0x3967, 0x8db9, 0xb2e0, 0x1, 0x1);
        gbc.writeMem(0x55a5, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x1c45, gbc.sp());
        EXPECT(0x55a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3B 03E7
        gbc.setState(0x9574, 0xc873, 0xe9f0, 0x890b, 0x1ea7, 0x5a45, 0x1, 0x1);
        gbc.writeMem(0x9574, { 0xcb, 0x3b });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xc873, gbc.sp());
        EXPECT(0x9576, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9574));
        EXPECT(0x3b, gbc.readMem(0x9575));
    }
