    TEST(gbcemu, opcode_09) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // 09 0000
        gbc.setState(0xa6cb, 0x2c91, 0x1d40, 0x61f3, 0x72f8, 0xb015, 0x0, 0x0);
        gbc.writeMem(0xa6cb, { 0x9 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x2c91, gbc.sp());
        EXPECT(0xa6cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xa6cb));
        // 09 0001
        gbc.setState(0xd083, 0x6e8b, 0x23c0, 0xe51d, 0xff65, 0x3c7e, 0x1, 0x0);
        gbc.writeMem(0xd083, { 0x9 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x6e8b, gbc.sp());
        EXPECT(0xd084, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xd083));
        // 09 0002
        gbc.setState(0x4637, 0x4287, 0xd460, 0x9d63, 0xcafd, 0xa317, 0x0, 0x0);
        gbc.writeMem(0x4637, { 0x9 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x4287, gbc.sp());
        EXPECT(0x4638, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 09 0003
        gbc.setState(0x19be, 0x52cb, 0x18f0, 0x54a5, 0x76d2, 0x42bf, 0x1, 0x1);
        gbc.writeMem(0x19be, { 0x9 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x52cb, gbc.sp());
        EXPECT(0x19bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 09 0004
        gbc.setState(0x11b6, 0x3583, 0xafb0, 0x43d7, 0x7d94, 0x863b, 0x0, 0x0);
        gbc.writeMem(0x11b6, { 0x9 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x3583, gbc.sp());
        EXPECT(0x11b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 09 0005
        gbc.setState(0xcfb, 0xe107, 0x2210, 0x5521, 0xba76, 0xfea0, 0x1, 0x0);
        gbc.writeMem(0xcfb, { 0x9 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xe107, gbc.sp());
        EXPECT(0xcfc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 09 0006
        gbc.setState(0xc49e, 0x7dd3, 0x1650, 0xc092, 0xb3ea, 0x9e0e, 0x0, 0x0);
        gbc.writeMem(0xc49e, { 0x9 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x7dd3, gbc.sp());
        EXPECT(0xc49f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xc49e));
        // 09 0009
        gbc.setState(0xe591, 0x93cf, 0xcfe0, 0xb82a, 0x5a6b, 0x9420, 0x1, 0x0);
        gbc.writeMem(0xe591, { 0x9 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x93cf, gbc.sp());
        EXPECT(0xe592, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xe591));
        // 09 000A
        gbc.setState(0x2c2d, 0xc7ee, 0xf770, 0x2266, 0xd448, 0xa0, 0x1, 0x1);
        gbc.writeMem(0x2c2d, { 0x9 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xc7ee, gbc.sp());
        EXPECT(0x2c2e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 09 000B
        gbc.setState(0xe0d1, 0xbc99, 0x5b10, 0xcd4f, 0xbd97, 0x293, 0x0, 0x0);
        gbc.writeMem(0xe0d1, { 0x9 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xbc99, gbc.sp());
        EXPECT(0xe0d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xe0d1));
        // 09 000D
        gbc.setState(0x44f1, 0x8703, 0x6f80, 0x2241, 0x442c, 0x423, 0x0, 0x1);
        gbc.writeMem(0x44f1, { 0x9 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x8703, gbc.sp());
        EXPECT(0x44f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 09 000E
        gbc.setState(0x4de7, 0xe493, 0xb330, 0xb413, 0xc812, 0x949a, 0x0, 0x1);
        gbc.writeMem(0x4de7, { 0x9 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xe493, gbc.sp());
        EXPECT(0x4de8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 09 000F
        gbc.setState(0x3d, 0xc090, 0xf280, 0x601a, 0x506, 0x82c1, 0x1, 0x1);
        gbc.writeMem(0x3d, { 0x9 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xc090, gbc.sp());
        EXPECT(0x3e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 09 0010
        gbc.setState(0xc78b, 0x2e45, 0xda10, 0xbaab, 0xec3c, 0x9790, 0x1, 0x0);
        gbc.writeMem(0xc78b, { 0x9 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x2e45, gbc.sp());
        EXPECT(0xc78c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xc78b));
        // 09 0011
        gbc.setState(0x16f4, 0x9cfb, 0x3550, 0x3544, 0xf77e, 0xf588, 0x0, 0x0);
        gbc.writeMem(0x16f4, { 0x9 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x9cfb, gbc.sp());
        EXPECT(0x16f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 09 0012
        gbc.setState(0x5860, 0x89d0, 0xb5c0, 0xb162, 0x5427, 0x3039, 0x1, 0x0);
        gbc.writeMem(0x5860, { 0x9 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x89d0, gbc.sp());
        EXPECT(0x5861, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 09 0013
        gbc.setState(0x8b03, 0xee99, 0xd0e0, 0x8288, 0xa6af, 0x8c65, 0x0, 0x0);
        gbc.writeMem(0x8b03, { 0x9 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xee99, gbc.sp());
        EXPECT(0x8b04, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0x8b03));
        // 09 0014
        gbc.setState(0x561c, 0x244a, 0x2870, 0x7b56, 0x97ea, 0x52a4, 0x1, 0x1);
        gbc.writeMem(0x561c, { 0x9 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x244a, gbc.sp());
        EXPECT(0x561d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 09 0015
        gbc.setState(0xdb7d, 0x1a27, 0x2a90, 0xa07c, 0x50d3, 0xc5f3, 0x1, 0x0);
        gbc.writeMem(0xdb7d, { 0x9 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x1a27, gbc.sp());
        EXPECT(0xdb7e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xdb7d));
        // 09 0016
        gbc.setState(0xd56f, 0xa000, 0x88a0, 0x741c, 0xce53, 0x40a4, 0x1, 0x0);
        gbc.writeMem(0xd56f, { 0x9 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xa000, gbc.sp());
        EXPECT(0xd570, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xd56f));
        // 09 0017
        gbc.setState(0x95c7, 0xe81f, 0x7200, 0x7290, 0xe5bc, 0x4d37, 0x0, 0x1);
        gbc.writeMem(0x95c7, { 0x9 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xe81f, gbc.sp());
        EXPECT(0x95c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0x95c7));
        // 09 0018
        gbc.setState(0x179c, 0xa861, 0x11c0, 0xd404, 0x691, 0x553b, 0x0, 0x0);
        gbc.writeMem(0x179c, { 0x9 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xa861, gbc.sp());
        EXPECT(0x179d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 09 001A
        gbc.setState(0xd70a, 0x4b96, 0x3150, 0x4f75, 0x4394, 0x7e75, 0x0, 0x0);
        gbc.writeMem(0xd70a, { 0x9 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x4b96, gbc.sp());
        EXPECT(0xd70b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xd70a));
        // 09 001B
        gbc.setState(0x43a4, 0x3f2e, 0xe940, 0x2ad2, 0x2a7c, 0x2dd3, 0x1, 0x1);
        gbc.writeMem(0x43a4, { 0x9 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x3f2e, gbc.sp());
        EXPECT(0x43a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 09 001C
        gbc.setState(0x1624, 0x966c, 0x9790, 0xabf3, 0x814e, 0x7dc3, 0x0, 0x1);
        gbc.writeMem(0x1624, { 0x9 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x966c, gbc.sp());
        EXPECT(0x1625, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 09 001D
        gbc.setState(0x2f7d, 0x4e65, 0x4d70, 0x90b0, 0x93cf, 0x3b97, 0x1, 0x1);
        gbc.writeMem(0x2f7d, { 0x9 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x4e65, gbc.sp());
        EXPECT(0x2f7e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 09 001E
        gbc.setState(0xa13e, 0x4a22, 0xd050, 0x9498, 0x282, 0x3719, 0x0, 0x0);
        gbc.writeMem(0xa13e, { 0x9 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x4a22, gbc.sp());
        EXPECT(0xa13f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xa13e));
        // 09 001F
        gbc.setState(0x8a87, 0xd949, 0xb880, 0x7f70, 0xd7a9, 0x83e6, 0x0, 0x1);
        gbc.writeMem(0x8a87, { 0x9 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xd949, gbc.sp());
        EXPECT(0x8a88, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0x8a87));
        // 09 0020
        gbc.setState(0x78b0, 0xbf5b, 0xb5b0, 0x5b77, 0x7861, 0x4717, 0x1, 0x0);
        gbc.writeMem(0x78b0, { 0x9 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xbf5b, gbc.sp());
        EXPECT(0x78b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 09 0021
        gbc.setState(0x9ab0, 0x23c, 0xff80, 0xa025, 0xa303, 0x94a5, 0x0, 0x0);
        gbc.writeMem(0x9ab0, { 0x9 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x23c, gbc.sp());
        EXPECT(0x9ab1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0x9ab0));
        // 09 0022
        gbc.setState(0xdc87, 0x297d, 0xd5c0, 0x1539, 0x177b, 0xbf79, 0x0, 0x1);
        gbc.writeMem(0xdc87, { 0x9 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x297d, gbc.sp());
        EXPECT(0xdc88, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xdc87));
        // 09 0023
        gbc.setState(0x8b0, 0x4b9f, 0xb220, 0x8032, 0x17d2, 0x4bdc, 0x1, 0x1);
        gbc.writeMem(0x8b0, { 0x9 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x4b9f, gbc.sp());
        EXPECT(0x8b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 09 0024
        gbc.setState(0x4d89, 0xf29e, 0x69a0, 0x23cf, 0xda22, 0x7299, 0x0, 0x1);
        gbc.writeMem(0x4d89, { 0x9 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xf29e, gbc.sp());
        EXPECT(0x4d8a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 09 0025
        gbc.setState(0x17bf, 0x3359, 0xf0a0, 0xc01, 0x4583, 0xab6b, 0x0, 0x0);
        gbc.writeMem(0x17bf, { 0x9 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x3359, gbc.sp());
        EXPECT(0x17c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 09 0026
        gbc.setState(0x1ed1, 0x80ea, 0xbb50, 0x321, 0x6ea1, 0x16bd, 0x0, 0x1);
        gbc.writeMem(0x1ed1, { 0x9 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x80ea, gbc.sp());
        EXPECT(0x1ed2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 09 0027
        gbc.setState(0xe3d2, 0x5391, 0x7d30, 0xeaa2, 0xc63, 0xb189, 0x1, 0x0);
        gbc.writeMem(0xe3d2, { 0x9 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x5391, gbc.sp());
        EXPECT(0xe3d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xe3d2));
        // 09 0028
        gbc.setState(0xaa0e, 0xae98, 0x360, 0x4e1b, 0x84a8, 0xa66b, 0x0, 0x1);
        gbc.writeMem(0xaa0e, { 0x9 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xae98, gbc.sp());
        EXPECT(0xaa0f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xaa0e));
        // 09 0029
        gbc.setState(0xb6f8, 0x3a32, 0x4650, 0x3424, 0xac2e, 0x9596, 0x1, 0x0);
        gbc.writeMem(0xb6f8, { 0x9 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x3a32, gbc.sp());
        EXPECT(0xb6f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xb6f8));
        // 09 002A
        gbc.setState(0x84b1, 0x5c36, 0xdb00, 0xf3da, 0xa998, 0x4c85, 0x0, 0x0);
        gbc.writeMem(0x84b1, { 0x9 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x5c36, gbc.sp());
        EXPECT(0x84b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0x84b1));
        // 09 002B
        gbc.setState(0x73c7, 0xe3e, 0xe9d0, 0xf25, 0x6938, 0x3668, 0x0, 0x0);
        gbc.writeMem(0x73c7, { 0x9 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xe3e, gbc.sp());
        EXPECT(0x73c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 09 002C
        gbc.setState(0x9545, 0xf257, 0x2580, 0x4ded, 0xc91b, 0x5d88, 0x0, 0x1);
        gbc.writeMem(0x9545, { 0x9 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xf257, gbc.sp());
        EXPECT(0x9546, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0x9545));
        // 09 002D
        gbc.setState(0x27a8, 0xcc1c, 0x890, 0x2d3d, 0xab0a, 0x263f, 0x1, 0x0);
        gbc.writeMem(0x27a8, { 0x9 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xcc1c, gbc.sp());
        EXPECT(0x27a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 09 002F
        gbc.setState(0x8485, 0x468b, 0x7600, 0xce04, 0xdb05, 0x239d, 0x0, 0x1);
        gbc.writeMem(0x8485, { 0x9 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x468b, gbc.sp());
        EXPECT(0x8486, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0x8485));
        // 09 0030
        gbc.setState(0x4c6c, 0x3470, 0xfd70, 0x1c1e, 0x4b6a, 0x309a, 0x0, 0x0);
        gbc.writeMem(0x4c6c, { 0x9 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x3470, gbc.sp());
        EXPECT(0x4c6d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 09 0031
        gbc.setState(0x978d, 0x2df5, 0x1100, 0x9cee, 0xc52e, 0x35a5, 0x0, 0x0);
        gbc.writeMem(0x978d, { 0x9 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x2df5, gbc.sp());
        EXPECT(0x978e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0x978d));
        // 09 0032
        gbc.setState(0x4719, 0x7fc7, 0xbae0, 0xf9f8, 0xb859, 0xae8e, 0x1, 0x0);
        gbc.writeMem(0x4719, { 0x9 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x7fc7, gbc.sp());
        EXPECT(0x471a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 09 0033
        gbc.setState(0xe2d3, 0x81e4, 0x8f20, 0x704c, 0xc93a, 0x1382, 0x1, 0x0);
        gbc.writeMem(0xe2d3, { 0x9 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x81e4, gbc.sp());
        EXPECT(0xe2d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xe2d3));
        // 09 0034
        gbc.setState(0x8186, 0x5aa7, 0x8a40, 0xc20c, 0x6499, 0xfd6f, 0x1, 0x1);
        gbc.writeMem(0x8186, { 0x9 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x5aa7, gbc.sp());
        EXPECT(0x8187, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0x8186));
        // 09 0035
        gbc.setState(0xc2af, 0xf7c9, 0x73e0, 0x4bf1, 0xb46a, 0xece3, 0x0, 0x1);
        gbc.writeMem(0xc2af, { 0x9 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xf7c9, gbc.sp());
        EXPECT(0xc2b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xc2af));
        // 09 0036
        gbc.setState(0xb4d, 0xe3d1, 0x85f0, 0xed89, 0x647c, 0x96e8, 0x1, 0x1);
        gbc.writeMem(0xb4d, { 0x9 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xe3d1, gbc.sp());
        EXPECT(0xb4e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 09 0037
        gbc.setState(0x73aa, 0x5083, 0xab70, 0x7116, 0xc279, 0x4b91, 0x1, 0x0);
        gbc.writeMem(0x73aa, { 0x9 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x5083, gbc.sp());
        EXPECT(0x73ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 09 0038
        gbc.setState(0x2c2d, 0x8c3d, 0xf340, 0x1a1c, 0xa293, 0xf4b4, 0x0, 0x0);
        gbc.writeMem(0x2c2d, { 0x9 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x8c3d, gbc.sp());
        EXPECT(0x2c2e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 09 0039
        gbc.setState(0xe1d8, 0x5f1d, 0x6d30, 0x7203, 0x17cc, 0x73b3, 0x0, 0x1);
        gbc.writeMem(0xe1d8, { 0x9 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x5f1d, gbc.sp());
        EXPECT(0xe1d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xe1d8));
        // 09 003A
        gbc.setState(0xa383, 0x5c9b, 0x4370, 0x3ae1, 0x9fd9, 0x95fb, 0x0, 0x0);
        gbc.writeMem(0xa383, { 0x9 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x5c9b, gbc.sp());
        EXPECT(0xa384, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xa383));
        // 09 003B
        gbc.setState(0x1049, 0x3778, 0x4d80, 0xc055, 0xccd6, 0x820d, 0x1, 0x0);
        gbc.writeMem(0x1049, { 0x9 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x3778, gbc.sp());
        EXPECT(0x104a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 09 003C
        gbc.setState(0xd7c6, 0xcad0, 0x9260, 0xe81c, 0x5e72, 0xcabb, 0x1, 0x0);
        gbc.writeMem(0xd7c6, { 0x9 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xcad0, gbc.sp());
        EXPECT(0xd7c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xd7c6));
        // 09 003D
        gbc.setState(0xb61f, 0x463d, 0xa420, 0x7f56, 0x89c0, 0x5d41, 0x0, 0x0);
        gbc.writeMem(0xb61f, { 0x9 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x463d, gbc.sp());
        EXPECT(0xb620, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xb61f));
        // 09 003E
        gbc.setState(0xbb47, 0x3ee9, 0x39b0, 0xb461, 0x31bb, 0x58c1, 0x0, 0x1);
        gbc.writeMem(0xbb47, { 0x9 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x3ee9, gbc.sp());
        EXPECT(0xbb48, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xbb47));
        // 09 003F
        gbc.setState(0x6487, 0xfcbb, 0x1e60, 0x2618, 0xb1c4, 0x9591, 0x0, 0x0);
        gbc.writeMem(0x6487, { 0x9 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xfcbb, gbc.sp());
        EXPECT(0x6488, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 09 0040
        gbc.setState(0x7bd2, 0x1e5, 0x7c0, 0x579c, 0x10cf, 0x1d8c, 0x1, 0x1);
        gbc.writeMem(0x7bd2, { 0x9 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x1e5, gbc.sp());
        EXPECT(0x7bd3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 09 0041
        gbc.setState(0x7c77, 0xec33, 0xd100, 0x7702, 0xfca1, 0xc533, 0x0, 0x0);
        gbc.writeMem(0x7c77, { 0x9 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xec33, gbc.sp());
        EXPECT(0x7c78, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 09 0042
        gbc.setState(0xcb28, 0xc505, 0x5de0, 0xec95, 0xd584, 0x7b3f, 0x0, 0x1);
        gbc.writeMem(0xcb28, { 0x9 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xc505, gbc.sp());
        EXPECT(0xcb29, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xcb28));
        // 09 0043
        gbc.setState(0xc4e7, 0x4918, 0x7210, 0x6eb6, 0xa115, 0xca4e, 0x1, 0x0);
        gbc.writeMem(0xc4e7, { 0x9 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x4918, gbc.sp());
        EXPECT(0xc4e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xc4e7));
        // 09 0044
        gbc.setState(0xddf5, 0xd137, 0xaa60, 0x2702, 0x8c81, 0x199a, 0x0, 0x0);
        gbc.writeMem(0xddf5, { 0x9 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xd137, gbc.sp());
        EXPECT(0xddf6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xddf5));
        // 09 0045
        gbc.setState(0xf83, 0x6623, 0x9fa0, 0x3f71, 0x8dcb, 0xcfb0, 0x0, 0x0);
        gbc.writeMem(0xf83, { 0x9 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x6623, gbc.sp());
        EXPECT(0xf84, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 09 0046
        gbc.setState(0xd86d, 0xe0f5, 0xd4a0, 0x915e, 0x9fba, 0x7fb9, 0x0, 0x0);
        gbc.writeMem(0xd86d, { 0x9 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xe0f5, gbc.sp());
        EXPECT(0xd86e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xd86d));
        // 09 0047
        gbc.setState(0x9699, 0xb3d4, 0x83a0, 0x5674, 0x76ff, 0xbe26, 0x0, 0x1);
        gbc.writeMem(0x9699, { 0x9 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xb3d4, gbc.sp());
        EXPECT(0x969a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0x9699));
        // 09 0048
        gbc.setState(0xa7d8, 0x7b10, 0x2c50, 0x1813, 0xe06e, 0x326d, 0x1, 0x1);
        gbc.writeMem(0xa7d8, { 0x9 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x7b10, gbc.sp());
        EXPECT(0xa7d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xa7d8));
        // 09 0049
        gbc.setState(0x57fc, 0x7e02, 0xb190, 0x2a96, 0x56eb, 0x5fb9, 0x0, 0x0);
        gbc.writeMem(0x57fc, { 0x9 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x7e02, gbc.sp());
        EXPECT(0x57fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 09 004A
        gbc.setState(0xbf12, 0xd161, 0x7640, 0x56e0, 0x6095, 0x9ea7, 0x1, 0x0);
        gbc.writeMem(0xbf12, { 0x9 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xd161, gbc.sp());
        EXPECT(0xbf13, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xbf12));
        // 09 004B
        gbc.setState(0x8e54, 0xbbf8, 0xc8f0, 0x5da2, 0x7a84, 0x9fba, 0x1, 0x0);
        gbc.writeMem(0x8e54, { 0x9 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xbbf8, gbc.sp());
        EXPECT(0x8e55, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0x8e54));
        // 09 004C
        gbc.setState(0xd6f3, 0xa506, 0x14f0, 0xa1ca, 0x25c5, 0xc907, 0x1, 0x0);
        gbc.writeMem(0xd6f3, { 0x9 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xa506, gbc.sp());
        EXPECT(0xd6f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xd6f3));
        // 09 004D
        gbc.setState(0x683b, 0x83d5, 0xb0c0, 0x6ff6, 0x5d25, 0x811, 0x1, 0x1);
        gbc.writeMem(0x683b, { 0x9 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x83d5, gbc.sp());
        EXPECT(0x683c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 09 004E
        gbc.setState(0x2ada, 0xee18, 0x7a00, 0xe352, 0x8423, 0xf030, 0x1, 0x1);
        gbc.writeMem(0x2ada, { 0x9 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xee18, gbc.sp());
        EXPECT(0x2adb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 09 004F
        gbc.setState(0x31d4, 0xdecf, 0x45e0, 0xb4f1, 0xb2d, 0x749a, 0x0, 0x1);
        gbc.writeMem(0x31d4, { 0x9 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xdecf, gbc.sp());
        EXPECT(0x31d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 09 0050
        gbc.setState(0xd16, 0x371e, 0xc990, 0x47ea, 0x2c47, 0x20f7, 0x0, 0x0);
        gbc.writeMem(0xd16, { 0x9 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x371e, gbc.sp());
        EXPECT(0xd17, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 09 0051
        gbc.setState(0xb3dd, 0x674f, 0xe140, 0xec55, 0x908a, 0x8ba2, 0x0, 0x0);
        gbc.writeMem(0xb3dd, { 0x9 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x674f, gbc.sp());
        EXPECT(0xb3de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xb3dd));
        // 09 0052
        gbc.setState(0xcfa0, 0x11a9, 0x9c00, 0x644, 0xa730, 0x72d, 0x0, 0x1);
        gbc.writeMem(0xcfa0, { 0x9 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x11a9, gbc.sp());
        EXPECT(0xcfa1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xcfa0));
        // 09 0053
        gbc.setState(0xa404, 0xb32b, 0x9e20, 0x3041, 0x18d6, 0x6643, 0x0, 0x1);
        gbc.writeMem(0xa404, { 0x9 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xb32b, gbc.sp());
        EXPECT(0xa405, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xa404));
        // 09 0054
        gbc.setState(0x65b3, 0x98b5, 0xbde0, 0x946c, 0xda69, 0x31d6, 0x1, 0x1);
        gbc.writeMem(0x65b3, { 0x9 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x98b5, gbc.sp());
        EXPECT(0x65b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 09 0055
        gbc.setState(0x40bb, 0xfab6, 0x8160, 0x7f8a, 0x19d1, 0xfc19, 0x0, 0x0);
        gbc.writeMem(0x40bb, { 0x9 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xfab6, gbc.sp());
        EXPECT(0x40bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 09 0056
        gbc.setState(0xb7c1, 0x6dc0, 0x7a00, 0xba91, 0xe4b5, 0x19ca, 0x1, 0x0);
        gbc.writeMem(0xb7c1, { 0x9 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x6dc0, gbc.sp());
        EXPECT(0xb7c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xb7c1));
        // 09 0057
        gbc.setState(0xb65c, 0x6892, 0xb880, 0xa029, 0xeaef, 0x1855, 0x0, 0x0);
        gbc.writeMem(0xb65c, { 0x9 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x6892, gbc.sp());
        EXPECT(0xb65d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xb65c));
        // 09 0058
        gbc.setState(0x48, 0xc8a0, 0x8600, 0x6da7, 0x6a5e, 0x549f, 0x0, 0x1);
        gbc.writeMem(0x48, { 0x9 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xc8a0, gbc.sp());
        EXPECT(0x49, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 09 005A
        gbc.setState(0x7f79, 0xd9af, 0x53a0, 0xc981, 0x99c2, 0xf5d1, 0x1, 0x1);
        gbc.writeMem(0x7f79, { 0x9 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xd9af, gbc.sp());
        EXPECT(0x7f7a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 09 005B
        gbc.setState(0x2951, 0xd800, 0xeb50, 0x1cce, 0x5ec4, 0x1f30, 0x0, 0x1);
        gbc.writeMem(0x2951, { 0x9 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xd800, gbc.sp());
        EXPECT(0x2952, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 09 005C
        gbc.setState(0x196e, 0xf60b, 0xf0f0, 0xe0d8, 0x8a19, 0x1c6e, 0x0, 0x0);
        gbc.writeMem(0x196e, { 0x9 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xf60b, gbc.sp());
        EXPECT(0x196f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 09 005D
        gbc.setState(0xe6cf, 0x2f28, 0x6850, 0x63d1, 0xf881, 0x622a, 0x1, 0x1);
        gbc.writeMem(0xe6cf, { 0x9 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x2f28, gbc.sp());
        EXPECT(0xe6d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xe6cf));
        // 09 005E
        gbc.setState(0x159b, 0xb851, 0x7580, 0x42ef, 0x9349, 0x5ddc, 0x0, 0x1);
        gbc.writeMem(0x159b, { 0x9 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xb851, gbc.sp());
        EXPECT(0x159c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 09 005F
        gbc.setState(0x9f94, 0xe862, 0x8ec0, 0x9496, 0xf4f9, 0x7042, 0x1, 0x1);
        gbc.writeMem(0x9f94, { 0x9 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xe862, gbc.sp());
        EXPECT(0x9f95, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0x9f94));
        // 09 0060
        gbc.setState(0x8e63, 0xde7a, 0x68d0, 0xaac, 0xf3a0, 0xaab4, 0x1, 0x0);
        gbc.writeMem(0x8e63, { 0x9 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xde7a, gbc.sp());
        EXPECT(0x8e64, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0x8e63));
        // 09 0062
        gbc.setState(0x3ded, 0x25d4, 0x5890, 0xf210, 0x730c, 0xfa56, 0x1, 0x1);
        gbc.writeMem(0x3ded, { 0x9 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x25d4, gbc.sp());
        EXPECT(0x3dee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 09 0063
        gbc.setState(0x293c, 0x38e2, 0xf330, 0x6fb6, 0x6fc, 0x8090, 0x1, 0x1);
        gbc.writeMem(0x293c, { 0x9 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x38e2, gbc.sp());
        EXPECT(0x293d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 09 0064
        gbc.setState(0x2225, 0x8b0c, 0xa950, 0x21f3, 0xd39c, 0x3b66, 0x1, 0x0);
        gbc.writeMem(0x2225, { 0x9 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x8b0c, gbc.sp());
        EXPECT(0x2226, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 09 0065
        gbc.setState(0x13ff, 0x771, 0x1a20, 0x9829, 0xc856, 0x10, 0x1, 0x0);
        gbc.writeMem(0x13ff, { 0x9 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x771, gbc.sp());
        EXPECT(0x1400, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 09 0066
        gbc.setState(0x1aef, 0x8ade, 0x1960, 0x73ab, 0xe24b, 0x7824, 0x1, 0x1);
        gbc.writeMem(0x1aef, { 0x9 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x8ade, gbc.sp());
        EXPECT(0x1af0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 09 0067
        gbc.setState(0x8bcf, 0x62bb, 0x45a0, 0x5b24, 0xcb8, 0xa7ea, 0x0, 0x0);
        gbc.writeMem(0x8bcf, { 0x9 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x62bb, gbc.sp());
        EXPECT(0x8bd0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0x8bcf));
        // 09 0068
        gbc.setState(0x3d3f, 0xd552, 0x4a30, 0x905, 0x48b, 0x4bb2, 0x1, 0x1);
        gbc.writeMem(0x3d3f, { 0x9 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xd552, gbc.sp());
        EXPECT(0x3d40, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 09 0069
        gbc.setState(0x4d7e, 0x2287, 0x5de0, 0xf7dc, 0x51e1, 0x2005, 0x0, 0x1);
        gbc.writeMem(0x4d7e, { 0x9 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x2287, gbc.sp());
        EXPECT(0x4d7f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 09 006A
        gbc.setState(0x5984, 0x60c8, 0x2fd0, 0xfee6, 0xb3f3, 0x18ec, 0x0, 0x1);
        gbc.writeMem(0x5984, { 0x9 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x60c8, gbc.sp());
        EXPECT(0x5985, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 09 006B
        gbc.setState(0x94d7, 0x38f3, 0x89d0, 0x7def, 0xdce2, 0xb704, 0x0, 0x0);
        gbc.writeMem(0x94d7, { 0x9 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x38f3, gbc.sp());
        EXPECT(0x94d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0x94d7));
        // 09 006C
        gbc.setState(0x5012, 0xe375, 0x86c0, 0xba9, 0xde27, 0x1408, 0x1, 0x0);
        gbc.writeMem(0x5012, { 0x9 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xe375, gbc.sp());
        EXPECT(0x5013, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 09 006D
        gbc.setState(0xb272, 0xda93, 0x5760, 0x392e, 0x8dcc, 0xc5eb, 0x1, 0x0);
        gbc.writeMem(0xb272, { 0x9 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xda93, gbc.sp());
        EXPECT(0xb273, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xb272));
        // 09 006E
        gbc.setState(0xd58, 0x51bb, 0xf0b0, 0x2a49, 0x4e8a, 0xf7f1, 0x1, 0x1);
        gbc.writeMem(0xd58, { 0x9 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x51bb, gbc.sp());
        EXPECT(0xd59, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 09 006F
        gbc.setState(0xcc1b, 0x2c8f, 0x9970, 0xf6c8, 0x607a, 0xa6e3, 0x1, 0x1);
        gbc.writeMem(0xcc1b, { 0x9 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x2c8f, gbc.sp());
        EXPECT(0xcc1c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xcc1b));
        // 09 0070
        gbc.setState(0x6521, 0xd591, 0x7af0, 0x76ce, 0x3e87, 0x5ecf, 0x1, 0x1);
        gbc.writeMem(0x6521, { 0x9 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xd591, gbc.sp());
        EXPECT(0x6522, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 09 0071
        gbc.setState(0xd768, 0xaabb, 0x2070, 0xc57, 0x8421, 0xc6dc, 0x0, 0x1);
        gbc.writeMem(0xd768, { 0x9 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xaabb, gbc.sp());
        EXPECT(0xd769, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xd768));
        // 09 0072
        gbc.setState(0xaa28, 0x7f8d, 0x5360, 0x9ba6, 0x7d22, 0x1d50, 0x1, 0x0);
        gbc.writeMem(0xaa28, { 0x9 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x7f8d, gbc.sp());
        EXPECT(0xaa29, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xaa28));
        // 09 0073
        gbc.setState(0xae5a, 0x1c34, 0x6980, 0xcf9c, 0x1c68, 0xf0b6, 0x1, 0x1);
        gbc.writeMem(0xae5a, { 0x9 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x1c34, gbc.sp());
        EXPECT(0xae5b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xae5a));
        // 09 0074
        gbc.setState(0xc863, 0x741a, 0xa1e0, 0xe4f8, 0x6500, 0xc107, 0x0, 0x0);
        gbc.writeMem(0xc863, { 0x9 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x741a, gbc.sp());
        EXPECT(0xc864, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xc863));
        // 09 0075
        gbc.setState(0x2783, 0x3a36, 0x3120, 0x78b2, 0xd4e, 0x24e7, 0x0, 0x0);
        gbc.writeMem(0x2783, { 0x9 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x3a36, gbc.sp());
        EXPECT(0x2784, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 09 0076
        gbc.setState(0x8620, 0x5421, 0x2310, 0x18d1, 0x3ba4, 0x5119, 0x0, 0x0);
        gbc.writeMem(0x8620, { 0x9 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x5421, gbc.sp());
        EXPECT(0x8621, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0x8620));
        // 09 0077
        gbc.setState(0x74e6, 0x5bce, 0x1460, 0xc8ec, 0x5905, 0xb971, 0x0, 0x1);
        gbc.writeMem(0x74e6, { 0x9 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x5bce, gbc.sp());
        EXPECT(0x74e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 09 0078
        gbc.setState(0xbe, 0xa0e1, 0x3d10, 0x8ba6, 0x811f, 0x2206, 0x1, 0x1);
        gbc.writeMem(0xbe, { 0x9 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xa0e1, gbc.sp());
        EXPECT(0xbf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 09 0079
        gbc.setState(0xa0d0, 0x814d, 0xe720, 0xd7f4, 0x10cd, 0xd1e8, 0x1, 0x1);
        gbc.writeMem(0xa0d0, { 0x9 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x814d, gbc.sp());
        EXPECT(0xa0d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xa0d0));
        // 09 007A
        gbc.setState(0xe1d2, 0xe1f2, 0x15e0, 0xf76d, 0x41f8, 0x4693, 0x0, 0x0);
        gbc.writeMem(0xe1d2, { 0x9 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xe1f2, gbc.sp());
        EXPECT(0xe1d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xe1d2));
        // 09 007B
        gbc.setState(0x2965, 0x2d52, 0x1390, 0x6d5c, 0xe913, 0x74fe, 0x1, 0x1);
        gbc.writeMem(0x2965, { 0x9 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x2d52, gbc.sp());
        EXPECT(0x2966, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 09 007C
        gbc.setState(0x296d, 0x3b51, 0xee10, 0xfa9c, 0x4521, 0xc7d1, 0x0, 0x1);
        gbc.writeMem(0x296d, { 0x9 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x3b51, gbc.sp());
        EXPECT(0x296e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 09 007D
        gbc.setState(0x7f2, 0xdd72, 0xe750, 0xced5, 0x3c6c, 0x9b93, 0x1, 0x0);
        gbc.writeMem(0x7f2, { 0x9 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xdd72, gbc.sp());
        EXPECT(0x7f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 09 007E
        gbc.setState(0x9e0b, 0x8003, 0x9e30, 0x8ac8, 0x18cf, 0xead8, 0x0, 0x1);
        gbc.writeMem(0x9e0b, { 0x9 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x8003, gbc.sp());
        EXPECT(0x9e0c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0x9e0b));
        // 09 007F
        gbc.setState(0x7d35, 0xac35, 0xf010, 0xe4d6, 0xce49, 0x7ed6, 0x1, 0x0);
        gbc.writeMem(0x7d35, { 0x9 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xac35, gbc.sp());
        EXPECT(0x7d36, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 09 0080
        gbc.setState(0xd701, 0x1e44, 0x65e0, 0xa06a, 0x4d85, 0xacbb, 0x0, 0x0);
        gbc.writeMem(0xd701, { 0x9 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x1e44, gbc.sp());
        EXPECT(0xd702, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xd701));
        // 09 0081
        gbc.setState(0x86f9, 0xb0c1, 0x5c0, 0xaa24, 0x4baa, 0x404, 0x1, 0x0);
        gbc.writeMem(0x86f9, { 0x9 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xb0c1, gbc.sp());
        EXPECT(0x86fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0x86f9));
        // 09 0082
        gbc.setState(0xbfe, 0x8cde, 0xcbd0, 0x502c, 0xc21d, 0xe472, 0x0, 0x0);
        gbc.writeMem(0xbfe, { 0x9 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x8cde, gbc.sp());
        EXPECT(0xbff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 09 0083
        gbc.setState(0x6e7a, 0x57e8, 0xa700, 0xfa38, 0xf41a, 0xab32, 0x0, 0x0);
        gbc.writeMem(0x6e7a, { 0x9 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x57e8, gbc.sp());
        EXPECT(0x6e7b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 09 0084
        gbc.setState(0x8618, 0x8826, 0x74e0, 0x3f27, 0xec1, 0xbe19, 0x0, 0x1);
        gbc.writeMem(0x8618, { 0x9 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x8826, gbc.sp());
        EXPECT(0x8619, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0x8618));
        // 09 0085
        gbc.setState(0x3f8b, 0xf865, 0xe250, 0xaa07, 0x44c8, 0x905a, 0x0, 0x1);
        gbc.writeMem(0x3f8b, { 0x9 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xf865, gbc.sp());
        EXPECT(0x3f8c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 09 0086
        gbc.setState(0x9171, 0xf0fd, 0xc110, 0x36ea, 0x9a7, 0x67fc, 0x1, 0x1);
        gbc.writeMem(0x9171, { 0x9 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xf0fd, gbc.sp());
        EXPECT(0x9172, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0x9171));
        // 09 0087
        gbc.setState(0x18eb, 0xb6d0, 0x2040, 0x7c2a, 0x5817, 0xc00a, 0x1, 0x1);
        gbc.writeMem(0x18eb, { 0x9 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xb6d0, gbc.sp());
        EXPECT(0x18ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 09 0088
        gbc.setState(0x6473, 0x1e76, 0x2840, 0xea63, 0x98d1, 0xae2a, 0x0, 0x1);
        gbc.writeMem(0x6473, { 0x9 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x1e76, gbc.sp());
        EXPECT(0x6474, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 09 0089
        gbc.setState(0x2a68, 0x672b, 0x9950, 0x5737, 0x88b3, 0x51cf, 0x1, 0x0);
        gbc.writeMem(0x2a68, { 0x9 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x672b, gbc.sp());
        EXPECT(0x2a69, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 09 008A
        gbc.setState(0xe249, 0xaea3, 0x3b80, 0x2089, 0x2d51, 0xf8fb, 0x1, 0x0);
        gbc.writeMem(0xe249, { 0x9 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xaea3, gbc.sp());
        EXPECT(0xe24a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xe249));
        // 09 008B
        gbc.setState(0x6bd, 0xa63a, 0x6940, 0x5205, 0x1c3f, 0x10a5, 0x1, 0x0);
        gbc.writeMem(0x6bd, { 0x9 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xa63a, gbc.sp());
        EXPECT(0x6be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 09 008C
        gbc.setState(0xb41c, 0x254b, 0xcb30, 0x567f, 0x2dbc, 0x637f, 0x1, 0x0);
        gbc.writeMem(0xb41c, { 0x9 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x254b, gbc.sp());
        EXPECT(0xb41d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xb41c));
        // 09 008D
        gbc.setState(0x62f7, 0x7e21, 0x1850, 0xf50c, 0x6559, 0x20ae, 0x0, 0x0);
        gbc.writeMem(0x62f7, { 0x9 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x7e21, gbc.sp());
        EXPECT(0x62f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 09 008E
        gbc.setState(0xba1f, 0xf34, 0xa540, 0x4d60, 0xd3cb, 0xb373, 0x0, 0x1);
        gbc.writeMem(0xba1f, { 0x9 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xf34, gbc.sp());
        EXPECT(0xba20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xba1f));
        // 09 008F
        gbc.setState(0x3b14, 0x2485, 0xa520, 0x2476, 0x3ef4, 0xdab3, 0x0, 0x0);
        gbc.writeMem(0x3b14, { 0x9 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x2485, gbc.sp());
        EXPECT(0x3b15, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 09 0090
        gbc.setState(0xcf21, 0x61e3, 0x910, 0x73e0, 0x8065, 0x7e1b, 0x0, 0x1);
        gbc.writeMem(0xcf21, { 0x9 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x61e3, gbc.sp());
        EXPECT(0xcf22, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xcf21));
        // 09 0091
        gbc.setState(0x657c, 0xcb2c, 0x11e0, 0xb82d, 0x34d3, 0xfa6, 0x0, 0x0);
        gbc.writeMem(0x657c, { 0x9 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xcb2c, gbc.sp());
        EXPECT(0x657d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 09 0092
        gbc.setState(0x48cf, 0xac36, 0x37d0, 0xdd3e, 0xdb7d, 0xfab, 0x1, 0x0);
        gbc.writeMem(0x48cf, { 0x9 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xac36, gbc.sp());
        EXPECT(0x48d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 09 0093
        gbc.setState(0x9a5b, 0xf6aa, 0xe8f0, 0x6037, 0xd055, 0xf8ca, 0x0, 0x0);
        gbc.writeMem(0x9a5b, { 0x9 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xf6aa, gbc.sp());
        EXPECT(0x9a5c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0x9a5b));
        // 09 0094
        gbc.setState(0x309e, 0xcdff, 0xc270, 0x874c, 0xf5c5, 0x6797, 0x0, 0x0);
        gbc.writeMem(0x309e, { 0x9 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xcdff, gbc.sp());
        EXPECT(0x309f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 09 0095
        gbc.setState(0x979d, 0x1f6, 0x63f0, 0x1d4f, 0x62c0, 0x2ef2, 0x1, 0x0);
        gbc.writeMem(0x979d, { 0x9 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x1f6, gbc.sp());
        EXPECT(0x979e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0x979d));
        // 09 0097
        gbc.setState(0x6abf, 0xce, 0x4b30, 0x5ca3, 0xab88, 0x894c, 0x1, 0x1);
        gbc.writeMem(0x6abf, { 0x9 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xce, gbc.sp());
        EXPECT(0x6ac0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 09 0098
        gbc.setState(0xc4de, 0x6ab4, 0x4930, 0x4ccf, 0xe3a0, 0x84d4, 0x0, 0x1);
        gbc.writeMem(0xc4de, { 0x9 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x6ab4, gbc.sp());
        EXPECT(0xc4df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xc4de));
        // 09 0099
        gbc.setState(0x4cd8, 0x6131, 0xc510, 0x389e, 0x1863, 0x5e36, 0x1, 0x1);
        gbc.writeMem(0x4cd8, { 0x9 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x6131, gbc.sp());
        EXPECT(0x4cd9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 09 009A
        gbc.setState(0x4de1, 0x72bb, 0x1260, 0x98cd, 0x7be4, 0x4539, 0x1, 0x1);
        gbc.writeMem(0x4de1, { 0x9 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x72bb, gbc.sp());
        EXPECT(0x4de2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 09 009B
        gbc.setState(0x1e0b, 0x6ad8, 0x65a0, 0x3371, 0x8a84, 0x955d, 0x1, 0x1);
        gbc.writeMem(0x1e0b, { 0x9 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x6ad8, gbc.sp());
        EXPECT(0x1e0c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 09 009C
        gbc.setState(0xbada, 0x870e, 0x4270, 0xb8ed, 0xfcd0, 0xdc41, 0x1, 0x0);
        gbc.writeMem(0xbada, { 0x9 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x870e, gbc.sp());
        EXPECT(0xbadb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xbada));
        // 09 009D
        gbc.setState(0x4cdd, 0xb23, 0xb210, 0xe7fc, 0xd17a, 0x6380, 0x0, 0x0);
        gbc.writeMem(0x4cdd, { 0x9 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xb23, gbc.sp());
        EXPECT(0x4cde, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 09 009E
        gbc.setState(0x6076, 0xf572, 0xa880, 0xcff2, 0x8e8e, 0x4567, 0x1, 0x0);
        gbc.writeMem(0x6076, { 0x9 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xf572, gbc.sp());
        EXPECT(0x6077, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 09 009F
        gbc.setState(0xbaaa, 0x180e, 0xedb0, 0xe5cb, 0x96c5, 0x8379, 0x1, 0x0);
        gbc.writeMem(0xbaaa, { 0x9 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x180e, gbc.sp());
        EXPECT(0xbaab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xbaaa));
        // 09 00A1
        gbc.setState(0x2b74, 0x89dd, 0xebe0, 0x6a15, 0xb0d1, 0xd386, 0x0, 0x1);
        gbc.writeMem(0x2b74, { 0x9 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x89dd, gbc.sp());
        EXPECT(0x2b75, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 09 00A2
        gbc.setState(0x29b9, 0xa048, 0x1a00, 0x6499, 0x7d86, 0x40fc, 0x0, 0x1);
        gbc.writeMem(0x29b9, { 0x9 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xa048, gbc.sp());
        EXPECT(0x29ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 09 00A3
        gbc.setState(0xbf3, 0x9d06, 0x3070, 0xb98a, 0x360, 0xdd09, 0x0, 0x1);
        gbc.writeMem(0xbf3, { 0x9 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x9d06, gbc.sp());
        EXPECT(0xbf4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 09 00A4
        gbc.setState(0xfd4, 0xd30, 0xe080, 0x3e5e, 0xe3ed, 0xe261, 0x0, 0x1);
        gbc.writeMem(0xfd4, { 0x9 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xd30, gbc.sp());
        EXPECT(0xfd5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 09 00A5
        gbc.setState(0x50d8, 0x4855, 0x5c10, 0x1cad, 0x8ec6, 0xffe1, 0x0, 0x0);
        gbc.writeMem(0x50d8, { 0x9 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x4855, gbc.sp());
        EXPECT(0x50d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 09 00A6
        gbc.setState(0x8a9, 0xe06f, 0x40b0, 0x201c, 0x70cf, 0x8653, 0x1, 0x1);
        gbc.writeMem(0x8a9, { 0x9 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xe06f, gbc.sp());
        EXPECT(0x8aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 09 00A7
        gbc.setState(0xddc, 0x61d8, 0xce20, 0x39b9, 0x43a0, 0xa137, 0x1, 0x1);
        gbc.writeMem(0xddc, { 0x9 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x61d8, gbc.sp());
        EXPECT(0xddd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 09 00A8
        gbc.setState(0x356b, 0x1145, 0x1d30, 0xfc25, 0x11be, 0x804e, 0x0, 0x1);
        gbc.writeMem(0x356b, { 0x9 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x1145, gbc.sp());
        EXPECT(0x356c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 09 00A9
        gbc.setState(0x5133, 0x28fb, 0xaff0, 0x3ba0, 0x9ec9, 0x8a76, 0x1, 0x1);
        gbc.writeMem(0x5133, { 0x9 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x28fb, gbc.sp());
        EXPECT(0x5134, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 09 00AA
        gbc.setState(0x7014, 0x18a9, 0x2ad0, 0xeccf, 0x3dfa, 0xd65c, 0x0, 0x0);
        gbc.writeMem(0x7014, { 0x9 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x18a9, gbc.sp());
        EXPECT(0x7015, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 09 00AB
        gbc.setState(0xd126, 0xaddb, 0x1450, 0xf007, 0xafad, 0x88cb, 0x1, 0x1);
        gbc.writeMem(0xd126, { 0x9 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xaddb, gbc.sp());
        EXPECT(0xd127, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xd126));
        // 09 00AC
        gbc.setState(0xdd8a, 0xa325, 0xea10, 0x9f55, 0x5b2f, 0x35ae, 0x1, 0x0);
        gbc.writeMem(0xdd8a, { 0x9 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xa325, gbc.sp());
        EXPECT(0xdd8b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xdd8a));
        // 09 00AD
        gbc.setState(0xa2ca, 0x7cf1, 0x10a0, 0x650b, 0x9a15, 0x2686, 0x1, 0x1);
        gbc.writeMem(0xa2ca, { 0x9 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x7cf1, gbc.sp());
        EXPECT(0xa2cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xa2ca));
        // 09 00AE
        gbc.setState(0x1452, 0xd726, 0xde0, 0x99f2, 0x9970, 0xfe9d, 0x0, 0x0);
        gbc.writeMem(0x1452, { 0x9 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xd726, gbc.sp());
        EXPECT(0x1453, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 09 00AF
        gbc.setState(0x5923, 0x31e9, 0x26f0, 0x1090, 0xb029, 0x8dac, 0x0, 0x0);
        gbc.writeMem(0x5923, { 0x9 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x31e9, gbc.sp());
        EXPECT(0x5924, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 09 00B0
        gbc.setState(0x93bc, 0x2c38, 0xad70, 0xf4ab, 0x4e2a, 0x905f, 0x0, 0x1);
        gbc.writeMem(0x93bc, { 0x9 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x2c38, gbc.sp());
        EXPECT(0x93bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0x93bc));
        // 09 00B2
        gbc.setState(0x9d9e, 0x8a0a, 0xdc90, 0xd327, 0x22e, 0xe4e0, 0x1, 0x0);
        gbc.writeMem(0x9d9e, { 0x9 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x8a0a, gbc.sp());
        EXPECT(0x9d9f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0x9d9e));
        // 09 00B3
        gbc.setState(0x6576, 0x39da, 0xcc80, 0x58d0, 0x5352, 0x64e8, 0x1, 0x1);
        gbc.writeMem(0x6576, { 0x9 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x39da, gbc.sp());
        EXPECT(0x6577, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 09 00B4
        gbc.setState(0x63d9, 0x3040, 0x2570, 0xa492, 0xe784, 0x8fb8, 0x0, 0x1);
        gbc.writeMem(0x63d9, { 0x9 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x3040, gbc.sp());
        EXPECT(0x63da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 09 00B5
        gbc.setState(0x825f, 0xc0d, 0x7820, 0x20ca, 0x257a, 0xc305, 0x1, 0x1);
        gbc.writeMem(0x825f, { 0x9 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xc0d, gbc.sp());
        EXPECT(0x8260, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0x825f));
        // 09 00B6
        gbc.setState(0xc9fa, 0xfca1, 0xd360, 0xb343, 0x3503, 0x4707, 0x1, 0x0);
        gbc.writeMem(0xc9fa, { 0x9 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xfca1, gbc.sp());
        EXPECT(0xc9fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xc9fa));
        // 09 00B7
        gbc.setState(0xafbb, 0x542c, 0x8af0, 0xaf82, 0xe6e6, 0x22db, 0x1, 0x0);
        gbc.writeMem(0xafbb, { 0x9 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x542c, gbc.sp());
        EXPECT(0xafbc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xafbb));
        // 09 00B9
        gbc.setState(0xad56, 0xad27, 0x9d70, 0xd211, 0x559f, 0xc0e3, 0x0, 0x0);
        gbc.writeMem(0xad56, { 0x9 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xad27, gbc.sp());
        EXPECT(0xad57, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xad56));
        // 09 00BA
        gbc.setState(0xad53, 0xd8b, 0x83c0, 0x2624, 0xb089, 0xf613, 0x1, 0x0);
        gbc.writeMem(0xad53, { 0x9 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xd8b, gbc.sp());
        EXPECT(0xad54, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xad53));
        // 09 00BB
        gbc.setState(0xa8be, 0x3b83, 0x9b30, 0x19c8, 0x9e65, 0xc142, 0x1, 0x0);
        gbc.writeMem(0xa8be, { 0x9 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x3b83, gbc.sp());
        EXPECT(0xa8bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xa8be));
        // 09 00BC
        gbc.setState(0x30e7, 0x97a7, 0xfce0, 0xd592, 0x7f08, 0xa367, 0x0, 0x0);
        gbc.writeMem(0x30e7, { 0x9 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x97a7, gbc.sp());
        EXPECT(0x30e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 09 00BD
        gbc.setState(0x9e2e, 0xca5d, 0xbd90, 0x59a7, 0x32cf, 0x8600, 0x0, 0x1);
        gbc.writeMem(0x9e2e, { 0x9 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xca5d, gbc.sp());
        EXPECT(0x9e2f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0x9e2e));
        // 09 00BE
        gbc.setState(0x778e, 0x4ca7, 0x9f90, 0x2bb7, 0x8ac6, 0x6e39, 0x0, 0x0);
        gbc.writeMem(0x778e, { 0x9 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x4ca7, gbc.sp());
        EXPECT(0x778f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 09 00BF
        gbc.setState(0x196b, 0x5a11, 0x1c0, 0xe6a0, 0xf41e, 0x443a, 0x0, 0x0);
        gbc.writeMem(0x196b, { 0x9 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x5a11, gbc.sp());
        EXPECT(0x196c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 09 00C0
        gbc.setState(0xc306, 0x7ff8, 0x2bd0, 0xe3c, 0x10f2, 0xafcb, 0x0, 0x1);
        gbc.writeMem(0xc306, { 0x9 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x7ff8, gbc.sp());
        EXPECT(0xc307, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xc306));
        // 09 00C1
        gbc.setState(0xa903, 0x204b, 0x5b60, 0x1f18, 0x6a8b, 0x1bd9, 0x0, 0x1);
        gbc.writeMem(0xa903, { 0x9 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x204b, gbc.sp());
        EXPECT(0xa904, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xa903));
        // 09 00C2
        gbc.setState(0x14a1, 0x841b, 0xa9a0, 0xae01, 0xd4c0, 0xb5e4, 0x0, 0x1);
        gbc.writeMem(0x14a1, { 0x9 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x841b, gbc.sp());
        EXPECT(0x14a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 09 00C3
        gbc.setState(0x6dd0, 0xc618, 0xb7b0, 0x5e2c, 0xab7, 0x8f92, 0x1, 0x0);
        gbc.writeMem(0x6dd0, { 0x9 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xc618, gbc.sp());
        EXPECT(0x6dd1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 09 00C4
        gbc.setState(0x6d15, 0x71eb, 0x3770, 0x5922, 0x91a8, 0xfe9a, 0x1, 0x1);
        gbc.writeMem(0x6d15, { 0x9 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x71eb, gbc.sp());
        EXPECT(0x6d16, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 09 00C5
        gbc.setState(0x67d, 0xd968, 0x5340, 0xc0c9, 0x4734, 0x90f2, 0x0, 0x1);
        gbc.writeMem(0x67d, { 0x9 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xd968, gbc.sp());
        EXPECT(0x67e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 09 00C6
        gbc.setState(0x6a6, 0x5dfd, 0xb280, 0xc58d, 0xbca6, 0xfdd3, 0x1, 0x1);
        gbc.writeMem(0x6a6, { 0x9 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x5dfd, gbc.sp());
        EXPECT(0x6a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 09 00C7
        gbc.setState(0x598e, 0xbf08, 0x7730, 0x180f, 0xb066, 0xb226, 0x0, 0x0);
        gbc.writeMem(0x598e, { 0x9 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xbf08, gbc.sp());
        EXPECT(0x598f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 09 00C8
        gbc.setState(0xa685, 0x157, 0x1240, 0xb514, 0x4b5d, 0x1e5e, 0x0, 0x0);
        gbc.writeMem(0xa685, { 0x9 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x157, gbc.sp());
        EXPECT(0xa686, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xa685));
        // 09 00C9
        gbc.setState(0x922e, 0xec6b, 0xe3b0, 0xb794, 0x7558, 0x70ed, 0x0, 0x1);
        gbc.writeMem(0x922e, { 0x9 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xec6b, gbc.sp());
        EXPECT(0x922f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0x922e));
        // 09 00CA
        gbc.setState(0xf90, 0x3d45, 0x6380, 0x6662, 0x9f6e, 0xede6, 0x0, 0x0);
        gbc.writeMem(0xf90, { 0x9 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x3d45, gbc.sp());
        EXPECT(0xf91, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 09 00CB
        gbc.setState(0x1ac8, 0x2118, 0xff50, 0xec1d, 0x9256, 0xe589, 0x1, 0x0);
        gbc.writeMem(0x1ac8, { 0x9 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x2118, gbc.sp());
        EXPECT(0x1ac9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 09 00CC
        gbc.setState(0x65ad, 0x9152, 0xdf20, 0x7fcb, 0x2c50, 0x5d73, 0x1, 0x0);
        gbc.writeMem(0x65ad, { 0x9 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x9152, gbc.sp());
        EXPECT(0x65ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 09 00CD
        gbc.setState(0x2e70, 0xdfaa, 0x3990, 0xb0ae, 0x5347, 0x4d36, 0x0, 0x1);
        gbc.writeMem(0x2e70, { 0x9 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xdfaa, gbc.sp());
        EXPECT(0x2e71, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 09 00CE
        gbc.setState(0x1ae, 0x5919, 0x4ad0, 0xe432, 0x8aba, 0xac20, 0x1, 0x1);
        gbc.writeMem(0x1ae, { 0x9 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x5919, gbc.sp());
        EXPECT(0x1af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 09 00D0
        gbc.setState(0x388e, 0xf622, 0x5e70, 0x1d24, 0x53cd, 0x4156, 0x0, 0x0);
        gbc.writeMem(0x388e, { 0x9 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xf622, gbc.sp());
        EXPECT(0x388f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 09 00D1
        gbc.setState(0xa10f, 0x5885, 0x6f20, 0xebcc, 0xfc7d, 0xe451, 0x1, 0x1);
        gbc.writeMem(0xa10f, { 0x9 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x5885, gbc.sp());
        EXPECT(0xa110, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xa10f));
        // 09 00D2
        gbc.setState(0x7f62, 0xc2aa, 0x29b0, 0x1208, 0xf6ca, 0x5727, 0x0, 0x0);
        gbc.writeMem(0x7f62, { 0x9 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xc2aa, gbc.sp());
        EXPECT(0x7f63, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 09 00D3
        gbc.setState(0xddf1, 0xaf44, 0x1d20, 0x9004, 0x328a, 0xc48e, 0x1, 0x0);
        gbc.writeMem(0xddf1, { 0x9 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xaf44, gbc.sp());
        EXPECT(0xddf2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xddf1));
        // 09 00D4
        gbc.setState(0x8d04, 0xc969, 0x9b40, 0x5e86, 0x9708, 0x55a7, 0x0, 0x1);
        gbc.writeMem(0x8d04, { 0x9 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xc969, gbc.sp());
        EXPECT(0x8d05, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0x8d04));
        // 09 00D5
        gbc.setState(0x2ab7, 0xc84b, 0xab90, 0xf42a, 0xa11d, 0xcc93, 0x0, 0x1);
        gbc.writeMem(0x2ab7, { 0x9 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xc84b, gbc.sp());
        EXPECT(0x2ab8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 09 00D6
        gbc.setState(0x7a52, 0x9b73, 0xf110, 0x5d8f, 0xaea1, 0xe3aa, 0x0, 0x1);
        gbc.writeMem(0x7a52, { 0x9 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x9b73, gbc.sp());
        EXPECT(0x7a53, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 09 00D7
        gbc.setState(0xe904, 0xf1ec, 0xb2e0, 0xce3, 0x4f2a, 0xa14a, 0x0, 0x1);
        gbc.writeMem(0xe904, { 0x9 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xf1ec, gbc.sp());
        EXPECT(0xe905, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xe904));
        // 09 00D8
        gbc.setState(0x95eb, 0x728, 0x7ff0, 0xb118, 0x3f3f, 0x9fb0, 0x1, 0x1);
        gbc.writeMem(0x95eb, { 0x9 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x728, gbc.sp());
        EXPECT(0x95ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0x95eb));
        // 09 00D9
        gbc.setState(0x9705, 0x5bed, 0xe950, 0x5f99, 0xe2b2, 0x728f, 0x0, 0x1);
        gbc.writeMem(0x9705, { 0x9 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x5bed, gbc.sp());
        EXPECT(0x9706, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0x9705));
        // 09 00DA
        gbc.setState(0x8e2b, 0x2d62, 0xa3b0, 0x2ed0, 0x5c72, 0x39a3, 0x1, 0x1);
        gbc.writeMem(0x8e2b, { 0x9 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x2d62, gbc.sp());
        EXPECT(0x8e2c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0x8e2b));
        // 09 00DB
        gbc.setState(0xd19, 0x6717, 0x1100, 0x9a96, 0x383f, 0x2588, 0x0, 0x0);
        gbc.writeMem(0xd19, { 0x9 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x6717, gbc.sp());
        EXPECT(0xd1a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 09 00DC
        gbc.setState(0x8b3e, 0x27d, 0x49e0, 0xf430, 0x62bb, 0xe928, 0x0, 0x1);
        gbc.writeMem(0x8b3e, { 0x9 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x27d, gbc.sp());
        EXPECT(0x8b3f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0x8b3e));
        // 09 00DD
        gbc.setState(0x395c, 0xc1d8, 0xd620, 0x46bb, 0x29fa, 0x8e4c, 0x0, 0x1);
        gbc.writeMem(0x395c, { 0x9 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xc1d8, gbc.sp());
        EXPECT(0x395d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 09 00DE
        gbc.setState(0x9ee1, 0xb990, 0xdcd0, 0x6450, 0x6233, 0x1c69, 0x1, 0x0);
        gbc.writeMem(0x9ee1, { 0x9 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xb990, gbc.sp());
        EXPECT(0x9ee2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0x9ee1));
        // 09 00DF
        gbc.setState(0x901, 0xacc3, 0x5ef0, 0xd2a9, 0x42e8, 0xdff3, 0x0, 0x0);
        gbc.writeMem(0x901, { 0x9 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xacc3, gbc.sp());
        EXPECT(0x902, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 09 00E0
        gbc.setState(0xf89, 0xc797, 0x90f0, 0xd386, 0xc92a, 0xdb33, 0x1, 0x0);
        gbc.writeMem(0xf89, { 0x9 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xc797, gbc.sp());
        EXPECT(0xf8a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 09 00E1
        gbc.setState(0x7ca3, 0x63dc, 0x7a20, 0xe708, 0x8fd3, 0xc3f3, 0x1, 0x1);
        gbc.writeMem(0x7ca3, { 0x9 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x63dc, gbc.sp());
        EXPECT(0x7ca4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 09 00E2
        gbc.setState(0x4c70, 0xf0c0, 0xa780, 0x7d18, 0x8955, 0xc519, 0x0, 0x0);
        gbc.writeMem(0x4c70, { 0x9 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xf0c0, gbc.sp());
        EXPECT(0x4c71, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 09 00E3
        gbc.setState(0x48cd, 0xeaa8, 0xd0e0, 0x8916, 0xc61f, 0x9a36, 0x0, 0x1);
        gbc.writeMem(0x48cd, { 0x9 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xeaa8, gbc.sp());
        EXPECT(0x48ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 09 00E4
        gbc.setState(0x51ba, 0x2d98, 0xb1a0, 0x8dd8, 0x26a4, 0x773, 0x1, 0x1);
        gbc.writeMem(0x51ba, { 0x9 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x2d98, gbc.sp());
        EXPECT(0x51bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 09 00E5
        gbc.setState(0x92e7, 0x5bfc, 0x7e30, 0x2337, 0x5325, 0xfd92, 0x1, 0x1);
        gbc.writeMem(0x92e7, { 0x9 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x5bfc, gbc.sp());
        EXPECT(0x92e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0x92e7));
        // 09 00E6
        gbc.setState(0xf7, 0x4d1d, 0x5710, 0xe439, 0x92cd, 0xe90f, 0x0, 0x1);
        gbc.writeMem(0xf7, { 0x9 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x4d1d, gbc.sp());
        EXPECT(0xf8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 09 00E7
        gbc.setState(0x9bfa, 0x3cf4, 0x6c30, 0x8f0b, 0x4303, 0x9bbc, 0x0, 0x1);
        gbc.writeMem(0x9bfa, { 0x9 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x3cf4, gbc.sp());
        EXPECT(0x9bfb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0x9bfa));
        // 09 00E8
        gbc.setState(0x4c6a, 0x779e, 0xe1c0, 0x10d3, 0x3ae0, 0x2a87, 0x1, 0x1);
        gbc.writeMem(0x4c6a, { 0x9 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x779e, gbc.sp());
        EXPECT(0x4c6b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 09 00E9
        gbc.setState(0x11ce, 0xc146, 0x8580, 0x91c0, 0xe9a7, 0x4dc2, 0x0, 0x0);
        gbc.writeMem(0x11ce, { 0x9 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xc146, gbc.sp());
        EXPECT(0x11cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 09 00EA
        gbc.setState(0x77c9, 0x1bcd, 0x8bf0, 0x3eb1, 0x4a3c, 0x83ec, 0x0, 0x0);
        gbc.writeMem(0x77c9, { 0x9 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x1bcd, gbc.sp());
        EXPECT(0x77ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 09 00EB
        gbc.setState(0xbfba, 0xb2f5, 0xecd0, 0xc60e, 0x5f3b, 0xc2f9, 0x1, 0x0);
        gbc.writeMem(0xbfba, { 0x9 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xb2f5, gbc.sp());
        EXPECT(0xbfbb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xbfba));
        // 09 00EC
        gbc.setState(0x2bd6, 0xade5, 0xc4b0, 0x257e, 0x308f, 0x35d9, 0x1, 0x1);
        gbc.writeMem(0x2bd6, { 0x9 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xade5, gbc.sp());
        EXPECT(0x2bd7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 09 00ED
        gbc.setState(0x615b, 0x3218, 0xc80, 0x2e38, 0xd285, 0xc67a, 0x0, 0x1);
        gbc.writeMem(0x615b, { 0x9 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x3218, gbc.sp());
        EXPECT(0x615c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 09 00EE
        gbc.setState(0x3b5d, 0x2ace, 0x35e0, 0xb290, 0xefe7, 0xd7b, 0x1, 0x1);
        gbc.writeMem(0x3b5d, { 0x9 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x2ace, gbc.sp());
        EXPECT(0x3b5e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 09 00EF
        gbc.setState(0x2451, 0x9105, 0x88d0, 0x51f0, 0x4a6e, 0x9b9f, 0x1, 0x0);
        gbc.writeMem(0x2451, { 0x9 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x9105, gbc.sp());
        EXPECT(0x2452, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 09 00F0
        gbc.setState(0x5c6d, 0x6af5, 0xf010, 0x9cdd, 0x69af, 0xc006, 0x1, 0x0);
        gbc.writeMem(0x5c6d, { 0x9 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x6af5, gbc.sp());
        EXPECT(0x5c6e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 09 00F1
        gbc.setState(0x52c7, 0x8be8, 0xd170, 0x2938, 0x287e, 0xa859, 0x1, 0x1);
        gbc.writeMem(0x52c7, { 0x9 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x8be8, gbc.sp());
        EXPECT(0x52c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 09 00F3
        gbc.setState(0x3895, 0x4a6e, 0xba30, 0xb740, 0xfe6b, 0x74c8, 0x0, 0x1);
        gbc.writeMem(0x3895, { 0x9 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x4a6e, gbc.sp());
        EXPECT(0x3896, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 09 00F4
        gbc.setState(0x14d1, 0xf876, 0x7630, 0x7fc9, 0x405b, 0xf88b, 0x1, 0x0);
        gbc.writeMem(0x14d1, { 0x9 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xf876, gbc.sp());
        EXPECT(0x14d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 09 00F5
        gbc.setState(0x644c, 0xffc8, 0x84e0, 0x2ad, 0x73cf, 0x3c36, 0x0, 0x0);
        gbc.writeMem(0x644c, { 0x9 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xffc8, gbc.sp());
        EXPECT(0x644d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 09 00F6
        gbc.setState(0xd287, 0x4084, 0xa670, 0x5718, 0x430e, 0x7acb, 0x1, 0x1);
        gbc.writeMem(0xd287, { 0x9 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x4084, gbc.sp());
        EXPECT(0xd288, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xd287));
        // 09 00F7
        gbc.setState(0xd9d2, 0x38af, 0xe0a0, 0x1ad2, 0x10d9, 0x7868, 0x0, 0x1);
        gbc.writeMem(0xd9d2, { 0x9 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x38af, gbc.sp());
        EXPECT(0xd9d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xd9d2));
        // 09 00F8
        gbc.setState(0x1bef, 0x76a, 0x13a0, 0x4de0, 0x426b, 0xf270, 0x1, 0x1);
        gbc.writeMem(0x1bef, { 0x9 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x76a, gbc.sp());
        EXPECT(0x1bf0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 09 00F9
        gbc.setState(0xb129, 0xf614, 0x260, 0xe4bb, 0x67de, 0x229a, 0x0, 0x1);
        gbc.writeMem(0xb129, { 0x9 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xf614, gbc.sp());
        EXPECT(0xb12a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xb129));
        // 09 00FA
        gbc.setState(0x8172, 0x3282, 0xcc80, 0x24e, 0xbec, 0x7f1, 0x0, 0x0);
        gbc.writeMem(0x8172, { 0x9 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x3282, gbc.sp());
        EXPECT(0x8173, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0x8172));
        // 09 00FB
        gbc.setState(0x34ac, 0x67fa, 0x9770, 0x390f, 0x80ff, 0x64a3, 0x0, 0x1);
        gbc.writeMem(0x34ac, { 0x9 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x67fa, gbc.sp());
        EXPECT(0x34ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 09 00FC
        gbc.setState(0xd452, 0x17d7, 0x3b30, 0x2a9, 0xe2c7, 0xa488, 0x1, 0x1);
        gbc.writeMem(0xd452, { 0x9 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x17d7, gbc.sp());
        EXPECT(0xd453, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xd452));
        // 09 00FD
        gbc.setState(0x299b, 0x79de, 0xa670, 0xb3cc, 0xce50, 0x6028, 0x1, 0x1);
        gbc.writeMem(0x299b, { 0x9 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x79de, gbc.sp());
        EXPECT(0x299c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 09 00FE
        gbc.setState(0x3b0e, 0xc1c9, 0x9ab0, 0x3c56, 0x38d7, 0xc498, 0x0, 0x1);
        gbc.writeMem(0x3b0e, { 0x9 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xc1c9, gbc.sp());
        EXPECT(0x3b0f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 09 00FF
        gbc.setState(0x3219, 0x2c9e, 0x4a80, 0xca8d, 0xb8a2, 0x50dc, 0x1, 0x0);
        gbc.writeMem(0x3219, { 0x9 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x2c9e, gbc.sp());
        EXPECT(0x321a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 09 0100
        gbc.setState(0x3402, 0xeb56, 0x9a0, 0x49bd, 0x3e2e, 0xdb4, 0x1, 0x0);
        gbc.writeMem(0x3402, { 0x9 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xeb56, gbc.sp());
        EXPECT(0x3403, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 09 0101
        gbc.setState(0xa8ce, 0x638a, 0x31a0, 0xed8a, 0x112e, 0x864e, 0x1, 0x1);
        gbc.writeMem(0xa8ce, { 0x9 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x638a, gbc.sp());
        EXPECT(0xa8cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xa8ce));
        // 09 0102
        gbc.setState(0x481e, 0x9442, 0x1f50, 0x39cd, 0x194, 0x6274, 0x1, 0x1);
        gbc.writeMem(0x481e, { 0x9 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x9442, gbc.sp());
        EXPECT(0x481f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 09 0103
        gbc.setState(0xda6, 0x79e4, 0x6dd0, 0x729a, 0x5141, 0xcf2a, 0x0, 0x0);
        gbc.writeMem(0xda6, { 0x9 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x79e4, gbc.sp());
        EXPECT(0xda7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 09 0104
        gbc.setState(0x2fd0, 0x134d, 0xf930, 0x2b0f, 0xd471, 0xa8ef, 0x1, 0x0);
        gbc.writeMem(0x2fd0, { 0x9 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x134d, gbc.sp());
        EXPECT(0x2fd1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 09 0105
        gbc.setState(0x8d84, 0xa20e, 0x5670, 0xc45e, 0xd870, 0x87db, 0x0, 0x1);
        gbc.writeMem(0x8d84, { 0x9 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xa20e, gbc.sp());
        EXPECT(0x8d85, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0x8d84));
        // 09 0106
        gbc.setState(0x1d0d, 0x42af, 0xe940, 0xb12f, 0x4cfc, 0x1b73, 0x0, 0x0);
        gbc.writeMem(0x1d0d, { 0x9 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x42af, gbc.sp());
        EXPECT(0x1d0e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 09 0107
        gbc.setState(0x77d7, 0xb5db, 0x2370, 0xe6b7, 0x4a0f, 0x634e, 0x0, 0x1);
        gbc.writeMem(0x77d7, { 0x9 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xb5db, gbc.sp());
        EXPECT(0x77d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 09 0108
        gbc.setState(0x2325, 0x877c, 0x9b20, 0x5912, 0xab90, 0x99e9, 0x0, 0x0);
        gbc.writeMem(0x2325, { 0x9 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x877c, gbc.sp());
        EXPECT(0x2326, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 09 0109
        gbc.setState(0x3eb3, 0x3a1c, 0x4de0, 0x1e75, 0xa10a, 0x47e5, 0x0, 0x0);
        gbc.writeMem(0x3eb3, { 0x9 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x3a1c, gbc.sp());
        EXPECT(0x3eb4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 09 010A
        gbc.setState(0x7734, 0xdf2a, 0x4800, 0x8c52, 0x34ab, 0xa38b, 0x0, 0x0);
        gbc.writeMem(0x7734, { 0x9 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xdf2a, gbc.sp());
        EXPECT(0x7735, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 09 010B
        gbc.setState(0x5583, 0x51c, 0x3cb0, 0x487c, 0x2106, 0xb3e, 0x0, 0x0);
        gbc.writeMem(0x5583, { 0x9 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x51c, gbc.sp());
        EXPECT(0x5584, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 09 010C
        gbc.setState(0x6b29, 0x5a91, 0x68b0, 0x9e7e, 0x2bb0, 0x2599, 0x0, 0x1);
        gbc.writeMem(0x6b29, { 0x9 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x5a91, gbc.sp());
        EXPECT(0x6b2a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 09 010D
        gbc.setState(0xd916, 0xe84c, 0xc0e0, 0xc84f, 0xe9f9, 0x7b36, 0x1, 0x0);
        gbc.writeMem(0xd916, { 0x9 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xe84c, gbc.sp());
        EXPECT(0xd917, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xd916));
        // 09 010E
        gbc.setState(0xdd7f, 0x31a3, 0x3a60, 0x814d, 0x2451, 0x5d51, 0x0, 0x0);
        gbc.writeMem(0xdd7f, { 0x9 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x31a3, gbc.sp());
        EXPECT(0xdd80, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xdd7f));
        // 09 010F
        gbc.setState(0xbc29, 0x19de, 0xc60, 0xe761, 0x7d2d, 0xa661, 0x0, 0x1);
        gbc.writeMem(0xbc29, { 0x9 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x19de, gbc.sp());
        EXPECT(0xbc2a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xbc29));
        // 09 0110
        gbc.setState(0x3516, 0x534, 0xc4d0, 0x2ed5, 0x1f82, 0x5749, 0x0, 0x1);
        gbc.writeMem(0x3516, { 0x9 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x534, gbc.sp());
        EXPECT(0x3517, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 09 0111
        gbc.setState(0x6b7b, 0x46ea, 0xd50, 0xec00, 0x7578, 0x42e, 0x1, 0x0);
        gbc.writeMem(0x6b7b, { 0x9 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x46ea, gbc.sp());
        EXPECT(0x6b7c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 09 0112
        gbc.setState(0x74c1, 0xf395, 0xd520, 0xf495, 0x686f, 0x25af, 0x1, 0x1);
        gbc.writeMem(0x74c1, { 0x9 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xf395, gbc.sp());
        EXPECT(0x74c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 09 0113
        gbc.setState(0x5deb, 0x64d7, 0xd670, 0xdc0b, 0xb886, 0x8bfe, 0x1, 0x1);
        gbc.writeMem(0x5deb, { 0x9 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x64d7, gbc.sp());
        EXPECT(0x5dec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 09 0114
        gbc.setState(0xe97b, 0xaa38, 0x9f70, 0x5f6, 0x346a, 0xba6a, 0x0, 0x1);
        gbc.writeMem(0xe97b, { 0x9 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xaa38, gbc.sp());
        EXPECT(0xe97c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xe97b));
        // 09 0115
        gbc.setState(0x405e, 0x60d1, 0x800, 0x208a, 0x5191, 0xeec8, 0x1, 0x1);
        gbc.writeMem(0x405e, { 0x9 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x60d1, gbc.sp());
        EXPECT(0x405f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 09 0116
        gbc.setState(0xa0dc, 0xbb01, 0x20b0, 0x245, 0xc6c4, 0x45e3, 0x1, 0x0);
        gbc.writeMem(0xa0dc, { 0x9 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xbb01, gbc.sp());
        EXPECT(0xa0dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xa0dc));
        // 09 0117
        gbc.setState(0xebde, 0x19c3, 0x31e0, 0xe898, 0x47b6, 0xcdf0, 0x0, 0x0);
        gbc.writeMem(0xebde, { 0x9 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x19c3, gbc.sp());
        EXPECT(0xebdf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xebde));
        // 09 0119
        gbc.setState(0x1620, 0x43e7, 0x6b50, 0x9d97, 0xcf02, 0xd13a, 0x1, 0x0);
        gbc.writeMem(0x1620, { 0x9 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x43e7, gbc.sp());
        EXPECT(0x1621, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 09 011A
        gbc.setState(0x7c5, 0xffb6, 0xb440, 0x514e, 0xcc2d, 0xa5ab, 0x0, 0x0);
        gbc.writeMem(0x7c5, { 0x9 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xffb6, gbc.sp());
        EXPECT(0x7c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 09 011B
        gbc.setState(0xe476, 0xf8ec, 0x7650, 0x8d25, 0xee84, 0xd1b9, 0x0, 0x0);
        gbc.writeMem(0xe476, { 0x9 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xf8ec, gbc.sp());
        EXPECT(0xe477, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xe476));
        // 09 011D
        gbc.setState(0xa763, 0xbd40, 0x6ea0, 0x7b2b, 0x621f, 0xb475, 0x1, 0x1);
        gbc.writeMem(0xa763, { 0x9 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xbd40, gbc.sp());
        EXPECT(0xa764, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xa763));
        // 09 011E
        gbc.setState(0x88e, 0x6a34, 0xd100, 0xdafa, 0xf4b3, 0xf6f3, 0x1, 0x1);
        gbc.writeMem(0x88e, { 0x9 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x6a34, gbc.sp());
        EXPECT(0x88f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 09 011F
        gbc.setState(0x687d, 0xcba2, 0x99e0, 0x85f8, 0x9dd, 0x4fa5, 0x0, 0x1);
        gbc.writeMem(0x687d, { 0x9 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xcba2, gbc.sp());
        EXPECT(0x687e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 09 0120
        gbc.setState(0x53c0, 0x8a07, 0x3cb0, 0xfbad, 0x5ba9, 0x1a33, 0x0, 0x1);
        gbc.writeMem(0x53c0, { 0x9 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x8a07, gbc.sp());
        EXPECT(0x53c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 09 0121
        gbc.setState(0x3cd3, 0xbb57, 0xfb40, 0xd839, 0xa178, 0xbb89, 0x1, 0x0);
        gbc.writeMem(0x3cd3, { 0x9 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xbb57, gbc.sp());
        EXPECT(0x3cd4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 09 0122
        gbc.setState(0xef1b, 0x4e7f, 0x4f0, 0x43aa, 0x4ce0, 0x539f, 0x0, 0x1);
        gbc.writeMem(0xef1b, { 0x9 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x4e7f, gbc.sp());
        EXPECT(0xef1c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xef1b));
        // 09 0123
        gbc.setState(0xd451, 0x6d4e, 0xd40, 0x1e9f, 0x29e, 0x2138, 0x0, 0x0);
        gbc.writeMem(0xd451, { 0x9 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x6d4e, gbc.sp());
        EXPECT(0xd452, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xd451));
        // 09 0124
        gbc.setState(0x1c63, 0x6666, 0x2770, 0x7ef6, 0x2758, 0x1067, 0x1, 0x1);
        gbc.writeMem(0x1c63, { 0x9 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x6666, gbc.sp());
        EXPECT(0x1c64, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 09 0125
        gbc.setState(0x13a0, 0x9c4a, 0x3530, 0xa4df, 0xe8f9, 0x8e7, 0x0, 0x1);
        gbc.writeMem(0x13a0, { 0x9 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x9c4a, gbc.sp());
        EXPECT(0x13a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 09 0126
        gbc.setState(0x6b24, 0xdbc2, 0xfe20, 0x10, 0x9363, 0x6e2, 0x0, 0x1);
        gbc.writeMem(0x6b24, { 0x9 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xdbc2, gbc.sp());
        EXPECT(0x6b25, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 09 0127
        gbc.setState(0xa676, 0xf2f4, 0x95b0, 0x4613, 0xb1e9, 0x225a, 0x0, 0x1);
        gbc.writeMem(0xa676, { 0x9 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xf2f4, gbc.sp());
        EXPECT(0xa677, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xa676));
        // 09 0128
        gbc.setState(0xd26c, 0xe24d, 0x6020, 0xca9d, 0xa293, 0x4165, 0x0, 0x0);
        gbc.writeMem(0xd26c, { 0x9 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xe24d, gbc.sp());
        EXPECT(0xd26d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xd26c));
        // 09 0129
        gbc.setState(0x49fb, 0x9399, 0x21e0, 0x8f1a, 0x8690, 0xc6c8, 0x1, 0x0);
        gbc.writeMem(0x49fb, { 0x9 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x9399, gbc.sp());
        EXPECT(0x49fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 09 012A
        gbc.setState(0x1d23, 0xf2aa, 0x74a0, 0xb81c, 0x60e6, 0x1373, 0x1, 0x0);
        gbc.writeMem(0x1d23, { 0x9 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xf2aa, gbc.sp());
        EXPECT(0x1d24, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 09 012B
        gbc.setState(0xac9, 0x6984, 0xc070, 0x4aec, 0x84b0, 0xa93d, 0x0, 0x1);
        gbc.writeMem(0xac9, { 0x9 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x6984, gbc.sp());
        EXPECT(0xaca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 09 012C
        gbc.setState(0x61bf, 0xee9c, 0x6a30, 0x3bdf, 0xd960, 0x1a1e, 0x1, 0x0);
        gbc.writeMem(0x61bf, { 0x9 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xee9c, gbc.sp());
        EXPECT(0x61c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 09 012D
        gbc.setState(0x54a1, 0xed21, 0xc0b0, 0xdd36, 0x36bb, 0xbc64, 0x1, 0x1);
        gbc.writeMem(0x54a1, { 0x9 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xed21, gbc.sp());
        EXPECT(0x54a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 09 012E
        gbc.setState(0xd4d8, 0xfb2e, 0xc60, 0xcccb, 0xc282, 0x6e7d, 0x1, 0x0);
        gbc.writeMem(0xd4d8, { 0x9 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xfb2e, gbc.sp());
        EXPECT(0xd4d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xd4d8));
        // 09 012F
        gbc.setState(0x2de3, 0xe5ab, 0xf550, 0x453a, 0x1442, 0x3cb5, 0x1, 0x0);
        gbc.writeMem(0x2de3, { 0x9 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xe5ab, gbc.sp());
        EXPECT(0x2de4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 09 0131
        gbc.setState(0x53d9, 0xe80c, 0x6b0, 0x8f69, 0xdc19, 0xae3f, 0x1, 0x1);
        gbc.writeMem(0x53d9, { 0x9 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xe80c, gbc.sp());
        EXPECT(0x53da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 09 0132
        gbc.setState(0x53d2, 0xdfbd, 0xc600, 0x9684, 0x72bd, 0x54bf, 0x1, 0x1);
        gbc.writeMem(0x53d2, { 0x9 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xdfbd, gbc.sp());
        EXPECT(0x53d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 09 0133
        gbc.setState(0x4400, 0x1b99, 0x46f0, 0xbab8, 0x1194, 0x476f, 0x1, 0x1);
        gbc.writeMem(0x4400, { 0x9 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x1b99, gbc.sp());
        EXPECT(0x4401, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 09 0134
        gbc.setState(0xb54, 0x70d5, 0x7d0, 0x5499, 0xd8db, 0x826a, 0x1, 0x1);
        gbc.writeMem(0xb54, { 0x9 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x70d5, gbc.sp());
        EXPECT(0xb55, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 09 0135
        gbc.setState(0xc9e1, 0x7d1c, 0xe9b0, 0xf67a, 0xe46e, 0x344d, 0x1, 0x1);
        gbc.writeMem(0xc9e1, { 0x9 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x7d1c, gbc.sp());
        EXPECT(0xc9e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xc9e1));
        // 09 0136
        gbc.setState(0x37fd, 0x837e, 0xda40, 0x20f9, 0x30ec, 0x6c1c, 0x0, 0x0);
        gbc.writeMem(0x37fd, { 0x9 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x837e, gbc.sp());
        EXPECT(0x37fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 09 0137
        gbc.setState(0x3005, 0x8fdc, 0xd290, 0x443b, 0xaf0a, 0xaef0, 0x0, 0x1);
        gbc.writeMem(0x3005, { 0x9 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x8fdc, gbc.sp());
        EXPECT(0x3006, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 09 0138
        gbc.setState(0x9c7, 0x869c, 0x3e80, 0xf4d9, 0xa81f, 0x9ae3, 0x0, 0x0);
        gbc.writeMem(0x9c7, { 0x9 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x869c, gbc.sp());
        EXPECT(0x9c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 09 0139
        gbc.setState(0xc2d0, 0x7fbf, 0x44b0, 0x9d1f, 0xda6, 0x3db0, 0x0, 0x1);
        gbc.writeMem(0xc2d0, { 0x9 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x7fbf, gbc.sp());
        EXPECT(0xc2d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xc2d0));
        // 09 013A
        gbc.setState(0xa986, 0x2cb5, 0x1ce0, 0xa30c, 0x56fc, 0xc4fa, 0x1, 0x0);
        gbc.writeMem(0xa986, { 0x9 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x2cb5, gbc.sp());
        EXPECT(0xa987, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xa986));
        // 09 013B
        gbc.setState(0xdb0d, 0x7950, 0xde70, 0x4251, 0xbfb2, 0x2885, 0x0, 0x0);
        gbc.writeMem(0xdb0d, { 0x9 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x7950, gbc.sp());
        EXPECT(0xdb0e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xdb0d));
        // 09 013C
        gbc.setState(0x93f5, 0x4907, 0xf640, 0x5126, 0x8cd7, 0x1122, 0x0, 0x0);
        gbc.writeMem(0x93f5, { 0x9 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x4907, gbc.sp());
        EXPECT(0x93f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0x93f5));
        // 09 013D
        gbc.setState(0xc670, 0x2881, 0xaf70, 0x20a5, 0x3e4d, 0x49c2, 0x1, 0x1);
        gbc.writeMem(0xc670, { 0x9 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x2881, gbc.sp());
        EXPECT(0xc671, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xc670));
        // 09 013E
        gbc.setState(0x485d, 0x1d8b, 0x59a0, 0xc374, 0x520f, 0x8a6a, 0x1, 0x0);
        gbc.writeMem(0x485d, { 0x9 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x1d8b, gbc.sp());
        EXPECT(0x485e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 09 013F
        gbc.setState(0xd2bc, 0xfdf0, 0xa530, 0x527c, 0xacf5, 0x4d45, 0x0, 0x1);
        gbc.writeMem(0xd2bc, { 0x9 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xfdf0, gbc.sp());
        EXPECT(0xd2bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xd2bc));
        // 09 0140
        gbc.setState(0xa4a2, 0x4267, 0x2af0, 0x87ee, 0xe3e7, 0x226d, 0x1, 0x0);
        gbc.writeMem(0xa4a2, { 0x9 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x4267, gbc.sp());
        EXPECT(0xa4a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xa4a2));
        // 09 0141
        gbc.setState(0xaa45, 0x2bdd, 0xb8a0, 0xdae1, 0x5a61, 0x244d, 0x0, 0x1);
        gbc.writeMem(0xaa45, { 0x9 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x2bdd, gbc.sp());
        EXPECT(0xaa46, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xaa45));
        // 09 0142
        gbc.setState(0xcf83, 0xfbad, 0x2ca0, 0x3f17, 0x97d2, 0x7e6d, 0x1, 0x1);
        gbc.writeMem(0xcf83, { 0x9 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xfbad, gbc.sp());
        EXPECT(0xcf84, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xcf83));
        // 09 0143
        gbc.setState(0xc8c9, 0xcb18, 0x9fa0, 0x768a, 0x8f4c, 0x9b58, 0x1, 0x0);
        gbc.writeMem(0xc8c9, { 0x9 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xcb18, gbc.sp());
        EXPECT(0xc8ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xc8c9));
        // 09 0144
        gbc.setState(0x34b3, 0xc65e, 0x6e70, 0x1ff0, 0xdf85, 0x8e46, 0x1, 0x1);
        gbc.writeMem(0x34b3, { 0x9 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xc65e, gbc.sp());
        EXPECT(0x34b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 09 0145
        gbc.setState(0xc6b1, 0x5b57, 0xa310, 0x6870, 0x780a, 0xcab, 0x0, 0x0);
        gbc.writeMem(0xc6b1, { 0x9 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x5b57, gbc.sp());
        EXPECT(0xc6b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xc6b1));
        // 09 0147
        gbc.setState(0x9307, 0xb3b3, 0x9a40, 0x7f45, 0x43af, 0x66c2, 0x1, 0x1);
        gbc.writeMem(0x9307, { 0x9 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xb3b3, gbc.sp());
        EXPECT(0x9308, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0x9307));
        // 09 0148
        gbc.setState(0x1643, 0x1094, 0x5860, 0xd268, 0xd226, 0x83a4, 0x1, 0x1);
        gbc.writeMem(0x1643, { 0x9 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x1094, gbc.sp());
        EXPECT(0x1644, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 09 0149
        gbc.setState(0xae2e, 0x8d6a, 0x1e00, 0xb3cc, 0x5fbe, 0x7d03, 0x0, 0x1);
        gbc.writeMem(0xae2e, { 0x9 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x8d6a, gbc.sp());
        EXPECT(0xae2f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xae2e));
        // 09 014B
        gbc.setState(0xcc87, 0x3017, 0x2ad0, 0xb360, 0x6e2f, 0x2983, 0x0, 0x1);
        gbc.writeMem(0xcc87, { 0x9 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x3017, gbc.sp());
        EXPECT(0xcc88, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xcc87));
        // 09 014C
        gbc.setState(0x9020, 0x1498, 0xcee0, 0x17db, 0xc5a, 0x310f, 0x1, 0x1);
        gbc.writeMem(0x9020, { 0x9 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x1498, gbc.sp());
        EXPECT(0x9021, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0x9020));
        // 09 014E
        gbc.setState(0xd034, 0x98a, 0xe760, 0x56c, 0xb1aa, 0xfbfa, 0x0, 0x1);
        gbc.writeMem(0xd034, { 0x9 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x98a, gbc.sp());
        EXPECT(0xd035, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xd034));
        // 09 014F
        gbc.setState(0x13fb, 0x1271, 0x2a70, 0xcc1a, 0xc5c9, 0x2720, 0x1, 0x1);
        gbc.writeMem(0x13fb, { 0x9 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x1271, gbc.sp());
        EXPECT(0x13fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 09 0150
        gbc.setState(0x8e97, 0xd7bd, 0xa270, 0xb8ee, 0x969f, 0x8b83, 0x0, 0x0);
        gbc.writeMem(0x8e97, { 0x9 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xd7bd, gbc.sp());
        EXPECT(0x8e98, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0x8e97));
        // 09 0151
        gbc.setState(0x3894, 0x227e, 0x58e0, 0x92ea, 0x6572, 0x6a05, 0x0, 0x0);
        gbc.writeMem(0x3894, { 0x9 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x227e, gbc.sp());
        EXPECT(0x3895, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 09 0152
        gbc.setState(0xed99, 0xd162, 0xa900, 0x872c, 0x872f, 0xb52b, 0x0, 0x1);
        gbc.writeMem(0xed99, { 0x9 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xd162, gbc.sp());
        EXPECT(0xed9a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xed99));
        // 09 0153
        gbc.setState(0x9512, 0x885b, 0xb440, 0xffd5, 0x550d, 0xb9a1, 0x0, 0x0);
        gbc.writeMem(0x9512, { 0x9 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x885b, gbc.sp());
        EXPECT(0x9513, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0x9512));
        // 09 0155
        gbc.setState(0xb86f, 0x23c9, 0x1e50, 0xef92, 0xb9d3, 0xd43c, 0x1, 0x1);
        gbc.writeMem(0xb86f, { 0x9 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x23c9, gbc.sp());
        EXPECT(0xb870, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xb86f));
        // 09 0157
        gbc.setState(0xb8b9, 0x8238, 0x5960, 0xd10c, 0x47ad, 0xd354, 0x0, 0x1);
        gbc.writeMem(0xb8b9, { 0x9 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x8238, gbc.sp());
        EXPECT(0xb8ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xb8b9));
        // 09 0158
        gbc.setState(0x4b1a, 0x7715, 0xa690, 0xcb5f, 0x7f67, 0x4134, 0x0, 0x0);
        gbc.writeMem(0x4b1a, { 0x9 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x7715, gbc.sp());
        EXPECT(0x4b1b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 09 0159
        gbc.setState(0x810b, 0xe1ad, 0x4300, 0xdec2, 0xa49e, 0xc147, 0x0, 0x1);
        gbc.writeMem(0x810b, { 0x9 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xe1ad, gbc.sp());
        EXPECT(0x810c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0x810b));
        // 09 015A
        gbc.setState(0x61e, 0x6eae, 0xe690, 0xd10c, 0x3462, 0xf96d, 0x1, 0x0);
        gbc.writeMem(0x61e, { 0x9 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x6eae, gbc.sp());
        EXPECT(0x61f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 09 015B
        gbc.setState(0x76db, 0xf99b, 0x7e90, 0x76fb, 0xbfe6, 0x1b1a, 0x1, 0x0);
        gbc.writeMem(0x76db, { 0x9 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xf99b, gbc.sp());
        EXPECT(0x76dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 09 015C
        gbc.setState(0x3093, 0x49be, 0xdad0, 0x3894, 0x7b85, 0x4cb, 0x0, 0x0);
        gbc.writeMem(0x3093, { 0x9 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x49be, gbc.sp());
        EXPECT(0x3094, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 09 015D
        gbc.setState(0x5a0d, 0x9c26, 0xf920, 0x79e8, 0xb946, 0x75ef, 0x1, 0x1);
        gbc.writeMem(0x5a0d, { 0x9 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x9c26, gbc.sp());
        EXPECT(0x5a0e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 09 015E
        gbc.setState(0x78ba, 0x7470, 0x7760, 0x7f9e, 0x4e7d, 0x8cbe, 0x1, 0x1);
        gbc.writeMem(0x78ba, { 0x9 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x7470, gbc.sp());
        EXPECT(0x78bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 09 015F
        gbc.setState(0x57b8, 0x3fe, 0x2790, 0x7f00, 0xf444, 0x4a46, 0x0, 0x0);
        gbc.writeMem(0x57b8, { 0x9 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x3fe, gbc.sp());
        EXPECT(0x57b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 09 0160
        gbc.setState(0x9fe5, 0xe571, 0x7b10, 0x50de, 0x32b7, 0x4b69, 0x1, 0x0);
        gbc.writeMem(0x9fe5, { 0x9 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xe571, gbc.sp());
        EXPECT(0x9fe6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0x9fe5));
        // 09 0161
        gbc.setState(0x97ec, 0x3b9c, 0xbd70, 0x665e, 0x901b, 0xb4b8, 0x1, 0x0);
        gbc.writeMem(0x97ec, { 0x9 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x3b9c, gbc.sp());
        EXPECT(0x97ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0x97ec));
        // 09 0162
        gbc.setState(0xa0d5, 0xd75e, 0xf5c0, 0xb035, 0xbe5, 0x2cb6, 0x0, 0x0);
        gbc.writeMem(0xa0d5, { 0x9 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xd75e, gbc.sp());
        EXPECT(0xa0d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xa0d5));
        // 09 0163
        gbc.setState(0xd46b, 0x1b85, 0xb5d0, 0xc319, 0x634d, 0x5027, 0x0, 0x0);
        gbc.writeMem(0xd46b, { 0x9 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x1b85, gbc.sp());
        EXPECT(0xd46c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xd46b));
        // 09 0164
        gbc.setState(0x8448, 0x6b16, 0x9de0, 0x2048, 0xd6f0, 0xfbf3, 0x1, 0x1);
        gbc.writeMem(0x8448, { 0x9 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x6b16, gbc.sp());
        EXPECT(0x8449, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0x8448));
        // 09 0166
        gbc.setState(0x605, 0xbc12, 0x7850, 0x7ca9, 0xb2a, 0x88f0, 0x1, 0x0);
        gbc.writeMem(0x605, { 0x9 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xbc12, gbc.sp());
        EXPECT(0x606, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 09 0167
        gbc.setState(0xd8c8, 0x588f, 0x2f30, 0x2762, 0xd600, 0x477a, 0x1, 0x1);
        gbc.writeMem(0xd8c8, { 0x9 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x588f, gbc.sp());
        EXPECT(0xd8c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xd8c8));
        // 09 0168
        gbc.setState(0xe236, 0xb60, 0xb3a0, 0xfe0e, 0xf8ef, 0x3162, 0x0, 0x0);
        gbc.writeMem(0xe236, { 0x9 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xb60, gbc.sp());
        EXPECT(0xe237, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xe236));
        // 09 0169
        gbc.setState(0x30df, 0x89af, 0x6540, 0x932, 0x90c1, 0xf885, 0x0, 0x0);
        gbc.writeMem(0x30df, { 0x9 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x89af, gbc.sp());
        EXPECT(0x30e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 09 016B
        gbc.setState(0xadf6, 0x59fb, 0x1660, 0xd683, 0x536, 0x45c9, 0x0, 0x0);
        gbc.writeMem(0xadf6, { 0x9 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x59fb, gbc.sp());
        EXPECT(0xadf7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xadf6));
        // 09 016C
        gbc.setState(0xb77d, 0x4b50, 0xcaa0, 0x5066, 0x6344, 0x3b92, 0x1, 0x0);
        gbc.writeMem(0xb77d, { 0x9 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x4b50, gbc.sp());
        EXPECT(0xb77e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xb77d));
        // 09 016D
        gbc.setState(0xc438, 0xf487, 0x7200, 0xb92d, 0xb0ac, 0xc539, 0x1, 0x0);
        gbc.writeMem(0xc438, { 0x9 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xf487, gbc.sp());
        EXPECT(0xc439, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xc438));
        // 09 016E
        gbc.setState(0xc219, 0x4fde, 0x8060, 0xa882, 0xcca6, 0x8637, 0x1, 0x1);
        gbc.writeMem(0xc219, { 0x9 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x4fde, gbc.sp());
        EXPECT(0xc21a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xc219));
        // 09 016F
        gbc.setState(0x28d, 0x16, 0xb6b0, 0xde15, 0x749e, 0x1228, 0x0, 0x0);
        gbc.writeMem(0x28d, { 0x9 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x16, gbc.sp());
        EXPECT(0x28e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 09 0170
        gbc.setState(0x658, 0xc881, 0xcdf0, 0x76bd, 0x8973, 0x6348, 0x1, 0x1);
        gbc.writeMem(0x658, { 0x9 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xc881, gbc.sp());
        EXPECT(0x659, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 09 0171
        gbc.setState(0x3205, 0x533b, 0x3db0, 0x341b, 0x44e7, 0xabaa, 0x1, 0x1);
        gbc.writeMem(0x3205, { 0x9 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x533b, gbc.sp());
        EXPECT(0x3206, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 09 0172
        gbc.setState(0x3ca2, 0xea89, 0x56b0, 0x6aa7, 0xcef3, 0xa655, 0x0, 0x0);
        gbc.writeMem(0x3ca2, { 0x9 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xea89, gbc.sp());
        EXPECT(0x3ca3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 09 0173
        gbc.setState(0xecd3, 0xf453, 0x7d80, 0x93d1, 0xe9bb, 0x13ae, 0x1, 0x0);
        gbc.writeMem(0xecd3, { 0x9 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xf453, gbc.sp());
        EXPECT(0xecd4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xecd3));
        // 09 0174
        gbc.setState(0xe620, 0x399a, 0xc050, 0xab1c, 0x8d3b, 0x2f96, 0x0, 0x0);
        gbc.writeMem(0xe620, { 0x9 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x399a, gbc.sp());
        EXPECT(0xe621, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xe620));
        // 09 0175
        gbc.setState(0x5e9b, 0xe5c3, 0x7c60, 0xa1f9, 0xa8a1, 0x9f91, 0x1, 0x1);
        gbc.writeMem(0x5e9b, { 0x9 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xe5c3, gbc.sp());
        EXPECT(0x5e9c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 09 0176
        gbc.setState(0x6cbb, 0xd031, 0x8f80, 0x3d33, 0xb5d2, 0x5311, 0x1, 0x0);
        gbc.writeMem(0x6cbb, { 0x9 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xd031, gbc.sp());
        EXPECT(0x6cbc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 09 0177
        gbc.setState(0xb88a, 0x5060, 0x4da0, 0x276a, 0xb1cd, 0x80b, 0x0, 0x1);
        gbc.writeMem(0xb88a, { 0x9 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x5060, gbc.sp());
        EXPECT(0xb88b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xb88a));
        // 09 0178
        gbc.setState(0x13ad, 0x74ac, 0x7e50, 0x29a2, 0x688c, 0xceb6, 0x0, 0x1);
        gbc.writeMem(0x13ad, { 0x9 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x74ac, gbc.sp());
        EXPECT(0x13ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 09 0179
        gbc.setState(0xa6c5, 0x6cea, 0xbb0, 0xe9c3, 0x44f5, 0xaf9c, 0x1, 0x1);
        gbc.writeMem(0xa6c5, { 0x9 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x6cea, gbc.sp());
        EXPECT(0xa6c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xa6c5));
        // 09 017A
        gbc.setState(0x30ea, 0x9d6d, 0xf5a0, 0xc60a, 0x51e7, 0xf9c0, 0x0, 0x1);
        gbc.writeMem(0x30ea, { 0x9 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x9d6d, gbc.sp());
        EXPECT(0x30eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 09 017B
        gbc.setState(0xc8ae, 0xc793, 0xea10, 0x5922, 0x9052, 0xa0d2, 0x1, 0x1);
        gbc.writeMem(0xc8ae, { 0x9 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xc793, gbc.sp());
        EXPECT(0xc8af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xc8ae));
        // 09 017C
        gbc.setState(0x90ff, 0x3bc2, 0xb830, 0x910c, 0xdaf6, 0xac5, 0x0, 0x1);
        gbc.writeMem(0x90ff, { 0x9 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x3bc2, gbc.sp());
        EXPECT(0x9100, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0x90ff));
        // 09 017D
        gbc.setState(0xca0a, 0x39e8, 0x3a70, 0xa657, 0xa422, 0xc81b, 0x0, 0x0);
        gbc.writeMem(0xca0a, { 0x9 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x39e8, gbc.sp());
        EXPECT(0xca0b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xca0a));
        // 09 017E
        gbc.setState(0xead8, 0x28d3, 0x13d0, 0xdf9b, 0xcdf9, 0xb531, 0x0, 0x1);
        gbc.writeMem(0xead8, { 0x9 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x28d3, gbc.sp());
        EXPECT(0xead9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xead8));
        // 09 017F
        gbc.setState(0x74c3, 0x6483, 0x8910, 0x7f7d, 0x8751, 0x1ed6, 0x0, 0x1);
        gbc.writeMem(0x74c3, { 0x9 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x6483, gbc.sp());
        EXPECT(0x74c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 09 0180
        gbc.setState(0x80e9, 0xef15, 0x3a10, 0x723f, 0x8182, 0x7c8d, 0x1, 0x1);
        gbc.writeMem(0x80e9, { 0x9 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xef15, gbc.sp());
        EXPECT(0x80ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0x80e9));
        // 09 0181
        gbc.setState(0xd4b0, 0xa385, 0x72f0, 0xdd80, 0xdd94, 0x4283, 0x1, 0x1);
        gbc.writeMem(0xd4b0, { 0x9 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xa385, gbc.sp());
        EXPECT(0xd4b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xd4b0));
        // 09 0182
        gbc.setState(0x3718, 0x2141, 0x6840, 0x8405, 0xf928, 0x54d2, 0x0, 0x1);
        gbc.writeMem(0x3718, { 0x9 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x2141, gbc.sp());
        EXPECT(0x3719, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 09 0183
        gbc.setState(0xae10, 0xbf65, 0x16e0, 0x500, 0xfbe5, 0xee44, 0x0, 0x1);
        gbc.writeMem(0xae10, { 0x9 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xbf65, gbc.sp());
        EXPECT(0xae11, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xae10));
        // 09 0184
        gbc.setState(0x8eff, 0xe982, 0x5af0, 0xf49c, 0xe2ea, 0xb365, 0x1, 0x1);
        gbc.writeMem(0x8eff, { 0x9 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xe982, gbc.sp());
        EXPECT(0x8f00, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0x8eff));
        // 09 0185
        gbc.setState(0x9c3d, 0xd765, 0x4230, 0xfb4, 0x8899, 0x97b9, 0x0, 0x0);
        gbc.writeMem(0x9c3d, { 0x9 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xd765, gbc.sp());
        EXPECT(0x9c3e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0x9c3d));
        // 09 0186
        gbc.setState(0x8a51, 0x766a, 0x79b0, 0x6a91, 0xfc6c, 0x80ef, 0x1, 0x0);
        gbc.writeMem(0x8a51, { 0x9 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x766a, gbc.sp());
        EXPECT(0x8a52, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0x8a51));
        // 09 0187
        gbc.setState(0xa7a2, 0xb49e, 0x37a0, 0xeaa4, 0x44c4, 0xc126, 0x1, 0x0);
        gbc.writeMem(0xa7a2, { 0x9 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xb49e, gbc.sp());
        EXPECT(0xa7a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xa7a2));
        // 09 0188
        gbc.setState(0x80e4, 0x840f, 0xac00, 0xf371, 0x4005, 0x99ca, 0x0, 0x1);
        gbc.writeMem(0x80e4, { 0x9 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x840f, gbc.sp());
        EXPECT(0x80e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0x80e4));
        // 09 0189
        gbc.setState(0xaaa, 0x7fb, 0xa5e0, 0x6855, 0xb6a8, 0xac17, 0x0, 0x1);
        gbc.writeMem(0xaaa, { 0x9 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x7fb, gbc.sp());
        EXPECT(0xaab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 09 018A
        gbc.setState(0x143e, 0x29af, 0xcca0, 0x40, 0x2a49, 0x330c, 0x0, 0x1);
        gbc.writeMem(0x143e, { 0x9 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x29af, gbc.sp());
        EXPECT(0x143f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 09 018B
        gbc.setState(0x4d97, 0xdd41, 0x1780, 0x8c00, 0x2ae1, 0x7ad6, 0x0, 0x1);
        gbc.writeMem(0x4d97, { 0x9 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xdd41, gbc.sp());
        EXPECT(0x4d98, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 09 018C
        gbc.setState(0x1529, 0x31a6, 0xd820, 0xd4be, 0x6520, 0xaf74, 0x1, 0x0);
        gbc.writeMem(0x1529, { 0x9 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x31a6, gbc.sp());
        EXPECT(0x152a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 09 018D
        gbc.setState(0xc15f, 0x221b, 0x7f80, 0xc1b4, 0x6714, 0x55, 0x1, 0x1);
        gbc.writeMem(0xc15f, { 0x9 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x221b, gbc.sp());
        EXPECT(0xc160, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xc15f));
        // 09 018E
        gbc.setState(0x783c, 0xe9c4, 0xb540, 0x8edf, 0x73ee, 0x89d8, 0x1, 0x1);
        gbc.writeMem(0x783c, { 0x9 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xe9c4, gbc.sp());
        EXPECT(0x783d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 09 018F
        gbc.setState(0xebca, 0xcc94, 0x10a0, 0x4fb4, 0x7d32, 0xc7ac, 0x0, 0x0);
        gbc.writeMem(0xebca, { 0x9 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xcc94, gbc.sp());
        EXPECT(0xebcb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xebca));
        // 09 0190
        gbc.setState(0x8d8, 0xef82, 0xdc50, 0x3f6b, 0x5d71, 0xc31b, 0x0, 0x0);
        gbc.writeMem(0x8d8, { 0x9 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xef82, gbc.sp());
        EXPECT(0x8d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 09 0191
        gbc.setState(0x949, 0x71b3, 0x3520, 0x83c8, 0xe42, 0xe3b2, 0x1, 0x0);
        gbc.writeMem(0x949, { 0x9 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x71b3, gbc.sp());
        EXPECT(0x94a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 09 0192
        gbc.setState(0xd7a3, 0xb1b2, 0x6830, 0x469d, 0x1096, 0x5d02, 0x0, 0x1);
        gbc.writeMem(0xd7a3, { 0x9 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xb1b2, gbc.sp());
        EXPECT(0xd7a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xd7a3));
        // 09 0193
        gbc.setState(0xe408, 0x4754, 0xad0, 0xc8a1, 0x94da, 0x7e0d, 0x0, 0x0);
        gbc.writeMem(0xe408, { 0x9 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x4754, gbc.sp());
        EXPECT(0xe409, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xe408));
        // 09 0194
        gbc.setState(0x4625, 0xab63, 0x4510, 0xa829, 0x57e7, 0xe7fc, 0x0, 0x0);
        gbc.writeMem(0x4625, { 0x9 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xab63, gbc.sp());
        EXPECT(0x4626, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 09 0195
        gbc.setState(0xdbe, 0x9541, 0xcc30, 0xb3b2, 0x3f54, 0x5a, 0x1, 0x1);
        gbc.writeMem(0xdbe, { 0x9 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x9541, gbc.sp());
        EXPECT(0xdbf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 09 0196
        gbc.setState(0xdd49, 0xa811, 0xf3c0, 0x494a, 0xccd3, 0xc4c8, 0x1, 0x1);
        gbc.writeMem(0xdd49, { 0x9 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xa811, gbc.sp());
        EXPECT(0xdd4a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xdd49));
        // 09 0197
        gbc.setState(0x1cd9, 0xe65, 0xe2e0, 0xc9e6, 0xbf65, 0x8684, 0x1, 0x0);
        gbc.writeMem(0x1cd9, { 0x9 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xe65, gbc.sp());
        EXPECT(0x1cda, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 09 0198
        gbc.setState(0xa4b, 0x36a5, 0xea00, 0x3297, 0xc86d, 0x5e8c, 0x1, 0x0);
        gbc.writeMem(0xa4b, { 0x9 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x36a5, gbc.sp());
        EXPECT(0xa4c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 09 0199
        gbc.setState(0x5d7c, 0x8292, 0x6a40, 0x60cd, 0xdf74, 0x8235, 0x1, 0x1);
        gbc.writeMem(0x5d7c, { 0x9 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x8292, gbc.sp());
        EXPECT(0x5d7d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 09 019A
        gbc.setState(0x84aa, 0x884e, 0x9b70, 0x41fd, 0xba67, 0x6387, 0x1, 0x1);
        gbc.writeMem(0x84aa, { 0x9 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x884e, gbc.sp());
        EXPECT(0x84ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0x84aa));
        // 09 019B
        gbc.setState(0x6177, 0x3d21, 0x42d0, 0xb435, 0xbf5f, 0x166c, 0x1, 0x0);
        gbc.writeMem(0x6177, { 0x9 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x3d21, gbc.sp());
        EXPECT(0x6178, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 09 019D
        gbc.setState(0xbcd1, 0xe5f7, 0x8230, 0x2ba, 0x8ff3, 0x56ac, 0x1, 0x0);
        gbc.writeMem(0xbcd1, { 0x9 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xe5f7, gbc.sp());
        EXPECT(0xbcd2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xbcd1));
        // 09 019E
        gbc.setState(0x5bb, 0x6f56, 0xf70, 0xe308, 0xecbf, 0x867, 0x1, 0x1);
        gbc.writeMem(0x5bb, { 0x9 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x6f56, gbc.sp());
        EXPECT(0x5bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 09 019F
        gbc.setState(0xe8f4, 0xf033, 0xca00, 0x71b7, 0x2eba, 0x2431, 0x0, 0x0);
        gbc.writeMem(0xe8f4, { 0x9 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xf033, gbc.sp());
        EXPECT(0xe8f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xe8f4));
        // 09 01A0
        gbc.setState(0x554f, 0x9458, 0x23c0, 0x5f46, 0x4e90, 0x6f38, 0x0, 0x0);
        gbc.writeMem(0x554f, { 0x9 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x9458, gbc.sp());
        EXPECT(0x5550, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 09 01A1
        gbc.setState(0xb95a, 0xf82a, 0x7390, 0xfc50, 0xd3fa, 0xa17c, 0x1, 0x1);
        gbc.writeMem(0xb95a, { 0x9 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xf82a, gbc.sp());
        EXPECT(0xb95b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xb95a));
        // 09 01A2
        gbc.setState(0x240f, 0xa3ac, 0x6e0, 0x35d3, 0x996f, 0xde30, 0x0, 0x1);
        gbc.writeMem(0x240f, { 0x9 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xa3ac, gbc.sp());
        EXPECT(0x2410, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 09 01A3
        gbc.setState(0x6c1d, 0x4210, 0x2f60, 0xa011, 0xc1e1, 0x30f9, 0x1, 0x0);
        gbc.writeMem(0x6c1d, { 0x9 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x4210, gbc.sp());
        EXPECT(0x6c1e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 09 01A4
        gbc.setState(0xe3dd, 0x4a31, 0xf190, 0x94e0, 0xbbf0, 0x4cae, 0x0, 0x0);
        gbc.writeMem(0xe3dd, { 0x9 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x4a31, gbc.sp());
        EXPECT(0xe3de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xe3dd));
        // 09 01A5
        gbc.setState(0x723f, 0xa348, 0xccf0, 0x8585, 0x3ab4, 0x512e, 0x1, 0x0);
        gbc.writeMem(0x723f, { 0x9 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xa348, gbc.sp());
        EXPECT(0x7240, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 09 01A6
        gbc.setState(0x3b1e, 0xf8c, 0x48a0, 0xb069, 0x5b2f, 0xae3d, 0x0, 0x0);
        gbc.writeMem(0x3b1e, { 0x9 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xf8c, gbc.sp());
        EXPECT(0x3b1f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 09 01A7
        gbc.setState(0x65f2, 0xa977, 0xc8e0, 0xe17e, 0xb5cc, 0x14b2, 0x0, 0x0);
        gbc.writeMem(0x65f2, { 0x9 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xa977, gbc.sp());
        EXPECT(0x65f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 09 01A8
        gbc.setState(0xbabb, 0xc53, 0x760, 0x9618, 0x8e38, 0x6723, 0x1, 0x0);
        gbc.writeMem(0xbabb, { 0x9 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xc53, gbc.sp());
        EXPECT(0xbabc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xbabb));
        // 09 01A9
        gbc.setState(0xef35, 0xaa74, 0xc290, 0x7c9, 0xd303, 0x115f, 0x0, 0x1);
        gbc.writeMem(0xef35, { 0x9 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xaa74, gbc.sp());
        EXPECT(0xef36, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xef35));
        // 09 01AA
        gbc.setState(0xefc3, 0x2e9e, 0xfbe0, 0xab3d, 0xba5f, 0xdb67, 0x0, 0x0);
        gbc.writeMem(0xefc3, { 0x9 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x2e9e, gbc.sp());
        EXPECT(0xefc4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xefc3));
        // 09 01AB
        gbc.setState(0xbcf2, 0xb2f5, 0x580, 0x982, 0x9214, 0xb366, 0x1, 0x0);
        gbc.writeMem(0xbcf2, { 0x9 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xb2f5, gbc.sp());
        EXPECT(0xbcf3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xbcf2));
        // 09 01AC
        gbc.setState(0xa4f8, 0xd7ed, 0xd590, 0xf9cb, 0xde3b, 0xb672, 0x0, 0x0);
        gbc.writeMem(0xa4f8, { 0x9 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xd7ed, gbc.sp());
        EXPECT(0xa4f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xa4f8));
        // 09 01AD
        gbc.setState(0xc0c8, 0x357d, 0x1c10, 0x78de, 0x6936, 0xed80, 0x1, 0x0);
        gbc.writeMem(0xc0c8, { 0x9 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x357d, gbc.sp());
        EXPECT(0xc0c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xc0c8));
        // 09 01AE
        gbc.setState(0x6206, 0xd6d9, 0x23e0, 0x361d, 0x1c1d, 0x7a9e, 0x0, 0x0);
        gbc.writeMem(0x6206, { 0x9 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xd6d9, gbc.sp());
        EXPECT(0x6207, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 09 01AF
        gbc.setState(0x4ed2, 0x7d4b, 0xac60, 0x21cb, 0x4136, 0x1c58, 0x1, 0x1);
        gbc.writeMem(0x4ed2, { 0x9 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x7d4b, gbc.sp());
        EXPECT(0x4ed3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 09 01B0
        gbc.setState(0x771b, 0x23d1, 0xb1f0, 0x747, 0xa071, 0x5462, 0x0, 0x1);
        gbc.writeMem(0x771b, { 0x9 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x23d1, gbc.sp());
        EXPECT(0x771c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 09 01B2
        gbc.setState(0x628f, 0x291a, 0x69b0, 0x885c, 0xc175, 0xcc0a, 0x0, 0x0);
        gbc.writeMem(0x628f, { 0x9 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x291a, gbc.sp());
        EXPECT(0x6290, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 09 01B3
        gbc.setState(0x2770, 0xd0fe, 0xc630, 0xb749, 0x56c7, 0x975, 0x0, 0x0);
        gbc.writeMem(0x2770, { 0x9 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xd0fe, gbc.sp());
        EXPECT(0x2771, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 09 01B4
        gbc.setState(0x31c3, 0x7a50, 0x6d80, 0x8150, 0x5398, 0xbdc9, 0x1, 0x1);
        gbc.writeMem(0x31c3, { 0x9 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x7a50, gbc.sp());
        EXPECT(0x31c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 09 01B5
        gbc.setState(0x3dfb, 0xa2f5, 0x110, 0x6e94, 0xa35d, 0x78dd, 0x1, 0x1);
        gbc.writeMem(0x3dfb, { 0x9 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xa2f5, gbc.sp());
        EXPECT(0x3dfc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 09 01B6
        gbc.setState(0x96bd, 0x86bf, 0xbbd0, 0x2147, 0xa2f3, 0x1dc7, 0x1, 0x1);
        gbc.writeMem(0x96bd, { 0x9 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x86bf, gbc.sp());
        EXPECT(0x96be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0x96bd));
        // 09 01B7
        gbc.setState(0x72b, 0xecdc, 0x2400, 0xdcd2, 0xee0f, 0x7e38, 0x0, 0x0);
        gbc.writeMem(0x72b, { 0x9 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xecdc, gbc.sp());
        EXPECT(0x72c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 09 01B8
        gbc.setState(0xb9c0, 0x49cc, 0x6280, 0x4217, 0x1b2b, 0xbf3d, 0x1, 0x0);
        gbc.writeMem(0xb9c0, { 0x9 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x49cc, gbc.sp());
        EXPECT(0xb9c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xb9c0));
        // 09 01B9
        gbc.setState(0xe73f, 0xb6ae, 0x70f0, 0x9c59, 0x830e, 0xdf99, 0x0, 0x1);
        gbc.writeMem(0xe73f, { 0x9 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xb6ae, gbc.sp());
        EXPECT(0xe740, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xe73f));
        // 09 01BA
        gbc.setState(0xe823, 0x4dc6, 0xe7d0, 0x461f, 0x73b7, 0x6ae4, 0x1, 0x1);
        gbc.writeMem(0xe823, { 0x9 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x4dc6, gbc.sp());
        EXPECT(0xe824, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xe823));
        // 09 01BB
        gbc.setState(0x478b, 0x6984, 0x5ff0, 0x7d15, 0xf162, 0xc075, 0x1, 0x1);
        gbc.writeMem(0x478b, { 0x9 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x6984, gbc.sp());
        EXPECT(0x478c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 09 01BC
        gbc.setState(0x8b32, 0x6837, 0x8a10, 0x637e, 0x7431, 0x52d5, 0x1, 0x1);
        gbc.writeMem(0x8b32, { 0x9 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x6837, gbc.sp());
        EXPECT(0x8b33, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0x8b32));
        // 09 01BD
        gbc.setState(0x6dd6, 0x1346, 0x7cf0, 0x293c, 0x9bfe, 0x341b, 0x1, 0x1);
        gbc.writeMem(0x6dd6, { 0x9 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x1346, gbc.sp());
        EXPECT(0x6dd7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 09 01BE
        gbc.setState(0xab2c, 0xd2d4, 0xe580, 0xa986, 0x5c56, 0xddcb, 0x0, 0x0);
        gbc.writeMem(0xab2c, { 0x9 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xd2d4, gbc.sp());
        EXPECT(0xab2d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xab2c));
        // 09 01BF
        gbc.setState(0xc76d, 0xe82e, 0xa5f0, 0x1358, 0xc94e, 0x6096, 0x1, 0x0);
        gbc.writeMem(0xc76d, { 0x9 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xe82e, gbc.sp());
        EXPECT(0xc76e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xc76d));
        // 09 01C0
        gbc.setState(0x6f22, 0xb9b3, 0x87b0, 0x555e, 0x55cc, 0x60d1, 0x1, 0x0);
        gbc.writeMem(0x6f22, { 0x9 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xb9b3, gbc.sp());
        EXPECT(0x6f23, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 09 01C1
        gbc.setState(0xb33d, 0xf5a8, 0x6ab0, 0xb737, 0x4005, 0xe85a, 0x0, 0x1);
        gbc.writeMem(0xb33d, { 0x9 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xf5a8, gbc.sp());
        EXPECT(0xb33e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xb33d));
        // 09 01C2
        gbc.setState(0x37a4, 0x225f, 0xc30, 0x1735, 0x2498, 0xd546, 0x1, 0x0);
        gbc.writeMem(0x37a4, { 0x9 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x225f, gbc.sp());
        EXPECT(0x37a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 09 01C3
        gbc.setState(0x98e5, 0x6b47, 0xdb70, 0xc4f5, 0x2756, 0xd458, 0x0, 0x0);
        gbc.writeMem(0x98e5, { 0x9 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x6b47, gbc.sp());
        EXPECT(0x98e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0x98e5));
        // 09 01C4
        gbc.setState(0x6a9d, 0x4d05, 0xc5a0, 0xa2bd, 0x19ea, 0x3c80, 0x1, 0x0);
        gbc.writeMem(0x6a9d, { 0x9 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x4d05, gbc.sp());
        EXPECT(0x6a9e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 09 01C5
        gbc.setState(0xdf36, 0x52ad, 0xd130, 0xfe11, 0xf31f, 0x24a4, 0x0, 0x0);
        gbc.writeMem(0xdf36, { 0x9 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x52ad, gbc.sp());
        EXPECT(0xdf37, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xdf36));
        // 09 01C6
        gbc.setState(0xc7d, 0x965, 0xf630, 0x731f, 0xa78c, 0xcb1c, 0x1, 0x1);
        gbc.writeMem(0xc7d, { 0x9 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x965, gbc.sp());
        EXPECT(0xc7e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 09 01C7
        gbc.setState(0x34f5, 0x5424, 0xb160, 0x60b7, 0xa6c, 0xc2b, 0x0, 0x1);
        gbc.writeMem(0x34f5, { 0x9 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x5424, gbc.sp());
        EXPECT(0x34f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 09 01C9
        gbc.setState(0x2843, 0x4a3e, 0x11c0, 0x3329, 0x190a, 0xe9cb, 0x1, 0x0);
        gbc.writeMem(0x2843, { 0x9 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x4a3e, gbc.sp());
        EXPECT(0x2844, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 09 01CA
        gbc.setState(0xd592, 0xb8c0, 0x14c0, 0xcfc1, 0x313e, 0x3021, 0x0, 0x0);
        gbc.writeMem(0xd592, { 0x9 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xb8c0, gbc.sp());
        EXPECT(0xd593, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xd592));
        // 09 01CB
        gbc.setState(0x6c47, 0x6a0b, 0xd210, 0x2e37, 0x41f2, 0x9c27, 0x1, 0x1);
        gbc.writeMem(0x6c47, { 0x9 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x6a0b, gbc.sp());
        EXPECT(0x6c48, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 09 01CC
        gbc.setState(0x40d4, 0xd244, 0xb760, 0x40d3, 0xb66e, 0x6b20, 0x0, 0x1);
        gbc.writeMem(0x40d4, { 0x9 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xd244, gbc.sp());
        EXPECT(0x40d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 09 01CD
        gbc.setState(0x5801, 0x382e, 0xe810, 0xc5a5, 0x54d8, 0x534d, 0x0, 0x0);
        gbc.writeMem(0x5801, { 0x9 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x382e, gbc.sp());
        EXPECT(0x5802, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 09 01CE
        gbc.setState(0x89b3, 0x8e10, 0x7130, 0x27d9, 0x1f38, 0xc82d, 0x1, 0x0);
        gbc.writeMem(0x89b3, { 0x9 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x8e10, gbc.sp());
        EXPECT(0x89b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0x89b3));
        // 09 01CF
        gbc.setState(0xba8f, 0xbaed, 0x80e0, 0x264b, 0xd5b4, 0x5141, 0x1, 0x1);
        gbc.writeMem(0xba8f, { 0x9 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xbaed, gbc.sp());
        EXPECT(0xba90, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xba8f));
        // 09 01D0
        gbc.setState(0xe481, 0x6f91, 0xb730, 0xa2cd, 0xa016, 0xde32, 0x0, 0x1);
        gbc.writeMem(0xe481, { 0x9 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x6f91, gbc.sp());
        EXPECT(0xe482, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xe481));
        // 09 01D1
        gbc.setState(0xa01f, 0x42d8, 0x4e00, 0x398e, 0xab6e, 0xc4d0, 0x0, 0x1);
        gbc.writeMem(0xa01f, { 0x9 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x42d8, gbc.sp());
        EXPECT(0xa020, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xa01f));
        // 09 01D2
        gbc.setState(0x6631, 0xcac8, 0x73f0, 0x39ca, 0x7c99, 0xd40c, 0x0, 0x1);
        gbc.writeMem(0x6631, { 0x9 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xcac8, gbc.sp());
        EXPECT(0x6632, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 09 01D3
        gbc.setState(0x6b23, 0x366e, 0x4250, 0xb8b3, 0x7b8a, 0x961d, 0x0, 0x1);
        gbc.writeMem(0x6b23, { 0x9 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x366e, gbc.sp());
        EXPECT(0x6b24, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 09 01D4
        gbc.setState(0xce7c, 0xc714, 0xd310, 0xad85, 0x7e42, 0xd45a, 0x1, 0x1);
        gbc.writeMem(0xce7c, { 0x9 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xc714, gbc.sp());
        EXPECT(0xce7d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xce7c));
        // 09 01D5
        gbc.setState(0x2b68, 0xfafe, 0xf830, 0x246f, 0x34b8, 0x1fd8, 0x0, 0x1);
        gbc.writeMem(0x2b68, { 0x9 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xfafe, gbc.sp());
        EXPECT(0x2b69, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 09 01D6
        gbc.setState(0x82a5, 0xf064, 0x9980, 0x2d93, 0x226b, 0x90ff, 0x1, 0x1);
        gbc.writeMem(0x82a5, { 0x9 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xf064, gbc.sp());
        EXPECT(0x82a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0x82a5));
        // 09 01D7
        gbc.setState(0x5bec, 0xedd9, 0xf290, 0xa248, 0xa5b5, 0xa201, 0x0, 0x0);
        gbc.writeMem(0x5bec, { 0x9 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xedd9, gbc.sp());
        EXPECT(0x5bed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 09 01D8
        gbc.setState(0x3382, 0x1979, 0x4050, 0xb229, 0xd414, 0xae1d, 0x1, 0x0);
        gbc.writeMem(0x3382, { 0x9 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x1979, gbc.sp());
        EXPECT(0x3383, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 09 01D9
        gbc.setState(0x4321, 0xcc38, 0x11a0, 0xded0, 0x798a, 0x27a4, 0x1, 0x1);
        gbc.writeMem(0x4321, { 0x9 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xcc38, gbc.sp());
        EXPECT(0x4322, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 09 01DA
        gbc.setState(0xbe76, 0xb72b, 0x49e0, 0xc7b5, 0x61e7, 0xb520, 0x1, 0x0);
        gbc.writeMem(0xbe76, { 0x9 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xb72b, gbc.sp());
        EXPECT(0xbe77, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xbe76));
        // 09 01DB
        gbc.setState(0x8556, 0x5e19, 0xb3a0, 0xce5d, 0xefcd, 0x869b, 0x1, 0x0);
        gbc.writeMem(0x8556, { 0x9 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x5e19, gbc.sp());
        EXPECT(0x8557, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0x8556));
        // 09 01DC
        gbc.setState(0x65c2, 0xe719, 0x17a0, 0xc4c8, 0x470c, 0x6bab, 0x0, 0x1);
        gbc.writeMem(0x65c2, { 0x9 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xe719, gbc.sp());
        EXPECT(0x65c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 09 01DD
        gbc.setState(0x3352, 0xf3da, 0xfb30, 0xd798, 0x90a4, 0x4943, 0x1, 0x1);
        gbc.writeMem(0x3352, { 0x9 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xf3da, gbc.sp());
        EXPECT(0x3353, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 09 01DF
        gbc.setState(0x8270, 0xc0d4, 0x3b0, 0x10e2, 0x183f, 0xfb36, 0x0, 0x1);
        gbc.writeMem(0x8270, { 0x9 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xc0d4, gbc.sp());
        EXPECT(0x8271, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0x8270));
        // 09 01E0
        gbc.setState(0x6677, 0xe994, 0x39b0, 0x734c, 0x3dc5, 0xafde, 0x1, 0x1);
        gbc.writeMem(0x6677, { 0x9 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xe994, gbc.sp());
        EXPECT(0x6678, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 09 01E1
        gbc.setState(0x5459, 0x1194, 0x5810, 0x542a, 0xcca6, 0xcb6, 0x0, 0x1);
        gbc.writeMem(0x5459, { 0x9 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x1194, gbc.sp());
        EXPECT(0x545a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 09 01E2
        gbc.setState(0x39a0, 0x8569, 0xa5e0, 0xbd0e, 0x6a6d, 0x72e6, 0x0, 0x0);
        gbc.writeMem(0x39a0, { 0x9 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x8569, gbc.sp());
        EXPECT(0x39a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 09 01E3
        gbc.setState(0x13c3, 0x4ed3, 0xd680, 0xadf8, 0xb6b3, 0x4372, 0x1, 0x0);
        gbc.writeMem(0x13c3, { 0x9 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x4ed3, gbc.sp());
        EXPECT(0x13c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 09 01E4
        gbc.setState(0x8888, 0xeee8, 0x1b30, 0x6e3e, 0x1eee, 0x7699, 0x0, 0x1);
        gbc.writeMem(0x8888, { 0x9 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xeee8, gbc.sp());
        EXPECT(0x8889, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0x8888));
        // 09 01E5
        gbc.setState(0xd4af, 0xb69f, 0xa670, 0x56b8, 0xb928, 0xc48, 0x1, 0x0);
        gbc.writeMem(0xd4af, { 0x9 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xb69f, gbc.sp());
        EXPECT(0xd4b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xd4af));
        // 09 01E6
        gbc.setState(0x4bd0, 0xb06c, 0x2b40, 0x6dd2, 0x53e1, 0xd774, 0x1, 0x0);
        gbc.writeMem(0x4bd0, { 0x9 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xb06c, gbc.sp());
        EXPECT(0x4bd1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 09 01E7
        gbc.setState(0x9c5, 0xacb0, 0x2440, 0x20a9, 0x4792, 0xd05e, 0x0, 0x1);
        gbc.writeMem(0x9c5, { 0x9 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xacb0, gbc.sp());
        EXPECT(0x9c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 09 01E9
        gbc.setState(0xc306, 0xcbb3, 0xb4c0, 0x3723, 0x5f13, 0x925, 0x1, 0x1);
        gbc.writeMem(0xc306, { 0x9 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xcbb3, gbc.sp());
        EXPECT(0xc307, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xc306));
        // 09 01EA
        gbc.setState(0x7b87, 0xfb72, 0x6e0, 0x76e, 0x17e6, 0xb2cc, 0x0, 0x0);
        gbc.writeMem(0x7b87, { 0x9 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xfb72, gbc.sp());
        EXPECT(0x7b88, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 09 01EB
        gbc.setState(0x8e84, 0x6ceb, 0xe650, 0xed82, 0xbdb9, 0x7c2d, 0x1, 0x0);
        gbc.writeMem(0x8e84, { 0x9 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x6ceb, gbc.sp());
        EXPECT(0x8e85, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0x8e84));
        // 09 01EC
        gbc.setState(0xbedf, 0x7150, 0xdc80, 0x7ca6, 0x2e18, 0x1ce8, 0x0, 0x1);
        gbc.writeMem(0xbedf, { 0x9 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x7150, gbc.sp());
        EXPECT(0xbee0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xbedf));
        // 09 01ED
        gbc.setState(0xc48, 0xc712, 0x86c0, 0x8935, 0x9e11, 0xbc4b, 0x0, 0x1);
        gbc.writeMem(0xc48, { 0x9 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xc712, gbc.sp());
        EXPECT(0xc49, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 09 01EE
        gbc.setState(0xc34f, 0xc231, 0xb480, 0x6f20, 0x5ad8, 0xc872, 0x0, 0x0);
        gbc.writeMem(0xc34f, { 0x9 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xc231, gbc.sp());
        EXPECT(0xc350, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xc34f));
        // 09 01EF
        gbc.setState(0x8567, 0x934e, 0xb730, 0x3e07, 0x3340, 0x9fac, 0x1, 0x0);
        gbc.writeMem(0x8567, { 0x9 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x934e, gbc.sp());
        EXPECT(0x8568, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0x8567));
        // 09 01F0
        gbc.setState(0xbbbb, 0xd680, 0x6500, 0xc004, 0x9974, 0xfd00, 0x0, 0x1);
        gbc.writeMem(0xbbbb, { 0x9 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xd680, gbc.sp());
        EXPECT(0xbbbc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xbbbb));
        // 09 01F1
        gbc.setState(0xb7f, 0x79fa, 0x6290, 0x7a5f, 0x2b9a, 0xf406, 0x1, 0x0);
        gbc.writeMem(0xb7f, { 0x9 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x79fa, gbc.sp());
        EXPECT(0xb80, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 09 01F2
        gbc.setState(0x5437, 0x6526, 0x9bf0, 0x132b, 0x9a51, 0x6ea0, 0x1, 0x0);
        gbc.writeMem(0x5437, { 0x9 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x6526, gbc.sp());
        EXPECT(0x5438, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 09 01F3
        gbc.setState(0x6688, 0xdb1d, 0xfdc0, 0xa4dc, 0x9889, 0x2df1, 0x0, 0x1);
        gbc.writeMem(0x6688, { 0x9 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xdb1d, gbc.sp());
        EXPECT(0x6689, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 09 01F4
        gbc.setState(0xade2, 0xd4b3, 0x1a00, 0x1400, 0xba1a, 0x6c85, 0x0, 0x0);
        gbc.writeMem(0xade2, { 0x9 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xd4b3, gbc.sp());
        EXPECT(0xade3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xade2));
        // 09 01F5
        gbc.setState(0xd86f, 0x319b, 0x3880, 0xd958, 0x675a, 0x3bbf, 0x0, 0x1);
        gbc.writeMem(0xd86f, { 0x9 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x319b, gbc.sp());
        EXPECT(0xd870, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xd86f));
        // 09 01F6
        gbc.setState(0x6279, 0x80c2, 0x9ab0, 0x551e, 0xc48a, 0xadf1, 0x1, 0x1);
        gbc.writeMem(0x6279, { 0x9 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x80c2, gbc.sp());
        EXPECT(0x627a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 09 01F7
        gbc.setState(0x325f, 0xfbba, 0x19d0, 0x5620, 0x5e43, 0x9469, 0x0, 0x0);
        gbc.writeMem(0x325f, { 0x9 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xfbba, gbc.sp());
        EXPECT(0x3260, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 09 01F8
        gbc.setState(0xaef2, 0x20d2, 0xebc0, 0x1df1, 0xebec, 0x3533, 0x1, 0x1);
        gbc.writeMem(0xaef2, { 0x9 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x20d2, gbc.sp());
        EXPECT(0xaef3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xaef2));
        // 09 01F9
        gbc.setState(0x3a2a, 0xdd54, 0x3010, 0x69f7, 0x373a, 0x99df, 0x0, 0x1);
        gbc.writeMem(0x3a2a, { 0x9 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xdd54, gbc.sp());
        EXPECT(0x3a2b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 09 01FA
        gbc.setState(0x369c, 0x7ab, 0x23b0, 0x5fe1, 0x8983, 0x5f46, 0x1, 0x0);
        gbc.writeMem(0x369c, { 0x9 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x7ab, gbc.sp());
        EXPECT(0x369d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 09 01FB
        gbc.setState(0x7cff, 0xf777, 0xae50, 0x5f2f, 0x6a23, 0xb90a, 0x1, 0x1);
        gbc.writeMem(0x7cff, { 0x9 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xf777, gbc.sp());
        EXPECT(0x7d00, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 09 01FC
        gbc.setState(0xa80f, 0xab7, 0x8800, 0x6b18, 0x4e18, 0xc4de, 0x0, 0x0);
        gbc.writeMem(0xa80f, { 0x9 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xab7, gbc.sp());
        EXPECT(0xa810, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xa80f));
        // 09 01FD
        gbc.setState(0xd362, 0x61a9, 0x720, 0xaf5d, 0x2d75, 0x5f57, 0x0, 0x0);
        gbc.writeMem(0xd362, { 0x9 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x61a9, gbc.sp());
        EXPECT(0xd363, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xd362));
        // 09 01FE
        gbc.setState(0x5c98, 0x5164, 0x6f10, 0xe16, 0x27ee, 0xf150, 0x0, 0x0);
        gbc.writeMem(0x5c98, { 0x9 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x5164, gbc.sp());
        EXPECT(0x5c99, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 09 01FF
        gbc.setState(0x8587, 0xb980, 0xee70, 0xd865, 0xbd3d, 0xe708, 0x1, 0x1);
        gbc.writeMem(0x8587, { 0x9 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xb980, gbc.sp());
        EXPECT(0x8588, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0x8587));
        // 09 0200
        gbc.setState(0x91a7, 0x2360, 0x6e0, 0xf82e, 0x757e, 0x5ef1, 0x1, 0x0);
        gbc.writeMem(0x91a7, { 0x9 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x2360, gbc.sp());
        EXPECT(0x91a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0x91a7));
        // 09 0201
        gbc.setState(0xc5b2, 0x91ca, 0x23c0, 0x755a, 0xa796, 0xf148, 0x1, 0x0);
        gbc.writeMem(0xc5b2, { 0x9 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x91ca, gbc.sp());
        EXPECT(0xc5b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xc5b2));
        // 09 0202
        gbc.setState(0x82a0, 0xb471, 0xf020, 0x8974, 0xdc3, 0x1c2c, 0x0, 0x1);
        gbc.writeMem(0x82a0, { 0x9 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xb471, gbc.sp());
        EXPECT(0x82a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0x82a0));
        // 09 0203
        gbc.setState(0x8a49, 0x94e2, 0x4d0, 0x516e, 0x917b, 0xc9e, 0x0, 0x0);
        gbc.writeMem(0x8a49, { 0x9 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x94e2, gbc.sp());
        EXPECT(0x8a4a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0x8a49));
        // 09 0204
        gbc.setState(0x93d2, 0xcbff, 0x21d0, 0xe753, 0xbc9e, 0x334b, 0x0, 0x1);
        gbc.writeMem(0x93d2, { 0x9 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xcbff, gbc.sp());
        EXPECT(0x93d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0x93d2));
        // 09 0205
        gbc.setState(0xc5be, 0xc9f9, 0x6b30, 0xf986, 0x2d2d, 0x5094, 0x1, 0x1);
        gbc.writeMem(0xc5be, { 0x9 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xc9f9, gbc.sp());
        EXPECT(0xc5bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xc5be));
        // 09 0206
        gbc.setState(0xa1cc, 0x1378, 0xd550, 0x53b0, 0xa3f, 0x3b5f, 0x1, 0x0);
        gbc.writeMem(0xa1cc, { 0x9 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x1378, gbc.sp());
        EXPECT(0xa1cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xa1cc));
        // 09 0207
        gbc.setState(0x35d0, 0x7951, 0xfd40, 0xba29, 0x6824, 0xccdc, 0x0, 0x1);
        gbc.writeMem(0x35d0, { 0x9 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x7951, gbc.sp());
        EXPECT(0x35d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 09 0208
        gbc.setState(0x48f2, 0x3aad, 0x5470, 0x4c73, 0x777f, 0x76b8, 0x1, 0x0);
        gbc.writeMem(0x48f2, { 0x9 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x3aad, gbc.sp());
        EXPECT(0x48f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 09 0209
        gbc.setState(0x6d7, 0xd80a, 0x1d60, 0x2e2b, 0x957c, 0x88da, 0x1, 0x1);
        gbc.writeMem(0x6d7, { 0x9 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xd80a, gbc.sp());
        EXPECT(0x6d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 09 020A
        gbc.setState(0x6168, 0x4f6f, 0x2a00, 0x92fb, 0x8515, 0x8eed, 0x1, 0x1);
        gbc.writeMem(0x6168, { 0x9 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x4f6f, gbc.sp());
        EXPECT(0x6169, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 09 020B
        gbc.setState(0xbf79, 0xee2d, 0x6e90, 0xa94b, 0x3751, 0x805c, 0x0, 0x0);
        gbc.writeMem(0xbf79, { 0x9 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xee2d, gbc.sp());
        EXPECT(0xbf7a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xbf79));
        // 09 020C
        gbc.setState(0x16fd, 0xe9dc, 0x9020, 0x422a, 0x8c8d, 0xfd80, 0x1, 0x0);
        gbc.writeMem(0x16fd, { 0x9 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xe9dc, gbc.sp());
        EXPECT(0x16fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 09 020D
        gbc.setState(0xb92d, 0x41, 0x8a00, 0x392f, 0x8281, 0x4769, 0x1, 0x1);
        gbc.writeMem(0xb92d, { 0x9 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x41, gbc.sp());
        EXPECT(0xb92e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xb92d));
        // 09 020E
        gbc.setState(0xee15, 0xae0b, 0x62b0, 0x6cdc, 0x3f10, 0xc9fb, 0x0, 0x0);
        gbc.writeMem(0xee15, { 0x9 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xae0b, gbc.sp());
        EXPECT(0xee16, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xee15));
        // 09 020F
        gbc.setState(0x235f, 0xf19e, 0xc790, 0xbfb9, 0xd465, 0xa605, 0x1, 0x0);
        gbc.writeMem(0x235f, { 0x9 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xf19e, gbc.sp());
        EXPECT(0x2360, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 09 0210
        gbc.setState(0x2712, 0x983b, 0xed60, 0x1c5a, 0xcc3f, 0xda23, 0x1, 0x1);
        gbc.writeMem(0x2712, { 0x9 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x983b, gbc.sp());
        EXPECT(0x2713, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 09 0211
        gbc.setState(0x3069, 0x135f, 0xb530, 0x8c95, 0x5954, 0xabc3, 0x0, 0x0);
        gbc.writeMem(0x3069, { 0x9 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x135f, gbc.sp());
        EXPECT(0x306a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 09 0212
        gbc.setState(0xdfca, 0x9365, 0xe8e0, 0xca64, 0x21d6, 0xb6ee, 0x0, 0x0);
        gbc.writeMem(0xdfca, { 0x9 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x9365, gbc.sp());
        EXPECT(0xdfcb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xdfca));
        // 09 0213
        gbc.setState(0x3f87, 0xbc59, 0x2cd0, 0x7a1b, 0x47c9, 0xb30e, 0x0, 0x0);
        gbc.writeMem(0x3f87, { 0x9 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xbc59, gbc.sp());
        EXPECT(0x3f88, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 09 0214
        gbc.setState(0xa419, 0x8829, 0x12d0, 0x5095, 0x2c5b, 0xdc4b, 0x1, 0x1);
        gbc.writeMem(0xa419, { 0x9 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x8829, gbc.sp());
        EXPECT(0xa41a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xa419));
        // 09 0215
        gbc.setState(0xad61, 0x38b4, 0x9770, 0xd0e2, 0x465e, 0xbdd5, 0x1, 0x0);
        gbc.writeMem(0xad61, { 0x9 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x38b4, gbc.sp());
        EXPECT(0xad62, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xad61));
        // 09 0216
        gbc.setState(0x113, 0x46f, 0xfce0, 0xde74, 0x79ad, 0x6826, 0x1, 0x0);
        gbc.writeMem(0x113, { 0x9 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x46f, gbc.sp());
        EXPECT(0x114, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 09 0217
        gbc.setState(0x386, 0xc07e, 0x3e0, 0xe993, 0x12b3, 0x4f92, 0x1, 0x0);
        gbc.writeMem(0x386, { 0x9 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xc07e, gbc.sp());
        EXPECT(0x387, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 09 0218
        gbc.setState(0x440c, 0xed3c, 0xc4b0, 0xd0a2, 0x71c3, 0xba5, 0x0, 0x0);
        gbc.writeMem(0x440c, { 0x9 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xed3c, gbc.sp());
        EXPECT(0x440d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 09 0219
        gbc.setState(0x64c8, 0xf23b, 0x490, 0x17c6, 0x603c, 0x5669, 0x0, 0x1);
        gbc.writeMem(0x64c8, { 0x9 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xf23b, gbc.sp());
        EXPECT(0x64c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 09 021A
        gbc.setState(0xda2f, 0xdf7c, 0x64b0, 0xd310, 0xeec0, 0x831, 0x0, 0x0);
        gbc.writeMem(0xda2f, { 0x9 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xdf7c, gbc.sp());
        EXPECT(0xda30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xda2f));
        // 09 021B
        gbc.setState(0x14d7, 0xaa35, 0x3b70, 0xd942, 0x35c6, 0x132c, 0x0, 0x1);
        gbc.writeMem(0x14d7, { 0x9 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xaa35, gbc.sp());
        EXPECT(0x14d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 09 021C
        gbc.setState(0x4db4, 0x9ce1, 0xcb10, 0xd702, 0x604d, 0x354e, 0x0, 0x1);
        gbc.writeMem(0x4db4, { 0x9 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x9ce1, gbc.sp());
        EXPECT(0x4db5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 09 021D
        gbc.setState(0xd45a, 0x659, 0x8830, 0xd9f0, 0xe723, 0x87e5, 0x0, 0x1);
        gbc.writeMem(0xd45a, { 0x9 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x659, gbc.sp());
        EXPECT(0xd45b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xd45a));
        // 09 021E
        gbc.setState(0x3f55, 0x7929, 0xba50, 0xc63, 0x4ba1, 0xd96a, 0x1, 0x1);
        gbc.writeMem(0x3f55, { 0x9 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x7929, gbc.sp());
        EXPECT(0x3f56, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 09 021F
        gbc.setState(0x5ab5, 0x8c18, 0x4570, 0x2c7d, 0xc30b, 0xaa0d, 0x0, 0x0);
        gbc.writeMem(0x5ab5, { 0x9 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x8c18, gbc.sp());
        EXPECT(0x5ab6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 09 0220
        gbc.setState(0x3b7d, 0x51b1, 0xa7d0, 0xd175, 0xb24b, 0xa70, 0x0, 0x0);
        gbc.writeMem(0x3b7d, { 0x9 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x51b1, gbc.sp());
        EXPECT(0x3b7e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 09 0221
        gbc.setState(0x9d37, 0xfe63, 0xd7c0, 0x7185, 0xfc03, 0x288c, 0x0, 0x1);
        gbc.writeMem(0x9d37, { 0x9 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xfe63, gbc.sp());
        EXPECT(0x9d38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0x9d37));
        // 09 0222
        gbc.setState(0x69bb, 0x869a, 0x2f60, 0x6c49, 0x23de, 0x330e, 0x1, 0x0);
        gbc.writeMem(0x69bb, { 0x9 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x869a, gbc.sp());
        EXPECT(0x69bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 09 0223
        gbc.setState(0x1b41, 0x36f3, 0x8c00, 0x8adc, 0x61f1, 0x71a7, 0x0, 0x0);
        gbc.writeMem(0x1b41, { 0x9 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x36f3, gbc.sp());
        EXPECT(0x1b42, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 09 0224
        gbc.setState(0xec37, 0x519d, 0x82f0, 0x9f5a, 0x44d2, 0xf688, 0x1, 0x1);
        gbc.writeMem(0xec37, { 0x9 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x519d, gbc.sp());
        EXPECT(0xec38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xec37));
        // 09 0225
        gbc.setState(0x745e, 0xa56f, 0x3e30, 0xfacc, 0x4f46, 0xeb54, 0x0, 0x0);
        gbc.writeMem(0x745e, { 0x9 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xa56f, gbc.sp());
        EXPECT(0x745f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 09 0226
        gbc.setState(0xd1ce, 0x8ea9, 0x190, 0x7695, 0x2b43, 0x89bf, 0x0, 0x0);
        gbc.writeMem(0xd1ce, { 0x9 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x8ea9, gbc.sp());
        EXPECT(0xd1cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xd1ce));
        // 09 0227
        gbc.setState(0x6d02, 0x35db, 0x6f90, 0x7f65, 0x80dd, 0xb52d, 0x0, 0x0);
        gbc.writeMem(0x6d02, { 0x9 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x35db, gbc.sp());
        EXPECT(0x6d03, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 09 0228
        gbc.setState(0xd379, 0x58cd, 0x1f60, 0x87a1, 0xb586, 0x3aea, 0x1, 0x1);
        gbc.writeMem(0xd379, { 0x9 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x58cd, gbc.sp());
        EXPECT(0xd37a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xd379));
        // 09 0229
        gbc.setState(0xd59b, 0x959e, 0x4bc0, 0x3ccf, 0xb5a3, 0xdab9, 0x0, 0x1);
        gbc.writeMem(0xd59b, { 0x9 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x959e, gbc.sp());
        EXPECT(0xd59c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xd59b));
        // 09 022A
        gbc.setState(0x7cb7, 0xfb1f, 0xdc0, 0xd5d9, 0x503d, 0x1780, 0x0, 0x0);
        gbc.writeMem(0x7cb7, { 0x9 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xfb1f, gbc.sp());
        EXPECT(0x7cb8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 09 022B
        gbc.setState(0x5831, 0x60f2, 0xbfc0, 0xeb61, 0x2da4, 0x3df, 0x0, 0x0);
        gbc.writeMem(0x5831, { 0x9 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x60f2, gbc.sp());
        EXPECT(0x5832, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 09 022D
        gbc.setState(0xcc5, 0x627e, 0x4420, 0x4d51, 0xe93e, 0x6536, 0x0, 0x0);
        gbc.writeMem(0xcc5, { 0x9 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x627e, gbc.sp());
        EXPECT(0xcc6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 09 022E
        gbc.setState(0x8ce, 0xef37, 0x6460, 0x17a5, 0xb910, 0x6fde, 0x1, 0x1);
        gbc.writeMem(0x8ce, { 0x9 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xef37, gbc.sp());
        EXPECT(0x8cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 09 022F
        gbc.setState(0xcdc3, 0xaedd, 0xf6f0, 0x245e, 0xe628, 0xfbc2, 0x0, 0x1);
        gbc.writeMem(0xcdc3, { 0x9 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xaedd, gbc.sp());
        EXPECT(0xcdc4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xcdc3));
        // 09 0230
        gbc.setState(0x41ee, 0xfbf7, 0x3280, 0x3fd7, 0xb63c, 0x68fc, 0x0, 0x1);
        gbc.writeMem(0x41ee, { 0x9 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xfbf7, gbc.sp());
        EXPECT(0x41ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 09 0231
        gbc.setState(0x3d0d, 0xe759, 0x1bc0, 0xc7df, 0xd0a9, 0xf999, 0x0, 0x1);
        gbc.writeMem(0x3d0d, { 0x9 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xe759, gbc.sp());
        EXPECT(0x3d0e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 09 0232
        gbc.setState(0x75be, 0xc107, 0xcfc0, 0x7cc9, 0x5876, 0x7a1, 0x0, 0x0);
        gbc.writeMem(0x75be, { 0x9 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xc107, gbc.sp());
        EXPECT(0x75bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 09 0233
        gbc.setState(0x340e, 0x60c, 0x7130, 0x1ea9, 0x2108, 0x7cf4, 0x1, 0x1);
        gbc.writeMem(0x340e, { 0x9 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x60c, gbc.sp());
        EXPECT(0x340f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 09 0234
        gbc.setState(0x3d2b, 0x6cf7, 0x9000, 0x2b63, 0xaf06, 0xcbd7, 0x1, 0x0);
        gbc.writeMem(0x3d2b, { 0x9 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x6cf7, gbc.sp());
        EXPECT(0x3d2c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 09 0235
        gbc.setState(0x5490, 0x2b19, 0x37d0, 0x5c67, 0xe2d3, 0xa110, 0x0, 0x1);
        gbc.writeMem(0x5490, { 0x9 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x2b19, gbc.sp());
        EXPECT(0x5491, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 09 0236
        gbc.setState(0x608b, 0x5fe3, 0xdd0, 0x7c73, 0xca5a, 0x964d, 0x1, 0x1);
        gbc.writeMem(0x608b, { 0x9 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x5fe3, gbc.sp());
        EXPECT(0x608c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 09 0237
        gbc.setState(0x34f0, 0xf4db, 0xc340, 0x4de, 0xa274, 0x930f, 0x1, 0x1);
        gbc.writeMem(0x34f0, { 0x9 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xf4db, gbc.sp());
        EXPECT(0x34f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 09 0239
        gbc.setState(0x7e79, 0xb42b, 0xccf0, 0x3ac4, 0x3df6, 0xf72f, 0x1, 0x0);
        gbc.writeMem(0x7e79, { 0x9 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xb42b, gbc.sp());
        EXPECT(0x7e7a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 09 023A
        gbc.setState(0x2921, 0x256c, 0xc020, 0x3b71, 0xf538, 0xfafb, 0x0, 0x0);
        gbc.writeMem(0x2921, { 0x9 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x256c, gbc.sp());
        EXPECT(0x2922, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 09 023B
        gbc.setState(0x2bca, 0x1b5, 0xa340, 0x285a, 0xd41d, 0x6bd9, 0x0, 0x1);
        gbc.writeMem(0x2bca, { 0x9 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x1b5, gbc.sp());
        EXPECT(0x2bcb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 09 023C
        gbc.setState(0x2c29, 0xabc5, 0x5010, 0x8eab, 0x63a8, 0xd2c0, 0x1, 0x0);
        gbc.writeMem(0x2c29, { 0x9 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xabc5, gbc.sp());
        EXPECT(0x2c2a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 09 023D
        gbc.setState(0xbb25, 0xef81, 0x4da0, 0xf78c, 0x3b67, 0x6407, 0x1, 0x0);
        gbc.writeMem(0xbb25, { 0x9 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xef81, gbc.sp());
        EXPECT(0xbb26, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xbb25));
        // 09 023F
        gbc.setState(0xdc67, 0x4103, 0xff80, 0xc20f, 0xb9fe, 0xf552, 0x1, 0x0);
        gbc.writeMem(0xdc67, { 0x9 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x4103, gbc.sp());
        EXPECT(0xdc68, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xdc67));
        // 09 0240
        gbc.setState(0xc4d2, 0xbb34, 0x28f0, 0x545c, 0xd3ce, 0xa566, 0x0, 0x0);
        gbc.writeMem(0xc4d2, { 0x9 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xbb34, gbc.sp());
        EXPECT(0xc4d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xc4d2));
        // 09 0241
        gbc.setState(0xb496, 0x4ada, 0x90, 0x4e2a, 0x2d67, 0x31a3, 0x0, 0x1);
        gbc.writeMem(0xb496, { 0x9 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x4ada, gbc.sp());
        EXPECT(0xb497, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xb496));
        // 09 0242
        gbc.setState(0x8bf5, 0x5e99, 0x7c90, 0xc8e3, 0x121c, 0x4c3b, 0x0, 0x1);
        gbc.writeMem(0x8bf5, { 0x9 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x5e99, gbc.sp());
        EXPECT(0x8bf6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0x8bf5));
        // 09 0243
        gbc.setState(0xe29d, 0x4fd4, 0xc950, 0x6ac6, 0xe8a9, 0xeac3, 0x1, 0x0);
        gbc.writeMem(0xe29d, { 0x9 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x4fd4, gbc.sp());
        EXPECT(0xe29e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xe29d));
        // 09 0244
        gbc.setState(0xdd2f, 0xced, 0xa310, 0xf462, 0xef7d, 0xc49a, 0x1, 0x1);
        gbc.writeMem(0xdd2f, { 0x9 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xced, gbc.sp());
        EXPECT(0xdd30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xdd2f));
        // 09 0245
        gbc.setState(0xa140, 0x86e5, 0x1c30, 0x1fd0, 0x4163, 0xae7a, 0x0, 0x0);
        gbc.writeMem(0xa140, { 0x9 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x86e5, gbc.sp());
        EXPECT(0xa141, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xa140));
        // 09 0246
        gbc.setState(0xde02, 0xb397, 0x8e30, 0x8d4b, 0xa7c4, 0x3163, 0x1, 0x1);
        gbc.writeMem(0xde02, { 0x9 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xb397, gbc.sp());
        EXPECT(0xde03, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xde02));
        // 09 0247
        gbc.setState(0x383b, 0x7e5c, 0x8890, 0x6c3d, 0x5710, 0xea26, 0x1, 0x1);
        gbc.writeMem(0x383b, { 0x9 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x7e5c, gbc.sp());
        EXPECT(0x383c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 09 0248
        gbc.setState(0x23c2, 0x521, 0xbcf0, 0xc1ea, 0xf5df, 0x793, 0x0, 0x1);
        gbc.writeMem(0x23c2, { 0x9 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x521, gbc.sp());
        EXPECT(0x23c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 09 024A
        gbc.setState(0x204e, 0xcbf, 0x2400, 0x61a3, 0x76d6, 0x6452, 0x1, 0x0);
        gbc.writeMem(0x204e, { 0x9 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xcbf, gbc.sp());
        EXPECT(0x204f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 09 024B
        gbc.setState(0x7914, 0x3981, 0xbf0, 0xc02b, 0x5b1a, 0x8457, 0x1, 0x1);
        gbc.writeMem(0x7914, { 0x9 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x3981, gbc.sp());
        EXPECT(0x7915, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 09 024C
        gbc.setState(0xd7f6, 0x107d, 0x9320, 0x3c99, 0x8d5a, 0x48db, 0x1, 0x0);
        gbc.writeMem(0xd7f6, { 0x9 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x107d, gbc.sp());
        EXPECT(0xd7f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xd7f6));
        // 09 024D
        gbc.setState(0x4aae, 0x7f1c, 0x120, 0x214e, 0xd6cd, 0x7966, 0x0, 0x1);
        gbc.writeMem(0x4aae, { 0x9 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x7f1c, gbc.sp());
        EXPECT(0x4aaf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 09 024E
        gbc.setState(0xc4a5, 0x1278, 0x3f90, 0x339c, 0xe73a, 0xacc, 0x0, 0x1);
        gbc.writeMem(0xc4a5, { 0x9 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x1278, gbc.sp());
        EXPECT(0xc4a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xc4a5));
        // 09 024F
        gbc.setState(0x8f26, 0xbc03, 0x8870, 0xbf2c, 0x7c27, 0xf9fb, 0x1, 0x1);
        gbc.writeMem(0x8f26, { 0x9 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xbc03, gbc.sp());
        EXPECT(0x8f27, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0x8f26));
        // 09 0250
        gbc.setState(0x91ed, 0x50ef, 0x8900, 0x2255, 0x328d, 0xa3f5, 0x1, 0x0);
        gbc.writeMem(0x91ed, { 0x9 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x50ef, gbc.sp());
        EXPECT(0x91ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0x91ed));
        // 09 0251
        gbc.setState(0x7bdd, 0x8901, 0xdb70, 0xfd55, 0xd693, 0x4b93, 0x0, 0x0);
        gbc.writeMem(0x7bdd, { 0x9 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x8901, gbc.sp());
        EXPECT(0x7bde, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 09 0253
        gbc.setState(0x7007, 0x6e07, 0x40c0, 0xfeb5, 0x339a, 0x9af, 0x1, 0x1);
        gbc.writeMem(0x7007, { 0x9 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x6e07, gbc.sp());
        EXPECT(0x7008, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 09 0254
        gbc.setState(0x2bc8, 0x3702, 0xc680, 0x1f47, 0x5d27, 0x57a2, 0x1, 0x0);
        gbc.writeMem(0x2bc8, { 0x9 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x3702, gbc.sp());
        EXPECT(0x2bc9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 09 0256
        gbc.setState(0xace9, 0x93ad, 0xf5f0, 0x9e09, 0x77ad, 0x26c1, 0x0, 0x1);
        gbc.writeMem(0xace9, { 0x9 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x93ad, gbc.sp());
        EXPECT(0xacea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xace9));
        // 09 0257
        gbc.setState(0x43ab, 0x701a, 0xa6b0, 0x1c12, 0xf735, 0x531, 0x1, 0x0);
        gbc.writeMem(0x43ab, { 0x9 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x701a, gbc.sp());
        EXPECT(0x43ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 09 0258
        gbc.setState(0x9925, 0x45b2, 0x9da0, 0x2a7c, 0x55ea, 0x8235, 0x1, 0x1);
        gbc.writeMem(0x9925, { 0x9 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x45b2, gbc.sp());
        EXPECT(0x9926, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0x9925));
        // 09 0259
        gbc.setState(0xae84, 0xf60b, 0x8120, 0x2310, 0x50a8, 0xd24, 0x0, 0x0);
        gbc.writeMem(0xae84, { 0x9 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xf60b, gbc.sp());
        EXPECT(0xae85, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xae84));
        // 09 025A
        gbc.setState(0xe4fd, 0x9825, 0x2e80, 0x261a, 0x768b, 0x1e6, 0x1, 0x1);
        gbc.writeMem(0xe4fd, { 0x9 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x9825, gbc.sp());
        EXPECT(0xe4fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xe4fd));
        // 09 025B
        gbc.setState(0x3a99, 0x2e6e, 0x6410, 0x7247, 0x25ae, 0x7ecb, 0x1, 0x1);
        gbc.writeMem(0x3a99, { 0x9 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x2e6e, gbc.sp());
        EXPECT(0x3a9a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 09 025C
        gbc.setState(0x6aa, 0x6e9b, 0xd160, 0x41a3, 0x82ef, 0x5985, 0x1, 0x1);
        gbc.writeMem(0x6aa, { 0x9 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x6e9b, gbc.sp());
        EXPECT(0x6ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 09 025D
        gbc.setState(0xc458, 0x2f19, 0x1f40, 0xa507, 0xd329, 0x35ed, 0x1, 0x1);
        gbc.writeMem(0xc458, { 0x9 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x2f19, gbc.sp());
        EXPECT(0xc459, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xc458));
        // 09 025F
        gbc.setState(0x5f2d, 0x9298, 0x4450, 0x9dca, 0xf7ea, 0xd6c5, 0x1, 0x1);
        gbc.writeMem(0x5f2d, { 0x9 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x9298, gbc.sp());
        EXPECT(0x5f2e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 09 0260
        gbc.setState(0x81a8, 0x81ee, 0x99d0, 0x3ea3, 0x2498, 0xfe26, 0x0, 0x0);
        gbc.writeMem(0x81a8, { 0x9 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x81ee, gbc.sp());
        EXPECT(0x81a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0x81a8));
        // 09 0261
        gbc.setState(0x7a93, 0xbc7a, 0x9320, 0xdf48, 0xc095, 0x1f35, 0x1, 0x0);
        gbc.writeMem(0x7a93, { 0x9 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xbc7a, gbc.sp());
        EXPECT(0x7a94, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 09 0262
        gbc.setState(0x87ae, 0x1308, 0xcd00, 0x4cef, 0x6e5c, 0x1194, 0x0, 0x1);
        gbc.writeMem(0x87ae, { 0x9 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x1308, gbc.sp());
        EXPECT(0x87af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0x87ae));
        // 09 0263
        gbc.setState(0xdde2, 0x3536, 0x7db0, 0x560a, 0xc2d6, 0x3f6e, 0x1, 0x0);
        gbc.writeMem(0xdde2, { 0x9 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x3536, gbc.sp());
        EXPECT(0xdde3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xdde2));
        // 09 0264
        gbc.setState(0xdd97, 0x96d0, 0xfcf0, 0x19b2, 0x7b2f, 0x619c, 0x0, 0x0);
        gbc.writeMem(0xdd97, { 0x9 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x96d0, gbc.sp());
        EXPECT(0xdd98, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xdd97));
        // 09 0265
        gbc.setState(0x6ea5, 0x76ef, 0xa110, 0x2998, 0xe254, 0x4124, 0x1, 0x0);
        gbc.writeMem(0x6ea5, { 0x9 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x76ef, gbc.sp());
        EXPECT(0x6ea6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 09 0266
        gbc.setState(0x77d2, 0x186c, 0xe400, 0x40dc, 0x24ee, 0x6a08, 0x0, 0x0);
        gbc.writeMem(0x77d2, { 0x9 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x186c, gbc.sp());
        EXPECT(0x77d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 09 0267
        gbc.setState(0xbd2d, 0x25bd, 0x5df0, 0x146a, 0x5d80, 0x696c, 0x1, 0x0);
        gbc.writeMem(0xbd2d, { 0x9 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x25bd, gbc.sp());
        EXPECT(0xbd2e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xbd2d));
        // 09 0268
        gbc.setState(0x61d2, 0x4a1c, 0x53d0, 0xe901, 0x63d4, 0x29f7, 0x0, 0x0);
        gbc.writeMem(0x61d2, { 0x9 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x4a1c, gbc.sp());
        EXPECT(0x61d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 09 0269
        gbc.setState(0x8bfc, 0xdf25, 0x69b0, 0x5147, 0xf2d4, 0x111c, 0x1, 0x0);
        gbc.writeMem(0x8bfc, { 0x9 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xdf25, gbc.sp());
        EXPECT(0x8bfd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0x8bfc));
        // 09 026A
        gbc.setState(0xf18, 0x5c19, 0x85d0, 0xf017, 0x48ba, 0x1ef2, 0x1, 0x0);
        gbc.writeMem(0xf18, { 0x9 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x5c19, gbc.sp());
        EXPECT(0xf19, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 09 026B
        gbc.setState(0xcf72, 0x801b, 0x88f0, 0xb1c6, 0xb943, 0xc925, 0x1, 0x1);
        gbc.writeMem(0xcf72, { 0x9 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x801b, gbc.sp());
        EXPECT(0xcf73, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xcf72));
        // 09 026C
        gbc.setState(0x44fa, 0x7144, 0xa7b0, 0x4d7a, 0x7943, 0xfa71, 0x1, 0x0);
        gbc.writeMem(0x44fa, { 0x9 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x7144, gbc.sp());
        EXPECT(0x44fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 09 026F
        gbc.setState(0x3e5c, 0x52a9, 0x8a90, 0x5e86, 0xfd88, 0x88d6, 0x1, 0x0);
        gbc.writeMem(0x3e5c, { 0x9 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x52a9, gbc.sp());
        EXPECT(0x3e5d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 09 0270
        gbc.setState(0xa763, 0x1ffa, 0x6a00, 0xf2f, 0xca13, 0x889a, 0x1, 0x0);
        gbc.writeMem(0xa763, { 0x9 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x1ffa, gbc.sp());
        EXPECT(0xa764, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xa763));
        // 09 0271
        gbc.setState(0xe0be, 0xd0c4, 0x9a40, 0xe0d1, 0x76ad, 0xe297, 0x1, 0x1);
        gbc.writeMem(0xe0be, { 0x9 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xd0c4, gbc.sp());
        EXPECT(0xe0bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xe0be));
        // 09 0272
        gbc.setState(0x73d5, 0x2e8b, 0x8cd0, 0xeec8, 0x87f8, 0xf8ae, 0x1, 0x0);
        gbc.writeMem(0x73d5, { 0x9 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x2e8b, gbc.sp());
        EXPECT(0x73d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 09 0273
        gbc.setState(0x14c4, 0x6c6a, 0x1dd0, 0xcdb5, 0x7520, 0x291a, 0x0, 0x1);
        gbc.writeMem(0x14c4, { 0x9 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x6c6a, gbc.sp());
        EXPECT(0x14c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 09 0274
        gbc.setState(0x2fd1, 0x34d0, 0x70a0, 0xd1b1, 0xd325, 0x116e, 0x1, 0x0);
        gbc.writeMem(0x2fd1, { 0x9 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x34d0, gbc.sp());
        EXPECT(0x2fd2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 09 0275
        gbc.setState(0x5156, 0xf7, 0x4110, 0x5b53, 0x2d9, 0xd9d9, 0x1, 0x0);
        gbc.writeMem(0x5156, { 0x9 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xf7, gbc.sp());
        EXPECT(0x5157, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 09 0276
        gbc.setState(0xaa94, 0xcca6, 0xa7a0, 0x3053, 0x840d, 0x2851, 0x0, 0x0);
        gbc.writeMem(0xaa94, { 0x9 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xcca6, gbc.sp());
        EXPECT(0xaa95, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xaa94));
        // 09 0277
        gbc.setState(0xcdbe, 0x95dd, 0x28e0, 0xf452, 0xe93b, 0xc8e8, 0x0, 0x0);
        gbc.writeMem(0xcdbe, { 0x9 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x95dd, gbc.sp());
        EXPECT(0xcdbf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xcdbe));
        // 09 0278
        gbc.setState(0xd495, 0xe537, 0xa3a0, 0xc932, 0x8fa4, 0x980e, 0x1, 0x0);
        gbc.writeMem(0xd495, { 0x9 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xe537, gbc.sp());
        EXPECT(0xd496, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xd495));
        // 09 0279
        gbc.setState(0xcd85, 0xada4, 0x87f0, 0x7bd7, 0x372a, 0x757c, 0x1, 0x0);
        gbc.writeMem(0xcd85, { 0x9 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xada4, gbc.sp());
        EXPECT(0xcd86, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xcd85));
        // 09 027A
        gbc.setState(0xd7b1, 0x46f0, 0x9f80, 0x74fd, 0x4969, 0xbb33, 0x0, 0x0);
        gbc.writeMem(0xd7b1, { 0x9 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x46f0, gbc.sp());
        EXPECT(0xd7b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xd7b1));
        // 09 027B
        gbc.setState(0xcb8c, 0xcfa0, 0x89f0, 0xbae9, 0x5aa2, 0x3215, 0x1, 0x1);
        gbc.writeMem(0xcb8c, { 0x9 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xcfa0, gbc.sp());
        EXPECT(0xcb8d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xcb8c));
        // 09 027C
        gbc.setState(0x7790, 0x814c, 0x9de0, 0x5dac, 0xbba5, 0x709, 0x1, 0x1);
        gbc.writeMem(0x7790, { 0x9 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x814c, gbc.sp());
        EXPECT(0x7791, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 09 027D
        gbc.setState(0x2c19, 0x34fd, 0x7410, 0xf632, 0x6c9a, 0xcd9d, 0x0, 0x1);
        gbc.writeMem(0x2c19, { 0x9 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x34fd, gbc.sp());
        EXPECT(0x2c1a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 09 027E
        gbc.setState(0x59be, 0x41d1, 0xf0d0, 0xa9c5, 0x5d7a, 0x24e0, 0x0, 0x1);
        gbc.writeMem(0x59be, { 0x9 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x41d1, gbc.sp());
        EXPECT(0x59bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 09 027F
        gbc.setState(0x9d89, 0x479b, 0x1b60, 0x74f1, 0x1d8d, 0xb011, 0x1, 0x1);
        gbc.writeMem(0x9d89, { 0x9 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x479b, gbc.sp());
        EXPECT(0x9d8a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0x9d89));
        // 09 0280
        gbc.setState(0x1399, 0xeaae, 0x1550, 0xae17, 0x834b, 0x7864, 0x0, 0x0);
        gbc.writeMem(0x1399, { 0x9 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xeaae, gbc.sp());
        EXPECT(0x139a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 09 0281
        gbc.setState(0x9e25, 0xff8f, 0x7a10, 0xbcbf, 0xac9f, 0x1432, 0x1, 0x1);
        gbc.writeMem(0x9e25, { 0x9 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xff8f, gbc.sp());
        EXPECT(0x9e26, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0x9e25));
        // 09 0282
        gbc.setState(0xbba9, 0x106b, 0x2940, 0x940b, 0x113d, 0xf0df, 0x0, 0x0);
        gbc.writeMem(0xbba9, { 0x9 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x106b, gbc.sp());
        EXPECT(0xbbaa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xbba9));
        // 09 0283
        gbc.setState(0xe6c6, 0x8c6a, 0x33b0, 0xf168, 0xf92f, 0xabfe, 0x1, 0x1);
        gbc.writeMem(0xe6c6, { 0x9 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x8c6a, gbc.sp());
        EXPECT(0xe6c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xe6c6));
        // 09 0284
        gbc.setState(0x5c67, 0x75bb, 0x2f00, 0xce46, 0xd745, 0x9697, 0x1, 0x1);
        gbc.writeMem(0x5c67, { 0x9 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x75bb, gbc.sp());
        EXPECT(0x5c68, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 09 0285
        gbc.setState(0xe728, 0x875b, 0xe0f0, 0x9dd0, 0xbcd9, 0xcf73, 0x1, 0x0);
        gbc.writeMem(0xe728, { 0x9 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x875b, gbc.sp());
        EXPECT(0xe729, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xe728));
        // 09 0286
        gbc.setState(0x25f2, 0xe99, 0x3e60, 0xce47, 0x960c, 0xe8a7, 0x0, 0x0);
        gbc.writeMem(0x25f2, { 0x9 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xe99, gbc.sp());
        EXPECT(0x25f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 09 0287
        gbc.setState(0x66da, 0x55f3, 0x8060, 0xb318, 0x85b5, 0x1b31, 0x1, 0x0);
        gbc.writeMem(0x66da, { 0x9 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x55f3, gbc.sp());
        EXPECT(0x66db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 09 0289
        gbc.setState(0x8d3a, 0x17ce, 0x36e0, 0xf8a5, 0xafd3, 0x7636, 0x0, 0x1);
        gbc.writeMem(0x8d3a, { 0x9 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x17ce, gbc.sp());
        EXPECT(0x8d3b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0x8d3a));
        // 09 028A
        gbc.setState(0x3816, 0x183b, 0x6540, 0xcddd, 0xe0de, 0xbe35, 0x1, 0x0);
        gbc.writeMem(0x3816, { 0x9 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x183b, gbc.sp());
        EXPECT(0x3817, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 09 028B
        gbc.setState(0xcd42, 0xf8fc, 0x3770, 0x30e6, 0xae7b, 0xc449, 0x0, 0x1);
        gbc.writeMem(0xcd42, { 0x9 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xf8fc, gbc.sp());
        EXPECT(0xcd43, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xcd42));
        // 09 028C
        gbc.setState(0xb386, 0x8bb2, 0x1690, 0x2700, 0x2e98, 0xfb3c, 0x1, 0x1);
        gbc.writeMem(0xb386, { 0x9 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x8bb2, gbc.sp());
        EXPECT(0xb387, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xb386));
        // 09 028D
        gbc.setState(0x9aff, 0xccc2, 0x2130, 0x3cfb, 0xe62a, 0x1cea, 0x1, 0x1);
        gbc.writeMem(0x9aff, { 0x9 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xccc2, gbc.sp());
        EXPECT(0x9b00, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0x9aff));
        // 09 028F
        gbc.setState(0x1ce3, 0xf2fa, 0x1be0, 0xe0b6, 0x32bb, 0xbc72, 0x0, 0x1);
        gbc.writeMem(0x1ce3, { 0x9 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xf2fa, gbc.sp());
        EXPECT(0x1ce4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 09 0290
        gbc.setState(0x4df1, 0x3fc5, 0x5c10, 0xd7a1, 0xdd97, 0xa621, 0x1, 0x0);
        gbc.writeMem(0x4df1, { 0x9 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x3fc5, gbc.sp());
        EXPECT(0x4df2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 09 0291
        gbc.setState(0x5324, 0x833, 0x93c0, 0x6d09, 0x1735, 0xef97, 0x1, 0x1);
        gbc.writeMem(0x5324, { 0x9 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x833, gbc.sp());
        EXPECT(0x5325, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 09 0292
        gbc.setState(0xbb38, 0x1be9, 0x3d90, 0xa0e4, 0x6abb, 0x2c8c, 0x0, 0x1);
        gbc.writeMem(0xbb38, { 0x9 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x1be9, gbc.sp());
        EXPECT(0xbb39, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xbb38));
        // 09 0294
        gbc.setState(0x9bcd, 0x1424, 0x6a40, 0x2336, 0x99ee, 0xc773, 0x1, 0x0);
        gbc.writeMem(0x9bcd, { 0x9 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x1424, gbc.sp());
        EXPECT(0x9bce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0x9bcd));
        // 09 0295
        gbc.setState(0xa564, 0x3f46, 0x7a40, 0xef53, 0xccc5, 0xf1e1, 0x0, 0x0);
        gbc.writeMem(0xa564, { 0x9 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x3f46, gbc.sp());
        EXPECT(0xa565, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xa564));
        // 09 0296
        gbc.setState(0x95fd, 0xe9a9, 0xbcf0, 0x6158, 0xe049, 0x312b, 0x1, 0x0);
        gbc.writeMem(0x95fd, { 0x9 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xe9a9, gbc.sp());
        EXPECT(0x95fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0x95fd));
        // 09 0297
        gbc.setState(0x8e43, 0x712, 0xa180, 0x4362, 0x5e36, 0x1100, 0x1, 0x1);
        gbc.writeMem(0x8e43, { 0x9 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x712, gbc.sp());
        EXPECT(0x8e44, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0x8e43));
        // 09 0298
        gbc.setState(0xa633, 0xfa24, 0x1660, 0x4f0c, 0xec5a, 0xecb8, 0x0, 0x1);
        gbc.writeMem(0xa633, { 0x9 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xfa24, gbc.sp());
        EXPECT(0xa634, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xa633));
        // 09 0299
        gbc.setState(0xb0a1, 0xb33b, 0x4a60, 0x20, 0x41, 0x733c, 0x1, 0x0);
        gbc.writeMem(0xb0a1, { 0x9 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xb33b, gbc.sp());
        EXPECT(0xb0a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xb0a1));
        // 09 029A
        gbc.setState(0x5d93, 0x644c, 0x6470, 0x2303, 0x7f7c, 0xf64c, 0x1, 0x1);
        gbc.writeMem(0x5d93, { 0x9 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x644c, gbc.sp());
        EXPECT(0x5d94, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 09 029B
        gbc.setState(0xa973, 0x3fb7, 0x7850, 0x2dd0, 0x55e0, 0xb795, 0x1, 0x0);
        gbc.writeMem(0xa973, { 0x9 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x3fb7, gbc.sp());
        EXPECT(0xa974, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xa973));
        // 09 029C
        gbc.setState(0x16e6, 0xa340, 0xce10, 0x516f, 0x6184, 0xdd42, 0x0, 0x1);
        gbc.writeMem(0x16e6, { 0x9 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xa340, gbc.sp());
        EXPECT(0x16e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 09 029D
        gbc.setState(0x9288, 0xb5ea, 0xdb10, 0x1aed, 0xb5a7, 0xce91, 0x0, 0x1);
        gbc.writeMem(0x9288, { 0x9 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xb5ea, gbc.sp());
        EXPECT(0x9289, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0x9288));
        // 09 029E
        gbc.setState(0x1d2c, 0xad75, 0x5450, 0x1ae9, 0x52c5, 0xf44c, 0x1, 0x0);
        gbc.writeMem(0x1d2c, { 0x9 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xad75, gbc.sp());
        EXPECT(0x1d2d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 09 029F
        gbc.setState(0xb47e, 0x5483, 0x2770, 0xa8e2, 0xfba5, 0xb5aa, 0x1, 0x1);
        gbc.writeMem(0xb47e, { 0x9 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x5483, gbc.sp());
        EXPECT(0xb47f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xb47e));
        // 09 02A0
        gbc.setState(0x4e1d, 0xb633, 0x20b0, 0x898, 0xb103, 0x7544, 0x0, 0x0);
        gbc.writeMem(0x4e1d, { 0x9 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xb633, gbc.sp());
        EXPECT(0x4e1e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 09 02A1
        gbc.setState(0x6fa8, 0x4279, 0xad60, 0x85c3, 0x9862, 0x49ea, 0x0, 0x1);
        gbc.writeMem(0x6fa8, { 0x9 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x4279, gbc.sp());
        EXPECT(0x6fa9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 09 02A3
        gbc.setState(0x3a8c, 0xa633, 0x2700, 0x6b42, 0x9bbf, 0x4d18, 0x0, 0x0);
        gbc.writeMem(0x3a8c, { 0x9 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xa633, gbc.sp());
        EXPECT(0x3a8d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 09 02A4
        gbc.setState(0xdf28, 0xf45f, 0x2ae0, 0xc556, 0x20cb, 0x830c, 0x1, 0x1);
        gbc.writeMem(0xdf28, { 0x9 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xf45f, gbc.sp());
        EXPECT(0xdf29, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xdf28));
        // 09 02A5
        gbc.setState(0x9eb0, 0x1961, 0x63a0, 0x3d34, 0xf92, 0xe01a, 0x0, 0x1);
        gbc.writeMem(0x9eb0, { 0x9 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x1961, gbc.sp());
        EXPECT(0x9eb1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0x9eb0));
        // 09 02A6
        gbc.setState(0xd89e, 0x1e11, 0x210, 0xa82e, 0x5dbf, 0xd39a, 0x1, 0x1);
        gbc.writeMem(0xd89e, { 0x9 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x1e11, gbc.sp());
        EXPECT(0xd89f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xd89e));
        // 09 02A7
        gbc.setState(0x24b5, 0xc8a, 0x8f40, 0x1332, 0x9169, 0x59f5, 0x1, 0x0);
        gbc.writeMem(0x24b5, { 0x9 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xc8a, gbc.sp());
        EXPECT(0x24b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 09 02A8
        gbc.setState(0xc0fc, 0xdaea, 0xcc30, 0xcfd0, 0xdf4b, 0x1433, 0x0, 0x0);
        gbc.writeMem(0xc0fc, { 0x9 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xdaea, gbc.sp());
        EXPECT(0xc0fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xc0fc));
        // 09 02A9
        gbc.setState(0x15cc, 0x6429, 0x3260, 0xf60a, 0xe51b, 0x9bea, 0x1, 0x0);
        gbc.writeMem(0x15cc, { 0x9 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x6429, gbc.sp());
        EXPECT(0x15cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 09 02AA
        gbc.setState(0x6ce2, 0x9952, 0x7e0, 0x8059, 0x9e12, 0x576c, 0x1, 0x0);
        gbc.writeMem(0x6ce2, { 0x9 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x9952, gbc.sp());
        EXPECT(0x6ce3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 09 02AB
        gbc.setState(0x7318, 0x30c9, 0x790, 0x8118, 0x44e9, 0x1c77, 0x1, 0x1);
        gbc.writeMem(0x7318, { 0x9 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x30c9, gbc.sp());
        EXPECT(0x7319, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 09 02AC
        gbc.setState(0x9d11, 0x67b6, 0xb750, 0xa7c5, 0x5167, 0x7c48, 0x1, 0x0);
        gbc.writeMem(0x9d11, { 0x9 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x67b6, gbc.sp());
        EXPECT(0x9d12, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0x9d11));
        // 09 02AD
        gbc.setState(0x75fc, 0x4f46, 0x9700, 0x24d1, 0x83d, 0xb19, 0x1, 0x1);
        gbc.writeMem(0x75fc, { 0x9 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x4f46, gbc.sp());
        EXPECT(0x75fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 09 02AE
        gbc.setState(0x49b5, 0xb1c9, 0x72f0, 0xe759, 0xa965, 0x1911, 0x0, 0x1);
        gbc.writeMem(0x49b5, { 0x9 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xb1c9, gbc.sp());
        EXPECT(0x49b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 09 02AF
        gbc.setState(0xdb4c, 0x265c, 0x73e0, 0x2929, 0x9ff9, 0x4e9b, 0x1, 0x0);
        gbc.writeMem(0xdb4c, { 0x9 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x265c, gbc.sp());
        EXPECT(0xdb4d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xdb4c));
        // 09 02B0
        gbc.setState(0x6161, 0x50ca, 0xd380, 0x29dc, 0xe114, 0x7671, 0x0, 0x0);
        gbc.writeMem(0x6161, { 0x9 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x50ca, gbc.sp());
        EXPECT(0x6162, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 09 02B1
        gbc.setState(0x49fe, 0x78f5, 0x54c0, 0x7292, 0xf83c, 0x1310, 0x1, 0x1);
        gbc.writeMem(0x49fe, { 0x9 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x78f5, gbc.sp());
        EXPECT(0x49ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 09 02B2
        gbc.setState(0x89a3, 0x3672, 0x650, 0x6d5e, 0x9674, 0x15b1, 0x0, 0x0);
        gbc.writeMem(0x89a3, { 0x9 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x3672, gbc.sp());
        EXPECT(0x89a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0x89a3));
        // 09 02B3
        gbc.setState(0x2d5b, 0x676, 0x7440, 0x2f88, 0x98e2, 0xd3f, 0x1, 0x0);
        gbc.writeMem(0x2d5b, { 0x9 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x676, gbc.sp());
        EXPECT(0x2d5c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 09 02B4
        gbc.setState(0xaf43, 0x4501, 0x3a70, 0xb563, 0x83d, 0x6804, 0x0, 0x1);
        gbc.writeMem(0xaf43, { 0x9 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x4501, gbc.sp());
        EXPECT(0xaf44, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xaf43));
        // 09 02B5
        gbc.setState(0x28f6, 0x9f23, 0x3c50, 0x20ea, 0xf7bc, 0x827b, 0x1, 0x0);
        gbc.writeMem(0x28f6, { 0x9 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x9f23, gbc.sp());
        EXPECT(0x28f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 09 02B6
        gbc.setState(0xa00, 0x9e40, 0xabc0, 0x3663, 0xc8e4, 0xa8cc, 0x0, 0x1);
        gbc.writeMem(0xa00, { 0x9 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x9e40, gbc.sp());
        EXPECT(0xa01, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 09 02B7
        gbc.setState(0x3807, 0x70f7, 0x8870, 0xc932, 0xae79, 0x5f3, 0x1, 0x1);
        gbc.writeMem(0x3807, { 0x9 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x70f7, gbc.sp());
        EXPECT(0x3808, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 09 02B8
        gbc.setState(0xeaba, 0x9e45, 0x4e30, 0x926, 0x1836, 0x325e, 0x1, 0x1);
        gbc.writeMem(0xeaba, { 0x9 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x9e45, gbc.sp());
        EXPECT(0xeabb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xeaba));
        // 09 02B9
        gbc.setState(0x1f45, 0x67db, 0x11d0, 0xfd9a, 0xe22b, 0x9e79, 0x1, 0x1);
        gbc.writeMem(0x1f45, { 0x9 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x67db, gbc.sp());
        EXPECT(0x1f46, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 09 02BA
        gbc.setState(0x41bf, 0x1db, 0x8d90, 0x3fc, 0x6ab7, 0x4652, 0x1, 0x1);
        gbc.writeMem(0x41bf, { 0x9 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x1db, gbc.sp());
        EXPECT(0x41c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 09 02BB
        gbc.setState(0x2274, 0xba02, 0xf890, 0xf608, 0xc38a, 0x937a, 0x1, 0x0);
        gbc.writeMem(0x2274, { 0x9 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xba02, gbc.sp());
        EXPECT(0x2275, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 09 02BC
        gbc.setState(0x15cc, 0xd3ae, 0xae40, 0xf61c, 0xf541, 0xc8c9, 0x0, 0x1);
        gbc.writeMem(0x15cc, { 0x9 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xd3ae, gbc.sp());
        EXPECT(0x15cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 09 02BD
        gbc.setState(0xe4, 0x460a, 0x1760, 0x333a, 0xca4b, 0xdfc1, 0x1, 0x1);
        gbc.writeMem(0xe4, { 0x9 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x460a, gbc.sp());
        EXPECT(0xe5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 09 02BF
        gbc.setState(0x9641, 0xb7fd, 0xcfc0, 0x3975, 0x5c9a, 0x9000, 0x0, 0x1);
        gbc.writeMem(0x9641, { 0x9 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xb7fd, gbc.sp());
        EXPECT(0x9642, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0x9641));
        // 09 02C0
        gbc.setState(0x3e65, 0x60ae, 0xea20, 0x47e6, 0x90f0, 0xde96, 0x0, 0x0);
        gbc.writeMem(0x3e65, { 0x9 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x60ae, gbc.sp());
        EXPECT(0x3e66, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 09 02C1
        gbc.setState(0xba3d, 0xb14a, 0xa7b0, 0x389b, 0x5b0e, 0xf2e6, 0x0, 0x1);
        gbc.writeMem(0xba3d, { 0x9 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xb14a, gbc.sp());
        EXPECT(0xba3e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xba3d));
        // 09 02C2
        gbc.setState(0xbad2, 0xa7f8, 0x94b0, 0x31ab, 0x3e54, 0x461c, 0x0, 0x1);
        gbc.writeMem(0xbad2, { 0x9 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xa7f8, gbc.sp());
        EXPECT(0xbad3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xbad2));
        // 09 02C3
        gbc.setState(0x13a3, 0xa9a2, 0x9f70, 0x1ba0, 0x852, 0xf413, 0x0, 0x0);
        gbc.writeMem(0x13a3, { 0x9 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xa9a2, gbc.sp());
        EXPECT(0x13a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 09 02C4
        gbc.setState(0x1cc6, 0x4d95, 0x2f80, 0xf3ff, 0x1b07, 0xc1db, 0x1, 0x0);
        gbc.writeMem(0x1cc6, { 0x9 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x4d95, gbc.sp());
        EXPECT(0x1cc7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 09 02C5
        gbc.setState(0x79b0, 0x27b0, 0x4cb0, 0xdd17, 0xc791, 0xdbcb, 0x0, 0x1);
        gbc.writeMem(0x79b0, { 0x9 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x27b0, gbc.sp());
        EXPECT(0x79b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 09 02C6
        gbc.setState(0xc6cd, 0xa85a, 0x4c20, 0x368f, 0x5f57, 0x7dd4, 0x0, 0x0);
        gbc.writeMem(0xc6cd, { 0x9 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xa85a, gbc.sp());
        EXPECT(0xc6ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xc6cd));
        // 09 02C7
        gbc.setState(0x171c, 0x932a, 0x41f0, 0x7e9e, 0x8e13, 0xe493, 0x1, 0x0);
        gbc.writeMem(0x171c, { 0x9 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x932a, gbc.sp());
        EXPECT(0x171d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 09 02C8
        gbc.setState(0x1ab3, 0x95c3, 0x5a0, 0xfc7b, 0xbfce, 0x3c61, 0x1, 0x1);
        gbc.writeMem(0x1ab3, { 0x9 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x95c3, gbc.sp());
        EXPECT(0x1ab4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 09 02C9
        gbc.setState(0x96d2, 0xea71, 0x51a0, 0x126c, 0x3dfd, 0x9457, 0x0, 0x1);
        gbc.writeMem(0x96d2, { 0x9 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xea71, gbc.sp());
        EXPECT(0x96d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0x96d2));
        // 09 02CA
        gbc.setState(0x229b, 0x750a, 0xa5d0, 0x2e34, 0x30e3, 0xbcfa, 0x0, 0x0);
        gbc.writeMem(0x229b, { 0x9 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x750a, gbc.sp());
        EXPECT(0x229c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 09 02CB
        gbc.setState(0x549d, 0xbcc5, 0xfb10, 0xd754, 0xd7fb, 0x5156, 0x1, 0x0);
        gbc.writeMem(0x549d, { 0x9 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xbcc5, gbc.sp());
        EXPECT(0x549e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 09 02CC
        gbc.setState(0x9b66, 0xa4d, 0x65e0, 0xdc83, 0x36b1, 0x2bb5, 0x0, 0x0);
        gbc.writeMem(0x9b66, { 0x9 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xa4d, gbc.sp());
        EXPECT(0x9b67, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0x9b66));
        // 09 02CD
        gbc.setState(0x8dcd, 0x438d, 0x2c0, 0xce4, 0xa7c7, 0x6880, 0x1, 0x1);
        gbc.writeMem(0x8dcd, { 0x9 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x438d, gbc.sp());
        EXPECT(0x8dce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0x8dcd));
        // 09 02CE
        gbc.setState(0x80b8, 0x4669, 0x8c70, 0x4ec3, 0xdc3, 0x5bd8, 0x0, 0x1);
        gbc.writeMem(0x80b8, { 0x9 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x4669, gbc.sp());
        EXPECT(0x80b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0x80b8));
        // 09 02CF
        gbc.setState(0xb55c, 0x1044, 0x2e00, 0x1f8d, 0xfc26, 0xd07f, 0x0, 0x0);
        gbc.writeMem(0xb55c, { 0x9 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x1044, gbc.sp());
        EXPECT(0xb55d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xb55c));
        // 09 02D0
        gbc.setState(0xe2ee, 0x6d26, 0x48f0, 0x5a81, 0xb565, 0x2471, 0x1, 0x1);
        gbc.writeMem(0xe2ee, { 0x9 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x6d26, gbc.sp());
        EXPECT(0xe2ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xe2ee));
        // 09 02D1
        gbc.setState(0xa687, 0x9152, 0x7270, 0x2f2e, 0x925a, 0xf39e, 0x0, 0x0);
        gbc.writeMem(0xa687, { 0x9 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x9152, gbc.sp());
        EXPECT(0xa688, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xa687));
        // 09 02D2
        gbc.setState(0x3baf, 0x6954, 0x5c20, 0xc37d, 0x613a, 0x5558, 0x0, 0x1);
        gbc.writeMem(0x3baf, { 0x9 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x6954, gbc.sp());
        EXPECT(0x3bb0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 09 02D3
        gbc.setState(0x108b, 0x8d35, 0x10b0, 0x4cc1, 0xc932, 0xcc1, 0x1, 0x1);
        gbc.writeMem(0x108b, { 0x9 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x8d35, gbc.sp());
        EXPECT(0x108c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 09 02D4
        gbc.setState(0x37ed, 0x4e9f, 0x4240, 0x7838, 0x8d0d, 0x4da0, 0x0, 0x1);
        gbc.writeMem(0x37ed, { 0x9 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x4e9f, gbc.sp());
        EXPECT(0x37ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 09 02D5
        gbc.setState(0x8f07, 0x94c7, 0x6fa0, 0x184d, 0xe070, 0x684f, 0x1, 0x0);
        gbc.writeMem(0x8f07, { 0x9 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x94c7, gbc.sp());
        EXPECT(0x8f08, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0x8f07));
        // 09 02D6
        gbc.setState(0xb8, 0xe777, 0x9e70, 0xddf8, 0xaa45, 0xfdf5, 0x1, 0x1);
        gbc.writeMem(0xb8, { 0x9 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xe777, gbc.sp());
        EXPECT(0xb9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 09 02D7
        gbc.setState(0x2849, 0x4a47, 0xb7e0, 0x3ee8, 0x2e53, 0x5e16, 0x0, 0x1);
        gbc.writeMem(0x2849, { 0x9 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x4a47, gbc.sp());
        EXPECT(0x284a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 09 02D8
        gbc.setState(0x45bb, 0x204d, 0xc850, 0xae87, 0x7236, 0xe5a4, 0x1, 0x0);
        gbc.writeMem(0x45bb, { 0x9 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x204d, gbc.sp());
        EXPECT(0x45bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 09 02D9
        gbc.setState(0xd2ff, 0x468e, 0xbef0, 0x1445, 0xb2fd, 0xe3ce, 0x1, 0x0);
        gbc.writeMem(0xd2ff, { 0x9 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x468e, gbc.sp());
        EXPECT(0xd300, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xd2ff));
        // 09 02DA
        gbc.setState(0x4bd1, 0xf179, 0xe110, 0x3e55, 0x8785, 0x4572, 0x0, 0x0);
        gbc.writeMem(0x4bd1, { 0x9 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xf179, gbc.sp());
        EXPECT(0x4bd2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 09 02DB
        gbc.setState(0xc139, 0xca62, 0xaed0, 0xc023, 0x305b, 0x4af9, 0x0, 0x1);
        gbc.writeMem(0xc139, { 0x9 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xca62, gbc.sp());
        EXPECT(0xc13a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xc139));
        // 09 02DC
        gbc.setState(0x4d95, 0xde08, 0x740, 0xbb4d, 0x24a3, 0xd8e1, 0x1, 0x1);
        gbc.writeMem(0x4d95, { 0x9 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xde08, gbc.sp());
        EXPECT(0x4d96, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 09 02DD
        gbc.setState(0xbd53, 0x53ea, 0x9fe0, 0x812d, 0x33a4, 0xc86f, 0x1, 0x0);
        gbc.writeMem(0xbd53, { 0x9 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x53ea, gbc.sp());
        EXPECT(0xbd54, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xbd53));
        // 09 02DE
        gbc.setState(0x2ca6, 0x4f2c, 0xdb80, 0x30b1, 0x63e7, 0x90fb, 0x0, 0x0);
        gbc.writeMem(0x2ca6, { 0x9 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x4f2c, gbc.sp());
        EXPECT(0x2ca7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 09 02DF
        gbc.setState(0xc529, 0x8de4, 0xa830, 0x9b4, 0x7713, 0xaca9, 0x1, 0x0);
        gbc.writeMem(0xc529, { 0x9 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x8de4, gbc.sp());
        EXPECT(0xc52a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xc529));
        // 09 02E0
        gbc.setState(0xd478, 0x6307, 0x5c40, 0x2784, 0x27a6, 0x396b, 0x1, 0x0);
        gbc.writeMem(0xd478, { 0x9 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x6307, gbc.sp());
        EXPECT(0xd479, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xd478));
        // 09 02E1
        gbc.setState(0xc6d1, 0x9c62, 0x2f0, 0x85ad, 0xbe31, 0xd32e, 0x1, 0x1);
        gbc.writeMem(0xc6d1, { 0x9 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x9c62, gbc.sp());
        EXPECT(0xc6d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xc6d1));
        // 09 02E2
        gbc.setState(0xcc5c, 0x4ec1, 0x5620, 0xf355, 0x2f65, 0x185b, 0x0, 0x1);
        gbc.writeMem(0xcc5c, { 0x9 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x4ec1, gbc.sp());
        EXPECT(0xcc5d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xcc5c));
        // 09 02E3
        gbc.setState(0xd442, 0x1618, 0x9ba0, 0x96d1, 0xbc18, 0xc4b6, 0x1, 0x1);
        gbc.writeMem(0xd442, { 0x9 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x1618, gbc.sp());
        EXPECT(0xd443, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xd442));
        // 09 02E4
        gbc.setState(0x9f15, 0xf616, 0xab30, 0x505e, 0xb252, 0x9cff, 0x1, 0x0);
        gbc.writeMem(0x9f15, { 0x9 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xf616, gbc.sp());
        EXPECT(0x9f16, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0x9f15));
        // 09 02E5
        gbc.setState(0xe233, 0x23f6, 0x6100, 0xb053, 0xbca5, 0x6f03, 0x0, 0x0);
        gbc.writeMem(0xe233, { 0x9 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x23f6, gbc.sp());
        EXPECT(0xe234, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xe233));
        // 09 02E6
        gbc.setState(0x9e1a, 0xa2d0, 0x40e0, 0x63c8, 0x5d40, 0x4304, 0x1, 0x0);
        gbc.writeMem(0x9e1a, { 0x9 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xa2d0, gbc.sp());
        EXPECT(0x9e1b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0x9e1a));
        // 09 02E7
        gbc.setState(0x3370, 0xea0b, 0x6bf0, 0x61f3, 0x1f66, 0x9eab, 0x1, 0x0);
        gbc.writeMem(0x3370, { 0x9 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xea0b, gbc.sp());
        EXPECT(0x3371, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 09 02E8
        gbc.setState(0x4e51, 0x1b09, 0x8d0, 0x5377, 0x93a2, 0xe118, 0x1, 0x1);
        gbc.writeMem(0x4e51, { 0x9 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x1b09, gbc.sp());
        EXPECT(0x4e52, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 09 02E9
        gbc.setState(0xbc39, 0x2071, 0x9ad0, 0x6af9, 0x9cfa, 0x4a43, 0x0, 0x0);
        gbc.writeMem(0xbc39, { 0x9 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x2071, gbc.sp());
        EXPECT(0xbc3a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xbc39));
        // 09 02EA
        gbc.setState(0xbeab, 0x2be, 0x7750, 0x3834, 0x2487, 0xd542, 0x0, 0x1);
        gbc.writeMem(0xbeab, { 0x9 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x2be, gbc.sp());
        EXPECT(0xbeac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xbeab));
        // 09 02EB
        gbc.setState(0x5496, 0x8deb, 0xebe0, 0x4412, 0xcb3f, 0x27, 0x1, 0x1);
        gbc.writeMem(0x5496, { 0x9 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x8deb, gbc.sp());
        EXPECT(0x5497, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 09 02EC
        gbc.setState(0x78bf, 0xec93, 0xe330, 0x4654, 0xba9f, 0xca39, 0x1, 0x1);
        gbc.writeMem(0x78bf, { 0x9 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xec93, gbc.sp());
        EXPECT(0x78c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 09 02ED
        gbc.setState(0xa577, 0xdd30, 0xf950, 0x2501, 0xbaed, 0x61d2, 0x0, 0x1);
        gbc.writeMem(0xa577, { 0x9 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xdd30, gbc.sp());
        EXPECT(0xa578, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xa577));
        // 09 02EE
        gbc.setState(0x71ff, 0x38ac, 0x2320, 0xfae, 0x5539, 0x4c96, 0x0, 0x1);
        gbc.writeMem(0x71ff, { 0x9 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x38ac, gbc.sp());
        EXPECT(0x7200, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 09 02EF
        gbc.setState(0xef64, 0x77b1, 0x2460, 0xbce4, 0xdbf0, 0xa251, 0x0, 0x0);
        gbc.writeMem(0xef64, { 0x9 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x77b1, gbc.sp());
        EXPECT(0xef65, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xef64));
        // 09 02F0
        gbc.setState(0x7746, 0x94bc, 0x4720, 0x4020, 0xbeb2, 0x214f, 0x0, 0x0);
        gbc.writeMem(0x7746, { 0x9 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x94bc, gbc.sp());
        EXPECT(0x7747, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 09 02F3
        gbc.setState(0x8abb, 0x9d8c, 0x7930, 0xef17, 0xda2b, 0x3d0, 0x0, 0x1);
        gbc.writeMem(0x8abb, { 0x9 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x9d8c, gbc.sp());
        EXPECT(0x8abc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0x8abb));
        // 09 02F4
        gbc.setState(0x384e, 0x9bb2, 0xd590, 0x7893, 0x3603, 0xd34, 0x0, 0x0);
        gbc.writeMem(0x384e, { 0x9 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x9bb2, gbc.sp());
        EXPECT(0x384f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 09 02F5
        gbc.setState(0xb7c2, 0x62ef, 0xd990, 0xd71c, 0x2da, 0xdf6d, 0x1, 0x0);
        gbc.writeMem(0xb7c2, { 0x9 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x62ef, gbc.sp());
        EXPECT(0xb7c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xb7c2));
        // 09 02F6
        gbc.setState(0x9322, 0x97ed, 0x46e0, 0x42ca, 0xbba1, 0x7246, 0x0, 0x1);
        gbc.writeMem(0x9322, { 0x9 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x97ed, gbc.sp());
        EXPECT(0x9323, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0x9322));
        // 09 02F7
        gbc.setState(0x7e34, 0x338c, 0x1fe0, 0x4302, 0xecca, 0x2c5e, 0x1, 0x0);
        gbc.writeMem(0x7e34, { 0x9 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x338c, gbc.sp());
        EXPECT(0x7e35, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 09 02F8
        gbc.setState(0xc164, 0x63a2, 0xe5e0, 0xff18, 0xf170, 0x517e, 0x0, 0x1);
        gbc.writeMem(0xc164, { 0x9 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x63a2, gbc.sp());
        EXPECT(0xc165, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xc164));
        // 09 02F9
        gbc.setState(0x8e84, 0xda14, 0x1860, 0xc36, 0xbca6, 0x6408, 0x0, 0x0);
        gbc.writeMem(0x8e84, { 0x9 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xda14, gbc.sp());
        EXPECT(0x8e85, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0x8e84));
        // 09 02FA
        gbc.setState(0xdb75, 0x6d6b, 0xcdc0, 0x572c, 0x942, 0x7aae, 0x0, 0x0);
        gbc.writeMem(0xdb75, { 0x9 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x6d6b, gbc.sp());
        EXPECT(0xdb76, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xdb75));
        // 09 02FB
        gbc.setState(0x9124, 0x38a8, 0x10d0, 0xeb07, 0x21ce, 0x8a42, 0x1, 0x1);
        gbc.writeMem(0x9124, { 0x9 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x38a8, gbc.sp());
        EXPECT(0x9125, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0x9124));
        // 09 02FC
        gbc.setState(0x5067, 0x55df, 0xecd0, 0xac14, 0x80d1, 0x2bd6, 0x1, 0x0);
        gbc.writeMem(0x5067, { 0x9 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x55df, gbc.sp());
        EXPECT(0x5068, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 09 02FD
        gbc.setState(0xc405, 0x3af6, 0x2b80, 0x86fc, 0x6073, 0x6e7e, 0x0, 0x1);
        gbc.writeMem(0xc405, { 0x9 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x3af6, gbc.sp());
        EXPECT(0xc406, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xc405));
        // 09 02FE
        gbc.setState(0x5446, 0x8bae, 0x6700, 0xf1d8, 0x1007, 0xd761, 0x1, 0x1);
        gbc.writeMem(0x5446, { 0x9 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x8bae, gbc.sp());
        EXPECT(0x5447, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 09 02FF
        gbc.setState(0xbd8b, 0x7267, 0x4590, 0x58b4, 0xf306, 0x950e, 0x1, 0x0);
        gbc.writeMem(0xbd8b, { 0x9 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x7267, gbc.sp());
        EXPECT(0xbd8c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xbd8b));
        // 09 0300
        gbc.setState(0x43dc, 0x2ec6, 0x9d90, 0xd55e, 0xddd0, 0x39b9, 0x0, 0x1);
        gbc.writeMem(0x43dc, { 0x9 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x2ec6, gbc.sp());
        EXPECT(0x43dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 09 0301
        gbc.setState(0x89e3, 0x6dc3, 0x2a00, 0xfeab, 0x14fa, 0xc7e9, 0x1, 0x0);
        gbc.writeMem(0x89e3, { 0x9 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x6dc3, gbc.sp());
        EXPECT(0x89e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0x89e3));
        // 09 0302
        gbc.setState(0x3e8d, 0xa4bd, 0x94e0, 0xd160, 0x7642, 0xaf54, 0x0, 0x1);
        gbc.writeMem(0x3e8d, { 0x9 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xa4bd, gbc.sp());
        EXPECT(0x3e8e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 09 0303
        gbc.setState(0x115f, 0x89e8, 0x29d0, 0x10c, 0xedd5, 0xcdeb, 0x1, 0x0);
        gbc.writeMem(0x115f, { 0x9 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x89e8, gbc.sp());
        EXPECT(0x1160, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 09 0305
        gbc.setState(0xa6d, 0xbad5, 0x7550, 0x6fa4, 0x71a1, 0xb59c, 0x0, 0x1);
        gbc.writeMem(0xa6d, { 0x9 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xbad5, gbc.sp());
        EXPECT(0xa6e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 09 0306
        gbc.setState(0x46c8, 0x19c5, 0x95d0, 0x8274, 0x2b94, 0xa0db, 0x0, 0x1);
        gbc.writeMem(0x46c8, { 0x9 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x19c5, gbc.sp());
        EXPECT(0x46c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 09 0307
        gbc.setState(0x4316, 0xa3b, 0x22d0, 0x5cf6, 0x2ff6, 0xe05c, 0x1, 0x0);
        gbc.writeMem(0x4316, { 0x9 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xa3b, gbc.sp());
        EXPECT(0x4317, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 09 0308
        gbc.setState(0x22ab, 0x4cf3, 0xd4a0, 0x5843, 0xa5f1, 0x2b74, 0x0, 0x0);
        gbc.writeMem(0x22ab, { 0x9 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x4cf3, gbc.sp());
        EXPECT(0x22ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 09 0309
        gbc.setState(0xe0ff, 0x41ec, 0x53d0, 0x7081, 0x8a5d, 0xd42c, 0x1, 0x1);
        gbc.writeMem(0xe0ff, { 0x9 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x41ec, gbc.sp());
        EXPECT(0xe100, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xe0ff));
        // 09 030A
        gbc.setState(0xe428, 0xdeb9, 0xc170, 0xdeed, 0x2d64, 0x3350, 0x1, 0x1);
        gbc.writeMem(0xe428, { 0x9 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xdeb9, gbc.sp());
        EXPECT(0xe429, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xe428));
        // 09 030B
        gbc.setState(0xc8f7, 0x3e0d, 0xab00, 0x8406, 0x8234, 0xcf06, 0x1, 0x1);
        gbc.writeMem(0xc8f7, { 0x9 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x3e0d, gbc.sp());
        EXPECT(0xc8f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xc8f7));
        // 09 030C
        gbc.setState(0x7ef5, 0xe698, 0xbea0, 0x978b, 0x4b19, 0xa0e8, 0x0, 0x1);
        gbc.writeMem(0x7ef5, { 0x9 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xe698, gbc.sp());
        EXPECT(0x7ef6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 09 030D
        gbc.setState(0xa00, 0x82df, 0x86b0, 0xc4cf, 0x793e, 0xd795, 0x0, 0x0);
        gbc.writeMem(0xa00, { 0x9 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x82df, gbc.sp());
        EXPECT(0xa01, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 09 030E
        gbc.setState(0xa975, 0xc68a, 0x2e80, 0x174a, 0x917b, 0x2a60, 0x0, 0x0);
        gbc.writeMem(0xa975, { 0x9 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xc68a, gbc.sp());
        EXPECT(0xa976, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xa975));
        // 09 030F
        gbc.setState(0x6ba8, 0x7cad, 0x3c80, 0x6c4d, 0x8c87, 0x9a11, 0x0, 0x0);
        gbc.writeMem(0x6ba8, { 0x9 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x7cad, gbc.sp());
        EXPECT(0x6ba9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 09 0310
        gbc.setState(0xdc82, 0x8f91, 0x48e0, 0xf54f, 0x3fb3, 0x6962, 0x1, 0x1);
        gbc.writeMem(0xdc82, { 0x9 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x8f91, gbc.sp());
        EXPECT(0xdc83, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xdc82));
        // 09 0311
        gbc.setState(0x2839, 0x6323, 0xb2f0, 0x63be, 0xad27, 0x18c7, 0x1, 0x0);
        gbc.writeMem(0x2839, { 0x9 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x6323, gbc.sp());
        EXPECT(0x283a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 09 0312
        gbc.setState(0xa4a3, 0x6f50, 0xa650, 0xae2b, 0xd38c, 0x8ce6, 0x1, 0x1);
        gbc.writeMem(0xa4a3, { 0x9 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x6f50, gbc.sp());
        EXPECT(0xa4a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xa4a3));
        // 09 0313
        gbc.setState(0x22d4, 0xc8fb, 0x4150, 0xc1bb, 0x86ee, 0xfadb, 0x0, 0x0);
        gbc.writeMem(0x22d4, { 0x9 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xc8fb, gbc.sp());
        EXPECT(0x22d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 09 0314
        gbc.setState(0xe98e, 0x4e7f, 0x1d00, 0x99c1, 0x3280, 0x8bac, 0x1, 0x1);
        gbc.writeMem(0xe98e, { 0x9 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x4e7f, gbc.sp());
        EXPECT(0xe98f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xe98e));
        // 09 0315
        gbc.setState(0x94c7, 0x3b51, 0x1630, 0x5b28, 0xa0fd, 0xc885, 0x1, 0x1);
        gbc.writeMem(0x94c7, { 0x9 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x3b51, gbc.sp());
        EXPECT(0x94c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0x94c7));
        // 09 0316
        gbc.setState(0x115a, 0x91aa, 0x3770, 0x1661, 0x7151, 0xc2e4, 0x1, 0x1);
        gbc.writeMem(0x115a, { 0x9 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x91aa, gbc.sp());
        EXPECT(0x115b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 09 0317
        gbc.setState(0xcb20, 0x5329, 0xe100, 0x5315, 0x4c41, 0x5106, 0x0, 0x1);
        gbc.writeMem(0xcb20, { 0x9 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x5329, gbc.sp());
        EXPECT(0xcb21, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xcb20));
        // 09 0318
        gbc.setState(0x1a0f, 0x112d, 0x2680, 0x663f, 0x25bd, 0xff5e, 0x1, 0x0);
        gbc.writeMem(0x1a0f, { 0x9 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x112d, gbc.sp());
        EXPECT(0x1a10, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 09 031A
        gbc.setState(0xebc4, 0xdc1f, 0xb270, 0x221e, 0x11cc, 0xe7a4, 0x0, 0x1);
        gbc.writeMem(0xebc4, { 0x9 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xdc1f, gbc.sp());
        EXPECT(0xebc5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xebc4));
        // 09 031B
        gbc.setState(0x76d3, 0x7226, 0xb230, 0xb9b, 0x7e8, 0x7763, 0x1, 0x1);
        gbc.writeMem(0x76d3, { 0x9 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x7226, gbc.sp());
        EXPECT(0x76d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 09 031C
        gbc.setState(0x1353, 0x1694, 0x7aa0, 0xd186, 0xa07c, 0xb7a4, 0x0, 0x1);
        gbc.writeMem(0x1353, { 0x9 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x1694, gbc.sp());
        EXPECT(0x1354, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 09 031D
        gbc.setState(0x6975, 0x7f2a, 0xea0, 0x1f0, 0xd554, 0x1281, 0x0, 0x1);
        gbc.writeMem(0x6975, { 0x9 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x7f2a, gbc.sp());
        EXPECT(0x6976, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 09 031E
        gbc.setState(0xb61e, 0x47b1, 0xe280, 0x15b2, 0xf9e2, 0x2794, 0x0, 0x0);
        gbc.writeMem(0xb61e, { 0x9 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x47b1, gbc.sp());
        EXPECT(0xb61f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xb61e));
        // 09 031F
        gbc.setState(0x451d, 0x2cd0, 0xda60, 0xd849, 0x9d5b, 0xe9f9, 0x1, 0x1);
        gbc.writeMem(0x451d, { 0x9 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x2cd0, gbc.sp());
        EXPECT(0x451e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 09 0320
        gbc.setState(0x7cfe, 0x1543, 0xb620, 0x41be, 0x63a2, 0xb1e2, 0x0, 0x1);
        gbc.writeMem(0x7cfe, { 0x9 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x1543, gbc.sp());
        EXPECT(0x7cff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 09 0321
        gbc.setState(0x33f9, 0x53d0, 0xaa90, 0x242a, 0x9091, 0xc956, 0x0, 0x0);
        gbc.writeMem(0x33f9, { 0x9 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x53d0, gbc.sp());
        EXPECT(0x33fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 09 0322
        gbc.setState(0x2426, 0xdfe, 0x75b0, 0xc6c3, 0x6a39, 0xb8db, 0x1, 0x0);
        gbc.writeMem(0x2426, { 0x9 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xdfe, gbc.sp());
        EXPECT(0x2427, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 09 0323
        gbc.setState(0x4a53, 0x2de9, 0x7b10, 0xd861, 0xc1d, 0xde16, 0x0, 0x0);
        gbc.writeMem(0x4a53, { 0x9 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x2de9, gbc.sp());
        EXPECT(0x4a54, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 09 0324
        gbc.setState(0xd838, 0xa3ab, 0x1eb0, 0x7707, 0x3cf7, 0x17ba, 0x1, 0x1);
        gbc.writeMem(0xd838, { 0x9 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xa3ab, gbc.sp());
        EXPECT(0xd839, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xd838));
        // 09 0325
        gbc.setState(0xd4bc, 0x4492, 0xb6e0, 0x592f, 0xd974, 0x192a, 0x0, 0x0);
        gbc.writeMem(0xd4bc, { 0x9 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x4492, gbc.sp());
        EXPECT(0xd4bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xd4bc));
        // 09 0326
        gbc.setState(0x5aef, 0x18fc, 0x2a50, 0x1c3, 0x673f, 0xa5a6, 0x0, 0x1);
        gbc.writeMem(0x5aef, { 0x9 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x18fc, gbc.sp());
        EXPECT(0x5af0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 09 0327
        gbc.setState(0x32ac, 0x44cd, 0x8f60, 0x7cc8, 0xfff0, 0xcdc9, 0x1, 0x1);
        gbc.writeMem(0x32ac, { 0x9 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x44cd, gbc.sp());
        EXPECT(0x32ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 09 0328
        gbc.setState(0xc101, 0x61ec, 0xfbb0, 0x6ed3, 0xd611, 0x7a68, 0x1, 0x0);
        gbc.writeMem(0xc101, { 0x9 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x61ec, gbc.sp());
        EXPECT(0xc102, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xc101));
        // 09 0329
        gbc.setState(0xddea, 0x1ecf, 0x4d80, 0x7716, 0x8a6a, 0x5269, 0x1, 0x0);
        gbc.writeMem(0xddea, { 0x9 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x1ecf, gbc.sp());
        EXPECT(0xddeb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xddea));
        // 09 032A
        gbc.setState(0xaf63, 0xc6d4, 0xff50, 0xfc5e, 0xeabc, 0xcfa7, 0x0, 0x1);
        gbc.writeMem(0xaf63, { 0x9 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xc6d4, gbc.sp());
        EXPECT(0xaf64, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xaf63));
        // 09 032B
        gbc.setState(0x126d, 0xbf0e, 0xf5b0, 0xb5a7, 0x2859, 0x66fc, 0x1, 0x1);
        gbc.writeMem(0x126d, { 0x9 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xbf0e, gbc.sp());
        EXPECT(0x126e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 09 032C
        gbc.setState(0x4a4e, 0x527b, 0xa2c0, 0xea97, 0x7baf, 0xf38c, 0x0, 0x0);
        gbc.writeMem(0x4a4e, { 0x9 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x527b, gbc.sp());
        EXPECT(0x4a4f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 09 032D
        gbc.setState(0x33cb, 0x6031, 0xcd40, 0x4edc, 0x2356, 0x4a2e, 0x0, 0x1);
        gbc.writeMem(0x33cb, { 0x9 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x6031, gbc.sp());
        EXPECT(0x33cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 09 032E
        gbc.setState(0x835, 0xb56, 0xdb00, 0x8f19, 0xe7e, 0x73e8, 0x0, 0x1);
        gbc.writeMem(0x835, { 0x9 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xb56, gbc.sp());
        EXPECT(0x836, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 09 032F
        gbc.setState(0x26e4, 0x8dca, 0xda80, 0x9529, 0x604e, 0xda1d, 0x0, 0x0);
        gbc.writeMem(0x26e4, { 0x9 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x8dca, gbc.sp());
        EXPECT(0x26e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 09 0330
        gbc.setState(0xce6b, 0xaf86, 0x1ac0, 0xf4ed, 0x4cbd, 0xef34, 0x1, 0x1);
        gbc.writeMem(0xce6b, { 0x9 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xaf86, gbc.sp());
        EXPECT(0xce6c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xce6b));
        // 09 0331
        gbc.setState(0x3ed2, 0x7dfa, 0xb040, 0xd11a, 0x15a1, 0xa9e3, 0x0, 0x1);
        gbc.writeMem(0x3ed2, { 0x9 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x7dfa, gbc.sp());
        EXPECT(0x3ed3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 09 0332
        gbc.setState(0xeafa, 0x4374, 0xed20, 0xa83a, 0xe82b, 0x87f6, 0x0, 0x0);
        gbc.writeMem(0xeafa, { 0x9 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x4374, gbc.sp());
        EXPECT(0xeafb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xeafa));
        // 09 0333
        gbc.setState(0x311e, 0xd872, 0xad90, 0x5230, 0x7038, 0x90c4, 0x1, 0x1);
        gbc.writeMem(0x311e, { 0x9 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xd872, gbc.sp());
        EXPECT(0x311f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 09 0334
        gbc.setState(0x546e, 0x268b, 0xd500, 0xe09, 0x5880, 0xcc0e, 0x1, 0x0);
        gbc.writeMem(0x546e, { 0x9 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x268b, gbc.sp());
        EXPECT(0x546f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 09 0335
        gbc.setState(0xd288, 0x7f10, 0xb100, 0xdb73, 0x5763, 0x56b7, 0x0, 0x0);
        gbc.writeMem(0xd288, { 0x9 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x7f10, gbc.sp());
        EXPECT(0xd289, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xd288));
        // 09 0336
        gbc.setState(0x1376, 0x3b7e, 0x6fc0, 0xae18, 0x942b, 0x9931, 0x1, 0x1);
        gbc.writeMem(0x1376, { 0x9 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x3b7e, gbc.sp());
        EXPECT(0x1377, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 09 0337
        gbc.setState(0xdec8, 0xa358, 0x10d0, 0x10fe, 0xf6bd, 0xe247, 0x0, 0x1);
        gbc.writeMem(0xdec8, { 0x9 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xa358, gbc.sp());
        EXPECT(0xdec9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xdec8));
        // 09 0338
        gbc.setState(0xc4fa, 0xfc55, 0xc3b0, 0x6303, 0x2e6b, 0x8e36, 0x1, 0x1);
        gbc.writeMem(0xc4fa, { 0x9 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xfc55, gbc.sp());
        EXPECT(0xc4fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xc4fa));
        // 09 0339
        gbc.setState(0x7d6, 0x3b8f, 0xb660, 0xccf6, 0xa7c, 0x139b, 0x1, 0x1);
        gbc.writeMem(0x7d6, { 0x9 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x3b8f, gbc.sp());
        EXPECT(0x7d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 09 033A
        gbc.setState(0x6b3, 0xaa00, 0xb520, 0x7a10, 0xd821, 0xe95b, 0x0, 0x1);
        gbc.writeMem(0x6b3, { 0x9 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xaa00, gbc.sp());
        EXPECT(0x6b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 09 033B
        gbc.setState(0x6e6c, 0x517b, 0x15f0, 0xebc0, 0xa8f4, 0x88bf, 0x0, 0x1);
        gbc.writeMem(0x6e6c, { 0x9 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x517b, gbc.sp());
        EXPECT(0x6e6d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 09 033C
        gbc.setState(0x686a, 0x2215, 0x7ba0, 0xc37f, 0xcb66, 0xef1d, 0x0, 0x0);
        gbc.writeMem(0x686a, { 0x9 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x2215, gbc.sp());
        EXPECT(0x686b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 09 033D
        gbc.setState(0xa894, 0x6e63, 0x1af0, 0x8065, 0x6c72, 0xc303, 0x1, 0x0);
        gbc.writeMem(0xa894, { 0x9 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x6e63, gbc.sp());
        EXPECT(0xa895, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xa894));
        // 09 033E
        gbc.setState(0x7e6f, 0x195e, 0x2670, 0x8bfd, 0x4ce6, 0x489e, 0x1, 0x1);
        gbc.writeMem(0x7e6f, { 0x9 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x195e, gbc.sp());
        EXPECT(0x7e70, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 09 033F
        gbc.setState(0xc96e, 0x74cf, 0x5fb0, 0x2b3e, 0x9908, 0xf3c2, 0x0, 0x1);
        gbc.writeMem(0xc96e, { 0x9 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x74cf, gbc.sp());
        EXPECT(0xc96f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xc96e));
        // 09 0340
        gbc.setState(0xe773, 0xb8c0, 0x57e0, 0xe086, 0x950b, 0x2fd5, 0x0, 0x0);
        gbc.writeMem(0xe773, { 0x9 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xb8c0, gbc.sp());
        EXPECT(0xe774, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xe773));
        // 09 0341
        gbc.setState(0x8399, 0x48fa, 0xfa90, 0x9e3a, 0xfc58, 0xab0b, 0x1, 0x1);
        gbc.writeMem(0x8399, { 0x9 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x48fa, gbc.sp());
        EXPECT(0x839a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0x8399));
        // 09 0342
        gbc.setState(0x3203, 0x9881, 0x890, 0x2c14, 0x9384, 0x2307, 0x1, 0x0);
        gbc.writeMem(0x3203, { 0x9 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x9881, gbc.sp());
        EXPECT(0x3204, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 09 0343
        gbc.setState(0x33dd, 0x8c72, 0x22e0, 0xd84b, 0xea5b, 0xcc09, 0x1, 0x1);
        gbc.writeMem(0x33dd, { 0x9 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x8c72, gbc.sp());
        EXPECT(0x33de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 09 0344
        gbc.setState(0x5e06, 0x9c48, 0x1a00, 0x9bef, 0x3ac3, 0xf926, 0x0, 0x0);
        gbc.writeMem(0x5e06, { 0x9 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x9c48, gbc.sp());
        EXPECT(0x5e07, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 09 0345
        gbc.setState(0x9c68, 0x9304, 0x9800, 0x2c3f, 0x9969, 0xaf2e, 0x0, 0x1);
        gbc.writeMem(0x9c68, { 0x9 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x9304, gbc.sp());
        EXPECT(0x9c69, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0x9c68));
        // 09 0346
        gbc.setState(0x313e, 0xa103, 0xea40, 0xb973, 0x505c, 0x12d2, 0x0, 0x0);
        gbc.writeMem(0x313e, { 0x9 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xa103, gbc.sp());
        EXPECT(0x313f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 09 0347
        gbc.setState(0xcc64, 0xfdd5, 0x6870, 0x4e5f, 0x2ddb, 0x104e, 0x1, 0x1);
        gbc.writeMem(0xcc64, { 0x9 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xfdd5, gbc.sp());
        EXPECT(0xcc65, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xcc64));
        // 09 0348
        gbc.setState(0xad85, 0x9a95, 0x4210, 0xf3ef, 0xa382, 0xe34a, 0x1, 0x0);
        gbc.writeMem(0xad85, { 0x9 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x9a95, gbc.sp());
        EXPECT(0xad86, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xad85));
        // 09 0349
        gbc.setState(0x817a, 0x8e56, 0xbd20, 0xb097, 0x29ae, 0x537f, 0x1, 0x0);
        gbc.writeMem(0x817a, { 0x9 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x8e56, gbc.sp());
        EXPECT(0x817b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0x817a));
        // 09 034A
        gbc.setState(0x4f17, 0xfbc0, 0xfb30, 0xf21f, 0x3a08, 0xa5d9, 0x1, 0x1);
        gbc.writeMem(0x4f17, { 0x9 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xfbc0, gbc.sp());
        EXPECT(0x4f18, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 09 034B
        gbc.setState(0x7a51, 0x74d, 0x2300, 0xd4b4, 0xe434, 0x271, 0x1, 0x0);
        gbc.writeMem(0x7a51, { 0x9 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x74d, gbc.sp());
        EXPECT(0x7a52, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 09 034C
        gbc.setState(0x3fba, 0x2651, 0x2590, 0xc117, 0xcf8d, 0x4306, 0x1, 0x1);
        gbc.writeMem(0x3fba, { 0x9 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x2651, gbc.sp());
        EXPECT(0x3fbb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 09 034D
        gbc.setState(0xb807, 0x1eb7, 0x7420, 0xc436, 0x5dcb, 0x3a4, 0x1, 0x1);
        gbc.writeMem(0xb807, { 0x9 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x1eb7, gbc.sp());
        EXPECT(0xb808, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xb807));
        // 09 034E
        gbc.setState(0x8698, 0xf1ee, 0x4d70, 0xf45, 0x8bd, 0x66a2, 0x1, 0x1);
        gbc.writeMem(0x8698, { 0x9 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xf1ee, gbc.sp());
        EXPECT(0x8699, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0x8698));
        // 09 034F
        gbc.setState(0xb8bc, 0xe9b3, 0x2ba0, 0xb6e3, 0x4676, 0xf23f, 0x0, 0x1);
        gbc.writeMem(0xb8bc, { 0x9 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xe9b3, gbc.sp());
        EXPECT(0xb8bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xb8bc));
        // 09 0350
        gbc.setState(0xd43f, 0x1111, 0xf480, 0xf2fe, 0xa16a, 0x4ff6, 0x0, 0x1);
        gbc.writeMem(0xd43f, { 0x9 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x1111, gbc.sp());
        EXPECT(0xd440, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xd43f));
        // 09 0351
        gbc.setState(0xc85c, 0x6c75, 0x2e40, 0xb0bc, 0xeeff, 0x873c, 0x0, 0x0);
        gbc.writeMem(0xc85c, { 0x9 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x6c75, gbc.sp());
        EXPECT(0xc85d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xc85c));
        // 09 0352
        gbc.setState(0x24dc, 0x1cd4, 0x8c00, 0x102c, 0xee67, 0x1ad9, 0x1, 0x0);
        gbc.writeMem(0x24dc, { 0x9 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x1cd4, gbc.sp());
        EXPECT(0x24dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 09 0353
        gbc.setState(0x58a2, 0x46b5, 0xa810, 0xedf5, 0xe9b2, 0xa13a, 0x1, 0x1);
        gbc.writeMem(0x58a2, { 0x9 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x46b5, gbc.sp());
        EXPECT(0x58a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 09 0354
        gbc.setState(0x8a88, 0xa401, 0xb9f0, 0x9329, 0x138e, 0x784a, 0x1, 0x0);
        gbc.writeMem(0x8a88, { 0x9 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xa401, gbc.sp());
        EXPECT(0x8a89, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0x8a88));
        // 09 0356
        gbc.setState(0x8f08, 0x6fe8, 0x9cc0, 0xf551, 0x6426, 0x9737, 0x1, 0x0);
        gbc.writeMem(0x8f08, { 0x9 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x6fe8, gbc.sp());
        EXPECT(0x8f09, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0x8f08));
        // 09 0357
        gbc.setState(0xac09, 0x4157, 0x90f0, 0x7cdc, 0x5e3f, 0x144c, 0x0, 0x1);
        gbc.writeMem(0xac09, { 0x9 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x4157, gbc.sp());
        EXPECT(0xac0a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xac09));
        // 09 0358
        gbc.setState(0x47cf, 0xdc60, 0x6a70, 0x2888, 0xaf04, 0x5d9f, 0x1, 0x1);
        gbc.writeMem(0x47cf, { 0x9 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xdc60, gbc.sp());
        EXPECT(0x47d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 09 0359
        gbc.setState(0x3e1c, 0x219e, 0xace0, 0x427f, 0xf794, 0xe79e, 0x1, 0x0);
        gbc.writeMem(0x3e1c, { 0x9 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x219e, gbc.sp());
        EXPECT(0x3e1d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 09 035A
        gbc.setState(0xdff7, 0x1ae6, 0xe270, 0xa46d, 0x5fb6, 0x1e93, 0x0, 0x1);
        gbc.writeMem(0xdff7, { 0x9 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x1ae6, gbc.sp());
        EXPECT(0xdff8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xdff7));
        // 09 035B
        gbc.setState(0x1a26, 0xf155, 0xb0c0, 0x9666, 0xaab2, 0xf224, 0x1, 0x0);
        gbc.writeMem(0x1a26, { 0x9 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xf155, gbc.sp());
        EXPECT(0x1a27, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 09 035C
        gbc.setState(0x4276, 0x22f0, 0xe390, 0xc67d, 0xb2d7, 0xdccd, 0x0, 0x1);
        gbc.writeMem(0x4276, { 0x9 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x22f0, gbc.sp());
        EXPECT(0x4277, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 09 035D
        gbc.setState(0x49ba, 0xd5c5, 0xc050, 0x5550, 0x106d, 0x9fca, 0x0, 0x1);
        gbc.writeMem(0x49ba, { 0x9 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xd5c5, gbc.sp());
        EXPECT(0x49bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 09 035E
        gbc.setState(0xe367, 0x8395, 0x5f80, 0xad03, 0xa02c, 0x1bde, 0x1, 0x0);
        gbc.writeMem(0xe367, { 0x9 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x8395, gbc.sp());
        EXPECT(0xe368, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xe367));
        // 09 035F
        gbc.setState(0x9eee, 0xcd8b, 0x5380, 0x56dd, 0xd2a2, 0x7285, 0x1, 0x0);
        gbc.writeMem(0x9eee, { 0x9 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xcd8b, gbc.sp());
        EXPECT(0x9eef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0x9eee));
        // 09 0360
        gbc.setState(0xd81a, 0x57c2, 0x7b10, 0x8f79, 0x9f52, 0x108f, 0x1, 0x0);
        gbc.writeMem(0xd81a, { 0x9 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x57c2, gbc.sp());
        EXPECT(0xd81b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xd81a));
        // 09 0362
        gbc.setState(0xc841, 0x7680, 0x9190, 0x9d79, 0x6358, 0x1e11, 0x1, 0x0);
        gbc.writeMem(0xc841, { 0x9 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x7680, gbc.sp());
        EXPECT(0xc842, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xc841));
        // 09 0363
        gbc.setState(0xe2d0, 0xd27, 0xf490, 0xe4f7, 0xb85, 0x3092, 0x1, 0x1);
        gbc.writeMem(0xe2d0, { 0x9 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xd27, gbc.sp());
        EXPECT(0xe2d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xe2d0));
        // 09 0364
        gbc.setState(0xd773, 0x66aa, 0xbef0, 0x2608, 0x734c, 0x30c, 0x0, 0x1);
        gbc.writeMem(0xd773, { 0x9 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x66aa, gbc.sp());
        EXPECT(0xd774, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xd773));
        // 09 0365
        gbc.setState(0xb174, 0x72b4, 0x950, 0x1891, 0xe2e, 0x6d97, 0x0, 0x0);
        gbc.writeMem(0xb174, { 0x9 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x72b4, gbc.sp());
        EXPECT(0xb175, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xb174));
        // 09 0366
        gbc.setState(0xb3e0, 0xf95c, 0xef60, 0x9423, 0x98fc, 0x59e1, 0x1, 0x0);
        gbc.writeMem(0xb3e0, { 0x9 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xf95c, gbc.sp());
        EXPECT(0xb3e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xb3e0));
        // 09 0367
        gbc.setState(0xb5bd, 0x1702, 0xdaa0, 0x199f, 0xef6f, 0xe608, 0x0, 0x0);
        gbc.writeMem(0xb5bd, { 0x9 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x1702, gbc.sp());
        EXPECT(0xb5be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xb5bd));
        // 09 0368
        gbc.setState(0x918e, 0x7bdb, 0x3950, 0x93d7, 0xbfc, 0xd8bc, 0x0, 0x0);
        gbc.writeMem(0x918e, { 0x9 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x7bdb, gbc.sp());
        EXPECT(0x918f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0x918e));
        // 09 0369
        gbc.setState(0xead1, 0x70d1, 0x1d10, 0x4900, 0xb3b9, 0xa24c, 0x0, 0x1);
        gbc.writeMem(0xead1, { 0x9 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x70d1, gbc.sp());
        EXPECT(0xead2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xead1));
        // 09 036A
        gbc.setState(0x8456, 0x5f83, 0x6980, 0xefff, 0x60b8, 0xc549, 0x1, 0x1);
        gbc.writeMem(0x8456, { 0x9 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x5f83, gbc.sp());
        EXPECT(0x8457, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0x8456));
        // 09 036B
        gbc.setState(0x65ab, 0x8581, 0x3160, 0xe493, 0x7250, 0x92a6, 0x1, 0x0);
        gbc.writeMem(0x65ab, { 0x9 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x8581, gbc.sp());
        EXPECT(0x65ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 09 036C
        gbc.setState(0x6e20, 0xb265, 0x5a50, 0x2132, 0x932d, 0xeaa5, 0x1, 0x1);
        gbc.writeMem(0x6e20, { 0x9 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xb265, gbc.sp());
        EXPECT(0x6e21, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 09 036D
        gbc.setState(0xce2f, 0xf67d, 0xe130, 0xdacb, 0x4454, 0x2c5b, 0x1, 0x1);
        gbc.writeMem(0xce2f, { 0x9 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xf67d, gbc.sp());
        EXPECT(0xce30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xce2f));
        // 09 036E
        gbc.setState(0xd081, 0x5d2c, 0xd3e0, 0x136c, 0xbf37, 0x493e, 0x1, 0x1);
        gbc.writeMem(0xd081, { 0x9 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x5d2c, gbc.sp());
        EXPECT(0xd082, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xd081));
        // 09 036F
        gbc.setState(0x8ac4, 0xceaa, 0xdb30, 0xdc43, 0x844f, 0x2629, 0x0, 0x1);
        gbc.writeMem(0x8ac4, { 0x9 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xceaa, gbc.sp());
        EXPECT(0x8ac5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0x8ac4));
        // 09 0370
        gbc.setState(0xebaf, 0x2057, 0xa180, 0x306a, 0x7bba, 0x8be9, 0x0, 0x1);
        gbc.writeMem(0xebaf, { 0x9 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x2057, gbc.sp());
        EXPECT(0xebb0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xebaf));
        // 09 0371
        gbc.setState(0x872d, 0x974c, 0x1b20, 0xedf8, 0x55a5, 0x491f, 0x1, 0x1);
        gbc.writeMem(0x872d, { 0x9 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x974c, gbc.sp());
        EXPECT(0x872e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0x872d));
        // 09 0372
        gbc.setState(0x28e8, 0x5fa2, 0x6a00, 0x679, 0x87bb, 0x29e8, 0x1, 0x0);
        gbc.writeMem(0x28e8, { 0x9 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x5fa2, gbc.sp());
        EXPECT(0x28e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 09 0373
        gbc.setState(0x40ff, 0x2b31, 0xba90, 0xd80b, 0x14d8, 0xf92f, 0x1, 0x0);
        gbc.writeMem(0x40ff, { 0x9 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x2b31, gbc.sp());
        EXPECT(0x4100, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 09 0374
        gbc.setState(0x2e82, 0x6106, 0xb4a0, 0x150c, 0x64ea, 0xc616, 0x1, 0x1);
        gbc.writeMem(0x2e82, { 0x9 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x6106, gbc.sp());
        EXPECT(0x2e83, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 09 0375
        gbc.setState(0x2eb7, 0x8445, 0x380, 0x2319, 0x4bf8, 0x3f3c, 0x0, 0x1);
        gbc.writeMem(0x2eb7, { 0x9 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x8445, gbc.sp());
        EXPECT(0x2eb8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 09 0376
        gbc.setState(0xdd8c, 0xdef2, 0x6900, 0x9d9a, 0xd32b, 0x892d, 0x1, 0x1);
        gbc.writeMem(0xdd8c, { 0x9 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xdef2, gbc.sp());
        EXPECT(0xdd8d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xdd8c));
        // 09 0377
        gbc.setState(0x177d, 0x3b96, 0x4890, 0xf0b1, 0xf70e, 0x7349, 0x1, 0x1);
        gbc.writeMem(0x177d, { 0x9 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x3b96, gbc.sp());
        EXPECT(0x177e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 09 0378
        gbc.setState(0x9a2e, 0xac9f, 0x36f0, 0x3cd3, 0x927d, 0x6851, 0x0, 0x1);
        gbc.writeMem(0x9a2e, { 0x9 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xac9f, gbc.sp());
        EXPECT(0x9a2f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0x9a2e));
        // 09 0379
        gbc.setState(0x8331, 0x48c5, 0x32b0, 0x7c69, 0xd7bc, 0xdc67, 0x0, 0x1);
        gbc.writeMem(0x8331, { 0x9 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x48c5, gbc.sp());
        EXPECT(0x8332, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0x8331));
        // 09 037A
        gbc.setState(0x21c9, 0x38, 0x1030, 0xbaf7, 0x2b92, 0xc16a, 0x1, 0x1);
        gbc.writeMem(0x21c9, { 0x9 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x38, gbc.sp());
        EXPECT(0x21ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 09 037B
        gbc.setState(0xa7af, 0xd293, 0x3c0, 0x1d14, 0xb5eb, 0x5de9, 0x0, 0x1);
        gbc.writeMem(0xa7af, { 0x9 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xd293, gbc.sp());
        EXPECT(0xa7b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xa7af));
        // 09 037C
        gbc.setState(0x61c0, 0xa42f, 0xe110, 0x898b, 0x57d9, 0xb86a, 0x0, 0x1);
        gbc.writeMem(0x61c0, { 0x9 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xa42f, gbc.sp());
        EXPECT(0x61c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 09 037D
        gbc.setState(0xd279, 0xe4a4, 0xb270, 0x89b4, 0x67a5, 0x2392, 0x1, 0x0);
        gbc.writeMem(0xd279, { 0x9 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xe4a4, gbc.sp());
        EXPECT(0xd27a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xd279));
        // 09 037E
        gbc.setState(0x34ee, 0xc995, 0x7640, 0xd3dc, 0x56ea, 0x34b4, 0x0, 0x1);
        gbc.writeMem(0x34ee, { 0x9 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xc995, gbc.sp());
        EXPECT(0x34ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 09 037F
        gbc.setState(0x665, 0x9f7e, 0xdc10, 0xca94, 0x3618, 0x5b7a, 0x0, 0x0);
        gbc.writeMem(0x665, { 0x9 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x9f7e, gbc.sp());
        EXPECT(0x666, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 09 0380
        gbc.setState(0x533, 0x5483, 0x8820, 0x4ddf, 0x4a6c, 0xd732, 0x0, 0x1);
        gbc.writeMem(0x533, { 0x9 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x5483, gbc.sp());
        EXPECT(0x534, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 09 0381
        gbc.setState(0x41d3, 0x47b0, 0x6760, 0xdd4e, 0xa750, 0xc2ac, 0x1, 0x1);
        gbc.writeMem(0x41d3, { 0x9 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x47b0, gbc.sp());
        EXPECT(0x41d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 09 0382
        gbc.setState(0x7f69, 0x8d78, 0x690, 0xab5, 0xe85e, 0x154f, 0x0, 0x0);
        gbc.writeMem(0x7f69, { 0x9 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x8d78, gbc.sp());
        EXPECT(0x7f6a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 09 0383
        gbc.setState(0x9ec7, 0x7a4f, 0x6c10, 0x430b, 0xd461, 0xb834, 0x0, 0x1);
        gbc.writeMem(0x9ec7, { 0x9 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x7a4f, gbc.sp());
        EXPECT(0x9ec8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0x9ec7));
        // 09 0384
        gbc.setState(0x2dc8, 0x5554, 0x8db0, 0x6e77, 0x5abd, 0xaf87, 0x0, 0x0);
        gbc.writeMem(0x2dc8, { 0x9 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x5554, gbc.sp());
        EXPECT(0x2dc9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 09 0385
        gbc.setState(0xbd1, 0x3d5a, 0x650, 0xaaf2, 0x7449, 0x15b3, 0x0, 0x1);
        gbc.writeMem(0xbd1, { 0x9 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x3d5a, gbc.sp());
        EXPECT(0xbd2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 09 0386
        gbc.setState(0xb152, 0x5b25, 0xfcc0, 0x6c0c, 0x7e20, 0x60f0, 0x1, 0x0);
        gbc.writeMem(0xb152, { 0x9 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x5b25, gbc.sp());
        EXPECT(0xb153, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xb152));
        // 09 0387
        gbc.setState(0xbc78, 0xc978, 0x9e50, 0x361f, 0xf9c1, 0xf9d1, 0x0, 0x1);
        gbc.writeMem(0xbc78, { 0x9 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xc978, gbc.sp());
        EXPECT(0xbc79, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xbc78));
        // 09 0388
        gbc.setState(0xac94, 0x9b27, 0x36c0, 0xefc8, 0x31d8, 0x5a45, 0x1, 0x1);
        gbc.writeMem(0xac94, { 0x9 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x9b27, gbc.sp());
        EXPECT(0xac95, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xac94));
        // 09 0389
        gbc.setState(0x8ac6, 0x2921, 0xbd20, 0x7766, 0x77e8, 0xa842, 0x1, 0x0);
        gbc.writeMem(0x8ac6, { 0x9 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x2921, gbc.sp());
        EXPECT(0x8ac7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0x8ac6));
        // 09 038A
        gbc.setState(0xc58f, 0x7b18, 0x6990, 0x3b0, 0x25c8, 0xe3f6, 0x0, 0x0);
        gbc.writeMem(0xc58f, { 0x9 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x7b18, gbc.sp());
        EXPECT(0xc590, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xc58f));
        // 09 038B
        gbc.setState(0xa3b9, 0x6e2d, 0xec00, 0x5f40, 0xab10, 0x7b93, 0x1, 0x0);
        gbc.writeMem(0xa3b9, { 0x9 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x6e2d, gbc.sp());
        EXPECT(0xa3ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xa3b9));
        // 09 038E
        gbc.setState(0x7d14, 0xd824, 0x6fe0, 0xcf05, 0x91ee, 0x3533, 0x1, 0x1);
        gbc.writeMem(0x7d14, { 0x9 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xd824, gbc.sp());
        EXPECT(0x7d15, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 09 038F
        gbc.setState(0x3d86, 0x69df, 0x6a70, 0xe487, 0x4edb, 0xc392, 0x0, 0x1);
        gbc.writeMem(0x3d86, { 0x9 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x69df, gbc.sp());
        EXPECT(0x3d87, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 09 0390
        gbc.setState(0x7f69, 0x8e56, 0xd9a0, 0x2382, 0xb699, 0xc730, 0x1, 0x0);
        gbc.writeMem(0x7f69, { 0x9 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x8e56, gbc.sp());
        EXPECT(0x7f6a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 09 0391
        gbc.setState(0x117f, 0xbcb8, 0xbd30, 0xa71, 0x7e6a, 0x5323, 0x0, 0x1);
        gbc.writeMem(0x117f, { 0x9 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xbcb8, gbc.sp());
        EXPECT(0x1180, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 09 0392
        gbc.setState(0x2538, 0x269e, 0x7370, 0xd94b, 0xb914, 0x2b8, 0x1, 0x1);
        gbc.writeMem(0x2538, { 0x9 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x269e, gbc.sp());
        EXPECT(0x2539, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 09 0393
        gbc.setState(0xe6cb, 0xa899, 0xadc0, 0xd81e, 0x9125, 0x9a71, 0x0, 0x1);
        gbc.writeMem(0xe6cb, { 0x9 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xa899, gbc.sp());
        EXPECT(0xe6cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xe6cb));
        // 09 0394
        gbc.setState(0x9602, 0xb17d, 0x2a30, 0xf923, 0x9989, 0xd9c9, 0x0, 0x0);
        gbc.writeMem(0x9602, { 0x9 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xb17d, gbc.sp());
        EXPECT(0x9603, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0x9602));
        // 09 0395
        gbc.setState(0x4ee1, 0xb938, 0x8730, 0xe133, 0x94ee, 0xbe16, 0x1, 0x0);
        gbc.writeMem(0x4ee1, { 0x9 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xb938, gbc.sp());
        EXPECT(0x4ee2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 09 0396
        gbc.setState(0x9995, 0xfcad, 0x9de0, 0x3e1d, 0xea1b, 0x823d, 0x0, 0x0);
        gbc.writeMem(0x9995, { 0x9 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xfcad, gbc.sp());
        EXPECT(0x9996, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0x9995));
        // 09 0397
        gbc.setState(0x2c1c, 0xb8ff, 0xed10, 0xbb31, 0x132, 0x1bbc, 0x1, 0x1);
        gbc.writeMem(0x2c1c, { 0x9 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xb8ff, gbc.sp());
        EXPECT(0x2c1d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 09 0398
        gbc.setState(0xf80, 0x55d0, 0x93f0, 0xea28, 0x20a9, 0xdb75, 0x1, 0x1);
        gbc.writeMem(0xf80, { 0x9 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x55d0, gbc.sp());
        EXPECT(0xf81, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 09 0399
        gbc.setState(0x3195, 0xc061, 0x8140, 0x56e8, 0x4a67, 0xc63f, 0x0, 0x0);
        gbc.writeMem(0x3195, { 0x9 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xc061, gbc.sp());
        EXPECT(0x3196, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 09 039A
        gbc.setState(0x6466, 0xe7a8, 0x3da0, 0x9d78, 0x8fd0, 0xf128, 0x1, 0x1);
        gbc.writeMem(0x6466, { 0x9 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xe7a8, gbc.sp());
        EXPECT(0x6467, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 09 039B
        gbc.setState(0x6a78, 0x6c6d, 0x6da0, 0x8419, 0x3dc1, 0x2693, 0x1, 0x0);
        gbc.writeMem(0x6a78, { 0x9 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x6c6d, gbc.sp());
        EXPECT(0x6a79, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 09 039C
        gbc.setState(0x433d, 0x86ae, 0xf8d0, 0x44b0, 0x647a, 0x3a26, 0x1, 0x0);
        gbc.writeMem(0x433d, { 0x9 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x86ae, gbc.sp());
        EXPECT(0x433e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 09 039D
        gbc.setState(0x5b47, 0xed79, 0x9ef0, 0x5309, 0x6b58, 0xae0c, 0x1, 0x0);
        gbc.writeMem(0x5b47, { 0x9 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xed79, gbc.sp());
        EXPECT(0x5b48, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 09 039E
        gbc.setState(0x4fb0, 0x56b2, 0x690, 0xbc9e, 0x735b, 0xbf47, 0x1, 0x0);
        gbc.writeMem(0x4fb0, { 0x9 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x56b2, gbc.sp());
        EXPECT(0x4fb1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 09 039F
        gbc.setState(0xd35c, 0x8b61, 0x1b50, 0x99b9, 0xd0f8, 0xa431, 0x1, 0x0);
        gbc.writeMem(0xd35c, { 0x9 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x8b61, gbc.sp());
        EXPECT(0xd35d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xd35c));
        // 09 03A0
        gbc.setState(0x6210, 0x6e89, 0xf130, 0x80b9, 0x9216, 0x7897, 0x1, 0x1);
        gbc.writeMem(0x6210, { 0x9 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x6e89, gbc.sp());
        EXPECT(0x6211, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 09 03A1
        gbc.setState(0xe2a6, 0xb369, 0x2fd0, 0xbe72, 0x33db, 0x7d3, 0x0, 0x1);
        gbc.writeMem(0xe2a6, { 0x9 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xb369, gbc.sp());
        EXPECT(0xe2a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xe2a6));
        // 09 03A2
        gbc.setState(0x8c53, 0x50d2, 0x8610, 0xa351, 0x9b05, 0x3958, 0x0, 0x0);
        gbc.writeMem(0x8c53, { 0x9 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x50d2, gbc.sp());
        EXPECT(0x8c54, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0x8c53));
        // 09 03A3
        gbc.setState(0x787, 0xf1a6, 0xe090, 0xf22a, 0x40eb, 0xb87e, 0x0, 0x0);
        gbc.writeMem(0x787, { 0x9 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xf1a6, gbc.sp());
        EXPECT(0x788, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 09 03A4
        gbc.setState(0xdcc5, 0xc252, 0x1ca0, 0xcd9f, 0x88e7, 0x74b5, 0x1, 0x0);
        gbc.writeMem(0xdcc5, { 0x9 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xc252, gbc.sp());
        EXPECT(0xdcc6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xdcc5));
        // 09 03A5
        gbc.setState(0xd044, 0x8601, 0x6500, 0xa346, 0xc70, 0xb8bf, 0x1, 0x1);
        gbc.writeMem(0xd044, { 0x9 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x8601, gbc.sp());
        EXPECT(0xd045, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xd044));
        // 09 03A6
        gbc.setState(0x57b9, 0x4eb, 0x4dc0, 0xa5c7, 0xbbf7, 0xe401, 0x1, 0x1);
        gbc.writeMem(0x57b9, { 0x9 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x4eb, gbc.sp());
        EXPECT(0x57ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 09 03A7
        gbc.setState(0x210f, 0x543c, 0xcba0, 0x23a1, 0xdbdc, 0x9f7a, 0x0, 0x1);
        gbc.writeMem(0x210f, { 0x9 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x543c, gbc.sp());
        EXPECT(0x2110, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 09 03A8
        gbc.setState(0x46b2, 0x783d, 0xe450, 0xc6ba, 0x132f, 0x1dfc, 0x0, 0x1);
        gbc.writeMem(0x46b2, { 0x9 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x783d, gbc.sp());
        EXPECT(0x46b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 09 03A9
        gbc.setState(0x23a1, 0x9358, 0x9b90, 0x35d2, 0xcfcd, 0x100e, 0x0, 0x0);
        gbc.writeMem(0x23a1, { 0x9 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x9358, gbc.sp());
        EXPECT(0x23a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 09 03AA
        gbc.setState(0xccb4, 0xd2ce, 0x2830, 0x3a04, 0xdfe9, 0xfc51, 0x1, 0x1);
        gbc.writeMem(0xccb4, { 0x9 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xd2ce, gbc.sp());
        EXPECT(0xccb5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xccb4));
        // 09 03AB
        gbc.setState(0x539c, 0xfee7, 0xd2f0, 0xee0, 0x475a, 0x2266, 0x0, 0x0);
        gbc.writeMem(0x539c, { 0x9 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xfee7, gbc.sp());
        EXPECT(0x539d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 09 03AC
        gbc.setState(0xd092, 0xf9c6, 0x6a90, 0xfeab, 0xdf90, 0x8f30, 0x0, 0x0);
        gbc.writeMem(0xd092, { 0x9 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xf9c6, gbc.sp());
        EXPECT(0xd093, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xd092));
        // 09 03AD
        gbc.setState(0x53ab, 0xe27f, 0x7d30, 0x7b5d, 0xad49, 0xbe7f, 0x0, 0x1);
        gbc.writeMem(0x53ab, { 0x9 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xe27f, gbc.sp());
        EXPECT(0x53ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 09 03AF
        gbc.setState(0xd5ef, 0xbe99, 0x95a0, 0x5dad, 0xf46f, 0x8bf, 0x0, 0x0);
        gbc.writeMem(0xd5ef, { 0x9 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xbe99, gbc.sp());
        EXPECT(0xd5f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xd5ef));
        // 09 03B0
        gbc.setState(0x1eba, 0x1ad9, 0x4c90, 0x69ac, 0x16c, 0xf666, 0x0, 0x0);
        gbc.writeMem(0x1eba, { 0x9 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x1ad9, gbc.sp());
        EXPECT(0x1ebb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 09 03B1
        gbc.setState(0xb6e, 0xfdc8, 0x96a0, 0x66af, 0xc498, 0xd2c4, 0x1, 0x1);
        gbc.writeMem(0xb6e, { 0x9 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xfdc8, gbc.sp());
        EXPECT(0xb6f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 09 03B2
        gbc.setState(0x994e, 0x9527, 0x2b20, 0x215f, 0xe3b9, 0x152b, 0x1, 0x0);
        gbc.writeMem(0x994e, { 0x9 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x9527, gbc.sp());
        EXPECT(0x994f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0x994e));
        // 09 03B4
        gbc.setState(0xaeb7, 0x7152, 0x1df0, 0x231a, 0x3dcf, 0x7e35, 0x1, 0x0);
        gbc.writeMem(0xaeb7, { 0x9 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x7152, gbc.sp());
        EXPECT(0xaeb8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xaeb7));
        // 09 03B5
        gbc.setState(0x12bd, 0xb5d0, 0x1780, 0x150c, 0x7a2d, 0x58f5, 0x0, 0x1);
        gbc.writeMem(0x12bd, { 0x9 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xb5d0, gbc.sp());
        EXPECT(0x12be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 09 03B7
        gbc.setState(0x1958, 0x155c, 0x1330, 0xfa31, 0xfea5, 0x71ad, 0x0, 0x0);
        gbc.writeMem(0x1958, { 0x9 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x155c, gbc.sp());
        EXPECT(0x1959, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 09 03B8
        gbc.setState(0x600b, 0x8a4b, 0x4960, 0x9e22, 0xc9c4, 0xe204, 0x1, 0x1);
        gbc.writeMem(0x600b, { 0x9 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x8a4b, gbc.sp());
        EXPECT(0x600c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 09 03B9
        gbc.setState(0x6ec6, 0x49d, 0x31e0, 0xeb15, 0xc05b, 0xd30e, 0x1, 0x0);
        gbc.writeMem(0x6ec6, { 0x9 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x49d, gbc.sp());
        EXPECT(0x6ec7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 09 03BA
        gbc.setState(0x7a33, 0x7663, 0xdd20, 0x2365, 0x8c42, 0x8b2b, 0x1, 0x1);
        gbc.writeMem(0x7a33, { 0x9 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x7663, gbc.sp());
        EXPECT(0x7a34, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 09 03BB
        gbc.setState(0x4e8e, 0x9af4, 0x1530, 0xd8f4, 0x29ad, 0x62dc, 0x0, 0x1);
        gbc.writeMem(0x4e8e, { 0x9 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x9af4, gbc.sp());
        EXPECT(0x4e8f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 09 03BC
        gbc.setState(0xdae9, 0x3764, 0x2760, 0xd7b6, 0xd3ae, 0xa714, 0x1, 0x0);
        gbc.writeMem(0xdae9, { 0x9 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x3764, gbc.sp());
        EXPECT(0xdaea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xdae9));
        // 09 03BD
        gbc.setState(0x5d1a, 0x432f, 0x9cf0, 0xb6e, 0xdb59, 0x12ee, 0x0, 0x0);
        gbc.writeMem(0x5d1a, { 0x9 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x432f, gbc.sp());
        EXPECT(0x5d1b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 09 03BE
        gbc.setState(0x8bbe, 0xc21, 0x38d0, 0x8732, 0xaeb1, 0xf757, 0x1, 0x1);
        gbc.writeMem(0x8bbe, { 0x9 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xc21, gbc.sp());
        EXPECT(0x8bbf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0x8bbe));
        // 09 03BF
        gbc.setState(0xcec6, 0x3432, 0x7480, 0x7ef, 0xba12, 0xe099, 0x1, 0x1);
        gbc.writeMem(0xcec6, { 0x9 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x3432, gbc.sp());
        EXPECT(0xcec7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xcec6));
        // 09 03C0
        gbc.setState(0x786c, 0x4e83, 0x4750, 0xdb29, 0x2a73, 0xd759, 0x0, 0x0);
        gbc.writeMem(0x786c, { 0x9 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x4e83, gbc.sp());
        EXPECT(0x786d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 09 03C1
        gbc.setState(0xe0c4, 0x434c, 0x2250, 0x8ea8, 0x5991, 0x8bc7, 0x0, 0x1);
        gbc.writeMem(0xe0c4, { 0x9 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x434c, gbc.sp());
        EXPECT(0xe0c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xe0c4));
        // 09 03C2
        gbc.setState(0x4157, 0xd504, 0x9c40, 0x5bfc, 0x1385, 0x454d, 0x0, 0x0);
        gbc.writeMem(0x4157, { 0x9 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xd504, gbc.sp());
        EXPECT(0x4158, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 09 03C3
        gbc.setState(0xc842, 0x8cf1, 0x65d0, 0x2dd3, 0x3063, 0x1389, 0x1, 0x0);
        gbc.writeMem(0xc842, { 0x9 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x8cf1, gbc.sp());
        EXPECT(0xc843, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xc842));
        // 09 03C4
        gbc.setState(0x13a6, 0x9dc0, 0xc500, 0xb9a, 0x500a, 0x3da0, 0x1, 0x0);
        gbc.writeMem(0x13a6, { 0x9 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x9dc0, gbc.sp());
        EXPECT(0x13a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 09 03C5
        gbc.setState(0x1ffc, 0x7bc6, 0xd1a0, 0xb269, 0x911f, 0x2c36, 0x0, 0x1);
        gbc.writeMem(0x1ffc, { 0x9 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x7bc6, gbc.sp());
        EXPECT(0x1ffd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 09 03C6
        gbc.setState(0xba8b, 0xf9f6, 0xe360, 0x19c6, 0xb594, 0xbb31, 0x0, 0x0);
        gbc.writeMem(0xba8b, { 0x9 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xf9f6, gbc.sp());
        EXPECT(0xba8c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xba8b));
        // 09 03C7
        gbc.setState(0x965e, 0xd448, 0x11e0, 0x4d53, 0x4506, 0x20dc, 0x1, 0x0);
        gbc.writeMem(0x965e, { 0x9 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xd448, gbc.sp());
        EXPECT(0x965f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0x965e));
        // 09 03C8
        gbc.setState(0xb8fe, 0x3a45, 0xf080, 0x6a1b, 0xb46f, 0xc306, 0x0, 0x0);
        gbc.writeMem(0xb8fe, { 0x9 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x3a45, gbc.sp());
        EXPECT(0xb8ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xb8fe));
        // 09 03C9
        gbc.setState(0x8d4a, 0x4d9b, 0x5660, 0x60d5, 0x3a4d, 0x5777, 0x1, 0x0);
        gbc.writeMem(0x8d4a, { 0x9 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x4d9b, gbc.sp());
        EXPECT(0x8d4b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0x8d4a));
        // 09 03CA
        gbc.setState(0x6f80, 0x831c, 0x5140, 0x1009, 0x6938, 0x62b7, 0x1, 0x1);
        gbc.writeMem(0x6f80, { 0x9 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x831c, gbc.sp());
        EXPECT(0x6f81, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 09 03CB
        gbc.setState(0xc561, 0x5962, 0xa190, 0x5989, 0xb032, 0x6ec, 0x0, 0x1);
        gbc.writeMem(0xc561, { 0x9 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x5962, gbc.sp());
        EXPECT(0xc562, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xc561));
        // 09 03CC
        gbc.setState(0xda, 0x747, 0xef70, 0x2dad, 0xd0e4, 0x7c8a, 0x1, 0x1);
        gbc.writeMem(0xda, { 0x9 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x747, gbc.sp());
        EXPECT(0xdb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 09 03CE
        gbc.setState(0xdead, 0x7cc9, 0x7220, 0x2326, 0xbee5, 0x42e1, 0x1, 0x0);
        gbc.writeMem(0xdead, { 0x9 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x7cc9, gbc.sp());
        EXPECT(0xdeae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xdead));
        // 09 03CF
        gbc.setState(0x1c24, 0x1190, 0x1240, 0x8f70, 0xa258, 0xf6c9, 0x0, 0x1);
        gbc.writeMem(0x1c24, { 0x9 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x1190, gbc.sp());
        EXPECT(0x1c25, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 09 03D0
        gbc.setState(0x3d2b, 0x1569, 0x6660, 0x3bbf, 0x5325, 0xed97, 0x1, 0x1);
        gbc.writeMem(0x3d2b, { 0x9 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x1569, gbc.sp());
        EXPECT(0x3d2c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 09 03D1
        gbc.setState(0xbb8b, 0x7242, 0xa4a0, 0xa1f6, 0x78e5, 0x672e, 0x0, 0x0);
        gbc.writeMem(0xbb8b, { 0x9 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x7242, gbc.sp());
        EXPECT(0xbb8c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xbb8b));
        // 09 03D2
        gbc.setState(0xa9a1, 0x5c83, 0xebf0, 0x94ee, 0x369d, 0x1803, 0x1, 0x0);
        gbc.writeMem(0xa9a1, { 0x9 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x5c83, gbc.sp());
        EXPECT(0xa9a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xa9a1));
        // 09 03D3
        gbc.setState(0xd75e, 0x48a1, 0xbd10, 0xd71d, 0xd5c4, 0xf81e, 0x0, 0x0);
        gbc.writeMem(0xd75e, { 0x9 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x48a1, gbc.sp());
        EXPECT(0xd75f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xd75e));
        // 09 03D4
        gbc.setState(0x7cfa, 0xfbac, 0xe1b0, 0xd581, 0x818f, 0x6d7c, 0x0, 0x0);
        gbc.writeMem(0x7cfa, { 0x9 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xfbac, gbc.sp());
        EXPECT(0x7cfb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 09 03D5
        gbc.setState(0x576a, 0x17a6, 0x66b0, 0x9283, 0xf527, 0xd9b7, 0x0, 0x1);
        gbc.writeMem(0x576a, { 0x9 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x17a6, gbc.sp());
        EXPECT(0x576b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 09 03D6
        gbc.setState(0x1570, 0x34b1, 0xeaa0, 0x9179, 0x7863, 0xbb8c, 0x0, 0x1);
        gbc.writeMem(0x1570, { 0x9 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x34b1, gbc.sp());
        EXPECT(0x1571, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 09 03D7
        gbc.setState(0x309b, 0xb788, 0x490, 0x632d, 0x19b7, 0xa1cf, 0x1, 0x1);
        gbc.writeMem(0x309b, { 0x9 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xb788, gbc.sp());
        EXPECT(0x309c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 09 03D8
        gbc.setState(0xa036, 0x124a, 0x3bd0, 0x16d0, 0x952e, 0x98ba, 0x1, 0x0);
        gbc.writeMem(0xa036, { 0x9 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x124a, gbc.sp());
        EXPECT(0xa037, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xa036));
        // 09 03D9
        gbc.setState(0xc427, 0x8f9e, 0x9230, 0x15b, 0xb98d, 0x1495, 0x0, 0x0);
        gbc.writeMem(0xc427, { 0x9 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x8f9e, gbc.sp());
        EXPECT(0xc428, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xc427));
        // 09 03DA
        gbc.setState(0xc2b8, 0xf68b, 0xb2a0, 0xcc9a, 0xddc4, 0x1101, 0x0, 0x1);
        gbc.writeMem(0xc2b8, { 0x9 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xf68b, gbc.sp());
        EXPECT(0xc2b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xc2b8));
        // 09 03DB
        gbc.setState(0x8ca1, 0x932c, 0x7150, 0x8191, 0x596b, 0xd7a4, 0x0, 0x0);
        gbc.writeMem(0x8ca1, { 0x9 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x932c, gbc.sp());
        EXPECT(0x8ca2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0x8ca1));
        // 09 03DC
        gbc.setState(0x5ef9, 0x999b, 0x6760, 0x2195, 0xfbd2, 0xdc87, 0x0, 0x0);
        gbc.writeMem(0x5ef9, { 0x9 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x999b, gbc.sp());
        EXPECT(0x5efa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 09 03DD
        gbc.setState(0xe2c4, 0x7524, 0xadd0, 0x6569, 0xd150, 0xef7e, 0x0, 0x1);
        gbc.writeMem(0xe2c4, { 0x9 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x7524, gbc.sp());
        EXPECT(0xe2c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xe2c4));
        // 09 03DE
        gbc.setState(0x99f3, 0x8092, 0x6880, 0x87ae, 0xbc14, 0x38fb, 0x1, 0x1);
        gbc.writeMem(0x99f3, { 0x9 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x8092, gbc.sp());
        EXPECT(0x99f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0x99f3));
        // 09 03DF
        gbc.setState(0x2e06, 0x538c, 0xcd40, 0xb489, 0x6f53, 0xc996, 0x1, 0x1);
        gbc.writeMem(0x2e06, { 0x9 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x538c, gbc.sp());
        EXPECT(0x2e07, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 09 03E0
        gbc.setState(0x24c9, 0xd690, 0xc860, 0xd134, 0x2f36, 0x9f2f, 0x0, 0x0);
        gbc.writeMem(0x24c9, { 0x9 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xd690, gbc.sp());
        EXPECT(0x24ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 09 03E1
        gbc.setState(0x9c02, 0x4189, 0xc360, 0xd432, 0xae0d, 0x737f, 0x1, 0x0);
        gbc.writeMem(0x9c02, { 0x9 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x4189, gbc.sp());
        EXPECT(0x9c03, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0x9c02));
        // 09 03E2
        gbc.setState(0xdaad, 0x8312, 0x3f60, 0x5c65, 0xd43c, 0x70a4, 0x1, 0x0);
        gbc.writeMem(0xdaad, { 0x9 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x8312, gbc.sp());
        EXPECT(0xdaae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xdaad));
        // 09 03E3
        gbc.setState(0x9999, 0x5180, 0xa670, 0x6e99, 0x344b, 0xfc4d, 0x1, 0x0);
        gbc.writeMem(0x9999, { 0x9 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x5180, gbc.sp());
        EXPECT(0x999a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0x9999));
        // 09 03E4
        gbc.setState(0xccd8, 0xc9a4, 0x2510, 0xc674, 0xa06a, 0xba51, 0x0, 0x1);
        gbc.writeMem(0xccd8, { 0x9 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xc9a4, gbc.sp());
        EXPECT(0xccd9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xccd8));
        // 09 03E5
        gbc.setState(0x5417, 0xd35a, 0x67d0, 0x116c, 0x740b, 0xbba8, 0x0, 0x1);
        gbc.writeMem(0x5417, { 0x9 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xd35a, gbc.sp());
        EXPECT(0x5418, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 09 03E6
        gbc.setState(0x903f, 0x7749, 0x46e0, 0x9143, 0xece8, 0x4521, 0x1, 0x1);
        gbc.writeMem(0x903f, { 0x9 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x7749, gbc.sp());
        EXPECT(0x9040, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0x903f));
        // 09 03E7
        gbc.setState(0x683d, 0x10b1, 0x370, 0x7ac1, 0x502c, 0x7c4b, 0x1, 0x0);
        gbc.writeMem(0x683d, { 0x9 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x10b1, gbc.sp());
        EXPECT(0x683e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
    }
