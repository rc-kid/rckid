    TEST(gbcemu, opcode_cb_a0) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB A0 0000
        gbc.setState(0x8d5b, 0xb02b, 0x4c20, 0xef15, 0x1cdc, 0x4aa5, 0x0, 0x0);
        gbc.writeMem(0x8d5b, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xb02b, gbc.sp());
        EXPECT(0x8d5d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d5b));
        EXPECT(0xa0, gbc.readMem(0x8d5c));
        // CB A0 0001
        gbc.setState(0x99ad, 0x3955, 0x6000, 0x79c1, 0x1e71, 0x8967, 0x0, 0x1);
        gbc.writeMem(0x99ad, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x3955, gbc.sp());
        EXPECT(0x99af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x99ad));
        EXPECT(0xa0, gbc.readMem(0x99ae));
        // CB A0 0002
        gbc.setState(0x814e, 0x9bc0, 0x7c00, 0xe745, 0xfec6, 0xdd2d, 0x1, 0x1);
        gbc.writeMem(0x814e, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x9bc0, gbc.sp());
        EXPECT(0x8150, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x814e));
        EXPECT(0xa0, gbc.readMem(0x814f));
        // CB A0 0003
        gbc.setState(0x2976, 0xc817, 0x9f20, 0x1178, 0x90fe, 0xcca5, 0x1, 0x1);
        gbc.writeMem(0x2976, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xc817, gbc.sp());
        EXPECT(0x2978, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A0 0004
        gbc.setState(0x1578, 0x8443, 0x5330, 0x6efd, 0x7942, 0x1fb2, 0x1, 0x1);
        gbc.writeMem(0x1578, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x8443, gbc.sp());
        EXPECT(0x157a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 0005
        gbc.setState(0xacae, 0x394, 0x660, 0x338, 0x115f, 0x7f8e, 0x0, 0x1);
        gbc.writeMem(0xacae, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x394, gbc.sp());
        EXPECT(0xacb0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xacae));
        EXPECT(0xa0, gbc.readMem(0xacaf));
        // CB A0 0006
        gbc.setState(0xe391, 0x9160, 0x2cb0, 0x9be, 0x7e81, 0x7840, 0x1, 0x0);
        gbc.writeMem(0xe391, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x9160, gbc.sp());
        EXPECT(0xe393, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe391));
        EXPECT(0xa0, gbc.readMem(0xe392));
        // CB A0 0007
        gbc.setState(0x680c, 0xe023, 0x1710, 0x1ba7, 0x106a, 0x2ec1, 0x0, 0x1);
        gbc.writeMem(0x680c, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xe023, gbc.sp());
        EXPECT(0x680e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 0008
        gbc.setState(0x80fa, 0xbfa5, 0xe9b0, 0x95d5, 0xddf5, 0x2e0a, 0x0, 0x0);
        gbc.writeMem(0x80fa, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xbfa5, gbc.sp());
        EXPECT(0x80fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x80fa));
        EXPECT(0xa0, gbc.readMem(0x80fb));
        // CB A0 0009
        gbc.setState(0x2294, 0xdae8, 0xb360, 0x34ae, 0x6525, 0xe56e, 0x1, 0x1);
        gbc.writeMem(0x2294, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xdae8, gbc.sp());
        EXPECT(0x2296, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A0 000A
        gbc.setState(0xdcff, 0x7a8b, 0x5e80, 0x97fc, 0xf56, 0xd13b, 0x1, 0x0);
        gbc.writeMem(0xdcff, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x7a8b, gbc.sp());
        EXPECT(0xdd01, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdcff));
        EXPECT(0xa0, gbc.readMem(0xdd00));
        // CB A0 000B
        gbc.setState(0xc77d, 0x959b, 0x3f80, 0x6e20, 0xee49, 0xf985, 0x0, 0x0);
        gbc.writeMem(0xc77d, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x959b, gbc.sp());
        EXPECT(0xc77f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc77d));
        EXPECT(0xa0, gbc.readMem(0xc77e));
        // CB A0 000D
        gbc.setState(0x32f5, 0x698c, 0x9650, 0xa1b3, 0xbc2f, 0x296c, 0x0, 0x1);
        gbc.writeMem(0x32f5, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x698c, gbc.sp());
        EXPECT(0x32f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 000E
        gbc.setState(0x5806, 0x8ed5, 0x3fc0, 0xdc63, 0x63e, 0x5017, 0x1, 0x0);
        gbc.writeMem(0x5806, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x8ed5, gbc.sp());
        EXPECT(0x5808, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A0 000F
        gbc.setState(0x1fc5, 0xb63f, 0xb910, 0xfc83, 0x9393, 0xb0a4, 0x1, 0x1);
        gbc.writeMem(0x1fc5, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xb63f, gbc.sp());
        EXPECT(0x1fc7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 0010
        gbc.setState(0x78d8, 0x2152, 0x18a0, 0x77fe, 0x66d2, 0x9181, 0x0, 0x0);
        gbc.writeMem(0x78d8, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x2152, gbc.sp());
        EXPECT(0x78da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A0 0011
        gbc.setState(0x3c36, 0x8eef, 0x99a0, 0x28df, 0x4cf8, 0x43d7, 0x0, 0x0);
        gbc.writeMem(0x3c36, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x8eef, gbc.sp());
        EXPECT(0x3c38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A0 0012
        gbc.setState(0xbf46, 0xc61f, 0x2c40, 0x77b, 0xa792, 0x374c, 0x0, 0x0);
        gbc.writeMem(0xbf46, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xc61f, gbc.sp());
        EXPECT(0xbf48, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf46));
        EXPECT(0xa0, gbc.readMem(0xbf47));
        // CB A0 0013
        gbc.setState(0x73da, 0x3b0, 0x4cf0, 0xada0, 0xb8d2, 0x24ea, 0x0, 0x1);
        gbc.writeMem(0x73da, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x3b0, gbc.sp());
        EXPECT(0x73dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 0015
        gbc.setState(0x881d, 0xef5a, 0x4a70, 0xfb94, 0x5953, 0xd0e8, 0x1, 0x1);
        gbc.writeMem(0x881d, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xef5a, gbc.sp());
        EXPECT(0x881f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x881d));
        EXPECT(0xa0, gbc.readMem(0x881e));
        // CB A0 0016
        gbc.setState(0x4100, 0x75ae, 0x8a40, 0x56f8, 0x717e, 0x5cba, 0x0, 0x0);
        gbc.writeMem(0x4100, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x75ae, gbc.sp());
        EXPECT(0x4102, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A0 0017
        gbc.setState(0x3632, 0x2553, 0x23d0, 0x597e, 0xc89c, 0x7fb1, 0x1, 0x1);
        gbc.writeMem(0x3632, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x2553, gbc.sp());
        EXPECT(0x3634, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 0019
        gbc.setState(0x9ce, 0x8350, 0x6020, 0xb99, 0xf3d3, 0xea04, 0x0, 0x0);
        gbc.writeMem(0x9ce, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x8350, gbc.sp());
        EXPECT(0x9d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A0 001A
        gbc.setState(0x1730, 0x4866, 0x5510, 0xccc9, 0xa7cb, 0xa243, 0x1, 0x0);
        gbc.writeMem(0x1730, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x4866, gbc.sp());
        EXPECT(0x1732, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 001B
        gbc.setState(0x9c3a, 0xed53, 0x8920, 0x89e0, 0x820d, 0xc483, 0x0, 0x1);
        gbc.writeMem(0x9c3a, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xed53, gbc.sp());
        EXPECT(0x9c3c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c3a));
        EXPECT(0xa0, gbc.readMem(0x9c3b));
        // CB A0 001C
        gbc.setState(0xbdac, 0x900b, 0x2df0, 0x30ad, 0x46b4, 0x129f, 0x0, 0x1);
        gbc.writeMem(0xbdac, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x900b, gbc.sp());
        EXPECT(0xbdae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbdac));
        EXPECT(0xa0, gbc.readMem(0xbdad));
        // CB A0 001D
        gbc.setState(0xadb3, 0x2a96, 0x4a70, 0x1269, 0xf6b8, 0xe8bf, 0x1, 0x0);
        gbc.writeMem(0xadb3, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x2a96, gbc.sp());
        EXPECT(0xadb5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xadb3));
        EXPECT(0xa0, gbc.readMem(0xadb4));
        // CB A0 001E
        gbc.setState(0xcdfd, 0x9987, 0x3a90, 0x2f73, 0x246, 0x59db, 0x1, 0x0);
        gbc.writeMem(0xcdfd, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x9987, gbc.sp());
        EXPECT(0xcdff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcdfd));
        EXPECT(0xa0, gbc.readMem(0xcdfe));
        // CB A0 001F
        gbc.setState(0x4b0d, 0xca2d, 0x4df0, 0x3a1f, 0xd03b, 0xbfe5, 0x1, 0x0);
        gbc.writeMem(0x4b0d, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xca2d, gbc.sp());
        EXPECT(0x4b0f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 0020
        gbc.setState(0x1eef, 0xba8c, 0xc6a0, 0xeaff, 0x5747, 0x9e9e, 0x1, 0x0);
        gbc.writeMem(0x1eef, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xba8c, gbc.sp());
        EXPECT(0x1ef1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A0 0021
        gbc.setState(0x1028, 0xf9dc, 0x6360, 0x7d07, 0x1bf7, 0x6490, 0x1, 0x0);
        gbc.writeMem(0x1028, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xf9dc, gbc.sp());
        EXPECT(0x102a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A0 0022
        gbc.setState(0xd218, 0x6fc6, 0x7760, 0xe16b, 0x7868, 0x9a8, 0x0, 0x0);
        gbc.writeMem(0xd218, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x6fc6, gbc.sp());
        EXPECT(0xd21a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd218));
        EXPECT(0xa0, gbc.readMem(0xd219));
        // CB A0 0023
        gbc.setState(0x48de, 0xc6f2, 0x4110, 0x7eb5, 0x251e, 0x20df, 0x1, 0x1);
        gbc.writeMem(0x48de, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xc6f2, gbc.sp());
        EXPECT(0x48e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 0024
        gbc.setState(0xe8a2, 0xcb3a, 0xe580, 0x5a94, 0x4b06, 0xe992, 0x1, 0x0);
        gbc.writeMem(0xe8a2, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xcb3a, gbc.sp());
        EXPECT(0xe8a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe8a2));
        EXPECT(0xa0, gbc.readMem(0xe8a3));
        // CB A0 0025
        gbc.setState(0x12b3, 0x7145, 0xfe0, 0x3052, 0x90f5, 0x664, 0x0, 0x1);
        gbc.writeMem(0x12b3, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x7145, gbc.sp());
        EXPECT(0x12b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A0 0026
        gbc.setState(0x2aa3, 0xc6fd, 0x25a0, 0xb7b6, 0x2cb5, 0xc9bb, 0x0, 0x0);
        gbc.writeMem(0x2aa3, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xc6fd, gbc.sp());
        EXPECT(0x2aa5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A0 0027
        gbc.setState(0xbff2, 0xc5d2, 0xb5c0, 0x75f9, 0xa511, 0x5ba9, 0x0, 0x0);
        gbc.writeMem(0xbff2, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xc5d2, gbc.sp());
        EXPECT(0xbff4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbff2));
        EXPECT(0xa0, gbc.readMem(0xbff3));
        // CB A0 0028
        gbc.setState(0x46a, 0xb8c4, 0x5a70, 0x8696, 0xbc, 0xd7b2, 0x0, 0x0);
        gbc.writeMem(0x46a, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xb8c4, gbc.sp());
        EXPECT(0x46c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 0029
        gbc.setState(0xa694, 0x1eb, 0xf610, 0x6f49, 0x2550, 0xdd98, 0x0, 0x1);
        gbc.writeMem(0xa694, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x1eb, gbc.sp());
        EXPECT(0xa696, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa694));
        EXPECT(0xa0, gbc.readMem(0xa695));
        // CB A0 002A
        gbc.setState(0xd8d9, 0x7d10, 0xf560, 0x2c4a, 0x551d, 0x641b, 0x0, 0x0);
        gbc.writeMem(0xd8d9, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x7d10, gbc.sp());
        EXPECT(0xd8db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd8d9));
        EXPECT(0xa0, gbc.readMem(0xd8da));
        // CB A0 002B
        gbc.setState(0xd036, 0xc6d, 0x7500, 0x4268, 0xbc32, 0x652e, 0x0, 0x1);
        gbc.writeMem(0xd036, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xc6d, gbc.sp());
        EXPECT(0xd038, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd036));
        EXPECT(0xa0, gbc.readMem(0xd037));
        // CB A0 002C
        gbc.setState(0x484, 0xae77, 0xceb0, 0x80d1, 0x634e, 0x2311, 0x1, 0x0);
        gbc.writeMem(0x484, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xae77, gbc.sp());
        EXPECT(0x486, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 002E
        gbc.setState(0x4cec, 0x63ea, 0xd070, 0x5316, 0xa2c6, 0x61b4, 0x1, 0x1);
        gbc.writeMem(0x4cec, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x63ea, gbc.sp());
        EXPECT(0x4cee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 002F
        gbc.setState(0x7ff8, 0x876b, 0xa250, 0x23ef, 0x25a9, 0x1f8c, 0x1, 0x1);
        gbc.writeMem(0x7ff8, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x876b, gbc.sp());
        EXPECT(0x7ffa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 0030
        gbc.setState(0x46cc, 0x69f, 0x45b0, 0xfbac, 0x3daa, 0xfbc5, 0x1, 0x1);
        gbc.writeMem(0x46cc, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x69f, gbc.sp());
        EXPECT(0x46ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 0031
        gbc.setState(0x9622, 0x7a43, 0x4900, 0xddb6, 0xde04, 0x3ddd, 0x1, 0x1);
        gbc.writeMem(0x9622, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x7a43, gbc.sp());
        EXPECT(0x9624, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9622));
        EXPECT(0xa0, gbc.readMem(0x9623));
        // CB A0 0032
        gbc.setState(0x44eb, 0x94da, 0x9d20, 0xb69a, 0x94ef, 0x3d42, 0x1, 0x0);
        gbc.writeMem(0x44eb, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x94da, gbc.sp());
        EXPECT(0x44ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A0 0033
        gbc.setState(0x6f79, 0x4d66, 0x2e0, 0x4cd5, 0xa548, 0x1a4b, 0x0, 0x0);
        gbc.writeMem(0x6f79, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x4d66, gbc.sp());
        EXPECT(0x6f7b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A0 0034
        gbc.setState(0x9544, 0x31db, 0x7830, 0xcb8e, 0xc3f, 0xed8f, 0x1, 0x0);
        gbc.writeMem(0x9544, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x31db, gbc.sp());
        EXPECT(0x9546, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9544));
        EXPECT(0xa0, gbc.readMem(0x9545));
        // CB A0 0035
        gbc.setState(0xb2b5, 0x46f2, 0x3510, 0xaba4, 0x7337, 0xcee1, 0x1, 0x0);
        gbc.writeMem(0xb2b5, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x46f2, gbc.sp());
        EXPECT(0xb2b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb2b5));
        EXPECT(0xa0, gbc.readMem(0xb2b6));
        // CB A0 0036
        gbc.setState(0x9102, 0xf7f8, 0xfd30, 0xd909, 0xad20, 0x6d20, 0x1, 0x0);
        gbc.writeMem(0x9102, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xf7f8, gbc.sp());
        EXPECT(0x9104, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9102));
        EXPECT(0xa0, gbc.readMem(0x9103));
        // CB A0 0037
        gbc.setState(0xe116, 0xb023, 0x3270, 0xf145, 0x8924, 0xd34d, 0x0, 0x0);
        gbc.writeMem(0xe116, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xb023, gbc.sp());
        EXPECT(0xe118, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe116));
        EXPECT(0xa0, gbc.readMem(0xe117));
        // CB A0 0038
        gbc.setState(0x9324, 0x7291, 0x170, 0xad0d, 0x9e53, 0xd2a5, 0x0, 0x0);
        gbc.writeMem(0x9324, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x7291, gbc.sp());
        EXPECT(0x9326, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9324));
        EXPECT(0xa0, gbc.readMem(0x9325));
        // CB A0 0039
        gbc.setState(0x3359, 0x9c75, 0x62d0, 0x3fa3, 0x86d0, 0xe820, 0x0, 0x1);
        gbc.writeMem(0x3359, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x9c75, gbc.sp());
        EXPECT(0x335b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 003A
        gbc.setState(0x6ed3, 0x5994, 0x66f0, 0x3b9a, 0xb71f, 0xfaf7, 0x0, 0x1);
        gbc.writeMem(0x6ed3, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x5994, gbc.sp());
        EXPECT(0x6ed5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 003B
        gbc.setState(0x2869, 0x4ba6, 0xe1b0, 0xb80f, 0x13db, 0x4314, 0x0, 0x1);
        gbc.writeMem(0x2869, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x4ba6, gbc.sp());
        EXPECT(0x286b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 003D
        gbc.setState(0x5cd0, 0x70ae, 0x9e40, 0x4e76, 0x909f, 0xedc4, 0x1, 0x1);
        gbc.writeMem(0x5cd0, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x70ae, gbc.sp());
        EXPECT(0x5cd2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A0 003E
        gbc.setState(0x3c24, 0x89d2, 0x6e50, 0x7046, 0x8e66, 0xfa32, 0x0, 0x0);
        gbc.writeMem(0x3c24, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x89d2, gbc.sp());
        EXPECT(0x3c26, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 003F
        gbc.setState(0x3bc, 0x68da, 0xb210, 0xbb38, 0xc09b, 0x7d3e, 0x0, 0x1);
        gbc.writeMem(0x3bc, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x68da, gbc.sp());
        EXPECT(0x3be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 0041
        gbc.setState(0x3928, 0x448b, 0xfcc0, 0x951d, 0x48ea, 0xc4cd, 0x1, 0x1);
        gbc.writeMem(0x3928, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x448b, gbc.sp());
        EXPECT(0x392a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A0 0042
        gbc.setState(0xcad6, 0x95a9, 0x230, 0x75ad, 0x74d5, 0x8815, 0x1, 0x1);
        gbc.writeMem(0xcad6, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x95a9, gbc.sp());
        EXPECT(0xcad8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcad6));
        EXPECT(0xa0, gbc.readMem(0xcad7));
        // CB A0 0043
        gbc.setState(0xcdef, 0x5645, 0xfbc0, 0x3baa, 0xe36e, 0x9b4e, 0x1, 0x1);
        gbc.writeMem(0xcdef, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x5645, gbc.sp());
        EXPECT(0xcdf1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcdef));
        EXPECT(0xa0, gbc.readMem(0xcdf0));
        // CB A0 0044
        gbc.setState(0xb68c, 0x2eb4, 0xb5c0, 0xea3c, 0x77ee, 0xe1b5, 0x1, 0x1);
        gbc.writeMem(0xb68c, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x2eb4, gbc.sp());
        EXPECT(0xb68e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb68c));
        EXPECT(0xa0, gbc.readMem(0xb68d));
        // CB A0 0045
        gbc.setState(0xc6e6, 0x4e53, 0x1740, 0x8992, 0x2791, 0x9671, 0x1, 0x0);
        gbc.writeMem(0xc6e6, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x4e53, gbc.sp());
        EXPECT(0xc6e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc6e6));
        EXPECT(0xa0, gbc.readMem(0xc6e7));
        // CB A0 0046
        gbc.setState(0xbd18, 0x54df, 0x5a60, 0x920b, 0x3461, 0x95ab, 0x1, 0x1);
        gbc.writeMem(0xbd18, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x54df, gbc.sp());
        EXPECT(0xbd1a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd18));
        EXPECT(0xa0, gbc.readMem(0xbd19));
        // CB A0 0047
        gbc.setState(0xdf08, 0x5ae1, 0x54b0, 0xeef7, 0xaf68, 0x96f2, 0x1, 0x0);
        gbc.writeMem(0xdf08, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x5ae1, gbc.sp());
        EXPECT(0xdf0a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf08));
        EXPECT(0xa0, gbc.readMem(0xdf09));
        // CB A0 0048
        gbc.setState(0x4bcc, 0x1827, 0xc9d0, 0xa1fd, 0x6a40, 0xff86, 0x0, 0x1);
        gbc.writeMem(0x4bcc, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x1827, gbc.sp());
        EXPECT(0x4bce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 0049
        gbc.setState(0xe1df, 0x28e5, 0x2110, 0xf524, 0x8570, 0x6093, 0x0, 0x1);
        gbc.writeMem(0xe1df, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x28e5, gbc.sp());
        EXPECT(0xe1e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe1df));
        EXPECT(0xa0, gbc.readMem(0xe1e0));
        // CB A0 004A
        gbc.setState(0x8829, 0x585a, 0x4ab0, 0xaa61, 0x6928, 0x4dee, 0x0, 0x1);
        gbc.writeMem(0x8829, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x585a, gbc.sp());
        EXPECT(0x882b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8829));
        EXPECT(0xa0, gbc.readMem(0x882a));
        // CB A0 004B
        gbc.setState(0xb6d0, 0x19, 0x7b10, 0xc031, 0x74d4, 0xaa5e, 0x0, 0x1);
        gbc.writeMem(0xb6d0, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x19, gbc.sp());
        EXPECT(0xb6d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb6d0));
        EXPECT(0xa0, gbc.readMem(0xb6d1));
        // CB A0 004C
        gbc.setState(0x8437, 0x541d, 0x7700, 0x23b3, 0xb8e9, 0x3116, 0x0, 0x0);
        gbc.writeMem(0x8437, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x541d, gbc.sp());
        EXPECT(0x8439, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8437));
        EXPECT(0xa0, gbc.readMem(0x8438));
        // CB A0 004D
        gbc.setState(0x1c78, 0xcc76, 0xf50, 0xfe7, 0x69eb, 0xa594, 0x0, 0x1);
        gbc.writeMem(0x1c78, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xcc76, gbc.sp());
        EXPECT(0x1c7a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 004E
        gbc.setState(0xba88, 0xb9e0, 0xf4a0, 0xb799, 0x7b6f, 0x5339, 0x0, 0x1);
        gbc.writeMem(0xba88, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xb9e0, gbc.sp());
        EXPECT(0xba8a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba88));
        EXPECT(0xa0, gbc.readMem(0xba89));
        // CB A0 004F
        gbc.setState(0xea40, 0xe9a6, 0x75d0, 0x1099, 0x5ad4, 0x9ff6, 0x1, 0x1);
        gbc.writeMem(0xea40, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xe9a6, gbc.sp());
        EXPECT(0xea42, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea40));
        EXPECT(0xa0, gbc.readMem(0xea41));
        // CB A0 0050
        gbc.setState(0x51a6, 0xee79, 0x8ba0, 0x846f, 0xf367, 0x9750, 0x0, 0x1);
        gbc.writeMem(0x51a6, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xee79, gbc.sp());
        EXPECT(0x51a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A0 0052
        gbc.setState(0x3735, 0xbcd0, 0x4470, 0xb409, 0x3423, 0xe5eb, 0x1, 0x1);
        gbc.writeMem(0x3735, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xbcd0, gbc.sp());
        EXPECT(0x3737, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 0053
        gbc.setState(0x29f0, 0x9dbd, 0xef90, 0x6f8c, 0xe059, 0x9235, 0x0, 0x1);
        gbc.writeMem(0x29f0, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x9dbd, gbc.sp());
        EXPECT(0x29f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 0054
        gbc.setState(0xb7a4, 0x654a, 0xc3f0, 0xd4d3, 0x6f25, 0x5b1f, 0x1, 0x1);
        gbc.writeMem(0xb7a4, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x654a, gbc.sp());
        EXPECT(0xb7a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb7a4));
        EXPECT(0xa0, gbc.readMem(0xb7a5));
        // CB A0 0055
        gbc.setState(0x75c0, 0xecb9, 0x29a0, 0xbdc1, 0x4134, 0xf9f9, 0x0, 0x1);
        gbc.writeMem(0x75c0, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xecb9, gbc.sp());
        EXPECT(0x75c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A0 0056
        gbc.setState(0xd313, 0xa204, 0x15e0, 0x606, 0x3827, 0x8bbb, 0x1, 0x1);
        gbc.writeMem(0xd313, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xa204, gbc.sp());
        EXPECT(0xd315, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd313));
        EXPECT(0xa0, gbc.readMem(0xd314));
        // CB A0 0057
        gbc.setState(0xed55, 0x7e77, 0xe140, 0xe06b, 0x7abe, 0xa3f2, 0x1, 0x1);
        gbc.writeMem(0xed55, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x7e77, gbc.sp());
        EXPECT(0xed57, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed55));
        EXPECT(0xa0, gbc.readMem(0xed56));
        // CB A0 0058
        gbc.setState(0x604b, 0x2f2a, 0xfe90, 0x42, 0x43c0, 0x2557, 0x0, 0x0);
        gbc.writeMem(0x604b, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x2f2a, gbc.sp());
        EXPECT(0x604d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 0059
        gbc.setState(0x1fea, 0x50dc, 0x9000, 0xae63, 0x6cb7, 0x728b, 0x1, 0x1);
        gbc.writeMem(0x1fea, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x50dc, gbc.sp());
        EXPECT(0x1fec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A0 005A
        gbc.setState(0xa24f, 0xdf8b, 0x54f0, 0x7da2, 0x3879, 0x469f, 0x1, 0x0);
        gbc.writeMem(0xa24f, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xdf8b, gbc.sp());
        EXPECT(0xa251, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa24f));
        EXPECT(0xa0, gbc.readMem(0xa250));
        // CB A0 005B
        gbc.setState(0x96a8, 0x5ec, 0xe290, 0xa29b, 0xdc75, 0x308, 0x0, 0x1);
        gbc.writeMem(0x96a8, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x5ec, gbc.sp());
        EXPECT(0x96aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x96a8));
        EXPECT(0xa0, gbc.readMem(0x96a9));
        // CB A0 005C
        gbc.setState(0xb21c, 0x54d7, 0x8650, 0x6f41, 0xc13d, 0x7ed6, 0x0, 0x0);
        gbc.writeMem(0xb21c, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x54d7, gbc.sp());
        EXPECT(0xb21e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb21c));
        EXPECT(0xa0, gbc.readMem(0xb21d));
        // CB A0 005D
        gbc.setState(0x3de2, 0x29a8, 0xd750, 0x9bac, 0x127, 0x9b31, 0x0, 0x0);
        gbc.writeMem(0x3de2, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x29a8, gbc.sp());
        EXPECT(0x3de4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 005E
        gbc.setState(0x896, 0x8eff, 0x7a40, 0x91ea, 0xc426, 0xb58e, 0x1, 0x1);
        gbc.writeMem(0x896, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x8eff, gbc.sp());
        EXPECT(0x898, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A0 005F
        gbc.setState(0x1027, 0x3da5, 0x55f0, 0xea53, 0xca38, 0xe398, 0x1, 0x1);
        gbc.writeMem(0x1027, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x3da5, gbc.sp());
        EXPECT(0x1029, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 0060
        gbc.setState(0xdbd, 0xdee0, 0x19f0, 0x25d0, 0x1cf7, 0x6578, 0x0, 0x1);
        gbc.writeMem(0xdbd, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xdee0, gbc.sp());
        EXPECT(0xdbf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 0062
        gbc.setState(0xe08f, 0x6b6e, 0xdd60, 0x126c, 0x10d9, 0x6fef, 0x1, 0x0);
        gbc.writeMem(0xe08f, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x6b6e, gbc.sp());
        EXPECT(0xe091, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe08f));
        EXPECT(0xa0, gbc.readMem(0xe090));
        // CB A0 0063
        gbc.setState(0x333e, 0x5f93, 0x89f0, 0xbc34, 0x27be, 0xb6c8, 0x0, 0x1);
        gbc.writeMem(0x333e, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x5f93, gbc.sp());
        EXPECT(0x3340, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 0064
        gbc.setState(0xd1f7, 0x9444, 0x2b70, 0x7767, 0x89ac, 0x73c3, 0x0, 0x1);
        gbc.writeMem(0xd1f7, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x9444, gbc.sp());
        EXPECT(0xd1f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd1f7));
        EXPECT(0xa0, gbc.readMem(0xd1f8));
        // CB A0 0065
        gbc.setState(0x9253, 0xe656, 0x95f0, 0xfaa0, 0x435, 0xb543, 0x1, 0x1);
        gbc.writeMem(0x9253, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xe656, gbc.sp());
        EXPECT(0x9255, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9253));
        EXPECT(0xa0, gbc.readMem(0x9254));
        // CB A0 0066
        gbc.setState(0x300f, 0xf002, 0xad30, 0x9aca, 0xdfb8, 0x3ca5, 0x1, 0x1);
        gbc.writeMem(0x300f, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xf002, gbc.sp());
        EXPECT(0x3011, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 0067
        gbc.setState(0xa1b1, 0xbfc6, 0xab60, 0x5353, 0x683f, 0x3f32, 0x0, 0x1);
        gbc.writeMem(0xa1b1, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xbfc6, gbc.sp());
        EXPECT(0xa1b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa1b1));
        EXPECT(0xa0, gbc.readMem(0xa1b2));
        // CB A0 0068
        gbc.setState(0xd896, 0x4f95, 0x1cf0, 0x2528, 0xe660, 0xf703, 0x1, 0x1);
        gbc.writeMem(0xd896, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x4f95, gbc.sp());
        EXPECT(0xd898, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd896));
        EXPECT(0xa0, gbc.readMem(0xd897));
        // CB A0 0069
        gbc.setState(0xd7f7, 0xc532, 0xd440, 0xe85d, 0x3bd4, 0xbd14, 0x1, 0x0);
        gbc.writeMem(0xd7f7, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xc532, gbc.sp());
        EXPECT(0xd7f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd7f7));
        EXPECT(0xa0, gbc.readMem(0xd7f8));
        // CB A0 006A
        gbc.setState(0x35cb, 0x51f7, 0xdef0, 0xa462, 0x3880, 0x1829, 0x1, 0x0);
        gbc.writeMem(0x35cb, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x51f7, gbc.sp());
        EXPECT(0x35cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 006B
        gbc.setState(0x671d, 0x5776, 0xcac0, 0xe797, 0x7163, 0x70a1, 0x1, 0x0);
        gbc.writeMem(0x671d, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x5776, gbc.sp());
        EXPECT(0x671f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A0 006C
        gbc.setState(0x1eff, 0xa09a, 0xffd0, 0xed3b, 0x21ec, 0xc985, 0x0, 0x0);
        gbc.writeMem(0x1eff, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xa09a, gbc.sp());
        EXPECT(0x1f01, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 006D
        gbc.setState(0x7655, 0x9944, 0xf4c0, 0x7340, 0x6921, 0xc918, 0x0, 0x1);
        gbc.writeMem(0x7655, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x9944, gbc.sp());
        EXPECT(0x7657, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A0 006E
        gbc.setState(0x14fc, 0x7224, 0x4f00, 0x7bf0, 0x9c9f, 0xa468, 0x0, 0x0);
        gbc.writeMem(0x14fc, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x7224, gbc.sp());
        EXPECT(0x14fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A0 006F
        gbc.setState(0xa0ae, 0x5390, 0x2ef0, 0x39ef, 0x279b, 0x555b, 0x0, 0x0);
        gbc.writeMem(0xa0ae, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x5390, gbc.sp());
        EXPECT(0xa0b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa0ae));
        EXPECT(0xa0, gbc.readMem(0xa0af));
        // CB A0 0070
        gbc.setState(0x6c7, 0x80f0, 0x6cc0, 0x253d, 0x4895, 0x1046, 0x0, 0x1);
        gbc.writeMem(0x6c7, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x80f0, gbc.sp());
        EXPECT(0x6c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A0 0071
        gbc.setState(0xc0c8, 0xd26f, 0x8800, 0xb196, 0x1f14, 0x39ef, 0x1, 0x0);
        gbc.writeMem(0xc0c8, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xd26f, gbc.sp());
        EXPECT(0xc0ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc0c8));
        EXPECT(0xa0, gbc.readMem(0xc0c9));
        // CB A0 0072
        gbc.setState(0x2be1, 0xfa22, 0xcd50, 0xd0e, 0x1d8, 0x540d, 0x1, 0x0);
        gbc.writeMem(0x2be1, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xfa22, gbc.sp());
        EXPECT(0x2be3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 0073
        gbc.setState(0x7f11, 0x8f9b, 0xf780, 0x1378, 0x6b69, 0xb442, 0x1, 0x1);
        gbc.writeMem(0x7f11, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x8f9b, gbc.sp());
        EXPECT(0x7f13, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A0 0074
        gbc.setState(0xd41a, 0x5f45, 0x8ee0, 0x11db, 0x85bc, 0x61ee, 0x1, 0x0);
        gbc.writeMem(0xd41a, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x5f45, gbc.sp());
        EXPECT(0xd41c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd41a));
        EXPECT(0xa0, gbc.readMem(0xd41b));
        // CB A0 0075
        gbc.setState(0x8522, 0xb839, 0x1e40, 0xccc7, 0x6a55, 0x46b8, 0x0, 0x1);
        gbc.writeMem(0x8522, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xb839, gbc.sp());
        EXPECT(0x8524, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8522));
        EXPECT(0xa0, gbc.readMem(0x8523));
        // CB A0 0076
        gbc.setState(0x8d51, 0x41cf, 0x4780, 0xbd4e, 0x5997, 0x8b3c, 0x1, 0x1);
        gbc.writeMem(0x8d51, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x41cf, gbc.sp());
        EXPECT(0x8d53, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d51));
        EXPECT(0xa0, gbc.readMem(0x8d52));
        // CB A0 0077
        gbc.setState(0x2b1e, 0xc7a6, 0x4260, 0x3734, 0x39d2, 0x3290, 0x1, 0x1);
        gbc.writeMem(0x2b1e, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xc7a6, gbc.sp());
        EXPECT(0x2b20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A0 0078
        gbc.setState(0x602, 0x1420, 0x6ac0, 0x92f, 0x65fc, 0x66b2, 0x1, 0x1);
        gbc.writeMem(0x602, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x1420, gbc.sp());
        EXPECT(0x604, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A0 0079
        gbc.setState(0xb3ff, 0xf549, 0x5830, 0x9c95, 0x58b5, 0x84e, 0x1, 0x0);
        gbc.writeMem(0xb3ff, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xf549, gbc.sp());
        EXPECT(0xb401, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb3ff));
        EXPECT(0xa0, gbc.readMem(0xb400));
        // CB A0 007A
        gbc.setState(0x7dc4, 0x4895, 0xf5f0, 0x4d23, 0xf2e5, 0x7590, 0x0, 0x1);
        gbc.writeMem(0x7dc4, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x4895, gbc.sp());
        EXPECT(0x7dc6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 007B
        gbc.setState(0x46c, 0x596, 0xd1c0, 0xb26a, 0xa28d, 0xec87, 0x0, 0x1);
        gbc.writeMem(0x46c, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x596, gbc.sp());
        EXPECT(0x46e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A0 007C
        gbc.setState(0x35c4, 0xdf20, 0x6ba0, 0xc73b, 0xd378, 0x18e2, 0x1, 0x1);
        gbc.writeMem(0x35c4, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xdf20, gbc.sp());
        EXPECT(0x35c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A0 007D
        gbc.setState(0x36ed, 0xd26e, 0x4c50, 0xdbc8, 0x84fa, 0x5774, 0x1, 0x1);
        gbc.writeMem(0x36ed, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xd26e, gbc.sp());
        EXPECT(0x36ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 007E
        gbc.setState(0xeb0c, 0x8894, 0x6ab0, 0x91d0, 0xafe2, 0x6e4a, 0x1, 0x1);
        gbc.writeMem(0xeb0c, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x8894, gbc.sp());
        EXPECT(0xeb0e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb0c));
        EXPECT(0xa0, gbc.readMem(0xeb0d));
        // CB A0 007F
        gbc.setState(0x25db, 0x6304, 0x90d0, 0x8efd, 0xee4a, 0xc4fc, 0x0, 0x1);
        gbc.writeMem(0x25db, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x6304, gbc.sp());
        EXPECT(0x25dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 0080
        gbc.setState(0x1b0, 0xcdac, 0x8ae0, 0x3146, 0x8f20, 0x1835, 0x1, 0x0);
        gbc.writeMem(0x1b0, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xcdac, gbc.sp());
        EXPECT(0x1b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A0 0081
        gbc.setState(0x94ff, 0x8e11, 0x39b0, 0xf846, 0xa881, 0x6572, 0x1, 0x0);
        gbc.writeMem(0x94ff, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x8e11, gbc.sp());
        EXPECT(0x9501, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x94ff));
        EXPECT(0xa0, gbc.readMem(0x9500));
        // CB A0 0082
        gbc.setState(0xb2ce, 0xf659, 0x9830, 0x10fe, 0x8633, 0xbc6c, 0x1, 0x0);
        gbc.writeMem(0xb2ce, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xf659, gbc.sp());
        EXPECT(0xb2d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb2ce));
        EXPECT(0xa0, gbc.readMem(0xb2cf));
        // CB A0 0083
        gbc.setState(0x40, 0x397d, 0xd330, 0x93b6, 0x537c, 0x12b0, 0x1, 0x0);
        gbc.writeMem(0x40, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x397d, gbc.sp());
        EXPECT(0x42, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 0084
        gbc.setState(0x49c, 0xb1c6, 0x5d90, 0x7303, 0xa7d, 0x80e6, 0x0, 0x0);
        gbc.writeMem(0x49c, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xb1c6, gbc.sp());
        EXPECT(0x49e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 0085
        gbc.setState(0x4a88, 0xcd82, 0x2520, 0xe537, 0x5a82, 0x7553, 0x0, 0x1);
        gbc.writeMem(0x4a88, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xcd82, gbc.sp());
        EXPECT(0x4a8a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A0 0086
        gbc.setState(0x8f9b, 0x3cfd, 0xaa40, 0x1e62, 0x83ad, 0xf354, 0x1, 0x1);
        gbc.writeMem(0x8f9b, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x3cfd, gbc.sp());
        EXPECT(0x8f9d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f9b));
        EXPECT(0xa0, gbc.readMem(0x8f9c));
        // CB A0 0087
        gbc.setState(0x94de, 0x3d9, 0x42d0, 0xb5b3, 0xd635, 0x45e8, 0x1, 0x0);
        gbc.writeMem(0x94de, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x3d9, gbc.sp());
        EXPECT(0x94e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x94de));
        EXPECT(0xa0, gbc.readMem(0x94df));
        // CB A0 0088
        gbc.setState(0xcb80, 0x1ed5, 0xc0f0, 0xb06, 0xacb7, 0x8b56, 0x1, 0x1);
        gbc.writeMem(0xcb80, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x1ed5, gbc.sp());
        EXPECT(0xcb82, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb80));
        EXPECT(0xa0, gbc.readMem(0xcb81));
        // CB A0 0089
        gbc.setState(0x64c9, 0x3ddf, 0xd060, 0x3f6e, 0xd052, 0xcfb5, 0x0, 0x1);
        gbc.writeMem(0x64c9, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x3ddf, gbc.sp());
        EXPECT(0x64cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A0 008A
        gbc.setState(0x2c62, 0xfda2, 0x6130, 0x5124, 0x89b, 0x654e, 0x0, 0x1);
        gbc.writeMem(0x2c62, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xfda2, gbc.sp());
        EXPECT(0x2c64, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 008B
        gbc.setState(0x85af, 0xea08, 0xdd50, 0x9c70, 0x18ba, 0xee4d, 0x1, 0x1);
        gbc.writeMem(0x85af, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xea08, gbc.sp());
        EXPECT(0x85b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x85af));
        EXPECT(0xa0, gbc.readMem(0x85b0));
        // CB A0 008C
        gbc.setState(0x8799, 0xb1b7, 0xe8d0, 0x5363, 0x81c3, 0xb850, 0x0, 0x0);
        gbc.writeMem(0x8799, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xb1b7, gbc.sp());
        EXPECT(0x879b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8799));
        EXPECT(0xa0, gbc.readMem(0x879a));
        // CB A0 008D
        gbc.setState(0x9225, 0x4ccb, 0x66b0, 0x732d, 0xcff2, 0xe676, 0x0, 0x0);
        gbc.writeMem(0x9225, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x4ccb, gbc.sp());
        EXPECT(0x9227, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9225));
        EXPECT(0xa0, gbc.readMem(0x9226));
        // CB A0 008E
        gbc.setState(0x1dae, 0x29b9, 0xd250, 0x5f42, 0xa026, 0x8383, 0x0, 0x0);
        gbc.writeMem(0x1dae, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x29b9, gbc.sp());
        EXPECT(0x1db0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 0090
        gbc.setState(0x286a, 0x3983, 0x3250, 0xd08b, 0x3739, 0xba75, 0x0, 0x0);
        gbc.writeMem(0x286a, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x3983, gbc.sp());
        EXPECT(0x286c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 0092
        gbc.setState(0x6161, 0x7af1, 0x4350, 0xd532, 0x602c, 0xdfaf, 0x0, 0x0);
        gbc.writeMem(0x6161, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x7af1, gbc.sp());
        EXPECT(0x6163, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 0093
        gbc.setState(0x9ccf, 0x75f, 0x5010, 0x30df, 0x9cf, 0xf896, 0x0, 0x0);
        gbc.writeMem(0x9ccf, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x75f, gbc.sp());
        EXPECT(0x9cd1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ccf));
        EXPECT(0xa0, gbc.readMem(0x9cd0));
        // CB A0 0094
        gbc.setState(0xe647, 0x8152, 0x21f0, 0x4167, 0x56fd, 0xe468, 0x1, 0x0);
        gbc.writeMem(0xe647, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x8152, gbc.sp());
        EXPECT(0xe649, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe647));
        EXPECT(0xa0, gbc.readMem(0xe648));
        // CB A0 0095
        gbc.setState(0x2f58, 0x535b, 0x5290, 0xd6d8, 0x6e81, 0x2004, 0x1, 0x0);
        gbc.writeMem(0x2f58, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x535b, gbc.sp());
        EXPECT(0x2f5a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 0096
        gbc.setState(0x67bf, 0x569c, 0xbd90, 0x2599, 0xb00a, 0xf9d5, 0x1, 0x0);
        gbc.writeMem(0x67bf, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x569c, gbc.sp());
        EXPECT(0x67c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 0097
        gbc.setState(0x87d1, 0x839d, 0x3d40, 0x559b, 0x1d2c, 0x54cd, 0x1, 0x0);
        gbc.writeMem(0x87d1, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x839d, gbc.sp());
        EXPECT(0x87d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x87d1));
        EXPECT(0xa0, gbc.readMem(0x87d2));
        // CB A0 0098
        gbc.setState(0xd10f, 0x3e42, 0x45c0, 0xc85b, 0x8c38, 0x6f35, 0x1, 0x0);
        gbc.writeMem(0xd10f, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x3e42, gbc.sp());
        EXPECT(0xd111, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd10f));
        EXPECT(0xa0, gbc.readMem(0xd110));
        // CB A0 0099
        gbc.setState(0x8daf, 0xa79a, 0xbb70, 0x88d5, 0x8b2f, 0x74c9, 0x1, 0x0);
        gbc.writeMem(0x8daf, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xa79a, gbc.sp());
        EXPECT(0x8db1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8daf));
        EXPECT(0xa0, gbc.readMem(0x8db0));
        // CB A0 009A
        gbc.setState(0xa4da, 0x69dc, 0x790, 0xe0b0, 0x4210, 0x8f46, 0x0, 0x1);
        gbc.writeMem(0xa4da, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x69dc, gbc.sp());
        EXPECT(0xa4dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa4da));
        EXPECT(0xa0, gbc.readMem(0xa4db));
        // CB A0 009B
        gbc.setState(0x5ddc, 0xb669, 0xd4b0, 0x3fd5, 0x561, 0x2a35, 0x1, 0x0);
        gbc.writeMem(0x5ddc, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xb669, gbc.sp());
        EXPECT(0x5dde, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 009C
        gbc.setState(0x8e57, 0xfa08, 0x3d00, 0xeac5, 0x5a28, 0x6e35, 0x1, 0x1);
        gbc.writeMem(0x8e57, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xfa08, gbc.sp());
        EXPECT(0x8e59, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e57));
        EXPECT(0xa0, gbc.readMem(0x8e58));
        // CB A0 009D
        gbc.setState(0xdb69, 0x2658, 0x2140, 0x81c2, 0x11b2, 0x751, 0x1, 0x0);
        gbc.writeMem(0xdb69, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x2658, gbc.sp());
        EXPECT(0xdb6b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb69));
        EXPECT(0xa0, gbc.readMem(0xdb6a));
        // CB A0 009E
        gbc.setState(0x37a3, 0x5157, 0x41e0, 0x82e4, 0x405, 0x1caa, 0x0, 0x0);
        gbc.writeMem(0x37a3, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x5157, gbc.sp());
        EXPECT(0x37a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A0 009F
        gbc.setState(0xc196, 0x4a9, 0xa8f0, 0x7740, 0xbaf4, 0xb80, 0x0, 0x1);
        gbc.writeMem(0xc196, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x4a9, gbc.sp());
        EXPECT(0xc198, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc196));
        EXPECT(0xa0, gbc.readMem(0xc197));
        // CB A0 00A0
        gbc.setState(0xad07, 0xc498, 0xa240, 0xe1eb, 0x768f, 0x6eb9, 0x1, 0x0);
        gbc.writeMem(0xad07, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xc498, gbc.sp());
        EXPECT(0xad09, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad07));
        EXPECT(0xa0, gbc.readMem(0xad08));
        // CB A0 00A1
        gbc.setState(0x8358, 0x254f, 0x7d60, 0x5cd1, 0xc727, 0x38c6, 0x1, 0x0);
        gbc.writeMem(0x8358, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x254f, gbc.sp());
        EXPECT(0x835a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8358));
        EXPECT(0xa0, gbc.readMem(0x8359));
        // CB A0 00A3
        gbc.setState(0xe24c, 0x8508, 0x4b70, 0x36a7, 0x5296, 0x6aa1, 0x1, 0x1);
        gbc.writeMem(0xe24c, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x8508, gbc.sp());
        EXPECT(0xe24e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe24c));
        EXPECT(0xa0, gbc.readMem(0xe24d));
        // CB A0 00A4
        gbc.setState(0xd9ae, 0x42b8, 0xbc60, 0xe445, 0x5efd, 0x8117, 0x1, 0x0);
        gbc.writeMem(0xd9ae, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x42b8, gbc.sp());
        EXPECT(0xd9b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd9ae));
        EXPECT(0xa0, gbc.readMem(0xd9af));
        // CB A0 00A5
        gbc.setState(0x686d, 0xcff8, 0xdf0, 0x9d1a, 0xcd2d, 0x1c62, 0x0, 0x0);
        gbc.writeMem(0x686d, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xcff8, gbc.sp());
        EXPECT(0x686f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 00A6
        gbc.setState(0xadda, 0x98a2, 0x2db0, 0x68da, 0xea8e, 0x1788, 0x0, 0x0);
        gbc.writeMem(0xadda, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x98a2, gbc.sp());
        EXPECT(0xaddc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xadda));
        EXPECT(0xa0, gbc.readMem(0xaddb));
        // CB A0 00A8
        gbc.setState(0x3d95, 0xa609, 0x67b0, 0xa26c, 0xb5ff, 0xe878, 0x1, 0x0);
        gbc.writeMem(0x3d95, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xa609, gbc.sp());
        EXPECT(0x3d97, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 00A9
        gbc.setState(0xcfb4, 0xbfd5, 0x2ca0, 0x235f, 0x2144, 0x9e5, 0x1, 0x1);
        gbc.writeMem(0xcfb4, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xbfd5, gbc.sp());
        EXPECT(0xcfb6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcfb4));
        EXPECT(0xa0, gbc.readMem(0xcfb5));
        // CB A0 00AA
        gbc.setState(0xa4af, 0x1900, 0x1150, 0xcb4d, 0x9cb0, 0x37ee, 0x0, 0x0);
        gbc.writeMem(0xa4af, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x1900, gbc.sp());
        EXPECT(0xa4b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa4af));
        EXPECT(0xa0, gbc.readMem(0xa4b0));
        // CB A0 00AB
        gbc.setState(0x485c, 0x1a83, 0x55a0, 0xce90, 0x8b68, 0xd41f, 0x1, 0x0);
        gbc.writeMem(0x485c, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x1a83, gbc.sp());
        EXPECT(0x485e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A0 00AC
        gbc.setState(0x8a69, 0xc07d, 0xff70, 0x213d, 0xc322, 0xd6fe, 0x0, 0x1);
        gbc.writeMem(0x8a69, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xc07d, gbc.sp());
        EXPECT(0x8a6b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a69));
        EXPECT(0xa0, gbc.readMem(0x8a6a));
        // CB A0 00AD
        gbc.setState(0xc018, 0xc386, 0x34d0, 0x2633, 0xfc0f, 0xc553, 0x1, 0x1);
        gbc.writeMem(0xc018, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xc386, gbc.sp());
        EXPECT(0xc01a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc018));
        EXPECT(0xa0, gbc.readMem(0xc019));
        // CB A0 00AE
        gbc.setState(0xd5c1, 0xac9b, 0xda60, 0x9598, 0x335, 0xca22, 0x1, 0x0);
        gbc.writeMem(0xd5c1, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xac9b, gbc.sp());
        EXPECT(0xd5c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd5c1));
        EXPECT(0xa0, gbc.readMem(0xd5c2));
        // CB A0 00AF
        gbc.setState(0xa429, 0x43df, 0x4b20, 0xb513, 0xfd5e, 0x1cf3, 0x1, 0x0);
        gbc.writeMem(0xa429, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x43df, gbc.sp());
        EXPECT(0xa42b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa429));
        EXPECT(0xa0, gbc.readMem(0xa42a));
        // CB A0 00B1
        gbc.setState(0xbbc2, 0x1b5b, 0x90, 0xe19f, 0x37fb, 0xaa51, 0x1, 0x0);
        gbc.writeMem(0xbbc2, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x1b5b, gbc.sp());
        EXPECT(0xbbc4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbbc2));
        EXPECT(0xa0, gbc.readMem(0xbbc3));
        // CB A0 00B2
        gbc.setState(0x79f7, 0xc519, 0x1ce0, 0x8ca6, 0xc642, 0x67d, 0x0, 0x0);
        gbc.writeMem(0x79f7, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xc519, gbc.sp());
        EXPECT(0x79f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A0 00B3
        gbc.setState(0xae02, 0x9f43, 0x7c10, 0x2384, 0x40c5, 0x4509, 0x1, 0x1);
        gbc.writeMem(0xae02, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x9f43, gbc.sp());
        EXPECT(0xae04, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae02));
        EXPECT(0xa0, gbc.readMem(0xae03));
        // CB A0 00B5
        gbc.setState(0x3432, 0x3620, 0xc2f0, 0xdcdb, 0x18a4, 0x4e08, 0x1, 0x1);
        gbc.writeMem(0x3432, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x3620, gbc.sp());
        EXPECT(0x3434, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 00B6
        gbc.setState(0xa545, 0x6b09, 0xe4e0, 0x5be, 0x1c0a, 0x68ab, 0x0, 0x1);
        gbc.writeMem(0xa545, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x6b09, gbc.sp());
        EXPECT(0xa547, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa545));
        EXPECT(0xa0, gbc.readMem(0xa546));
        // CB A0 00B7
        gbc.setState(0x7be, 0x549, 0x9f90, 0x55e2, 0xb9b, 0x8abc, 0x0, 0x1);
        gbc.writeMem(0x7be, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x549, gbc.sp());
        EXPECT(0x7c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 00B8
        gbc.setState(0x240a, 0x2c3a, 0xbde0, 0x829a, 0x4954, 0xba41, 0x1, 0x0);
        gbc.writeMem(0x240a, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x2c3a, gbc.sp());
        EXPECT(0x240c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A0 00B9
        gbc.setState(0xe1ee, 0x4679, 0xc630, 0x4f76, 0xa67c, 0x2fb4, 0x1, 0x0);
        gbc.writeMem(0xe1ee, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x4679, gbc.sp());
        EXPECT(0xe1f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe1ee));
        EXPECT(0xa0, gbc.readMem(0xe1ef));
        // CB A0 00BA
        gbc.setState(0x926b, 0x6a46, 0x9e10, 0x9f0c, 0x64ac, 0x33e0, 0x1, 0x1);
        gbc.writeMem(0x926b, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x6a46, gbc.sp());
        EXPECT(0x926d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x926b));
        EXPECT(0xa0, gbc.readMem(0x926c));
        // CB A0 00BB
        gbc.setState(0x66e3, 0xf646, 0x8eb0, 0x733, 0x3b, 0xa610, 0x0, 0x1);
        gbc.writeMem(0x66e3, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xf646, gbc.sp());
        EXPECT(0x66e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 00BC
        gbc.setState(0x59da, 0xc086, 0x4f10, 0x7879, 0xd3a3, 0xc777, 0x1, 0x0);
        gbc.writeMem(0x59da, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xc086, gbc.sp());
        EXPECT(0x59dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 00BD
        gbc.setState(0xb30, 0x523a, 0x3490, 0x92d8, 0x3f4f, 0xb3b9, 0x0, 0x0);
        gbc.writeMem(0xb30, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x523a, gbc.sp());
        EXPECT(0xb32, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 00BE
        gbc.setState(0xa57d, 0x3124, 0x52d0, 0x5e14, 0xd64c, 0xec6d, 0x0, 0x0);
        gbc.writeMem(0xa57d, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x3124, gbc.sp());
        EXPECT(0xa57f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa57d));
        EXPECT(0xa0, gbc.readMem(0xa57e));
        // CB A0 00BF
        gbc.setState(0xcf26, 0x8c1a, 0xeb70, 0xd770, 0xf9da, 0x230f, 0x0, 0x0);
        gbc.writeMem(0xcf26, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x8c1a, gbc.sp());
        EXPECT(0xcf28, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf26));
        EXPECT(0xa0, gbc.readMem(0xcf27));
        // CB A0 00C0
        gbc.setState(0x52e0, 0x74cc, 0x4790, 0x739e, 0x5623, 0xe3a5, 0x0, 0x1);
        gbc.writeMem(0x52e0, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x74cc, gbc.sp());
        EXPECT(0x52e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 00C1
        gbc.setState(0x61f7, 0xb9ff, 0x7030, 0x6eec, 0xacbb, 0x11a7, 0x1, 0x0);
        gbc.writeMem(0x61f7, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xb9ff, gbc.sp());
        EXPECT(0x61f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 00C2
        gbc.setState(0xd259, 0xd59d, 0xf2b0, 0x8374, 0xad86, 0xad1c, 0x0, 0x0);
        gbc.writeMem(0xd259, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xd59d, gbc.sp());
        EXPECT(0xd25b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd259));
        EXPECT(0xa0, gbc.readMem(0xd25a));
        // CB A0 00C3
        gbc.setState(0x34f8, 0xf496, 0xf1f0, 0xdc3d, 0x2d6a, 0xbe73, 0x0, 0x1);
        gbc.writeMem(0x34f8, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xf496, gbc.sp());
        EXPECT(0x34fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 00C4
        gbc.setState(0x4846, 0xe309, 0x2560, 0xf5ce, 0x285e, 0x74b1, 0x1, 0x1);
        gbc.writeMem(0x4846, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xe309, gbc.sp());
        EXPECT(0x4848, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A0 00C5
        gbc.setState(0x2c5d, 0x8c41, 0xf470, 0x4ca0, 0xaa5d, 0x42e5, 0x1, 0x1);
        gbc.writeMem(0x2c5d, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x8c41, gbc.sp());
        EXPECT(0x2c5f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 00C6
        gbc.setState(0x33b0, 0xc90d, 0xf140, 0xa37d, 0xc5a9, 0xd590, 0x1, 0x1);
        gbc.writeMem(0x33b0, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xc90d, gbc.sp());
        EXPECT(0x33b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A0 00C7
        gbc.setState(0x7a97, 0x8b00, 0x9ed0, 0xc05c, 0x9e3d, 0x1f0a, 0x1, 0x0);
        gbc.writeMem(0x7a97, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x8b00, gbc.sp());
        EXPECT(0x7a99, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 00C8
        gbc.setState(0xf29, 0x7206, 0x7a50, 0xc3ed, 0xffe9, 0x7a71, 0x0, 0x0);
        gbc.writeMem(0xf29, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x7206, gbc.sp());
        EXPECT(0xf2b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 00C9
        gbc.setState(0x548c, 0xc83d, 0xe640, 0x8b17, 0xc2a8, 0x82e2, 0x0, 0x1);
        gbc.writeMem(0x548c, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xc83d, gbc.sp());
        EXPECT(0x548e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A0 00CA
        gbc.setState(0x1129, 0xa675, 0x3940, 0x15ab, 0xb7c1, 0xe350, 0x1, 0x0);
        gbc.writeMem(0x1129, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xa675, gbc.sp());
        EXPECT(0x112b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A0 00CB
        gbc.setState(0x106e, 0x79a0, 0x5890, 0xec1d, 0xc5a1, 0x1e03, 0x1, 0x0);
        gbc.writeMem(0x106e, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x79a0, gbc.sp());
        EXPECT(0x1070, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 00CC
        gbc.setState(0x821c, 0x66c9, 0xdc90, 0x8158, 0x3f28, 0xe95e, 0x1, 0x0);
        gbc.writeMem(0x821c, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x66c9, gbc.sp());
        EXPECT(0x821e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x821c));
        EXPECT(0xa0, gbc.readMem(0x821d));
        // CB A0 00CD
        gbc.setState(0xbdac, 0x4198, 0x2a80, 0x8924, 0x6cfe, 0x2b01, 0x1, 0x1);
        gbc.writeMem(0xbdac, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x4198, gbc.sp());
        EXPECT(0xbdae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbdac));
        EXPECT(0xa0, gbc.readMem(0xbdad));
        // CB A0 00CE
        gbc.setState(0x4056, 0xb4c0, 0x9e90, 0x4585, 0xb831, 0x31f3, 0x0, 0x1);
        gbc.writeMem(0x4056, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xb4c0, gbc.sp());
        EXPECT(0x4058, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 00CF
        gbc.setState(0x202d, 0xf79b, 0xcf60, 0xc3b7, 0xe84e, 0x8c1a, 0x1, 0x0);
        gbc.writeMem(0x202d, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xf79b, gbc.sp());
        EXPECT(0x202f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A0 00D0
        gbc.setState(0x49ba, 0xcc74, 0x67e0, 0xa30c, 0x68ea, 0xf893, 0x0, 0x1);
        gbc.writeMem(0x49ba, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xcc74, gbc.sp());
        EXPECT(0x49bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A0 00D1
        gbc.setState(0xd75f, 0xf326, 0x9a60, 0x62a1, 0x1b7d, 0x148c, 0x0, 0x0);
        gbc.writeMem(0xd75f, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xf326, gbc.sp());
        EXPECT(0xd761, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd75f));
        EXPECT(0xa0, gbc.readMem(0xd760));
        // CB A0 00D2
        gbc.setState(0x17d7, 0x6e3a, 0x2270, 0x361c, 0x5e85, 0x56fd, 0x0, 0x0);
        gbc.writeMem(0x17d7, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x6e3a, gbc.sp());
        EXPECT(0x17d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 00D3
        gbc.setState(0x48d6, 0x8229, 0xbec0, 0xb1fc, 0xb391, 0xc1e1, 0x0, 0x0);
        gbc.writeMem(0x48d6, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x8229, gbc.sp());
        EXPECT(0x48d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A0 00D4
        gbc.setState(0xe5d4, 0xf886, 0x6590, 0x8501, 0x51fb, 0xe525, 0x0, 0x1);
        gbc.writeMem(0xe5d4, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xf886, gbc.sp());
        EXPECT(0xe5d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe5d4));
        EXPECT(0xa0, gbc.readMem(0xe5d5));
        // CB A0 00D5
        gbc.setState(0x8cc7, 0x3125, 0x6c50, 0x9aa6, 0x4995, 0x4e52, 0x1, 0x0);
        gbc.writeMem(0x8cc7, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x3125, gbc.sp());
        EXPECT(0x8cc9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8cc7));
        EXPECT(0xa0, gbc.readMem(0x8cc8));
        // CB A0 00D6
        gbc.setState(0xeec7, 0xb33b, 0xaa40, 0x6f8, 0xf27b, 0x93d7, 0x0, 0x1);
        gbc.writeMem(0xeec7, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xb33b, gbc.sp());
        EXPECT(0xeec9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeec7));
        EXPECT(0xa0, gbc.readMem(0xeec8));
        // CB A0 00D7
        gbc.setState(0xb87, 0xe3a5, 0x1280, 0x96e, 0x86f9, 0xa2ec, 0x0, 0x0);
        gbc.writeMem(0xb87, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xe3a5, gbc.sp());
        EXPECT(0xb89, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A0 00D8
        gbc.setState(0x5a44, 0x69e6, 0xe500, 0x51e8, 0xad09, 0xab4d, 0x0, 0x1);
        gbc.writeMem(0x5a44, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x69e6, gbc.sp());
        EXPECT(0x5a46, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A0 00D9
        gbc.setState(0x9ba7, 0xb6ae, 0x3040, 0x8aa8, 0xce7, 0xb565, 0x0, 0x1);
        gbc.writeMem(0x9ba7, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xb6ae, gbc.sp());
        EXPECT(0x9ba9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ba7));
        EXPECT(0xa0, gbc.readMem(0x9ba8));
        // CB A0 00DA
        gbc.setState(0xdf6a, 0x93f, 0x53d0, 0xe6c, 0x9b51, 0x402e, 0x0, 0x0);
        gbc.writeMem(0xdf6a, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x93f, gbc.sp());
        EXPECT(0xdf6c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf6a));
        EXPECT(0xa0, gbc.readMem(0xdf6b));
        // CB A0 00DB
        gbc.setState(0x3323, 0xbc13, 0x4c0, 0xe548, 0x8c9a, 0xdb45, 0x1, 0x0);
        gbc.writeMem(0x3323, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xbc13, gbc.sp());
        EXPECT(0x3325, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A0 00DC
        gbc.setState(0x2c88, 0x5a78, 0x8cf0, 0x6b6b, 0x371c, 0x2b98, 0x1, 0x1);
        gbc.writeMem(0x2c88, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x5a78, gbc.sp());
        EXPECT(0x2c8a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 00DD
        gbc.setState(0xb603, 0xa3b7, 0xf300, 0xe866, 0x75a2, 0xdad9, 0x0, 0x0);
        gbc.writeMem(0xb603, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xa3b7, gbc.sp());
        EXPECT(0xb605, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb603));
        EXPECT(0xa0, gbc.readMem(0xb604));
        // CB A0 00DE
        gbc.setState(0xb2c0, 0x915d, 0x6470, 0x3d87, 0x56b0, 0x782, 0x1, 0x1);
        gbc.writeMem(0xb2c0, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x915d, gbc.sp());
        EXPECT(0xb2c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb2c0));
        EXPECT(0xa0, gbc.readMem(0xb2c1));
        // CB A0 00DF
        gbc.setState(0x3a65, 0x215f, 0x7fb0, 0xae8b, 0x45fc, 0x2bc9, 0x1, 0x1);
        gbc.writeMem(0x3a65, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x215f, gbc.sp());
        EXPECT(0x3a67, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 00E0
        gbc.setState(0xd7d3, 0x719a, 0x83b0, 0x280d, 0x2901, 0xd3bf, 0x0, 0x1);
        gbc.writeMem(0xd7d3, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x719a, gbc.sp());
        EXPECT(0xd7d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd7d3));
        EXPECT(0xa0, gbc.readMem(0xd7d4));
        // CB A0 00E1
        gbc.setState(0x4f66, 0x6d2e, 0xcbb0, 0xd49a, 0x1ceb, 0x6f92, 0x0, 0x1);
        gbc.writeMem(0x4f66, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x6d2e, gbc.sp());
        EXPECT(0x4f68, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 00E2
        gbc.setState(0xcd70, 0x6f47, 0x8000, 0x1767, 0x1661, 0x2fb3, 0x1, 0x0);
        gbc.writeMem(0xcd70, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x6f47, gbc.sp());
        EXPECT(0xcd72, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd70));
        EXPECT(0xa0, gbc.readMem(0xcd71));
        // CB A0 00E3
        gbc.setState(0xa6d1, 0x4eec, 0xa050, 0x8c6, 0xe91c, 0x183d, 0x1, 0x0);
        gbc.writeMem(0xa6d1, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x4eec, gbc.sp());
        EXPECT(0xa6d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa6d1));
        EXPECT(0xa0, gbc.readMem(0xa6d2));
        // CB A0 00E4
        gbc.setState(0x1dfa, 0x1060, 0xa910, 0x8e20, 0x9a4b, 0x307b, 0x0, 0x1);
        gbc.writeMem(0x1dfa, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x1060, gbc.sp());
        EXPECT(0x1dfc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 00E5
        gbc.setState(0x431b, 0x4f99, 0x8120, 0x226a, 0xad7c, 0x82c6, 0x0, 0x1);
        gbc.writeMem(0x431b, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x4f99, gbc.sp());
        EXPECT(0x431d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A0 00E6
        gbc.setState(0x87f5, 0xef06, 0x6170, 0x6cbf, 0x4aaa, 0x289, 0x0, 0x0);
        gbc.writeMem(0x87f5, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xef06, gbc.sp());
        EXPECT(0x87f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x87f5));
        EXPECT(0xa0, gbc.readMem(0x87f6));
        // CB A0 00E7
        gbc.setState(0xcbd4, 0x94d0, 0x9bd0, 0xc60a, 0xe200, 0xde7f, 0x1, 0x1);
        gbc.writeMem(0xcbd4, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x94d0, gbc.sp());
        EXPECT(0xcbd6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcbd4));
        EXPECT(0xa0, gbc.readMem(0xcbd5));
        // CB A0 00E9
        gbc.setState(0x3727, 0x699e, 0xc900, 0xd788, 0x4510, 0x1078, 0x0, 0x1);
        gbc.writeMem(0x3727, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x699e, gbc.sp());
        EXPECT(0x3729, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A0 00EA
        gbc.setState(0x7a94, 0x7fdb, 0x24f0, 0x6a0a, 0xffd4, 0xd134, 0x0, 0x1);
        gbc.writeMem(0x7a94, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x7fdb, gbc.sp());
        EXPECT(0x7a96, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 00EB
        gbc.setState(0x7882, 0x92a2, 0xdd40, 0x7c28, 0x2f3f, 0x16d9, 0x0, 0x1);
        gbc.writeMem(0x7882, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x92a2, gbc.sp());
        EXPECT(0x7884, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A0 00EC
        gbc.setState(0x2c4, 0x90d4, 0xf120, 0x888d, 0x159f, 0xb993, 0x0, 0x0);
        gbc.writeMem(0x2c4, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x90d4, gbc.sp());
        EXPECT(0x2c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A0 00ED
        gbc.setState(0x90c4, 0x4080, 0xb3d0, 0xdeb4, 0xf0df, 0x7399, 0x1, 0x1);
        gbc.writeMem(0x90c4, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x4080, gbc.sp());
        EXPECT(0x90c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x90c4));
        EXPECT(0xa0, gbc.readMem(0x90c5));
        // CB A0 00EE
        gbc.setState(0x4b67, 0x9f31, 0xbd10, 0xdce2, 0x331e, 0xe034, 0x0, 0x0);
        gbc.writeMem(0x4b67, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x9f31, gbc.sp());
        EXPECT(0x4b69, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 00EF
        gbc.setState(0x263c, 0x7f94, 0x1a30, 0xd3f9, 0x4547, 0x6f4, 0x0, 0x1);
        gbc.writeMem(0x263c, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x7f94, gbc.sp());
        EXPECT(0x263e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 00F0
        gbc.setState(0x96a7, 0x55d9, 0x7930, 0xd707, 0x544f, 0xc092, 0x0, 0x0);
        gbc.writeMem(0x96a7, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x55d9, gbc.sp());
        EXPECT(0x96a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x96a7));
        EXPECT(0xa0, gbc.readMem(0x96a8));
        // CB A0 00F1
        gbc.setState(0x19d7, 0x63d6, 0xf100, 0x9ed8, 0xeab, 0x3558, 0x0, 0x1);
        gbc.writeMem(0x19d7, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x63d6, gbc.sp());
        EXPECT(0x19d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A0 00F2
        gbc.setState(0x716e, 0xb5e8, 0xd2a0, 0x989d, 0x6b0f, 0x1117, 0x1, 0x1);
        gbc.writeMem(0x716e, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xb5e8, gbc.sp());
        EXPECT(0x7170, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A0 00F4
        gbc.setState(0x9389, 0xd397, 0xd0c0, 0x2f25, 0xb1, 0xc22d, 0x1, 0x1);
        gbc.writeMem(0x9389, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xd397, gbc.sp());
        EXPECT(0x938b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9389));
        EXPECT(0xa0, gbc.readMem(0x938a));
        // CB A0 00F5
        gbc.setState(0xe516, 0x9a97, 0xfa70, 0xa948, 0xd0be, 0xc0b1, 0x1, 0x1);
        gbc.writeMem(0xe516, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x9a97, gbc.sp());
        EXPECT(0xe518, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe516));
        EXPECT(0xa0, gbc.readMem(0xe517));
        // CB A0 00F6
        gbc.setState(0xc416, 0xbb96, 0xbc40, 0xbb59, 0xf3a4, 0xcbcf, 0x1, 0x1);
        gbc.writeMem(0xc416, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xbb96, gbc.sp());
        EXPECT(0xc418, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc416));
        EXPECT(0xa0, gbc.readMem(0xc417));
        // CB A0 00F7
        gbc.setState(0xa7d0, 0xa2b9, 0x3200, 0x516e, 0x736b, 0x8481, 0x0, 0x0);
        gbc.writeMem(0xa7d0, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xa2b9, gbc.sp());
        EXPECT(0xa7d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa7d0));
        EXPECT(0xa0, gbc.readMem(0xa7d1));
        // CB A0 00F8
        gbc.setState(0xbf95, 0xf33d, 0x6df0, 0xc6bf, 0xd7d7, 0xec83, 0x1, 0x1);
        gbc.writeMem(0xbf95, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xf33d, gbc.sp());
        EXPECT(0xbf97, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf95));
        EXPECT(0xa0, gbc.readMem(0xbf96));
        // CB A0 00F9
        gbc.setState(0x1a87, 0x7dab, 0x3e50, 0xc54b, 0xb71a, 0x199f, 0x0, 0x1);
        gbc.writeMem(0x1a87, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x7dab, gbc.sp());
        EXPECT(0x1a89, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 00FA
        gbc.setState(0x3629, 0x5c13, 0x5370, 0xf3d8, 0x444, 0xe4e2, 0x0, 0x0);
        gbc.writeMem(0x3629, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x5c13, gbc.sp());
        EXPECT(0x362b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 00FB
        gbc.setState(0x7ed1, 0xd5f5, 0xefd0, 0x2b5a, 0x4f90, 0x3d9b, 0x0, 0x0);
        gbc.writeMem(0x7ed1, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xd5f5, gbc.sp());
        EXPECT(0x7ed3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 00FC
        gbc.setState(0x616, 0x17ae, 0x6d40, 0xf300, 0xdf17, 0xf47a, 0x0, 0x0);
        gbc.writeMem(0x616, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x17ae, gbc.sp());
        EXPECT(0x618, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A0 00FD
        gbc.setState(0xad9e, 0x1388, 0xbe70, 0x5321, 0x1eb, 0xd64a, 0x1, 0x1);
        gbc.writeMem(0xad9e, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x1388, gbc.sp());
        EXPECT(0xada0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad9e));
        EXPECT(0xa0, gbc.readMem(0xad9f));
        // CB A0 00FE
        gbc.setState(0x1e25, 0x8897, 0x25f0, 0x8383, 0x2c5, 0x31e5, 0x0, 0x0);
        gbc.writeMem(0x1e25, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x8897, gbc.sp());
        EXPECT(0x1e27, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 00FF
        gbc.setState(0xaac0, 0x2253, 0x2470, 0xfbfd, 0x3bb3, 0xd652, 0x0, 0x0);
        gbc.writeMem(0xaac0, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x2253, gbc.sp());
        EXPECT(0xaac2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaac0));
        EXPECT(0xa0, gbc.readMem(0xaac1));
        // CB A0 0101
        gbc.setState(0x8903, 0x5902, 0x5030, 0x8265, 0x756d, 0xcf51, 0x1, 0x0);
        gbc.writeMem(0x8903, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x5902, gbc.sp());
        EXPECT(0x8905, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8903));
        EXPECT(0xa0, gbc.readMem(0x8904));
        // CB A0 0102
        gbc.setState(0x7cc4, 0xdd89, 0x61a0, 0xfa6b, 0x1f35, 0xde38, 0x1, 0x0);
        gbc.writeMem(0x7cc4, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xdd89, gbc.sp());
        EXPECT(0x7cc6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A0 0103
        gbc.setState(0xe16d, 0x4576, 0x1680, 0xb107, 0x754, 0x6db1, 0x1, 0x0);
        gbc.writeMem(0xe16d, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x4576, gbc.sp());
        EXPECT(0xe16f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe16d));
        EXPECT(0xa0, gbc.readMem(0xe16e));
        // CB A0 0104
        gbc.setState(0xc185, 0xeaa9, 0xc6b0, 0x4b0d, 0xa9e8, 0x7099, 0x1, 0x1);
        gbc.writeMem(0xc185, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xeaa9, gbc.sp());
        EXPECT(0xc187, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc185));
        EXPECT(0xa0, gbc.readMem(0xc186));
        // CB A0 0105
        gbc.setState(0x6bd2, 0x9abe, 0x7540, 0xf11e, 0xc3ba, 0x1f3a, 0x1, 0x1);
        gbc.writeMem(0x6bd2, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x9abe, gbc.sp());
        EXPECT(0x6bd4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A0 0106
        gbc.setState(0xdaa0, 0x4f6b, 0xd270, 0x28c0, 0xe4b4, 0x5627, 0x0, 0x0);
        gbc.writeMem(0xdaa0, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x4f6b, gbc.sp());
        EXPECT(0xdaa2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdaa0));
        EXPECT(0xa0, gbc.readMem(0xdaa1));
        // CB A0 0107
        gbc.setState(0x8405, 0xfcf2, 0xcb60, 0xd82, 0x9ca, 0xf59f, 0x1, 0x1);
        gbc.writeMem(0x8405, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xfcf2, gbc.sp());
        EXPECT(0x8407, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8405));
        EXPECT(0xa0, gbc.readMem(0x8406));
        // CB A0 0109
        gbc.setState(0x7275, 0x1b81, 0xbf20, 0xfdd6, 0x3848, 0xc65, 0x0, 0x0);
        gbc.writeMem(0x7275, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x1b81, gbc.sp());
        EXPECT(0x7277, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A0 010A
        gbc.setState(0xbdd1, 0xf9ed, 0x15b0, 0xd250, 0x4ba5, 0x7d9a, 0x0, 0x1);
        gbc.writeMem(0xbdd1, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xf9ed, gbc.sp());
        EXPECT(0xbdd3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbdd1));
        EXPECT(0xa0, gbc.readMem(0xbdd2));
        // CB A0 010B
        gbc.setState(0xde48, 0xd23, 0x5800, 0xfc55, 0xd6e1, 0x4bf4, 0x0, 0x1);
        gbc.writeMem(0xde48, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xd23, gbc.sp());
        EXPECT(0xde4a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde48));
        EXPECT(0xa0, gbc.readMem(0xde49));
        // CB A0 010C
        gbc.setState(0x508f, 0x862, 0x3180, 0xe910, 0x9548, 0xc32b, 0x0, 0x1);
        gbc.writeMem(0x508f, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x862, gbc.sp());
        EXPECT(0x5091, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A0 010D
        gbc.setState(0x5580, 0x3d4f, 0xabd0, 0xb5, 0x374d, 0xf4d1, 0x1, 0x0);
        gbc.writeMem(0x5580, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x3d4f, gbc.sp());
        EXPECT(0x5582, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 010E
        gbc.setState(0x246f, 0xf29, 0x8e0, 0x615e, 0x907d, 0x4dee, 0x0, 0x0);
        gbc.writeMem(0x246f, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xf29, gbc.sp());
        EXPECT(0x2471, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A0 010F
        gbc.setState(0x8a07, 0x6f6f, 0x2d20, 0xf6fc, 0x5e70, 0x9e07, 0x1, 0x0);
        gbc.writeMem(0x8a07, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x6f6f, gbc.sp());
        EXPECT(0x8a09, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a07));
        EXPECT(0xa0, gbc.readMem(0x8a08));
        // CB A0 0110
        gbc.setState(0x223e, 0xaa5d, 0x81e0, 0xf6cc, 0xbcfc, 0x5664, 0x1, 0x0);
        gbc.writeMem(0x223e, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xaa5d, gbc.sp());
        EXPECT(0x2240, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A0 0112
        gbc.setState(0x341f, 0xbc31, 0x6670, 0x1b60, 0xd07a, 0x59b5, 0x0, 0x1);
        gbc.writeMem(0x341f, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xbc31, gbc.sp());
        EXPECT(0x3421, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 0113
        gbc.setState(0x6c20, 0x18f1, 0xa5e0, 0x8cf9, 0x1428, 0x9b7, 0x1, 0x1);
        gbc.writeMem(0x6c20, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x18f1, gbc.sp());
        EXPECT(0x6c22, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A0 0115
        gbc.setState(0xed2b, 0x6cc3, 0x2d20, 0x4000, 0xe6c2, 0x1350, 0x0, 0x0);
        gbc.writeMem(0xed2b, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x6cc3, gbc.sp());
        EXPECT(0xed2d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed2b));
        EXPECT(0xa0, gbc.readMem(0xed2c));
        // CB A0 0116
        gbc.setState(0x53ce, 0xf5b2, 0x7290, 0x1c48, 0x121e, 0xc97b, 0x0, 0x1);
        gbc.writeMem(0x53ce, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xf5b2, gbc.sp());
        EXPECT(0x53d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 0117
        gbc.setState(0x22fc, 0x90, 0x9760, 0x4144, 0xaf8a, 0x7c92, 0x0, 0x1);
        gbc.writeMem(0x22fc, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x90, gbc.sp());
        EXPECT(0x22fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A0 0118
        gbc.setState(0x9906, 0xc5e4, 0x48a0, 0x43ea, 0xa3c9, 0xbf68, 0x0, 0x1);
        gbc.writeMem(0x9906, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xc5e4, gbc.sp());
        EXPECT(0x9908, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9906));
        EXPECT(0xa0, gbc.readMem(0x9907));
        // CB A0 0119
        gbc.setState(0xdb7a, 0x3b8a, 0xab70, 0xa33e, 0xa3b6, 0x3453, 0x1, 0x0);
        gbc.writeMem(0xdb7a, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x3b8a, gbc.sp());
        EXPECT(0xdb7c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb7a));
        EXPECT(0xa0, gbc.readMem(0xdb7b));
        // CB A0 011A
        gbc.setState(0x76cd, 0xffbb, 0xc7c0, 0x22c7, 0x1b49, 0x7828, 0x1, 0x0);
        gbc.writeMem(0x76cd, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xffbb, gbc.sp());
        EXPECT(0x76cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A0 011B
        gbc.setState(0x7d4a, 0x750b, 0x5710, 0x3753, 0x99cd, 0xe9d0, 0x1, 0x1);
        gbc.writeMem(0x7d4a, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x750b, gbc.sp());
        EXPECT(0x7d4c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 011C
        gbc.setState(0xed91, 0xefc3, 0xa330, 0xdce2, 0x2325, 0x6620, 0x1, 0x1);
        gbc.writeMem(0xed91, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xefc3, gbc.sp());
        EXPECT(0xed93, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed91));
        EXPECT(0xa0, gbc.readMem(0xed92));
        // CB A0 011D
        gbc.setState(0xe748, 0xe04a, 0x3050, 0xb9b2, 0xb7ca, 0x42ae, 0x0, 0x0);
        gbc.writeMem(0xe748, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xe04a, gbc.sp());
        EXPECT(0xe74a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe748));
        EXPECT(0xa0, gbc.readMem(0xe749));
        // CB A0 011E
        gbc.setState(0x8c27, 0x2622, 0xdf00, 0xd4aa, 0xb227, 0x53d1, 0x0, 0x0);
        gbc.writeMem(0x8c27, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x2622, gbc.sp());
        EXPECT(0x8c29, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c27));
        EXPECT(0xa0, gbc.readMem(0x8c28));
        // CB A0 011F
        gbc.setState(0x887, 0xb35c, 0x3bc0, 0xf948, 0xe981, 0x9735, 0x0, 0x1);
        gbc.writeMem(0x887, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xb35c, gbc.sp());
        EXPECT(0x889, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A0 0120
        gbc.setState(0xdf8f, 0xc1e0, 0xc5b0, 0xdca7, 0x71e9, 0x1e5b, 0x0, 0x0);
        gbc.writeMem(0xdf8f, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xc1e0, gbc.sp());
        EXPECT(0xdf91, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf8f));
        EXPECT(0xa0, gbc.readMem(0xdf90));
        // CB A0 0121
        gbc.setState(0x2a78, 0xf278, 0x8610, 0x1c74, 0xcc5e, 0xb5a4, 0x1, 0x1);
        gbc.writeMem(0x2a78, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xf278, gbc.sp());
        EXPECT(0x2a7a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 0122
        gbc.setState(0x673f, 0xdeac, 0x8ca0, 0x512c, 0xd3f9, 0xa861, 0x1, 0x0);
        gbc.writeMem(0x673f, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xdeac, gbc.sp());
        EXPECT(0x6741, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A0 0123
        gbc.setState(0xd35a, 0xc456, 0xbf0, 0x16fa, 0x3bfa, 0x2480, 0x0, 0x0);
        gbc.writeMem(0xd35a, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xc456, gbc.sp());
        EXPECT(0xd35c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd35a));
        EXPECT(0xa0, gbc.readMem(0xd35b));
        // CB A0 0124
        gbc.setState(0x8767, 0x7aed, 0x4000, 0xe65, 0xa5a7, 0x9392, 0x1, 0x0);
        gbc.writeMem(0x8767, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x7aed, gbc.sp());
        EXPECT(0x8769, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8767));
        EXPECT(0xa0, gbc.readMem(0x8768));
        // CB A0 0125
        gbc.setState(0x55, 0x746d, 0xde0, 0x41b6, 0x2c36, 0x7d46, 0x0, 0x1);
        gbc.writeMem(0x55, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x746d, gbc.sp());
        EXPECT(0x57, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A0 0126
        gbc.setState(0xc56a, 0xa449, 0x7c20, 0x97d6, 0xad1b, 0xc552, 0x0, 0x1);
        gbc.writeMem(0xc56a, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xa449, gbc.sp());
        EXPECT(0xc56c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc56a));
        EXPECT(0xa0, gbc.readMem(0xc56b));
        // CB A0 0127
        gbc.setState(0xd35, 0xaf4, 0x9ec0, 0x87e3, 0xd17c, 0x21ac, 0x1, 0x1);
        gbc.writeMem(0xd35, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xaf4, gbc.sp());
        EXPECT(0xd37, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A0 0128
        gbc.setState(0x81c2, 0x7c5f, 0xe100, 0x20bd, 0x88d, 0x29fe, 0x0, 0x0);
        gbc.writeMem(0x81c2, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x7c5f, gbc.sp());
        EXPECT(0x81c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x81c2));
        EXPECT(0xa0, gbc.readMem(0x81c3));
        // CB A0 0129
        gbc.setState(0x7aba, 0x9c42, 0x1360, 0x5fa3, 0xa6b0, 0x6e52, 0x1, 0x0);
        gbc.writeMem(0x7aba, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x9c42, gbc.sp());
        EXPECT(0x7abc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A0 012A
        gbc.setState(0xb1c0, 0x8db8, 0x3b0, 0xc9d5, 0xa6ab, 0xbe64, 0x0, 0x1);
        gbc.writeMem(0xb1c0, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x8db8, gbc.sp());
        EXPECT(0xb1c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb1c0));
        EXPECT(0xa0, gbc.readMem(0xb1c1));
        // CB A0 012B
        gbc.setState(0xc2a9, 0xbb4d, 0xaae0, 0x8624, 0xcedc, 0x11ce, 0x1, 0x0);
        gbc.writeMem(0xc2a9, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xbb4d, gbc.sp());
        EXPECT(0xc2ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc2a9));
        EXPECT(0xa0, gbc.readMem(0xc2aa));
        // CB A0 012C
        gbc.setState(0x5e9a, 0x3150, 0xe2c0, 0x19ac, 0x207f, 0x3c35, 0x0, 0x1);
        gbc.writeMem(0x5e9a, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x3150, gbc.sp());
        EXPECT(0x5e9c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A0 012D
        gbc.setState(0xea50, 0x2f7b, 0x4cf0, 0x8f8d, 0xea9f, 0x1010, 0x0, 0x1);
        gbc.writeMem(0xea50, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x2f7b, gbc.sp());
        EXPECT(0xea52, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea50));
        EXPECT(0xa0, gbc.readMem(0xea51));
        // CB A0 012E
        gbc.setState(0x4466, 0xb25f, 0xfc80, 0xef8a, 0xb829, 0x86e9, 0x1, 0x0);
        gbc.writeMem(0x4466, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xb25f, gbc.sp());
        EXPECT(0x4468, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A0 012F
        gbc.setState(0x6b8a, 0xf3d7, 0xb4b0, 0x6f48, 0xf5a7, 0xb121, 0x1, 0x0);
        gbc.writeMem(0x6b8a, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xf3d7, gbc.sp());
        EXPECT(0x6b8c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 0130
        gbc.setState(0x595f, 0xab97, 0x36f0, 0x5fac, 0x8ea1, 0x2f13, 0x0, 0x0);
        gbc.writeMem(0x595f, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xab97, gbc.sp());
        EXPECT(0x5961, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 0132
        gbc.setState(0xb32a, 0x4d69, 0x9b30, 0xcfb4, 0xd251, 0x1a82, 0x0, 0x1);
        gbc.writeMem(0xb32a, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x4d69, gbc.sp());
        EXPECT(0xb32c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb32a));
        EXPECT(0xa0, gbc.readMem(0xb32b));
        // CB A0 0133
        gbc.setState(0xe231, 0xed58, 0x5260, 0x71b2, 0xa020, 0xbe5f, 0x1, 0x0);
        gbc.writeMem(0xe231, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xed58, gbc.sp());
        EXPECT(0xe233, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe231));
        EXPECT(0xa0, gbc.readMem(0xe232));
        // CB A0 0134
        gbc.setState(0xcc9f, 0xfa8b, 0x75b0, 0xb085, 0x80ca, 0x2b87, 0x1, 0x1);
        gbc.writeMem(0xcc9f, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xfa8b, gbc.sp());
        EXPECT(0xcca1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc9f));
        EXPECT(0xa0, gbc.readMem(0xcca0));
        // CB A0 0135
        gbc.setState(0x6fca, 0x3934, 0x1c70, 0x767b, 0x2258, 0x4482, 0x0, 0x0);
        gbc.writeMem(0x6fca, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x3934, gbc.sp());
        EXPECT(0x6fcc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 0136
        gbc.setState(0x54c9, 0xc8f2, 0xbed0, 0x84e5, 0x1749, 0x6b9c, 0x1, 0x1);
        gbc.writeMem(0x54c9, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xc8f2, gbc.sp());
        EXPECT(0x54cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 0137
        gbc.setState(0x8bad, 0x420c, 0x1900, 0xf8d3, 0xa7c4, 0x134d, 0x1, 0x1);
        gbc.writeMem(0x8bad, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x420c, gbc.sp());
        EXPECT(0x8baf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8bad));
        EXPECT(0xa0, gbc.readMem(0x8bae));
        // CB A0 0138
        gbc.setState(0x4a51, 0xc6cb, 0x4650, 0x15b1, 0x5754, 0x317c, 0x0, 0x1);
        gbc.writeMem(0x4a51, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xc6cb, gbc.sp());
        EXPECT(0x4a53, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 0139
        gbc.setState(0xa818, 0xbd77, 0x4630, 0x4680, 0xe02e, 0x453e, 0x0, 0x0);
        gbc.writeMem(0xa818, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xbd77, gbc.sp());
        EXPECT(0xa81a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa818));
        EXPECT(0xa0, gbc.readMem(0xa819));
        // CB A0 013A
        gbc.setState(0x2fed, 0x7a0f, 0xe6a0, 0x3a1, 0x1dba, 0xd4b7, 0x1, 0x0);
        gbc.writeMem(0x2fed, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x7a0f, gbc.sp());
        EXPECT(0x2fef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A0 013B
        gbc.setState(0x22f6, 0xeb07, 0x1790, 0xa271, 0x97fa, 0x66f0, 0x0, 0x0);
        gbc.writeMem(0x22f6, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xeb07, gbc.sp());
        EXPECT(0x22f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 013C
        gbc.setState(0x4b7, 0x846d, 0x9320, 0xfaa3, 0x6506, 0xe4b6, 0x0, 0x0);
        gbc.writeMem(0x4b7, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x846d, gbc.sp());
        EXPECT(0x4b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A0 013D
        gbc.setState(0x87d6, 0x3133, 0x10a0, 0x1541, 0x2b64, 0x2e62, 0x1, 0x1);
        gbc.writeMem(0x87d6, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x3133, gbc.sp());
        EXPECT(0x87d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x87d6));
        EXPECT(0xa0, gbc.readMem(0x87d7));
        // CB A0 013E
        gbc.setState(0x24ac, 0x5bd9, 0xcdd0, 0xf332, 0xc64f, 0xc00a, 0x1, 0x1);
        gbc.writeMem(0x24ac, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x5bd9, gbc.sp());
        EXPECT(0x24ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 013F
        gbc.setState(0xb9fa, 0x3b3, 0x2810, 0xeb8d, 0xb2b6, 0x2373, 0x1, 0x1);
        gbc.writeMem(0xb9fa, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x3b3, gbc.sp());
        EXPECT(0xb9fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb9fa));
        EXPECT(0xa0, gbc.readMem(0xb9fb));
        // CB A0 0140
        gbc.setState(0xa80e, 0xd273, 0x2d20, 0x22e1, 0x3d8a, 0xee8e, 0x1, 0x1);
        gbc.writeMem(0xa80e, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xd273, gbc.sp());
        EXPECT(0xa810, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa80e));
        EXPECT(0xa0, gbc.readMem(0xa80f));
        // CB A0 0141
        gbc.setState(0x8417, 0xe5cb, 0xc790, 0x98b6, 0xfe0b, 0x6790, 0x1, 0x0);
        gbc.writeMem(0x8417, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xe5cb, gbc.sp());
        EXPECT(0x8419, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8417));
        EXPECT(0xa0, gbc.readMem(0x8418));
        // CB A0 0142
        gbc.setState(0x9ba4, 0x92ab, 0x8910, 0x5bce, 0xd6d6, 0x4f93, 0x0, 0x1);
        gbc.writeMem(0x9ba4, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x92ab, gbc.sp());
        EXPECT(0x9ba6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ba4));
        EXPECT(0xa0, gbc.readMem(0x9ba5));
        // CB A0 0143
        gbc.setState(0x4bdd, 0xb7db, 0xca10, 0xec70, 0xf64b, 0xa351, 0x1, 0x0);
        gbc.writeMem(0x4bdd, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xb7db, gbc.sp());
        EXPECT(0x4bdf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 0144
        gbc.setState(0xc01b, 0x9fc2, 0x7b0, 0xfd46, 0x7121, 0xae87, 0x0, 0x1);
        gbc.writeMem(0xc01b, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x9fc2, gbc.sp());
        EXPECT(0xc01d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc01b));
        EXPECT(0xa0, gbc.readMem(0xc01c));
        // CB A0 0145
        gbc.setState(0xb573, 0x9e7b, 0xde40, 0x551a, 0x4a27, 0x10a8, 0x0, 0x0);
        gbc.writeMem(0xb573, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x9e7b, gbc.sp());
        EXPECT(0xb575, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb573));
        EXPECT(0xa0, gbc.readMem(0xb574));
        // CB A0 0146
        gbc.setState(0x335, 0xe09d, 0x6eb0, 0x92e0, 0xf482, 0x975, 0x0, 0x1);
        gbc.writeMem(0x335, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xe09d, gbc.sp());
        EXPECT(0x337, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 0147
        gbc.setState(0x1364, 0xea1, 0x990, 0x6873, 0x4d41, 0x669e, 0x1, 0x0);
        gbc.writeMem(0x1364, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xea1, gbc.sp());
        EXPECT(0x1366, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 0148
        gbc.setState(0xd463, 0x11f8, 0x2690, 0xc0c4, 0x94ee, 0xcc92, 0x0, 0x0);
        gbc.writeMem(0xd463, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x11f8, gbc.sp());
        EXPECT(0xd465, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd463));
        EXPECT(0xa0, gbc.readMem(0xd464));
        // CB A0 0149
        gbc.setState(0xb257, 0xcc00, 0xb550, 0x2423, 0xd464, 0x7f0b, 0x1, 0x1);
        gbc.writeMem(0xb257, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xcc00, gbc.sp());
        EXPECT(0xb259, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb257));
        EXPECT(0xa0, gbc.readMem(0xb258));
        // CB A0 014A
        gbc.setState(0xc68d, 0x4205, 0xae20, 0x42d2, 0xcabe, 0x7fc1, 0x1, 0x0);
        gbc.writeMem(0xc68d, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x4205, gbc.sp());
        EXPECT(0xc68f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc68d));
        EXPECT(0xa0, gbc.readMem(0xc68e));
        // CB A0 014B
        gbc.setState(0x85d7, 0xb19e, 0x5580, 0xbc6f, 0x5e7f, 0xd47d, 0x0, 0x1);
        gbc.writeMem(0x85d7, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xb19e, gbc.sp());
        EXPECT(0x85d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x85d7));
        EXPECT(0xa0, gbc.readMem(0x85d8));
        // CB A0 014C
        gbc.setState(0x6fa2, 0x40b4, 0x11c0, 0xcfcc, 0xe89e, 0x2d45, 0x0, 0x1);
        gbc.writeMem(0x6fa2, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x40b4, gbc.sp());
        EXPECT(0x6fa4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A0 014D
        gbc.setState(0xd82c, 0x77a2, 0xded0, 0x18b2, 0x6259, 0xc608, 0x1, 0x1);
        gbc.writeMem(0xd82c, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x77a2, gbc.sp());
        EXPECT(0xd82e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd82c));
        EXPECT(0xa0, gbc.readMem(0xd82d));
        // CB A0 014E
        gbc.setState(0x40e4, 0x5170, 0xd3b0, 0x3b53, 0xba04, 0x7f68, 0x1, 0x0);
        gbc.writeMem(0x40e4, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x5170, gbc.sp());
        EXPECT(0x40e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 014F
        gbc.setState(0x8eb3, 0x1536, 0xa060, 0xbcdd, 0x6398, 0xc187, 0x1, 0x1);
        gbc.writeMem(0x8eb3, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x1536, gbc.sp());
        EXPECT(0x8eb5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8eb3));
        EXPECT(0xa0, gbc.readMem(0x8eb4));
        // CB A0 0150
        gbc.setState(0x9aeb, 0x60bb, 0x49a0, 0xd4c5, 0xc946, 0x9787, 0x1, 0x1);
        gbc.writeMem(0x9aeb, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x60bb, gbc.sp());
        EXPECT(0x9aed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9aeb));
        EXPECT(0xa0, gbc.readMem(0x9aec));
        // CB A0 0151
        gbc.setState(0x41da, 0x6870, 0x5240, 0x9fa, 0x3e57, 0x270, 0x1, 0x1);
        gbc.writeMem(0x41da, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x6870, gbc.sp());
        EXPECT(0x41dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A0 0152
        gbc.setState(0x413b, 0x5204, 0x2a00, 0x3438, 0xab26, 0xa117, 0x0, 0x0);
        gbc.writeMem(0x413b, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x5204, gbc.sp());
        EXPECT(0x413d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A0 0153
        gbc.setState(0x4cf0, 0x8d92, 0xf8d0, 0x7bd, 0x8472, 0xafcf, 0x0, 0x0);
        gbc.writeMem(0x4cf0, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x8d92, gbc.sp());
        EXPECT(0x4cf2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 0154
        gbc.setState(0x2f16, 0xa0a5, 0x6a30, 0xbf7c, 0x1b60, 0xf476, 0x1, 0x0);
        gbc.writeMem(0x2f16, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xa0a5, gbc.sp());
        EXPECT(0x2f18, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 0156
        gbc.setState(0x81c1, 0xc769, 0x2210, 0x88f2, 0xabf6, 0xccbf, 0x0, 0x0);
        gbc.writeMem(0x81c1, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xc769, gbc.sp());
        EXPECT(0x81c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x81c1));
        EXPECT(0xa0, gbc.readMem(0x81c2));
        // CB A0 0157
        gbc.setState(0x6a6b, 0x92a8, 0x59b0, 0x70bc, 0x1a10, 0x8f9b, 0x0, 0x0);
        gbc.writeMem(0x6a6b, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x92a8, gbc.sp());
        EXPECT(0x6a6d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 0159
        gbc.setState(0xe5fd, 0x79ee, 0x1c80, 0x2256, 0xaa89, 0x3912, 0x1, 0x0);
        gbc.writeMem(0xe5fd, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x79ee, gbc.sp());
        EXPECT(0xe5ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe5fd));
        EXPECT(0xa0, gbc.readMem(0xe5fe));
        // CB A0 015A
        gbc.setState(0xafb3, 0x932c, 0x7820, 0xd8de, 0x4ce4, 0x69f9, 0x0, 0x0);
        gbc.writeMem(0xafb3, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x932c, gbc.sp());
        EXPECT(0xafb5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xafb3));
        EXPECT(0xa0, gbc.readMem(0xafb4));
        // CB A0 015B
        gbc.setState(0x7f07, 0x16aa, 0xca0, 0x407a, 0xf96d, 0xb078, 0x1, 0x0);
        gbc.writeMem(0x7f07, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x16aa, gbc.sp());
        EXPECT(0x7f09, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A0 015C
        gbc.setState(0x62fa, 0x7fa, 0x86d0, 0x7bff, 0x4776, 0xd5e0, 0x0, 0x1);
        gbc.writeMem(0x62fa, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x7fa, gbc.sp());
        EXPECT(0x62fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 015E
        gbc.setState(0x277c, 0x4199, 0x62b0, 0xdd29, 0x45a1, 0x2c1c, 0x0, 0x1);
        gbc.writeMem(0x277c, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x4199, gbc.sp());
        EXPECT(0x277e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 015F
        gbc.setState(0xde5, 0x7a74, 0x76d0, 0x2593, 0x5374, 0xc640, 0x0, 0x1);
        gbc.writeMem(0xde5, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x7a74, gbc.sp());
        EXPECT(0xde7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 0160
        gbc.setState(0x32bd, 0x9e87, 0xd640, 0xbf81, 0x3a3b, 0x2f79, 0x1, 0x1);
        gbc.writeMem(0x32bd, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x9e87, gbc.sp());
        EXPECT(0x32bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A0 0161
        gbc.setState(0x9f12, 0x3887, 0xe0, 0x6eb5, 0x3711, 0x62e3, 0x1, 0x1);
        gbc.writeMem(0x9f12, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x3887, gbc.sp());
        EXPECT(0x9f14, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f12));
        EXPECT(0xa0, gbc.readMem(0x9f13));
        // CB A0 0162
        gbc.setState(0x4c81, 0xbe64, 0xa4d0, 0xd531, 0xc604, 0x25df, 0x0, 0x0);
        gbc.writeMem(0x4c81, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xbe64, gbc.sp());
        EXPECT(0x4c83, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 0163
        gbc.setState(0x1e48, 0xcb56, 0xe350, 0xe22e, 0x88f3, 0xedc9, 0x1, 0x0);
        gbc.writeMem(0x1e48, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xcb56, gbc.sp());
        EXPECT(0x1e4a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 0164
        gbc.setState(0xdb80, 0xc687, 0x6130, 0xef35, 0xcb6e, 0x6db1, 0x1, 0x0);
        gbc.writeMem(0xdb80, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xc687, gbc.sp());
        EXPECT(0xdb82, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb80));
        EXPECT(0xa0, gbc.readMem(0xdb81));
        // CB A0 0165
        gbc.setState(0x6a50, 0x56c9, 0x3350, 0x13ae, 0xef21, 0x35e1, 0x1, 0x0);
        gbc.writeMem(0x6a50, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x56c9, gbc.sp());
        EXPECT(0x6a52, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 0166
        gbc.setState(0x5559, 0x5e14, 0x84a0, 0x9240, 0x98c3, 0x3855, 0x1, 0x1);
        gbc.writeMem(0x5559, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x5e14, gbc.sp());
        EXPECT(0x555b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A0 0167
        gbc.setState(0xaf9a, 0xd961, 0x6bc0, 0x1556, 0x7cb4, 0xe277, 0x0, 0x1);
        gbc.writeMem(0xaf9a, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xd961, gbc.sp());
        EXPECT(0xaf9c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf9a));
        EXPECT(0xa0, gbc.readMem(0xaf9b));
        // CB A0 0168
        gbc.setState(0xe056, 0x76d9, 0xcb50, 0x3fe9, 0xd83, 0xc294, 0x0, 0x1);
        gbc.writeMem(0xe056, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x76d9, gbc.sp());
        EXPECT(0xe058, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe056));
        EXPECT(0xa0, gbc.readMem(0xe057));
        // CB A0 0169
        gbc.setState(0x879e, 0xe591, 0xdac0, 0x266, 0xd385, 0xec9a, 0x1, 0x0);
        gbc.writeMem(0x879e, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xe591, gbc.sp());
        EXPECT(0x87a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x879e));
        EXPECT(0xa0, gbc.readMem(0x879f));
        // CB A0 016A
        gbc.setState(0x73b2, 0x4b83, 0x2ac0, 0x390b, 0x1b4e, 0xbcbb, 0x0, 0x0);
        gbc.writeMem(0x73b2, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x4b83, gbc.sp());
        EXPECT(0x73b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A0 016B
        gbc.setState(0x5566, 0xfc1b, 0x8ca0, 0x1729, 0x950f, 0xed73, 0x0, 0x1);
        gbc.writeMem(0x5566, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xfc1b, gbc.sp());
        EXPECT(0x5568, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A0 016C
        gbc.setState(0x2983, 0x22f, 0xc730, 0xdc78, 0x80c0, 0xbbc4, 0x1, 0x0);
        gbc.writeMem(0x2983, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x22f, gbc.sp());
        EXPECT(0x2985, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 016D
        gbc.setState(0x9f57, 0x7489, 0x8410, 0xd9b5, 0xb393, 0x2baf, 0x0, 0x1);
        gbc.writeMem(0x9f57, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x7489, gbc.sp());
        EXPECT(0x9f59, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f57));
        EXPECT(0xa0, gbc.readMem(0x9f58));
        // CB A0 016E
        gbc.setState(0x5b74, 0x5322, 0x2430, 0xf4a1, 0x614b, 0x8d65, 0x1, 0x1);
        gbc.writeMem(0x5b74, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x5322, gbc.sp());
        EXPECT(0x5b76, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 016F
        gbc.setState(0xb65e, 0x2b98, 0xafa0, 0x3b64, 0xa4e5, 0x9b9d, 0x1, 0x1);
        gbc.writeMem(0xb65e, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x2b98, gbc.sp());
        EXPECT(0xb660, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb65e));
        EXPECT(0xa0, gbc.readMem(0xb65f));
        // CB A0 0170
        gbc.setState(0xb236, 0xbe1a, 0xc290, 0x1c6e, 0x1703, 0x4dec, 0x1, 0x1);
        gbc.writeMem(0xb236, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xbe1a, gbc.sp());
        EXPECT(0xb238, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb236));
        EXPECT(0xa0, gbc.readMem(0xb237));
        // CB A0 0171
        gbc.setState(0x3665, 0xc930, 0x9030, 0x7ba3, 0xc011, 0xa981, 0x1, 0x1);
        gbc.writeMem(0x3665, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xc930, gbc.sp());
        EXPECT(0x3667, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 0172
        gbc.setState(0x5952, 0xdaca, 0x9de0, 0xad70, 0xd17b, 0xf472, 0x0, 0x1);
        gbc.writeMem(0x5952, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xdaca, gbc.sp());
        EXPECT(0x5954, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A0 0173
        gbc.setState(0xa20c, 0xbd29, 0xe140, 0x3d51, 0x233, 0x2c9a, 0x0, 0x0);
        gbc.writeMem(0xa20c, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xbd29, gbc.sp());
        EXPECT(0xa20e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa20c));
        EXPECT(0xa0, gbc.readMem(0xa20d));
        // CB A0 0174
        gbc.setState(0x8fe5, 0xd4df, 0x7640, 0xab7d, 0xa9e6, 0xfbd5, 0x0, 0x0);
        gbc.writeMem(0x8fe5, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xd4df, gbc.sp());
        EXPECT(0x8fe7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8fe5));
        EXPECT(0xa0, gbc.readMem(0x8fe6));
        // CB A0 0175
        gbc.setState(0xb00a, 0xdef6, 0xd7f0, 0x364e, 0x29dc, 0x6eeb, 0x1, 0x1);
        gbc.writeMem(0xb00a, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xdef6, gbc.sp());
        EXPECT(0xb00c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb00a));
        EXPECT(0xa0, gbc.readMem(0xb00b));
        // CB A0 0176
        gbc.setState(0xd255, 0x6eed, 0x9a70, 0x5cae, 0xc616, 0x149a, 0x1, 0x1);
        gbc.writeMem(0xd255, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x6eed, gbc.sp());
        EXPECT(0xd257, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd255));
        EXPECT(0xa0, gbc.readMem(0xd256));
        // CB A0 0178
        gbc.setState(0x322c, 0xa3e4, 0xd3c0, 0xb1cf, 0x5201, 0x7fd3, 0x1, 0x1);
        gbc.writeMem(0x322c, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xa3e4, gbc.sp());
        EXPECT(0x322e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A0 0179
        gbc.setState(0x6492, 0x84fd, 0x43a0, 0xb281, 0xdff3, 0xcc6e, 0x0, 0x1);
        gbc.writeMem(0x6492, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x84fd, gbc.sp());
        EXPECT(0x6494, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A0 017A
        gbc.setState(0xc8c6, 0x4e2, 0x4b0, 0x5e6, 0xd793, 0x5a92, 0x1, 0x0);
        gbc.writeMem(0xc8c6, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x4e2, gbc.sp());
        EXPECT(0xc8c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc8c6));
        EXPECT(0xa0, gbc.readMem(0xc8c7));
        // CB A0 017B
        gbc.setState(0x22f3, 0x6a2c, 0x7dd0, 0x3a57, 0x50c6, 0xa644, 0x0, 0x0);
        gbc.writeMem(0x22f3, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x6a2c, gbc.sp());
        EXPECT(0x22f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 017C
        gbc.setState(0x1618, 0xab7b, 0x3a60, 0x44e4, 0x3a04, 0x3fef, 0x0, 0x0);
        gbc.writeMem(0x1618, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xab7b, gbc.sp());
        EXPECT(0x161a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A0 017D
        gbc.setState(0x7a26, 0x32b, 0x6fe0, 0x9648, 0xa6a1, 0xa64b, 0x0, 0x0);
        gbc.writeMem(0x7a26, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x32b, gbc.sp());
        EXPECT(0x7a28, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A0 017F
        gbc.setState(0x8b8f, 0x24cb, 0x1590, 0xbcdc, 0x648b, 0xc531, 0x1, 0x1);
        gbc.writeMem(0x8b8f, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x24cb, gbc.sp());
        EXPECT(0x8b91, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b8f));
        EXPECT(0xa0, gbc.readMem(0x8b90));
        // CB A0 0180
        gbc.setState(0x4715, 0x3034, 0xf9e0, 0xb85, 0x406c, 0xa21d, 0x1, 0x1);
        gbc.writeMem(0x4715, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x3034, gbc.sp());
        EXPECT(0x4717, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A0 0182
        gbc.setState(0x1ddf, 0xfea7, 0x3020, 0xe511, 0xd0f0, 0x9c76, 0x1, 0x0);
        gbc.writeMem(0x1ddf, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xfea7, gbc.sp());
        EXPECT(0x1de1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A0 0183
        gbc.setState(0x1452, 0xa148, 0x53a0, 0x7cab, 0x6940, 0x6265, 0x0, 0x0);
        gbc.writeMem(0x1452, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xa148, gbc.sp());
        EXPECT(0x1454, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A0 0184
        gbc.setState(0x749f, 0xaf48, 0xf420, 0x1adf, 0x2d00, 0x4a4, 0x1, 0x1);
        gbc.writeMem(0x749f, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xaf48, gbc.sp());
        EXPECT(0x74a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A0 0185
        gbc.setState(0x5dd8, 0x8c7d, 0xe790, 0xc98d, 0xea2d, 0x53f5, 0x1, 0x1);
        gbc.writeMem(0x5dd8, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x8c7d, gbc.sp());
        EXPECT(0x5dda, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 0186
        gbc.setState(0xe9, 0x29da, 0xe060, 0x94da, 0x9b53, 0x5592, 0x1, 0x1);
        gbc.writeMem(0xe9, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x29da, gbc.sp());
        EXPECT(0xeb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A0 0187
        gbc.setState(0x7c85, 0x5b1, 0x1fb0, 0xbe38, 0xd223, 0xd85b, 0x1, 0x0);
        gbc.writeMem(0x7c85, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x5b1, gbc.sp());
        EXPECT(0x7c87, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 0188
        gbc.setState(0x95e3, 0xbd3, 0x7d40, 0x8271, 0xf804, 0x9158, 0x1, 0x0);
        gbc.writeMem(0x95e3, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xbd3, gbc.sp());
        EXPECT(0x95e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x95e3));
        EXPECT(0xa0, gbc.readMem(0x95e4));
        // CB A0 0189
        gbc.setState(0xc5dc, 0x7b10, 0xd640, 0x54d7, 0x1cbc, 0x2032, 0x0, 0x1);
        gbc.writeMem(0xc5dc, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x7b10, gbc.sp());
        EXPECT(0xc5de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc5dc));
        EXPECT(0xa0, gbc.readMem(0xc5dd));
        // CB A0 018B
        gbc.setState(0x52f0, 0xbe1b, 0x2430, 0x78d0, 0x32c8, 0x63ad, 0x1, 0x1);
        gbc.writeMem(0x52f0, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xbe1b, gbc.sp());
        EXPECT(0x52f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 018C
        gbc.setState(0x5372, 0xe3c7, 0x3a70, 0xaae0, 0x1c9e, 0xcf05, 0x0, 0x0);
        gbc.writeMem(0x5372, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xe3c7, gbc.sp());
        EXPECT(0x5374, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 018D
        gbc.setState(0xe1c1, 0x28c5, 0x1c80, 0xb330, 0xd6a7, 0x2575, 0x1, 0x1);
        gbc.writeMem(0xe1c1, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x28c5, gbc.sp());
        EXPECT(0xe1c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe1c1));
        EXPECT(0xa0, gbc.readMem(0xe1c2));
        // CB A0 018E
        gbc.setState(0xcc5e, 0x8ce7, 0x35a0, 0xcd91, 0x2b5f, 0x9eca, 0x1, 0x1);
        gbc.writeMem(0xcc5e, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x8ce7, gbc.sp());
        EXPECT(0xcc60, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc5e));
        EXPECT(0xa0, gbc.readMem(0xcc5f));
        // CB A0 018F
        gbc.setState(0x83ad, 0xd5c, 0xa530, 0xfd4c, 0x9729, 0xf2c3, 0x0, 0x0);
        gbc.writeMem(0x83ad, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xd5c, gbc.sp());
        EXPECT(0x83af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x83ad));
        EXPECT(0xa0, gbc.readMem(0x83ae));
        // CB A0 0190
        gbc.setState(0x3bc6, 0x2092, 0x7540, 0x7fd, 0x8c0, 0x1cfb, 0x0, 0x0);
        gbc.writeMem(0x3bc6, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x2092, gbc.sp());
        EXPECT(0x3bc8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A0 0191
        gbc.setState(0xb3fd, 0x7b1a, 0xa0c0, 0x7edc, 0x1065, 0xe212, 0x0, 0x0);
        gbc.writeMem(0xb3fd, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x7b1a, gbc.sp());
        EXPECT(0xb3ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb3fd));
        EXPECT(0xa0, gbc.readMem(0xb3fe));
        // CB A0 0192
        gbc.setState(0xcfde, 0x4070, 0x48c0, 0x4c48, 0xa2ec, 0x34a6, 0x0, 0x0);
        gbc.writeMem(0xcfde, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x4070, gbc.sp());
        EXPECT(0xcfe0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcfde));
        EXPECT(0xa0, gbc.readMem(0xcfdf));
        // CB A0 0193
        gbc.setState(0xec0d, 0x7d7f, 0x7340, 0x5afd, 0x3146, 0xc437, 0x0, 0x0);
        gbc.writeMem(0xec0d, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x7d7f, gbc.sp());
        EXPECT(0xec0f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec0d));
        EXPECT(0xa0, gbc.readMem(0xec0e));
        // CB A0 0194
        gbc.setState(0x51ed, 0x22b9, 0x3a50, 0xbcfe, 0xba22, 0xb86d, 0x1, 0x1);
        gbc.writeMem(0x51ed, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x22b9, gbc.sp());
        EXPECT(0x51ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 0195
        gbc.setState(0x7b81, 0xe5ca, 0x2750, 0xbeb2, 0x46fc, 0xaed8, 0x1, 0x1);
        gbc.writeMem(0x7b81, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xe5ca, gbc.sp());
        EXPECT(0x7b83, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 0196
        gbc.setState(0x9774, 0x53f1, 0x66e0, 0xe925, 0x83, 0x6c81, 0x0, 0x1);
        gbc.writeMem(0x9774, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x53f1, gbc.sp());
        EXPECT(0x9776, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9774));
        EXPECT(0xa0, gbc.readMem(0x9775));
        // CB A0 0197
        gbc.setState(0xd87e, 0xc08f, 0x6a90, 0x2a80, 0x8a33, 0xa6c6, 0x0, 0x0);
        gbc.writeMem(0xd87e, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xc08f, gbc.sp());
        EXPECT(0xd880, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd87e));
        EXPECT(0xa0, gbc.readMem(0xd87f));
        // CB A0 0198
        gbc.setState(0x6ec7, 0x4d42, 0x20, 0xfeb, 0x42b9, 0xe80e, 0x1, 0x1);
        gbc.writeMem(0x6ec7, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x4d42, gbc.sp());
        EXPECT(0x6ec9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A0 0199
        gbc.setState(0xd9f2, 0xe7cd, 0xc660, 0x4ae0, 0xb004, 0xeb63, 0x1, 0x0);
        gbc.writeMem(0xd9f2, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xe7cd, gbc.sp());
        EXPECT(0xd9f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd9f2));
        EXPECT(0xa0, gbc.readMem(0xd9f3));
        // CB A0 019A
        gbc.setState(0x6e91, 0xd4f2, 0x7d70, 0x97d4, 0xc119, 0x4b10, 0x0, 0x1);
        gbc.writeMem(0x6e91, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xd4f2, gbc.sp());
        EXPECT(0x6e93, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 019B
        gbc.setState(0x6b6d, 0x9b5e, 0x7a50, 0xa028, 0xed6e, 0x9e, 0x1, 0x1);
        gbc.writeMem(0x6b6d, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x9b5e, gbc.sp());
        EXPECT(0x6b6f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 019C
        gbc.setState(0xeafc, 0xe564, 0x8cd0, 0xef0d, 0x21a2, 0xda3b, 0x1, 0x1);
        gbc.writeMem(0xeafc, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xe564, gbc.sp());
        EXPECT(0xeafe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeafc));
        EXPECT(0xa0, gbc.readMem(0xeafd));
        // CB A0 019D
        gbc.setState(0xc3f3, 0x9ced, 0x6af0, 0xcd6b, 0x19bf, 0x1d72, 0x0, 0x0);
        gbc.writeMem(0xc3f3, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x9ced, gbc.sp());
        EXPECT(0xc3f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc3f3));
        EXPECT(0xa0, gbc.readMem(0xc3f4));
        // CB A0 019E
        gbc.setState(0xbf45, 0x441b, 0xea60, 0xa612, 0xc94e, 0x548a, 0x1, 0x1);
        gbc.writeMem(0xbf45, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x441b, gbc.sp());
        EXPECT(0xbf47, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf45));
        EXPECT(0xa0, gbc.readMem(0xbf46));
        // CB A0 019F
        gbc.setState(0x9b71, 0x35dd, 0xe760, 0xf32b, 0xf93f, 0x59e0, 0x0, 0x0);
        gbc.writeMem(0x9b71, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x35dd, gbc.sp());
        EXPECT(0x9b73, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b71));
        EXPECT(0xa0, gbc.readMem(0x9b72));
        // CB A0 01A0
        gbc.setState(0xbd2e, 0x49f3, 0x6bb0, 0x360, 0x8d61, 0xf6f4, 0x1, 0x0);
        gbc.writeMem(0xbd2e, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x49f3, gbc.sp());
        EXPECT(0xbd30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd2e));
        EXPECT(0xa0, gbc.readMem(0xbd2f));
        // CB A0 01A1
        gbc.setState(0xd638, 0x1b49, 0x1ec0, 0x3eb0, 0x231b, 0x4d59, 0x0, 0x0);
        gbc.writeMem(0xd638, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x1b49, gbc.sp());
        EXPECT(0xd63a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd638));
        EXPECT(0xa0, gbc.readMem(0xd639));
        // CB A0 01A3
        gbc.setState(0x6a38, 0x7e10, 0x2500, 0xe4fc, 0x94c6, 0x5f99, 0x0, 0x1);
        gbc.writeMem(0x6a38, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x7e10, gbc.sp());
        EXPECT(0x6a3a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A0 01A4
        gbc.setState(0x149c, 0x990f, 0x6ae0, 0x49ab, 0x97cb, 0xabee, 0x1, 0x1);
        gbc.writeMem(0x149c, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x990f, gbc.sp());
        EXPECT(0x149e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A0 01A5
        gbc.setState(0x1a75, 0x3f6f, 0xe640, 0x7b2b, 0x9eb8, 0xf7b0, 0x0, 0x0);
        gbc.writeMem(0x1a75, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x3f6f, gbc.sp());
        EXPECT(0x1a77, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A0 01A6
        gbc.setState(0xbcbc, 0xdbae, 0xbb40, 0x390, 0x30f1, 0xba47, 0x1, 0x0);
        gbc.writeMem(0xbcbc, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xdbae, gbc.sp());
        EXPECT(0xbcbe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbcbc));
        EXPECT(0xa0, gbc.readMem(0xbcbd));
        // CB A0 01A7
        gbc.setState(0xe8aa, 0x74bd, 0xa7b0, 0x7d34, 0xce27, 0xb872, 0x0, 0x0);
        gbc.writeMem(0xe8aa, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x74bd, gbc.sp());
        EXPECT(0xe8ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe8aa));
        EXPECT(0xa0, gbc.readMem(0xe8ab));
        // CB A0 01A8
        gbc.setState(0xef6f, 0xb199, 0x2d10, 0x55c6, 0x359f, 0x3caf, 0x0, 0x0);
        gbc.writeMem(0xef6f, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xb199, gbc.sp());
        EXPECT(0xef71, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef6f));
        EXPECT(0xa0, gbc.readMem(0xef70));
        // CB A0 01A9
        gbc.setState(0x57c5, 0x3cd6, 0x8fc0, 0xfbe9, 0x69bd, 0x9cb8, 0x1, 0x0);
        gbc.writeMem(0x57c5, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x3cd6, gbc.sp());
        EXPECT(0x57c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A0 01AA
        gbc.setState(0x2794, 0x25d8, 0x8f40, 0x4aeb, 0x44e7, 0x928, 0x1, 0x0);
        gbc.writeMem(0x2794, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x25d8, gbc.sp());
        EXPECT(0x2796, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A0 01AB
        gbc.setState(0x3f9, 0x5d08, 0x9140, 0x240a, 0x426b, 0x1c09, 0x0, 0x1);
        gbc.writeMem(0x3f9, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x5d08, gbc.sp());
        EXPECT(0x3fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A0 01AC
        gbc.setState(0x588b, 0x801f, 0x5550, 0x3734, 0x2f86, 0xfeb2, 0x1, 0x0);
        gbc.writeMem(0x588b, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x801f, gbc.sp());
        EXPECT(0x588d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 01AD
        gbc.setState(0x9ddf, 0xc052, 0x3bd0, 0xc5c1, 0x4e18, 0x6995, 0x0, 0x1);
        gbc.writeMem(0x9ddf, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xc052, gbc.sp());
        EXPECT(0x9de1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ddf));
        EXPECT(0xa0, gbc.readMem(0x9de0));
        // CB A0 01AE
        gbc.setState(0x6992, 0xc314, 0x4950, 0xc659, 0x2753, 0x2035, 0x0, 0x0);
        gbc.writeMem(0x6992, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xc314, gbc.sp());
        EXPECT(0x6994, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 01AF
        gbc.setState(0x3488, 0xdf68, 0x63d0, 0x9c9a, 0x74a5, 0xe888, 0x1, 0x1);
        gbc.writeMem(0x3488, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xdf68, gbc.sp());
        EXPECT(0x348a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 01B1
        gbc.setState(0x2daf, 0x571f, 0xbff0, 0xc3e0, 0x528e, 0xd093, 0x0, 0x1);
        gbc.writeMem(0x2daf, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x571f, gbc.sp());
        EXPECT(0x2db1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 01B2
        gbc.setState(0xc2d, 0x57bb, 0xfa10, 0x14e0, 0x847d, 0x14bf, 0x0, 0x1);
        gbc.writeMem(0xc2d, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x57bb, gbc.sp());
        EXPECT(0xc2f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 01B3
        gbc.setState(0x305f, 0xf394, 0xadc0, 0x8b0b, 0x5ba8, 0xf8d3, 0x1, 0x1);
        gbc.writeMem(0x305f, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xf394, gbc.sp());
        EXPECT(0x3061, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A0 01B4
        gbc.setState(0xb408, 0x22c2, 0x9b80, 0x1832, 0x96c2, 0x5dc8, 0x1, 0x1);
        gbc.writeMem(0xb408, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x22c2, gbc.sp());
        EXPECT(0xb40a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb408));
        EXPECT(0xa0, gbc.readMem(0xb409));
        // CB A0 01B5
        gbc.setState(0x5d5d, 0x317a, 0x8b60, 0xb43, 0x287e, 0xeb9f, 0x0, 0x0);
        gbc.writeMem(0x5d5d, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x317a, gbc.sp());
        EXPECT(0x5d5f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A0 01B6
        gbc.setState(0x4427, 0x11f7, 0x6380, 0x7806, 0x1aa9, 0xfe, 0x0, 0x0);
        gbc.writeMem(0x4427, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x11f7, gbc.sp());
        EXPECT(0x4429, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A0 01B7
        gbc.setState(0x171c, 0x8169, 0xbf90, 0x8ee4, 0x658e, 0x9b1c, 0x1, 0x1);
        gbc.writeMem(0x171c, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x8169, gbc.sp());
        EXPECT(0x171e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 01B8
        gbc.setState(0x45f4, 0x7a03, 0x3210, 0x8a57, 0x32c2, 0x79ac, 0x1, 0x1);
        gbc.writeMem(0x45f4, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x7a03, gbc.sp());
        EXPECT(0x45f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 01B9
        gbc.setState(0x9ce3, 0xb01e, 0x65d0, 0x70f7, 0x141f, 0x4537, 0x0, 0x1);
        gbc.writeMem(0x9ce3, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xb01e, gbc.sp());
        EXPECT(0x9ce5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ce3));
        EXPECT(0xa0, gbc.readMem(0x9ce4));
        // CB A0 01BA
        gbc.setState(0x4fb2, 0xd0d1, 0x2fe0, 0x2335, 0x704f, 0x88a0, 0x1, 0x1);
        gbc.writeMem(0x4fb2, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xd0d1, gbc.sp());
        EXPECT(0x4fb4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A0 01BB
        gbc.setState(0xed83, 0xab80, 0xd8f0, 0x1357, 0x5aef, 0x58ff, 0x0, 0x0);
        gbc.writeMem(0xed83, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xab80, gbc.sp());
        EXPECT(0xed85, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed83));
        EXPECT(0xa0, gbc.readMem(0xed84));
        // CB A0 01BC
        gbc.setState(0xa285, 0xbf76, 0x4590, 0xb571, 0xf3b0, 0x172a, 0x1, 0x1);
        gbc.writeMem(0xa285, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xbf76, gbc.sp());
        EXPECT(0xa287, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa285));
        EXPECT(0xa0, gbc.readMem(0xa286));
        // CB A0 01BD
        gbc.setState(0xb4e7, 0xeae6, 0x5820, 0xa92b, 0xb3, 0xfa78, 0x1, 0x0);
        gbc.writeMem(0xb4e7, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xeae6, gbc.sp());
        EXPECT(0xb4e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb4e7));
        EXPECT(0xa0, gbc.readMem(0xb4e8));
        // CB A0 01BE
        gbc.setState(0x5b1b, 0x3b18, 0x9e90, 0xbc8f, 0x71d3, 0x4b78, 0x1, 0x1);
        gbc.writeMem(0x5b1b, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x3b18, gbc.sp());
        EXPECT(0x5b1d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 01BF
        gbc.setState(0xfa6, 0x7a78, 0xbfe0, 0x8ddc, 0x4edc, 0xd91c, 0x1, 0x0);
        gbc.writeMem(0xfa6, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x7a78, gbc.sp());
        EXPECT(0xfa8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A0 01C0
        gbc.setState(0xedab, 0xd582, 0xe220, 0x7981, 0x760f, 0xf07e, 0x0, 0x1);
        gbc.writeMem(0xedab, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xd582, gbc.sp());
        EXPECT(0xedad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xedab));
        EXPECT(0xa0, gbc.readMem(0xedac));
        // CB A0 01C1
        gbc.setState(0xc304, 0xf940, 0x4c0, 0x583d, 0xb4e0, 0x5632, 0x0, 0x1);
        gbc.writeMem(0xc304, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xf940, gbc.sp());
        EXPECT(0xc306, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc304));
        EXPECT(0xa0, gbc.readMem(0xc305));
        // CB A0 01C2
        gbc.setState(0x7106, 0x5934, 0xf060, 0x27f9, 0x7db5, 0xc31c, 0x1, 0x1);
        gbc.writeMem(0x7106, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x5934, gbc.sp());
        EXPECT(0x7108, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A0 01C3
        gbc.setState(0xb391, 0xf757, 0xb4f0, 0xf7a1, 0xdb3a, 0x55aa, 0x1, 0x0);
        gbc.writeMem(0xb391, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xf757, gbc.sp());
        EXPECT(0xb393, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb391));
        EXPECT(0xa0, gbc.readMem(0xb392));
        // CB A0 01C4
        gbc.setState(0xe77a, 0x9786, 0xa1e0, 0xf1e9, 0xf9df, 0x541c, 0x1, 0x1);
        gbc.writeMem(0xe77a, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x9786, gbc.sp());
        EXPECT(0xe77c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe77a));
        EXPECT(0xa0, gbc.readMem(0xe77b));
        // CB A0 01C5
        gbc.setState(0xabaf, 0xfe32, 0xd3f0, 0x5156, 0xb277, 0x9864, 0x1, 0x1);
        gbc.writeMem(0xabaf, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xfe32, gbc.sp());
        EXPECT(0xabb1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xabaf));
        EXPECT(0xa0, gbc.readMem(0xabb0));
        // CB A0 01C6
        gbc.setState(0x7dbc, 0x2fc7, 0xaaf0, 0x8709, 0x5a0e, 0x3dc, 0x1, 0x1);
        gbc.writeMem(0x7dbc, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x2fc7, gbc.sp());
        EXPECT(0x7dbe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 01C7
        gbc.setState(0x1f2f, 0x96d5, 0xb1b0, 0x2791, 0xea23, 0x6a08, 0x0, 0x0);
        gbc.writeMem(0x1f2f, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x96d5, gbc.sp());
        EXPECT(0x1f31, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 01C8
        gbc.setState(0x7b3a, 0xbcfd, 0x3910, 0xece2, 0xe210, 0x1e5e, 0x1, 0x0);
        gbc.writeMem(0x7b3a, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xbcfd, gbc.sp());
        EXPECT(0x7b3c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 01C9
        gbc.setState(0xb3d2, 0x9929, 0xdcb0, 0x8ad3, 0x3a2f, 0xe471, 0x0, 0x1);
        gbc.writeMem(0xb3d2, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x9929, gbc.sp());
        EXPECT(0xb3d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb3d2));
        EXPECT(0xa0, gbc.readMem(0xb3d3));
        // CB A0 01CA
        gbc.setState(0x5982, 0xac34, 0x1930, 0xb91a, 0xe9d0, 0x44c8, 0x0, 0x0);
        gbc.writeMem(0x5982, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xac34, gbc.sp());
        EXPECT(0x5984, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 01CB
        gbc.setState(0x2ea8, 0x66bb, 0x52c0, 0xa3e3, 0xf484, 0xab8d, 0x1, 0x0);
        gbc.writeMem(0x2ea8, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x66bb, gbc.sp());
        EXPECT(0x2eaa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A0 01CC
        gbc.setState(0xd27a, 0x43c1, 0x8620, 0x936d, 0x8118, 0x4baa, 0x0, 0x1);
        gbc.writeMem(0xd27a, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x43c1, gbc.sp());
        EXPECT(0xd27c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd27a));
        EXPECT(0xa0, gbc.readMem(0xd27b));
        // CB A0 01CE
        gbc.setState(0x788c, 0x74a1, 0xcde0, 0xbd99, 0x5593, 0x415, 0x1, 0x0);
        gbc.writeMem(0x788c, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x74a1, gbc.sp());
        EXPECT(0x788e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A0 01CF
        gbc.setState(0x61dd, 0xa37b, 0x7b0, 0xa745, 0xe73f, 0xc69f, 0x1, 0x0);
        gbc.writeMem(0x61dd, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xa37b, gbc.sp());
        EXPECT(0x61df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 01D0
        gbc.setState(0x8bd, 0x5ffb, 0x2160, 0xdfb2, 0x8c39, 0x2200, 0x1, 0x0);
        gbc.writeMem(0x8bd, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x5ffb, gbc.sp());
        EXPECT(0x8bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A0 01D1
        gbc.setState(0x12dc, 0x736b, 0x5f40, 0x620d, 0xb93f, 0xee20, 0x0, 0x1);
        gbc.writeMem(0x12dc, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x736b, gbc.sp());
        EXPECT(0x12de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A0 01D3
        gbc.setState(0xc361, 0x70f4, 0xe670, 0x48fe, 0xfca, 0xd351, 0x1, 0x1);
        gbc.writeMem(0xc361, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x70f4, gbc.sp());
        EXPECT(0xc363, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc361));
        EXPECT(0xa0, gbc.readMem(0xc362));
        // CB A0 01D4
        gbc.setState(0xcf1, 0x2631, 0x4630, 0x630f, 0x2c38, 0x1454, 0x0, 0x0);
        gbc.writeMem(0xcf1, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x2631, gbc.sp());
        EXPECT(0xcf3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 01D5
        gbc.setState(0xea2, 0xbd50, 0x97f0, 0xe5a0, 0xec8d, 0xeadc, 0x0, 0x0);
        gbc.writeMem(0xea2, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xbd50, gbc.sp());
        EXPECT(0xea4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 01D6
        gbc.setState(0xcaeb, 0xb9fc, 0xbe50, 0x1c28, 0xea8, 0x9656, 0x1, 0x1);
        gbc.writeMem(0xcaeb, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xb9fc, gbc.sp());
        EXPECT(0xcaed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcaeb));
        EXPECT(0xa0, gbc.readMem(0xcaec));
        // CB A0 01D8
        gbc.setState(0x30db, 0xe1cc, 0x3d90, 0xffed, 0x943e, 0x5502, 0x1, 0x0);
        gbc.writeMem(0x30db, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xe1cc, gbc.sp());
        EXPECT(0x30dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 01D9
        gbc.setState(0x11f0, 0xe14e, 0xb7f0, 0x8d5e, 0x4aa8, 0x4cd9, 0x0, 0x1);
        gbc.writeMem(0x11f0, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xe14e, gbc.sp());
        EXPECT(0x11f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 01DA
        gbc.setState(0x75c9, 0x3478, 0xcf60, 0x9454, 0x64b1, 0x869b, 0x0, 0x0);
        gbc.writeMem(0x75c9, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x3478, gbc.sp());
        EXPECT(0x75cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A0 01DC
        gbc.setState(0x4945, 0x3e33, 0x7590, 0xc1f6, 0x6c06, 0x5ee0, 0x1, 0x1);
        gbc.writeMem(0x4945, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x3e33, gbc.sp());
        EXPECT(0x4947, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 01DD
        gbc.setState(0x815b, 0xa561, 0x7490, 0xa868, 0xddbe, 0xe19e, 0x0, 0x1);
        gbc.writeMem(0x815b, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xa561, gbc.sp());
        EXPECT(0x815d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x815b));
        EXPECT(0xa0, gbc.readMem(0x815c));
        // CB A0 01DE
        gbc.setState(0x3baa, 0xf1d, 0x4880, 0x45bf, 0x1d51, 0x777c, 0x0, 0x0);
        gbc.writeMem(0x3baa, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xf1d, gbc.sp());
        EXPECT(0x3bac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A0 01DF
        gbc.setState(0x5cef, 0x1bc6, 0x2810, 0x4a84, 0x1d87, 0x9fd9, 0x1, 0x0);
        gbc.writeMem(0x5cef, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x1bc6, gbc.sp());
        EXPECT(0x5cf1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 01E0
        gbc.setState(0x7324, 0x5366, 0x540, 0x7e12, 0x17dc, 0x1690, 0x0, 0x0);
        gbc.writeMem(0x7324, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x5366, gbc.sp());
        EXPECT(0x7326, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A0 01E1
        gbc.setState(0xe391, 0x2aac, 0xc990, 0xdad3, 0x5794, 0xdc7f, 0x0, 0x0);
        gbc.writeMem(0xe391, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x2aac, gbc.sp());
        EXPECT(0xe393, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe391));
        EXPECT(0xa0, gbc.readMem(0xe392));
        // CB A0 01E3
        gbc.setState(0xd49c, 0x9b27, 0x2210, 0x9181, 0xa5fa, 0x241, 0x1, 0x1);
        gbc.writeMem(0xd49c, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x9b27, gbc.sp());
        EXPECT(0xd49e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd49c));
        EXPECT(0xa0, gbc.readMem(0xd49d));
        // CB A0 01E4
        gbc.setState(0x2079, 0xdc9b, 0xd090, 0x9a7, 0x60ab, 0x8c8e, 0x0, 0x1);
        gbc.writeMem(0x2079, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xdc9b, gbc.sp());
        EXPECT(0x207b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 01E5
        gbc.setState(0x4d35, 0xb593, 0x5b70, 0x492, 0xd41e, 0xc0a2, 0x0, 0x0);
        gbc.writeMem(0x4d35, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xb593, gbc.sp());
        EXPECT(0x4d37, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 01E6
        gbc.setState(0x15ba, 0x94ca, 0xf670, 0xa950, 0x4626, 0x86dc, 0x1, 0x1);
        gbc.writeMem(0x15ba, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x94ca, gbc.sp());
        EXPECT(0x15bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 01E7
        gbc.setState(0x4f73, 0xcb5e, 0x43a0, 0x4245, 0x541, 0x2dff, 0x0, 0x1);
        gbc.writeMem(0x4f73, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xcb5e, gbc.sp());
        EXPECT(0x4f75, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A0 01E8
        gbc.setState(0x3e5b, 0xb31c, 0xacb0, 0x1680, 0xb1bb, 0xf1ec, 0x0, 0x1);
        gbc.writeMem(0x3e5b, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xb31c, gbc.sp());
        EXPECT(0x3e5d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 01E9
        gbc.setState(0x5487, 0xe3af, 0xceb0, 0xac31, 0xf848, 0x28e9, 0x0, 0x1);
        gbc.writeMem(0x5487, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xe3af, gbc.sp());
        EXPECT(0x5489, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 01EA
        gbc.setState(0xb709, 0xc52a, 0x3100, 0xfbf5, 0x8eb0, 0xe7bd, 0x1, 0x0);
        gbc.writeMem(0xb709, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xc52a, gbc.sp());
        EXPECT(0xb70b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb709));
        EXPECT(0xa0, gbc.readMem(0xb70a));
        // CB A0 01EB
        gbc.setState(0x4a45, 0x89cb, 0x3c90, 0x165d, 0xf22c, 0x495c, 0x1, 0x1);
        gbc.writeMem(0x4a45, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x89cb, gbc.sp());
        EXPECT(0x4a47, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 01EC
        gbc.setState(0xb380, 0xf9ad, 0xd750, 0xeba, 0xca7a, 0xb083, 0x0, 0x0);
        gbc.writeMem(0xb380, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xf9ad, gbc.sp());
        EXPECT(0xb382, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb380));
        EXPECT(0xa0, gbc.readMem(0xb381));
        // CB A0 01ED
        gbc.setState(0x2ef9, 0x168c, 0x5160, 0xfb5e, 0x1655, 0xe04f, 0x1, 0x1);
        gbc.writeMem(0x2ef9, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x168c, gbc.sp());
        EXPECT(0x2efb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A0 01EE
        gbc.setState(0x924d, 0xa488, 0x3b0, 0x13a1, 0x702a, 0xfa0f, 0x1, 0x1);
        gbc.writeMem(0x924d, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xa488, gbc.sp());
        EXPECT(0x924f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x924d));
        EXPECT(0xa0, gbc.readMem(0x924e));
        // CB A0 01EF
        gbc.setState(0xcf3e, 0x12af, 0xbc20, 0x54eb, 0x9a9f, 0xe6b3, 0x0, 0x0);
        gbc.writeMem(0xcf3e, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x12af, gbc.sp());
        EXPECT(0xcf40, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf3e));
        EXPECT(0xa0, gbc.readMem(0xcf3f));
        // CB A0 01F0
        gbc.setState(0x97c, 0x7bef, 0xa90, 0x540a, 0xcaa6, 0xba84, 0x0, 0x1);
        gbc.writeMem(0x97c, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x7bef, gbc.sp());
        EXPECT(0x97e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 01F1
        gbc.setState(0x73f1, 0xd1d3, 0xe8e0, 0xcb76, 0x10ab, 0xb9ba, 0x0, 0x0);
        gbc.writeMem(0x73f1, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xd1d3, gbc.sp());
        EXPECT(0x73f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A0 01F2
        gbc.setState(0xc90c, 0x937a, 0x5750, 0xc59, 0xaed2, 0x6b68, 0x1, 0x0);
        gbc.writeMem(0xc90c, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x937a, gbc.sp());
        EXPECT(0xc90e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc90c));
        EXPECT(0xa0, gbc.readMem(0xc90d));
        // CB A0 01F3
        gbc.setState(0x3e7c, 0xd877, 0x7640, 0x7bb2, 0xc107, 0xb162, 0x1, 0x1);
        gbc.writeMem(0x3e7c, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xd877, gbc.sp());
        EXPECT(0x3e7e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A0 01F4
        gbc.setState(0x94c4, 0x4020, 0x9920, 0x76c, 0x4e7e, 0x694f, 0x0, 0x1);
        gbc.writeMem(0x94c4, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x4020, gbc.sp());
        EXPECT(0x94c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x94c4));
        EXPECT(0xa0, gbc.readMem(0x94c5));
        // CB A0 01F5
        gbc.setState(0x2ad4, 0x8928, 0x5630, 0x7eb9, 0x43d4, 0x8dc0, 0x1, 0x0);
        gbc.writeMem(0x2ad4, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x8928, gbc.sp());
        EXPECT(0x2ad6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 01F6
        gbc.setState(0x4d89, 0xf8c1, 0x7d90, 0xdc21, 0xc9cd, 0xf688, 0x0, 0x0);
        gbc.writeMem(0x4d89, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xf8c1, gbc.sp());
        EXPECT(0x4d8b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 01F7
        gbc.setState(0x1c69, 0x1ee2, 0x9420, 0x9533, 0xafd7, 0xadc3, 0x0, 0x0);
        gbc.writeMem(0x1c69, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x1ee2, gbc.sp());
        EXPECT(0x1c6b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A0 01F8
        gbc.setState(0x47f, 0xa2c, 0x2d30, 0xf63e, 0xea75, 0xfe83, 0x0, 0x1);
        gbc.writeMem(0x47f, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xa2c, gbc.sp());
        EXPECT(0x481, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 01F9
        gbc.setState(0xa77, 0x5c04, 0x5170, 0xe1e2, 0x4f8f, 0x9d93, 0x0, 0x0);
        gbc.writeMem(0xa77, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x5c04, gbc.sp());
        EXPECT(0xa79, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 01FA
        gbc.setState(0xab34, 0x64e2, 0xd8a0, 0x552c, 0x95a0, 0xd410, 0x0, 0x1);
        gbc.writeMem(0xab34, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x64e2, gbc.sp());
        EXPECT(0xab36, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab34));
        EXPECT(0xa0, gbc.readMem(0xab35));
        // CB A0 01FB
        gbc.setState(0xe493, 0x9fd7, 0x2650, 0xabe8, 0x57b1, 0xb82, 0x1, 0x1);
        gbc.writeMem(0xe493, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x9fd7, gbc.sp());
        EXPECT(0xe495, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe493));
        EXPECT(0xa0, gbc.readMem(0xe494));
        // CB A0 01FC
        gbc.setState(0x2b7f, 0x97de, 0x3c0, 0x83d3, 0xcd17, 0xd4b, 0x0, 0x0);
        gbc.writeMem(0x2b7f, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x97de, gbc.sp());
        EXPECT(0x2b81, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A0 01FD
        gbc.setState(0xcdf7, 0xa4cd, 0x7b60, 0xe3f0, 0xda, 0x1c9d, 0x0, 0x0);
        gbc.writeMem(0xcdf7, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xa4cd, gbc.sp());
        EXPECT(0xcdf9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcdf7));
        EXPECT(0xa0, gbc.readMem(0xcdf8));
        // CB A0 01FE
        gbc.setState(0x603a, 0xde87, 0x2fd0, 0xe796, 0x3a8a, 0x3cfd, 0x1, 0x1);
        gbc.writeMem(0x603a, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xde87, gbc.sp());
        EXPECT(0x603c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 01FF
        gbc.setState(0x8f39, 0x8309, 0x4350, 0xbe22, 0xbf5e, 0x3393, 0x0, 0x1);
        gbc.writeMem(0x8f39, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x8309, gbc.sp());
        EXPECT(0x8f3b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f39));
        EXPECT(0xa0, gbc.readMem(0x8f3a));
        // CB A0 0200
        gbc.setState(0xa049, 0x6b19, 0x8540, 0xf072, 0x6746, 0x2cee, 0x1, 0x1);
        gbc.writeMem(0xa049, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x6b19, gbc.sp());
        EXPECT(0xa04b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa049));
        EXPECT(0xa0, gbc.readMem(0xa04a));
        // CB A0 0201
        gbc.setState(0xbe26, 0x5a15, 0x9050, 0xa13a, 0x22da, 0xbef6, 0x0, 0x0);
        gbc.writeMem(0xbe26, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x5a15, gbc.sp());
        EXPECT(0xbe28, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe26));
        EXPECT(0xa0, gbc.readMem(0xbe27));
        // CB A0 0202
        gbc.setState(0x598e, 0x8268, 0x74d0, 0x6031, 0x991f, 0x13d9, 0x0, 0x0);
        gbc.writeMem(0x598e, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x8268, gbc.sp());
        EXPECT(0x5990, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 0203
        gbc.setState(0x149b, 0x64dd, 0xe4c0, 0x96e0, 0xd340, 0x1f69, 0x0, 0x1);
        gbc.writeMem(0x149b, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x64dd, gbc.sp());
        EXPECT(0x149d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A0 0204
        gbc.setState(0x96fe, 0xc819, 0x4710, 0x2d52, 0x6933, 0xfe01, 0x0, 0x1);
        gbc.writeMem(0x96fe, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xc819, gbc.sp());
        EXPECT(0x9700, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x96fe));
        EXPECT(0xa0, gbc.readMem(0x96ff));
        // CB A0 0205
        gbc.setState(0xdf92, 0x985f, 0xbaf0, 0xc87b, 0x487d, 0x38fa, 0x0, 0x1);
        gbc.writeMem(0xdf92, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x985f, gbc.sp());
        EXPECT(0xdf94, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf92));
        EXPECT(0xa0, gbc.readMem(0xdf93));
        // CB A0 0206
        gbc.setState(0xd7c0, 0x83ec, 0x8180, 0x70ef, 0x3554, 0x9651, 0x1, 0x0);
        gbc.writeMem(0xd7c0, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x83ec, gbc.sp());
        EXPECT(0xd7c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd7c0));
        EXPECT(0xa0, gbc.readMem(0xd7c1));
        // CB A0 0207
        gbc.setState(0x9fd7, 0xaf8c, 0x1450, 0x1a1a, 0xf6c8, 0x97c4, 0x1, 0x1);
        gbc.writeMem(0x9fd7, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xaf8c, gbc.sp());
        EXPECT(0x9fd9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9fd7));
        EXPECT(0xa0, gbc.readMem(0x9fd8));
        // CB A0 0209
        gbc.setState(0xed74, 0x332d, 0xc00, 0xd671, 0xd3a6, 0xd444, 0x0, 0x0);
        gbc.writeMem(0xed74, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x332d, gbc.sp());
        EXPECT(0xed76, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed74));
        EXPECT(0xa0, gbc.readMem(0xed75));
        // CB A0 020A
        gbc.setState(0x9e68, 0x63e4, 0x3270, 0x7b93, 0xaf6b, 0xe078, 0x1, 0x0);
        gbc.writeMem(0x9e68, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x63e4, gbc.sp());
        EXPECT(0x9e6a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e68));
        EXPECT(0xa0, gbc.readMem(0x9e69));
        // CB A0 020B
        gbc.setState(0x4971, 0xf58d, 0x9260, 0x7b9e, 0x581b, 0x860f, 0x0, 0x0);
        gbc.writeMem(0x4971, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xf58d, gbc.sp());
        EXPECT(0x4973, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A0 020C
        gbc.setState(0xe2e1, 0xa902, 0x3300, 0x9cb8, 0x4fb3, 0x1083, 0x0, 0x0);
        gbc.writeMem(0xe2e1, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xa902, gbc.sp());
        EXPECT(0xe2e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe2e1));
        EXPECT(0xa0, gbc.readMem(0xe2e2));
        // CB A0 020D
        gbc.setState(0x7d14, 0xd336, 0xa010, 0x7d71, 0x59f9, 0x6a5f, 0x0, 0x1);
        gbc.writeMem(0x7d14, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xd336, gbc.sp());
        EXPECT(0x7d16, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 020E
        gbc.setState(0x72a, 0x6584, 0x6970, 0x516e, 0xf012, 0xa0b9, 0x1, 0x1);
        gbc.writeMem(0x72a, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x6584, gbc.sp());
        EXPECT(0x72c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 020F
        gbc.setState(0xc19b, 0xe01f, 0xf300, 0xa6d5, 0xa735, 0x732b, 0x1, 0x0);
        gbc.writeMem(0xc19b, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xe01f, gbc.sp());
        EXPECT(0xc19d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc19b));
        EXPECT(0xa0, gbc.readMem(0xc19c));
        // CB A0 0210
        gbc.setState(0x21ac, 0xd901, 0x5ca0, 0xc6e1, 0x28ba, 0xfa33, 0x0, 0x1);
        gbc.writeMem(0x21ac, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xd901, gbc.sp());
        EXPECT(0x21ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A0 0211
        gbc.setState(0x1401, 0x4595, 0xd20, 0xbc67, 0x181f, 0x7b10, 0x1, 0x1);
        gbc.writeMem(0x1401, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x4595, gbc.sp());
        EXPECT(0x1403, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A0 0212
        gbc.setState(0xbfe5, 0x6fd2, 0xa030, 0xef32, 0x597c, 0xce63, 0x1, 0x1);
        gbc.writeMem(0xbfe5, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x6fd2, gbc.sp());
        EXPECT(0xbfe7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbfe5));
        EXPECT(0xa0, gbc.readMem(0xbfe6));
        // CB A0 0213
        gbc.setState(0xcc2f, 0xc263, 0x7d40, 0xf9b6, 0x5d9e, 0x504c, 0x0, 0x0);
        gbc.writeMem(0xcc2f, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xc263, gbc.sp());
        EXPECT(0xcc31, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc2f));
        EXPECT(0xa0, gbc.readMem(0xcc30));
        // CB A0 0214
        gbc.setState(0xe7b0, 0x4775, 0x4280, 0xe218, 0xceb2, 0xb72f, 0x0, 0x0);
        gbc.writeMem(0xe7b0, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x4775, gbc.sp());
        EXPECT(0xe7b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe7b0));
        EXPECT(0xa0, gbc.readMem(0xe7b1));
        // CB A0 0215
        gbc.setState(0xb8ff, 0x2da0, 0x63d0, 0x804b, 0xd86e, 0xc207, 0x1, 0x0);
        gbc.writeMem(0xb8ff, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x2da0, gbc.sp());
        EXPECT(0xb901, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb8ff));
        EXPECT(0xa0, gbc.readMem(0xb900));
        // CB A0 0216
        gbc.setState(0x37c4, 0xb0b3, 0x5240, 0x1361, 0xfb41, 0x2faf, 0x1, 0x1);
        gbc.writeMem(0x37c4, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xb0b3, gbc.sp());
        EXPECT(0x37c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A0 0217
        gbc.setState(0xd316, 0xd011, 0xa750, 0xf0b4, 0xd2c6, 0x8375, 0x1, 0x1);
        gbc.writeMem(0xd316, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xd011, gbc.sp());
        EXPECT(0xd318, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd316));
        EXPECT(0xa0, gbc.readMem(0xd317));
        // CB A0 0218
        gbc.setState(0x516c, 0xf9c6, 0x76e0, 0xf68e, 0x6d76, 0x8e93, 0x1, 0x1);
        gbc.writeMem(0x516c, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xf9c6, gbc.sp());
        EXPECT(0x516e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A0 0219
        gbc.setState(0xadfe, 0xf26c, 0xed0, 0xa3b8, 0xc68e, 0xc407, 0x1, 0x1);
        gbc.writeMem(0xadfe, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xf26c, gbc.sp());
        EXPECT(0xae00, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xadfe));
        EXPECT(0xa0, gbc.readMem(0xadff));
        // CB A0 021A
        gbc.setState(0xed9c, 0x31f, 0xbf40, 0x4513, 0x5a5, 0x6cce, 0x0, 0x0);
        gbc.writeMem(0xed9c, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x31f, gbc.sp());
        EXPECT(0xed9e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed9c));
        EXPECT(0xa0, gbc.readMem(0xed9d));
        // CB A0 021B
        gbc.setState(0x64ce, 0xf304, 0xb650, 0x99ee, 0x3a9e, 0x223c, 0x1, 0x1);
        gbc.writeMem(0x64ce, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xf304, gbc.sp());
        EXPECT(0x64d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 021C
        gbc.setState(0x6b9b, 0x843d, 0xab20, 0x3c64, 0x1a71, 0xbdbc, 0x0, 0x1);
        gbc.writeMem(0x6b9b, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x843d, gbc.sp());
        EXPECT(0x6b9d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A0 021D
        gbc.setState(0x1c01, 0xc8f4, 0x3c40, 0x2ffe, 0x9251, 0xc896, 0x0, 0x1);
        gbc.writeMem(0x1c01, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xc8f4, gbc.sp());
        EXPECT(0x1c03, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A0 021E
        gbc.setState(0xa64b, 0xd0c2, 0x6210, 0xd388, 0xf8be, 0x9865, 0x1, 0x1);
        gbc.writeMem(0xa64b, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xd0c2, gbc.sp());
        EXPECT(0xa64d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa64b));
        EXPECT(0xa0, gbc.readMem(0xa64c));
        // CB A0 021F
        gbc.setState(0x2057, 0x9cec, 0x8060, 0x6df3, 0x8f78, 0x4223, 0x1, 0x0);
        gbc.writeMem(0x2057, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x9cec, gbc.sp());
        EXPECT(0x2059, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A0 0220
        gbc.setState(0x6d9, 0xdd49, 0xe710, 0xc499, 0xdf5c, 0x6fce, 0x1, 0x1);
        gbc.writeMem(0x6d9, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xdd49, gbc.sp());
        EXPECT(0x6db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 0221
        gbc.setState(0x1bc9, 0x55b3, 0xdab0, 0xbac, 0x366c, 0x9222, 0x1, 0x1);
        gbc.writeMem(0x1bc9, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x55b3, gbc.sp());
        EXPECT(0x1bcb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 0222
        gbc.setState(0x7367, 0x3756, 0x2860, 0xb2a, 0xa09d, 0x700a, 0x0, 0x0);
        gbc.writeMem(0x7367, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x3756, gbc.sp());
        EXPECT(0x7369, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A0 0223
        gbc.setState(0x5550, 0x130d, 0x3a20, 0x35b4, 0x23d3, 0xda5f, 0x0, 0x1);
        gbc.writeMem(0x5550, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x130d, gbc.sp());
        EXPECT(0x5552, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A0 0224
        gbc.setState(0xa47d, 0x3042, 0x3c80, 0x33a, 0xa707, 0xe772, 0x0, 0x1);
        gbc.writeMem(0xa47d, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x3042, gbc.sp());
        EXPECT(0xa47f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa47d));
        EXPECT(0xa0, gbc.readMem(0xa47e));
        // CB A0 0226
        gbc.setState(0x8a5c, 0x3fc6, 0x9640, 0xc244, 0xd386, 0x4003, 0x1, 0x0);
        gbc.writeMem(0x8a5c, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x3fc6, gbc.sp());
        EXPECT(0x8a5e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a5c));
        EXPECT(0xa0, gbc.readMem(0x8a5d));
        // CB A0 0227
        gbc.setState(0xd66b, 0xf215, 0xa440, 0x8249, 0x1b2d, 0x44ad, 0x1, 0x0);
        gbc.writeMem(0xd66b, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xf215, gbc.sp());
        EXPECT(0xd66d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd66b));
        EXPECT(0xa0, gbc.readMem(0xd66c));
        // CB A0 0228
        gbc.setState(0x2ccb, 0x81c0, 0xa3a0, 0x78bc, 0x30a5, 0x9ec, 0x0, 0x1);
        gbc.writeMem(0x2ccb, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x81c0, gbc.sp());
        EXPECT(0x2ccd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A0 0229
        gbc.setState(0x8fbe, 0x41f6, 0xa5a0, 0x9445, 0x53e3, 0x7988, 0x0, 0x0);
        gbc.writeMem(0x8fbe, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x41f6, gbc.sp());
        EXPECT(0x8fc0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8fbe));
        EXPECT(0xa0, gbc.readMem(0x8fbf));
        // CB A0 022A
        gbc.setState(0x5c0e, 0x237, 0x2c40, 0xb378, 0x49b6, 0x97c3, 0x0, 0x1);
        gbc.writeMem(0x5c0e, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x237, gbc.sp());
        EXPECT(0x5c10, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A0 022B
        gbc.setState(0x26c6, 0xe41b, 0x1020, 0x55fc, 0x9f7f, 0xb1e1, 0x1, 0x0);
        gbc.writeMem(0x26c6, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xe41b, gbc.sp());
        EXPECT(0x26c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A0 022E
        gbc.setState(0xdf56, 0xf13d, 0x640, 0x99a3, 0x5921, 0x6d30, 0x0, 0x0);
        gbc.writeMem(0xdf56, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xf13d, gbc.sp());
        EXPECT(0xdf58, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf56));
        EXPECT(0xa0, gbc.readMem(0xdf57));
        // CB A0 022F
        gbc.setState(0xe01b, 0xa620, 0xbb80, 0x5982, 0x312c, 0xccdd, 0x1, 0x1);
        gbc.writeMem(0xe01b, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xa620, gbc.sp());
        EXPECT(0xe01d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe01b));
        EXPECT(0xa0, gbc.readMem(0xe01c));
        // CB A0 0230
        gbc.setState(0xce32, 0x5cf4, 0x79e0, 0xcfbd, 0x888b, 0x3c26, 0x1, 0x1);
        gbc.writeMem(0xce32, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x5cf4, gbc.sp());
        EXPECT(0xce34, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce32));
        EXPECT(0xa0, gbc.readMem(0xce33));
        // CB A0 0231
        gbc.setState(0x60a0, 0xca01, 0x5530, 0x537c, 0x205b, 0x16cd, 0x1, 0x0);
        gbc.writeMem(0x60a0, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xca01, gbc.sp());
        EXPECT(0x60a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 0232
        gbc.setState(0x5036, 0x9235, 0x5a60, 0x58da, 0x7bd4, 0x1e34, 0x0, 0x1);
        gbc.writeMem(0x5036, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x9235, gbc.sp());
        EXPECT(0x5038, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A0 0233
        gbc.setState(0x1070, 0x55b7, 0x93e0, 0x6ed2, 0x83a2, 0xd1d9, 0x1, 0x0);
        gbc.writeMem(0x1070, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x55b7, gbc.sp());
        EXPECT(0x1072, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A0 0234
        gbc.setState(0xed7c, 0x9c56, 0x8310, 0xf08b, 0x3334, 0x34b, 0x1, 0x0);
        gbc.writeMem(0xed7c, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x9c56, gbc.sp());
        EXPECT(0xed7e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed7c));
        EXPECT(0xa0, gbc.readMem(0xed7d));
        // CB A0 0235
        gbc.setState(0x8e43, 0x9db0, 0xa590, 0x9fe7, 0x2c22, 0x24ca, 0x0, 0x1);
        gbc.writeMem(0x8e43, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x9db0, gbc.sp());
        EXPECT(0x8e45, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e43));
        EXPECT(0xa0, gbc.readMem(0x8e44));
        // CB A0 0237
        gbc.setState(0x475f, 0x9ae4, 0xa70, 0x8806, 0xe0ef, 0xa9b8, 0x0, 0x1);
        gbc.writeMem(0x475f, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x9ae4, gbc.sp());
        EXPECT(0x4761, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 0238
        gbc.setState(0x2494, 0x34ae, 0xddc0, 0xd363, 0x81e3, 0xc8dd, 0x1, 0x0);
        gbc.writeMem(0x2494, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x34ae, gbc.sp());
        EXPECT(0x2496, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A0 0239
        gbc.setState(0x678b, 0xd9e6, 0x61a0, 0x9bc7, 0xe260, 0x4055, 0x1, 0x0);
        gbc.writeMem(0x678b, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xd9e6, gbc.sp());
        EXPECT(0x678d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A0 023A
        gbc.setState(0x204d, 0xbbe4, 0x8310, 0x80d, 0xe12e, 0xbbb8, 0x1, 0x0);
        gbc.writeMem(0x204d, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xbbe4, gbc.sp());
        EXPECT(0x204f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 023B
        gbc.setState(0x67ba, 0x2aa5, 0xcd90, 0x223d, 0x4048, 0xfc7f, 0x1, 0x1);
        gbc.writeMem(0x67ba, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x2aa5, gbc.sp());
        EXPECT(0x67bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 023C
        gbc.setState(0x1769, 0x2d0d, 0x4f30, 0x21d, 0x8f4b, 0xfb9e, 0x0, 0x0);
        gbc.writeMem(0x1769, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x2d0d, gbc.sp());
        EXPECT(0x176b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 023D
        gbc.setState(0x521f, 0xf58e, 0xf1e0, 0xe9cb, 0x7dc6, 0xfced, 0x0, 0x1);
        gbc.writeMem(0x521f, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xf58e, gbc.sp());
        EXPECT(0x5221, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A0 023E
        gbc.setState(0x8c38, 0x127f, 0x9780, 0x8125, 0xa99, 0x3456, 0x1, 0x1);
        gbc.writeMem(0x8c38, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x127f, gbc.sp());
        EXPECT(0x8c3a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c38));
        EXPECT(0xa0, gbc.readMem(0x8c39));
        // CB A0 023F
        gbc.setState(0x1ee5, 0x192b, 0x1900, 0xf25f, 0xa15c, 0x893d, 0x1, 0x0);
        gbc.writeMem(0x1ee5, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x192b, gbc.sp());
        EXPECT(0x1ee7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A0 0240
        gbc.setState(0x407d, 0xcf1d, 0xd8d0, 0xafe7, 0xdc40, 0x3710, 0x0, 0x0);
        gbc.writeMem(0x407d, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xcf1d, gbc.sp());
        EXPECT(0x407f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 0241
        gbc.setState(0xdca, 0x5814, 0x2730, 0x3d9b, 0x891a, 0x95a7, 0x1, 0x0);
        gbc.writeMem(0xdca, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x5814, gbc.sp());
        EXPECT(0xdcc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 0242
        gbc.setState(0x153a, 0xf6f7, 0x9b40, 0xb687, 0x39a5, 0x4ab3, 0x0, 0x1);
        gbc.writeMem(0x153a, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xf6f7, gbc.sp());
        EXPECT(0x153c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A0 0243
        gbc.setState(0xe1f0, 0xf70c, 0x23d0, 0x9e28, 0x3c06, 0xcfe7, 0x0, 0x0);
        gbc.writeMem(0xe1f0, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xf70c, gbc.sp());
        EXPECT(0xe1f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe1f0));
        EXPECT(0xa0, gbc.readMem(0xe1f1));
        // CB A0 0244
        gbc.setState(0x6c78, 0xb365, 0xd4d0, 0xfe49, 0xc2ac, 0x44d0, 0x0, 0x0);
        gbc.writeMem(0x6c78, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xb365, gbc.sp());
        EXPECT(0x6c7a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 0245
        gbc.setState(0xbd2e, 0x3916, 0x4b0, 0xfe4, 0x44df, 0x9ca9, 0x0, 0x0);
        gbc.writeMem(0xbd2e, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x3916, gbc.sp());
        EXPECT(0xbd30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd2e));
        EXPECT(0xa0, gbc.readMem(0xbd2f));
        // CB A0 0246
        gbc.setState(0x7f1e, 0xab3f, 0xaa90, 0xc62f, 0xd64e, 0xdc7d, 0x1, 0x1);
        gbc.writeMem(0x7f1e, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xab3f, gbc.sp());
        EXPECT(0x7f20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 0248
        gbc.setState(0x4012, 0x5260, 0xd760, 0x3f6c, 0xa769, 0xff22, 0x0, 0x0);
        gbc.writeMem(0x4012, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x5260, gbc.sp());
        EXPECT(0x4014, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A0 0249
        gbc.setState(0xa985, 0x70ff, 0xaf40, 0xb173, 0x6c69, 0x5c63, 0x1, 0x0);
        gbc.writeMem(0xa985, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x70ff, gbc.sp());
        EXPECT(0xa987, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa985));
        EXPECT(0xa0, gbc.readMem(0xa986));
        // CB A0 024A
        gbc.setState(0x4f2, 0xc95a, 0x30b0, 0xdf1b, 0x4584, 0x57ae, 0x1, 0x1);
        gbc.writeMem(0x4f2, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xc95a, gbc.sp());
        EXPECT(0x4f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 024B
        gbc.setState(0x412d, 0xf470, 0x9150, 0xd45e, 0x7b07, 0x2b65, 0x0, 0x0);
        gbc.writeMem(0x412d, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xf470, gbc.sp());
        EXPECT(0x412f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 024C
        gbc.setState(0x80be, 0xe2a9, 0x5e20, 0xf335, 0x1bd1, 0xb305, 0x1, 0x0);
        gbc.writeMem(0x80be, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xe2a9, gbc.sp());
        EXPECT(0x80c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x80be));
        EXPECT(0xa0, gbc.readMem(0x80bf));
        // CB A0 024D
        gbc.setState(0xc3c1, 0xb155, 0x2440, 0xded4, 0x5b3d, 0x6589, 0x0, 0x1);
        gbc.writeMem(0xc3c1, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xb155, gbc.sp());
        EXPECT(0xc3c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc3c1));
        EXPECT(0xa0, gbc.readMem(0xc3c2));
        // CB A0 024E
        gbc.setState(0x9b6f, 0x895f, 0xce80, 0xcda1, 0xa222, 0xfbda, 0x0, 0x0);
        gbc.writeMem(0x9b6f, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x895f, gbc.sp());
        EXPECT(0x9b71, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b6f));
        EXPECT(0xa0, gbc.readMem(0x9b70));
        // CB A0 024F
        gbc.setState(0x6325, 0x4bb8, 0x6750, 0x7b91, 0x88ec, 0xdad7, 0x1, 0x0);
        gbc.writeMem(0x6325, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x4bb8, gbc.sp());
        EXPECT(0x6327, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 0250
        gbc.setState(0x7df0, 0xfe4c, 0x5c60, 0x10c5, 0xbd17, 0x6d34, 0x0, 0x1);
        gbc.writeMem(0x7df0, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xfe4c, gbc.sp());
        EXPECT(0x7df2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A0 0251
        gbc.setState(0x73d7, 0x4761, 0x8460, 0x9938, 0xaf9d, 0x145b, 0x1, 0x1);
        gbc.writeMem(0x73d7, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x4761, gbc.sp());
        EXPECT(0x73d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A0 0252
        gbc.setState(0x233f, 0x39a5, 0xbb40, 0x7f6e, 0x52cf, 0x3f94, 0x0, 0x0);
        gbc.writeMem(0x233f, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x39a5, gbc.sp());
        EXPECT(0x2341, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A0 0253
        gbc.setState(0x44c1, 0x3830, 0xd200, 0x64, 0xe453, 0xd83a, 0x0, 0x1);
        gbc.writeMem(0x44c1, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x3830, gbc.sp());
        EXPECT(0x44c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A0 0254
        gbc.setState(0x8094, 0xae71, 0x11a0, 0xddb1, 0xa288, 0xb751, 0x1, 0x1);
        gbc.writeMem(0x8094, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xae71, gbc.sp());
        EXPECT(0x8096, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8094));
        EXPECT(0xa0, gbc.readMem(0x8095));
        // CB A0 0255
        gbc.setState(0x8316, 0x59d8, 0x98b0, 0x8ed0, 0xcd6e, 0x6b50, 0x0, 0x0);
        gbc.writeMem(0x8316, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x59d8, gbc.sp());
        EXPECT(0x8318, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8316));
        EXPECT(0xa0, gbc.readMem(0x8317));
        // CB A0 0256
        gbc.setState(0x300c, 0x6da4, 0x2fc0, 0xcd07, 0xc0f7, 0xdd4, 0x1, 0x1);
        gbc.writeMem(0x300c, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x6da4, gbc.sp());
        EXPECT(0x300e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A0 0257
        gbc.setState(0x896, 0x51e6, 0xaa90, 0xf31b, 0x4e24, 0xd928, 0x0, 0x1);
        gbc.writeMem(0x896, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x51e6, gbc.sp());
        EXPECT(0x898, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 0258
        gbc.setState(0x4b3a, 0x743f, 0xfbf0, 0xe9a7, 0xd026, 0x247b, 0x0, 0x1);
        gbc.writeMem(0x4b3a, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x743f, gbc.sp());
        EXPECT(0x4b3c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 0259
        gbc.setState(0xabb9, 0xf85d, 0xe760, 0x112b, 0x867f, 0xcc89, 0x1, 0x1);
        gbc.writeMem(0xabb9, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xf85d, gbc.sp());
        EXPECT(0xabbb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xabb9));
        EXPECT(0xa0, gbc.readMem(0xabba));
        // CB A0 025A
        gbc.setState(0x8c54, 0x42f1, 0xa90, 0xcc70, 0x5b07, 0xd7d7, 0x1, 0x1);
        gbc.writeMem(0x8c54, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x42f1, gbc.sp());
        EXPECT(0x8c56, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c54));
        EXPECT(0xa0, gbc.readMem(0x8c55));
        // CB A0 025B
        gbc.setState(0x3df4, 0x859a, 0x5760, 0x811f, 0xda2d, 0xf889, 0x0, 0x0);
        gbc.writeMem(0x3df4, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x859a, gbc.sp());
        EXPECT(0x3df6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A0 025C
        gbc.setState(0xe740, 0xe23a, 0xfc80, 0xabbe, 0xcd5f, 0xbf78, 0x0, 0x1);
        gbc.writeMem(0xe740, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xe23a, gbc.sp());
        EXPECT(0xe742, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe740));
        EXPECT(0xa0, gbc.readMem(0xe741));
        // CB A0 025D
        gbc.setState(0xe63c, 0x71de, 0x4100, 0x38a6, 0xea70, 0xec2c, 0x1, 0x0);
        gbc.writeMem(0xe63c, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x71de, gbc.sp());
        EXPECT(0xe63e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe63c));
        EXPECT(0xa0, gbc.readMem(0xe63d));
        // CB A0 025E
        gbc.setState(0xe40c, 0x3dfb, 0xda10, 0x6332, 0xe5a3, 0xf0cd, 0x0, 0x1);
        gbc.writeMem(0xe40c, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x3dfb, gbc.sp());
        EXPECT(0xe40e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe40c));
        EXPECT(0xa0, gbc.readMem(0xe40d));
        // CB A0 025F
        gbc.setState(0x3851, 0x3138, 0xba00, 0x8e71, 0xb6ff, 0x180e, 0x0, 0x1);
        gbc.writeMem(0x3851, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x3138, gbc.sp());
        EXPECT(0x3853, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A0 0260
        gbc.setState(0xa502, 0x6772, 0x9120, 0x6d62, 0xe7a7, 0x80f8, 0x1, 0x0);
        gbc.writeMem(0xa502, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x6772, gbc.sp());
        EXPECT(0xa504, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa502));
        EXPECT(0xa0, gbc.readMem(0xa503));
        // CB A0 0261
        gbc.setState(0x1662, 0x3e58, 0x9420, 0xd36f, 0x4d38, 0xc68b, 0x1, 0x0);
        gbc.writeMem(0x1662, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x3e58, gbc.sp());
        EXPECT(0x1664, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A0 0262
        gbc.setState(0x19d, 0x830b, 0x3480, 0x2cba, 0xc582, 0x762f, 0x1, 0x0);
        gbc.writeMem(0x19d, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x830b, gbc.sp());
        EXPECT(0x19f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A0 0263
        gbc.setState(0x6ef8, 0x939a, 0xd010, 0x9e87, 0x63c, 0xe2a3, 0x1, 0x0);
        gbc.writeMem(0x6ef8, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x939a, gbc.sp());
        EXPECT(0x6efa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 0264
        gbc.setState(0x7aa2, 0xac9b, 0x4d70, 0xf3a1, 0x277e, 0x339d, 0x1, 0x0);
        gbc.writeMem(0x7aa2, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xac9b, gbc.sp());
        EXPECT(0x7aa4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 0265
        gbc.setState(0xded6, 0xf2b4, 0x9ab0, 0x1741, 0x1c77, 0xa2f1, 0x1, 0x0);
        gbc.writeMem(0xded6, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xf2b4, gbc.sp());
        EXPECT(0xded8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xded6));
        EXPECT(0xa0, gbc.readMem(0xded7));
        // CB A0 0266
        gbc.setState(0x6899, 0x358d, 0x90a0, 0x30c0, 0xb679, 0xce0c, 0x1, 0x0);
        gbc.writeMem(0x6899, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x358d, gbc.sp());
        EXPECT(0x689b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A0 0267
        gbc.setState(0x2dae, 0xe48a, 0x9a80, 0x6de5, 0x1d6d, 0x83ac, 0x0, 0x1);
        gbc.writeMem(0x2dae, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xe48a, gbc.sp());
        EXPECT(0x2db0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A0 0268
        gbc.setState(0x102c, 0x4d78, 0x5a60, 0xec6f, 0xf596, 0x4661, 0x1, 0x0);
        gbc.writeMem(0x102c, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x4d78, gbc.sp());
        EXPECT(0x102e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A0 0269
        gbc.setState(0x5687, 0x708, 0x8580, 0xa0c8, 0x204c, 0x1b2d, 0x0, 0x0);
        gbc.writeMem(0x5687, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x708, gbc.sp());
        EXPECT(0x5689, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A0 026A
        gbc.setState(0x676, 0xc3ca, 0xdc10, 0x719, 0x88f3, 0x8102, 0x0, 0x1);
        gbc.writeMem(0x676, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xc3ca, gbc.sp());
        EXPECT(0x678, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 026B
        gbc.setState(0x9f6c, 0xf51f, 0x1c80, 0x9c7d, 0xbd22, 0xee4c, 0x1, 0x1);
        gbc.writeMem(0x9f6c, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xf51f, gbc.sp());
        EXPECT(0x9f6e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f6c));
        EXPECT(0xa0, gbc.readMem(0x9f6d));
        // CB A0 026C
        gbc.setState(0x938e, 0x6259, 0x2fa0, 0xdfcf, 0x93b5, 0xfb76, 0x1, 0x1);
        gbc.writeMem(0x938e, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x6259, gbc.sp());
        EXPECT(0x9390, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x938e));
        EXPECT(0xa0, gbc.readMem(0x938f));
        // CB A0 026D
        gbc.setState(0x8723, 0x975, 0x80b0, 0xb07b, 0x5adc, 0x71b0, 0x0, 0x1);
        gbc.writeMem(0x8723, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x975, gbc.sp());
        EXPECT(0x8725, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8723));
        EXPECT(0xa0, gbc.readMem(0x8724));
        // CB A0 026E
        gbc.setState(0xe5b9, 0xd32d, 0x9f80, 0x5a95, 0x1e51, 0x3589, 0x1, 0x0);
        gbc.writeMem(0xe5b9, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xd32d, gbc.sp());
        EXPECT(0xe5bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe5b9));
        EXPECT(0xa0, gbc.readMem(0xe5ba));
        // CB A0 026F
        gbc.setState(0x86b6, 0x410a, 0xbaf0, 0x14ed, 0x5afa, 0xca91, 0x0, 0x1);
        gbc.writeMem(0x86b6, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x410a, gbc.sp());
        EXPECT(0x86b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x86b6));
        EXPECT(0xa0, gbc.readMem(0x86b7));
        // CB A0 0270
        gbc.setState(0x7bdc, 0xbadb, 0xd5f0, 0xb7d3, 0xda7, 0x381c, 0x0, 0x0);
        gbc.writeMem(0x7bdc, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xbadb, gbc.sp());
        EXPECT(0x7bde, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 0271
        gbc.setState(0x31ed, 0x85e, 0xc130, 0x694c, 0x9bc8, 0x3921, 0x1, 0x1);
        gbc.writeMem(0x31ed, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x85e, gbc.sp());
        EXPECT(0x31ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 0272
        gbc.setState(0x6204, 0x1c8e, 0x4fe0, 0x61a0, 0xc03f, 0x2646, 0x1, 0x0);
        gbc.writeMem(0x6204, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x1c8e, gbc.sp());
        EXPECT(0x6206, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A0 0273
        gbc.setState(0xe98, 0xe1df, 0x5da0, 0x9ed3, 0x1607, 0xf5af, 0x1, 0x1);
        gbc.writeMem(0xe98, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xe1df, gbc.sp());
        EXPECT(0xe9a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A0 0274
        gbc.setState(0x1d31, 0xdebb, 0xb330, 0x2641, 0x988c, 0x573e, 0x1, 0x0);
        gbc.writeMem(0x1d31, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xdebb, gbc.sp());
        EXPECT(0x1d33, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 0275
        gbc.setState(0x4815, 0xc70e, 0xf430, 0x4abe, 0x276, 0x6393, 0x1, 0x0);
        gbc.writeMem(0x4815, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xc70e, gbc.sp());
        EXPECT(0x4817, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 0276
        gbc.setState(0x3563, 0xff01, 0xc7b0, 0xdf77, 0xc26, 0x8451, 0x0, 0x0);
        gbc.writeMem(0x3563, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xff01, gbc.sp());
        EXPECT(0x3565, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 0277
        gbc.setState(0x5eec, 0xabdd, 0xeee0, 0x74e, 0xaf4e, 0x93d3, 0x1, 0x0);
        gbc.writeMem(0x5eec, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xabdd, gbc.sp());
        EXPECT(0x5eee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A0 0278
        gbc.setState(0xca80, 0x85ef, 0x4880, 0x705c, 0x7d71, 0x67c6, 0x1, 0x1);
        gbc.writeMem(0xca80, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x85ef, gbc.sp());
        EXPECT(0xca82, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca80));
        EXPECT(0xa0, gbc.readMem(0xca81));
        // CB A0 0279
        gbc.setState(0x34fd, 0x176e, 0x58f0, 0xba2c, 0x278d, 0x9136, 0x1, 0x0);
        gbc.writeMem(0x34fd, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x176e, gbc.sp());
        EXPECT(0x34ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 027D
        gbc.setState(0xf53, 0x2c7b, 0x4f30, 0xb4a, 0x3d86, 0xcaf, 0x1, 0x0);
        gbc.writeMem(0xf53, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x2c7b, gbc.sp());
        EXPECT(0xf55, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 027E
        gbc.setState(0x5bc, 0x60f9, 0x8980, 0xca47, 0x7ef7, 0x74e0, 0x1, 0x1);
        gbc.writeMem(0x5bc, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x60f9, gbc.sp());
        EXPECT(0x5be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A0 027F
        gbc.setState(0xc5b9, 0xefc4, 0x7fa0, 0xdccd, 0x5367, 0x381e, 0x1, 0x1);
        gbc.writeMem(0xc5b9, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xefc4, gbc.sp());
        EXPECT(0xc5bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc5b9));
        EXPECT(0xa0, gbc.readMem(0xc5ba));
        // CB A0 0280
        gbc.setState(0x312, 0x99f1, 0x4f80, 0x632e, 0x3d57, 0x3243, 0x0, 0x0);
        gbc.writeMem(0x312, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x99f1, gbc.sp());
        EXPECT(0x314, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A0 0281
        gbc.setState(0xe93a, 0x14b3, 0x9e60, 0x6687, 0xd65a, 0xfc31, 0x0, 0x1);
        gbc.writeMem(0xe93a, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x14b3, gbc.sp());
        EXPECT(0xe93c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe93a));
        EXPECT(0xa0, gbc.readMem(0xe93b));
        // CB A0 0282
        gbc.setState(0x6164, 0x90d4, 0x59d0, 0xa445, 0xe012, 0x89b8, 0x0, 0x1);
        gbc.writeMem(0x6164, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x90d4, gbc.sp());
        EXPECT(0x6166, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 0283
        gbc.setState(0xbd9f, 0x2b7c, 0x6f0, 0x3480, 0x50e4, 0xc79d, 0x0, 0x0);
        gbc.writeMem(0xbd9f, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x2b7c, gbc.sp());
        EXPECT(0xbda1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd9f));
        EXPECT(0xa0, gbc.readMem(0xbda0));
        // CB A0 0284
        gbc.setState(0x50e8, 0xb1e8, 0x1d40, 0xb20e, 0x29cf, 0xa43c, 0x0, 0x0);
        gbc.writeMem(0x50e8, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xb1e8, gbc.sp());
        EXPECT(0x50ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A0 0285
        gbc.setState(0x285c, 0xbd0d, 0x830, 0xd0ae, 0xcfdf, 0x54ec, 0x1, 0x1);
        gbc.writeMem(0x285c, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xbd0d, gbc.sp());
        EXPECT(0x285e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 0286
        gbc.setState(0xba30, 0x4288, 0x8190, 0xe3ed, 0xe8f6, 0xd15e, 0x0, 0x1);
        gbc.writeMem(0xba30, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x4288, gbc.sp());
        EXPECT(0xba32, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba30));
        EXPECT(0xa0, gbc.readMem(0xba31));
        // CB A0 0287
        gbc.setState(0x4fcb, 0xc8d6, 0x6a00, 0x573, 0xc82e, 0x6212, 0x1, 0x1);
        gbc.writeMem(0x4fcb, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xc8d6, gbc.sp());
        EXPECT(0x4fcd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A0 0288
        gbc.setState(0x95c7, 0x564d, 0x2f70, 0x2f02, 0x32da, 0x695c, 0x1, 0x1);
        gbc.writeMem(0x95c7, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x564d, gbc.sp());
        EXPECT(0x95c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x95c7));
        EXPECT(0xa0, gbc.readMem(0x95c8));
        // CB A0 0289
        gbc.setState(0x3a80, 0x160, 0xc530, 0x2841, 0x8b9, 0x8403, 0x0, 0x1);
        gbc.writeMem(0x3a80, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x160, gbc.sp());
        EXPECT(0x3a82, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 028A
        gbc.setState(0x171d, 0xd241, 0x9ee0, 0xcf8b, 0x5f16, 0x665, 0x0, 0x0);
        gbc.writeMem(0x171d, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xd241, gbc.sp());
        EXPECT(0x171f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A0 028B
        gbc.setState(0xd896, 0xa96d, 0xbe70, 0xb866, 0xa607, 0x5883, 0x0, 0x0);
        gbc.writeMem(0xd896, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xa96d, gbc.sp());
        EXPECT(0xd898, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd896));
        EXPECT(0xa0, gbc.readMem(0xd897));
        // CB A0 028C
        gbc.setState(0xe5b4, 0x2a0e, 0xc830, 0xe86, 0xaa96, 0x956d, 0x0, 0x1);
        gbc.writeMem(0xe5b4, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x2a0e, gbc.sp());
        EXPECT(0xe5b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe5b4));
        EXPECT(0xa0, gbc.readMem(0xe5b5));
        // CB A0 028D
        gbc.setState(0xb563, 0x48e7, 0x6e30, 0x706, 0xc792, 0xc3d0, 0x1, 0x0);
        gbc.writeMem(0xb563, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x48e7, gbc.sp());
        EXPECT(0xb565, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb563));
        EXPECT(0xa0, gbc.readMem(0xb564));
        // CB A0 028E
        gbc.setState(0x3d81, 0x1390, 0x5940, 0x9333, 0xc1c3, 0x65cc, 0x1, 0x1);
        gbc.writeMem(0x3d81, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x1390, gbc.sp());
        EXPECT(0x3d83, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A0 028F
        gbc.setState(0xe82c, 0xeb60, 0xd410, 0xe39, 0xb75f, 0x95d2, 0x1, 0x1);
        gbc.writeMem(0xe82c, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xeb60, gbc.sp());
        EXPECT(0xe82e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe82c));
        EXPECT(0xa0, gbc.readMem(0xe82d));
        // CB A0 0290
        gbc.setState(0x371b, 0xd8b2, 0xf080, 0x7f85, 0xb415, 0x59e1, 0x1, 0x0);
        gbc.writeMem(0x371b, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xd8b2, gbc.sp());
        EXPECT(0x371d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A0 0291
        gbc.setState(0xef8d, 0x96f4, 0x4730, 0x1c8f, 0x9cdd, 0xe34b, 0x0, 0x1);
        gbc.writeMem(0xef8d, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x96f4, gbc.sp());
        EXPECT(0xef8f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef8d));
        EXPECT(0xa0, gbc.readMem(0xef8e));
        // CB A0 0292
        gbc.setState(0xc735, 0xa049, 0xc2c0, 0xdc02, 0xb827, 0x1dc7, 0x1, 0x0);
        gbc.writeMem(0xc735, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xa049, gbc.sp());
        EXPECT(0xc737, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc735));
        EXPECT(0xa0, gbc.readMem(0xc736));
        // CB A0 0293
        gbc.setState(0x93cb, 0xcded, 0x9c10, 0xb257, 0xeb2d, 0x3a84, 0x1, 0x0);
        gbc.writeMem(0x93cb, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xcded, gbc.sp());
        EXPECT(0x93cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x93cb));
        EXPECT(0xa0, gbc.readMem(0x93cc));
        // CB A0 0294
        gbc.setState(0x4b47, 0xc9fc, 0x3e80, 0xc8a7, 0xaff5, 0xd756, 0x0, 0x0);
        gbc.writeMem(0x4b47, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xc9fc, gbc.sp());
        EXPECT(0x4b49, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A0 0295
        gbc.setState(0x9f9c, 0x94aa, 0x2d0, 0x4cd7, 0x84d0, 0x6b57, 0x0, 0x1);
        gbc.writeMem(0x9f9c, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x94aa, gbc.sp());
        EXPECT(0x9f9e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f9c));
        EXPECT(0xa0, gbc.readMem(0x9f9d));
        // CB A0 0296
        gbc.setState(0xd9eb, 0x922, 0xc990, 0xb516, 0x27ff, 0xd89e, 0x0, 0x0);
        gbc.writeMem(0xd9eb, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x922, gbc.sp());
        EXPECT(0xd9ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd9eb));
        EXPECT(0xa0, gbc.readMem(0xd9ec));
        // CB A0 0297
        gbc.setState(0xc7bb, 0xbd51, 0x3eb0, 0x6f77, 0x405f, 0x52c4, 0x0, 0x0);
        gbc.writeMem(0xc7bb, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xbd51, gbc.sp());
        EXPECT(0xc7bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc7bb));
        EXPECT(0xa0, gbc.readMem(0xc7bc));
        // CB A0 0298
        gbc.setState(0x86f7, 0x17a5, 0xef10, 0x41ed, 0xa3e8, 0x8a66, 0x1, 0x1);
        gbc.writeMem(0x86f7, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x17a5, gbc.sp());
        EXPECT(0x86f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x86f7));
        EXPECT(0xa0, gbc.readMem(0x86f8));
        // CB A0 0299
        gbc.setState(0x1dcb, 0xa2c0, 0x9f00, 0x700, 0x3ef4, 0x4c24, 0x1, 0x1);
        gbc.writeMem(0x1dcb, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xa2c0, gbc.sp());
        EXPECT(0x1dcd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A0 029B
        gbc.setState(0xb6b9, 0x3030, 0x4360, 0x1862, 0x3ebd, 0x2b5f, 0x0, 0x1);
        gbc.writeMem(0xb6b9, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x3030, gbc.sp());
        EXPECT(0xb6bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb6b9));
        EXPECT(0xa0, gbc.readMem(0xb6ba));
        // CB A0 029C
        gbc.setState(0x7227, 0x60b4, 0xf190, 0x905b, 0x227d, 0xae3d, 0x1, 0x1);
        gbc.writeMem(0x7227, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x60b4, gbc.sp());
        EXPECT(0x7229, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 029D
        gbc.setState(0x12b0, 0x2c78, 0x2040, 0x4d97, 0x5be, 0xa985, 0x1, 0x1);
        gbc.writeMem(0x12b0, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x2c78, gbc.sp());
        EXPECT(0x12b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A0 029E
        gbc.setState(0xe95, 0x2d0, 0xaf30, 0xfe4d, 0xa225, 0xf5ee, 0x1, 0x0);
        gbc.writeMem(0xe95, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x2d0, gbc.sp());
        EXPECT(0xe97, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 029F
        gbc.setState(0x3ae4, 0x5ba3, 0x6640, 0x1ead, 0x8f62, 0x538d, 0x1, 0x0);
        gbc.writeMem(0x3ae4, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x5ba3, gbc.sp());
        EXPECT(0x3ae6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A0 02A0
        gbc.setState(0xe328, 0xf0ed, 0xb870, 0x1b6b, 0xcb91, 0x1e20, 0x1, 0x0);
        gbc.writeMem(0xe328, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xf0ed, gbc.sp());
        EXPECT(0xe32a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe328));
        EXPECT(0xa0, gbc.readMem(0xe329));
        // CB A0 02A1
        gbc.setState(0xd73f, 0x8705, 0x4780, 0x14e6, 0xcadf, 0x1348, 0x1, 0x1);
        gbc.writeMem(0xd73f, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x8705, gbc.sp());
        EXPECT(0xd741, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd73f));
        EXPECT(0xa0, gbc.readMem(0xd740));
        // CB A0 02A2
        gbc.setState(0x62a9, 0xfe58, 0x38a0, 0x13aa, 0x680b, 0x1857, 0x0, 0x1);
        gbc.writeMem(0x62a9, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xfe58, gbc.sp());
        EXPECT(0x62ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A0 02A3
        gbc.setState(0x9b38, 0xbd50, 0xe8b0, 0x9127, 0x6b63, 0x4ee8, 0x0, 0x1);
        gbc.writeMem(0x9b38, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xbd50, gbc.sp());
        EXPECT(0x9b3a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b38));
        EXPECT(0xa0, gbc.readMem(0x9b39));
        // CB A0 02A4
        gbc.setState(0xd27b, 0x5822, 0xab70, 0x2f75, 0x4ae3, 0x77ed, 0x1, 0x1);
        gbc.writeMem(0xd27b, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x5822, gbc.sp());
        EXPECT(0xd27d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd27b));
        EXPECT(0xa0, gbc.readMem(0xd27c));
        // CB A0 02A5
        gbc.setState(0xdd66, 0x6647, 0x8e30, 0x40a9, 0x29f7, 0xf858, 0x0, 0x1);
        gbc.writeMem(0xdd66, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x6647, gbc.sp());
        EXPECT(0xdd68, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd66));
        EXPECT(0xa0, gbc.readMem(0xdd67));
        // CB A0 02A6
        gbc.setState(0x2d82, 0xf227, 0x6eb0, 0x8ed6, 0xe0f1, 0x9bd6, 0x1, 0x0);
        gbc.writeMem(0x2d82, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xf227, gbc.sp());
        EXPECT(0x2d84, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 02A7
        gbc.setState(0xa654, 0x1375, 0x3060, 0x950a, 0x1844, 0x3307, 0x0, 0x1);
        gbc.writeMem(0xa654, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x1375, gbc.sp());
        EXPECT(0xa656, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa654));
        EXPECT(0xa0, gbc.readMem(0xa655));
        // CB A0 02A8
        gbc.setState(0x3357, 0x64a6, 0x8220, 0x7419, 0xe225, 0x3cca, 0x1, 0x0);
        gbc.writeMem(0x3357, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x64a6, gbc.sp());
        EXPECT(0x3359, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A0 02A9
        gbc.setState(0xa4c, 0xadb5, 0x850, 0x1170, 0x433, 0x9955, 0x0, 0x1);
        gbc.writeMem(0xa4c, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xadb5, gbc.sp());
        EXPECT(0xa4e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 02AA
        gbc.setState(0xa871, 0xf345, 0x18f0, 0x9d2, 0x6724, 0x7ef8, 0x1, 0x0);
        gbc.writeMem(0xa871, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xf345, gbc.sp());
        EXPECT(0xa873, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa871));
        EXPECT(0xa0, gbc.readMem(0xa872));
        // CB A0 02AB
        gbc.setState(0xefc6, 0x82b0, 0x5e50, 0x8c5b, 0x5d32, 0xf0d8, 0x0, 0x0);
        gbc.writeMem(0xefc6, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x82b0, gbc.sp());
        EXPECT(0xefc8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xefc6));
        EXPECT(0xa0, gbc.readMem(0xefc7));
        // CB A0 02AD
        gbc.setState(0x2afb, 0x15f9, 0x1320, 0xab1e, 0xaa59, 0x70c5, 0x0, 0x1);
        gbc.writeMem(0x2afb, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x15f9, gbc.sp());
        EXPECT(0x2afd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A0 02AE
        gbc.setState(0xae23, 0x893c, 0x61b0, 0xacc3, 0xefd4, 0xcd20, 0x0, 0x1);
        gbc.writeMem(0xae23, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x893c, gbc.sp());
        EXPECT(0xae25, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae23));
        EXPECT(0xa0, gbc.readMem(0xae24));
        // CB A0 02AF
        gbc.setState(0xb495, 0xb9b9, 0xb310, 0xe479, 0xbb63, 0xd134, 0x0, 0x1);
        gbc.writeMem(0xb495, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xb9b9, gbc.sp());
        EXPECT(0xb497, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb495));
        EXPECT(0xa0, gbc.readMem(0xb496));
        // CB A0 02B0
        gbc.setState(0xd551, 0xcb4a, 0x1e70, 0xbb1b, 0x651, 0x2657, 0x1, 0x1);
        gbc.writeMem(0xd551, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xcb4a, gbc.sp());
        EXPECT(0xd553, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd551));
        EXPECT(0xa0, gbc.readMem(0xd552));
        // CB A0 02B1
        gbc.setState(0x6bc9, 0xfa37, 0xd5f0, 0xf2a9, 0x18ab, 0xfbc4, 0x1, 0x0);
        gbc.writeMem(0x6bc9, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xfa37, gbc.sp());
        EXPECT(0x6bcb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 02B2
        gbc.setState(0xe8b7, 0xfbdc, 0x6190, 0x57e4, 0xf6e9, 0xebf4, 0x1, 0x1);
        gbc.writeMem(0xe8b7, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xfbdc, gbc.sp());
        EXPECT(0xe8b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe8b7));
        EXPECT(0xa0, gbc.readMem(0xe8b8));
        // CB A0 02B3
        gbc.setState(0xe573, 0x689b, 0xfc90, 0xf482, 0xd55b, 0xe008, 0x1, 0x0);
        gbc.writeMem(0xe573, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x689b, gbc.sp());
        EXPECT(0xe575, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe573));
        EXPECT(0xa0, gbc.readMem(0xe574));
        // CB A0 02B4
        gbc.setState(0x1d25, 0x4c56, 0x52b0, 0xf40d, 0xdebb, 0x74d, 0x1, 0x1);
        gbc.writeMem(0x1d25, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x4c56, gbc.sp());
        EXPECT(0x1d27, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 02B5
        gbc.setState(0x52e9, 0x2d99, 0x6d60, 0x7546, 0xcb0, 0x1c62, 0x1, 0x1);
        gbc.writeMem(0x52e9, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x2d99, gbc.sp());
        EXPECT(0x52eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A0 02B6
        gbc.setState(0xd605, 0xac22, 0xd390, 0x1b07, 0x1ea7, 0x9065, 0x0, 0x1);
        gbc.writeMem(0xd605, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xac22, gbc.sp());
        EXPECT(0xd607, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd605));
        EXPECT(0xa0, gbc.readMem(0xd606));
        // CB A0 02B7
        gbc.setState(0x4ae7, 0x70f, 0x5210, 0x5ee9, 0x401, 0xeeb0, 0x0, 0x0);
        gbc.writeMem(0x4ae7, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x70f, gbc.sp());
        EXPECT(0x4ae9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 02B8
        gbc.setState(0x636d, 0x313f, 0x68f0, 0x805b, 0x456d, 0xa93b, 0x0, 0x1);
        gbc.writeMem(0x636d, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x313f, gbc.sp());
        EXPECT(0x636f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 02B9
        gbc.setState(0xd932, 0xa4fd, 0xbc50, 0x278a, 0xd1d, 0xd725, 0x0, 0x1);
        gbc.writeMem(0xd932, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xa4fd, gbc.sp());
        EXPECT(0xd934, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd932));
        EXPECT(0xa0, gbc.readMem(0xd933));
        // CB A0 02BA
        gbc.setState(0x9a42, 0x4e4b, 0xd010, 0x8b5e, 0x9084, 0x8cbe, 0x1, 0x0);
        gbc.writeMem(0x9a42, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x4e4b, gbc.sp());
        EXPECT(0x9a44, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a42));
        EXPECT(0xa0, gbc.readMem(0x9a43));
        // CB A0 02BB
        gbc.setState(0xc5a3, 0x1d2c, 0x75a0, 0x28fd, 0x792e, 0xf771, 0x0, 0x0);
        gbc.writeMem(0xc5a3, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x1d2c, gbc.sp());
        EXPECT(0xc5a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc5a3));
        EXPECT(0xa0, gbc.readMem(0xc5a4));
        // CB A0 02BC
        gbc.setState(0x4f6b, 0x1f, 0x2130, 0xe9ef, 0x3598, 0xe304, 0x0, 0x0);
        gbc.writeMem(0x4f6b, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x1f, gbc.sp());
        EXPECT(0x4f6d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 02BD
        gbc.setState(0x3e97, 0xf15f, 0x3780, 0x5ff0, 0xa21e, 0x99f6, 0x1, 0x1);
        gbc.writeMem(0x3e97, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xf15f, gbc.sp());
        EXPECT(0x3e99, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A0 02BE
        gbc.setState(0x7a8f, 0x4a7e, 0xf1c0, 0xbc37, 0x16a6, 0x4b3d, 0x0, 0x0);
        gbc.writeMem(0x7a8f, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x4a7e, gbc.sp());
        EXPECT(0x7a91, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A0 02C0
        gbc.setState(0x9bd6, 0x6bb6, 0xccc0, 0x9178, 0xa2b4, 0xdba3, 0x1, 0x0);
        gbc.writeMem(0x9bd6, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x6bb6, gbc.sp());
        EXPECT(0x9bd8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9bd6));
        EXPECT(0xa0, gbc.readMem(0x9bd7));
        // CB A0 02C1
        gbc.setState(0xe8b5, 0xccf6, 0x1f10, 0xa21e, 0xe542, 0xb3f7, 0x1, 0x1);
        gbc.writeMem(0xe8b5, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xccf6, gbc.sp());
        EXPECT(0xe8b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe8b5));
        EXPECT(0xa0, gbc.readMem(0xe8b6));
        // CB A0 02C2
        gbc.setState(0x44f5, 0x70f5, 0xf790, 0x8ff9, 0x9fc8, 0x516b, 0x0, 0x1);
        gbc.writeMem(0x44f5, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x70f5, gbc.sp());
        EXPECT(0x44f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 02C3
        gbc.setState(0x8b73, 0xf1bd, 0xb6d0, 0x4ce2, 0x2acb, 0x6b58, 0x1, 0x1);
        gbc.writeMem(0x8b73, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xf1bd, gbc.sp());
        EXPECT(0x8b75, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b73));
        EXPECT(0xa0, gbc.readMem(0x8b74));
        // CB A0 02C4
        gbc.setState(0x5054, 0xa591, 0x1f10, 0x5307, 0x8bbc, 0x588f, 0x0, 0x0);
        gbc.writeMem(0x5054, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xa591, gbc.sp());
        EXPECT(0x5056, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 02C5
        gbc.setState(0xb3e6, 0xe637, 0x7570, 0xf6d1, 0xbe91, 0xf96f, 0x1, 0x0);
        gbc.writeMem(0xb3e6, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xe637, gbc.sp());
        EXPECT(0xb3e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb3e6));
        EXPECT(0xa0, gbc.readMem(0xb3e7));
        // CB A0 02C7
        gbc.setState(0x5577, 0x8b4b, 0xf710, 0x958b, 0x687b, 0x91c8, 0x0, 0x1);
        gbc.writeMem(0x5577, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x8b4b, gbc.sp());
        EXPECT(0x5579, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 02C8
        gbc.setState(0x4318, 0xd4e6, 0xf2f0, 0x9b41, 0x4fb8, 0xb182, 0x0, 0x0);
        gbc.writeMem(0x4318, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xd4e6, gbc.sp());
        EXPECT(0x431a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 02CA
        gbc.setState(0xe857, 0xc5cf, 0x56f0, 0x8bed, 0x9d3, 0x8f6f, 0x1, 0x1);
        gbc.writeMem(0xe857, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xc5cf, gbc.sp());
        EXPECT(0xe859, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe857));
        EXPECT(0xa0, gbc.readMem(0xe858));
        // CB A0 02CB
        gbc.setState(0x465c, 0x122d, 0x6990, 0x28cb, 0x63bf, 0xe4d0, 0x1, 0x1);
        gbc.writeMem(0x465c, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x122d, gbc.sp());
        EXPECT(0x465e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 02CC
        gbc.setState(0x9f67, 0x42e1, 0xbfc0, 0x1c8e, 0xfa65, 0xdd7c, 0x0, 0x0);
        gbc.writeMem(0x9f67, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x42e1, gbc.sp());
        EXPECT(0x9f69, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f67));
        EXPECT(0xa0, gbc.readMem(0x9f68));
        // CB A0 02CE
        gbc.setState(0x15fc, 0x5a7e, 0xdf00, 0xbdf2, 0xee00, 0x6888, 0x1, 0x0);
        gbc.writeMem(0x15fc, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x5a7e, gbc.sp());
        EXPECT(0x15fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A0 02D0
        gbc.setState(0xaf74, 0x59eb, 0x3820, 0xba49, 0xbe88, 0xe3c1, 0x0, 0x1);
        gbc.writeMem(0xaf74, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x59eb, gbc.sp());
        EXPECT(0xaf76, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf74));
        EXPECT(0xa0, gbc.readMem(0xaf75));
        // CB A0 02D1
        gbc.setState(0x83eb, 0x35ff, 0xd210, 0x4c1f, 0x8584, 0xc08d, 0x1, 0x1);
        gbc.writeMem(0x83eb, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x35ff, gbc.sp());
        EXPECT(0x83ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x83eb));
        EXPECT(0xa0, gbc.readMem(0x83ec));
        // CB A0 02D2
        gbc.setState(0x9756, 0x80d6, 0xb580, 0x1c84, 0xcdf3, 0xc016, 0x0, 0x0);
        gbc.writeMem(0x9756, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x80d6, gbc.sp());
        EXPECT(0x9758, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9756));
        EXPECT(0xa0, gbc.readMem(0x9757));
        // CB A0 02D5
        gbc.setState(0x24f1, 0xcb70, 0x5520, 0x2408, 0x2d14, 0x7d38, 0x1, 0x1);
        gbc.writeMem(0x24f1, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xcb70, gbc.sp());
        EXPECT(0x24f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A0 02D6
        gbc.setState(0x6fdb, 0x1498, 0x7250, 0x69cf, 0x6a2d, 0x9e39, 0x1, 0x0);
        gbc.writeMem(0x6fdb, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x1498, gbc.sp());
        EXPECT(0x6fdd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 02D7
        gbc.setState(0x6eac, 0x3f28, 0xf3c0, 0xe6b4, 0xd29f, 0xb0e, 0x1, 0x0);
        gbc.writeMem(0x6eac, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x3f28, gbc.sp());
        EXPECT(0x6eae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A0 02D8
        gbc.setState(0xa751, 0x739b, 0xca80, 0x3a52, 0x7e94, 0x8a6e, 0x1, 0x1);
        gbc.writeMem(0xa751, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x739b, gbc.sp());
        EXPECT(0xa753, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa751));
        EXPECT(0xa0, gbc.readMem(0xa752));
        // CB A0 02D9
        gbc.setState(0x8938, 0x26fe, 0xd6b0, 0xbbd2, 0xc2c8, 0x1ee3, 0x0, 0x0);
        gbc.writeMem(0x8938, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x26fe, gbc.sp());
        EXPECT(0x893a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8938));
        EXPECT(0xa0, gbc.readMem(0x8939));
        // CB A0 02DA
        gbc.setState(0x5fcb, 0x8170, 0xa6e0, 0xd7f4, 0x3646, 0x4edb, 0x1, 0x0);
        gbc.writeMem(0x5fcb, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x8170, gbc.sp());
        EXPECT(0x5fcd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A0 02DC
        gbc.setState(0xd32, 0xdb79, 0xc630, 0xf3a8, 0x1881, 0xc2b6, 0x0, 0x1);
        gbc.writeMem(0xd32, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xdb79, gbc.sp());
        EXPECT(0xd34, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 02DE
        gbc.setState(0x5679, 0xd034, 0xae70, 0x2340, 0x21d9, 0xa7b5, 0x0, 0x1);
        gbc.writeMem(0x5679, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xd034, gbc.sp());
        EXPECT(0x567b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 02E0
        gbc.setState(0x4ea, 0xba20, 0x6ff0, 0xe1c1, 0xf483, 0x5e6e, 0x1, 0x0);
        gbc.writeMem(0x4ea, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xba20, gbc.sp());
        EXPECT(0x4ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 02E1
        gbc.setState(0x70f0, 0xdedf, 0x6280, 0x5730, 0x1cd8, 0xc2e9, 0x0, 0x0);
        gbc.writeMem(0x70f0, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xdedf, gbc.sp());
        EXPECT(0x70f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A0 02E2
        gbc.setState(0xe0af, 0x427f, 0x7520, 0x968d, 0x1f66, 0x3291, 0x0, 0x1);
        gbc.writeMem(0xe0af, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x427f, gbc.sp());
        EXPECT(0xe0b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe0af));
        EXPECT(0xa0, gbc.readMem(0xe0b0));
        // CB A0 02E3
        gbc.setState(0xb217, 0x4cc0, 0x9960, 0x153f, 0xe646, 0x61db, 0x1, 0x0);
        gbc.writeMem(0xb217, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x4cc0, gbc.sp());
        EXPECT(0xb219, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb217));
        EXPECT(0xa0, gbc.readMem(0xb218));
        // CB A0 02E4
        gbc.setState(0xff0, 0x7f4f, 0xe9a0, 0xeb4d, 0xb2fb, 0xd291, 0x0, 0x0);
        gbc.writeMem(0xff0, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x7f4f, gbc.sp());
        EXPECT(0xff2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A0 02E5
        gbc.setState(0x14d3, 0xdcb0, 0xf240, 0x66b6, 0x1cf5, 0x7f15, 0x0, 0x0);
        gbc.writeMem(0x14d3, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xdcb0, gbc.sp());
        EXPECT(0x14d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A0 02E6
        gbc.setState(0x5653, 0x17c2, 0xd510, 0xa3d4, 0x2f38, 0xa046, 0x1, 0x0);
        gbc.writeMem(0x5653, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x17c2, gbc.sp());
        EXPECT(0x5655, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 02E7
        gbc.setState(0x451d, 0xe42f, 0xbeb0, 0x20a4, 0x8477, 0xe31b, 0x0, 0x0);
        gbc.writeMem(0x451d, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xe42f, gbc.sp());
        EXPECT(0x451f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 02E8
        gbc.setState(0x66b2, 0x2e02, 0x98a0, 0xae85, 0xf5a3, 0x35c4, 0x1, 0x0);
        gbc.writeMem(0x66b2, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x2e02, gbc.sp());
        EXPECT(0x66b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A0 02E9
        gbc.setState(0x1db1, 0xcd06, 0x4d10, 0xa872, 0x46d5, 0xdec6, 0x0, 0x0);
        gbc.writeMem(0x1db1, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xcd06, gbc.sp());
        EXPECT(0x1db3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 02EA
        gbc.setState(0x705b, 0x8913, 0x7c90, 0xb22d, 0x733e, 0x4197, 0x0, 0x0);
        gbc.writeMem(0x705b, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x8913, gbc.sp());
        EXPECT(0x705d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 02EB
        gbc.setState(0x905d, 0x3e15, 0xe9e0, 0xb64c, 0xbb14, 0xd02e, 0x0, 0x1);
        gbc.writeMem(0x905d, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x3e15, gbc.sp());
        EXPECT(0x905f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x905d));
        EXPECT(0xa0, gbc.readMem(0x905e));
        // CB A0 02EC
        gbc.setState(0x73e5, 0xe5f2, 0xd1f0, 0xa2bd, 0x9367, 0x22db, 0x1, 0x1);
        gbc.writeMem(0x73e5, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xe5f2, gbc.sp());
        EXPECT(0x73e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 02ED
        gbc.setState(0x7ec5, 0x9203, 0x3a80, 0x9dde, 0xe61d, 0xeab1, 0x0, 0x0);
        gbc.writeMem(0x7ec5, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x9203, gbc.sp());
        EXPECT(0x7ec7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A0 02EE
        gbc.setState(0x9160, 0x3952, 0xaa0, 0xb41b, 0xf6f5, 0xa10e, 0x1, 0x0);
        gbc.writeMem(0x9160, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x3952, gbc.sp());
        EXPECT(0x9162, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9160));
        EXPECT(0xa0, gbc.readMem(0x9161));
        // CB A0 02EF
        gbc.setState(0xcb2, 0xa030, 0x6cc0, 0x9022, 0x3132, 0x13fc, 0x1, 0x1);
        gbc.writeMem(0xcb2, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xa030, gbc.sp());
        EXPECT(0xcb4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A0 02F0
        gbc.setState(0xe87, 0x5b30, 0x2d20, 0x6171, 0xbffd, 0x10bb, 0x0, 0x1);
        gbc.writeMem(0xe87, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x5b30, gbc.sp());
        EXPECT(0xe89, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A0 02F1
        gbc.setState(0x1800, 0xe14e, 0x28e0, 0x474d, 0x87b2, 0xc131, 0x0, 0x1);
        gbc.writeMem(0x1800, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xe14e, gbc.sp());
        EXPECT(0x1802, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A0 02F2
        gbc.setState(0x978c, 0xe7c9, 0x9920, 0xaa13, 0xb5ee, 0x55c5, 0x1, 0x1);
        gbc.writeMem(0x978c, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xe7c9, gbc.sp());
        EXPECT(0x978e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x978c));
        EXPECT(0xa0, gbc.readMem(0x978d));
        // CB A0 02F3
        gbc.setState(0x4dd6, 0x4fc9, 0x5170, 0x8cdc, 0xf289, 0xe0c, 0x0, 0x1);
        gbc.writeMem(0x4dd6, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x4fc9, gbc.sp());
        EXPECT(0x4dd8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 02F4
        gbc.setState(0x2ec4, 0xe163, 0x47c0, 0xd2e3, 0x5ef7, 0x8a39, 0x0, 0x0);
        gbc.writeMem(0x2ec4, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xe163, gbc.sp());
        EXPECT(0x2ec6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A0 02F5
        gbc.setState(0xd803, 0x8fd5, 0x2c60, 0x536, 0xefb3, 0xcbaf, 0x1, 0x0);
        gbc.writeMem(0xd803, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x8fd5, gbc.sp());
        EXPECT(0xd805, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd803));
        EXPECT(0xa0, gbc.readMem(0xd804));
        // CB A0 02F6
        gbc.setState(0x8207, 0x69f5, 0x7760, 0x34b4, 0xbfb3, 0x6a38, 0x0, 0x0);
        gbc.writeMem(0x8207, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x69f5, gbc.sp());
        EXPECT(0x8209, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8207));
        EXPECT(0xa0, gbc.readMem(0x8208));
        // CB A0 02F7
        gbc.setState(0x8d6a, 0x903f, 0x8970, 0x9ad6, 0x76fa, 0xd425, 0x0, 0x1);
        gbc.writeMem(0x8d6a, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x903f, gbc.sp());
        EXPECT(0x8d6c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d6a));
        EXPECT(0xa0, gbc.readMem(0x8d6b));
        // CB A0 02F8
        gbc.setState(0xd2b, 0x6ae4, 0xaa20, 0x5d9b, 0x3e2a, 0x828d, 0x0, 0x1);
        gbc.writeMem(0xd2b, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x6ae4, gbc.sp());
        EXPECT(0xd2d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A0 02F9
        gbc.setState(0xb96, 0x9d93, 0x1e50, 0xa48f, 0x93fc, 0xfc59, 0x1, 0x0);
        gbc.writeMem(0xb96, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x9d93, gbc.sp());
        EXPECT(0xb98, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 02FA
        gbc.setState(0x499b, 0x2187, 0x11f0, 0x1f2d, 0x89e2, 0xe4c9, 0x0, 0x1);
        gbc.writeMem(0x499b, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x2187, gbc.sp());
        EXPECT(0x499d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 02FB
        gbc.setState(0x3d6, 0x63f3, 0xe3c0, 0x2247, 0x72ee, 0xb28d, 0x0, 0x1);
        gbc.writeMem(0x3d6, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x63f3, gbc.sp());
        EXPECT(0x3d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A0 02FC
        gbc.setState(0xc2e5, 0x2003, 0xa200, 0x65bf, 0xdc8a, 0x6424, 0x0, 0x1);
        gbc.writeMem(0xc2e5, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x2003, gbc.sp());
        EXPECT(0xc2e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc2e5));
        EXPECT(0xa0, gbc.readMem(0xc2e6));
        // CB A0 02FD
        gbc.setState(0x1819, 0xf722, 0x40c0, 0xb746, 0xaf52, 0xbecf, 0x1, 0x0);
        gbc.writeMem(0x1819, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xf722, gbc.sp());
        EXPECT(0x181b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A0 02FE
        gbc.setState(0x34a4, 0x78eb, 0x5640, 0x3872, 0x9494, 0xeb11, 0x0, 0x0);
        gbc.writeMem(0x34a4, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x78eb, gbc.sp());
        EXPECT(0x34a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A0 02FF
        gbc.setState(0xd251, 0x366e, 0x2950, 0xb2c7, 0xcd77, 0xfebb, 0x0, 0x0);
        gbc.writeMem(0xd251, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x366e, gbc.sp());
        EXPECT(0xd253, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd251));
        EXPECT(0xa0, gbc.readMem(0xd252));
        // CB A0 0300
        gbc.setState(0xd9a1, 0xf253, 0x2af0, 0xdf5b, 0xfca0, 0xb25f, 0x0, 0x1);
        gbc.writeMem(0xd9a1, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xf253, gbc.sp());
        EXPECT(0xd9a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd9a1));
        EXPECT(0xa0, gbc.readMem(0xd9a2));
        // CB A0 0301
        gbc.setState(0xede0, 0x9e11, 0x9240, 0x6948, 0x52b3, 0xc9dc, 0x0, 0x1);
        gbc.writeMem(0xede0, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x9e11, gbc.sp());
        EXPECT(0xede2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xede0));
        EXPECT(0xa0, gbc.readMem(0xede1));
        // CB A0 0302
        gbc.setState(0xc797, 0x30d7, 0x2830, 0x7ac, 0xf33c, 0xe43, 0x0, 0x1);
        gbc.writeMem(0xc797, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x30d7, gbc.sp());
        EXPECT(0xc799, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc797));
        EXPECT(0xa0, gbc.readMem(0xc798));
        // CB A0 0303
        gbc.setState(0x7bd1, 0x7c98, 0x1a20, 0x39af, 0xc11, 0x673b, 0x0, 0x0);
        gbc.writeMem(0x7bd1, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x7c98, gbc.sp());
        EXPECT(0x7bd3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A0 0304
        gbc.setState(0xb32b, 0xec65, 0x2270, 0x5241, 0x33ac, 0xce00, 0x0, 0x1);
        gbc.writeMem(0xb32b, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xec65, gbc.sp());
        EXPECT(0xb32d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb32b));
        EXPECT(0xa0, gbc.readMem(0xb32c));
        // CB A0 0305
        gbc.setState(0x2b5f, 0x2cb9, 0xf150, 0x862c, 0x7cb1, 0x7cb0, 0x1, 0x0);
        gbc.writeMem(0x2b5f, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x2cb9, gbc.sp());
        EXPECT(0x2b61, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 0306
        gbc.setState(0x3858, 0x8855, 0xf650, 0x2ea9, 0x4bae, 0xcf45, 0x1, 0x1);
        gbc.writeMem(0x3858, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x8855, gbc.sp());
        EXPECT(0x385a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 0307
        gbc.setState(0xebed, 0x9708, 0xe9d0, 0x8c23, 0xbc46, 0xd0c3, 0x0, 0x1);
        gbc.writeMem(0xebed, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x9708, gbc.sp());
        EXPECT(0xebef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xebed));
        EXPECT(0xa0, gbc.readMem(0xebee));
        // CB A0 0308
        gbc.setState(0xefb7, 0x318e, 0x5f10, 0xf7c5, 0xb54, 0xbaa1, 0x1, 0x1);
        gbc.writeMem(0xefb7, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x318e, gbc.sp());
        EXPECT(0xefb9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xefb7));
        EXPECT(0xa0, gbc.readMem(0xefb8));
        // CB A0 0309
        gbc.setState(0xc280, 0xb5b3, 0x20, 0x5207, 0x5989, 0x1498, 0x1, 0x0);
        gbc.writeMem(0xc280, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xb5b3, gbc.sp());
        EXPECT(0xc282, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc280));
        EXPECT(0xa0, gbc.readMem(0xc281));
        // CB A0 030A
        gbc.setState(0x81c9, 0xa398, 0x89f0, 0x90d0, 0x87cd, 0xcebe, 0x0, 0x1);
        gbc.writeMem(0x81c9, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xa398, gbc.sp());
        EXPECT(0x81cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x81c9));
        EXPECT(0xa0, gbc.readMem(0x81ca));
        // CB A0 030B
        gbc.setState(0x92d5, 0xfb5d, 0x6d60, 0x8af, 0xbad8, 0xf833, 0x1, 0x1);
        gbc.writeMem(0x92d5, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xfb5d, gbc.sp());
        EXPECT(0x92d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x92d5));
        EXPECT(0xa0, gbc.readMem(0x92d6));
        // CB A0 030C
        gbc.setState(0x65a9, 0x5925, 0xd50, 0xa575, 0xff68, 0xe03a, 0x1, 0x0);
        gbc.writeMem(0x65a9, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x5925, gbc.sp());
        EXPECT(0x65ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 030D
        gbc.setState(0xe2c7, 0xd684, 0x9e90, 0x61ee, 0x45e3, 0x9dd7, 0x1, 0x0);
        gbc.writeMem(0xe2c7, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xd684, gbc.sp());
        EXPECT(0xe2c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe2c7));
        EXPECT(0xa0, gbc.readMem(0xe2c8));
        // CB A0 030E
        gbc.setState(0x287e, 0x62c3, 0x8580, 0xc848, 0x44db, 0xe649, 0x1, 0x0);
        gbc.writeMem(0x287e, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x62c3, gbc.sp());
        EXPECT(0x2880, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A0 030F
        gbc.setState(0xbb62, 0xb9c4, 0x8c60, 0xa8b7, 0xa4f2, 0xe419, 0x1, 0x0);
        gbc.writeMem(0xbb62, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xb9c4, gbc.sp());
        EXPECT(0xbb64, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb62));
        EXPECT(0xa0, gbc.readMem(0xbb63));
        // CB A0 0310
        gbc.setState(0xa7cd, 0xb24, 0xbc90, 0xd27f, 0xa994, 0x90f3, 0x1, 0x1);
        gbc.writeMem(0xa7cd, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xb24, gbc.sp());
        EXPECT(0xa7cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa7cd));
        EXPECT(0xa0, gbc.readMem(0xa7ce));
        // CB A0 0311
        gbc.setState(0x9cbc, 0x1630, 0x670, 0x3730, 0x6c34, 0xcb0f, 0x1, 0x0);
        gbc.writeMem(0x9cbc, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x1630, gbc.sp());
        EXPECT(0x9cbe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9cbc));
        EXPECT(0xa0, gbc.readMem(0x9cbd));
        // CB A0 0312
        gbc.setState(0x8bd8, 0xc5f2, 0xdff0, 0x9ac9, 0xef36, 0x3f1a, 0x0, 0x0);
        gbc.writeMem(0x8bd8, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xc5f2, gbc.sp());
        EXPECT(0x8bda, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8bd8));
        EXPECT(0xa0, gbc.readMem(0x8bd9));
        // CB A0 0313
        gbc.setState(0x29d3, 0xe59e, 0x8f10, 0x6f3a, 0xa671, 0x5b83, 0x0, 0x0);
        gbc.writeMem(0x29d3, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xe59e, gbc.sp());
        EXPECT(0x29d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 0314
        gbc.setState(0x5624, 0xc52b, 0xcab0, 0xb03d, 0x437, 0xf026, 0x1, 0x1);
        gbc.writeMem(0x5624, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xc52b, gbc.sp());
        EXPECT(0x5626, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 0315
        gbc.setState(0xc68, 0xa810, 0x1a70, 0xd765, 0xe94c, 0x6de6, 0x0, 0x1);
        gbc.writeMem(0xc68, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xa810, gbc.sp());
        EXPECT(0xc6a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 0316
        gbc.setState(0x2126, 0x8fd7, 0x3d0, 0x84da, 0xff35, 0x7e46, 0x1, 0x0);
        gbc.writeMem(0x2126, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x8fd7, gbc.sp());
        EXPECT(0x2128, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 0317
        gbc.setState(0x3721, 0x656e, 0xd1e0, 0x592e, 0x79ef, 0xe524, 0x0, 0x1);
        gbc.writeMem(0x3721, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x656e, gbc.sp());
        EXPECT(0x3723, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A0 0318
        gbc.setState(0xef6f, 0x7230, 0x6770, 0x91e4, 0x99ed, 0x7a9a, 0x1, 0x1);
        gbc.writeMem(0xef6f, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x7230, gbc.sp());
        EXPECT(0xef71, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef6f));
        EXPECT(0xa0, gbc.readMem(0xef70));
        // CB A0 0319
        gbc.setState(0xe2d4, 0xb5bd, 0x8460, 0x1ace, 0x49c2, 0x8d3f, 0x0, 0x0);
        gbc.writeMem(0xe2d4, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xb5bd, gbc.sp());
        EXPECT(0xe2d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe2d4));
        EXPECT(0xa0, gbc.readMem(0xe2d5));
        // CB A0 031A
        gbc.setState(0x866f, 0x6ac, 0xaba0, 0x8f58, 0x44b2, 0x83c4, 0x1, 0x0);
        gbc.writeMem(0x866f, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x6ac, gbc.sp());
        EXPECT(0x8671, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x866f));
        EXPECT(0xa0, gbc.readMem(0x8670));
        // CB A0 031B
        gbc.setState(0xb1de, 0x7834, 0xf990, 0xb684, 0x1dd7, 0x331, 0x1, 0x1);
        gbc.writeMem(0xb1de, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x7834, gbc.sp());
        EXPECT(0xb1e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb1de));
        EXPECT(0xa0, gbc.readMem(0xb1df));
        // CB A0 031C
        gbc.setState(0x3c0b, 0x122a, 0xdb50, 0xea25, 0xe71d, 0x1cec, 0x0, 0x1);
        gbc.writeMem(0x3c0b, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x122a, gbc.sp());
        EXPECT(0x3c0d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 031D
        gbc.setState(0xd5ab, 0x2841, 0x8e50, 0x7dea, 0xfb3c, 0xd9d9, 0x0, 0x1);
        gbc.writeMem(0xd5ab, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x2841, gbc.sp());
        EXPECT(0xd5ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd5ab));
        EXPECT(0xa0, gbc.readMem(0xd5ac));
        // CB A0 031E
        gbc.setState(0xeb13, 0x275f, 0x6440, 0x81f6, 0xf3b2, 0x856f, 0x1, 0x0);
        gbc.writeMem(0xeb13, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x275f, gbc.sp());
        EXPECT(0xeb15, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb13));
        EXPECT(0xa0, gbc.readMem(0xeb14));
        // CB A0 031F
        gbc.setState(0xdfb0, 0x4671, 0xeee0, 0x15e1, 0x9643, 0x5a33, 0x0, 0x0);
        gbc.writeMem(0xdfb0, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x4671, gbc.sp());
        EXPECT(0xdfb2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdfb0));
        EXPECT(0xa0, gbc.readMem(0xdfb1));
        // CB A0 0320
        gbc.setState(0x9fc, 0xa689, 0x1d50, 0xaf7c, 0x4e29, 0xc1db, 0x1, 0x1);
        gbc.writeMem(0x9fc, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xa689, gbc.sp());
        EXPECT(0x9fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 0321
        gbc.setState(0x32dd, 0x5bbf, 0xbc10, 0x7fe1, 0x98ee, 0x9611, 0x1, 0x0);
        gbc.writeMem(0x32dd, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x5bbf, gbc.sp());
        EXPECT(0x32df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 0322
        gbc.setState(0x7d6d, 0xb5, 0xfb90, 0x8210, 0x44fc, 0x2c10, 0x1, 0x0);
        gbc.writeMem(0x7d6d, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xb5, gbc.sp());
        EXPECT(0x7d6f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 0323
        gbc.setState(0x8554, 0xf5c4, 0xd7d0, 0x8342, 0xf489, 0xd988, 0x1, 0x0);
        gbc.writeMem(0x8554, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xf5c4, gbc.sp());
        EXPECT(0x8556, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8554));
        EXPECT(0xa0, gbc.readMem(0x8555));
        // CB A0 0324
        gbc.setState(0x7779, 0x6d61, 0xb990, 0x504, 0x6044, 0xd2a2, 0x1, 0x1);
        gbc.writeMem(0x7779, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x6d61, gbc.sp());
        EXPECT(0x777b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 0325
        gbc.setState(0xc63f, 0xcd1c, 0x1a00, 0xe16c, 0xcc31, 0xd670, 0x0, 0x0);
        gbc.writeMem(0xc63f, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xcd1c, gbc.sp());
        EXPECT(0xc641, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc63f));
        EXPECT(0xa0, gbc.readMem(0xc640));
        // CB A0 0327
        gbc.setState(0x7862, 0x2012, 0x16b0, 0xd503, 0x6c45, 0x148c, 0x1, 0x1);
        gbc.writeMem(0x7862, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x2012, gbc.sp());
        EXPECT(0x7864, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 0328
        gbc.setState(0x1ad6, 0xc439, 0xf550, 0x1850, 0xcc78, 0x9e03, 0x1, 0x1);
        gbc.writeMem(0x1ad6, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xc439, gbc.sp());
        EXPECT(0x1ad8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 0329
        gbc.setState(0x248d, 0xf843, 0x1530, 0xf4f1, 0xdf4c, 0xfe9e, 0x0, 0x1);
        gbc.writeMem(0x248d, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xf843, gbc.sp());
        EXPECT(0x248f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 032A
        gbc.setState(0x9f97, 0x939f, 0x8e50, 0x2263, 0xa612, 0x188b, 0x0, 0x0);
        gbc.writeMem(0x9f97, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x939f, gbc.sp());
        EXPECT(0x9f99, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f97));
        EXPECT(0xa0, gbc.readMem(0x9f98));
        // CB A0 032B
        gbc.setState(0x27f7, 0x551, 0xa970, 0x200e, 0xfc08, 0x3677, 0x1, 0x1);
        gbc.writeMem(0x27f7, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x551, gbc.sp());
        EXPECT(0x27f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 032C
        gbc.setState(0x6c25, 0xfead, 0xe520, 0xa339, 0x103a, 0xfb81, 0x1, 0x0);
        gbc.writeMem(0x6c25, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xfead, gbc.sp());
        EXPECT(0x6c27, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A0 032D
        gbc.setState(0xab92, 0x2063, 0x790, 0xdcae, 0xfa78, 0xfa7f, 0x0, 0x0);
        gbc.writeMem(0xab92, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x2063, gbc.sp());
        EXPECT(0xab94, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab92));
        EXPECT(0xa0, gbc.readMem(0xab93));
        // CB A0 032E
        gbc.setState(0x561e, 0xb963, 0x50, 0x827, 0x86b7, 0x2a2f, 0x0, 0x1);
        gbc.writeMem(0x561e, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xb963, gbc.sp());
        EXPECT(0x5620, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 032F
        gbc.setState(0x8e7a, 0x8921, 0x5f30, 0x2900, 0xd21f, 0x2854, 0x0, 0x0);
        gbc.writeMem(0x8e7a, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x8921, gbc.sp());
        EXPECT(0x8e7c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e7a));
        EXPECT(0xa0, gbc.readMem(0x8e7b));
        // CB A0 0330
        gbc.setState(0x2ecd, 0xd744, 0x1420, 0x386b, 0xdd0e, 0xb183, 0x0, 0x0);
        gbc.writeMem(0x2ecd, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xd744, gbc.sp());
        EXPECT(0x2ecf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A0 0331
        gbc.setState(0x4534, 0x3483, 0xa4d0, 0x3a78, 0x239, 0x9168, 0x0, 0x1);
        gbc.writeMem(0x4534, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x3483, gbc.sp());
        EXPECT(0x4536, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 0332
        gbc.setState(0xb4a2, 0xb198, 0x2cf0, 0xcf1d, 0xfadf, 0x34b8, 0x0, 0x0);
        gbc.writeMem(0xb4a2, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xb198, gbc.sp());
        EXPECT(0xb4a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb4a2));
        EXPECT(0xa0, gbc.readMem(0xb4a3));
        // CB A0 0333
        gbc.setState(0x74d, 0xd4e4, 0xa810, 0x6ec, 0x63d8, 0xd532, 0x1, 0x1);
        gbc.writeMem(0x74d, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xd4e4, gbc.sp());
        EXPECT(0x74f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 0334
        gbc.setState(0x391d, 0x8bda, 0x3e10, 0x57b2, 0xcc57, 0x3362, 0x1, 0x0);
        gbc.writeMem(0x391d, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x8bda, gbc.sp());
        EXPECT(0x391f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 0335
        gbc.setState(0xa28d, 0x4f6d, 0x5440, 0x910d, 0xfd4, 0x139, 0x1, 0x1);
        gbc.writeMem(0xa28d, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x4f6d, gbc.sp());
        EXPECT(0xa28f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa28d));
        EXPECT(0xa0, gbc.readMem(0xa28e));
        // CB A0 0336
        gbc.setState(0xe2bf, 0x165a, 0x8480, 0xc573, 0x4f95, 0x2b1a, 0x0, 0x0);
        gbc.writeMem(0xe2bf, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x165a, gbc.sp());
        EXPECT(0xe2c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe2bf));
        EXPECT(0xa0, gbc.readMem(0xe2c0));
        // CB A0 0337
        gbc.setState(0x87e8, 0x12d7, 0xc960, 0xc26c, 0x85fe, 0x41e3, 0x1, 0x1);
        gbc.writeMem(0x87e8, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x12d7, gbc.sp());
        EXPECT(0x87ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x87e8));
        EXPECT(0xa0, gbc.readMem(0x87e9));
        // CB A0 0338
        gbc.setState(0x1cfb, 0xb542, 0xce90, 0x1c11, 0xc601, 0xa8b7, 0x1, 0x1);
        gbc.writeMem(0x1cfb, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xb542, gbc.sp());
        EXPECT(0x1cfd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 0339
        gbc.setState(0xef17, 0x634d, 0x1b20, 0xd6cc, 0xd6c4, 0x5d7, 0x1, 0x1);
        gbc.writeMem(0xef17, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x634d, gbc.sp());
        EXPECT(0xef19, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef17));
        EXPECT(0xa0, gbc.readMem(0xef18));
        // CB A0 033A
        gbc.setState(0xd484, 0xa4e6, 0x3d10, 0x1f14, 0x4aae, 0xc11d, 0x1, 0x0);
        gbc.writeMem(0xd484, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xa4e6, gbc.sp());
        EXPECT(0xd486, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd484));
        EXPECT(0xa0, gbc.readMem(0xd485));
        // CB A0 033B
        gbc.setState(0x19d4, 0x889, 0x27d0, 0xe208, 0x8511, 0x2733, 0x1, 0x1);
        gbc.writeMem(0x19d4, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x889, gbc.sp());
        EXPECT(0x19d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 033C
        gbc.setState(0xe9af, 0x4e79, 0xe600, 0xf721, 0xbaac, 0x93e0, 0x1, 0x0);
        gbc.writeMem(0xe9af, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x4e79, gbc.sp());
        EXPECT(0xe9b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe9af));
        EXPECT(0xa0, gbc.readMem(0xe9b0));
        // CB A0 033D
        gbc.setState(0x7758, 0x8efa, 0xa730, 0xd92a, 0xacc1, 0x10b5, 0x0, 0x1);
        gbc.writeMem(0x7758, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x8efa, gbc.sp());
        EXPECT(0x775a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 033E
        gbc.setState(0x20df, 0x998c, 0xa190, 0xe6e2, 0x6fcd, 0xe5eb, 0x0, 0x0);
        gbc.writeMem(0x20df, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x998c, gbc.sp());
        EXPECT(0x20e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 033F
        gbc.setState(0xbf4f, 0x10a6, 0x8f0, 0xe572, 0x19bd, 0x767d, 0x1, 0x0);
        gbc.writeMem(0xbf4f, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x10a6, gbc.sp());
        EXPECT(0xbf51, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf4f));
        EXPECT(0xa0, gbc.readMem(0xbf50));
        // CB A0 0340
        gbc.setState(0xcf8a, 0x7667, 0x9df0, 0xef77, 0x1477, 0xe76e, 0x0, 0x1);
        gbc.writeMem(0xcf8a, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x7667, gbc.sp());
        EXPECT(0xcf8c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf8a));
        EXPECT(0xa0, gbc.readMem(0xcf8b));
        // CB A0 0341
        gbc.setState(0x1331, 0xb940, 0x41f0, 0xd956, 0x19b2, 0x1764, 0x0, 0x0);
        gbc.writeMem(0x1331, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xb940, gbc.sp());
        EXPECT(0x1333, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 0342
        gbc.setState(0xaba2, 0x3472, 0x41e0, 0x6d52, 0xc26e, 0xe9ea, 0x1, 0x0);
        gbc.writeMem(0xaba2, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x3472, gbc.sp());
        EXPECT(0xaba4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaba2));
        EXPECT(0xa0, gbc.readMem(0xaba3));
        // CB A0 0343
        gbc.setState(0xd8af, 0x291b, 0x6320, 0xcd03, 0xdce0, 0xb48f, 0x1, 0x0);
        gbc.writeMem(0xd8af, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x291b, gbc.sp());
        EXPECT(0xd8b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd8af));
        EXPECT(0xa0, gbc.readMem(0xd8b0));
        // CB A0 0344
        gbc.setState(0x5308, 0x3f2b, 0x70, 0xd549, 0xe4dc, 0x397f, 0x0, 0x0);
        gbc.writeMem(0x5308, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x3f2b, gbc.sp());
        EXPECT(0x530a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 0345
        gbc.setState(0x42fc, 0x4b76, 0x7610, 0xadd2, 0x2937, 0x6676, 0x0, 0x1);
        gbc.writeMem(0x42fc, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x4b76, gbc.sp());
        EXPECT(0x42fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 0346
        gbc.setState(0x978a, 0x862b, 0x2f0, 0xd5bd, 0x4240, 0x41c0, 0x1, 0x0);
        gbc.writeMem(0x978a, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x862b, gbc.sp());
        EXPECT(0x978c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x978a));
        EXPECT(0xa0, gbc.readMem(0x978b));
        // CB A0 0347
        gbc.setState(0xc59, 0xcb1a, 0x9f00, 0x2ad2, 0x4bb3, 0x1ecf, 0x1, 0x1);
        gbc.writeMem(0xc59, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xcb1a, gbc.sp());
        EXPECT(0xc5b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A0 0348
        gbc.setState(0x1cc8, 0xd2d9, 0xe170, 0x29de, 0xed62, 0x8887, 0x0, 0x0);
        gbc.writeMem(0x1cc8, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xd2d9, gbc.sp());
        EXPECT(0x1cca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 0349
        gbc.setState(0x4504, 0x869f, 0x9d60, 0x2acf, 0xc871, 0x38a3, 0x1, 0x1);
        gbc.writeMem(0x4504, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x869f, gbc.sp());
        EXPECT(0x4506, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A0 034A
        gbc.setState(0x241a, 0x131, 0x45a0, 0x5d1a, 0x2dd3, 0xea06, 0x0, 0x1);
        gbc.writeMem(0x241a, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x131, gbc.sp());
        EXPECT(0x241c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A0 034B
        gbc.setState(0x27e3, 0xcc82, 0x98a0, 0x5ae8, 0x7f86, 0xa8bc, 0x1, 0x1);
        gbc.writeMem(0x27e3, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xcc82, gbc.sp());
        EXPECT(0x27e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A0 034C
        gbc.setState(0xc597, 0xfb43, 0x56f0, 0x7adf, 0x7f88, 0x3329, 0x0, 0x0);
        gbc.writeMem(0xc597, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xfb43, gbc.sp());
        EXPECT(0xc599, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc597));
        EXPECT(0xa0, gbc.readMem(0xc598));
        // CB A0 034D
        gbc.setState(0x6a8f, 0x22fe, 0x89f0, 0xe023, 0x2a8b, 0xb2a4, 0x0, 0x0);
        gbc.writeMem(0x6a8f, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x22fe, gbc.sp());
        EXPECT(0x6a91, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 034E
        gbc.setState(0x6218, 0x9e21, 0xab10, 0x40f3, 0x8491, 0x85da, 0x1, 0x1);
        gbc.writeMem(0x6218, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x9e21, gbc.sp());
        EXPECT(0x621a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 034F
        gbc.setState(0xbdc7, 0x4228, 0x43c0, 0xa03c, 0x8fcb, 0x2558, 0x0, 0x1);
        gbc.writeMem(0xbdc7, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x4228, gbc.sp());
        EXPECT(0xbdc9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbdc7));
        EXPECT(0xa0, gbc.readMem(0xbdc8));
        // CB A0 0350
        gbc.setState(0x54d, 0x14c9, 0x7970, 0xb3f4, 0x550, 0xc0f8, 0x0, 0x0);
        gbc.writeMem(0x54d, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x14c9, gbc.sp());
        EXPECT(0x54f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 0351
        gbc.setState(0x7208, 0xbfd1, 0x6610, 0x2a8a, 0x3ec2, 0x960a, 0x0, 0x0);
        gbc.writeMem(0x7208, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xbfd1, gbc.sp());
        EXPECT(0x720a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 0353
        gbc.setState(0x5b3e, 0x7f03, 0x84b0, 0xa67d, 0x6b1d, 0xc108, 0x0, 0x1);
        gbc.writeMem(0x5b3e, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x7f03, gbc.sp());
        EXPECT(0x5b40, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 0354
        gbc.setState(0xce0f, 0x1d8c, 0x6e30, 0x3518, 0xe062, 0x116d, 0x0, 0x1);
        gbc.writeMem(0xce0f, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x1d8c, gbc.sp());
        EXPECT(0xce11, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce0f));
        EXPECT(0xa0, gbc.readMem(0xce10));
        // CB A0 0356
        gbc.setState(0x5bc3, 0x3628, 0x10d0, 0xdc72, 0x152c, 0x5c00, 0x1, 0x1);
        gbc.writeMem(0x5bc3, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x3628, gbc.sp());
        EXPECT(0x5bc5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 0357
        gbc.setState(0x9bc9, 0x6b6e, 0x300, 0x4706, 0x61f0, 0x4cba, 0x1, 0x1);
        gbc.writeMem(0x9bc9, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x6b6e, gbc.sp());
        EXPECT(0x9bcb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9bc9));
        EXPECT(0xa0, gbc.readMem(0x9bca));
        // CB A0 0358
        gbc.setState(0x8228, 0xc328, 0xc1f0, 0x3bff, 0xc4de, 0xf245, 0x0, 0x0);
        gbc.writeMem(0x8228, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xc328, gbc.sp());
        EXPECT(0x822a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8228));
        EXPECT(0xa0, gbc.readMem(0x8229));
        // CB A0 0359
        gbc.setState(0xddef, 0x8968, 0xd000, 0x4089, 0x662e, 0xf6be, 0x1, 0x0);
        gbc.writeMem(0xddef, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x8968, gbc.sp());
        EXPECT(0xddf1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xddef));
        EXPECT(0xa0, gbc.readMem(0xddf0));
        // CB A0 035A
        gbc.setState(0x8630, 0x327a, 0x5cf0, 0x3002, 0xb5ee, 0xc192, 0x0, 0x0);
        gbc.writeMem(0x8630, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x327a, gbc.sp());
        EXPECT(0x8632, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8630));
        EXPECT(0xa0, gbc.readMem(0x8631));
        // CB A0 035C
        gbc.setState(0xdee8, 0xed67, 0xf740, 0xa0f7, 0x7f42, 0x34c2, 0x1, 0x1);
        gbc.writeMem(0xdee8, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xed67, gbc.sp());
        EXPECT(0xdeea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdee8));
        EXPECT(0xa0, gbc.readMem(0xdee9));
        // CB A0 035E
        gbc.setState(0xe938, 0x93d7, 0xcd30, 0x3b99, 0xe1d2, 0x7ad, 0x0, 0x1);
        gbc.writeMem(0xe938, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x93d7, gbc.sp());
        EXPECT(0xe93a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe938));
        EXPECT(0xa0, gbc.readMem(0xe939));
        // CB A0 035F
        gbc.setState(0xe2e0, 0x763f, 0x6180, 0xe28, 0x9cbe, 0xdd62, 0x0, 0x1);
        gbc.writeMem(0xe2e0, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x763f, gbc.sp());
        EXPECT(0xe2e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe2e0));
        EXPECT(0xa0, gbc.readMem(0xe2e1));
        // CB A0 0360
        gbc.setState(0xc29c, 0x2208, 0xa3f0, 0x8e6b, 0x642b, 0xfcdd, 0x1, 0x1);
        gbc.writeMem(0xc29c, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x2208, gbc.sp());
        EXPECT(0xc29e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc29c));
        EXPECT(0xa0, gbc.readMem(0xc29d));
        // CB A0 0361
        gbc.setState(0x74a8, 0x9e45, 0x4920, 0x54d6, 0xf3da, 0x3bc, 0x1, 0x0);
        gbc.writeMem(0x74a8, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x9e45, gbc.sp());
        EXPECT(0x74aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A0 0363
        gbc.setState(0x192a, 0x578b, 0x3250, 0x5afc, 0xf904, 0x429e, 0x0, 0x0);
        gbc.writeMem(0x192a, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x578b, gbc.sp());
        EXPECT(0x192c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 0364
        gbc.setState(0x4bd0, 0xc2cc, 0x8730, 0x487a, 0xf2ba, 0x5bbd, 0x0, 0x0);
        gbc.writeMem(0x4bd0, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xc2cc, gbc.sp());
        EXPECT(0x4bd2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 0365
        gbc.setState(0xd4f4, 0x808d, 0xec50, 0x8ca9, 0x4a0f, 0x42b, 0x0, 0x0);
        gbc.writeMem(0xd4f4, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x808d, gbc.sp());
        EXPECT(0xd4f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd4f4));
        EXPECT(0xa0, gbc.readMem(0xd4f5));
        // CB A0 0366
        gbc.setState(0x7feb, 0x4c57, 0x75b0, 0x4ddd, 0x1372, 0xb60f, 0x1, 0x1);
        gbc.writeMem(0x7feb, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x4c57, gbc.sp());
        EXPECT(0x7fed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 0367
        gbc.setState(0x133e, 0x6367, 0x81a0, 0x947f, 0x226b, 0x44e0, 0x0, 0x0);
        gbc.writeMem(0x133e, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x6367, gbc.sp());
        EXPECT(0x1340, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A0 0368
        gbc.setState(0x1cb5, 0x138e, 0xc410, 0x1746, 0x1bc2, 0x264d, 0x1, 0x1);
        gbc.writeMem(0x1cb5, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x138e, gbc.sp());
        EXPECT(0x1cb7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 0369
        gbc.setState(0x4bd, 0xd28b, 0x1de0, 0x3f0b, 0xc22a, 0x66ce, 0x1, 0x0);
        gbc.writeMem(0x4bd, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xd28b, gbc.sp());
        EXPECT(0x4bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A0 036A
        gbc.setState(0x2a2d, 0xbc87, 0x69d0, 0x829f, 0xea6, 0x2f9c, 0x1, 0x0);
        gbc.writeMem(0x2a2d, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xbc87, gbc.sp());
        EXPECT(0x2a2f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 036B
        gbc.setState(0x82b7, 0x843d, 0x4cd0, 0x2917, 0xe79b, 0xfe9b, 0x1, 0x1);
        gbc.writeMem(0x82b7, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x843d, gbc.sp());
        EXPECT(0x82b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x82b7));
        EXPECT(0xa0, gbc.readMem(0x82b8));
        // CB A0 036C
        gbc.setState(0x1540, 0x8ff7, 0x50d0, 0xbe76, 0x2c5e, 0xf083, 0x1, 0x1);
        gbc.writeMem(0x1540, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x8ff7, gbc.sp());
        EXPECT(0x1542, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 036D
        gbc.setState(0x7888, 0xa61d, 0xdad0, 0xc80a, 0xfb25, 0x8d70, 0x0, 0x0);
        gbc.writeMem(0x7888, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xa61d, gbc.sp());
        EXPECT(0x788a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 036F
        gbc.setState(0xec14, 0xdaac, 0x5da0, 0x5029, 0x5204, 0xcf60, 0x1, 0x1);
        gbc.writeMem(0xec14, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xdaac, gbc.sp());
        EXPECT(0xec16, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec14));
        EXPECT(0xa0, gbc.readMem(0xec15));
        // CB A0 0370
        gbc.setState(0x45cb, 0x830a, 0x51e0, 0xea62, 0xac7a, 0xeeba, 0x1, 0x0);
        gbc.writeMem(0x45cb, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x830a, gbc.sp());
        EXPECT(0x45cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A0 0371
        gbc.setState(0xdf6b, 0x66e4, 0x69c0, 0x3e60, 0xe163, 0xbe62, 0x0, 0x0);
        gbc.writeMem(0xdf6b, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x66e4, gbc.sp());
        EXPECT(0xdf6d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf6b));
        EXPECT(0xa0, gbc.readMem(0xdf6c));
        // CB A0 0372
        gbc.setState(0x32fa, 0xfdd, 0x4f10, 0x16e6, 0x10d1, 0x59f6, 0x1, 0x1);
        gbc.writeMem(0x32fa, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xfdd, gbc.sp());
        EXPECT(0x32fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 0373
        gbc.setState(0xc21f, 0x3764, 0xca90, 0xeb89, 0x8365, 0x53c9, 0x0, 0x0);
        gbc.writeMem(0xc21f, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x3764, gbc.sp());
        EXPECT(0xc221, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc21f));
        EXPECT(0xa0, gbc.readMem(0xc220));
        // CB A0 0374
        gbc.setState(0x43d5, 0x16b, 0xd1d0, 0xc909, 0x8f6d, 0x8d5, 0x1, 0x0);
        gbc.writeMem(0x43d5, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x16b, gbc.sp());
        EXPECT(0x43d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 0375
        gbc.setState(0xdc0d, 0xd8f0, 0x7a0, 0xb934, 0x3307, 0x6701, 0x0, 0x1);
        gbc.writeMem(0xdc0d, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xd8f0, gbc.sp());
        EXPECT(0xdc0f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc0d));
        EXPECT(0xa0, gbc.readMem(0xdc0e));
        // CB A0 0376
        gbc.setState(0x516d, 0xf654, 0x9640, 0xd972, 0x90dc, 0x22bd, 0x0, 0x0);
        gbc.writeMem(0x516d, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xf654, gbc.sp());
        EXPECT(0x516f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A0 0377
        gbc.setState(0x93df, 0xaa1d, 0xa640, 0xcf25, 0xfca7, 0x4a7a, 0x0, 0x1);
        gbc.writeMem(0x93df, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xaa1d, gbc.sp());
        EXPECT(0x93e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x93df));
        EXPECT(0xa0, gbc.readMem(0x93e0));
        // CB A0 0378
        gbc.setState(0xdf95, 0x8a31, 0xc5b0, 0xc6a8, 0xc3bf, 0xa3ee, 0x0, 0x0);
        gbc.writeMem(0xdf95, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x8a31, gbc.sp());
        EXPECT(0xdf97, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf95));
        EXPECT(0xa0, gbc.readMem(0xdf96));
        // CB A0 0379
        gbc.setState(0x42a8, 0xb5e0, 0x4970, 0x7160, 0x2dc9, 0xee8c, 0x1, 0x0);
        gbc.writeMem(0x42a8, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xb5e0, gbc.sp());
        EXPECT(0x42aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 037A
        gbc.setState(0xe873, 0x413d, 0x3340, 0x684e, 0xe47b, 0x988, 0x0, 0x1);
        gbc.writeMem(0xe873, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x413d, gbc.sp());
        EXPECT(0xe875, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe873));
        EXPECT(0xa0, gbc.readMem(0xe874));
        // CB A0 037B
        gbc.setState(0x154c, 0xb063, 0xf830, 0x9c6f, 0x4b13, 0x73e, 0x1, 0x1);
        gbc.writeMem(0x154c, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xb063, gbc.sp());
        EXPECT(0x154e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 037C
        gbc.setState(0x196e, 0xe9a7, 0xf630, 0xd55, 0xe696, 0xbd0e, 0x0, 0x0);
        gbc.writeMem(0x196e, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xe9a7, gbc.sp());
        EXPECT(0x1970, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 037D
        gbc.setState(0x4dad, 0x6366, 0x52f0, 0xb2b5, 0xce4f, 0xfd13, 0x1, 0x1);
        gbc.writeMem(0x4dad, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x6366, gbc.sp());
        EXPECT(0x4daf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 037E
        gbc.setState(0x4410, 0x1d22, 0xd6a0, 0x216d, 0xd562, 0xb7d, 0x1, 0x0);
        gbc.writeMem(0x4410, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x1d22, gbc.sp());
        EXPECT(0x4412, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A0 037F
        gbc.setState(0x963e, 0x6d6e, 0xce50, 0xff36, 0xaff5, 0x443, 0x1, 0x0);
        gbc.writeMem(0x963e, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x6d6e, gbc.sp());
        EXPECT(0x9640, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x963e));
        EXPECT(0xa0, gbc.readMem(0x963f));
        // CB A0 0380
        gbc.setState(0x7984, 0x4b43, 0xe340, 0x81f4, 0x57e7, 0xfdb7, 0x0, 0x0);
        gbc.writeMem(0x7984, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x4b43, gbc.sp());
        EXPECT(0x7986, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A0 0381
        gbc.setState(0x9979, 0x83bb, 0x4bc0, 0x5b1b, 0x9451, 0x42ec, 0x0, 0x0);
        gbc.writeMem(0x9979, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x83bb, gbc.sp());
        EXPECT(0x997b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9979));
        EXPECT(0xa0, gbc.readMem(0x997a));
        // CB A0 0382
        gbc.setState(0x84a5, 0x1db9, 0xb80, 0xd436, 0xf0ad, 0x3509, 0x0, 0x0);
        gbc.writeMem(0x84a5, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x1db9, gbc.sp());
        EXPECT(0x84a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x84a5));
        EXPECT(0xa0, gbc.readMem(0x84a6));
        // CB A0 0383
        gbc.setState(0x53, 0x9588, 0xe940, 0x954f, 0x52f6, 0x5922, 0x1, 0x0);
        gbc.writeMem(0x53, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x9588, gbc.sp());
        EXPECT(0x55, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A0 0384
        gbc.setState(0xe2ac, 0xbd3e, 0x2520, 0xfc65, 0xecdb, 0xb4f1, 0x1, 0x0);
        gbc.writeMem(0xe2ac, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xbd3e, gbc.sp());
        EXPECT(0xe2ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe2ac));
        EXPECT(0xa0, gbc.readMem(0xe2ad));
        // CB A0 0385
        gbc.setState(0x3e04, 0x9364, 0x86b0, 0xb72c, 0xb3aa, 0xcb1, 0x0, 0x0);
        gbc.writeMem(0x3e04, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x9364, gbc.sp());
        EXPECT(0x3e06, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 0386
        gbc.setState(0xb05c, 0x8fd9, 0xadf0, 0x9bb2, 0xc71, 0xc862, 0x0, 0x1);
        gbc.writeMem(0xb05c, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x8fd9, gbc.sp());
        EXPECT(0xb05e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb05c));
        EXPECT(0xa0, gbc.readMem(0xb05d));
        // CB A0 0387
        gbc.setState(0x185, 0x1f48, 0xc720, 0x61ae, 0x3aed, 0xe662, 0x1, 0x1);
        gbc.writeMem(0x185, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x1f48, gbc.sp());
        EXPECT(0x187, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A0 0388
        gbc.setState(0x772, 0xbb6c, 0xe30, 0xb075, 0x4a7c, 0xbcda, 0x0, 0x0);
        gbc.writeMem(0x772, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xbb6c, gbc.sp());
        EXPECT(0x774, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 0389
        gbc.setState(0x9382, 0x5334, 0xe090, 0xb02a, 0xdcb2, 0x9d5b, 0x1, 0x1);
        gbc.writeMem(0x9382, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x5334, gbc.sp());
        EXPECT(0x9384, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9382));
        EXPECT(0xa0, gbc.readMem(0x9383));
        // CB A0 038A
        gbc.setState(0xd30, 0x4c39, 0xcfc0, 0x6082, 0xd7c2, 0x3b91, 0x0, 0x0);
        gbc.writeMem(0xd30, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x4c39, gbc.sp());
        EXPECT(0xd32, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A0 038B
        gbc.setState(0xb114, 0xdc95, 0x8d70, 0x6829, 0xd7f7, 0x5937, 0x0, 0x0);
        gbc.writeMem(0xb114, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xdc95, gbc.sp());
        EXPECT(0xb116, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb114));
        EXPECT(0xa0, gbc.readMem(0xb115));
        // CB A0 038C
        gbc.setState(0xa171, 0xdcd8, 0x4cf0, 0x4035, 0xfc89, 0x12ae, 0x0, 0x1);
        gbc.writeMem(0xa171, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xdcd8, gbc.sp());
        EXPECT(0xa173, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa171));
        EXPECT(0xa0, gbc.readMem(0xa172));
        // CB A0 038D
        gbc.setState(0x6e41, 0x5384, 0x2370, 0x1d16, 0xc1b8, 0x56fe, 0x0, 0x1);
        gbc.writeMem(0x6e41, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x5384, gbc.sp());
        EXPECT(0x6e43, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 038E
        gbc.setState(0xe3f1, 0x87b1, 0x9b80, 0x78c5, 0x3a98, 0x23b4, 0x1, 0x1);
        gbc.writeMem(0xe3f1, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x87b1, gbc.sp());
        EXPECT(0xe3f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe3f1));
        EXPECT(0xa0, gbc.readMem(0xe3f2));
        // CB A0 038F
        gbc.setState(0x36c0, 0x267a, 0x95e0, 0x9820, 0x8640, 0x3083, 0x0, 0x1);
        gbc.writeMem(0x36c0, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x267a, gbc.sp());
        EXPECT(0x36c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A0 0390
        gbc.setState(0xe711, 0xe2d6, 0xe230, 0x6422, 0x2fdc, 0xe38c, 0x0, 0x0);
        gbc.writeMem(0xe711, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xe2d6, gbc.sp());
        EXPECT(0xe713, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe711));
        EXPECT(0xa0, gbc.readMem(0xe712));
        // CB A0 0391
        gbc.setState(0xa685, 0x48d2, 0xa250, 0xb009, 0x8fa2, 0xa3a5, 0x0, 0x1);
        gbc.writeMem(0xa685, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x48d2, gbc.sp());
        EXPECT(0xa687, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa685));
        EXPECT(0xa0, gbc.readMem(0xa686));
        // CB A0 0393
        gbc.setState(0x1fcf, 0x18e, 0xee30, 0x3454, 0x832b, 0x30be, 0x0, 0x0);
        gbc.writeMem(0x1fcf, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x18e, gbc.sp());
        EXPECT(0x1fd1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 0394
        gbc.setState(0x3a0d, 0x7a81, 0xf3f0, 0x1a7d, 0xf039, 0x8319, 0x1, 0x1);
        gbc.writeMem(0x3a0d, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x7a81, gbc.sp());
        EXPECT(0x3a0f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 0395
        gbc.setState(0xdd48, 0xb435, 0x1c70, 0x763f, 0x21d3, 0x2aee, 0x1, 0x1);
        gbc.writeMem(0xdd48, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xb435, gbc.sp());
        EXPECT(0xdd4a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd48));
        EXPECT(0xa0, gbc.readMem(0xdd49));
        // CB A0 0396
        gbc.setState(0xa498, 0x29f4, 0x38a0, 0x825c, 0x4231, 0x76a7, 0x0, 0x0);
        gbc.writeMem(0xa498, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x29f4, gbc.sp());
        EXPECT(0xa49a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa498));
        EXPECT(0xa0, gbc.readMem(0xa499));
        // CB A0 0397
        gbc.setState(0x5696, 0x5b0, 0x3cd0, 0x196f, 0xbb29, 0xf015, 0x0, 0x1);
        gbc.writeMem(0x5696, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x5b0, gbc.sp());
        EXPECT(0x5698, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 0398
        gbc.setState(0x6846, 0xf8a, 0xbb40, 0xd22b, 0x4137, 0x6dd9, 0x1, 0x0);
        gbc.writeMem(0x6846, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xf8a, gbc.sp());
        EXPECT(0x6848, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A0 0399
        gbc.setState(0xe7da, 0xd0e6, 0x3af0, 0xcb1b, 0x72f8, 0xfa20, 0x1, 0x0);
        gbc.writeMem(0xe7da, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xd0e6, gbc.sp());
        EXPECT(0xe7dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe7da));
        EXPECT(0xa0, gbc.readMem(0xe7db));
        // CB A0 039A
        gbc.setState(0x6b, 0x360c, 0xa690, 0x3fd0, 0x1c4, 0x7fc6, 0x0, 0x1);
        gbc.writeMem(0x6b, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x360c, gbc.sp());
        EXPECT(0x6d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 039B
        gbc.setState(0x8004, 0xbacf, 0x99f0, 0xad69, 0x882c, 0x5e29, 0x1, 0x1);
        gbc.writeMem(0x8004, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xbacf, gbc.sp());
        EXPECT(0x8006, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8004));
        EXPECT(0xa0, gbc.readMem(0x8005));
        // CB A0 039C
        gbc.setState(0x5d28, 0xaf2c, 0xa150, 0xe906, 0xca3d, 0x540e, 0x0, 0x1);
        gbc.writeMem(0x5d28, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xaf2c, gbc.sp());
        EXPECT(0x5d2a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 039D
        gbc.setState(0x744c, 0x2677, 0xb440, 0x5881, 0xd2e, 0x4929, 0x1, 0x1);
        gbc.writeMem(0x744c, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x2677, gbc.sp());
        EXPECT(0x744e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A0 039E
        gbc.setState(0x69d2, 0x1116, 0xf090, 0xf3a5, 0x34f2, 0x71f1, 0x0, 0x1);
        gbc.writeMem(0x69d2, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x1116, gbc.sp());
        EXPECT(0x69d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 039F
        gbc.setState(0x6c05, 0x51d9, 0x8d80, 0xdab8, 0xb832, 0xf336, 0x0, 0x0);
        gbc.writeMem(0x6c05, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x51d9, gbc.sp());
        EXPECT(0x6c07, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A0 03A0
        gbc.setState(0xa72a, 0xbbbc, 0x2c50, 0x3a22, 0xeb86, 0xefcd, 0x0, 0x1);
        gbc.writeMem(0xa72a, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xbbbc, gbc.sp());
        EXPECT(0xa72c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa72a));
        EXPECT(0xa0, gbc.readMem(0xa72b));
        // CB A0 03A1
        gbc.setState(0x5ff6, 0xdd26, 0x100, 0x11fd, 0x4d89, 0x3149, 0x0, 0x1);
        gbc.writeMem(0x5ff6, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xdd26, gbc.sp());
        EXPECT(0x5ff8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A0 03A2
        gbc.setState(0x58a5, 0x5c3b, 0x95a0, 0x4f95, 0xfe8, 0x2b01, 0x0, 0x0);
        gbc.writeMem(0x58a5, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x5c3b, gbc.sp());
        EXPECT(0x58a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A0 03A3
        gbc.setState(0xcfad, 0xa432, 0xbbc0, 0xa22b, 0x378a, 0x96c7, 0x1, 0x1);
        gbc.writeMem(0xcfad, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xa432, gbc.sp());
        EXPECT(0xcfaf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcfad));
        EXPECT(0xa0, gbc.readMem(0xcfae));
        // CB A0 03A4
        gbc.setState(0x8e9a, 0x2255, 0x47b0, 0x9c3e, 0x42ed, 0x5a70, 0x0, 0x0);
        gbc.writeMem(0x8e9a, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x2255, gbc.sp());
        EXPECT(0x8e9c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e9a));
        EXPECT(0xa0, gbc.readMem(0x8e9b));
        // CB A0 03A5
        gbc.setState(0x2849, 0xc26, 0x55d0, 0xcf9f, 0xbef8, 0x1d40, 0x0, 0x0);
        gbc.writeMem(0x2849, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xc26, gbc.sp());
        EXPECT(0x284b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 03A6
        gbc.setState(0xe8d7, 0xb46a, 0x2950, 0xed9c, 0x6223, 0xa364, 0x1, 0x0);
        gbc.writeMem(0xe8d7, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xb46a, gbc.sp());
        EXPECT(0xe8d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe8d7));
        EXPECT(0xa0, gbc.readMem(0xe8d8));
        // CB A0 03A7
        gbc.setState(0xc894, 0x24f8, 0x81b0, 0x35a2, 0x99ab, 0x187c, 0x1, 0x1);
        gbc.writeMem(0xc894, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x24f8, gbc.sp());
        EXPECT(0xc896, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc894));
        EXPECT(0xa0, gbc.readMem(0xc895));
        // CB A0 03A8
        gbc.setState(0x6761, 0x974a, 0xcf70, 0xc638, 0x1bc5, 0x5451, 0x0, 0x1);
        gbc.writeMem(0x6761, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x974a, gbc.sp());
        EXPECT(0x6763, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 03A9
        gbc.setState(0x3f7d, 0xd76b, 0x1130, 0xa0a5, 0x24cd, 0x2ded, 0x1, 0x1);
        gbc.writeMem(0x3f7d, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xd76b, gbc.sp());
        EXPECT(0x3f7f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 03AA
        gbc.setState(0x54d8, 0x7ec3, 0xfca0, 0x8b36, 0xbc90, 0xb93d, 0x0, 0x1);
        gbc.writeMem(0x54d8, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x7ec3, gbc.sp());
        EXPECT(0x54da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A0 03AB
        gbc.setState(0x9116, 0xb15b, 0x6b30, 0xcf62, 0x7b3d, 0xf0a8, 0x1, 0x1);
        gbc.writeMem(0x9116, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xb15b, gbc.sp());
        EXPECT(0x9118, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9116));
        EXPECT(0xa0, gbc.readMem(0x9117));
        // CB A0 03AC
        gbc.setState(0xc526, 0x32cf, 0x930, 0xa342, 0xb543, 0xb147, 0x1, 0x0);
        gbc.writeMem(0xc526, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x32cf, gbc.sp());
        EXPECT(0xc528, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc526));
        EXPECT(0xa0, gbc.readMem(0xc527));
        // CB A0 03AD
        gbc.setState(0xbb36, 0xd9ac, 0xbe90, 0x1e33, 0x41fb, 0xca51, 0x1, 0x0);
        gbc.writeMem(0xbb36, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xd9ac, gbc.sp());
        EXPECT(0xbb38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb36));
        EXPECT(0xa0, gbc.readMem(0xbb37));
        // CB A0 03AE
        gbc.setState(0xabf3, 0xcb3c, 0x1a00, 0x368b, 0xd7ac, 0x84ca, 0x0, 0x0);
        gbc.writeMem(0xabf3, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xcb3c, gbc.sp());
        EXPECT(0xabf5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xabf3));
        EXPECT(0xa0, gbc.readMem(0xabf4));
        // CB A0 03AF
        gbc.setState(0x9686, 0x8f61, 0x59e0, 0xa0e4, 0x3e5a, 0x31f0, 0x1, 0x1);
        gbc.writeMem(0x9686, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x8f61, gbc.sp());
        EXPECT(0x9688, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9686));
        EXPECT(0xa0, gbc.readMem(0x9687));
        // CB A0 03B0
        gbc.setState(0x274f, 0x3fca, 0xd040, 0xfd66, 0xad08, 0x41e6, 0x1, 0x0);
        gbc.writeMem(0x274f, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x3fca, gbc.sp());
        EXPECT(0x2751, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A0 03B1
        gbc.setState(0xa1f0, 0x5250, 0xb180, 0x5193, 0x6139, 0xc734, 0x0, 0x1);
        gbc.writeMem(0xa1f0, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x5250, gbc.sp());
        EXPECT(0xa1f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa1f0));
        EXPECT(0xa0, gbc.readMem(0xa1f1));
        // CB A0 03B2
        gbc.setState(0x5448, 0x4047, 0xe40, 0x7646, 0xd8e0, 0xc9ab, 0x0, 0x1);
        gbc.writeMem(0x5448, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x4047, gbc.sp());
        EXPECT(0x544a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A0 03B5
        gbc.setState(0xc8f2, 0x1cde, 0x9b0, 0x918, 0xf9cb, 0xef6, 0x1, 0x1);
        gbc.writeMem(0xc8f2, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x1cde, gbc.sp());
        EXPECT(0xc8f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc8f2));
        EXPECT(0xa0, gbc.readMem(0xc8f3));
        // CB A0 03B6
        gbc.setState(0x2525, 0x1a60, 0x8830, 0x3541, 0x66be, 0x6281, 0x0, 0x1);
        gbc.writeMem(0x2525, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x1a60, gbc.sp());
        EXPECT(0x2527, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 03B7
        gbc.setState(0x3129, 0x5d8d, 0xa2f0, 0x21f, 0xbf79, 0x925e, 0x1, 0x1);
        gbc.writeMem(0x3129, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x5d8d, gbc.sp());
        EXPECT(0x312b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 03B8
        gbc.setState(0x2a68, 0x34b8, 0xa690, 0xf9a9, 0x2869, 0xedc, 0x0, 0x1);
        gbc.writeMem(0x2a68, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x34b8, gbc.sp());
        EXPECT(0x2a6a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 03B9
        gbc.setState(0x3cf9, 0xa9e2, 0xc910, 0x3a2b, 0x344e, 0x1ce7, 0x0, 0x0);
        gbc.writeMem(0x3cf9, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xa9e2, gbc.sp());
        EXPECT(0x3cfb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 03BA
        gbc.setState(0x9466, 0x5df, 0xd220, 0x559, 0x6019, 0x4832, 0x0, 0x0);
        gbc.writeMem(0x9466, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x5df, gbc.sp());
        EXPECT(0x9468, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9466));
        EXPECT(0xa0, gbc.readMem(0x9467));
        // CB A0 03BB
        gbc.setState(0x5196, 0xbb44, 0x53d0, 0xd6ab, 0xc83a, 0x9a22, 0x0, 0x1);
        gbc.writeMem(0x5196, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xbb44, gbc.sp());
        EXPECT(0x5198, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 03BC
        gbc.setState(0x8418, 0x3951, 0x7c70, 0x227f, 0xcbb5, 0x3c66, 0x1, 0x0);
        gbc.writeMem(0x8418, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x3951, gbc.sp());
        EXPECT(0x841a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8418));
        EXPECT(0xa0, gbc.readMem(0x8419));
        // CB A0 03BD
        gbc.setState(0xa800, 0x28bf, 0x1ac0, 0xa419, 0xeef4, 0xce2c, 0x0, 0x1);
        gbc.writeMem(0xa800, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x28bf, gbc.sp());
        EXPECT(0xa802, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa800));
        EXPECT(0xa0, gbc.readMem(0xa801));
        // CB A0 03BE
        gbc.setState(0x5788, 0x313d, 0x8720, 0x44f5, 0xd495, 0x5417, 0x1, 0x1);
        gbc.writeMem(0x5788, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x313d, gbc.sp());
        EXPECT(0x578a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A0 03BF
        gbc.setState(0xccd3, 0x64c1, 0x42d0, 0xad6d, 0xb785, 0x8ed5, 0x0, 0x0);
        gbc.writeMem(0xccd3, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x64c1, gbc.sp());
        EXPECT(0xccd5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xccd3));
        EXPECT(0xa0, gbc.readMem(0xccd4));
        // CB A0 03C0
        gbc.setState(0x275a, 0x548c, 0xb4b0, 0xe0a4, 0xa93b, 0x9d6e, 0x0, 0x1);
        gbc.writeMem(0x275a, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x548c, gbc.sp());
        EXPECT(0x275c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 03C1
        gbc.setState(0x2799, 0x7316, 0xb790, 0x7d2e, 0x551a, 0xb3dc, 0x1, 0x1);
        gbc.writeMem(0x2799, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x7316, gbc.sp());
        EXPECT(0x279b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 03C2
        gbc.setState(0x2123, 0xdc53, 0xa040, 0x2014, 0xdfcb, 0x64a4, 0x1, 0x0);
        gbc.writeMem(0x2123, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xdc53, gbc.sp());
        EXPECT(0x2125, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A0 03C3
        gbc.setState(0x3567, 0x75cc, 0x4cb0, 0x1650, 0x8321, 0x89e8, 0x1, 0x0);
        gbc.writeMem(0x3567, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x75cc, gbc.sp());
        EXPECT(0x3569, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 03C4
        gbc.setState(0x5848, 0xef92, 0x4050, 0xc21b, 0x578c, 0x176b, 0x1, 0x0);
        gbc.writeMem(0x5848, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xef92, gbc.sp());
        EXPECT(0x584a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 03C5
        gbc.setState(0xc9a8, 0x4744, 0x5a00, 0xe4f1, 0x3d78, 0x5fa, 0x1, 0x0);
        gbc.writeMem(0xc9a8, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x4744, gbc.sp());
        EXPECT(0xc9aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc9a8));
        EXPECT(0xa0, gbc.readMem(0xc9a9));
        // CB A0 03C7
        gbc.setState(0x21d4, 0xb6e1, 0xcfc0, 0x27e6, 0xc72, 0xcc7, 0x1, 0x0);
        gbc.writeMem(0x21d4, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xb6e1, gbc.sp());
        EXPECT(0x21d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A0 03C8
        gbc.setState(0xa888, 0xdbe6, 0xcba0, 0x8697, 0x2be0, 0x53c7, 0x1, 0x1);
        gbc.writeMem(0xa888, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xdbe6, gbc.sp());
        EXPECT(0xa88a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa888));
        EXPECT(0xa0, gbc.readMem(0xa889));
        // CB A0 03C9
        gbc.setState(0x26f9, 0x3a9d, 0x1600, 0xfbfc, 0x81ba, 0x4b37, 0x0, 0x1);
        gbc.writeMem(0x26f9, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x3a9d, gbc.sp());
        EXPECT(0x26fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A0 03CA
        gbc.setState(0x5f8c, 0x48ae, 0x22b0, 0x7594, 0xf0ce, 0xf555, 0x1, 0x1);
        gbc.writeMem(0x5f8c, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x48ae, gbc.sp());
        EXPECT(0x5f8e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 03CB
        gbc.setState(0xecf2, 0xf486, 0x970, 0x5386, 0x8a32, 0xa679, 0x0, 0x0);
        gbc.writeMem(0xecf2, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xf486, gbc.sp());
        EXPECT(0xecf4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xecf2));
        EXPECT(0xa0, gbc.readMem(0xecf3));
        // CB A0 03CC
        gbc.setState(0x8723, 0x67ce, 0xdbb0, 0x597, 0x252f, 0x7179, 0x1, 0x0);
        gbc.writeMem(0x8723, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x67ce, gbc.sp());
        EXPECT(0x8725, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8723));
        EXPECT(0xa0, gbc.readMem(0x8724));
        // CB A0 03CD
        gbc.setState(0x7f29, 0x389a, 0x9d80, 0xb118, 0xc3a5, 0xe76f, 0x0, 0x1);
        gbc.writeMem(0x7f29, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x389a, gbc.sp());
        EXPECT(0x7f2b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A0 03CE
        gbc.setState(0x34a1, 0x3d9e, 0x87a0, 0x7e3f, 0xaf12, 0xc01, 0x0, 0x0);
        gbc.writeMem(0x34a1, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x3d9e, gbc.sp());
        EXPECT(0x34a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A0 03CF
        gbc.setState(0x5617, 0x5780, 0xe20, 0x4a49, 0x77a7, 0xee90, 0x0, 0x1);
        gbc.writeMem(0x5617, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x5780, gbc.sp());
        EXPECT(0x5619, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A0 03D0
        gbc.setState(0xac3e, 0xcb8e, 0x7740, 0x9455, 0xa8a6, 0x913, 0x1, 0x1);
        gbc.writeMem(0xac3e, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xcb8e, gbc.sp());
        EXPECT(0xac40, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac3e));
        EXPECT(0xa0, gbc.readMem(0xac3f));
        // CB A0 03D1
        gbc.setState(0xd3fd, 0x55b1, 0x78f0, 0x9636, 0xfc0a, 0x6cea, 0x1, 0x1);
        gbc.writeMem(0xd3fd, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x55b1, gbc.sp());
        EXPECT(0xd3ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd3fd));
        EXPECT(0xa0, gbc.readMem(0xd3fe));
        // CB A0 03D2
        gbc.setState(0x6ad0, 0xc1a0, 0xc610, 0xc23c, 0x200d, 0xf2aa, 0x1, 0x1);
        gbc.writeMem(0x6ad0, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xc1a0, gbc.sp());
        EXPECT(0x6ad2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 03D3
        gbc.setState(0x4525, 0xa9aa, 0x5750, 0xdf36, 0xfc00, 0x230e, 0x1, 0x0);
        gbc.writeMem(0x4525, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xa9aa, gbc.sp());
        EXPECT(0x4527, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 03D4
        gbc.setState(0x4916, 0x19d0, 0x810, 0x3a17, 0x8ead, 0xddfd, 0x1, 0x1);
        gbc.writeMem(0x4916, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x19d0, gbc.sp());
        EXPECT(0x4918, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 03D5
        gbc.setState(0x1f7c, 0x8096, 0x350, 0xaa0b, 0xf513, 0xf305, 0x0, 0x0);
        gbc.writeMem(0x1f7c, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x8096, gbc.sp());
        EXPECT(0x1f7e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 03D6
        gbc.setState(0xbad6, 0xf75c, 0xbaf0, 0x6ad4, 0x7d19, 0x216a, 0x0, 0x1);
        gbc.writeMem(0xbad6, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xf75c, gbc.sp());
        EXPECT(0xbad8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbad6));
        EXPECT(0xa0, gbc.readMem(0xbad7));
        // CB A0 03D7
        gbc.setState(0x7a1f, 0xf046, 0xe8d0, 0x38e8, 0xaf78, 0xc1b8, 0x0, 0x1);
        gbc.writeMem(0x7a1f, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xf046, gbc.sp());
        EXPECT(0x7a21, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 03D8
        gbc.setState(0x3946, 0x690a, 0x1460, 0x98e8, 0xa5c, 0x5c5b, 0x1, 0x1);
        gbc.writeMem(0x3946, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x690a, gbc.sp());
        EXPECT(0x3948, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A0 03D9
        gbc.setState(0x9d72, 0x58d2, 0xec20, 0xc39, 0x5dd3, 0xfcdc, 0x1, 0x1);
        gbc.writeMem(0x9d72, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x58d2, gbc.sp());
        EXPECT(0x9d74, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d72));
        EXPECT(0xa0, gbc.readMem(0x9d73));
        // CB A0 03DA
        gbc.setState(0xbc1d, 0x14b4, 0xf0a0, 0xa668, 0x4d5e, 0x9eb8, 0x1, 0x0);
        gbc.writeMem(0xbc1d, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x14b4, gbc.sp());
        EXPECT(0xbc1f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc1d));
        EXPECT(0xa0, gbc.readMem(0xbc1e));
        // CB A0 03DB
        gbc.setState(0x9b74, 0xf407, 0xff00, 0xec49, 0x1236, 0x3b68, 0x1, 0x0);
        gbc.writeMem(0x9b74, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xf407, gbc.sp());
        EXPECT(0x9b76, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b74));
        EXPECT(0xa0, gbc.readMem(0x9b75));
        // CB A0 03DC
        gbc.setState(0xebaa, 0x521, 0xc040, 0x8347, 0xfa16, 0x2737, 0x0, 0x0);
        gbc.writeMem(0xebaa, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x521, gbc.sp());
        EXPECT(0xebac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xebaa));
        EXPECT(0xa0, gbc.readMem(0xebab));
        // CB A0 03DD
        gbc.setState(0x9c0c, 0x924c, 0x94d0, 0x2fa6, 0x40b1, 0xb848, 0x0, 0x0);
        gbc.writeMem(0x9c0c, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x924c, gbc.sp());
        EXPECT(0x9c0e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c0c));
        EXPECT(0xa0, gbc.readMem(0x9c0d));
        // CB A0 03DE
        gbc.setState(0x2983, 0xc7ff, 0xc970, 0x859b, 0xc7bd, 0x753d, 0x0, 0x0);
        gbc.writeMem(0x2983, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xc7ff, gbc.sp());
        EXPECT(0x2985, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 03DF
        gbc.setState(0x5437, 0xbb87, 0x5dd0, 0xb0c1, 0xa87e, 0x17d5, 0x1, 0x1);
        gbc.writeMem(0x5437, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xbb87, gbc.sp());
        EXPECT(0x5439, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 03E1
        gbc.setState(0xefac, 0xd81b, 0xad20, 0xb888, 0x2d12, 0x7d03, 0x1, 0x0);
        gbc.writeMem(0xefac, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xd81b, gbc.sp());
        EXPECT(0xefae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xefac));
        EXPECT(0xa0, gbc.readMem(0xefad));
        // CB A0 03E2
        gbc.setState(0x912, 0xcb05, 0x9510, 0xc71f, 0x5771, 0xc8cf, 0x0, 0x1);
        gbc.writeMem(0x912, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xcb05, gbc.sp());
        EXPECT(0x914, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A0 03E3
        gbc.setState(0x20fa, 0xa910, 0x37c0, 0x23f4, 0x90ef, 0xc920, 0x1, 0x0);
        gbc.writeMem(0x20fa, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xa910, gbc.sp());
        EXPECT(0x20fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A0 03E4
        gbc.setState(0x3131, 0xc99b, 0xc420, 0x4c01, 0x37bd, 0x83e7, 0x1, 0x1);
        gbc.writeMem(0x3131, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xc99b, gbc.sp());
        EXPECT(0x3133, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A0 03E5
        gbc.setState(0x8f78, 0xb4fe, 0x1850, 0xfbf9, 0x7aae, 0xd4f9, 0x0, 0x0);
        gbc.writeMem(0x8f78, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xb4fe, gbc.sp());
        EXPECT(0x8f7a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f78));
        EXPECT(0xa0, gbc.readMem(0x8f79));
        // CB A0 03E6
        gbc.setState(0x9778, 0x5792, 0x1500, 0x564c, 0x93b5, 0x8cd8, 0x1, 0x0);
        gbc.writeMem(0x9778, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x5792, gbc.sp());
        EXPECT(0x977a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9778));
        EXPECT(0xa0, gbc.readMem(0x9779));
        // CB A0 03E7
        gbc.setState(0x62d3, 0xf0c4, 0xc320, 0x3d58, 0x4a27, 0x5202, 0x1, 0x0);
        gbc.writeMem(0x62d3, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xf0c4, gbc.sp());
        EXPECT(0x62d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
    }
