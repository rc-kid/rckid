    TEST(gbcemu, opcode_cb_1f) {
        GBCEmu gbc{"", nullptr};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB 1F 0000
        gbc.setState(0xc26e, 0x76bd, 0x450, 0xb7c2, 0xedb5, 0xee19, 0x0, 0x1);
        gbc.writeMem(0xc26e, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x76bd, gbc.sp());
        EXPECT(0xc270, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc26e));
        EXPECT(0x1f, gbc.readMem(0xc26f));
        // CB 1F 0002
        gbc.setState(0x67b5, 0xe696, 0x66e0, 0x8adb, 0x910b, 0x7eca, 0x1, 0x1);
        gbc.writeMem(0x67b5, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xe696, gbc.sp());
        EXPECT(0x67b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1F 0003
        gbc.setState(0xe6c0, 0x32d6, 0xab40, 0xe516, 0xf012, 0xdee8, 0x1, 0x0);
        gbc.writeMem(0xe6c0, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x32d6, gbc.sp());
        EXPECT(0xe6c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe6c0));
        EXPECT(0x1f, gbc.readMem(0xe6c1));
        // CB 1F 0004
        gbc.setState(0x96a7, 0xebaa, 0xe570, 0xed9e, 0xc16b, 0xa5b3, 0x0, 0x1);
        gbc.writeMem(0x96a7, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xebaa, gbc.sp());
        EXPECT(0x96a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x96a7));
        EXPECT(0x1f, gbc.readMem(0x96a8));
        // CB 1F 0005
        gbc.setState(0xa05a, 0xc998, 0x6050, 0x1bef, 0xf1fb, 0x33ab, 0x0, 0x1);
        gbc.writeMem(0xa05a, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xc998, gbc.sp());
        EXPECT(0xa05c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa05a));
        EXPECT(0x1f, gbc.readMem(0xa05b));
        // CB 1F 0006
        gbc.setState(0xe883, 0xc804, 0x4db0, 0x730, 0x41ca, 0x81cc, 0x0, 0x0);
        gbc.writeMem(0xe883, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xc804, gbc.sp());
        EXPECT(0xe885, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe883));
        EXPECT(0x1f, gbc.readMem(0xe884));
        // CB 1F 0007
        gbc.setState(0xe068, 0x65f9, 0x2110, 0xac33, 0x7a9a, 0x9a6c, 0x1, 0x0);
        gbc.writeMem(0xe068, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x65f9, gbc.sp());
        EXPECT(0xe06a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe068));
        EXPECT(0x1f, gbc.readMem(0xe069));
        // CB 1F 0008
        gbc.setState(0x5e01, 0x8edf, 0x90a0, 0xc7d5, 0xe4e3, 0xf236, 0x0, 0x0);
        gbc.writeMem(0x5e01, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x8edf, gbc.sp());
        EXPECT(0x5e03, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1F 0009
        gbc.setState(0x250b, 0x9696, 0x78b0, 0x34ce, 0x5676, 0x514b, 0x0, 0x1);
        gbc.writeMem(0x250b, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x9696, gbc.sp());
        EXPECT(0x250d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1F 000A
        gbc.setState(0x388c, 0xc11f, 0xde50, 0x48c7, 0x675b, 0xa167, 0x1, 0x0);
        gbc.writeMem(0x388c, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xc11f, gbc.sp());
        EXPECT(0x388e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1F 000B
        gbc.setState(0xe957, 0x39b4, 0xef20, 0xfd52, 0xaea1, 0xa6c0, 0x1, 0x1);
        gbc.writeMem(0xe957, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x39b4, gbc.sp());
        EXPECT(0xe959, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe957));
        EXPECT(0x1f, gbc.readMem(0xe958));
        // CB 1F 000C
        gbc.setState(0xdc7f, 0x73f0, 0xb480, 0xe653, 0xda0f, 0x6191, 0x0, 0x0);
        gbc.writeMem(0xdc7f, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x73f0, gbc.sp());
        EXPECT(0xdc81, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc7f));
        EXPECT(0x1f, gbc.readMem(0xdc80));
        // CB 1F 000E
        gbc.setState(0xb905, 0x82df, 0xcbb0, 0x96b7, 0x66f3, 0x6066, 0x1, 0x0);
        gbc.writeMem(0xb905, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x82df, gbc.sp());
        EXPECT(0xb907, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb905));
        EXPECT(0x1f, gbc.readMem(0xb906));
        // CB 1F 000F
        gbc.setState(0xa71a, 0x5ef3, 0x6a90, 0xdf39, 0xe014, 0xcde0, 0x0, 0x1);
        gbc.writeMem(0xa71a, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x5ef3, gbc.sp());
        EXPECT(0xa71c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa71a));
        EXPECT(0x1f, gbc.readMem(0xa71b));
        // CB 1F 0010
        gbc.setState(0xb400, 0xedc6, 0x79c0, 0x4574, 0xd82a, 0x9c2a, 0x0, 0x0);
        gbc.writeMem(0xb400, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xedc6, gbc.sp());
        EXPECT(0xb402, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb400));
        EXPECT(0x1f, gbc.readMem(0xb401));
        // CB 1F 0011
        gbc.setState(0xb156, 0xbb16, 0xc370, 0x639f, 0xaa8b, 0x79e9, 0x0, 0x1);
        gbc.writeMem(0xb156, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xbb16, gbc.sp());
        EXPECT(0xb158, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb156));
        EXPECT(0x1f, gbc.readMem(0xb157));
        // CB 1F 0012
        gbc.setState(0x4b19, 0x87ab, 0x4680, 0x4c58, 0xc9b5, 0x488e, 0x1, 0x1);
        gbc.writeMem(0x4b19, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x87ab, gbc.sp());
        EXPECT(0x4b1b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1F 0013
        gbc.setState(0xe5be, 0xec8f, 0xa6b0, 0xa4ad, 0x53ba, 0xe461, 0x0, 0x1);
        gbc.writeMem(0xe5be, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xec8f, gbc.sp());
        EXPECT(0xe5c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe5be));
        EXPECT(0x1f, gbc.readMem(0xe5bf));
        // CB 1F 0014
        gbc.setState(0x92a5, 0xb4d9, 0x6ad0, 0x9c56, 0xd474, 0xe766, 0x0, 0x1);
        gbc.writeMem(0x92a5, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xb4d9, gbc.sp());
        EXPECT(0x92a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x92a5));
        EXPECT(0x1f, gbc.readMem(0x92a6));
        // CB 1F 0015
        gbc.setState(0xf01, 0xa134, 0x7b0, 0x952b, 0xf542, 0x6867, 0x1, 0x0);
        gbc.writeMem(0xf01, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xa134, gbc.sp());
        EXPECT(0xf03, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 0016
        gbc.setState(0xc2c0, 0x66c7, 0x5db0, 0x62c3, 0x22e6, 0x68c5, 0x0, 0x1);
        gbc.writeMem(0xc2c0, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x66c7, gbc.sp());
        EXPECT(0xc2c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc2c0));
        EXPECT(0x1f, gbc.readMem(0xc2c1));
        // CB 1F 0017
        gbc.setState(0x3352, 0x3ae, 0xa8b0, 0xcc69, 0xb851, 0x978b, 0x0, 0x0);
        gbc.writeMem(0x3352, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x3ae, gbc.sp());
        EXPECT(0x3354, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1F 0018
        gbc.setState(0x89f5, 0x3cf9, 0x82a0, 0x1672, 0xe384, 0x9681, 0x1, 0x1);
        gbc.writeMem(0x89f5, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x3cf9, gbc.sp());
        EXPECT(0x89f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x89f5));
        EXPECT(0x1f, gbc.readMem(0x89f6));
        // CB 1F 001A
        gbc.setState(0x57e0, 0xf107, 0x4850, 0xfc1, 0xb8a7, 0x4c95, 0x0, 0x0);
        gbc.writeMem(0x57e0, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xf107, gbc.sp());
        EXPECT(0x57e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1F 001B
        gbc.setState(0xe043, 0x96a2, 0xe0c0, 0x66a, 0xb30a, 0x494d, 0x0, 0x1);
        gbc.writeMem(0xe043, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x96a2, gbc.sp());
        EXPECT(0xe045, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe043));
        EXPECT(0x1f, gbc.readMem(0xe044));
        // CB 1F 001C
        gbc.setState(0x500f, 0x5dbc, 0x6630, 0x3102, 0xd8a2, 0x2a10, 0x1, 0x0);
        gbc.writeMem(0x500f, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x5dbc, gbc.sp());
        EXPECT(0x5011, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1F 001D
        gbc.setState(0xc977, 0x88a1, 0x6910, 0x7a68, 0x5d4c, 0x473f, 0x0, 0x0);
        gbc.writeMem(0xc977, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x88a1, gbc.sp());
        EXPECT(0xc979, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc977));
        EXPECT(0x1f, gbc.readMem(0xc978));
        // CB 1F 001E
        gbc.setState(0x1d7f, 0xc270, 0x1f90, 0xb199, 0x4055, 0xb6fe, 0x0, 0x0);
        gbc.writeMem(0x1d7f, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xc270, gbc.sp());
        EXPECT(0x1d81, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 001F
        gbc.setState(0xcb73, 0x3724, 0xf9d0, 0xc37d, 0xc56a, 0xa508, 0x1, 0x1);
        gbc.writeMem(0xcb73, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x3724, gbc.sp());
        EXPECT(0xcb75, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb73));
        EXPECT(0x1f, gbc.readMem(0xcb74));
        // CB 1F 0020
        gbc.setState(0x1eb5, 0x61bf, 0xb090, 0x3812, 0x208a, 0xc08d, 0x1, 0x0);
        gbc.writeMem(0x1eb5, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x61bf, gbc.sp());
        EXPECT(0x1eb7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1F 0021
        gbc.setState(0x8543, 0x64a2, 0xb770, 0xbeb6, 0x2747, 0xb420, 0x1, 0x1);
        gbc.writeMem(0x8543, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x64a2, gbc.sp());
        EXPECT(0x8545, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8543));
        EXPECT(0x1f, gbc.readMem(0x8544));
        // CB 1F 0022
        gbc.setState(0xac0e, 0x9443, 0xe310, 0x6310, 0x64a3, 0x1cbf, 0x1, 0x1);
        gbc.writeMem(0xac0e, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x9443, gbc.sp());
        EXPECT(0xac10, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac0e));
        EXPECT(0x1f, gbc.readMem(0xac0f));
        // CB 1F 0023
        gbc.setState(0xc0aa, 0xe7e1, 0xa010, 0x711b, 0xb195, 0xdc9c, 0x0, 0x1);
        gbc.writeMem(0xc0aa, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xe7e1, gbc.sp());
        EXPECT(0xc0ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc0aa));
        EXPECT(0x1f, gbc.readMem(0xc0ab));
        // CB 1F 0024
        gbc.setState(0x1f78, 0x5d78, 0xf040, 0x4341, 0x77d9, 0x3e6, 0x0, 0x1);
        gbc.writeMem(0x1f78, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x5d78, gbc.sp());
        EXPECT(0x1f7a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1F 0025
        gbc.setState(0x3343, 0x5227, 0x1c20, 0xa135, 0xaef7, 0x630c, 0x0, 0x1);
        gbc.writeMem(0x3343, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x5227, gbc.sp());
        EXPECT(0x3345, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1F 0026
        gbc.setState(0xd328, 0x71cb, 0x280, 0xa75d, 0x8880, 0xeaea, 0x0, 0x1);
        gbc.writeMem(0xd328, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x71cb, gbc.sp());
        EXPECT(0xd32a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd328));
        EXPECT(0x1f, gbc.readMem(0xd329));
        // CB 1F 0027
        gbc.setState(0x3fe4, 0x94a, 0x4fc0, 0x52f, 0x5da1, 0x8d38, 0x1, 0x0);
        gbc.writeMem(0x3fe4, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x94a, gbc.sp());
        EXPECT(0x3fe6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 0028
        gbc.setState(0x725, 0x3f91, 0x5110, 0x79ca, 0x8b33, 0xe241, 0x1, 0x1);
        gbc.writeMem(0x725, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x3f91, gbc.sp());
        EXPECT(0x727, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 0029
        gbc.setState(0xcea1, 0x2f9d, 0xae70, 0xe8fc, 0xb675, 0x70d0, 0x1, 0x1);
        gbc.writeMem(0xcea1, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x2f9d, gbc.sp());
        EXPECT(0xcea3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcea1));
        EXPECT(0x1f, gbc.readMem(0xcea2));
        // CB 1F 002A
        gbc.setState(0x4813, 0x5a0, 0xa420, 0x6ccc, 0xa8cc, 0xb61f, 0x1, 0x0);
        gbc.writeMem(0x4813, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x5a0, gbc.sp());
        EXPECT(0x4815, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1F 002B
        gbc.setState(0xe0d8, 0x59e4, 0xffa0, 0x8bc5, 0x37b6, 0x2762, 0x1, 0x0);
        gbc.writeMem(0xe0d8, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x59e4, gbc.sp());
        EXPECT(0xe0da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe0d8));
        EXPECT(0x1f, gbc.readMem(0xe0d9));
        // CB 1F 002C
        gbc.setState(0x3985, 0x38ad, 0x8940, 0x5174, 0x78d, 0x2ab0, 0x1, 0x1);
        gbc.writeMem(0x3985, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x38ad, gbc.sp());
        EXPECT(0x3987, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 002D
        gbc.setState(0xd2a2, 0x9bfa, 0x5770, 0xdaec, 0x7c7, 0x25a1, 0x1, 0x1);
        gbc.writeMem(0xd2a2, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x9bfa, gbc.sp());
        EXPECT(0xd2a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd2a2));
        EXPECT(0x1f, gbc.readMem(0xd2a3));
        // CB 1F 002E
        gbc.setState(0x7d56, 0x190d, 0x7100, 0x3a76, 0x19c2, 0xea42, 0x0, 0x1);
        gbc.writeMem(0x7d56, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x190d, gbc.sp());
        EXPECT(0x7d58, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 002F
        gbc.setState(0x15fc, 0xb825, 0xd640, 0xed9d, 0xfb63, 0x7162, 0x0, 0x0);
        gbc.writeMem(0x15fc, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xb825, gbc.sp());
        EXPECT(0x15fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1F 0030
        gbc.setState(0x7817, 0x4a48, 0xb130, 0xcfe1, 0x47b4, 0xb99c, 0x1, 0x1);
        gbc.writeMem(0x7817, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x4a48, gbc.sp());
        EXPECT(0x7819, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 0031
        gbc.setState(0x8108, 0xe0fe, 0xf7e0, 0x26ff, 0xa2ec, 0x807f, 0x0, 0x1);
        gbc.writeMem(0x8108, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xe0fe, gbc.sp());
        EXPECT(0x810a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8108));
        EXPECT(0x1f, gbc.readMem(0x8109));
        // CB 1F 0032
        gbc.setState(0x1c6e, 0x8c02, 0x21b0, 0xe30b, 0xda46, 0xc5e4, 0x0, 0x0);
        gbc.writeMem(0x1c6e, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x8c02, gbc.sp());
        EXPECT(0x1c70, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 0033
        gbc.setState(0x1484, 0x20fe, 0x290, 0x5d6c, 0x4bac, 0x376c, 0x0, 0x0);
        gbc.writeMem(0x1484, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x20fe, gbc.sp());
        EXPECT(0x1486, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1F 0034
        gbc.setState(0x8da4, 0x8652, 0xcb90, 0x7603, 0xdd39, 0x6dd6, 0x0, 0x1);
        gbc.writeMem(0x8da4, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x8652, gbc.sp());
        EXPECT(0x8da6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8da4));
        EXPECT(0x1f, gbc.readMem(0x8da5));
        // CB 1F 0035
        gbc.setState(0x2cb5, 0xef87, 0xac90, 0xe928, 0xfaa6, 0x864c, 0x1, 0x1);
        gbc.writeMem(0x2cb5, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xef87, gbc.sp());
        EXPECT(0x2cb7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1F 0036
        gbc.setState(0xb503, 0x4b47, 0xcd30, 0x909d, 0x3b87, 0xdaee, 0x0, 0x1);
        gbc.writeMem(0xb503, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x4b47, gbc.sp());
        EXPECT(0xb505, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb503));
        EXPECT(0x1f, gbc.readMem(0xb504));
        // CB 1F 0037
        gbc.setState(0xcfbc, 0x473f, 0x8e50, 0x6bc, 0x4068, 0x37ee, 0x1, 0x0);
        gbc.writeMem(0xcfbc, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x473f, gbc.sp());
        EXPECT(0xcfbe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcfbc));
        EXPECT(0x1f, gbc.readMem(0xcfbd));
        // CB 1F 0038
        gbc.setState(0xee1a, 0xf27f, 0x3680, 0x6fd1, 0xdbd9, 0x9376, 0x0, 0x0);
        gbc.writeMem(0xee1a, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xf27f, gbc.sp());
        EXPECT(0xee1c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee1a));
        EXPECT(0x1f, gbc.readMem(0xee1b));
        // CB 1F 0039
        gbc.setState(0x6d73, 0xd08c, 0x6b70, 0xb701, 0xb3ce, 0x7dbe, 0x0, 0x0);
        gbc.writeMem(0x6d73, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xd08c, gbc.sp());
        EXPECT(0x6d75, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 003A
        gbc.setState(0x2f61, 0x5464, 0x4370, 0xfce2, 0x3896, 0x583b, 0x0, 0x1);
        gbc.writeMem(0x2f61, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x5464, gbc.sp());
        EXPECT(0x2f63, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 003B
        gbc.setState(0xccc7, 0x25cb, 0x5d50, 0xc600, 0x6526, 0xb4d8, 0x1, 0x0);
        gbc.writeMem(0xccc7, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x25cb, gbc.sp());
        EXPECT(0xccc9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xccc7));
        EXPECT(0x1f, gbc.readMem(0xccc8));
        // CB 1F 003C
        gbc.setState(0x18f, 0x44c3, 0xd400, 0xaea2, 0xd092, 0x34c7, 0x1, 0x0);
        gbc.writeMem(0x18f, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x44c3, gbc.sp());
        EXPECT(0x191, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1F 003D
        gbc.setState(0xc859, 0x4ee3, 0x7990, 0xfe3e, 0x563d, 0x647e, 0x0, 0x0);
        gbc.writeMem(0xc859, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x4ee3, gbc.sp());
        EXPECT(0xc85b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc859));
        EXPECT(0x1f, gbc.readMem(0xc85a));
        // CB 1F 003E
        gbc.setState(0x21a3, 0xde86, 0xd510, 0xd9f5, 0xe24, 0xda4e, 0x0, 0x0);
        gbc.writeMem(0x21a3, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xde86, gbc.sp());
        EXPECT(0x21a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 003F
        gbc.setState(0xac5, 0x7e70, 0x8f80, 0x2a06, 0x88db, 0x493, 0x0, 0x0);
        gbc.writeMem(0xac5, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x7e70, gbc.sp());
        EXPECT(0xac7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 0040
        gbc.setState(0xb2db, 0xe67d, 0x4480, 0x833d, 0x267b, 0xbc5f, 0x0, 0x1);
        gbc.writeMem(0xb2db, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xe67d, gbc.sp());
        EXPECT(0xb2dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb2db));
        EXPECT(0x1f, gbc.readMem(0xb2dc));
        // CB 1F 0041
        gbc.setState(0xcc8c, 0x2ec9, 0x3a30, 0x3cc2, 0x368f, 0xcaa6, 0x0, 0x0);
        gbc.writeMem(0xcc8c, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x2ec9, gbc.sp());
        EXPECT(0xcc8e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc8c));
        EXPECT(0x1f, gbc.readMem(0xcc8d));
        // CB 1F 0042
        gbc.setState(0x39f8, 0xb466, 0xd770, 0x4955, 0x54a5, 0x36cc, 0x0, 0x0);
        gbc.writeMem(0x39f8, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xb466, gbc.sp());
        EXPECT(0x39fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 0043
        gbc.setState(0x1a6c, 0x4527, 0x7e50, 0xfaf6, 0x564, 0xcf99, 0x0, 0x1);
        gbc.writeMem(0x1a6c, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x4527, gbc.sp());
        EXPECT(0x1a6e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1F 0044
        gbc.setState(0x9860, 0x9aa8, 0xc1c0, 0x8d86, 0xc974, 0xcee, 0x0, 0x1);
        gbc.writeMem(0x9860, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x9aa8, gbc.sp());
        EXPECT(0x9862, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9860));
        EXPECT(0x1f, gbc.readMem(0x9861));
        // CB 1F 0045
        gbc.setState(0x3d8c, 0x161d, 0x5b10, 0x8047, 0x1e34, 0xf31c, 0x1, 0x1);
        gbc.writeMem(0x3d8c, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x161d, gbc.sp());
        EXPECT(0x3d8e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 0046
        gbc.setState(0x8f2f, 0xd5e8, 0x79d0, 0x629a, 0x87c1, 0xbce2, 0x1, 0x0);
        gbc.writeMem(0x8f2f, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xd5e8, gbc.sp());
        EXPECT(0x8f31, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f2f));
        EXPECT(0x1f, gbc.readMem(0x8f30));
        // CB 1F 0047
        gbc.setState(0x3830, 0xdfd0, 0x89b0, 0xf879, 0x6eb6, 0xb472, 0x1, 0x0);
        gbc.writeMem(0x3830, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xdfd0, gbc.sp());
        EXPECT(0x3832, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 0048
        gbc.setState(0x5d41, 0x61d6, 0x2050, 0x82d3, 0x1399, 0x95fa, 0x1, 0x0);
        gbc.writeMem(0x5d41, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x61d6, gbc.sp());
        EXPECT(0x5d43, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1F 0049
        gbc.setState(0xc66a, 0x2eef, 0xc790, 0x6677, 0x7777, 0x28c6, 0x1, 0x0);
        gbc.writeMem(0xc66a, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x2eef, gbc.sp());
        EXPECT(0xc66c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc66a));
        EXPECT(0x1f, gbc.readMem(0xc66b));
        // CB 1F 004A
        gbc.setState(0xb574, 0x452c, 0xc250, 0x6a59, 0xa022, 0x4ae3, 0x1, 0x1);
        gbc.writeMem(0xb574, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x452c, gbc.sp());
        EXPECT(0xb576, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb574));
        EXPECT(0x1f, gbc.readMem(0xb575));
        // CB 1F 004B
        gbc.setState(0x9a09, 0xb747, 0xbc90, 0x8dec, 0x5b4c, 0x3a1d, 0x1, 0x0);
        gbc.writeMem(0x9a09, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xb747, gbc.sp());
        EXPECT(0x9a0b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a09));
        EXPECT(0x1f, gbc.readMem(0x9a0a));
        // CB 1F 004C
        gbc.setState(0x65ce, 0x8f33, 0xaf30, 0xfa2a, 0x68e8, 0xbec4, 0x0, 0x1);
        gbc.writeMem(0x65ce, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x8f33, gbc.sp());
        EXPECT(0x65d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 004D
        gbc.setState(0x65ea, 0xde91, 0x3ba0, 0x3cc2, 0x6fc9, 0x24b9, 0x0, 0x0);
        gbc.writeMem(0x65ea, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xde91, gbc.sp());
        EXPECT(0x65ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 004E
        gbc.setState(0x23b4, 0x948d, 0xfe20, 0x7ffc, 0x187b, 0x6a88, 0x1, 0x1);
        gbc.writeMem(0x23b4, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x948d, gbc.sp());
        EXPECT(0x23b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1F 004F
        gbc.setState(0x12f5, 0x8a5b, 0x7aa0, 0x1ce2, 0xf2f5, 0xe6be, 0x1, 0x1);
        gbc.writeMem(0x12f5, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x8a5b, gbc.sp());
        EXPECT(0x12f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1F 0050
        gbc.setState(0xe017, 0xf3a8, 0xd9a0, 0xd57d, 0xf7ca, 0xf527, 0x1, 0x1);
        gbc.writeMem(0xe017, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xf3a8, gbc.sp());
        EXPECT(0xe019, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe017));
        EXPECT(0x1f, gbc.readMem(0xe018));
        // CB 1F 0051
        gbc.setState(0x7c1b, 0xbefb, 0xf610, 0xa353, 0x7e6c, 0x7283, 0x1, 0x1);
        gbc.writeMem(0x7c1b, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xbefb, gbc.sp());
        EXPECT(0x7c1d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1F 0052
        gbc.setState(0xc41f, 0x59a2, 0x20a0, 0x689c, 0x9568, 0x2fbb, 0x1, 0x1);
        gbc.writeMem(0xc41f, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x59a2, gbc.sp());
        EXPECT(0xc421, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc41f));
        EXPECT(0x1f, gbc.readMem(0xc420));
        // CB 1F 0053
        gbc.setState(0xa6ec, 0x8ff9, 0x1f20, 0x5dd5, 0x6e64, 0x4b20, 0x1, 0x0);
        gbc.writeMem(0xa6ec, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x8ff9, gbc.sp());
        EXPECT(0xa6ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa6ec));
        EXPECT(0x1f, gbc.readMem(0xa6ed));
        // CB 1F 0054
        gbc.setState(0x9d05, 0x9d4e, 0x8060, 0xea9e, 0x878a, 0x55e, 0x1, 0x1);
        gbc.writeMem(0x9d05, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x9d4e, gbc.sp());
        EXPECT(0x9d07, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d05));
        EXPECT(0x1f, gbc.readMem(0x9d06));
        // CB 1F 0055
        gbc.setState(0x12c1, 0xd4b6, 0xaa00, 0xb729, 0x618d, 0x8c8c, 0x1, 0x0);
        gbc.writeMem(0x12c1, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xd4b6, gbc.sp());
        EXPECT(0x12c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1F 0056
        gbc.setState(0x5864, 0xdc00, 0x2550, 0x42cf, 0xd586, 0x66e2, 0x0, 0x0);
        gbc.writeMem(0x5864, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xdc00, gbc.sp());
        EXPECT(0x5866, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 0057
        gbc.setState(0xb894, 0xae22, 0xd8b0, 0x269e, 0xb128, 0x249d, 0x1, 0x1);
        gbc.writeMem(0xb894, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xae22, gbc.sp());
        EXPECT(0xb896, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb894));
        EXPECT(0x1f, gbc.readMem(0xb895));
        // CB 1F 0058
        gbc.setState(0x36fa, 0x2f3a, 0x7fe0, 0x33b7, 0x26cd, 0xda9b, 0x1, 0x1);
        gbc.writeMem(0x36fa, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x2f3a, gbc.sp());
        EXPECT(0x36fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 0059
        gbc.setState(0x64b0, 0xcd77, 0xe980, 0xd202, 0xe4df, 0x70d2, 0x1, 0x1);
        gbc.writeMem(0x64b0, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xcd77, gbc.sp());
        EXPECT(0x64b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 005A
        gbc.setState(0x3cce, 0x175b, 0x38d0, 0xeb78, 0x6cf4, 0x7017, 0x1, 0x0);
        gbc.writeMem(0x3cce, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x175b, gbc.sp());
        EXPECT(0x3cd0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1F 005B
        gbc.setState(0x6f3d, 0xa167, 0x45b0, 0x6332, 0x772a, 0x6303, 0x1, 0x1);
        gbc.writeMem(0x6f3d, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xa167, gbc.sp());
        EXPECT(0x6f3f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 005C
        gbc.setState(0x111e, 0x392, 0xf520, 0x6c10, 0x85d1, 0x664e, 0x0, 0x1);
        gbc.writeMem(0x111e, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x392, gbc.sp());
        EXPECT(0x1120, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 005D
        gbc.setState(0x818f, 0x928e, 0xea10, 0xf0d9, 0x26cc, 0xc39f, 0x1, 0x1);
        gbc.writeMem(0x818f, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x928e, gbc.sp());
        EXPECT(0x8191, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x818f));
        EXPECT(0x1f, gbc.readMem(0x8190));
        // CB 1F 005E
        gbc.setState(0x6979, 0x8b91, 0xe9c0, 0x7ed2, 0xcae6, 0xc57, 0x0, 0x0);
        gbc.writeMem(0x6979, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x8b91, gbc.sp());
        EXPECT(0x697b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 005F
        gbc.setState(0x6a40, 0x9170, 0xd2e0, 0x6d85, 0x47af, 0x5e9e, 0x1, 0x0);
        gbc.writeMem(0x6a40, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x9170, gbc.sp());
        EXPECT(0x6a42, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1F 0060
        gbc.setState(0xb2b5, 0x1f10, 0x1cd0, 0x1173, 0x2c6e, 0x9859, 0x1, 0x0);
        gbc.writeMem(0xb2b5, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x1f10, gbc.sp());
        EXPECT(0xb2b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb2b5));
        EXPECT(0x1f, gbc.readMem(0xb2b6));
        // CB 1F 0061
        gbc.setState(0xab8d, 0x2e8f, 0x9c40, 0xad2e, 0x3472, 0xeea5, 0x1, 0x0);
        gbc.writeMem(0xab8d, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x2e8f, gbc.sp());
        EXPECT(0xab8f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab8d));
        EXPECT(0x1f, gbc.readMem(0xab8e));
        // CB 1F 0062
        gbc.setState(0xdafb, 0xb726, 0xee0, 0xca73, 0x6c89, 0xd1c1, 0x0, 0x0);
        gbc.writeMem(0xdafb, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xb726, gbc.sp());
        EXPECT(0xdafd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdafb));
        EXPECT(0x1f, gbc.readMem(0xdafc));
        // CB 1F 0063
        gbc.setState(0xe2d4, 0xeec0, 0x670, 0xce1b, 0x9bc9, 0x3f0d, 0x0, 0x1);
        gbc.writeMem(0xe2d4, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xeec0, gbc.sp());
        EXPECT(0xe2d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe2d4));
        EXPECT(0x1f, gbc.readMem(0xe2d5));
        // CB 1F 0064
        gbc.setState(0x3628, 0xf0d4, 0x3a70, 0xdb13, 0xf5e2, 0x4843, 0x0, 0x1);
        gbc.writeMem(0x3628, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xf0d4, gbc.sp());
        EXPECT(0x362a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1F 0065
        gbc.setState(0xb6a6, 0x7427, 0x62d0, 0x92ae, 0x911f, 0x4e00, 0x0, 0x1);
        gbc.writeMem(0xb6a6, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x7427, gbc.sp());
        EXPECT(0xb6a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb6a6));
        EXPECT(0x1f, gbc.readMem(0xb6a7));
        // CB 1F 0066
        gbc.setState(0x8e3c, 0x27f4, 0xa830, 0xdfee, 0x48cb, 0x710b, 0x1, 0x1);
        gbc.writeMem(0x8e3c, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x27f4, gbc.sp());
        EXPECT(0x8e3e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e3c));
        EXPECT(0x1f, gbc.readMem(0x8e3d));
        // CB 1F 0067
        gbc.setState(0xbedc, 0xb142, 0x8170, 0xca03, 0xa22f, 0x1ad0, 0x0, 0x1);
        gbc.writeMem(0xbedc, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xb142, gbc.sp());
        EXPECT(0xbede, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbedc));
        EXPECT(0x1f, gbc.readMem(0xbedd));
        // CB 1F 0068
        gbc.setState(0x30fe, 0xeb6a, 0x4e0, 0x4f97, 0xb91a, 0x9289, 0x0, 0x0);
        gbc.writeMem(0x30fe, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xeb6a, gbc.sp());
        EXPECT(0x3100, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1F 0069
        gbc.setState(0x372d, 0x7d4, 0x5000, 0xde7, 0x6f0a, 0x36b0, 0x1, 0x0);
        gbc.writeMem(0x372d, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x7d4, gbc.sp());
        EXPECT(0x372f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1F 006A
        gbc.setState(0x2779, 0x3d64, 0x2120, 0xdb14, 0x2234, 0xc83e, 0x0, 0x0);
        gbc.writeMem(0x2779, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x3d64, gbc.sp());
        EXPECT(0x277b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 006B
        gbc.setState(0x988e, 0x23b, 0x8920, 0xc71b, 0xeea5, 0x52f4, 0x1, 0x1);
        gbc.writeMem(0x988e, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x23b, gbc.sp());
        EXPECT(0x9890, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x988e));
        EXPECT(0x1f, gbc.readMem(0x988f));
        // CB 1F 006C
        gbc.setState(0xce2e, 0xece9, 0x6270, 0x995d, 0x790b, 0x2ec0, 0x1, 0x1);
        gbc.writeMem(0xce2e, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xece9, gbc.sp());
        EXPECT(0xce30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce2e));
        EXPECT(0x1f, gbc.readMem(0xce2f));
        // CB 1F 006D
        gbc.setState(0x6afb, 0x29b3, 0xa030, 0xbb7b, 0x24ab, 0x482d, 0x1, 0x1);
        gbc.writeMem(0x6afb, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x29b3, gbc.sp());
        EXPECT(0x6afd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1F 006E
        gbc.setState(0x7a49, 0x1e58, 0xcc40, 0xa402, 0xf46d, 0x65d9, 0x1, 0x0);
        gbc.writeMem(0x7a49, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x1e58, gbc.sp());
        EXPECT(0x7a4b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1F 0070
        gbc.setState(0x55f3, 0xf1ef, 0x7be0, 0xb27, 0x9825, 0xe394, 0x1, 0x1);
        gbc.writeMem(0x55f3, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xf1ef, gbc.sp());
        EXPECT(0x55f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 0071
        gbc.setState(0xbb45, 0xd5c4, 0xafc0, 0xcfbb, 0xf1ee, 0xc20d, 0x1, 0x1);
        gbc.writeMem(0xbb45, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xd5c4, gbc.sp());
        EXPECT(0xbb47, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb45));
        EXPECT(0x1f, gbc.readMem(0xbb46));
        // CB 1F 0072
        gbc.setState(0x414c, 0xc82, 0xde20, 0x1162, 0xb732, 0x3b9f, 0x1, 0x0);
        gbc.writeMem(0x414c, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xc82, gbc.sp());
        EXPECT(0x414e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1F 0073
        gbc.setState(0xb1, 0x4cd8, 0x3cc0, 0x5c4c, 0xcdd, 0x95d5, 0x0, 0x1);
        gbc.writeMem(0xb1, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x4cd8, gbc.sp());
        EXPECT(0xb3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1F 0074
        gbc.setState(0xc5a8, 0x1180, 0xbd50, 0xe33, 0xeb8e, 0xe338, 0x1, 0x0);
        gbc.writeMem(0xc5a8, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x1180, gbc.sp());
        EXPECT(0xc5aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc5a8));
        EXPECT(0x1f, gbc.readMem(0xc5a9));
        // CB 1F 0075
        gbc.setState(0xef98, 0xfb40, 0x4280, 0xec9d, 0xd844, 0xb70f, 0x1, 0x0);
        gbc.writeMem(0xef98, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xfb40, gbc.sp());
        EXPECT(0xef9a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef98));
        EXPECT(0x1f, gbc.readMem(0xef99));
        // CB 1F 0076
        gbc.setState(0x434d, 0x3ede, 0x9de0, 0xc43e, 0xd1e6, 0x2b36, 0x1, 0x0);
        gbc.writeMem(0x434d, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x3ede, gbc.sp());
        EXPECT(0x434f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 0077
        gbc.setState(0xe304, 0xab04, 0x1bc0, 0x95cf, 0x92a4, 0xfcbf, 0x0, 0x0);
        gbc.writeMem(0xe304, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xab04, gbc.sp());
        EXPECT(0xe306, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe304));
        EXPECT(0x1f, gbc.readMem(0xe305));
        // CB 1F 0078
        gbc.setState(0x1a71, 0x6c52, 0x9050, 0xf42c, 0x86e3, 0xb2f5, 0x0, 0x0);
        gbc.writeMem(0x1a71, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x6c52, gbc.sp());
        EXPECT(0x1a73, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1F 0079
        gbc.setState(0x3f18, 0xf4ae, 0x4960, 0x8ff, 0xdcc1, 0x1247, 0x1, 0x1);
        gbc.writeMem(0x3f18, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xf4ae, gbc.sp());
        EXPECT(0x3f1a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 007A
        gbc.setState(0x1f81, 0x61d0, 0x52a0, 0x1eb4, 0xd251, 0x138b, 0x1, 0x1);
        gbc.writeMem(0x1f81, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x61d0, gbc.sp());
        EXPECT(0x1f83, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1F 007B
        gbc.setState(0xac6, 0xb09, 0x75a0, 0xf5e, 0x4e90, 0x9e5a, 0x1, 0x0);
        gbc.writeMem(0xac6, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xb09, gbc.sp());
        EXPECT(0xac8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 007C
        gbc.setState(0x359e, 0x8afe, 0xd00, 0x578d, 0x4c20, 0x1015, 0x0, 0x0);
        gbc.writeMem(0x359e, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x8afe, gbc.sp());
        EXPECT(0x35a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 007D
        gbc.setState(0x4c98, 0x525c, 0x21b0, 0x59ab, 0x5526, 0xdd9e, 0x0, 0x0);
        gbc.writeMem(0x4c98, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x525c, gbc.sp());
        EXPECT(0x4c9a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 007E
        gbc.setState(0x88ee, 0x1dc8, 0x9e00, 0xf7d0, 0xb2c6, 0x6a49, 0x1, 0x0);
        gbc.writeMem(0x88ee, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x1dc8, gbc.sp());
        EXPECT(0x88f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x88ee));
        EXPECT(0x1f, gbc.readMem(0x88ef));
        // CB 1F 007F
        gbc.setState(0x7c59, 0xb35f, 0x22b0, 0xcf50, 0x5498, 0x3d5d, 0x1, 0x0);
        gbc.writeMem(0x7c59, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xb35f, gbc.sp());
        EXPECT(0x7c5b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1F 0080
        gbc.setState(0x8927, 0x7c52, 0xdbb0, 0x41cd, 0x7f65, 0x417d, 0x1, 0x0);
        gbc.writeMem(0x8927, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x7c52, gbc.sp());
        EXPECT(0x8929, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8927));
        EXPECT(0x1f, gbc.readMem(0x8928));
        // CB 1F 0081
        gbc.setState(0x975a, 0xb4c5, 0x4a10, 0xfefc, 0xbc74, 0x1956, 0x1, 0x0);
        gbc.writeMem(0x975a, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xb4c5, gbc.sp());
        EXPECT(0x975c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x975a));
        EXPECT(0x1f, gbc.readMem(0x975b));
        // CB 1F 0082
        gbc.setState(0x27a1, 0xac81, 0xa900, 0xcfce, 0x7c21, 0xf5b4, 0x0, 0x1);
        gbc.writeMem(0x27a1, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xac81, gbc.sp());
        EXPECT(0x27a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 0083
        gbc.setState(0x10f2, 0x81b4, 0x99f0, 0x89d7, 0x6ab1, 0x7b37, 0x0, 0x0);
        gbc.writeMem(0x10f2, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x81b4, gbc.sp());
        EXPECT(0x10f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 0084
        gbc.setState(0xebf, 0xfdd0, 0xa620, 0xfcf9, 0xfd44, 0xa28f, 0x0, 0x0);
        gbc.writeMem(0xebf, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xfdd0, gbc.sp());
        EXPECT(0xec1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1F 0085
        gbc.setState(0x3934, 0xd7b5, 0xe030, 0xf207, 0xea82, 0xb7e3, 0x1, 0x0);
        gbc.writeMem(0x3934, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xd7b5, gbc.sp());
        EXPECT(0x3936, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1F 0086
        gbc.setState(0xb909, 0x8e70, 0x7ad0, 0x59c9, 0xdb13, 0xd8d2, 0x1, 0x0);
        gbc.writeMem(0xb909, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x8e70, gbc.sp());
        EXPECT(0xb90b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb909));
        EXPECT(0x1f, gbc.readMem(0xb90a));
        // CB 1F 0087
        gbc.setState(0xaf6b, 0xde8f, 0x30b0, 0xfd33, 0x5002, 0x3974, 0x0, 0x1);
        gbc.writeMem(0xaf6b, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xde8f, gbc.sp());
        EXPECT(0xaf6d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf6b));
        EXPECT(0x1f, gbc.readMem(0xaf6c));
        // CB 1F 0088
        gbc.setState(0x5ba, 0x8383, 0x7f40, 0x55d9, 0x17ce, 0xe8bf, 0x1, 0x0);
        gbc.writeMem(0x5ba, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x8383, gbc.sp());
        EXPECT(0x5bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 0089
        gbc.setState(0xa6c0, 0xd198, 0xff40, 0x354f, 0xba52, 0x5163, 0x1, 0x1);
        gbc.writeMem(0xa6c0, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xd198, gbc.sp());
        EXPECT(0xa6c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa6c0));
        EXPECT(0x1f, gbc.readMem(0xa6c1));
        // CB 1F 008A
        gbc.setState(0x6cba, 0xdd5a, 0x9650, 0x377a, 0x7211, 0x146d, 0x1, 0x1);
        gbc.writeMem(0x6cba, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xdd5a, gbc.sp());
        EXPECT(0x6cbc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1F 008B
        gbc.setState(0x8d4e, 0x6b91, 0x18b0, 0x3789, 0x684e, 0x590c, 0x0, 0x0);
        gbc.writeMem(0x8d4e, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x6b91, gbc.sp());
        EXPECT(0x8d50, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d4e));
        EXPECT(0x1f, gbc.readMem(0x8d4f));
        // CB 1F 008C
        gbc.setState(0xbedd, 0x4a3b, 0x9910, 0xaa22, 0xab63, 0xeb21, 0x1, 0x1);
        gbc.writeMem(0xbedd, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x4a3b, gbc.sp());
        EXPECT(0xbedf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbedd));
        EXPECT(0x1f, gbc.readMem(0xbede));
        // CB 1F 008D
        gbc.setState(0x2505, 0xad32, 0xcbd0, 0x4a7d, 0x7b30, 0x43f7, 0x0, 0x0);
        gbc.writeMem(0x2505, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xad32, gbc.sp());
        EXPECT(0x2507, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 008F
        gbc.setState(0xe5b4, 0x1a26, 0xcb70, 0x80ea, 0x8d40, 0xf1a7, 0x0, 0x0);
        gbc.writeMem(0xe5b4, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x1a26, gbc.sp());
        EXPECT(0xe5b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe5b4));
        EXPECT(0x1f, gbc.readMem(0xe5b5));
        // CB 1F 0090
        gbc.setState(0xcaf3, 0x88a1, 0x8980, 0xfc01, 0x6277, 0xc7b, 0x0, 0x1);
        gbc.writeMem(0xcaf3, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x88a1, gbc.sp());
        EXPECT(0xcaf5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcaf3));
        EXPECT(0x1f, gbc.readMem(0xcaf4));
        // CB 1F 0091
        gbc.setState(0x770d, 0xf230, 0xc9a0, 0xb206, 0x570c, 0x8cf7, 0x1, 0x0);
        gbc.writeMem(0x770d, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xf230, gbc.sp());
        EXPECT(0x770f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 0092
        gbc.setState(0x5a8a, 0xa670, 0x4b50, 0xc994, 0x8d8c, 0xdd7a, 0x1, 0x1);
        gbc.writeMem(0x5a8a, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xa670, gbc.sp());
        EXPECT(0x5a8c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 0093
        gbc.setState(0x1c04, 0x2ebd, 0xfc70, 0x1649, 0xdb1d, 0xb684, 0x0, 0x0);
        gbc.writeMem(0x1c04, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x2ebd, gbc.sp());
        EXPECT(0x1c06, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1F 0094
        gbc.setState(0xd40e, 0xfe68, 0x3770, 0xcd3, 0x232f, 0x400a, 0x1, 0x0);
        gbc.writeMem(0xd40e, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xfe68, gbc.sp());
        EXPECT(0xd410, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd40e));
        EXPECT(0x1f, gbc.readMem(0xd40f));
        // CB 1F 0095
        gbc.setState(0xeb9f, 0xa751, 0xd420, 0x1b72, 0x4318, 0xa4b5, 0x0, 0x0);
        gbc.writeMem(0xeb9f, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xa751, gbc.sp());
        EXPECT(0xeba1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb9f));
        EXPECT(0x1f, gbc.readMem(0xeba0));
        // CB 1F 0096
        gbc.setState(0x96c2, 0xd6a, 0xde70, 0x4a4e, 0x284d, 0x9f15, 0x0, 0x0);
        gbc.writeMem(0x96c2, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xd6a, gbc.sp());
        EXPECT(0x96c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x96c2));
        EXPECT(0x1f, gbc.readMem(0x96c3));
        // CB 1F 0097
        gbc.setState(0x354b, 0x76a8, 0x9430, 0x523, 0xe587, 0x8252, 0x1, 0x0);
        gbc.writeMem(0x354b, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x76a8, gbc.sp());
        EXPECT(0x354d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1F 0098
        gbc.setState(0x4c8b, 0x747, 0x6550, 0x11ab, 0x4161, 0xed4a, 0x0, 0x0);
        gbc.writeMem(0x4c8b, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x747, gbc.sp());
        EXPECT(0x4c8d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 0099
        gbc.setState(0xa80f, 0x373c, 0x1320, 0xf1ca, 0xf472, 0x5c1, 0x0, 0x1);
        gbc.writeMem(0xa80f, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x373c, gbc.sp());
        EXPECT(0xa811, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa80f));
        EXPECT(0x1f, gbc.readMem(0xa810));
        // CB 1F 009A
        gbc.setState(0xddb4, 0x202b, 0xe3b0, 0xdb05, 0x6f76, 0xb44f, 0x1, 0x1);
        gbc.writeMem(0xddb4, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x202b, gbc.sp());
        EXPECT(0xddb6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xddb4));
        EXPECT(0x1f, gbc.readMem(0xddb5));
        // CB 1F 009B
        gbc.setState(0x31aa, 0xf7fd, 0x92f0, 0x5e1f, 0xbb87, 0xab95, 0x0, 0x1);
        gbc.writeMem(0x31aa, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xf7fd, gbc.sp());
        EXPECT(0x31ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1F 009C
        gbc.setState(0xb6, 0x6a62, 0xca60, 0x2cb7, 0x2a5e, 0x5b4, 0x1, 0x0);
        gbc.writeMem(0xb6, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x6a62, gbc.sp());
        EXPECT(0xb8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1F 009D
        gbc.setState(0xafca, 0xcc5b, 0x17e0, 0x4291, 0xacce, 0x8dbe, 0x0, 0x1);
        gbc.writeMem(0xafca, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xcc5b, gbc.sp());
        EXPECT(0xafcc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xafca));
        EXPECT(0x1f, gbc.readMem(0xafcb));
        // CB 1F 009E
        gbc.setState(0xaa6, 0x8da9, 0x7f30, 0x4c83, 0x4ce3, 0x65d6, 0x1, 0x1);
        gbc.writeMem(0xaa6, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x8da9, gbc.sp());
        EXPECT(0xaa8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 009F
        gbc.setState(0x6c9f, 0xedaf, 0xcb20, 0xdf25, 0x42cf, 0x7fc, 0x0, 0x1);
        gbc.writeMem(0x6c9f, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xedaf, gbc.sp());
        EXPECT(0x6ca1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 00A0
        gbc.setState(0xed82, 0xf3d4, 0xdfd0, 0x7448, 0x24eb, 0xd400, 0x1, 0x1);
        gbc.writeMem(0xed82, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xf3d4, gbc.sp());
        EXPECT(0xed84, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed82));
        EXPECT(0x1f, gbc.readMem(0xed83));
        // CB 1F 00A1
        gbc.setState(0x180b, 0xbb78, 0xd470, 0x1660, 0x496b, 0xcf0c, 0x0, 0x0);
        gbc.writeMem(0x180b, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xbb78, gbc.sp());
        EXPECT(0x180d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1F 00A2
        gbc.setState(0xaadb, 0x8dd8, 0x95d0, 0x232c, 0xe479, 0x5b7f, 0x0, 0x1);
        gbc.writeMem(0xaadb, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x8dd8, gbc.sp());
        EXPECT(0xaadd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaadb));
        EXPECT(0x1f, gbc.readMem(0xaadc));
        // CB 1F 00A3
        gbc.setState(0xdcc4, 0x180e, 0xff30, 0x16f3, 0x9df2, 0xb83f, 0x1, 0x0);
        gbc.writeMem(0xdcc4, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x180e, gbc.sp());
        EXPECT(0xdcc6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdcc4));
        EXPECT(0x1f, gbc.readMem(0xdcc5));
        // CB 1F 00A4
        gbc.setState(0x97fd, 0xde3, 0xc710, 0xcbf0, 0xe215, 0xab6c, 0x1, 0x1);
        gbc.writeMem(0x97fd, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xde3, gbc.sp());
        EXPECT(0x97ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x97fd));
        EXPECT(0x1f, gbc.readMem(0x97fe));
        // CB 1F 00A5
        gbc.setState(0x83b0, 0x824a, 0x9d60, 0x7926, 0xcded, 0x1d1a, 0x1, 0x1);
        gbc.writeMem(0x83b0, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x824a, gbc.sp());
        EXPECT(0x83b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x83b0));
        EXPECT(0x1f, gbc.readMem(0x83b1));
        // CB 1F 00A6
        gbc.setState(0x2971, 0xd57a, 0x5430, 0xe97a, 0xa558, 0xd6d0, 0x1, 0x1);
        gbc.writeMem(0x2971, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xd57a, gbc.sp());
        EXPECT(0x2973, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1F 00A7
        gbc.setState(0xacbd, 0xed32, 0x48e0, 0xcdb1, 0xa281, 0x3ce, 0x0, 0x0);
        gbc.writeMem(0xacbd, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xed32, gbc.sp());
        EXPECT(0xacbf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xacbd));
        EXPECT(0x1f, gbc.readMem(0xacbe));
        // CB 1F 00A8
        gbc.setState(0x5f49, 0xca2d, 0x2070, 0xdb62, 0x2f2d, 0xa024, 0x0, 0x1);
        gbc.writeMem(0x5f49, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xca2d, gbc.sp());
        EXPECT(0x5f4b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1F 00A9
        gbc.setState(0x921e, 0x5781, 0xcf40, 0x62b6, 0xd4da, 0x5366, 0x0, 0x1);
        gbc.writeMem(0x921e, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x5781, gbc.sp());
        EXPECT(0x9220, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x921e));
        EXPECT(0x1f, gbc.readMem(0x921f));
        // CB 1F 00AA
        gbc.setState(0x7f6d, 0x5c1f, 0xf6a0, 0xa71f, 0xf20b, 0xa108, 0x1, 0x1);
        gbc.writeMem(0x7f6d, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x5c1f, gbc.sp());
        EXPECT(0x7f6f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1F 00AB
        gbc.setState(0x43e2, 0xe3b3, 0xfe70, 0x8d4c, 0x8853, 0x3f84, 0x0, 0x0);
        gbc.writeMem(0x43e2, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xe3b3, gbc.sp());
        EXPECT(0x43e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1F 00AC
        gbc.setState(0xc8a4, 0x98a, 0x670, 0xd5d6, 0xa4b6, 0x2e85, 0x1, 0x1);
        gbc.writeMem(0xc8a4, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x98a, gbc.sp());
        EXPECT(0xc8a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc8a4));
        EXPECT(0x1f, gbc.readMem(0xc8a5));
        // CB 1F 00AE
        gbc.setState(0x940d, 0x808f, 0xf5a0, 0xdc8d, 0xebb6, 0xf068, 0x0, 0x0);
        gbc.writeMem(0x940d, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x808f, gbc.sp());
        EXPECT(0x940f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x940d));
        EXPECT(0x1f, gbc.readMem(0x940e));
        // CB 1F 00AF
        gbc.setState(0x4398, 0x4542, 0x2ea0, 0xeaaa, 0x5d22, 0xe2af, 0x0, 0x0);
        gbc.writeMem(0x4398, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x4542, gbc.sp());
        EXPECT(0x439a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1F 00B0
        gbc.setState(0xad73, 0x314b, 0x900, 0x1cb0, 0xb90, 0x2468, 0x0, 0x0);
        gbc.writeMem(0xad73, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x314b, gbc.sp());
        EXPECT(0xad75, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad73));
        EXPECT(0x1f, gbc.readMem(0xad74));
        // CB 1F 00B1
        gbc.setState(0x212a, 0x5b39, 0x6f00, 0x881c, 0x3095, 0xb790, 0x1, 0x1);
        gbc.writeMem(0x212a, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x5b39, gbc.sp());
        EXPECT(0x212c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 00B2
        gbc.setState(0xc1db, 0xb0ff, 0x9870, 0xa4f5, 0xeb6f, 0x64ae, 0x1, 0x0);
        gbc.writeMem(0xc1db, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xb0ff, gbc.sp());
        EXPECT(0xc1dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc1db));
        EXPECT(0x1f, gbc.readMem(0xc1dc));
        // CB 1F 00B4
        gbc.setState(0x2ee4, 0x9ea, 0xc470, 0xae10, 0x19f8, 0x7c7c, 0x1, 0x0);
        gbc.writeMem(0x2ee4, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x9ea, gbc.sp());
        EXPECT(0x2ee6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1F 00B5
        gbc.setState(0x8508, 0xf3d6, 0x9c10, 0xa5b, 0xab06, 0x1b48, 0x0, 0x0);
        gbc.writeMem(0x8508, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xf3d6, gbc.sp());
        EXPECT(0x850a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8508));
        EXPECT(0x1f, gbc.readMem(0x8509));
        // CB 1F 00B6
        gbc.setState(0xc6f, 0x73f0, 0xb690, 0xeb0e, 0x938b, 0xd21d, 0x0, 0x1);
        gbc.writeMem(0xc6f, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x73f0, gbc.sp());
        EXPECT(0xc71, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1F 00B7
        gbc.setState(0x663c, 0x8862, 0xdcd0, 0x94ce, 0x9dbc, 0x67eb, 0x0, 0x0);
        gbc.writeMem(0x663c, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x8862, gbc.sp());
        EXPECT(0x663e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1F 00B8
        gbc.setState(0x2e6, 0x1493, 0x5060, 0xf1b, 0x7e39, 0x7c6f, 0x0, 0x0);
        gbc.writeMem(0x2e6, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x1493, gbc.sp());
        EXPECT(0x2e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1F 00B9
        gbc.setState(0xb3c3, 0x9773, 0x51b0, 0x6159, 0xfb5d, 0x9971, 0x0, 0x0);
        gbc.writeMem(0xb3c3, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x9773, gbc.sp());
        EXPECT(0xb3c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb3c3));
        EXPECT(0x1f, gbc.readMem(0xb3c4));
        // CB 1F 00BA
        gbc.setState(0xd78b, 0x87d3, 0x5c20, 0xaabc, 0x250a, 0x663d, 0x0, 0x1);
        gbc.writeMem(0xd78b, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x87d3, gbc.sp());
        EXPECT(0xd78d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd78b));
        EXPECT(0x1f, gbc.readMem(0xd78c));
        // CB 1F 00BB
        gbc.setState(0x136e, 0x3dd2, 0x5e30, 0x568b, 0xe263, 0xb3fb, 0x1, 0x1);
        gbc.writeMem(0x136e, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x3dd2, gbc.sp());
        EXPECT(0x1370, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1F 00BC
        gbc.setState(0x36f3, 0x4866, 0x6d40, 0xdb4b, 0x6658, 0xd71b, 0x0, 0x1);
        gbc.writeMem(0x36f3, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x4866, gbc.sp());
        EXPECT(0x36f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 00BD
        gbc.setState(0x1cc9, 0x66c0, 0x730, 0x97d3, 0xda88, 0xc22f, 0x0, 0x0);
        gbc.writeMem(0x1cc9, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x66c0, gbc.sp());
        EXPECT(0x1ccb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 00BE
        gbc.setState(0x95, 0xaae1, 0x1c80, 0xef54, 0xfc19, 0x871f, 0x0, 0x1);
        gbc.writeMem(0x95, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xaae1, gbc.sp());
        EXPECT(0x97, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1F 00BF
        gbc.setState(0x6af, 0x699b, 0x1400, 0xe35a, 0xc6ea, 0xe288, 0x0, 0x1);
        gbc.writeMem(0x6af, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x699b, gbc.sp());
        EXPECT(0x6b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1F 00C0
        gbc.setState(0x2fd4, 0x3a0c, 0x8260, 0x7e16, 0xbe6e, 0xf4f4, 0x1, 0x0);
        gbc.writeMem(0x2fd4, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x3a0c, gbc.sp());
        EXPECT(0x2fd6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1F 00C1
        gbc.setState(0x766c, 0xf065, 0x4cf0, 0x8d, 0x7d6a, 0xfc97, 0x0, 0x1);
        gbc.writeMem(0x766c, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xf065, gbc.sp());
        EXPECT(0x766e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1F 00C2
        gbc.setState(0x58d8, 0xadea, 0x1700, 0x41f, 0x2857, 0x1fd5, 0x1, 0x0);
        gbc.writeMem(0x58d8, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xadea, gbc.sp());
        EXPECT(0x58da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 00C3
        gbc.setState(0x4090, 0xddc3, 0x3770, 0xefb8, 0xed7d, 0xc8a0, 0x1, 0x0);
        gbc.writeMem(0x4090, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xddc3, gbc.sp());
        EXPECT(0x4092, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 00C4
        gbc.setState(0x56a7, 0xb67, 0x8de0, 0xd122, 0xc162, 0x4eb2, 0x0, 0x0);
        gbc.writeMem(0x56a7, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xb67, gbc.sp());
        EXPECT(0x56a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 00C5
        gbc.setState(0x1964, 0x73d6, 0x4c30, 0xa259, 0x4a3a, 0x767, 0x0, 0x0);
        gbc.writeMem(0x1964, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x73d6, gbc.sp());
        EXPECT(0x1966, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1F 00C6
        gbc.setState(0x1c5c, 0xe9d1, 0xbd10, 0x7104, 0xb499, 0x401c, 0x1, 0x0);
        gbc.writeMem(0x1c5c, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xe9d1, gbc.sp());
        EXPECT(0x1c5e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 00C8
        gbc.setState(0x3ad7, 0x992e, 0xa0, 0x55ac, 0x7b8e, 0x377e, 0x0, 0x1);
        gbc.writeMem(0x3ad7, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x992e, gbc.sp());
        EXPECT(0x3ad9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1F 00C9
        gbc.setState(0x3d2, 0xd41e, 0xf70, 0xbee0, 0x227f, 0xca06, 0x0, 0x0);
        gbc.writeMem(0x3d2, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xd41e, gbc.sp());
        EXPECT(0x3d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 00CA
        gbc.setState(0x8912, 0xe0e7, 0xba40, 0xc9f0, 0x2e20, 0xc71c, 0x1, 0x1);
        gbc.writeMem(0x8912, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xe0e7, gbc.sp());
        EXPECT(0x8914, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8912));
        EXPECT(0x1f, gbc.readMem(0x8913));
        // CB 1F 00CB
        gbc.setState(0x723f, 0xa69f, 0xe7f0, 0x64a3, 0x514f, 0x3b6a, 0x1, 0x0);
        gbc.writeMem(0x723f, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xa69f, gbc.sp());
        EXPECT(0x7241, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 00CC
        gbc.setState(0xce8b, 0x5758, 0xe7c0, 0x4626, 0x7349, 0x1c1f, 0x1, 0x0);
        gbc.writeMem(0xce8b, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x5758, gbc.sp());
        EXPECT(0xce8d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce8b));
        EXPECT(0x1f, gbc.readMem(0xce8c));
        // CB 1F 00CD
        gbc.setState(0x4b70, 0x5d0c, 0xd910, 0x999f, 0x1773, 0x92dd, 0x1, 0x1);
        gbc.writeMem(0x4b70, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x5d0c, gbc.sp());
        EXPECT(0x4b72, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 00CE
        gbc.setState(0xea0d, 0x96d5, 0x90d0, 0xa53e, 0x84f, 0x3413, 0x0, 0x1);
        gbc.writeMem(0xea0d, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x96d5, gbc.sp());
        EXPECT(0xea0f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea0d));
        EXPECT(0x1f, gbc.readMem(0xea0e));
        // CB 1F 00CF
        gbc.setState(0x4cad, 0x9ae7, 0x1bb0, 0x4a19, 0xefe, 0x13c8, 0x0, 0x0);
        gbc.writeMem(0x4cad, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x9ae7, gbc.sp());
        EXPECT(0x4caf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 00D0
        gbc.setState(0x5d4f, 0x36e4, 0xcbe0, 0xbde4, 0x621d, 0xa735, 0x1, 0x1);
        gbc.writeMem(0x5d4f, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x36e4, gbc.sp());
        EXPECT(0x5d51, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 00D2
        gbc.setState(0x127b, 0x7df8, 0xca50, 0x243, 0xae3a, 0x1046, 0x0, 0x1);
        gbc.writeMem(0x127b, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x7df8, gbc.sp());
        EXPECT(0x127d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1F 00D3
        gbc.setState(0x1cd6, 0xc737, 0x110, 0xc1b1, 0x2070, 0x5026, 0x1, 0x0);
        gbc.writeMem(0x1cd6, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xc737, gbc.sp());
        EXPECT(0x1cd8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 00D4
        gbc.setState(0xdf8b, 0xe99b, 0x3290, 0x766a, 0x7eaa, 0xff28, 0x1, 0x1);
        gbc.writeMem(0xdf8b, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xe99b, gbc.sp());
        EXPECT(0xdf8d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf8b));
        EXPECT(0x1f, gbc.readMem(0xdf8c));
        // CB 1F 00D5
        gbc.setState(0x473e, 0xec23, 0xe9a0, 0x4ada, 0xd7a9, 0x70f0, 0x0, 0x1);
        gbc.writeMem(0x473e, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xec23, gbc.sp());
        EXPECT(0x4740, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 00D6
        gbc.setState(0xe3bd, 0x306e, 0x6c50, 0x4190, 0x4a99, 0xb46b, 0x1, 0x0);
        gbc.writeMem(0xe3bd, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x306e, gbc.sp());
        EXPECT(0xe3bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe3bd));
        EXPECT(0x1f, gbc.readMem(0xe3be));
        // CB 1F 00D7
        gbc.setState(0x115, 0x7ff7, 0xfca0, 0x398b, 0xc1f, 0xe6b2, 0x1, 0x0);
        gbc.writeMem(0x115, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x7ff7, gbc.sp());
        EXPECT(0x117, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1F 00D8
        gbc.setState(0x6c0e, 0x3b6f, 0x8100, 0x44a1, 0x249b, 0xd203, 0x1, 0x1);
        gbc.writeMem(0x6c0e, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x3b6f, gbc.sp());
        EXPECT(0x6c10, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 00D9
        gbc.setState(0x3617, 0xb33d, 0xb890, 0x7ee6, 0x53a5, 0xcbba, 0x0, 0x1);
        gbc.writeMem(0x3617, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xb33d, gbc.sp());
        EXPECT(0x3619, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1F 00DA
        gbc.setState(0x9f24, 0x2191, 0x4c10, 0xea73, 0xe17a, 0xd8ff, 0x1, 0x1);
        gbc.writeMem(0x9f24, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x2191, gbc.sp());
        EXPECT(0x9f26, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f24));
        EXPECT(0x1f, gbc.readMem(0x9f25));
        // CB 1F 00DB
        gbc.setState(0x1581, 0x3c15, 0xa700, 0xace, 0x936a, 0xdbb1, 0x0, 0x0);
        gbc.writeMem(0x1581, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x3c15, gbc.sp());
        EXPECT(0x1583, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 00DC
        gbc.setState(0x5270, 0xe067, 0x3020, 0xd110, 0x511e, 0x967c, 0x0, 0x0);
        gbc.writeMem(0x5270, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xe067, gbc.sp());
        EXPECT(0x5272, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1F 00DD
        gbc.setState(0xb07f, 0x5e72, 0x8580, 0xe553, 0xd7f9, 0x1dc8, 0x1, 0x0);
        gbc.writeMem(0xb07f, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x5e72, gbc.sp());
        EXPECT(0xb081, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb07f));
        EXPECT(0x1f, gbc.readMem(0xb080));
        // CB 1F 00DE
        gbc.setState(0xb76b, 0xf5bd, 0x95d0, 0xf1a8, 0xf29d, 0x56fc, 0x0, 0x0);
        gbc.writeMem(0xb76b, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xf5bd, gbc.sp());
        EXPECT(0xb76d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb76b));
        EXPECT(0x1f, gbc.readMem(0xb76c));
        // CB 1F 00DF
        gbc.setState(0x93cb, 0x2858, 0x3f20, 0x64a3, 0x8e4f, 0x62a7, 0x1, 0x1);
        gbc.writeMem(0x93cb, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x2858, gbc.sp());
        EXPECT(0x93cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x93cb));
        EXPECT(0x1f, gbc.readMem(0x93cc));
        // CB 1F 00E0
        gbc.setState(0x3c0e, 0x64a4, 0xa930, 0x8d7e, 0xc8a8, 0xdb40, 0x1, 0x0);
        gbc.writeMem(0x3c0e, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x64a4, gbc.sp());
        EXPECT(0x3c10, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 00E1
        gbc.setState(0x3c9b, 0x30a5, 0xcb50, 0x444d, 0xeaa7, 0xbd1d, 0x1, 0x1);
        gbc.writeMem(0x3c9b, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x30a5, gbc.sp());
        EXPECT(0x3c9d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 00E2
        gbc.setState(0x6fff, 0x429f, 0x5c90, 0x9f73, 0x7d86, 0xa118, 0x0, 0x0);
        gbc.writeMem(0x6fff, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x429f, gbc.sp());
        EXPECT(0x7001, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1F 00E3
        gbc.setState(0x9b36, 0x7c9b, 0xc090, 0x44e1, 0xf31f, 0xe456, 0x0, 0x0);
        gbc.writeMem(0x9b36, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x7c9b, gbc.sp());
        EXPECT(0x9b38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b36));
        EXPECT(0x1f, gbc.readMem(0x9b37));
        // CB 1F 00E4
        gbc.setState(0xffd, 0xf72c, 0x1c70, 0x9889, 0xf4c8, 0xc3f9, 0x0, 0x0);
        gbc.writeMem(0xffd, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xf72c, gbc.sp());
        EXPECT(0xfff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1F 00E5
        gbc.setState(0xddb1, 0x6a74, 0x1630, 0x81cc, 0x7641, 0xcdc6, 0x1, 0x0);
        gbc.writeMem(0xddb1, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x6a74, gbc.sp());
        EXPECT(0xddb3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xddb1));
        EXPECT(0x1f, gbc.readMem(0xddb2));
        // CB 1F 00E6
        gbc.setState(0x5280, 0x5a1b, 0xde50, 0x7332, 0xb3d4, 0xb14e, 0x1, 0x1);
        gbc.writeMem(0x5280, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x5a1b, gbc.sp());
        EXPECT(0x5282, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1F 00E7
        gbc.setState(0x9778, 0x2963, 0xa90, 0xe5c3, 0x5851, 0x3690, 0x1, 0x0);
        gbc.writeMem(0x9778, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x2963, gbc.sp());
        EXPECT(0x977a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9778));
        EXPECT(0x1f, gbc.readMem(0x9779));
        // CB 1F 00E8
        gbc.setState(0xc1e8, 0xc90, 0xc830, 0xccb0, 0x56dd, 0x78c4, 0x0, 0x0);
        gbc.writeMem(0xc1e8, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xc90, gbc.sp());
        EXPECT(0xc1ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc1e8));
        EXPECT(0x1f, gbc.readMem(0xc1e9));
        // CB 1F 00E9
        gbc.setState(0xbd6c, 0x5c54, 0x2a0, 0x6ba4, 0x127, 0x860b, 0x0, 0x1);
        gbc.writeMem(0xbd6c, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x5c54, gbc.sp());
        EXPECT(0xbd6e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd6c));
        EXPECT(0x1f, gbc.readMem(0xbd6d));
        // CB 1F 00EA
        gbc.setState(0x2c99, 0x4dc5, 0x9c00, 0x51bd, 0xc452, 0xef3a, 0x0, 0x1);
        gbc.writeMem(0x2c99, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x4dc5, gbc.sp());
        EXPECT(0x2c9b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1F 00EB
        gbc.setState(0x959d, 0xd896, 0xa030, 0x99a4, 0x1dee, 0xec72, 0x0, 0x0);
        gbc.writeMem(0x959d, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xd896, gbc.sp());
        EXPECT(0x959f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x959d));
        EXPECT(0x1f, gbc.readMem(0x959e));
        // CB 1F 00EC
        gbc.setState(0x805c, 0xcac6, 0xe9e0, 0x73f4, 0xde1e, 0x7426, 0x1, 0x1);
        gbc.writeMem(0x805c, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xcac6, gbc.sp());
        EXPECT(0x805e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x805c));
        EXPECT(0x1f, gbc.readMem(0x805d));
        // CB 1F 00ED
        gbc.setState(0xb529, 0x3afc, 0x62e0, 0x4153, 0x7ae6, 0x11f7, 0x0, 0x0);
        gbc.writeMem(0xb529, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x3afc, gbc.sp());
        EXPECT(0xb52b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb529));
        EXPECT(0x1f, gbc.readMem(0xb52a));
        // CB 1F 00EE
        gbc.setState(0xd733, 0x3ea2, 0x1cd0, 0x8f09, 0xaee7, 0x6096, 0x1, 0x0);
        gbc.writeMem(0xd733, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x3ea2, gbc.sp());
        EXPECT(0xd735, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd733));
        EXPECT(0x1f, gbc.readMem(0xd734));
        // CB 1F 00EF
        gbc.setState(0x2571, 0x19, 0xa020, 0x8f4d, 0x3629, 0x9585, 0x1, 0x0);
        gbc.writeMem(0x2571, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x19, gbc.sp());
        EXPECT(0x2573, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1F 00F0
        gbc.setState(0x7e9c, 0xcc9a, 0x6b60, 0x1e16, 0x988, 0xc159, 0x0, 0x0);
        gbc.writeMem(0x7e9c, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xcc9a, gbc.sp());
        EXPECT(0x7e9e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 00F1
        gbc.setState(0x6071, 0xae4, 0x1800, 0x1a1, 0x731f, 0xbd65, 0x0, 0x0);
        gbc.writeMem(0x6071, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xae4, gbc.sp());
        EXPECT(0x6073, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1F 00F2
        gbc.setState(0x71b3, 0x7b1b, 0x32e0, 0x5df2, 0x12c3, 0xbff4, 0x0, 0x0);
        gbc.writeMem(0x71b3, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x7b1b, gbc.sp());
        EXPECT(0x71b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1F 00F3
        gbc.setState(0xde6c, 0x818e, 0xae00, 0x8eff, 0xc71f, 0x5ca, 0x1, 0x0);
        gbc.writeMem(0xde6c, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x818e, gbc.sp());
        EXPECT(0xde6e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde6c));
        EXPECT(0x1f, gbc.readMem(0xde6d));
        // CB 1F 00F4
        gbc.setState(0x4593, 0x3016, 0x4760, 0xa74c, 0x2ef2, 0xe12d, 0x0, 0x0);
        gbc.writeMem(0x4593, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x3016, gbc.sp());
        EXPECT(0x4595, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 00F5
        gbc.setState(0xa83c, 0xd64f, 0xd020, 0xf351, 0x54b2, 0x4249, 0x1, 0x1);
        gbc.writeMem(0xa83c, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xd64f, gbc.sp());
        EXPECT(0xa83e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa83c));
        EXPECT(0x1f, gbc.readMem(0xa83d));
        // CB 1F 00F6
        gbc.setState(0x3e1a, 0x1394, 0x83f0, 0xdd4f, 0x8e22, 0xfad5, 0x1, 0x0);
        gbc.writeMem(0x3e1a, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x1394, gbc.sp());
        EXPECT(0x3e1c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 00F7
        gbc.setState(0x769c, 0x294d, 0x8150, 0x7b3d, 0x9a52, 0x93f7, 0x0, 0x1);
        gbc.writeMem(0x769c, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x294d, gbc.sp());
        EXPECT(0x769e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 00F8
        gbc.setState(0x7547, 0xdca0, 0xe340, 0x5714, 0x5bb9, 0x461d, 0x1, 0x0);
        gbc.writeMem(0x7547, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xdca0, gbc.sp());
        EXPECT(0x7549, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 00F9
        gbc.setState(0x2293, 0xaf41, 0x2e10, 0x771, 0xdf8c, 0xefbd, 0x0, 0x0);
        gbc.writeMem(0x2293, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xaf41, gbc.sp());
        EXPECT(0x2295, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1F 00FA
        gbc.setState(0x523e, 0x68db, 0x5130, 0x611d, 0x8c5f, 0xa86d, 0x1, 0x0);
        gbc.writeMem(0x523e, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x68db, gbc.sp());
        EXPECT(0x5240, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 00FB
        gbc.setState(0x1338, 0xd35d, 0xf8d0, 0xb269, 0x6c8, 0xedc1, 0x1, 0x0);
        gbc.writeMem(0x1338, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xd35d, gbc.sp());
        EXPECT(0x133a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1F 00FC
        gbc.setState(0xa88b, 0x8920, 0x24b0, 0xbba4, 0x63d, 0xac20, 0x1, 0x1);
        gbc.writeMem(0xa88b, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x8920, gbc.sp());
        EXPECT(0xa88d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa88b));
        EXPECT(0x1f, gbc.readMem(0xa88c));
        // CB 1F 00FD
        gbc.setState(0x1ed6, 0x6689, 0x6350, 0x6d06, 0xc666, 0x165d, 0x1, 0x0);
        gbc.writeMem(0x1ed6, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x6689, gbc.sp());
        EXPECT(0x1ed8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 00FE
        gbc.setState(0x706f, 0xce59, 0x99b0, 0x4470, 0x882, 0x548, 0x1, 0x0);
        gbc.writeMem(0x706f, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xce59, gbc.sp());
        EXPECT(0x7071, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 00FF
        gbc.setState(0x9463, 0xf489, 0xcf80, 0x912d, 0x16b8, 0xc2a8, 0x0, 0x1);
        gbc.writeMem(0x9463, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xf489, gbc.sp());
        EXPECT(0x9465, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9463));
        EXPECT(0x1f, gbc.readMem(0x9464));
        // CB 1F 0101
        gbc.setState(0x38b, 0xff2a, 0xdbe0, 0x3e2b, 0xbcb7, 0x3ae7, 0x0, 0x1);
        gbc.writeMem(0x38b, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xff2a, gbc.sp());
        EXPECT(0x38d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 0102
        gbc.setState(0x33e8, 0x7385, 0xf6e0, 0xa570, 0xa78b, 0xdfa0, 0x0, 0x1);
        gbc.writeMem(0x33e8, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x7385, gbc.sp());
        EXPECT(0x33ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1F 0103
        gbc.setState(0xe267, 0x9fc2, 0x5af0, 0xca09, 0x2a6c, 0xb731, 0x0, 0x1);
        gbc.writeMem(0xe267, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x9fc2, gbc.sp());
        EXPECT(0xe269, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe267));
        EXPECT(0x1f, gbc.readMem(0xe268));
        // CB 1F 0104
        gbc.setState(0x2bd, 0xeab5, 0x6cb0, 0x4260, 0xa35c, 0x30e9, 0x1, 0x0);
        gbc.writeMem(0x2bd, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xeab5, gbc.sp());
        EXPECT(0x2bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1F 0105
        gbc.setState(0x24d0, 0x10ee, 0xb3c0, 0x5e52, 0xbe2, 0xfc7c, 0x1, 0x0);
        gbc.writeMem(0x24d0, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x10ee, gbc.sp());
        EXPECT(0x24d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 0106
        gbc.setState(0x2478, 0xbd6d, 0xb220, 0x38d9, 0x2b0b, 0xad86, 0x0, 0x1);
        gbc.writeMem(0x2478, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xbd6d, gbc.sp());
        EXPECT(0x247a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1F 0107
        gbc.setState(0x681b, 0x39c8, 0xad00, 0xdd6e, 0x51a7, 0xa29b, 0x0, 0x0);
        gbc.writeMem(0x681b, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x39c8, gbc.sp());
        EXPECT(0x681d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 0108
        gbc.setState(0x24ea, 0x5f27, 0x64f0, 0x2bfd, 0x60f3, 0x73, 0x1, 0x1);
        gbc.writeMem(0x24ea, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x5f27, gbc.sp());
        EXPECT(0x24ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1F 0109
        gbc.setState(0x12cd, 0xc607, 0x6c80, 0x8120, 0x3469, 0xe21c, 0x1, 0x0);
        gbc.writeMem(0x12cd, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xc607, gbc.sp());
        EXPECT(0x12cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1F 010A
        gbc.setState(0x2c7a, 0xa53, 0xc020, 0xbf2, 0xa04e, 0x6dc1, 0x0, 0x1);
        gbc.writeMem(0x2c7a, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xa53, gbc.sp());
        EXPECT(0x2c7c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1F 010B
        gbc.setState(0x592b, 0x6d9a, 0xcb10, 0xbab1, 0x8ec9, 0xb2a1, 0x1, 0x0);
        gbc.writeMem(0x592b, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x6d9a, gbc.sp());
        EXPECT(0x592d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 010C
        gbc.setState(0x9ad0, 0x477a, 0x4780, 0x48c3, 0xf58f, 0x60be, 0x1, 0x1);
        gbc.writeMem(0x9ad0, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x477a, gbc.sp());
        EXPECT(0x9ad2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ad0));
        EXPECT(0x1f, gbc.readMem(0x9ad1));
        // CB 1F 010D
        gbc.setState(0xb14f, 0xb8db, 0x4be0, 0x872d, 0x4a3b, 0x6588, 0x0, 0x0);
        gbc.writeMem(0xb14f, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xb8db, gbc.sp());
        EXPECT(0xb151, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb14f));
        EXPECT(0x1f, gbc.readMem(0xb150));
        // CB 1F 010F
        gbc.setState(0x733a, 0x65f3, 0x3c0, 0xcbfc, 0xed59, 0x2a4c, 0x1, 0x1);
        gbc.writeMem(0x733a, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x65f3, gbc.sp());
        EXPECT(0x733c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 0110
        gbc.setState(0xab93, 0x5b8a, 0x7da0, 0x24de, 0x4443, 0xe37a, 0x0, 0x1);
        gbc.writeMem(0xab93, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x5b8a, gbc.sp());
        EXPECT(0xab95, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab93));
        EXPECT(0x1f, gbc.readMem(0xab94));
        // CB 1F 0111
        gbc.setState(0xe3d3, 0x3a6b, 0x12c0, 0xddfe, 0x1921, 0x19b1, 0x0, 0x0);
        gbc.writeMem(0xe3d3, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x3a6b, gbc.sp());
        EXPECT(0xe3d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe3d3));
        EXPECT(0x1f, gbc.readMem(0xe3d4));
        // CB 1F 0112
        gbc.setState(0x3f8, 0x7ffa, 0x9490, 0x54d4, 0x9714, 0x2137, 0x0, 0x0);
        gbc.writeMem(0x3f8, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x7ffa, gbc.sp());
        EXPECT(0x3fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1F 0113
        gbc.setState(0xe353, 0x9165, 0xaa0, 0xb02c, 0x85d6, 0xd61c, 0x1, 0x1);
        gbc.writeMem(0xe353, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x9165, gbc.sp());
        EXPECT(0xe355, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe353));
        EXPECT(0x1f, gbc.readMem(0xe354));
        // CB 1F 0114
        gbc.setState(0x2d54, 0x1357, 0x5ba0, 0xa657, 0xf74e, 0xedc4, 0x0, 0x1);
        gbc.writeMem(0x2d54, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x1357, gbc.sp());
        EXPECT(0x2d56, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 0115
        gbc.setState(0x4451, 0xa05f, 0x2cd0, 0xaa09, 0xde8e, 0xe555, 0x1, 0x0);
        gbc.writeMem(0x4451, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xa05f, gbc.sp());
        EXPECT(0x4453, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1F 0116
        gbc.setState(0x59d1, 0x60cb, 0x63b0, 0x24bc, 0x5a17, 0x87ef, 0x0, 0x0);
        gbc.writeMem(0x59d1, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x60cb, gbc.sp());
        EXPECT(0x59d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 0117
        gbc.setState(0x77fa, 0x8035, 0x2b80, 0xbcc2, 0x98b8, 0x859d, 0x1, 0x0);
        gbc.writeMem(0x77fa, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x8035, gbc.sp());
        EXPECT(0x77fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 0118
        gbc.setState(0x49bc, 0x5590, 0x9b60, 0x8f1b, 0x6ebe, 0xa68a, 0x0, 0x1);
        gbc.writeMem(0x49bc, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x5590, gbc.sp());
        EXPECT(0x49be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 0119
        gbc.setState(0xb24a, 0xf1ac, 0x1790, 0x61c5, 0x6cd4, 0x7262, 0x0, 0x1);
        gbc.writeMem(0xb24a, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xf1ac, gbc.sp());
        EXPECT(0xb24c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb24a));
        EXPECT(0x1f, gbc.readMem(0xb24b));
        // CB 1F 011A
        gbc.setState(0xb945, 0xde65, 0x2fb0, 0x668, 0x2046, 0xf85e, 0x1, 0x0);
        gbc.writeMem(0xb945, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xde65, gbc.sp());
        EXPECT(0xb947, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb945));
        EXPECT(0x1f, gbc.readMem(0xb946));
        // CB 1F 011B
        gbc.setState(0x1d6c, 0xe87, 0xdd10, 0xbd45, 0xa2f8, 0x75b1, 0x1, 0x0);
        gbc.writeMem(0x1d6c, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xe87, gbc.sp());
        EXPECT(0x1d6e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 011C
        gbc.setState(0x1d92, 0xc9e4, 0x3df0, 0x3d39, 0xc14, 0x59c1, 0x0, 0x1);
        gbc.writeMem(0x1d92, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xc9e4, gbc.sp());
        EXPECT(0x1d94, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 011D
        gbc.setState(0xd5fb, 0xa0d8, 0xaea0, 0x2fe, 0x90cb, 0x972a, 0x1, 0x0);
        gbc.writeMem(0xd5fb, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xa0d8, gbc.sp());
        EXPECT(0xd5fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd5fb));
        EXPECT(0x1f, gbc.readMem(0xd5fc));
        // CB 1F 011E
        gbc.setState(0xb01c, 0xb1c0, 0x5e90, 0x3892, 0x2bb7, 0x76e2, 0x0, 0x1);
        gbc.writeMem(0xb01c, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xb1c0, gbc.sp());
        EXPECT(0xb01e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb01c));
        EXPECT(0x1f, gbc.readMem(0xb01d));
        // CB 1F 011F
        gbc.setState(0xce3, 0x4034, 0x9c70, 0x815e, 0xf4e5, 0x2a75, 0x1, 0x0);
        gbc.writeMem(0xce3, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x4034, gbc.sp());
        EXPECT(0xce5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1F 0121
        gbc.setState(0x1344, 0x7e8, 0xcc30, 0x7344, 0xa6f2, 0xafcf, 0x0, 0x1);
        gbc.writeMem(0x1344, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x7e8, gbc.sp());
        EXPECT(0x1346, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1F 0122
        gbc.setState(0x95df, 0x6805, 0x4e0, 0xd06e, 0x5d49, 0xaf7c, 0x1, 0x0);
        gbc.writeMem(0x95df, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x6805, gbc.sp());
        EXPECT(0x95e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x95df));
        EXPECT(0x1f, gbc.readMem(0x95e0));
        // CB 1F 0123
        gbc.setState(0x1175, 0xb6c2, 0x4ab0, 0x27bf, 0x51d5, 0x1264, 0x0, 0x1);
        gbc.writeMem(0x1175, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xb6c2, gbc.sp());
        EXPECT(0x1177, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1F 0124
        gbc.setState(0x7c3c, 0xe0fe, 0x6610, 0xb5f8, 0x4350, 0x3a27, 0x0, 0x0);
        gbc.writeMem(0x7c3c, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xe0fe, gbc.sp());
        EXPECT(0x7c3e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1F 0125
        gbc.setState(0x3eb7, 0x55ca, 0xc70, 0xd9fa, 0x9bf9, 0xd057, 0x0, 0x0);
        gbc.writeMem(0x3eb7, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x55ca, gbc.sp());
        EXPECT(0x3eb9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1F 0126
        gbc.setState(0x5841, 0x53d0, 0xc310, 0xadd, 0x7829, 0x4576, 0x0, 0x0);
        gbc.writeMem(0x5841, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x53d0, gbc.sp());
        EXPECT(0x5843, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 0127
        gbc.setState(0x3f64, 0x1d74, 0xe170, 0xc91, 0xbb84, 0xbe38, 0x1, 0x0);
        gbc.writeMem(0x3f64, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x1d74, gbc.sp());
        EXPECT(0x3f66, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 0128
        gbc.setState(0xd5be, 0xfe47, 0xd670, 0xc733, 0x2f81, 0xf80c, 0x0, 0x1);
        gbc.writeMem(0xd5be, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xfe47, gbc.sp());
        EXPECT(0xd5c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd5be));
        EXPECT(0x1f, gbc.readMem(0xd5bf));
        // CB 1F 0129
        gbc.setState(0xbbd8, 0x6bb9, 0x18f0, 0x7744, 0x5def, 0xa81c, 0x1, 0x1);
        gbc.writeMem(0xbbd8, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x6bb9, gbc.sp());
        EXPECT(0xbbda, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbbd8));
        EXPECT(0x1f, gbc.readMem(0xbbd9));
        // CB 1F 012A
        gbc.setState(0x566e, 0x7d89, 0x1da0, 0xa5fe, 0x580b, 0x2cd2, 0x0, 0x0);
        gbc.writeMem(0x566e, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x7d89, gbc.sp());
        EXPECT(0x5670, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 012B
        gbc.setState(0x90da, 0x57ba, 0x72a0, 0x19b1, 0x1f82, 0x9be6, 0x0, 0x1);
        gbc.writeMem(0x90da, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x57ba, gbc.sp());
        EXPECT(0x90dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x90da));
        EXPECT(0x1f, gbc.readMem(0x90db));
        // CB 1F 012C
        gbc.setState(0x2118, 0x9932, 0x2660, 0x3949, 0x3cea, 0x1ddc, 0x0, 0x0);
        gbc.writeMem(0x2118, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x9932, gbc.sp());
        EXPECT(0x211a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1F 012D
        gbc.setState(0x33df, 0x8e8d, 0xf950, 0xe82a, 0x3a17, 0x36f2, 0x1, 0x0);
        gbc.writeMem(0x33df, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x8e8d, gbc.sp());
        EXPECT(0x33e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 012E
        gbc.setState(0xdf66, 0x51e6, 0x6cd0, 0x3e01, 0x6480, 0x464, 0x0, 0x1);
        gbc.writeMem(0xdf66, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x51e6, gbc.sp());
        EXPECT(0xdf68, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf66));
        EXPECT(0x1f, gbc.readMem(0xdf67));
        // CB 1F 012F
        gbc.setState(0x905e, 0xf002, 0x4f50, 0x6612, 0x6330, 0xc02b, 0x0, 0x1);
        gbc.writeMem(0x905e, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xf002, gbc.sp());
        EXPECT(0x9060, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x905e));
        EXPECT(0x1f, gbc.readMem(0x905f));
        // CB 1F 0130
        gbc.setState(0x8793, 0x5fea, 0x7e40, 0xec71, 0xc672, 0x302b, 0x1, 0x0);
        gbc.writeMem(0x8793, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x5fea, gbc.sp());
        EXPECT(0x8795, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8793));
        EXPECT(0x1f, gbc.readMem(0x8794));
        // CB 1F 0131
        gbc.setState(0x36ee, 0xa007, 0xc6b0, 0xea62, 0x4c68, 0xaafc, 0x1, 0x0);
        gbc.writeMem(0x36ee, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xa007, gbc.sp());
        EXPECT(0x36f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1F 0132
        gbc.setState(0xac90, 0x574e, 0xf030, 0xb753, 0x6a46, 0x9b59, 0x0, 0x1);
        gbc.writeMem(0xac90, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x574e, gbc.sp());
        EXPECT(0xac92, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac90));
        EXPECT(0x1f, gbc.readMem(0xac91));
        // CB 1F 0133
        gbc.setState(0xe447, 0xf6a2, 0xe600, 0xb144, 0xc666, 0x19e9, 0x1, 0x0);
        gbc.writeMem(0xe447, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xf6a2, gbc.sp());
        EXPECT(0xe449, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe447));
        EXPECT(0x1f, gbc.readMem(0xe448));
        // CB 1F 0134
        gbc.setState(0x6bc2, 0x5d60, 0x1cc0, 0x666, 0xaf8a, 0x2224, 0x0, 0x1);
        gbc.writeMem(0x6bc2, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x5d60, gbc.sp());
        EXPECT(0x6bc4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1F 0136
        gbc.setState(0x6250, 0x8a03, 0x52e0, 0x5394, 0xb4a4, 0x4f8f, 0x0, 0x0);
        gbc.writeMem(0x6250, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x8a03, gbc.sp());
        EXPECT(0x6252, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1F 0137
        gbc.setState(0x815d, 0x9308, 0x82f0, 0x867, 0x2811, 0xd582, 0x0, 0x1);
        gbc.writeMem(0x815d, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x9308, gbc.sp());
        EXPECT(0x815f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x815d));
        EXPECT(0x1f, gbc.readMem(0x815e));
        // CB 1F 0138
        gbc.setState(0x1023, 0xfd3a, 0xf3d0, 0x5db5, 0x74d2, 0xf0b8, 0x0, 0x1);
        gbc.writeMem(0x1023, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xfd3a, gbc.sp());
        EXPECT(0x1025, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 0139
        gbc.setState(0x8ef7, 0xae7c, 0x3720, 0x9aaf, 0x6302, 0xcf32, 0x0, 0x1);
        gbc.writeMem(0x8ef7, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xae7c, gbc.sp());
        EXPECT(0x8ef9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ef7));
        EXPECT(0x1f, gbc.readMem(0x8ef8));
        // CB 1F 013A
        gbc.setState(0x4111, 0xaf79, 0x4310, 0x6df8, 0xea9d, 0x7936, 0x0, 0x1);
        gbc.writeMem(0x4111, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xaf79, gbc.sp());
        EXPECT(0x4113, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 013B
        gbc.setState(0x20e7, 0x6352, 0xf000, 0x8925, 0x8a41, 0x9557, 0x1, 0x0);
        gbc.writeMem(0x20e7, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x6352, gbc.sp());
        EXPECT(0x20e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1F 013C
        gbc.setState(0xc17f, 0xaf54, 0x2910, 0x219f, 0x377d, 0xe5ff, 0x0, 0x1);
        gbc.writeMem(0xc17f, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xaf54, gbc.sp());
        EXPECT(0xc181, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc17f));
        EXPECT(0x1f, gbc.readMem(0xc180));
        // CB 1F 013D
        gbc.setState(0x763, 0x197a, 0xeaf0, 0x71bb, 0x732b, 0x53a, 0x1, 0x1);
        gbc.writeMem(0x763, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x197a, gbc.sp());
        EXPECT(0x765, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1F 013E
        gbc.setState(0xc374, 0xf822, 0x7530, 0x9f75, 0xbde8, 0xc649, 0x0, 0x0);
        gbc.writeMem(0xc374, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xf822, gbc.sp());
        EXPECT(0xc376, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc374));
        EXPECT(0x1f, gbc.readMem(0xc375));
        // CB 1F 013F
        gbc.setState(0x6d1a, 0x35ff, 0xec80, 0x11b1, 0x5e0d, 0xa3bc, 0x1, 0x1);
        gbc.writeMem(0x6d1a, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x35ff, gbc.sp());
        EXPECT(0x6d1c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1F 0140
        gbc.setState(0xdd6d, 0x8817, 0x5420, 0x54ae, 0x5263, 0x1d7, 0x0, 0x1);
        gbc.writeMem(0xdd6d, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x8817, gbc.sp());
        EXPECT(0xdd6f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd6d));
        EXPECT(0x1f, gbc.readMem(0xdd6e));
        // CB 1F 0141
        gbc.setState(0xcc83, 0x52c3, 0x3bf0, 0x6b6e, 0x9c2d, 0xeb6b, 0x0, 0x1);
        gbc.writeMem(0xcc83, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x52c3, gbc.sp());
        EXPECT(0xcc85, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc83));
        EXPECT(0x1f, gbc.readMem(0xcc84));
        // CB 1F 0142
        gbc.setState(0x1dfd, 0x10ad, 0x3f80, 0x73d5, 0x8047, 0xa5dd, 0x0, 0x0);
        gbc.writeMem(0x1dfd, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x10ad, gbc.sp());
        EXPECT(0x1dff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 0143
        gbc.setState(0xd531, 0xaf79, 0x90e0, 0x438f, 0x9bc4, 0x7626, 0x1, 0x1);
        gbc.writeMem(0xd531, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xaf79, gbc.sp());
        EXPECT(0xd533, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd531));
        EXPECT(0x1f, gbc.readMem(0xd532));
        // CB 1F 0144
        gbc.setState(0xca4d, 0x7580, 0x49d0, 0xa210, 0xe861, 0xefbb, 0x1, 0x1);
        gbc.writeMem(0xca4d, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x7580, gbc.sp());
        EXPECT(0xca4f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca4d));
        EXPECT(0x1f, gbc.readMem(0xca4e));
        // CB 1F 0145
        gbc.setState(0x1c1c, 0x708a, 0xc970, 0x31c9, 0x50d, 0x8324, 0x0, 0x1);
        gbc.writeMem(0x1c1c, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x708a, gbc.sp());
        EXPECT(0x1c1e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 0146
        gbc.setState(0xaf9c, 0x3d39, 0x280, 0x100c, 0x8ad4, 0x14a4, 0x1, 0x1);
        gbc.writeMem(0xaf9c, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x3d39, gbc.sp());
        EXPECT(0xaf9e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf9c));
        EXPECT(0x1f, gbc.readMem(0xaf9d));
        // CB 1F 0147
        gbc.setState(0x9bda, 0xaa08, 0xc0f0, 0xcbd2, 0x5810, 0x5c6a, 0x0, 0x0);
        gbc.writeMem(0x9bda, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xaa08, gbc.sp());
        EXPECT(0x9bdc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9bda));
        EXPECT(0x1f, gbc.readMem(0x9bdb));
        // CB 1F 0148
        gbc.setState(0x1775, 0x3839, 0x84b0, 0x6ce0, 0xf005, 0x9f96, 0x0, 0x0);
        gbc.writeMem(0x1775, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x3839, gbc.sp());
        EXPECT(0x1777, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1F 0149
        gbc.setState(0x524f, 0x4ddd, 0xecf0, 0x8880, 0x1955, 0x26b1, 0x1, 0x0);
        gbc.writeMem(0x524f, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x4ddd, gbc.sp());
        EXPECT(0x5251, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1F 014A
        gbc.setState(0x8bfd, 0x90a9, 0x970, 0xc17b, 0xb047, 0x38d0, 0x0, 0x0);
        gbc.writeMem(0x8bfd, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x90a9, gbc.sp());
        EXPECT(0x8bff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8bfd));
        EXPECT(0x1f, gbc.readMem(0x8bfe));
        // CB 1F 014B
        gbc.setState(0x95ab, 0xbfdd, 0xdec0, 0x2c6a, 0x97d6, 0x3c73, 0x1, 0x1);
        gbc.writeMem(0x95ab, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xbfdd, gbc.sp());
        EXPECT(0x95ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x95ab));
        EXPECT(0x1f, gbc.readMem(0x95ac));
        // CB 1F 014C
        gbc.setState(0xc465, 0xa281, 0xbee0, 0x4499, 0x7117, 0x735c, 0x1, 0x0);
        gbc.writeMem(0xc465, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xa281, gbc.sp());
        EXPECT(0xc467, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc465));
        EXPECT(0x1f, gbc.readMem(0xc466));
        // CB 1F 014D
        gbc.setState(0xe96c, 0xb0c8, 0xe490, 0xcd54, 0x776c, 0x8281, 0x0, 0x1);
        gbc.writeMem(0xe96c, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xb0c8, gbc.sp());
        EXPECT(0xe96e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe96c));
        EXPECT(0x1f, gbc.readMem(0xe96d));
        // CB 1F 014E
        gbc.setState(0x6a5a, 0x747, 0x1e50, 0xb97f, 0x72ce, 0x13fa, 0x0, 0x1);
        gbc.writeMem(0x6a5a, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x747, gbc.sp());
        EXPECT(0x6a5c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1F 014F
        gbc.setState(0x15d2, 0xa5d5, 0x4a20, 0x95b5, 0xab12, 0xa88e, 0x0, 0x0);
        gbc.writeMem(0x15d2, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xa5d5, gbc.sp());
        EXPECT(0x15d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1F 0150
        gbc.setState(0xd6cd, 0xc256, 0xa420, 0x40d3, 0x213b, 0x3ef5, 0x1, 0x1);
        gbc.writeMem(0xd6cd, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xc256, gbc.sp());
        EXPECT(0xd6cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd6cd));
        EXPECT(0x1f, gbc.readMem(0xd6ce));
        // CB 1F 0151
        gbc.setState(0x2d19, 0xae2c, 0x9330, 0x4ded, 0xaab0, 0x83e1, 0x1, 0x1);
        gbc.writeMem(0x2d19, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xae2c, gbc.sp());
        EXPECT(0x2d1b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 0152
        gbc.setState(0x93cc, 0x31db, 0x6bf0, 0x585b, 0x60c8, 0xbd48, 0x1, 0x0);
        gbc.writeMem(0x93cc, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x31db, gbc.sp());
        EXPECT(0x93ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x93cc));
        EXPECT(0x1f, gbc.readMem(0x93cd));
        // CB 1F 0153
        gbc.setState(0xe22c, 0xc972, 0x8490, 0x5301, 0xb750, 0x9eaf, 0x1, 0x1);
        gbc.writeMem(0xe22c, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xc972, gbc.sp());
        EXPECT(0xe22e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe22c));
        EXPECT(0x1f, gbc.readMem(0xe22d));
        // CB 1F 0154
        gbc.setState(0x2769, 0x1d6e, 0x7f80, 0x6fc0, 0xc1e3, 0xe12c, 0x1, 0x0);
        gbc.writeMem(0x2769, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x1d6e, gbc.sp());
        EXPECT(0x276b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 0155
        gbc.setState(0x5706, 0xd954, 0xfd90, 0xd017, 0x82cc, 0xfd14, 0x1, 0x1);
        gbc.writeMem(0x5706, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xd954, gbc.sp());
        EXPECT(0x5708, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 0156
        gbc.setState(0xae0d, 0xd11d, 0x610, 0x57f0, 0x671e, 0x4130, 0x0, 0x0);
        gbc.writeMem(0xae0d, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xd11d, gbc.sp());
        EXPECT(0xae0f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae0d));
        EXPECT(0x1f, gbc.readMem(0xae0e));
        // CB 1F 0157
        gbc.setState(0x4aa4, 0x285f, 0x6e10, 0x617c, 0x2da4, 0xd49c, 0x1, 0x1);
        gbc.writeMem(0x4aa4, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x285f, gbc.sp());
        EXPECT(0x4aa6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1F 0158
        gbc.setState(0x853d, 0x2b19, 0x8940, 0x7d77, 0xfbc0, 0x8268, 0x0, 0x1);
        gbc.writeMem(0x853d, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x2b19, gbc.sp());
        EXPECT(0x853f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x853d));
        EXPECT(0x1f, gbc.readMem(0x853e));
        // CB 1F 0159
        gbc.setState(0x6439, 0x8153, 0xa860, 0x3ccc, 0x98a3, 0x5ccb, 0x0, 0x1);
        gbc.writeMem(0x6439, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x8153, gbc.sp());
        EXPECT(0x643b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1F 015A
        gbc.setState(0x6562, 0xcd50, 0xb360, 0x541d, 0xdea3, 0x7cbd, 0x0, 0x0);
        gbc.writeMem(0x6562, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xcd50, gbc.sp());
        EXPECT(0x6564, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 015B
        gbc.setState(0x7132, 0x2486, 0x3b00, 0xbe5e, 0xca52, 0xe452, 0x1, 0x1);
        gbc.writeMem(0x7132, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x2486, gbc.sp());
        EXPECT(0x7134, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 015C
        gbc.setState(0xcab0, 0xc045, 0x6690, 0xe3dd, 0x2fc0, 0xbe7c, 0x1, 0x1);
        gbc.writeMem(0xcab0, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xc045, gbc.sp());
        EXPECT(0xcab2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcab0));
        EXPECT(0x1f, gbc.readMem(0xcab1));
        // CB 1F 015D
        gbc.setState(0xe198, 0x410f, 0xce90, 0x74c1, 0x9892, 0xae83, 0x0, 0x1);
        gbc.writeMem(0xe198, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x410f, gbc.sp());
        EXPECT(0xe19a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe198));
        EXPECT(0x1f, gbc.readMem(0xe199));
        // CB 1F 015E
        gbc.setState(0x5108, 0x99c, 0x2170, 0x2a8e, 0x2f0a, 0x85cf, 0x1, 0x0);
        gbc.writeMem(0x5108, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x99c, gbc.sp());
        EXPECT(0x510a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 015F
        gbc.setState(0xfe7, 0xf0dd, 0x14d0, 0xe70a, 0x9824, 0xe251, 0x0, 0x1);
        gbc.writeMem(0xfe7, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xf0dd, gbc.sp());
        EXPECT(0xfe9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1F 0160
        gbc.setState(0x6113, 0xf00d, 0xadf0, 0xe356, 0xb69a, 0xcccb, 0x1, 0x1);
        gbc.writeMem(0x6113, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xf00d, gbc.sp());
        EXPECT(0x6115, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 0162
        gbc.setState(0x8493, 0x23d7, 0xc930, 0xbcc4, 0xcd8d, 0x5de4, 0x1, 0x0);
        gbc.writeMem(0x8493, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x23d7, gbc.sp());
        EXPECT(0x8495, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8493));
        EXPECT(0x1f, gbc.readMem(0x8494));
        // CB 1F 0163
        gbc.setState(0x29d1, 0x225b, 0xe1e0, 0x1a7a, 0x4f79, 0x7714, 0x1, 0x1);
        gbc.writeMem(0x29d1, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x225b, gbc.sp());
        EXPECT(0x29d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 0164
        gbc.setState(0x19e5, 0x60b0, 0xbb20, 0x23be, 0xa6d2, 0xfb58, 0x1, 0x1);
        gbc.writeMem(0x19e5, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x60b0, gbc.sp());
        EXPECT(0x19e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 0165
        gbc.setState(0x58f8, 0x5e8c, 0x3d30, 0x76e8, 0x1c64, 0x34f2, 0x1, 0x1);
        gbc.writeMem(0x58f8, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x5e8c, gbc.sp());
        EXPECT(0x58fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 0166
        gbc.setState(0x2f10, 0x6d84, 0x5710, 0xc81f, 0x4fb9, 0x20a3, 0x1, 0x0);
        gbc.writeMem(0x2f10, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x6d84, gbc.sp());
        EXPECT(0x2f12, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 0167
        gbc.setState(0xaeba, 0x3334, 0x9a70, 0xe358, 0x9b7e, 0x1dd8, 0x0, 0x0);
        gbc.writeMem(0xaeba, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x3334, gbc.sp());
        EXPECT(0xaebc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaeba));
        EXPECT(0x1f, gbc.readMem(0xaebb));
        // CB 1F 0168
        gbc.setState(0x8501, 0xb9f2, 0xa690, 0xe3e5, 0xdaae, 0x5a74, 0x0, 0x1);
        gbc.writeMem(0x8501, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xb9f2, gbc.sp());
        EXPECT(0x8503, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8501));
        EXPECT(0x1f, gbc.readMem(0x8502));
        // CB 1F 0169
        gbc.setState(0xe062, 0x8042, 0x5a20, 0x3289, 0xf152, 0xdbbd, 0x1, 0x0);
        gbc.writeMem(0xe062, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x8042, gbc.sp());
        EXPECT(0xe064, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe062));
        EXPECT(0x1f, gbc.readMem(0xe063));
        // CB 1F 016A
        gbc.setState(0x4ac0, 0xccca, 0x1350, 0x387a, 0x56cc, 0xb1bb, 0x0, 0x1);
        gbc.writeMem(0x4ac0, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xccca, gbc.sp());
        EXPECT(0x4ac2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 016B
        gbc.setState(0xa81d, 0xaf74, 0x2cc0, 0x8717, 0xc854, 0x4dda, 0x0, 0x0);
        gbc.writeMem(0xa81d, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xaf74, gbc.sp());
        EXPECT(0xa81f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa81d));
        EXPECT(0x1f, gbc.readMem(0xa81e));
        // CB 1F 016C
        gbc.setState(0x53fe, 0x2a38, 0xb4a0, 0x4397, 0xa69c, 0x1824, 0x0, 0x1);
        gbc.writeMem(0x53fe, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x2a38, gbc.sp());
        EXPECT(0x5400, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1F 016E
        gbc.setState(0x86fc, 0x5daa, 0x270, 0xf580, 0x2aab, 0xb5a2, 0x1, 0x0);
        gbc.writeMem(0x86fc, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x5daa, gbc.sp());
        EXPECT(0x86fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x86fc));
        EXPECT(0x1f, gbc.readMem(0x86fd));
        // CB 1F 016F
        gbc.setState(0x2fb5, 0xeafd, 0x3d50, 0x8ff9, 0xb9a9, 0x8cfd, 0x1, 0x1);
        gbc.writeMem(0x2fb5, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xeafd, gbc.sp());
        EXPECT(0x2fb7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 0170
        gbc.setState(0x9ab, 0xa675, 0x8cf0, 0xd57, 0x617c, 0xd52f, 0x1, 0x0);
        gbc.writeMem(0x9ab, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xa675, gbc.sp());
        EXPECT(0x9ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1F 0171
        gbc.setState(0x622, 0xd401, 0xdaf0, 0xade0, 0xe270, 0xddd6, 0x0, 0x0);
        gbc.writeMem(0x622, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xd401, gbc.sp());
        EXPECT(0x624, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1F 0172
        gbc.setState(0xc6f7, 0x32b4, 0x4e00, 0x6ccf, 0xdfb, 0xbc7a, 0x0, 0x0);
        gbc.writeMem(0xc6f7, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x32b4, gbc.sp());
        EXPECT(0xc6f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc6f7));
        EXPECT(0x1f, gbc.readMem(0xc6f8));
        // CB 1F 0173
        gbc.setState(0x96d1, 0x8ce9, 0x9910, 0x2eb8, 0xb2d, 0xe9f1, 0x0, 0x0);
        gbc.writeMem(0x96d1, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x8ce9, gbc.sp());
        EXPECT(0x96d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x96d1));
        EXPECT(0x1f, gbc.readMem(0x96d2));
        // CB 1F 0174
        gbc.setState(0xd2aa, 0xd4d8, 0x6c60, 0xe66, 0x2640, 0x5f7e, 0x1, 0x0);
        gbc.writeMem(0xd2aa, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xd4d8, gbc.sp());
        EXPECT(0xd2ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd2aa));
        EXPECT(0x1f, gbc.readMem(0xd2ab));
        // CB 1F 0175
        gbc.setState(0x3490, 0xdc6d, 0x1e0, 0x79ce, 0x3693, 0xdac8, 0x0, 0x0);
        gbc.writeMem(0x3490, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xdc6d, gbc.sp());
        EXPECT(0x3492, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 0176
        gbc.setState(0xd7b4, 0x1d20, 0xa100, 0xa04, 0x222c, 0x872c, 0x0, 0x0);
        gbc.writeMem(0xd7b4, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x1d20, gbc.sp());
        EXPECT(0xd7b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd7b4));
        EXPECT(0x1f, gbc.readMem(0xd7b5));
        // CB 1F 0177
        gbc.setState(0xbe85, 0x78c0, 0xc230, 0xecd4, 0xa7e9, 0xe08c, 0x0, 0x0);
        gbc.writeMem(0xbe85, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x78c0, gbc.sp());
        EXPECT(0xbe87, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe85));
        EXPECT(0x1f, gbc.readMem(0xbe86));
        // CB 1F 0178
        gbc.setState(0x1bba, 0xfdb2, 0x3080, 0x5e63, 0x9bf1, 0xe4ad, 0x1, 0x0);
        gbc.writeMem(0x1bba, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xfdb2, gbc.sp());
        EXPECT(0x1bbc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1F 0179
        gbc.setState(0x372d, 0xbed1, 0xf3e0, 0xd541, 0xff9d, 0xebe8, 0x0, 0x1);
        gbc.writeMem(0x372d, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xbed1, gbc.sp());
        EXPECT(0x372f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 017A
        gbc.setState(0x7cca, 0x7d21, 0x640, 0x3119, 0xe15e, 0x3ccd, 0x1, 0x0);
        gbc.writeMem(0x7cca, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x7d21, gbc.sp());
        EXPECT(0x7ccc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1F 017B
        gbc.setState(0x411c, 0x498a, 0xb1d0, 0xc64f, 0xec20, 0x5e00, 0x1, 0x1);
        gbc.writeMem(0x411c, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x498a, gbc.sp());
        EXPECT(0x411e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 017C
        gbc.setState(0x605f, 0xa250, 0x7890, 0x1786, 0x88a6, 0x651, 0x1, 0x0);
        gbc.writeMem(0x605f, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xa250, gbc.sp());
        EXPECT(0x6061, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1F 017D
        gbc.setState(0x8856, 0x50c7, 0x9aa0, 0x8ae0, 0x331f, 0x165f, 0x1, 0x0);
        gbc.writeMem(0x8856, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x50c7, gbc.sp());
        EXPECT(0x8858, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8856));
        EXPECT(0x1f, gbc.readMem(0x8857));
        // CB 1F 017E
        gbc.setState(0x2b2b, 0xcdfa, 0x6190, 0xcf3f, 0x3dd7, 0xd286, 0x0, 0x1);
        gbc.writeMem(0x2b2b, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xcdfa, gbc.sp());
        EXPECT(0x2b2d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 017F
        gbc.setState(0xe122, 0x2c0a, 0x19f0, 0x78fc, 0x36e4, 0x5632, 0x0, 0x0);
        gbc.writeMem(0xe122, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x2c0a, gbc.sp());
        EXPECT(0xe124, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe122));
        EXPECT(0x1f, gbc.readMem(0xe123));
        // CB 1F 0180
        gbc.setState(0x73bf, 0xbcf8, 0xfa30, 0x1c65, 0x993a, 0x96ce, 0x0, 0x0);
        gbc.writeMem(0x73bf, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xbcf8, gbc.sp());
        EXPECT(0x73c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1F 0181
        gbc.setState(0xa0c3, 0x9688, 0x960, 0xc09d, 0x8f62, 0x64aa, 0x1, 0x0);
        gbc.writeMem(0xa0c3, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x9688, gbc.sp());
        EXPECT(0xa0c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa0c3));
        EXPECT(0x1f, gbc.readMem(0xa0c4));
        // CB 1F 0182
        gbc.setState(0xcf6c, 0x2b88, 0x8a60, 0x21b, 0x6741, 0xca20, 0x1, 0x1);
        gbc.writeMem(0xcf6c, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x2b88, gbc.sp());
        EXPECT(0xcf6e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf6c));
        EXPECT(0x1f, gbc.readMem(0xcf6d));
        // CB 1F 0183
        gbc.setState(0x8c1e, 0x7301, 0x7d70, 0x2fe4, 0xc1fa, 0xcf01, 0x1, 0x1);
        gbc.writeMem(0x8c1e, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x7301, gbc.sp());
        EXPECT(0x8c20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c1e));
        EXPECT(0x1f, gbc.readMem(0x8c1f));
        // CB 1F 0184
        gbc.setState(0x5320, 0x304c, 0x8730, 0xee5b, 0x1866, 0xdd15, 0x1, 0x0);
        gbc.writeMem(0x5320, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x304c, gbc.sp());
        EXPECT(0x5322, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 0185
        gbc.setState(0x9362, 0xcae1, 0x5930, 0xea39, 0xdc35, 0x63fb, 0x0, 0x1);
        gbc.writeMem(0x9362, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xcae1, gbc.sp());
        EXPECT(0x9364, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9362));
        EXPECT(0x1f, gbc.readMem(0x9363));
        // CB 1F 0186
        gbc.setState(0x89f, 0xedd7, 0x2240, 0x3d9, 0x20eb, 0xfff6, 0x1, 0x0);
        gbc.writeMem(0x89f, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xedd7, gbc.sp());
        EXPECT(0x8a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1F 0187
        gbc.setState(0x99a, 0xabcd, 0xb770, 0x6b25, 0x7179, 0x3b98, 0x1, 0x0);
        gbc.writeMem(0x99a, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xabcd, gbc.sp());
        EXPECT(0x99c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 0189
        gbc.setState(0x9ba0, 0x6472, 0x2f00, 0xe2c3, 0x25bc, 0xe75c, 0x0, 0x0);
        gbc.writeMem(0x9ba0, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x6472, gbc.sp());
        EXPECT(0x9ba2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ba0));
        EXPECT(0x1f, gbc.readMem(0x9ba1));
        // CB 1F 018A
        gbc.setState(0xf8b, 0x5934, 0xad00, 0xaf5b, 0xf465, 0x538d, 0x1, 0x0);
        gbc.writeMem(0xf8b, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x5934, gbc.sp());
        EXPECT(0xf8d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 018B
        gbc.setState(0x5d85, 0xa959, 0x4f50, 0xf7e3, 0x8e4f, 0x3275, 0x1, 0x0);
        gbc.writeMem(0x5d85, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xa959, gbc.sp());
        EXPECT(0x5d87, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 018C
        gbc.setState(0xfc5, 0x23ee, 0xfe60, 0xb8eb, 0x5929, 0x8274, 0x0, 0x0);
        gbc.writeMem(0xfc5, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x23ee, gbc.sp());
        EXPECT(0xfc7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1F 018D
        gbc.setState(0x3bda, 0x3941, 0x3cc0, 0x3448, 0xb983, 0x6c65, 0x1, 0x1);
        gbc.writeMem(0x3bda, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x3941, gbc.sp());
        EXPECT(0x3bdc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1F 018E
        gbc.setState(0x56a5, 0x3af5, 0x7ee0, 0x40ff, 0x7605, 0x4fb9, 0x0, 0x1);
        gbc.writeMem(0x56a5, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x3af5, gbc.sp());
        EXPECT(0x56a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1F 018F
        gbc.setState(0x8c53, 0x11e9, 0xc6f0, 0x56b4, 0x1110, 0x8c50, 0x0, 0x0);
        gbc.writeMem(0x8c53, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x11e9, gbc.sp());
        EXPECT(0x8c55, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c53));
        EXPECT(0x1f, gbc.readMem(0x8c54));
        // CB 1F 0190
        gbc.setState(0x419, 0x2320, 0x9720, 0xa2c6, 0x5218, 0x768f, 0x1, 0x0);
        gbc.writeMem(0x419, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x2320, gbc.sp());
        EXPECT(0x41b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 0191
        gbc.setState(0x8672, 0x2dd, 0x2a10, 0xa6be, 0x1b4c, 0x9cf7, 0x0, 0x0);
        gbc.writeMem(0x8672, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x2dd, gbc.sp());
        EXPECT(0x8674, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8672));
        EXPECT(0x1f, gbc.readMem(0x8673));
        // CB 1F 0192
        gbc.setState(0xec59, 0xcc23, 0x97c0, 0xc2fb, 0x83a5, 0xeb42, 0x0, 0x0);
        gbc.writeMem(0xec59, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xcc23, gbc.sp());
        EXPECT(0xec5b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec59));
        EXPECT(0x1f, gbc.readMem(0xec5a));
        // CB 1F 0193
        gbc.setState(0x8dd5, 0xa256, 0x720, 0xbf9f, 0x9685, 0x8f36, 0x1, 0x0);
        gbc.writeMem(0x8dd5, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xa256, gbc.sp());
        EXPECT(0x8dd7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8dd5));
        EXPECT(0x1f, gbc.readMem(0x8dd6));
        // CB 1F 0194
        gbc.setState(0xd041, 0xb651, 0x7240, 0xf079, 0x198, 0x9bb2, 0x1, 0x1);
        gbc.writeMem(0xd041, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xb651, gbc.sp());
        EXPECT(0xd043, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd041));
        EXPECT(0x1f, gbc.readMem(0xd042));
        // CB 1F 0195
        gbc.setState(0x1d07, 0xe481, 0xb100, 0xd7a5, 0x76cf, 0xca2f, 0x0, 0x0);
        gbc.writeMem(0x1d07, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xe481, gbc.sp());
        EXPECT(0x1d09, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 0196
        gbc.setState(0x3b1b, 0x2b83, 0x80a0, 0x9227, 0xb4f2, 0x8aff, 0x0, 0x0);
        gbc.writeMem(0x3b1b, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x2b83, gbc.sp());
        EXPECT(0x3b1d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1F 0197
        gbc.setState(0xcf09, 0x97b1, 0x10b0, 0x539f, 0x23d0, 0x4fb3, 0x0, 0x0);
        gbc.writeMem(0xcf09, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x97b1, gbc.sp());
        EXPECT(0xcf0b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf09));
        EXPECT(0x1f, gbc.readMem(0xcf0a));
        // CB 1F 0198
        gbc.setState(0x6632, 0x4b5e, 0x50f0, 0xbe6d, 0xb856, 0x5537, 0x1, 0x0);
        gbc.writeMem(0x6632, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x4b5e, gbc.sp());
        EXPECT(0x6634, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1F 0199
        gbc.setState(0x992f, 0xd8e5, 0x4890, 0x60ee, 0x3977, 0xd9a0, 0x0, 0x1);
        gbc.writeMem(0x992f, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xd8e5, gbc.sp());
        EXPECT(0x9931, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x992f));
        EXPECT(0x1f, gbc.readMem(0x9930));
        // CB 1F 019A
        gbc.setState(0xc373, 0x2141, 0xa3a0, 0x6d57, 0xee37, 0x4e4b, 0x0, 0x1);
        gbc.writeMem(0xc373, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x2141, gbc.sp());
        EXPECT(0xc375, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc373));
        EXPECT(0x1f, gbc.readMem(0xc374));
        // CB 1F 019B
        gbc.setState(0xa013, 0xdb52, 0x6180, 0x69aa, 0x76d5, 0xc437, 0x1, 0x0);
        gbc.writeMem(0xa013, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xdb52, gbc.sp());
        EXPECT(0xa015, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa013));
        EXPECT(0x1f, gbc.readMem(0xa014));
        // CB 1F 019C
        gbc.setState(0x6388, 0x7900, 0x6ac0, 0x3318, 0xd614, 0x7c12, 0x1, 0x1);
        gbc.writeMem(0x6388, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x7900, gbc.sp());
        EXPECT(0x638a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1F 019D
        gbc.setState(0x6145, 0x6b3, 0x6760, 0xd05a, 0x4611, 0x409b, 0x1, 0x0);
        gbc.writeMem(0x6145, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x6b3, gbc.sp());
        EXPECT(0x6147, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 019E
        gbc.setState(0x1310, 0x8a6c, 0x2320, 0x6919, 0xfb2f, 0x448d, 0x0, 0x0);
        gbc.writeMem(0x1310, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x8a6c, gbc.sp());
        EXPECT(0x1312, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 019F
        gbc.setState(0x9d65, 0xd11b, 0xb750, 0xf834, 0x9be9, 0x12e7, 0x0, 0x1);
        gbc.writeMem(0x9d65, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xd11b, gbc.sp());
        EXPECT(0x9d67, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d65));
        EXPECT(0x1f, gbc.readMem(0x9d66));
        // CB 1F 01A0
        gbc.setState(0xcb22, 0x3853, 0x4b60, 0x6d93, 0xfc65, 0x6ad, 0x0, 0x0);
        gbc.writeMem(0xcb22, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x3853, gbc.sp());
        EXPECT(0xcb24, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb22));
        EXPECT(0x1f, gbc.readMem(0xcb23));
        // CB 1F 01A1
        gbc.setState(0x874f, 0x1446, 0x22e0, 0x4425, 0x4e68, 0x2220, 0x1, 0x1);
        gbc.writeMem(0x874f, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x1446, gbc.sp());
        EXPECT(0x8751, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x874f));
        EXPECT(0x1f, gbc.readMem(0x8750));
        // CB 1F 01A2
        gbc.setState(0xc81e, 0xeee9, 0xeae0, 0xd4d4, 0x4bd2, 0x9a10, 0x1, 0x1);
        gbc.writeMem(0xc81e, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xeee9, gbc.sp());
        EXPECT(0xc820, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc81e));
        EXPECT(0x1f, gbc.readMem(0xc81f));
        // CB 1F 01A4
        gbc.setState(0x9ec8, 0x38ec, 0xfc0, 0xf63f, 0x38f3, 0x38a2, 0x1, 0x0);
        gbc.writeMem(0x9ec8, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x38ec, gbc.sp());
        EXPECT(0x9eca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ec8));
        EXPECT(0x1f, gbc.readMem(0x9ec9));
        // CB 1F 01A5
        gbc.setState(0xae48, 0x298a, 0x5dd0, 0x2caa, 0xc5a, 0x1a50, 0x1, 0x1);
        gbc.writeMem(0xae48, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x298a, gbc.sp());
        EXPECT(0xae4a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae48));
        EXPECT(0x1f, gbc.readMem(0xae49));
        // CB 1F 01A6
        gbc.setState(0x38d5, 0xb9b4, 0x3010, 0xa4a0, 0x7cce, 0x2ba4, 0x0, 0x0);
        gbc.writeMem(0x38d5, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xb9b4, gbc.sp());
        EXPECT(0x38d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1F 01A7
        gbc.setState(0x4fc5, 0x52eb, 0x45f0, 0xb1a9, 0xbcb6, 0xc73d, 0x1, 0x0);
        gbc.writeMem(0x4fc5, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x52eb, gbc.sp());
        EXPECT(0x4fc7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 01A8
        gbc.setState(0x9fd3, 0x8cfe, 0xf130, 0x5a0f, 0xede1, 0xb683, 0x0, 0x0);
        gbc.writeMem(0x9fd3, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x8cfe, gbc.sp());
        EXPECT(0x9fd5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9fd3));
        EXPECT(0x1f, gbc.readMem(0x9fd4));
        // CB 1F 01A9
        gbc.setState(0x3724, 0xd9fd, 0x7280, 0x9915, 0x65ba, 0x9bd8, 0x0, 0x0);
        gbc.writeMem(0x3724, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xd9fd, gbc.sp());
        EXPECT(0x3726, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1F 01AA
        gbc.setState(0x9e76, 0x1e61, 0x28d0, 0x6921, 0x8000, 0xc47c, 0x0, 0x1);
        gbc.writeMem(0x9e76, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x1e61, gbc.sp());
        EXPECT(0x9e78, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e76));
        EXPECT(0x1f, gbc.readMem(0x9e77));
        // CB 1F 01AB
        gbc.setState(0x7ac6, 0x6832, 0x95e0, 0x9062, 0xe255, 0x99cd, 0x0, 0x1);
        gbc.writeMem(0x7ac6, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x6832, gbc.sp());
        EXPECT(0x7ac8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 01AC
        gbc.setState(0xd526, 0x3889, 0xb7e0, 0x67a3, 0x7d6e, 0xfde5, 0x1, 0x0);
        gbc.writeMem(0xd526, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x3889, gbc.sp());
        EXPECT(0xd528, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd526));
        EXPECT(0x1f, gbc.readMem(0xd527));
        // CB 1F 01AD
        gbc.setState(0xd290, 0x7a70, 0x53c0, 0xb118, 0x9b73, 0x99c, 0x0, 0x0);
        gbc.writeMem(0xd290, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x7a70, gbc.sp());
        EXPECT(0xd292, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd290));
        EXPECT(0x1f, gbc.readMem(0xd291));
        // CB 1F 01AE
        gbc.setState(0x454f, 0xbdea, 0xd290, 0xab03, 0x816e, 0xb113, 0x1, 0x1);
        gbc.writeMem(0x454f, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xbdea, gbc.sp());
        EXPECT(0x4551, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1F 01B0
        gbc.setState(0x9e4d, 0x3aae, 0xa2a0, 0x3178, 0xc19b, 0xa91f, 0x1, 0x0);
        gbc.writeMem(0x9e4d, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x3aae, gbc.sp());
        EXPECT(0x9e4f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e4d));
        EXPECT(0x1f, gbc.readMem(0x9e4e));
        // CB 1F 01B2
        gbc.setState(0x2ba1, 0xd864, 0x5b00, 0xa8a2, 0x38f6, 0x22ba, 0x1, 0x1);
        gbc.writeMem(0x2ba1, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xd864, gbc.sp());
        EXPECT(0x2ba3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 01B3
        gbc.setState(0x7e49, 0x375, 0x5a60, 0xf09c, 0x547d, 0x8718, 0x1, 0x1);
        gbc.writeMem(0x7e49, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x375, gbc.sp());
        EXPECT(0x7e4b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1F 01B4
        gbc.setState(0x37b7, 0xca42, 0xdcf0, 0x57b0, 0xa24d, 0x972, 0x1, 0x1);
        gbc.writeMem(0x37b7, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xca42, gbc.sp());
        EXPECT(0x37b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1F 01B5
        gbc.setState(0x3edb, 0x25b4, 0xc5f0, 0xa5ac, 0xbb3a, 0xae9, 0x1, 0x0);
        gbc.writeMem(0x3edb, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x25b4, gbc.sp());
        EXPECT(0x3edd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 01B6
        gbc.setState(0x866f, 0xbcbd, 0x6790, 0xf5d5, 0x4b2a, 0xb276, 0x0, 0x0);
        gbc.writeMem(0x866f, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xbcbd, gbc.sp());
        EXPECT(0x8671, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x866f));
        EXPECT(0x1f, gbc.readMem(0x8670));
        // CB 1F 01B7
        gbc.setState(0x18a9, 0x281e, 0x4e50, 0x7020, 0x92db, 0xd361, 0x1, 0x1);
        gbc.writeMem(0x18a9, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x281e, gbc.sp());
        EXPECT(0x18ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1F 01B9
        gbc.setState(0xb83c, 0x4245, 0xf280, 0x488, 0xb1f8, 0x8a92, 0x1, 0x0);
        gbc.writeMem(0xb83c, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x4245, gbc.sp());
        EXPECT(0xb83e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb83c));
        EXPECT(0x1f, gbc.readMem(0xb83d));
        // CB 1F 01BA
        gbc.setState(0xbf96, 0xa786, 0x7be0, 0xab74, 0xd6e9, 0xa388, 0x0, 0x0);
        gbc.writeMem(0xbf96, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xa786, gbc.sp());
        EXPECT(0xbf98, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf96));
        EXPECT(0x1f, gbc.readMem(0xbf97));
        // CB 1F 01BB
        gbc.setState(0x7c53, 0x3fd7, 0xbb60, 0x3337, 0x848e, 0x7f53, 0x0, 0x1);
        gbc.writeMem(0x7c53, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x3fd7, gbc.sp());
        EXPECT(0x7c55, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 01BC
        gbc.setState(0x9d70, 0xfb60, 0xbaf0, 0xaf3e, 0x5dff, 0x2dac, 0x0, 0x1);
        gbc.writeMem(0x9d70, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xfb60, gbc.sp());
        EXPECT(0x9d72, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d70));
        EXPECT(0x1f, gbc.readMem(0x9d71));
        // CB 1F 01BD
        gbc.setState(0x1f9c, 0xb970, 0x520, 0x893d, 0xfbf4, 0x601f, 0x0, 0x1);
        gbc.writeMem(0x1f9c, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xb970, gbc.sp());
        EXPECT(0x1f9e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 01BE
        gbc.setState(0x4e85, 0xf5b, 0x9780, 0x88db, 0xc106, 0x7a71, 0x1, 0x1);
        gbc.writeMem(0x4e85, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xf5b, gbc.sp());
        EXPECT(0x4e87, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 01BF
        gbc.setState(0x83d6, 0xefdb, 0xb990, 0xe2d9, 0xa48d, 0xff3d, 0x0, 0x1);
        gbc.writeMem(0x83d6, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xefdb, gbc.sp());
        EXPECT(0x83d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x83d6));
        EXPECT(0x1f, gbc.readMem(0x83d7));
        // CB 1F 01C0
        gbc.setState(0xc165, 0xf296, 0x1a0, 0xa979, 0x9438, 0x2297, 0x0, 0x1);
        gbc.writeMem(0xc165, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xf296, gbc.sp());
        EXPECT(0xc167, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc165));
        EXPECT(0x1f, gbc.readMem(0xc166));
        // CB 1F 01C1
        gbc.setState(0x3039, 0x27bb, 0x4ae0, 0x8aa0, 0x429b, 0x40b6, 0x0, 0x0);
        gbc.writeMem(0x3039, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x27bb, gbc.sp());
        EXPECT(0x303b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1F 01C2
        gbc.setState(0xced, 0x9065, 0xecc0, 0xf7ec, 0x4bb1, 0x174c, 0x1, 0x0);
        gbc.writeMem(0xced, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x9065, gbc.sp());
        EXPECT(0xcef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1F 01C3
        gbc.setState(0x7793, 0x8752, 0xe030, 0xf0e3, 0x743a, 0x6180, 0x1, 0x1);
        gbc.writeMem(0x7793, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x8752, gbc.sp());
        EXPECT(0x7795, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1F 01C4
        gbc.setState(0x2261, 0xd14d, 0x6ff0, 0x8b80, 0xd43, 0xa661, 0x1, 0x0);
        gbc.writeMem(0x2261, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xd14d, gbc.sp());
        EXPECT(0x2263, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 01C5
        gbc.setState(0x6dd1, 0x1a5f, 0xe770, 0x3f08, 0xd9dc, 0xd358, 0x0, 0x0);
        gbc.writeMem(0x6dd1, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x1a5f, gbc.sp());
        EXPECT(0x6dd3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 01C6
        gbc.setState(0x387b, 0x148c, 0x5120, 0xdab0, 0xee4f, 0x7900, 0x0, 0x0);
        gbc.writeMem(0x387b, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x148c, gbc.sp());
        EXPECT(0x387d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 01C7
        gbc.setState(0xd64f, 0xec7f, 0xf7e0, 0x3e79, 0xc27a, 0x828, 0x0, 0x1);
        gbc.writeMem(0xd64f, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xec7f, gbc.sp());
        EXPECT(0xd651, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd64f));
        EXPECT(0x1f, gbc.readMem(0xd650));
        // CB 1F 01C8
        gbc.setState(0x48b5, 0x70dc, 0x1d10, 0x5ec7, 0xc05d, 0x2177, 0x0, 0x0);
        gbc.writeMem(0x48b5, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x70dc, gbc.sp());
        EXPECT(0x48b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 01C9
        gbc.setState(0x83d7, 0xb8d0, 0x2290, 0x4449, 0xa6e3, 0xd42c, 0x0, 0x0);
        gbc.writeMem(0x83d7, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xb8d0, gbc.sp());
        EXPECT(0x83d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x83d7));
        EXPECT(0x1f, gbc.readMem(0x83d8));
        // CB 1F 01CA
        gbc.setState(0x47bd, 0xd219, 0x6ea0, 0x8e7d, 0x26c6, 0xdf15, 0x1, 0x0);
        gbc.writeMem(0x47bd, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xd219, gbc.sp());
        EXPECT(0x47bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1F 01CB
        gbc.setState(0x99b5, 0xba97, 0x8db0, 0xd201, 0x6522, 0xcb80, 0x0, 0x0);
        gbc.writeMem(0x99b5, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xba97, gbc.sp());
        EXPECT(0x99b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x99b5));
        EXPECT(0x1f, gbc.readMem(0x99b6));
        // CB 1F 01CC
        gbc.setState(0x5201, 0x4b1, 0x6fd0, 0x9a36, 0xeff6, 0xde64, 0x0, 0x1);
        gbc.writeMem(0x5201, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x4b1, gbc.sp());
        EXPECT(0x5203, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 01CE
        gbc.setState(0x9e14, 0x4ec8, 0x1920, 0x3cdd, 0x603, 0xab5c, 0x0, 0x0);
        gbc.writeMem(0x9e14, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x4ec8, gbc.sp());
        EXPECT(0x9e16, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e14));
        EXPECT(0x1f, gbc.readMem(0x9e15));
        // CB 1F 01CF
        gbc.setState(0xa4ba, 0x446b, 0x9540, 0x1c8d, 0x415b, 0x3f14, 0x1, 0x0);
        gbc.writeMem(0xa4ba, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x446b, gbc.sp());
        EXPECT(0xa4bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa4ba));
        EXPECT(0x1f, gbc.readMem(0xa4bb));
        // CB 1F 01D0
        gbc.setState(0xc12f, 0xf83f, 0x99d0, 0xb4f6, 0xf35c, 0x62aa, 0x1, 0x0);
        gbc.writeMem(0xc12f, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xf83f, gbc.sp());
        EXPECT(0xc131, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc12f));
        EXPECT(0x1f, gbc.readMem(0xc130));
        // CB 1F 01D2
        gbc.setState(0x92f2, 0xf4ab, 0xab10, 0x5c9a, 0xd2f0, 0xe4a4, 0x1, 0x1);
        gbc.writeMem(0x92f2, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xf4ab, gbc.sp());
        EXPECT(0x92f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x92f2));
        EXPECT(0x1f, gbc.readMem(0x92f3));
        // CB 1F 01D3
        gbc.setState(0xd23c, 0xb8d0, 0x8180, 0xaf83, 0x6c0f, 0xc0da, 0x0, 0x0);
        gbc.writeMem(0xd23c, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xb8d0, gbc.sp());
        EXPECT(0xd23e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd23c));
        EXPECT(0x1f, gbc.readMem(0xd23d));
        // CB 1F 01D4
        gbc.setState(0x741e, 0x7846, 0x7160, 0x4fe1, 0xf588, 0x4a9b, 0x0, 0x1);
        gbc.writeMem(0x741e, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x7846, gbc.sp());
        EXPECT(0x7420, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 01D5
        gbc.setState(0x88fa, 0x99e4, 0x66a0, 0x302f, 0xe39a, 0xcb1a, 0x1, 0x0);
        gbc.writeMem(0x88fa, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x99e4, gbc.sp());
        EXPECT(0x88fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x88fa));
        EXPECT(0x1f, gbc.readMem(0x88fb));
        // CB 1F 01D6
        gbc.setState(0x17fc, 0x6a44, 0x880, 0xfdef, 0x33db, 0xf49c, 0x1, 0x0);
        gbc.writeMem(0x17fc, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x6a44, gbc.sp());
        EXPECT(0x17fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1F 01D7
        gbc.setState(0x1055, 0xf575, 0xdc10, 0x126a, 0x9286, 0x9e99, 0x0, 0x0);
        gbc.writeMem(0x1055, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xf575, gbc.sp());
        EXPECT(0x1057, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1F 01D9
        gbc.setState(0xebbb, 0x9b5e, 0xc7d0, 0x4142, 0xb464, 0xba1f, 0x1, 0x1);
        gbc.writeMem(0xebbb, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x9b5e, gbc.sp());
        EXPECT(0xebbd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xebbb));
        EXPECT(0x1f, gbc.readMem(0xebbc));
        // CB 1F 01DA
        gbc.setState(0x9f12, 0xb8a5, 0xf730, 0x13a4, 0x6909, 0x87a7, 0x0, 0x0);
        gbc.writeMem(0x9f12, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xb8a5, gbc.sp());
        EXPECT(0x9f14, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f12));
        EXPECT(0x1f, gbc.readMem(0x9f13));
        // CB 1F 01DB
        gbc.setState(0x1e10, 0x54eb, 0xb60, 0x9c42, 0xee7d, 0xd382, 0x1, 0x1);
        gbc.writeMem(0x1e10, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x54eb, gbc.sp());
        EXPECT(0x1e12, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 01DC
        gbc.setState(0x5a0a, 0x69ff, 0x1d70, 0x2bd5, 0x91b, 0x4c15, 0x0, 0x0);
        gbc.writeMem(0x5a0a, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x69ff, gbc.sp());
        EXPECT(0x5a0c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 01DD
        gbc.setState(0x7b6b, 0x8eb9, 0xad50, 0x7e22, 0xcb7f, 0x41b5, 0x1, 0x0);
        gbc.writeMem(0x7b6b, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x8eb9, gbc.sp());
        EXPECT(0x7b6d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 01DE
        gbc.setState(0x67a3, 0x5571, 0x9dd0, 0xa6dc, 0x7b3f, 0x9356, 0x0, 0x0);
        gbc.writeMem(0x67a3, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x5571, gbc.sp());
        EXPECT(0x67a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 01DF
        gbc.setState(0xed48, 0xa572, 0x41b0, 0x9921, 0x1d1d, 0x2c4c, 0x0, 0x1);
        gbc.writeMem(0xed48, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xa572, gbc.sp());
        EXPECT(0xed4a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed48));
        EXPECT(0x1f, gbc.readMem(0xed49));
        // CB 1F 01E1
        gbc.setState(0x1546, 0x7ab7, 0x85e0, 0x6127, 0xd31c, 0xa382, 0x1, 0x0);
        gbc.writeMem(0x1546, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x7ab7, gbc.sp());
        EXPECT(0x1548, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 01E2
        gbc.setState(0x2d18, 0xea61, 0x2550, 0x519a, 0xa79, 0x7624, 0x1, 0x0);
        gbc.writeMem(0x2d18, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xea61, gbc.sp());
        EXPECT(0x2d1a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 01E3
        gbc.setState(0x94bc, 0x2355, 0x4030, 0xad66, 0x98c6, 0x164c, 0x0, 0x1);
        gbc.writeMem(0x94bc, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x2355, gbc.sp());
        EXPECT(0x94be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x94bc));
        EXPECT(0x1f, gbc.readMem(0x94bd));
        // CB 1F 01E4
        gbc.setState(0xdc1a, 0xca7e, 0xe7b0, 0x3abb, 0x9690, 0xe170, 0x1, 0x1);
        gbc.writeMem(0xdc1a, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xca7e, gbc.sp());
        EXPECT(0xdc1c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc1a));
        EXPECT(0x1f, gbc.readMem(0xdc1b));
        // CB 1F 01E5
        gbc.setState(0x1e22, 0x98bf, 0xa290, 0xce45, 0xe78d, 0xc4b7, 0x0, 0x1);
        gbc.writeMem(0x1e22, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x98bf, gbc.sp());
        EXPECT(0x1e24, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1F 01E6
        gbc.setState(0x5ed, 0x4697, 0xb700, 0x95c4, 0x3709, 0xa946, 0x1, 0x1);
        gbc.writeMem(0x5ed, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x4697, gbc.sp());
        EXPECT(0x5ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 01E7
        gbc.setState(0x1035, 0x7f08, 0xfac0, 0xe3e9, 0xd7fc, 0x80ff, 0x0, 0x1);
        gbc.writeMem(0x1035, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x7f08, gbc.sp());
        EXPECT(0x1037, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1F 01E8
        gbc.setState(0x2b00, 0x6479, 0xcfb0, 0x74da, 0x4ee0, 0x9463, 0x1, 0x0);
        gbc.writeMem(0x2b00, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x6479, gbc.sp());
        EXPECT(0x2b02, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 01E9
        gbc.setState(0x60ea, 0x2361, 0x5660, 0xbd6a, 0x1e40, 0x7ade, 0x0, 0x1);
        gbc.writeMem(0x60ea, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x2361, gbc.sp());
        EXPECT(0x60ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1F 01EA
        gbc.setState(0xaddd, 0x785b, 0x90b0, 0x58c8, 0xc1e8, 0x6f48, 0x0, 0x1);
        gbc.writeMem(0xaddd, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x785b, gbc.sp());
        EXPECT(0xaddf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaddd));
        EXPECT(0x1f, gbc.readMem(0xadde));
        // CB 1F 01EB
        gbc.setState(0xd5ee, 0x53b4, 0xfd20, 0x6f33, 0x3661, 0x8090, 0x1, 0x0);
        gbc.writeMem(0xd5ee, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x53b4, gbc.sp());
        EXPECT(0xd5f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd5ee));
        EXPECT(0x1f, gbc.readMem(0xd5ef));
        // CB 1F 01EC
        gbc.setState(0x2e83, 0x6d01, 0xd740, 0x48cd, 0x19f2, 0x9b9f, 0x0, 0x0);
        gbc.writeMem(0x2e83, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x6d01, gbc.sp());
        EXPECT(0x2e85, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 01ED
        gbc.setState(0x383, 0xdda2, 0xc2c0, 0x1072, 0x406d, 0xf1af, 0x0, 0x0);
        gbc.writeMem(0x383, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xdda2, gbc.sp());
        EXPECT(0x385, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1F 01EE
        gbc.setState(0xb5b8, 0xbd5d, 0x4320, 0xd6c0, 0xac90, 0xef6d, 0x0, 0x0);
        gbc.writeMem(0xb5b8, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xbd5d, gbc.sp());
        EXPECT(0xb5ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb5b8));
        EXPECT(0x1f, gbc.readMem(0xb5b9));
        // CB 1F 01EF
        gbc.setState(0x5ba4, 0xca3c, 0x1200, 0xef3, 0x67db, 0x582c, 0x0, 0x0);
        gbc.writeMem(0x5ba4, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xca3c, gbc.sp());
        EXPECT(0x5ba6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1F 01F0
        gbc.setState(0xa487, 0xa5fc, 0x84b0, 0xff77, 0xc895, 0x521e, 0x0, 0x1);
        gbc.writeMem(0xa487, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xa5fc, gbc.sp());
        EXPECT(0xa489, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa487));
        EXPECT(0x1f, gbc.readMem(0xa488));
        // CB 1F 01F1
        gbc.setState(0xb24a, 0x1c6d, 0xc00, 0x764d, 0xa0d0, 0xb8cf, 0x1, 0x1);
        gbc.writeMem(0xb24a, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x1c6d, gbc.sp());
        EXPECT(0xb24c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb24a));
        EXPECT(0x1f, gbc.readMem(0xb24b));
        // CB 1F 01F2
        gbc.setState(0x997b, 0xfb93, 0x2c80, 0xe8d7, 0xe3fe, 0x20a1, 0x0, 0x1);
        gbc.writeMem(0x997b, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xfb93, gbc.sp());
        EXPECT(0x997d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x997b));
        EXPECT(0x1f, gbc.readMem(0x997c));
        // CB 1F 01F3
        gbc.setState(0x4a0a, 0xc53b, 0x5410, 0x78c3, 0xa9b1, 0x2787, 0x1, 0x1);
        gbc.writeMem(0x4a0a, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xc53b, gbc.sp());
        EXPECT(0x4a0c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1F 01F4
        gbc.setState(0xd3ee, 0x683c, 0x14c0, 0xbdf3, 0x9394, 0x4082, 0x0, 0x0);
        gbc.writeMem(0xd3ee, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x683c, gbc.sp());
        EXPECT(0xd3f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd3ee));
        EXPECT(0x1f, gbc.readMem(0xd3ef));
        // CB 1F 01F5
        gbc.setState(0x284b, 0xba4f, 0x8b80, 0x65eb, 0xf929, 0x399c, 0x0, 0x1);
        gbc.writeMem(0x284b, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xba4f, gbc.sp());
        EXPECT(0x284d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 01F6
        gbc.setState(0x8b17, 0xbbed, 0x11f0, 0x7244, 0x2fa, 0xc7d0, 0x0, 0x1);
        gbc.writeMem(0x8b17, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xbbed, gbc.sp());
        EXPECT(0x8b19, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b17));
        EXPECT(0x1f, gbc.readMem(0x8b18));
        // CB 1F 01F7
        gbc.setState(0x3c0a, 0x52fb, 0x1a90, 0x5048, 0xa5b, 0x2a65, 0x0, 0x0);
        gbc.writeMem(0x3c0a, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x52fb, gbc.sp());
        EXPECT(0x3c0c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1F 01F8
        gbc.setState(0xb846, 0x2bf5, 0xd5d0, 0x379b, 0x4aae, 0xe4d6, 0x0, 0x1);
        gbc.writeMem(0xb846, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x2bf5, gbc.sp());
        EXPECT(0xb848, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb846));
        EXPECT(0x1f, gbc.readMem(0xb847));
        // CB 1F 01F9
        gbc.setState(0xe236, 0xf7a3, 0x4230, 0x87c3, 0x39c0, 0x4174, 0x1, 0x1);
        gbc.writeMem(0xe236, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xf7a3, gbc.sp());
        EXPECT(0xe238, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe236));
        EXPECT(0x1f, gbc.readMem(0xe237));
        // CB 1F 01FA
        gbc.setState(0x437a, 0x3f2f, 0xbd30, 0x5246, 0x5898, 0xaa86, 0x0, 0x1);
        gbc.writeMem(0x437a, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x3f2f, gbc.sp());
        EXPECT(0x437c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 01FB
        gbc.setState(0x55b3, 0x3621, 0x4e90, 0xe6c6, 0x25cc, 0xc42b, 0x1, 0x1);
        gbc.writeMem(0x55b3, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x3621, gbc.sp());
        EXPECT(0x55b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1F 01FD
        gbc.setState(0xe2dc, 0xfabe, 0xc860, 0xd65a, 0x6abb, 0x4394, 0x0, 0x0);
        gbc.writeMem(0xe2dc, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xfabe, gbc.sp());
        EXPECT(0xe2de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe2dc));
        EXPECT(0x1f, gbc.readMem(0xe2dd));
        // CB 1F 01FE
        gbc.setState(0x39a, 0x4152, 0x200, 0x8b40, 0xf48e, 0x885d, 0x0, 0x0);
        gbc.writeMem(0x39a, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x4152, gbc.sp());
        EXPECT(0x39c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1F 01FF
        gbc.setState(0x4d4d, 0x5d61, 0x9c50, 0x12e4, 0x340e, 0x508c, 0x0, 0x0);
        gbc.writeMem(0x4d4d, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x5d61, gbc.sp());
        EXPECT(0x4d4f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1F 0200
        gbc.setState(0xd3c7, 0x4c69, 0x7e10, 0x9c7, 0x8f80, 0x7d91, 0x0, 0x1);
        gbc.writeMem(0xd3c7, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x4c69, gbc.sp());
        EXPECT(0xd3c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd3c7));
        EXPECT(0x1f, gbc.readMem(0xd3c8));
        // CB 1F 0201
        gbc.setState(0xab19, 0x49bf, 0xd4e0, 0xbe0e, 0xb471, 0x1d87, 0x1, 0x0);
        gbc.writeMem(0xab19, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x49bf, gbc.sp());
        EXPECT(0xab1b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab19));
        EXPECT(0x1f, gbc.readMem(0xab1a));
        // CB 1F 0202
        gbc.setState(0xa10f, 0xd610, 0x44f0, 0x5419, 0xa87c, 0xa9b1, 0x0, 0x1);
        gbc.writeMem(0xa10f, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xd610, gbc.sp());
        EXPECT(0xa111, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa10f));
        EXPECT(0x1f, gbc.readMem(0xa110));
        // CB 1F 0204
        gbc.setState(0xa4ed, 0x9479, 0xc150, 0x6d10, 0x51d3, 0xa6ab, 0x1, 0x0);
        gbc.writeMem(0xa4ed, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x9479, gbc.sp());
        EXPECT(0xa4ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa4ed));
        EXPECT(0x1f, gbc.readMem(0xa4ee));
        // CB 1F 0205
        gbc.setState(0x7bb, 0x8fbd, 0x5580, 0x60db, 0x62df, 0x2158, 0x0, 0x1);
        gbc.writeMem(0x7bb, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x8fbd, gbc.sp());
        EXPECT(0x7bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 0206
        gbc.setState(0x8de7, 0xf081, 0x4e0, 0x71e3, 0xcd35, 0xfcde, 0x0, 0x0);
        gbc.writeMem(0x8de7, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xf081, gbc.sp());
        EXPECT(0x8de9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8de7));
        EXPECT(0x1f, gbc.readMem(0x8de8));
        // CB 1F 0207
        gbc.setState(0x4572, 0x6b74, 0xc750, 0x338c, 0xe5e2, 0xd8a3, 0x0, 0x0);
        gbc.writeMem(0x4572, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x6b74, gbc.sp());
        EXPECT(0x4574, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 0208
        gbc.setState(0xe75e, 0xcb89, 0xa890, 0x359f, 0x237b, 0x60be, 0x0, 0x0);
        gbc.writeMem(0xe75e, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xcb89, gbc.sp());
        EXPECT(0xe760, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe75e));
        EXPECT(0x1f, gbc.readMem(0xe75f));
        // CB 1F 020A
        gbc.setState(0x5b19, 0xcff4, 0x39f0, 0x973e, 0xe04, 0xc694, 0x0, 0x1);
        gbc.writeMem(0x5b19, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xcff4, gbc.sp());
        EXPECT(0x5b1b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 020B
        gbc.setState(0x19d, 0x50f7, 0xb7b0, 0xfe08, 0x1e5c, 0x28db, 0x1, 0x1);
        gbc.writeMem(0x19d, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x50f7, gbc.sp());
        EXPECT(0x19f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 020C
        gbc.setState(0xc46d, 0xbf67, 0xa8d0, 0x413d, 0x6480, 0x23dc, 0x1, 0x0);
        gbc.writeMem(0xc46d, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xbf67, gbc.sp());
        EXPECT(0xc46f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc46d));
        EXPECT(0x1f, gbc.readMem(0xc46e));
        // CB 1F 020E
        gbc.setState(0xdf8a, 0x5e6e, 0xed30, 0x50a7, 0x2308, 0x9311, 0x1, 0x1);
        gbc.writeMem(0xdf8a, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x5e6e, gbc.sp());
        EXPECT(0xdf8c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf8a));
        EXPECT(0x1f, gbc.readMem(0xdf8b));
        // CB 1F 020F
        gbc.setState(0x6983, 0xaec9, 0x3a40, 0x91ee, 0x64e4, 0x89d7, 0x1, 0x1);
        gbc.writeMem(0x6983, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xaec9, gbc.sp());
        EXPECT(0x6985, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1F 0211
        gbc.setState(0xcd51, 0xc214, 0x7e60, 0x46a7, 0xdd15, 0xde7d, 0x1, 0x0);
        gbc.writeMem(0xcd51, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xc214, gbc.sp());
        EXPECT(0xcd53, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd51));
        EXPECT(0x1f, gbc.readMem(0xcd52));
        // CB 1F 0212
        gbc.setState(0x40c4, 0x35ca, 0x9080, 0x144f, 0x6a5, 0x7f56, 0x1, 0x1);
        gbc.writeMem(0x40c4, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x35ca, gbc.sp());
        EXPECT(0x40c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1F 0213
        gbc.setState(0x41ef, 0xbf34, 0x5970, 0x4b6b, 0xc2a9, 0xbaed, 0x0, 0x1);
        gbc.writeMem(0x41ef, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xbf34, gbc.sp());
        EXPECT(0x41f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 0214
        gbc.setState(0xe79f, 0x295e, 0x8320, 0x27a6, 0xef3f, 0xdd44, 0x0, 0x1);
        gbc.writeMem(0xe79f, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x295e, gbc.sp());
        EXPECT(0xe7a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe79f));
        EXPECT(0x1f, gbc.readMem(0xe7a0));
        // CB 1F 0215
        gbc.setState(0xe17a, 0x926f, 0x1a90, 0x7ea0, 0x6ff5, 0x3f4c, 0x1, 0x1);
        gbc.writeMem(0xe17a, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x926f, gbc.sp());
        EXPECT(0xe17c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe17a));
        EXPECT(0x1f, gbc.readMem(0xe17b));
        // CB 1F 0216
        gbc.setState(0x74e8, 0xd6eb, 0x420, 0xc163, 0xced1, 0xeaa6, 0x0, 0x0);
        gbc.writeMem(0x74e8, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xd6eb, gbc.sp());
        EXPECT(0x74ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1F 0217
        gbc.setState(0x6ccd, 0xee24, 0xc6b0, 0x2e58, 0xd73, 0xfd25, 0x0, 0x0);
        gbc.writeMem(0x6ccd, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xee24, gbc.sp());
        EXPECT(0x6ccf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1F 0218
        gbc.setState(0x1915, 0x14fa, 0x99e0, 0x1b03, 0x802d, 0xfa00, 0x0, 0x1);
        gbc.writeMem(0x1915, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x14fa, gbc.sp());
        EXPECT(0x1917, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 0219
        gbc.setState(0x345b, 0xd9f, 0x5ff0, 0x6e71, 0x804, 0x9948, 0x0, 0x0);
        gbc.writeMem(0x345b, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xd9f, gbc.sp());
        EXPECT(0x345d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 021A
        gbc.setState(0x4815, 0x8b4b, 0xbe50, 0x334c, 0x4a00, 0xb0d, 0x0, 0x0);
        gbc.writeMem(0x4815, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x8b4b, gbc.sp());
        EXPECT(0x4817, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1F 021B
        gbc.setState(0x2e5d, 0x898f, 0xe360, 0x246e, 0x760, 0xbc31, 0x1, 0x1);
        gbc.writeMem(0x2e5d, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x898f, gbc.sp());
        EXPECT(0x2e5f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 021C
        gbc.setState(0xe114, 0xaefb, 0x5b70, 0x77ad, 0x7af0, 0xed4d, 0x0, 0x0);
        gbc.writeMem(0xe114, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xaefb, gbc.sp());
        EXPECT(0xe116, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe114));
        EXPECT(0x1f, gbc.readMem(0xe115));
        // CB 1F 021D
        gbc.setState(0x13ce, 0x15fc, 0xff70, 0xbeac, 0x4426, 0xd16b, 0x1, 0x0);
        gbc.writeMem(0x13ce, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x15fc, gbc.sp());
        EXPECT(0x13d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 021E
        gbc.setState(0x7367, 0x13e9, 0x1d00, 0x2e96, 0xdd62, 0x3f3, 0x1, 0x1);
        gbc.writeMem(0x7367, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x13e9, gbc.sp());
        EXPECT(0x7369, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 021F
        gbc.setState(0x1516, 0xb231, 0x43e0, 0xc508, 0x8212, 0xa0ce, 0x1, 0x0);
        gbc.writeMem(0x1516, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xb231, gbc.sp());
        EXPECT(0x1518, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 0220
        gbc.setState(0xbf47, 0x32eb, 0xa4c0, 0xe8fd, 0x22db, 0x9d53, 0x0, 0x0);
        gbc.writeMem(0xbf47, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x32eb, gbc.sp());
        EXPECT(0xbf49, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf47));
        EXPECT(0x1f, gbc.readMem(0xbf48));
        // CB 1F 0221
        gbc.setState(0x2c0f, 0xef8d, 0x25a0, 0xe5a9, 0xfc7f, 0x28d2, 0x0, 0x0);
        gbc.writeMem(0x2c0f, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xef8d, gbc.sp());
        EXPECT(0x2c11, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 0222
        gbc.setState(0x22fe, 0x1c38, 0x5780, 0x1096, 0xc989, 0x1877, 0x0, 0x1);
        gbc.writeMem(0x22fe, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x1c38, gbc.sp());
        EXPECT(0x2300, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 0223
        gbc.setState(0xda40, 0x2df5, 0x74a0, 0xd041, 0x255b, 0xf6c4, 0x0, 0x0);
        gbc.writeMem(0xda40, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x2df5, gbc.sp());
        EXPECT(0xda42, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda40));
        EXPECT(0x1f, gbc.readMem(0xda41));
        // CB 1F 0224
        gbc.setState(0xc473, 0xd305, 0x4da0, 0xdf9f, 0xf862, 0x2f7d, 0x0, 0x0);
        gbc.writeMem(0xc473, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xd305, gbc.sp());
        EXPECT(0xc475, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc473));
        EXPECT(0x1f, gbc.readMem(0xc474));
        // CB 1F 0225
        gbc.setState(0x7c78, 0x9a91, 0xa680, 0x5b54, 0x6436, 0xf847, 0x0, 0x0);
        gbc.writeMem(0x7c78, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x9a91, gbc.sp());
        EXPECT(0x7c7a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1F 0226
        gbc.setState(0xb137, 0x5c2b, 0x9690, 0xb614, 0xb1a2, 0x9ce9, 0x0, 0x1);
        gbc.writeMem(0xb137, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x5c2b, gbc.sp());
        EXPECT(0xb139, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb137));
        EXPECT(0x1f, gbc.readMem(0xb138));
        // CB 1F 0227
        gbc.setState(0x355, 0x4c37, 0x4030, 0x6888, 0x4ad1, 0xbe5f, 0x1, 0x1);
        gbc.writeMem(0x355, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x4c37, gbc.sp());
        EXPECT(0x357, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1F 0228
        gbc.setState(0x40e7, 0xd70e, 0x9290, 0xc20b, 0xe4d6, 0x9e5b, 0x1, 0x0);
        gbc.writeMem(0x40e7, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xd70e, gbc.sp());
        EXPECT(0x40e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1F 0229
        gbc.setState(0xed7b, 0xc658, 0x9b60, 0x75ca, 0xda44, 0x5b99, 0x0, 0x1);
        gbc.writeMem(0xed7b, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xc658, gbc.sp());
        EXPECT(0xed7d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed7b));
        EXPECT(0x1f, gbc.readMem(0xed7c));
        // CB 1F 022A
        gbc.setState(0x8e21, 0xe922, 0xaf50, 0x2932, 0x3a7a, 0xcfa0, 0x0, 0x1);
        gbc.writeMem(0x8e21, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xe922, gbc.sp());
        EXPECT(0x8e23, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e21));
        EXPECT(0x1f, gbc.readMem(0x8e22));
        // CB 1F 022B
        gbc.setState(0xedf1, 0x6b5e, 0x78e0, 0x11ea, 0x54e2, 0x886f, 0x1, 0x0);
        gbc.writeMem(0xedf1, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x6b5e, gbc.sp());
        EXPECT(0xedf3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xedf1));
        EXPECT(0x1f, gbc.readMem(0xedf2));
        // CB 1F 022C
        gbc.setState(0x838e, 0x3e4d, 0xab00, 0x52da, 0xf326, 0x1e81, 0x0, 0x1);
        gbc.writeMem(0x838e, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x3e4d, gbc.sp());
        EXPECT(0x8390, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x838e));
        EXPECT(0x1f, gbc.readMem(0x838f));
        // CB 1F 022D
        gbc.setState(0xb1b3, 0xdf0a, 0x48e0, 0xf7f9, 0x8067, 0xff5, 0x0, 0x0);
        gbc.writeMem(0xb1b3, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xdf0a, gbc.sp());
        EXPECT(0xb1b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb1b3));
        EXPECT(0x1f, gbc.readMem(0xb1b4));
        // CB 1F 022E
        gbc.setState(0xc858, 0x98fc, 0x8c30, 0x11e6, 0x901b, 0x296e, 0x1, 0x1);
        gbc.writeMem(0xc858, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x98fc, gbc.sp());
        EXPECT(0xc85a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc858));
        EXPECT(0x1f, gbc.readMem(0xc859));
        // CB 1F 022F
        gbc.setState(0xc662, 0x9a34, 0xa160, 0xf444, 0xe29f, 0xb343, 0x1, 0x0);
        gbc.writeMem(0xc662, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x9a34, gbc.sp());
        EXPECT(0xc664, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc662));
        EXPECT(0x1f, gbc.readMem(0xc663));
        // CB 1F 0230
        gbc.setState(0xa688, 0x1b45, 0x78e0, 0x3c2e, 0xdcb9, 0x257d, 0x1, 0x1);
        gbc.writeMem(0xa688, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x1b45, gbc.sp());
        EXPECT(0xa68a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa688));
        EXPECT(0x1f, gbc.readMem(0xa689));
        // CB 1F 0231
        gbc.setState(0x9cf6, 0x7f1d, 0x76e0, 0xc1bf, 0xe8c9, 0x34c9, 0x0, 0x1);
        gbc.writeMem(0x9cf6, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x7f1d, gbc.sp());
        EXPECT(0x9cf8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9cf6));
        EXPECT(0x1f, gbc.readMem(0x9cf7));
        // CB 1F 0232
        gbc.setState(0x3737, 0xa1b5, 0x5d40, 0xe93b, 0xf651, 0xa90c, 0x0, 0x0);
        gbc.writeMem(0x3737, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xa1b5, gbc.sp());
        EXPECT(0x3739, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 0234
        gbc.setState(0xb580, 0x2088, 0xdc30, 0xd48, 0x4fca, 0xc86e, 0x0, 0x0);
        gbc.writeMem(0xb580, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x2088, gbc.sp());
        EXPECT(0xb582, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb580));
        EXPECT(0x1f, gbc.readMem(0xb581));
        // CB 1F 0235
        gbc.setState(0x88e2, 0x5f59, 0xbb40, 0x3555, 0x5885, 0xfa2a, 0x0, 0x1);
        gbc.writeMem(0x88e2, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x5f59, gbc.sp());
        EXPECT(0x88e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x88e2));
        EXPECT(0x1f, gbc.readMem(0x88e3));
        // CB 1F 0236
        gbc.setState(0xa638, 0x926e, 0xc7b0, 0xf6dc, 0x3d83, 0x2709, 0x1, 0x0);
        gbc.writeMem(0xa638, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x926e, gbc.sp());
        EXPECT(0xa63a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa638));
        EXPECT(0x1f, gbc.readMem(0xa639));
        // CB 1F 0237
        gbc.setState(0xb475, 0xb18b, 0x7130, 0x6e17, 0x6991, 0xa852, 0x1, 0x0);
        gbc.writeMem(0xb475, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xb18b, gbc.sp());
        EXPECT(0xb477, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb475));
        EXPECT(0x1f, gbc.readMem(0xb476));
        // CB 1F 0238
        gbc.setState(0x6494, 0x1db0, 0x8f20, 0x412a, 0xdf14, 0xdbdf, 0x1, 0x0);
        gbc.writeMem(0x6494, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x1db0, gbc.sp());
        EXPECT(0x6496, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 0239
        gbc.setState(0x7a3e, 0x213a, 0x76b0, 0x7a8b, 0xae0d, 0xe92, 0x1, 0x1);
        gbc.writeMem(0x7a3e, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x213a, gbc.sp());
        EXPECT(0x7a40, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1F 023A
        gbc.setState(0xe41b, 0xb1ed, 0x40f0, 0xd7d3, 0xf3cb, 0x9cf6, 0x0, 0x1);
        gbc.writeMem(0xe41b, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xb1ed, gbc.sp());
        EXPECT(0xe41d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe41b));
        EXPECT(0x1f, gbc.readMem(0xe41c));
        // CB 1F 023B
        gbc.setState(0xd800, 0x9773, 0x7d20, 0xe923, 0x9757, 0xc8d4, 0x0, 0x0);
        gbc.writeMem(0xd800, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x9773, gbc.sp());
        EXPECT(0xd802, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd800));
        EXPECT(0x1f, gbc.readMem(0xd801));
        // CB 1F 023C
        gbc.setState(0xa36c, 0x830, 0x9b00, 0x83a7, 0x2baf, 0x4fe8, 0x1, 0x0);
        gbc.writeMem(0xa36c, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x830, gbc.sp());
        EXPECT(0xa36e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa36c));
        EXPECT(0x1f, gbc.readMem(0xa36d));
        // CB 1F 023D
        gbc.setState(0xad3d, 0xd3ac, 0xfb40, 0xd8a, 0xd840, 0x7d1a, 0x0, 0x1);
        gbc.writeMem(0xad3d, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xd3ac, gbc.sp());
        EXPECT(0xad3f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad3d));
        EXPECT(0x1f, gbc.readMem(0xad3e));
        // CB 1F 023E
        gbc.setState(0x207a, 0x602f, 0xff80, 0x8645, 0x6566, 0xc43, 0x1, 0x0);
        gbc.writeMem(0x207a, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x602f, gbc.sp());
        EXPECT(0x207c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 023F
        gbc.setState(0x7cdc, 0x2e66, 0xef90, 0xb84, 0xc8a8, 0x1e2e, 0x0, 0x1);
        gbc.writeMem(0x7cdc, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x2e66, gbc.sp());
        EXPECT(0x7cde, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 0240
        gbc.setState(0x97ed, 0xf975, 0xec10, 0xdd23, 0x6c3e, 0xdc57, 0x1, 0x0);
        gbc.writeMem(0x97ed, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xf975, gbc.sp());
        EXPECT(0x97ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x97ed));
        EXPECT(0x1f, gbc.readMem(0x97ee));
        // CB 1F 0241
        gbc.setState(0x7dee, 0x3633, 0x8ee0, 0x2ac2, 0x2f3c, 0x6ef6, 0x0, 0x0);
        gbc.writeMem(0x7dee, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x3633, gbc.sp());
        EXPECT(0x7df0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1F 0242
        gbc.setState(0x419e, 0x71d2, 0x1700, 0xb22d, 0xfb74, 0x1f5f, 0x1, 0x0);
        gbc.writeMem(0x419e, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x71d2, gbc.sp());
        EXPECT(0x41a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 0243
        gbc.setState(0x4969, 0x872d, 0x1e30, 0xa407, 0xee82, 0x3ba1, 0x0, 0x0);
        gbc.writeMem(0x4969, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x872d, gbc.sp());
        EXPECT(0x496b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1F 0244
        gbc.setState(0x907, 0x75c1, 0x2a40, 0xd730, 0x3723, 0x39b6, 0x1, 0x0);
        gbc.writeMem(0x907, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x75c1, gbc.sp());
        EXPECT(0x909, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1F 0245
        gbc.setState(0x2b2d, 0xc5a6, 0x57f0, 0xd5d1, 0x1dc0, 0xca32, 0x0, 0x1);
        gbc.writeMem(0x2b2d, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xc5a6, gbc.sp());
        EXPECT(0x2b2f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 0246
        gbc.setState(0x81a, 0xe536, 0x3010, 0xcb28, 0x4c2d, 0xf15c, 0x1, 0x1);
        gbc.writeMem(0x81a, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xe536, gbc.sp());
        EXPECT(0x81c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1F 0247
        gbc.setState(0x4c52, 0x2a45, 0x950, 0x6f40, 0xf62d, 0xce0e, 0x0, 0x1);
        gbc.writeMem(0x4c52, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x2a45, gbc.sp());
        EXPECT(0x4c54, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 0248
        gbc.setState(0xe9a3, 0x9cfe, 0x8ad0, 0x78b1, 0xfff5, 0x3fac, 0x0, 0x1);
        gbc.writeMem(0xe9a3, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x9cfe, gbc.sp());
        EXPECT(0xe9a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe9a3));
        EXPECT(0x1f, gbc.readMem(0xe9a4));
        // CB 1F 0249
        gbc.setState(0xbae5, 0x78b5, 0x8ef0, 0x5d89, 0x5414, 0x9b07, 0x1, 0x1);
        gbc.writeMem(0xbae5, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x78b5, gbc.sp());
        EXPECT(0xbae7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbae5));
        EXPECT(0x1f, gbc.readMem(0xbae6));
        // CB 1F 024A
        gbc.setState(0x232e, 0x4d52, 0xc9f0, 0x87b2, 0x7a45, 0x28a8, 0x0, 0x0);
        gbc.writeMem(0x232e, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x4d52, gbc.sp());
        EXPECT(0x2330, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 024B
        gbc.setState(0xd4d5, 0x646, 0x1eb0, 0x6ded, 0x933b, 0xdc88, 0x1, 0x1);
        gbc.writeMem(0xd4d5, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x646, gbc.sp());
        EXPECT(0xd4d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd4d5));
        EXPECT(0x1f, gbc.readMem(0xd4d6));
        // CB 1F 024C
        gbc.setState(0x82ef, 0x6677, 0x2ab0, 0xb23d, 0xc22b, 0xd5db, 0x0, 0x1);
        gbc.writeMem(0x82ef, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x6677, gbc.sp());
        EXPECT(0x82f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x82ef));
        EXPECT(0x1f, gbc.readMem(0x82f0));
        // CB 1F 024E
        gbc.setState(0xc9fd, 0x77f1, 0xc350, 0x41b3, 0x1186, 0xfe43, 0x1, 0x0);
        gbc.writeMem(0xc9fd, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x77f1, gbc.sp());
        EXPECT(0xc9ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc9fd));
        EXPECT(0x1f, gbc.readMem(0xc9fe));
        // CB 1F 024F
        gbc.setState(0x564f, 0x27b8, 0x84e0, 0x2150, 0xbb2b, 0xf146, 0x1, 0x0);
        gbc.writeMem(0x564f, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x27b8, gbc.sp());
        EXPECT(0x5651, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1F 0250
        gbc.setState(0xa1a0, 0xe081, 0xbc50, 0xdc09, 0x9d85, 0xe3ce, 0x0, 0x1);
        gbc.writeMem(0xa1a0, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xe081, gbc.sp());
        EXPECT(0xa1a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa1a0));
        EXPECT(0x1f, gbc.readMem(0xa1a1));
        // CB 1F 0251
        gbc.setState(0x40e1, 0x5247, 0x7630, 0xe97b, 0x4480, 0x5185, 0x0, 0x0);
        gbc.writeMem(0x40e1, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x5247, gbc.sp());
        EXPECT(0x40e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1F 0252
        gbc.setState(0xcf70, 0x2499, 0x4090, 0x16f2, 0xce80, 0xda7f, 0x1, 0x1);
        gbc.writeMem(0xcf70, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x2499, gbc.sp());
        EXPECT(0xcf72, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf70));
        EXPECT(0x1f, gbc.readMem(0xcf71));
        // CB 1F 0253
        gbc.setState(0xea05, 0xb2cf, 0xaa70, 0xd1f1, 0x80b5, 0xc5cc, 0x1, 0x1);
        gbc.writeMem(0xea05, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xb2cf, gbc.sp());
        EXPECT(0xea07, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea05));
        EXPECT(0x1f, gbc.readMem(0xea06));
        // CB 1F 0254
        gbc.setState(0xc453, 0x9564, 0x3940, 0x41f1, 0xf871, 0xfd19, 0x0, 0x1);
        gbc.writeMem(0xc453, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x9564, gbc.sp());
        EXPECT(0xc455, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc453));
        EXPECT(0x1f, gbc.readMem(0xc454));
        // CB 1F 0255
        gbc.setState(0x39e0, 0xc22b, 0x2f50, 0xca99, 0xb29, 0xec38, 0x1, 0x1);
        gbc.writeMem(0x39e0, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xc22b, gbc.sp());
        EXPECT(0x39e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 0256
        gbc.setState(0x5ca0, 0xc8a4, 0x65b0, 0x126, 0xb45a, 0x71de, 0x1, 0x1);
        gbc.writeMem(0x5ca0, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xc8a4, gbc.sp());
        EXPECT(0x5ca2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 0257
        gbc.setState(0xa452, 0xb841, 0xd540, 0x7758, 0xe317, 0x71f8, 0x0, 0x1);
        gbc.writeMem(0xa452, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xb841, gbc.sp());
        EXPECT(0xa454, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa452));
        EXPECT(0x1f, gbc.readMem(0xa453));
        // CB 1F 0258
        gbc.setState(0x69c2, 0x3286, 0xed30, 0x9c8f, 0xd906, 0x2a0, 0x1, 0x1);
        gbc.writeMem(0x69c2, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x3286, gbc.sp());
        EXPECT(0x69c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 0259
        gbc.setState(0x1f64, 0x8c4c, 0x78a0, 0xc317, 0xa5a4, 0xcac9, 0x0, 0x0);
        gbc.writeMem(0x1f64, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x8c4c, gbc.sp());
        EXPECT(0x1f66, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1F 025A
        gbc.setState(0x4132, 0xdd59, 0xd460, 0x2ad8, 0x34e, 0x4db1, 0x0, 0x1);
        gbc.writeMem(0x4132, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xdd59, gbc.sp());
        EXPECT(0x4134, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1F 025B
        gbc.setState(0x8aa8, 0x2379, 0xc770, 0xd63d, 0x687, 0xad97, 0x0, 0x0);
        gbc.writeMem(0x8aa8, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x2379, gbc.sp());
        EXPECT(0x8aaa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8aa8));
        EXPECT(0x1f, gbc.readMem(0x8aa9));
        // CB 1F 025C
        gbc.setState(0x1e45, 0xaea7, 0x9820, 0x49b3, 0xa16d, 0x6cf3, 0x1, 0x0);
        gbc.writeMem(0x1e45, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xaea7, gbc.sp());
        EXPECT(0x1e47, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1F 025D
        gbc.setState(0x334c, 0xf0df, 0xdee0, 0xf1fe, 0xdceb, 0x3f39, 0x0, 0x0);
        gbc.writeMem(0x334c, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xf0df, gbc.sp());
        EXPECT(0x334e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1F 025E
        gbc.setState(0x3c9a, 0xb5f, 0xeca0, 0x8f65, 0x1b70, 0x39a5, 0x0, 0x1);
        gbc.writeMem(0x3c9a, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xb5f, gbc.sp());
        EXPECT(0x3c9c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1F 025F
        gbc.setState(0x5efe, 0x2a95, 0x3520, 0xedd2, 0xb844, 0x3b81, 0x1, 0x1);
        gbc.writeMem(0x5efe, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x2a95, gbc.sp());
        EXPECT(0x5f00, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 0260
        gbc.setState(0x1e3, 0xe365, 0x27a0, 0x1ebf, 0x8c49, 0x7a57, 0x1, 0x1);
        gbc.writeMem(0x1e3, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xe365, gbc.sp());
        EXPECT(0x1e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 0261
        gbc.setState(0x4484, 0xf7fb, 0x9310, 0x2925, 0xf3d, 0x74a6, 0x1, 0x1);
        gbc.writeMem(0x4484, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xf7fb, gbc.sp());
        EXPECT(0x4486, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 0262
        gbc.setState(0x5349, 0x6522, 0xdae0, 0x3f7a, 0x37a8, 0xa9e1, 0x1, 0x1);
        gbc.writeMem(0x5349, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x6522, gbc.sp());
        EXPECT(0x534b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1F 0263
        gbc.setState(0xaa10, 0xb8ce, 0xc8a0, 0x526b, 0xef2c, 0x2cee, 0x0, 0x1);
        gbc.writeMem(0xaa10, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xb8ce, gbc.sp());
        EXPECT(0xaa12, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa10));
        EXPECT(0x1f, gbc.readMem(0xaa11));
        // CB 1F 0264
        gbc.setState(0xb40a, 0x1a73, 0x2dd0, 0x7933, 0xb906, 0xe9a2, 0x1, 0x0);
        gbc.writeMem(0xb40a, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x1a73, gbc.sp());
        EXPECT(0xb40c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb40a));
        EXPECT(0x1f, gbc.readMem(0xb40b));
        // CB 1F 0265
        gbc.setState(0x8f1b, 0x47d, 0x3df0, 0x27fc, 0x937e, 0x70fd, 0x0, 0x0);
        gbc.writeMem(0x8f1b, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x47d, gbc.sp());
        EXPECT(0x8f1d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f1b));
        EXPECT(0x1f, gbc.readMem(0x8f1c));
        // CB 1F 0266
        gbc.setState(0x183e, 0x7bbd, 0x3300, 0x4720, 0xb56a, 0xb9b0, 0x0, 0x1);
        gbc.writeMem(0x183e, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x7bbd, gbc.sp());
        EXPECT(0x1840, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 0267
        gbc.setState(0x1fd3, 0x82d5, 0x3e80, 0xa8b8, 0x96d9, 0xae69, 0x1, 0x0);
        gbc.writeMem(0x1fd3, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x82d5, gbc.sp());
        EXPECT(0x1fd5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1F 0268
        gbc.setState(0x4c54, 0x5ac0, 0x91d0, 0x40fc, 0x9de0, 0xd8d5, 0x1, 0x1);
        gbc.writeMem(0x4c54, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x5ac0, gbc.sp());
        EXPECT(0x4c56, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 0269
        gbc.setState(0xb8b3, 0xd2ba, 0xc40, 0x83d6, 0xdbf2, 0x6fc1, 0x0, 0x1);
        gbc.writeMem(0xb8b3, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xd2ba, gbc.sp());
        EXPECT(0xb8b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb8b3));
        EXPECT(0x1f, gbc.readMem(0xb8b4));
        // CB 1F 026A
        gbc.setState(0xa3d9, 0xfad6, 0xb460, 0x894a, 0xadc5, 0x225c, 0x1, 0x0);
        gbc.writeMem(0xa3d9, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xfad6, gbc.sp());
        EXPECT(0xa3db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa3d9));
        EXPECT(0x1f, gbc.readMem(0xa3da));
        // CB 1F 026B
        gbc.setState(0x33ef, 0x8e65, 0x69c0, 0x2e84, 0x1fa, 0x7700, 0x0, 0x1);
        gbc.writeMem(0x33ef, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x8e65, gbc.sp());
        EXPECT(0x33f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 026D
        gbc.setState(0xa619, 0x92df, 0x2bf0, 0x140a, 0x4e31, 0x4b06, 0x1, 0x0);
        gbc.writeMem(0xa619, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x92df, gbc.sp());
        EXPECT(0xa61b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa619));
        EXPECT(0x1f, gbc.readMem(0xa61a));
        // CB 1F 026E
        gbc.setState(0xd950, 0x1b72, 0x8190, 0xf4a9, 0xa75d, 0x97ae, 0x0, 0x0);
        gbc.writeMem(0xd950, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x1b72, gbc.sp());
        EXPECT(0xd952, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd950));
        EXPECT(0x1f, gbc.readMem(0xd951));
        // CB 1F 026F
        gbc.setState(0x9185, 0xc01, 0x5860, 0xadb3, 0x52f7, 0xa7f6, 0x0, 0x0);
        gbc.writeMem(0x9185, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xc01, gbc.sp());
        EXPECT(0x9187, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9185));
        EXPECT(0x1f, gbc.readMem(0x9186));
        // CB 1F 0270
        gbc.setState(0x43d3, 0x6358, 0x54a0, 0xd38a, 0xa56e, 0xe174, 0x1, 0x1);
        gbc.writeMem(0x43d3, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x6358, gbc.sp());
        EXPECT(0x43d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1F 0271
        gbc.setState(0x3c81, 0x4645, 0x5750, 0x15e3, 0xeeff, 0xac17, 0x0, 0x1);
        gbc.writeMem(0x3c81, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x4645, gbc.sp());
        EXPECT(0x3c83, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 0272
        gbc.setState(0xc6c4, 0x301, 0x5e30, 0xeb16, 0x3330, 0x7152, 0x0, 0x1);
        gbc.writeMem(0xc6c4, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x301, gbc.sp());
        EXPECT(0xc6c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc6c4));
        EXPECT(0x1f, gbc.readMem(0xc6c5));
        // CB 1F 0273
        gbc.setState(0x5d04, 0x997e, 0x3450, 0x17a3, 0xedaa, 0x6beb, 0x0, 0x0);
        gbc.writeMem(0x5d04, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x997e, gbc.sp());
        EXPECT(0x5d06, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1F 0274
        gbc.setState(0x311c, 0x10b9, 0x9720, 0x6b14, 0xc3bc, 0xf3ec, 0x0, 0x1);
        gbc.writeMem(0x311c, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x10b9, gbc.sp());
        EXPECT(0x311e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 0275
        gbc.setState(0x59f2, 0x1f87, 0x8070, 0xd1b0, 0xb58a, 0xac84, 0x1, 0x1);
        gbc.writeMem(0x59f2, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x1f87, gbc.sp());
        EXPECT(0x59f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1F 0276
        gbc.setState(0x8a09, 0xecc9, 0xca60, 0xef6a, 0xcdf0, 0xfb37, 0x1, 0x1);
        gbc.writeMem(0x8a09, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xecc9, gbc.sp());
        EXPECT(0x8a0b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a09));
        EXPECT(0x1f, gbc.readMem(0x8a0a));
        // CB 1F 0277
        gbc.setState(0xc746, 0x91d9, 0xbdd0, 0x3a54, 0x33ec, 0x179f, 0x0, 0x1);
        gbc.writeMem(0xc746, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x91d9, gbc.sp());
        EXPECT(0xc748, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc746));
        EXPECT(0x1f, gbc.readMem(0xc747));
        // CB 1F 0278
        gbc.setState(0x5b18, 0x2bc1, 0xc270, 0xb54, 0x4404, 0x6c31, 0x0, 0x0);
        gbc.writeMem(0x5b18, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x2bc1, gbc.sp());
        EXPECT(0x5b1a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1F 0279
        gbc.setState(0xe8b4, 0xcbda, 0x5a40, 0x69c2, 0x8fb, 0x360f, 0x0, 0x1);
        gbc.writeMem(0xe8b4, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xcbda, gbc.sp());
        EXPECT(0xe8b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe8b4));
        EXPECT(0x1f, gbc.readMem(0xe8b5));
        // CB 1F 027A
        gbc.setState(0x1632, 0x4cc3, 0xe910, 0x9ca6, 0x91f8, 0x4aea, 0x0, 0x0);
        gbc.writeMem(0x1632, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x4cc3, gbc.sp());
        EXPECT(0x1634, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 027B
        gbc.setState(0x62a3, 0xefff, 0x5c90, 0xa14c, 0x7c38, 0x5474, 0x0, 0x0);
        gbc.writeMem(0x62a3, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xefff, gbc.sp());
        EXPECT(0x62a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1F 027C
        gbc.setState(0xc567, 0xbe9f, 0xf030, 0xc716, 0x676d, 0x6da4, 0x1, 0x0);
        gbc.writeMem(0xc567, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xbe9f, gbc.sp());
        EXPECT(0xc569, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc567));
        EXPECT(0x1f, gbc.readMem(0xc568));
        // CB 1F 027D
        gbc.setState(0x6737, 0x3827, 0x6330, 0x86ef, 0xf4a4, 0xcd07, 0x0, 0x1);
        gbc.writeMem(0x6737, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x3827, gbc.sp());
        EXPECT(0x6739, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 027E
        gbc.setState(0x2729, 0x8d9, 0x6a30, 0xf433, 0x94a6, 0xc28a, 0x0, 0x1);
        gbc.writeMem(0x2729, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x8d9, gbc.sp());
        EXPECT(0x272b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1F 027F
        gbc.setState(0x709a, 0x7bc, 0x870, 0x83fa, 0x996f, 0x55f6, 0x1, 0x0);
        gbc.writeMem(0x709a, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x7bc, gbc.sp());
        EXPECT(0x709c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1F 0280
        gbc.setState(0x97a7, 0xe4eb, 0xf180, 0xa92, 0x16f2, 0xa1e4, 0x0, 0x1);
        gbc.writeMem(0x97a7, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xe4eb, gbc.sp());
        EXPECT(0x97a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x97a7));
        EXPECT(0x1f, gbc.readMem(0x97a8));
        // CB 1F 0281
        gbc.setState(0x3dae, 0xe68, 0x3ca0, 0xaf3f, 0xfdea, 0x26d9, 0x0, 0x1);
        gbc.writeMem(0x3dae, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xe68, gbc.sp());
        EXPECT(0x3db0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1F 0282
        gbc.setState(0x5434, 0xf7f0, 0xedc0, 0xed8, 0x2ed8, 0xc739, 0x1, 0x1);
        gbc.writeMem(0x5434, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xf7f0, gbc.sp());
        EXPECT(0x5436, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 0283
        gbc.setState(0x6d6f, 0xd296, 0x5e80, 0xb15b, 0xfda2, 0x2cf2, 0x1, 0x0);
        gbc.writeMem(0x6d6f, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xd296, gbc.sp());
        EXPECT(0x6d71, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1F 0284
        gbc.setState(0xdcd0, 0xbd7, 0xb00, 0xece0, 0xb013, 0xfc5f, 0x0, 0x0);
        gbc.writeMem(0xdcd0, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xbd7, gbc.sp());
        EXPECT(0xdcd2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdcd0));
        EXPECT(0x1f, gbc.readMem(0xdcd1));
        // CB 1F 0285
        gbc.setState(0xa1c3, 0x36a5, 0x1950, 0xf5c0, 0x5e5e, 0xed4, 0x1, 0x1);
        gbc.writeMem(0xa1c3, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x36a5, gbc.sp());
        EXPECT(0xa1c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa1c3));
        EXPECT(0x1f, gbc.readMem(0xa1c4));
        // CB 1F 0286
        gbc.setState(0x4686, 0x6cba, 0x4340, 0xe405, 0xfccf, 0x94f0, 0x1, 0x1);
        gbc.writeMem(0x4686, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x6cba, gbc.sp());
        EXPECT(0x4688, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 0287
        gbc.setState(0x5168, 0xb403, 0xbed0, 0x68f2, 0xd582, 0x7ac1, 0x0, 0x1);
        gbc.writeMem(0x5168, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xb403, gbc.sp());
        EXPECT(0x516a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1F 0288
        gbc.setState(0xc3fc, 0x64d9, 0x6d50, 0xb434, 0xf403, 0xaccb, 0x1, 0x0);
        gbc.writeMem(0xc3fc, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x64d9, gbc.sp());
        EXPECT(0xc3fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc3fc));
        EXPECT(0x1f, gbc.readMem(0xc3fd));
        // CB 1F 0289
        gbc.setState(0xd7a6, 0x2331, 0x54d0, 0x9995, 0x5dbf, 0xa08c, 0x0, 0x0);
        gbc.writeMem(0xd7a6, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x2331, gbc.sp());
        EXPECT(0xd7a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd7a6));
        EXPECT(0x1f, gbc.readMem(0xd7a7));
        // CB 1F 028A
        gbc.setState(0xd81b, 0x6ca3, 0x7880, 0x847c, 0xd9ca, 0xef3e, 0x0, 0x0);
        gbc.writeMem(0xd81b, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x6ca3, gbc.sp());
        EXPECT(0xd81d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd81b));
        EXPECT(0x1f, gbc.readMem(0xd81c));
        // CB 1F 028B
        gbc.setState(0xc722, 0x881f, 0x5cd0, 0x44cb, 0x2f44, 0x6e47, 0x0, 0x0);
        gbc.writeMem(0xc722, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x881f, gbc.sp());
        EXPECT(0xc724, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc722));
        EXPECT(0x1f, gbc.readMem(0xc723));
        // CB 1F 028C
        gbc.setState(0x238e, 0x6b55, 0xe880, 0xa8a, 0x54d1, 0x929b, 0x1, 0x1);
        gbc.writeMem(0x238e, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x6b55, gbc.sp());
        EXPECT(0x2390, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1F 028D
        gbc.setState(0x5913, 0x460d, 0x76e0, 0xde23, 0x938f, 0x4aba, 0x0, 0x0);
        gbc.writeMem(0x5913, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x460d, gbc.sp());
        EXPECT(0x5915, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1F 028E
        gbc.setState(0xdc46, 0xd8fd, 0x3370, 0x2027, 0x202a, 0xa110, 0x1, 0x1);
        gbc.writeMem(0xdc46, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xd8fd, gbc.sp());
        EXPECT(0xdc48, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc46));
        EXPECT(0x1f, gbc.readMem(0xdc47));
        // CB 1F 028F
        gbc.setState(0x7b2, 0x58ec, 0x5f70, 0x515c, 0x335d, 0x2d68, 0x1, 0x1);
        gbc.writeMem(0x7b2, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x58ec, gbc.sp());
        EXPECT(0x7b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 0290
        gbc.setState(0x3b46, 0xf4bd, 0x7130, 0xbd76, 0xb6b3, 0x4cd6, 0x0, 0x1);
        gbc.writeMem(0x3b46, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xf4bd, gbc.sp());
        EXPECT(0x3b48, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 0291
        gbc.setState(0x9501, 0xd74b, 0x5910, 0xf397, 0xe3f6, 0xfae0, 0x1, 0x0);
        gbc.writeMem(0x9501, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xd74b, gbc.sp());
        EXPECT(0x9503, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9501));
        EXPECT(0x1f, gbc.readMem(0x9502));
        // CB 1F 0292
        gbc.setState(0x6878, 0xdda9, 0xf4a0, 0x65ac, 0x852, 0xfa23, 0x0, 0x0);
        gbc.writeMem(0x6878, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xdda9, gbc.sp());
        EXPECT(0x687a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1F 0293
        gbc.setState(0xde2a, 0x7112, 0x4cb0, 0x2884, 0xee42, 0xfbea, 0x1, 0x1);
        gbc.writeMem(0xde2a, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x7112, gbc.sp());
        EXPECT(0xde2c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde2a));
        EXPECT(0x1f, gbc.readMem(0xde2b));
        // CB 1F 0294
        gbc.setState(0xd66e, 0xba5d, 0x65e0, 0x8465, 0x7f40, 0x6f37, 0x0, 0x0);
        gbc.writeMem(0xd66e, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xba5d, gbc.sp());
        EXPECT(0xd670, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd66e));
        EXPECT(0x1f, gbc.readMem(0xd66f));
        // CB 1F 0295
        gbc.setState(0x46a, 0x7478, 0x4520, 0x841c, 0x790b, 0xcf2d, 0x0, 0x1);
        gbc.writeMem(0x46a, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x7478, gbc.sp());
        EXPECT(0x46c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 0296
        gbc.setState(0xdc29, 0x3c4c, 0x8590, 0x6192, 0xc2c4, 0x851a, 0x1, 0x1);
        gbc.writeMem(0xdc29, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x3c4c, gbc.sp());
        EXPECT(0xdc2b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc29));
        EXPECT(0x1f, gbc.readMem(0xdc2a));
        // CB 1F 0297
        gbc.setState(0x4086, 0x9768, 0x9320, 0x9151, 0x2816, 0x42eb, 0x0, 0x0);
        gbc.writeMem(0x4086, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x9768, gbc.sp());
        EXPECT(0x4088, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 0298
        gbc.setState(0x2b00, 0x918f, 0x6c0, 0xf7bb, 0x8c18, 0x2f97, 0x1, 0x0);
        gbc.writeMem(0x2b00, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x918f, gbc.sp());
        EXPECT(0x2b02, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1F 0299
        gbc.setState(0x742d, 0x16e6, 0xd490, 0xe7d1, 0x8436, 0x5130, 0x0, 0x0);
        gbc.writeMem(0x742d, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x16e6, gbc.sp());
        EXPECT(0x742f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1F 029A
        gbc.setState(0x525c, 0xd22, 0xf480, 0x3686, 0x129, 0x1810, 0x0, 0x1);
        gbc.writeMem(0x525c, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xd22, gbc.sp());
        EXPECT(0x525e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1F 029B
        gbc.setState(0xd97c, 0x73b3, 0x680, 0xab50, 0xf274, 0x1b56, 0x1, 0x0);
        gbc.writeMem(0xd97c, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x73b3, gbc.sp());
        EXPECT(0xd97e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd97c));
        EXPECT(0x1f, gbc.readMem(0xd97d));
        // CB 1F 029D
        gbc.setState(0xc39f, 0x4b24, 0x5730, 0xf09, 0x248c, 0xc667, 0x0, 0x1);
        gbc.writeMem(0xc39f, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x4b24, gbc.sp());
        EXPECT(0xc3a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc39f));
        EXPECT(0x1f, gbc.readMem(0xc3a0));
        // CB 1F 029E
        gbc.setState(0x2c0b, 0x3fb3, 0x8430, 0x2314, 0xd239, 0x24a8, 0x1, 0x0);
        gbc.writeMem(0x2c0b, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x3fb3, gbc.sp());
        EXPECT(0x2c0d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1F 029F
        gbc.setState(0x1cf1, 0x43c6, 0xbd50, 0xeef0, 0xd0d7, 0xa89f, 0x1, 0x1);
        gbc.writeMem(0x1cf1, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x43c6, gbc.sp());
        EXPECT(0x1cf3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 02A0
        gbc.setState(0xa549, 0x68dc, 0x39b0, 0xa398, 0x44d4, 0xd7a0, 0x1, 0x0);
        gbc.writeMem(0xa549, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x68dc, gbc.sp());
        EXPECT(0xa54b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa549));
        EXPECT(0x1f, gbc.readMem(0xa54a));
        // CB 1F 02A1
        gbc.setState(0x3ac3, 0xbcbc, 0x5e80, 0x6ce8, 0xa5f9, 0xa345, 0x1, 0x0);
        gbc.writeMem(0x3ac3, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xbcbc, gbc.sp());
        EXPECT(0x3ac5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1F 02A2
        gbc.setState(0xe030, 0x2467, 0x3cd0, 0x8ab3, 0xa8d2, 0xeb6f, 0x0, 0x1);
        gbc.writeMem(0xe030, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x2467, gbc.sp());
        EXPECT(0xe032, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe030));
        EXPECT(0x1f, gbc.readMem(0xe031));
        // CB 1F 02A3
        gbc.setState(0x42c4, 0x8a2c, 0x5920, 0xd6ac, 0x31e4, 0xef2f, 0x0, 0x0);
        gbc.writeMem(0x42c4, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x8a2c, gbc.sp());
        EXPECT(0x42c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 02A4
        gbc.setState(0x2174, 0x7982, 0x4770, 0x56ab, 0x34e5, 0xd653, 0x1, 0x0);
        gbc.writeMem(0x2174, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x7982, gbc.sp());
        EXPECT(0x2176, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 02A5
        gbc.setState(0x24cb, 0x88be, 0x16e0, 0x315d, 0xf222, 0x757e, 0x1, 0x0);
        gbc.writeMem(0x24cb, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x88be, gbc.sp());
        EXPECT(0x24cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1F 02A6
        gbc.setState(0x1650, 0xd79a, 0x33f0, 0x94b8, 0x1bd5, 0x132b, 0x1, 0x1);
        gbc.writeMem(0x1650, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xd79a, gbc.sp());
        EXPECT(0x1652, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 02A7
        gbc.setState(0x385b, 0xe7a9, 0x610, 0x1f3c, 0x9eda, 0xb9c5, 0x0, 0x0);
        gbc.writeMem(0x385b, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xe7a9, gbc.sp());
        EXPECT(0x385d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1F 02A8
        gbc.setState(0x54bb, 0x59be, 0xde00, 0x697e, 0xb335, 0xcf1b, 0x0, 0x0);
        gbc.writeMem(0x54bb, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x59be, gbc.sp());
        EXPECT(0x54bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1F 02A9
        gbc.setState(0x6058, 0x36e6, 0x8f60, 0x4a02, 0xa89d, 0x3dc7, 0x0, 0x0);
        gbc.writeMem(0x6058, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x36e6, gbc.sp());
        EXPECT(0x605a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 02AA
        gbc.setState(0x2c71, 0x7bef, 0x4460, 0xafcc, 0x49f4, 0xd505, 0x0, 0x1);
        gbc.writeMem(0x2c71, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x7bef, gbc.sp());
        EXPECT(0x2c73, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1F 02AB
        gbc.setState(0x58aa, 0x51d6, 0xec20, 0x9eb, 0xbfd8, 0x3296, 0x0, 0x1);
        gbc.writeMem(0x58aa, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x51d6, gbc.sp());
        EXPECT(0x58ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1F 02AC
        gbc.setState(0x4a73, 0x3c6c, 0x6140, 0x1b20, 0x3ab7, 0x3719, 0x0, 0x1);
        gbc.writeMem(0x4a73, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x3c6c, gbc.sp());
        EXPECT(0x4a75, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 02AD
        gbc.setState(0x4040, 0xfdf1, 0x2000, 0xbdd7, 0x3739, 0xfdf1, 0x0, 0x1);
        gbc.writeMem(0x4040, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xfdf1, gbc.sp());
        EXPECT(0x4042, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1F 02AE
        gbc.setState(0xae87, 0x7dda, 0x930, 0x6a2e, 0x921e, 0x9f7c, 0x0, 0x1);
        gbc.writeMem(0xae87, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x7dda, gbc.sp());
        EXPECT(0xae89, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae87));
        EXPECT(0x1f, gbc.readMem(0xae88));
        // CB 1F 02AF
        gbc.setState(0x43e9, 0xc9cc, 0xe6e0, 0xa990, 0x8b2f, 0xb098, 0x1, 0x1);
        gbc.writeMem(0x43e9, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xc9cc, gbc.sp());
        EXPECT(0x43eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1F 02B0
        gbc.setState(0x2f1e, 0x7adf, 0x51d0, 0xbe5b, 0xa2a1, 0xc48f, 0x0, 0x1);
        gbc.writeMem(0x2f1e, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x7adf, gbc.sp());
        EXPECT(0x2f20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 02B1
        gbc.setState(0x309e, 0x532b, 0x9020, 0xd2ae, 0xcad7, 0xd75d, 0x1, 0x1);
        gbc.writeMem(0x309e, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x532b, gbc.sp());
        EXPECT(0x30a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1F 02B2
        gbc.setState(0x7b1f, 0x1f0e, 0x540, 0x2e9e, 0xf9c4, 0xc255, 0x0, 0x0);
        gbc.writeMem(0x7b1f, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x1f0e, gbc.sp());
        EXPECT(0x7b21, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 02B4
        gbc.setState(0x7a13, 0xa19f, 0xeb90, 0x404e, 0x14ae, 0x9b4, 0x0, 0x1);
        gbc.writeMem(0x7a13, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xa19f, gbc.sp());
        EXPECT(0x7a15, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 02B5
        gbc.setState(0xd126, 0x45f9, 0x4920, 0x36be, 0x19, 0x7e6, 0x0, 0x0);
        gbc.writeMem(0xd126, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x45f9, gbc.sp());
        EXPECT(0xd128, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd126));
        EXPECT(0x1f, gbc.readMem(0xd127));
        // CB 1F 02B6
        gbc.setState(0x5ca0, 0x5073, 0xaad0, 0xf475, 0x4a83, 0x4993, 0x1, 0x1);
        gbc.writeMem(0x5ca0, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x5073, gbc.sp());
        EXPECT(0x5ca2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1F 02B7
        gbc.setState(0xcb70, 0x2794, 0x9a70, 0xf160, 0x6ffa, 0xa113, 0x1, 0x0);
        gbc.writeMem(0xcb70, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x2794, gbc.sp());
        EXPECT(0xcb72, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb70));
        EXPECT(0x1f, gbc.readMem(0xcb71));
        // CB 1F 02B8
        gbc.setState(0x8581, 0xdb4b, 0x5980, 0xb697, 0x6aab, 0x512a, 0x0, 0x1);
        gbc.writeMem(0x8581, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xdb4b, gbc.sp());
        EXPECT(0x8583, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8581));
        EXPECT(0x1f, gbc.readMem(0x8582));
        // CB 1F 02B9
        gbc.setState(0x34a0, 0xe06f, 0xd930, 0xaf61, 0x8090, 0x27c9, 0x1, 0x1);
        gbc.writeMem(0x34a0, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xe06f, gbc.sp());
        EXPECT(0x34a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 02BA
        gbc.setState(0xd474, 0xd5a3, 0xdcf0, 0x1102, 0x6b3f, 0x7e1b, 0x0, 0x0);
        gbc.writeMem(0xd474, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xd5a3, gbc.sp());
        EXPECT(0xd476, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd474));
        EXPECT(0x1f, gbc.readMem(0xd475));
        // CB 1F 02BB
        gbc.setState(0x28b0, 0xa56c, 0xaca0, 0xf0fe, 0x932f, 0xd8f4, 0x0, 0x0);
        gbc.writeMem(0x28b0, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xa56c, gbc.sp());
        EXPECT(0x28b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1F 02BC
        gbc.setState(0xa4ca, 0x59c1, 0x120, 0x4f17, 0x9547, 0x572f, 0x1, 0x1);
        gbc.writeMem(0xa4ca, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x59c1, gbc.sp());
        EXPECT(0xa4cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa4ca));
        EXPECT(0x1f, gbc.readMem(0xa4cb));
        // CB 1F 02BD
        gbc.setState(0x3213, 0xf58, 0xc7f0, 0xd38, 0xf4e0, 0x6284, 0x0, 0x0);
        gbc.writeMem(0x3213, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xf58, gbc.sp());
        EXPECT(0x3215, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 02BE
        gbc.setState(0x26e8, 0x2f39, 0x7a00, 0xb1bd, 0xa0f, 0x972d, 0x1, 0x1);
        gbc.writeMem(0x26e8, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x2f39, gbc.sp());
        EXPECT(0x26ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1F 02BF
        gbc.setState(0xd4c7, 0xff65, 0xaa10, 0x39be, 0x3b53, 0xc573, 0x0, 0x1);
        gbc.writeMem(0xd4c7, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xff65, gbc.sp());
        EXPECT(0xd4c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd4c7));
        EXPECT(0x1f, gbc.readMem(0xd4c8));
        // CB 1F 02C0
        gbc.setState(0x54de, 0xbb30, 0xf090, 0x59e9, 0x31ff, 0x1422, 0x1, 0x0);
        gbc.writeMem(0x54de, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xbb30, gbc.sp());
        EXPECT(0x54e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1F 02C2
        gbc.setState(0x64b2, 0xff05, 0xfe00, 0x553, 0x3077, 0x1295, 0x1, 0x0);
        gbc.writeMem(0x64b2, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xff05, gbc.sp());
        EXPECT(0x64b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1F 02C4
        gbc.setState(0x7ecf, 0x9ea9, 0xfac0, 0x8e70, 0x37bc, 0xa334, 0x1, 0x1);
        gbc.writeMem(0x7ecf, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x9ea9, gbc.sp());
        EXPECT(0x7ed1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1F 02C5
        gbc.setState(0x3809, 0x2543, 0xf700, 0x8347, 0x3c91, 0xfdc3, 0x0, 0x0);
        gbc.writeMem(0x3809, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x2543, gbc.sp());
        EXPECT(0x380b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 02C6
        gbc.setState(0xebbd, 0xf89f, 0xe040, 0x8d5, 0x9c1b, 0x2d3e, 0x1, 0x0);
        gbc.writeMem(0xebbd, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xf89f, gbc.sp());
        EXPECT(0xebbf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xebbd));
        EXPECT(0x1f, gbc.readMem(0xebbe));
        // CB 1F 02C7
        gbc.setState(0x4809, 0x3517, 0x80e0, 0xebf2, 0x8e81, 0xcb5e, 0x1, 0x1);
        gbc.writeMem(0x4809, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x3517, gbc.sp());
        EXPECT(0x480b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1F 02C8
        gbc.setState(0xbd6f, 0xceea, 0xa2a0, 0xa84d, 0xde17, 0x8675, 0x1, 0x0);
        gbc.writeMem(0xbd6f, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xceea, gbc.sp());
        EXPECT(0xbd71, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd6f));
        EXPECT(0x1f, gbc.readMem(0xbd70));
        // CB 1F 02C9
        gbc.setState(0xa700, 0x6ff4, 0x7860, 0xdd29, 0x5387, 0x27e7, 0x0, 0x0);
        gbc.writeMem(0xa700, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x6ff4, gbc.sp());
        EXPECT(0xa702, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa700));
        EXPECT(0x1f, gbc.readMem(0xa701));
        // CB 1F 02CA
        gbc.setState(0x8060, 0x26ca, 0xb9f0, 0x707d, 0xcde, 0x6bff, 0x0, 0x0);
        gbc.writeMem(0x8060, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x26ca, gbc.sp());
        EXPECT(0x8062, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8060));
        EXPECT(0x1f, gbc.readMem(0x8061));
        // CB 1F 02CB
        gbc.setState(0x7789, 0x1aa1, 0x92e0, 0xb8ca, 0xce49, 0x1215, 0x1, 0x1);
        gbc.writeMem(0x7789, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x1aa1, gbc.sp());
        EXPECT(0x778b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1F 02CC
        gbc.setState(0x3b63, 0x5d73, 0x11e0, 0x40a2, 0x4d0e, 0xe8c1, 0x1, 0x1);
        gbc.writeMem(0x3b63, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x5d73, gbc.sp());
        EXPECT(0x3b65, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 02CD
        gbc.setState(0x1b7b, 0x712e, 0xcfa0, 0x61b1, 0x5a50, 0xc541, 0x0, 0x0);
        gbc.writeMem(0x1b7b, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x712e, gbc.sp());
        EXPECT(0x1b7d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 02CE
        gbc.setState(0xee6d, 0xb1e3, 0xeed0, 0xc0a, 0xea28, 0x3802, 0x0, 0x0);
        gbc.writeMem(0xee6d, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xb1e3, gbc.sp());
        EXPECT(0xee6f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee6d));
        EXPECT(0x1f, gbc.readMem(0xee6e));
        // CB 1F 02CF
        gbc.setState(0x15a8, 0x8ec2, 0x1210, 0x87d0, 0x5e7d, 0x6856, 0x0, 0x1);
        gbc.writeMem(0x15a8, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x8ec2, gbc.sp());
        EXPECT(0x15aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1F 02D0
        gbc.setState(0xeec2, 0xce72, 0x5500, 0x8e0c, 0x83fa, 0x15b2, 0x0, 0x1);
        gbc.writeMem(0xeec2, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xce72, gbc.sp());
        EXPECT(0xeec4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeec2));
        EXPECT(0x1f, gbc.readMem(0xeec3));
        // CB 1F 02D1
        gbc.setState(0x289a, 0xe080, 0xf5a0, 0x50cd, 0x70ce, 0xde45, 0x0, 0x0);
        gbc.writeMem(0x289a, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xe080, gbc.sp());
        EXPECT(0x289c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 02D2
        gbc.setState(0xdf72, 0xf1e0, 0xae00, 0x8241, 0xf11a, 0x2ae1, 0x0, 0x0);
        gbc.writeMem(0xdf72, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xf1e0, gbc.sp());
        EXPECT(0xdf74, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf72));
        EXPECT(0x1f, gbc.readMem(0xdf73));
        // CB 1F 02D3
        gbc.setState(0x7f7a, 0x8795, 0xdf60, 0x587c, 0x9892, 0xc16b, 0x0, 0x1);
        gbc.writeMem(0x7f7a, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x8795, gbc.sp());
        EXPECT(0x7f7c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 02D4
        gbc.setState(0x3ff6, 0x68e8, 0xa90, 0x66c8, 0x16a0, 0x50e9, 0x1, 0x1);
        gbc.writeMem(0x3ff6, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x68e8, gbc.sp());
        EXPECT(0x3ff8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1F 02D5
        gbc.setState(0x22d6, 0x9613, 0x3460, 0x2ab1, 0x820, 0x2489, 0x1, 0x1);
        gbc.writeMem(0x22d6, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x9613, gbc.sp());
        EXPECT(0x22d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1F 02D6
        gbc.setState(0xb9b1, 0xeaa8, 0xbf90, 0xd748, 0x722e, 0x9985, 0x1, 0x0);
        gbc.writeMem(0xb9b1, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xeaa8, gbc.sp());
        EXPECT(0xb9b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb9b1));
        EXPECT(0x1f, gbc.readMem(0xb9b2));
        // CB 1F 02D7
        gbc.setState(0x27c0, 0xda8e, 0x9e40, 0xc180, 0x9a53, 0x7500, 0x1, 0x0);
        gbc.writeMem(0x27c0, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xda8e, gbc.sp());
        EXPECT(0x27c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1F 02D8
        gbc.setState(0xb0d, 0xd0bb, 0x2c60, 0x6300, 0xd3da, 0xaab, 0x0, 0x0);
        gbc.writeMem(0xb0d, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xd0bb, gbc.sp());
        EXPECT(0xb0f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1F 02D9
        gbc.setState(0x4771, 0xd499, 0x900, 0xea0d, 0x4f5e, 0x1b9c, 0x1, 0x1);
        gbc.writeMem(0x4771, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xd499, gbc.sp());
        EXPECT(0x4773, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 02DA
        gbc.setState(0x7458, 0x739a, 0xf020, 0x8d1c, 0xe678, 0x8ef7, 0x0, 0x0);
        gbc.writeMem(0x7458, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x739a, gbc.sp());
        EXPECT(0x745a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1F 02DB
        gbc.setState(0x150e, 0xae22, 0x940, 0xd329, 0x558c, 0xb1df, 0x1, 0x1);
        gbc.writeMem(0x150e, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xae22, gbc.sp());
        EXPECT(0x1510, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 02DC
        gbc.setState(0x5df7, 0x6271, 0x2ef0, 0x57ce, 0x10f, 0x6be4, 0x0, 0x1);
        gbc.writeMem(0x5df7, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x6271, gbc.sp());
        EXPECT(0x5df9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1F 02DD
        gbc.setState(0x8234, 0xfd48, 0x4e20, 0xd2f8, 0xf045, 0x4ba1, 0x0, 0x0);
        gbc.writeMem(0x8234, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xfd48, gbc.sp());
        EXPECT(0x8236, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8234));
        EXPECT(0x1f, gbc.readMem(0x8235));
        // CB 1F 02DE
        gbc.setState(0x895, 0x2f80, 0x7b70, 0x2aaf, 0xccd4, 0x2c3a, 0x0, 0x0);
        gbc.writeMem(0x895, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x2f80, gbc.sp());
        EXPECT(0x897, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 02DF
        gbc.setState(0xacbc, 0xe042, 0xd250, 0xa9ca, 0xad64, 0xdfec, 0x0, 0x1);
        gbc.writeMem(0xacbc, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xe042, gbc.sp());
        EXPECT(0xacbe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xacbc));
        EXPECT(0x1f, gbc.readMem(0xacbd));
        // CB 1F 02E0
        gbc.setState(0x8b59, 0x83fb, 0xd350, 0xe9d2, 0x2009, 0x935f, 0x1, 0x1);
        gbc.writeMem(0x8b59, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x83fb, gbc.sp());
        EXPECT(0x8b5b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b59));
        EXPECT(0x1f, gbc.readMem(0x8b5a));
        // CB 1F 02E1
        gbc.setState(0xcc4b, 0x5c9f, 0x35f0, 0x5c06, 0x4ca8, 0x3ec6, 0x1, 0x0);
        gbc.writeMem(0xcc4b, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x5c9f, gbc.sp());
        EXPECT(0xcc4d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc4b));
        EXPECT(0x1f, gbc.readMem(0xcc4c));
        // CB 1F 02E2
        gbc.setState(0x620b, 0x515f, 0x9440, 0x52b1, 0x36cb, 0x9f70, 0x0, 0x0);
        gbc.writeMem(0x620b, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x515f, gbc.sp());
        EXPECT(0x620d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1F 02E3
        gbc.setState(0xb761, 0x7e0b, 0xed40, 0x5ce4, 0x80c7, 0x71f9, 0x1, 0x1);
        gbc.writeMem(0xb761, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x7e0b, gbc.sp());
        EXPECT(0xb763, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb761));
        EXPECT(0x1f, gbc.readMem(0xb762));
        // CB 1F 02E4
        gbc.setState(0x87e, 0x9c51, 0xea30, 0x9d23, 0x14d5, 0x86f4, 0x0, 0x1);
        gbc.writeMem(0x87e, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x9c51, gbc.sp());
        EXPECT(0x880, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1F 02E5
        gbc.setState(0xd574, 0x260c, 0x8500, 0x26d1, 0xff79, 0xd3da, 0x1, 0x0);
        gbc.writeMem(0xd574, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x260c, gbc.sp());
        EXPECT(0xd576, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd574));
        EXPECT(0x1f, gbc.readMem(0xd575));
        // CB 1F 02E6
        gbc.setState(0x4b77, 0x32a7, 0xc530, 0x576a, 0xaf34, 0xc996, 0x1, 0x0);
        gbc.writeMem(0x4b77, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x32a7, gbc.sp());
        EXPECT(0x4b79, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 02E7
        gbc.setState(0x473b, 0xb392, 0x71a0, 0x3d3d, 0x61a2, 0xeda6, 0x0, 0x0);
        gbc.writeMem(0x473b, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xb392, gbc.sp());
        EXPECT(0x473d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 02E8
        gbc.setState(0xc87, 0xa968, 0xc250, 0x46a1, 0xde8d, 0x4c0e, 0x1, 0x1);
        gbc.writeMem(0xc87, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xa968, gbc.sp());
        EXPECT(0xc89, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1F 02E9
        gbc.setState(0x58d9, 0xc459, 0x5980, 0x289e, 0x375e, 0x409b, 0x1, 0x0);
        gbc.writeMem(0x58d9, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xc459, gbc.sp());
        EXPECT(0x58db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 02EA
        gbc.setState(0x113d, 0xc97, 0x8120, 0xe72a, 0x675e, 0x4221, 0x0, 0x0);
        gbc.writeMem(0x113d, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xc97, gbc.sp());
        EXPECT(0x113f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 02EB
        gbc.setState(0xebb2, 0xe9a1, 0xb7d0, 0x78e0, 0xd414, 0x98b, 0x1, 0x0);
        gbc.writeMem(0xebb2, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xe9a1, gbc.sp());
        EXPECT(0xebb4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xebb2));
        EXPECT(0x1f, gbc.readMem(0xebb3));
        // CB 1F 02EC
        gbc.setState(0x7910, 0xefb8, 0xf4a0, 0xd1e, 0x9bff, 0x1dca, 0x0, 0x1);
        gbc.writeMem(0x7910, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xefb8, gbc.sp());
        EXPECT(0x7912, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1F 02ED
        gbc.setState(0xa21, 0x62a2, 0x2c00, 0x2dd8, 0x2508, 0xd2c9, 0x1, 0x0);
        gbc.writeMem(0xa21, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x62a2, gbc.sp());
        EXPECT(0xa23, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1F 02EE
        gbc.setState(0x406f, 0x481f, 0xa20, 0x40e8, 0x107, 0x9a0b, 0x1, 0x1);
        gbc.writeMem(0x406f, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x481f, gbc.sp());
        EXPECT(0x4071, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1F 02EF
        gbc.setState(0xb07, 0xaa05, 0x35d0, 0x77f6, 0x97eb, 0x6ac9, 0x0, 0x0);
        gbc.writeMem(0xb07, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xaa05, gbc.sp());
        EXPECT(0xb09, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 02F0
        gbc.setState(0xa2f1, 0x1320, 0xee40, 0xcd71, 0x58dd, 0xdb, 0x1, 0x1);
        gbc.writeMem(0xa2f1, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x1320, gbc.sp());
        EXPECT(0xa2f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa2f1));
        EXPECT(0x1f, gbc.readMem(0xa2f2));
        // CB 1F 02F1
        gbc.setState(0xcd93, 0x8da9, 0xb270, 0xcb23, 0xa87d, 0x6440, 0x0, 0x1);
        gbc.writeMem(0xcd93, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x8da9, gbc.sp());
        EXPECT(0xcd95, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd93));
        EXPECT(0x1f, gbc.readMem(0xcd94));
        // CB 1F 02F2
        gbc.setState(0x57fa, 0x49d0, 0x850, 0x3812, 0xbcdd, 0x91cf, 0x0, 0x1);
        gbc.writeMem(0x57fa, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x49d0, gbc.sp());
        EXPECT(0x57fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1F 02F3
        gbc.setState(0x158a, 0xd16f, 0x21f0, 0x7e2d, 0x3b6e, 0xa672, 0x1, 0x1);
        gbc.writeMem(0x158a, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xd16f, gbc.sp());
        EXPECT(0x158c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 02F4
        gbc.setState(0xe7cd, 0xcec8, 0xb1c0, 0xbe50, 0xd07, 0x54fb, 0x0, 0x0);
        gbc.writeMem(0xe7cd, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xcec8, gbc.sp());
        EXPECT(0xe7cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe7cd));
        EXPECT(0x1f, gbc.readMem(0xe7ce));
        // CB 1F 02F5
        gbc.setState(0x693e, 0x9204, 0x50f0, 0x48e0, 0x4fb4, 0x27b6, 0x0, 0x1);
        gbc.writeMem(0x693e, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x9204, gbc.sp());
        EXPECT(0x6940, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1F 02F6
        gbc.setState(0x89a, 0x5900, 0x4f00, 0x6e61, 0x3114, 0x1fbb, 0x0, 0x0);
        gbc.writeMem(0x89a, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x5900, gbc.sp());
        EXPECT(0x89c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 02F7
        gbc.setState(0x2e22, 0xda5a, 0x2340, 0xbca3, 0x39df, 0x9c09, 0x1, 0x1);
        gbc.writeMem(0x2e22, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xda5a, gbc.sp());
        EXPECT(0x2e24, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 02F8
        gbc.setState(0x1307, 0xa6c9, 0x5120, 0x89f3, 0xf266, 0xdb67, 0x1, 0x1);
        gbc.writeMem(0x1307, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xa6c9, gbc.sp());
        EXPECT(0x1309, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 02F9
        gbc.setState(0xda38, 0x3584, 0xc360, 0xa4c5, 0x8468, 0xeaf2, 0x0, 0x1);
        gbc.writeMem(0xda38, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x3584, gbc.sp());
        EXPECT(0xda3a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda38));
        EXPECT(0x1f, gbc.readMem(0xda39));
        // CB 1F 02FA
        gbc.setState(0x2d4c, 0xb873, 0x8410, 0x8a70, 0xba34, 0x5210, 0x1, 0x1);
        gbc.writeMem(0x2d4c, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xb873, gbc.sp());
        EXPECT(0x2d4e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1F 02FB
        gbc.setState(0x6bd7, 0x49a4, 0xe590, 0xe92, 0x23af, 0xcf11, 0x0, 0x0);
        gbc.writeMem(0x6bd7, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x49a4, gbc.sp());
        EXPECT(0x6bd9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 02FC
        gbc.setState(0x17c1, 0x9e48, 0xb060, 0xecac, 0xce11, 0xc82f, 0x0, 0x1);
        gbc.writeMem(0x17c1, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x9e48, gbc.sp());
        EXPECT(0x17c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1F 02FD
        gbc.setState(0xaace, 0x725f, 0x1170, 0xf66, 0x43fe, 0x29ca, 0x1, 0x0);
        gbc.writeMem(0xaace, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x725f, gbc.sp());
        EXPECT(0xaad0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaace));
        EXPECT(0x1f, gbc.readMem(0xaacf));
        // CB 1F 02FE
        gbc.setState(0x3e98, 0xc2eb, 0xbc10, 0x347e, 0x5843, 0xb23d, 0x0, 0x1);
        gbc.writeMem(0x3e98, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xc2eb, gbc.sp());
        EXPECT(0x3e9a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1F 02FF
        gbc.setState(0xd30d, 0xc16c, 0x4240, 0xfb32, 0x1b29, 0x376b, 0x0, 0x1);
        gbc.writeMem(0xd30d, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xc16c, gbc.sp());
        EXPECT(0xd30f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd30d));
        EXPECT(0x1f, gbc.readMem(0xd30e));
        // CB 1F 0300
        gbc.setState(0x77a3, 0xb956, 0xb4d0, 0xccb, 0x5765, 0x768e, 0x1, 0x1);
        gbc.writeMem(0x77a3, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xb956, gbc.sp());
        EXPECT(0x77a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1F 0301
        gbc.setState(0xb53f, 0x5a27, 0x8630, 0x8be3, 0x7be4, 0xcc2d, 0x0, 0x0);
        gbc.writeMem(0xb53f, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x5a27, gbc.sp());
        EXPECT(0xb541, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb53f));
        EXPECT(0x1f, gbc.readMem(0xb540));
        // CB 1F 0302
        gbc.setState(0x31ae, 0xbeb8, 0x9360, 0xdde6, 0x1a03, 0x53e9, 0x0, 0x1);
        gbc.writeMem(0x31ae, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xbeb8, gbc.sp());
        EXPECT(0x31b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 0303
        gbc.setState(0x8e8a, 0xe187, 0x9930, 0xa512, 0x55bf, 0xe623, 0x1, 0x0);
        gbc.writeMem(0x8e8a, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xe187, gbc.sp());
        EXPECT(0x8e8c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e8a));
        EXPECT(0x1f, gbc.readMem(0x8e8b));
        // CB 1F 0304
        gbc.setState(0x37cb, 0x4586, 0xa200, 0x347a, 0x7e42, 0x3565, 0x0, 0x0);
        gbc.writeMem(0x37cb, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x4586, gbc.sp());
        EXPECT(0x37cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1F 0305
        gbc.setState(0x4407, 0x7ee6, 0x970, 0xcfe5, 0x2ca0, 0x8843, 0x1, 0x0);
        gbc.writeMem(0x4407, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x7ee6, gbc.sp());
        EXPECT(0x4409, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 0306
        gbc.setState(0xe83f, 0xc715, 0x1d10, 0x3b69, 0x1a08, 0x7793, 0x1, 0x1);
        gbc.writeMem(0xe83f, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xc715, gbc.sp());
        EXPECT(0xe841, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe83f));
        EXPECT(0x1f, gbc.readMem(0xe840));
        // CB 1F 0307
        gbc.setState(0x6bbe, 0x13aa, 0x2b60, 0xe92a, 0x357d, 0xd6b4, 0x1, 0x0);
        gbc.writeMem(0x6bbe, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x13aa, gbc.sp());
        EXPECT(0x6bc0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 0309
        gbc.setState(0x7f1b, 0x16b3, 0xd450, 0x2d74, 0xa6bf, 0xc16f, 0x1, 0x0);
        gbc.writeMem(0x7f1b, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x16b3, gbc.sp());
        EXPECT(0x7f1d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1F 030A
        gbc.setState(0x4ed6, 0x29cb, 0x6550, 0xd415, 0xbf65, 0x686c, 0x0, 0x0);
        gbc.writeMem(0x4ed6, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x29cb, gbc.sp());
        EXPECT(0x4ed8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 030B
        gbc.setState(0xc02c, 0x400, 0x9160, 0xb1b4, 0x6887, 0xbabe, 0x1, 0x0);
        gbc.writeMem(0xc02c, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x400, gbc.sp());
        EXPECT(0xc02e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc02c));
        EXPECT(0x1f, gbc.readMem(0xc02d));
        // CB 1F 030C
        gbc.setState(0x6149, 0x808e, 0xe8d0, 0x18e3, 0x69b2, 0xd19, 0x1, 0x0);
        gbc.writeMem(0x6149, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x808e, gbc.sp());
        EXPECT(0x614b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1F 030D
        gbc.setState(0x5013, 0x4eae, 0x6b0, 0x529, 0x12c7, 0xb1d0, 0x0, 0x0);
        gbc.writeMem(0x5013, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x4eae, gbc.sp());
        EXPECT(0x5015, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1F 030E
        gbc.setState(0xea6b, 0x4623, 0x8d0, 0xe57a, 0xe056, 0x7639, 0x1, 0x0);
        gbc.writeMem(0xea6b, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x4623, gbc.sp());
        EXPECT(0xea6d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea6b));
        EXPECT(0x1f, gbc.readMem(0xea6c));
        // CB 1F 030F
        gbc.setState(0xae50, 0xe1f0, 0x3490, 0xf349, 0x4f53, 0x4c45, 0x1, 0x0);
        gbc.writeMem(0xae50, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xe1f0, gbc.sp());
        EXPECT(0xae52, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae50));
        EXPECT(0x1f, gbc.readMem(0xae51));
        // CB 1F 0310
        gbc.setState(0xccf, 0x4297, 0xa250, 0x3733, 0xac53, 0x12c9, 0x0, 0x1);
        gbc.writeMem(0xccf, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x4297, gbc.sp());
        EXPECT(0xcd1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1F 0311
        gbc.setState(0x5259, 0x3333, 0x7ce0, 0xba90, 0x7967, 0xd7b3, 0x1, 0x1);
        gbc.writeMem(0x5259, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x3333, gbc.sp());
        EXPECT(0x525b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1F 0312
        gbc.setState(0x90ac, 0xe342, 0xb7a0, 0xa68, 0xfe5c, 0xa01d, 0x1, 0x1);
        gbc.writeMem(0x90ac, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xe342, gbc.sp());
        EXPECT(0x90ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x90ac));
        EXPECT(0x1f, gbc.readMem(0x90ad));
        // CB 1F 0313
        gbc.setState(0x3841, 0x1f33, 0x4360, 0xad7e, 0xcd8, 0x743a, 0x0, 0x0);
        gbc.writeMem(0x3841, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x1f33, gbc.sp());
        EXPECT(0x3843, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 0314
        gbc.setState(0x6682, 0x6e75, 0xed30, 0xad39, 0x7ce7, 0x9cc5, 0x0, 0x1);
        gbc.writeMem(0x6682, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x6e75, gbc.sp());
        EXPECT(0x6684, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 0316
        gbc.setState(0xa6de, 0xbd78, 0xb330, 0xceda, 0xeb1b, 0x43e5, 0x1, 0x0);
        gbc.writeMem(0xa6de, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xbd78, gbc.sp());
        EXPECT(0xa6e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa6de));
        EXPECT(0x1f, gbc.readMem(0xa6df));
        // CB 1F 0317
        gbc.setState(0x7d8d, 0xbeac, 0x18f0, 0x6871, 0xad84, 0xfa90, 0x0, 0x0);
        gbc.writeMem(0x7d8d, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xbeac, gbc.sp());
        EXPECT(0x7d8f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1F 031A
        gbc.setState(0x4f0, 0x8cda, 0x2a60, 0x1396, 0x495b, 0xeb57, 0x0, 0x1);
        gbc.writeMem(0x4f0, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x8cda, gbc.sp());
        EXPECT(0x4f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1F 031B
        gbc.setState(0x25de, 0x1460, 0x7070, 0x7ff7, 0x375, 0x42e0, 0x0, 0x0);
        gbc.writeMem(0x25de, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x1460, gbc.sp());
        EXPECT(0x25e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1F 031C
        gbc.setState(0x1643, 0x8cd, 0xa0a0, 0xf17d, 0xb75b, 0x157d, 0x0, 0x1);
        gbc.writeMem(0x1643, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x8cd, gbc.sp());
        EXPECT(0x1645, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1F 031D
        gbc.setState(0xc856, 0x7cc5, 0xc090, 0xedf2, 0xd78a, 0xdcb8, 0x1, 0x0);
        gbc.writeMem(0xc856, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x7cc5, gbc.sp());
        EXPECT(0xc858, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc856));
        EXPECT(0x1f, gbc.readMem(0xc857));
        // CB 1F 031E
        gbc.setState(0x19f8, 0x360a, 0x1dc0, 0x31c8, 0x8a98, 0x68ef, 0x1, 0x1);
        gbc.writeMem(0x19f8, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x360a, gbc.sp());
        EXPECT(0x19fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 031F
        gbc.setState(0x3b1f, 0xaa28, 0x9f50, 0xa79f, 0x71e1, 0xa437, 0x0, 0x0);
        gbc.writeMem(0x3b1f, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xaa28, gbc.sp());
        EXPECT(0x3b21, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 0320
        gbc.setState(0x5d0b, 0x880a, 0xc710, 0xb2ef, 0xafdf, 0x901a, 0x1, 0x0);
        gbc.writeMem(0x5d0b, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x880a, gbc.sp());
        EXPECT(0x5d0d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 0321
        gbc.setState(0x6fe4, 0x15c, 0x56b0, 0xf262, 0xd357, 0xba7d, 0x1, 0x1);
        gbc.writeMem(0x6fe4, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x15c, gbc.sp());
        EXPECT(0x6fe6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1F 0322
        gbc.setState(0xb5f, 0x150e, 0x1520, 0x2975, 0x4ab1, 0xd518, 0x0, 0x1);
        gbc.writeMem(0xb5f, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x150e, gbc.sp());
        EXPECT(0xb61, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 0323
        gbc.setState(0x4501, 0xc99b, 0x2570, 0xed92, 0x2b05, 0x143, 0x1, 0x1);
        gbc.writeMem(0x4501, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xc99b, gbc.sp());
        EXPECT(0x4503, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 0324
        gbc.setState(0x5d93, 0xfb44, 0x700, 0x4e11, 0x8d18, 0x99a1, 0x1, 0x0);
        gbc.writeMem(0x5d93, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xfb44, gbc.sp());
        EXPECT(0x5d95, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 0325
        gbc.setState(0xc9fa, 0x7fe3, 0xbd00, 0xc077, 0x976d, 0x7993, 0x1, 0x1);
        gbc.writeMem(0xc9fa, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x7fe3, gbc.sp());
        EXPECT(0xc9fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc9fa));
        EXPECT(0x1f, gbc.readMem(0xc9fb));
        // CB 1F 0326
        gbc.setState(0x88a3, 0x97a1, 0x8220, 0x22ad, 0x3fb6, 0x1fd3, 0x1, 0x0);
        gbc.writeMem(0x88a3, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x97a1, gbc.sp());
        EXPECT(0x88a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x88a3));
        EXPECT(0x1f, gbc.readMem(0x88a4));
        // CB 1F 0327
        gbc.setState(0xb0e5, 0x249c, 0xab10, 0x55a8, 0x458b, 0x26c1, 0x1, 0x0);
        gbc.writeMem(0xb0e5, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x249c, gbc.sp());
        EXPECT(0xb0e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb0e5));
        EXPECT(0x1f, gbc.readMem(0xb0e6));
        // CB 1F 0328
        gbc.setState(0x62b4, 0x3f89, 0x50a0, 0x7cd3, 0x7761, 0xbda9, 0x1, 0x1);
        gbc.writeMem(0x62b4, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x3f89, gbc.sp());
        EXPECT(0x62b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1F 0329
        gbc.setState(0x3bf, 0x73f5, 0x39a0, 0x99ea, 0x1f46, 0xabba, 0x0, 0x0);
        gbc.writeMem(0x3bf, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x73f5, gbc.sp());
        EXPECT(0x3c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 032A
        gbc.setState(0x1041, 0x229, 0xe350, 0xf07c, 0xc81f, 0xaded, 0x0, 0x0);
        gbc.writeMem(0x1041, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x229, gbc.sp());
        EXPECT(0x1043, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 032B
        gbc.setState(0x4a96, 0xd4d3, 0xdca0, 0xdd74, 0x97ed, 0x8a2b, 0x0, 0x0);
        gbc.writeMem(0x4a96, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xd4d3, gbc.sp());
        EXPECT(0x4a98, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1F 032C
        gbc.setState(0x5bb2, 0xd8b0, 0xf4a0, 0xa282, 0x2a83, 0xc247, 0x1, 0x0);
        gbc.writeMem(0x5bb2, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xd8b0, gbc.sp());
        EXPECT(0x5bb4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1F 032D
        gbc.setState(0x73f3, 0xbda7, 0xaad0, 0x742, 0x6b8b, 0xcfa7, 0x1, 0x0);
        gbc.writeMem(0x73f3, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xbda7, gbc.sp());
        EXPECT(0x73f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1F 032E
        gbc.setState(0x75be, 0x2142, 0x6280, 0xff60, 0x7d9b, 0xc65c, 0x1, 0x1);
        gbc.writeMem(0x75be, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x2142, gbc.sp());
        EXPECT(0x75c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1F 032F
        gbc.setState(0xe8dc, 0xa923, 0xc590, 0x541d, 0xd3f2, 0x241c, 0x1, 0x1);
        gbc.writeMem(0xe8dc, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xa923, gbc.sp());
        EXPECT(0xe8de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe8dc));
        EXPECT(0x1f, gbc.readMem(0xe8dd));
        // CB 1F 0330
        gbc.setState(0x4c03, 0x9e39, 0x3730, 0xf982, 0x5970, 0x7f7, 0x1, 0x0);
        gbc.writeMem(0x4c03, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x9e39, gbc.sp());
        EXPECT(0x4c05, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 0331
        gbc.setState(0x1671, 0xba68, 0x7f20, 0x18c4, 0xa0b6, 0xdb45, 0x1, 0x0);
        gbc.writeMem(0x1671, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xba68, gbc.sp());
        EXPECT(0x1673, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 0332
        gbc.setState(0x61e7, 0x4dab, 0x360, 0xcadc, 0x4c5c, 0x5126, 0x0, 0x1);
        gbc.writeMem(0x61e7, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x4dab, gbc.sp());
        EXPECT(0x61e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 0333
        gbc.setState(0xd37f, 0x7d4b, 0x1fb0, 0x4ce2, 0x4351, 0x1cf2, 0x0, 0x0);
        gbc.writeMem(0xd37f, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x7d4b, gbc.sp());
        EXPECT(0xd381, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd37f));
        EXPECT(0x1f, gbc.readMem(0xd380));
        // CB 1F 0334
        gbc.setState(0x7620, 0x8fe9, 0xbc50, 0x8ab5, 0xb7d3, 0xcf4, 0x1, 0x0);
        gbc.writeMem(0x7620, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x8fe9, gbc.sp());
        EXPECT(0x7622, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1F 0335
        gbc.setState(0xc81b, 0xfb0a, 0xd4f0, 0xc9a5, 0x6819, 0xbee3, 0x1, 0x0);
        gbc.writeMem(0xc81b, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xfb0a, gbc.sp());
        EXPECT(0xc81d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc81b));
        EXPECT(0x1f, gbc.readMem(0xc81c));
        // CB 1F 0336
        gbc.setState(0x1ac, 0xf5bb, 0xd3b0, 0xb160, 0x25f7, 0x2220, 0x0, 0x0);
        gbc.writeMem(0x1ac, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xf5bb, gbc.sp());
        EXPECT(0x1ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 0337
        gbc.setState(0x9675, 0xb046, 0xc310, 0xea96, 0xf95c, 0x378f, 0x1, 0x1);
        gbc.writeMem(0x9675, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xb046, gbc.sp());
        EXPECT(0x9677, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9675));
        EXPECT(0x1f, gbc.readMem(0x9676));
        // CB 1F 0338
        gbc.setState(0x58c4, 0x7804, 0x9c60, 0xfe7e, 0xc985, 0xb8de, 0x1, 0x1);
        gbc.writeMem(0x58c4, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x7804, gbc.sp());
        EXPECT(0x58c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1F 0339
        gbc.setState(0x5439, 0x7576, 0x12a0, 0x91e7, 0x1aa7, 0x8ce9, 0x0, 0x0);
        gbc.writeMem(0x5439, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x7576, gbc.sp());
        EXPECT(0x543b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1F 033A
        gbc.setState(0x7eef, 0x805, 0x2570, 0x6ade, 0x9ed5, 0x34c5, 0x0, 0x1);
        gbc.writeMem(0x7eef, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x805, gbc.sp());
        EXPECT(0x7ef1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 033B
        gbc.setState(0xcf6c, 0x9efc, 0xd560, 0xfe85, 0x5ef8, 0x8878, 0x1, 0x1);
        gbc.writeMem(0xcf6c, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x9efc, gbc.sp());
        EXPECT(0xcf6e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf6c));
        EXPECT(0x1f, gbc.readMem(0xcf6d));
        // CB 1F 033C
        gbc.setState(0xef9, 0x80dc, 0xc650, 0x7745, 0x449a, 0xd1e4, 0x1, 0x0);
        gbc.writeMem(0xef9, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x80dc, gbc.sp());
        EXPECT(0xefb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1F 033D
        gbc.setState(0x4f5f, 0xe4a, 0x3b10, 0xef6a, 0x3ef, 0x98b, 0x0, 0x1);
        gbc.writeMem(0x4f5f, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xe4a, gbc.sp());
        EXPECT(0x4f61, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 033E
        gbc.setState(0x4eee, 0x6726, 0xc250, 0x5130, 0xad47, 0x246b, 0x0, 0x1);
        gbc.writeMem(0x4eee, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x6726, gbc.sp());
        EXPECT(0x4ef0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1F 033F
        gbc.setState(0xeac0, 0x76d9, 0x8170, 0xeb83, 0xcf80, 0x6739, 0x0, 0x0);
        gbc.writeMem(0xeac0, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x76d9, gbc.sp());
        EXPECT(0xeac2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeac0));
        EXPECT(0x1f, gbc.readMem(0xeac1));
        // CB 1F 0341
        gbc.setState(0x7a49, 0x8496, 0xd070, 0x3f5a, 0x7e53, 0xc13b, 0x1, 0x0);
        gbc.writeMem(0x7a49, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x8496, gbc.sp());
        EXPECT(0x7a4b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1F 0342
        gbc.setState(0x19e7, 0x3f34, 0xfdc0, 0xcaef, 0xb5c9, 0x5fb0, 0x1, 0x0);
        gbc.writeMem(0x19e7, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x3f34, gbc.sp());
        EXPECT(0x19e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 0344
        gbc.setState(0x9b26, 0xfc50, 0x3160, 0x73f4, 0x708f, 0x963d, 0x1, 0x1);
        gbc.writeMem(0x9b26, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xfc50, gbc.sp());
        EXPECT(0x9b28, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b26));
        EXPECT(0x1f, gbc.readMem(0x9b27));
        // CB 1F 0345
        gbc.setState(0xcc6d, 0x163d, 0x39d0, 0x23be, 0x7e87, 0xaffc, 0x1, 0x1);
        gbc.writeMem(0xcc6d, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x163d, gbc.sp());
        EXPECT(0xcc6f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc6d));
        EXPECT(0x1f, gbc.readMem(0xcc6e));
        // CB 1F 0346
        gbc.setState(0x7c2a, 0x82c4, 0x2460, 0x36e6, 0xdf3c, 0xa2b3, 0x1, 0x1);
        gbc.writeMem(0x7c2a, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x82c4, gbc.sp());
        EXPECT(0x7c2c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1F 0347
        gbc.setState(0x52b8, 0x74e8, 0xf860, 0x9f27, 0x47f4, 0xe8ce, 0x0, 0x1);
        gbc.writeMem(0x52b8, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x74e8, gbc.sp());
        EXPECT(0x52ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1F 0348
        gbc.setState(0xd4a5, 0xa47f, 0x5b00, 0xf746, 0x917d, 0x1086, 0x1, 0x0);
        gbc.writeMem(0xd4a5, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xa47f, gbc.sp());
        EXPECT(0xd4a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd4a5));
        EXPECT(0x1f, gbc.readMem(0xd4a6));
        // CB 1F 034A
        gbc.setState(0x8d28, 0x7fbf, 0x1230, 0xd6e9, 0x750e, 0x3811, 0x0, 0x1);
        gbc.writeMem(0x8d28, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x7fbf, gbc.sp());
        EXPECT(0x8d2a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d28));
        EXPECT(0x1f, gbc.readMem(0x8d29));
        // CB 1F 034B
        gbc.setState(0x1bd2, 0xb9b1, 0x3920, 0xc025, 0xfceb, 0x14da, 0x1, 0x0);
        gbc.writeMem(0x1bd2, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xb9b1, gbc.sp());
        EXPECT(0x1bd4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 034C
        gbc.setState(0x6998, 0x7c54, 0x3a60, 0xdf5c, 0xccad, 0x1f9e, 0x1, 0x1);
        gbc.writeMem(0x6998, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x7c54, gbc.sp());
        EXPECT(0x699a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1F 034D
        gbc.setState(0x21f2, 0xb212, 0xe80, 0x635f, 0x3283, 0x1373, 0x0, 0x0);
        gbc.writeMem(0x21f2, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xb212, gbc.sp());
        EXPECT(0x21f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1F 034F
        gbc.setState(0x348e, 0x3117, 0x34b0, 0x5688, 0x2c99, 0xdd5b, 0x1, 0x0);
        gbc.writeMem(0x348e, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x3117, gbc.sp());
        EXPECT(0x3490, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1F 0350
        gbc.setState(0x4f3f, 0xcac8, 0xf2d0, 0x8fe0, 0x7a41, 0xae65, 0x0, 0x1);
        gbc.writeMem(0x4f3f, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xcac8, gbc.sp());
        EXPECT(0x4f41, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1F 0351
        gbc.setState(0x188e, 0x64fd, 0xcf30, 0xa438, 0x5cd2, 0x7f65, 0x1, 0x1);
        gbc.writeMem(0x188e, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x64fd, gbc.sp());
        EXPECT(0x1890, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 0352
        gbc.setState(0x624f, 0xa473, 0xe70, 0x66a6, 0xd330, 0xf819, 0x1, 0x1);
        gbc.writeMem(0x624f, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xa473, gbc.sp());
        EXPECT(0x6251, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1F 0353
        gbc.setState(0xba62, 0x81f2, 0xc9f0, 0xe41, 0x1e91, 0x96f8, 0x0, 0x1);
        gbc.writeMem(0xba62, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x81f2, gbc.sp());
        EXPECT(0xba64, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba62));
        EXPECT(0x1f, gbc.readMem(0xba63));
        // CB 1F 0354
        gbc.setState(0xdfe7, 0x1b0c, 0x54a0, 0x506c, 0xb15c, 0x6e72, 0x1, 0x1);
        gbc.writeMem(0xdfe7, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x1b0c, gbc.sp());
        EXPECT(0xdfe9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdfe7));
        EXPECT(0x1f, gbc.readMem(0xdfe8));
        // CB 1F 0355
        gbc.setState(0x25f7, 0xe054, 0x2720, 0x6ed, 0x2763, 0x1c16, 0x0, 0x1);
        gbc.writeMem(0x25f7, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xe054, gbc.sp());
        EXPECT(0x25f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 0356
        gbc.setState(0x2762, 0x81b6, 0x3340, 0x5d80, 0x9c52, 0x8543, 0x1, 0x1);
        gbc.writeMem(0x2762, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x81b6, gbc.sp());
        EXPECT(0x2764, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 0357
        gbc.setState(0x9356, 0xfb2e, 0x3bd0, 0xbee8, 0xf652, 0x64ab, 0x1, 0x0);
        gbc.writeMem(0x9356, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xfb2e, gbc.sp());
        EXPECT(0x9358, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9356));
        EXPECT(0x1f, gbc.readMem(0x9357));
        // CB 1F 0358
        gbc.setState(0x1839, 0xb630, 0x4e60, 0x6ee7, 0xc86f, 0xf675, 0x0, 0x1);
        gbc.writeMem(0x1839, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xb630, gbc.sp());
        EXPECT(0x183b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1F 0359
        gbc.setState(0xd2f3, 0x6f3e, 0x9d10, 0x1031, 0x949d, 0x9b16, 0x0, 0x1);
        gbc.writeMem(0xd2f3, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x6f3e, gbc.sp());
        EXPECT(0xd2f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd2f3));
        EXPECT(0x1f, gbc.readMem(0xd2f4));
        // CB 1F 035A
        gbc.setState(0xa373, 0x1fb2, 0x8f40, 0xb6d1, 0x79b2, 0x4cba, 0x1, 0x1);
        gbc.writeMem(0xa373, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x1fb2, gbc.sp());
        EXPECT(0xa375, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa373));
        EXPECT(0x1f, gbc.readMem(0xa374));
        // CB 1F 035B
        gbc.setState(0x181c, 0xe582, 0x22b0, 0x1996, 0xb9f4, 0x7d6a, 0x1, 0x0);
        gbc.writeMem(0x181c, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xe582, gbc.sp());
        EXPECT(0x181e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1F 035C
        gbc.setState(0x3521, 0xf4c, 0x9d90, 0xf157, 0xb787, 0x909b, 0x0, 0x0);
        gbc.writeMem(0x3521, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xf4c, gbc.sp());
        EXPECT(0x3523, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 035D
        gbc.setState(0xe581, 0x181e, 0xd830, 0xa086, 0xa7a8, 0xf7d3, 0x0, 0x0);
        gbc.writeMem(0xe581, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x181e, gbc.sp());
        EXPECT(0xe583, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe581));
        EXPECT(0x1f, gbc.readMem(0xe582));
        // CB 1F 035E
        gbc.setState(0x6502, 0x363c, 0xc110, 0xda92, 0x3fa, 0xf51f, 0x1, 0x1);
        gbc.writeMem(0x6502, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x363c, gbc.sp());
        EXPECT(0x6504, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 035F
        gbc.setState(0x1d23, 0xc0a3, 0x43e0, 0x8b7f, 0x8fc6, 0xbaae, 0x0, 0x0);
        gbc.writeMem(0x1d23, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xc0a3, gbc.sp());
        EXPECT(0x1d25, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 0360
        gbc.setState(0xc635, 0x593d, 0x24e0, 0x65ac, 0x8b88, 0xe406, 0x0, 0x0);
        gbc.writeMem(0xc635, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x593d, gbc.sp());
        EXPECT(0xc637, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc635));
        EXPECT(0x1f, gbc.readMem(0xc636));
        // CB 1F 0361
        gbc.setState(0x3c8a, 0xeaae, 0xc970, 0x343b, 0x2f5c, 0x3ef8, 0x1, 0x1);
        gbc.writeMem(0x3c8a, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xeaae, gbc.sp());
        EXPECT(0x3c8c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 0362
        gbc.setState(0x3a88, 0xe19b, 0x8980, 0x247d, 0x7da, 0xca6f, 0x0, 0x0);
        gbc.writeMem(0x3a88, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xe19b, gbc.sp());
        EXPECT(0x3a8a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 0363
        gbc.setState(0x25f7, 0x3f1b, 0x7750, 0x9ebb, 0x4121, 0x12a5, 0x0, 0x1);
        gbc.writeMem(0x25f7, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x3f1b, gbc.sp());
        EXPECT(0x25f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 0365
        gbc.setState(0xda1a, 0x9bd3, 0x17d0, 0x687e, 0xbd47, 0x26cd, 0x1, 0x0);
        gbc.writeMem(0xda1a, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x9bd3, gbc.sp());
        EXPECT(0xda1c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda1a));
        EXPECT(0x1f, gbc.readMem(0xda1b));
        // CB 1F 0366
        gbc.setState(0x68f0, 0x5d31, 0xb970, 0x5b36, 0x69b1, 0x3a94, 0x1, 0x1);
        gbc.writeMem(0x68f0, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x5d31, gbc.sp());
        EXPECT(0x68f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 0367
        gbc.setState(0x3b03, 0xf0cd, 0xb0a0, 0x9a71, 0xc7de, 0x9bd7, 0x0, 0x0);
        gbc.writeMem(0x3b03, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xf0cd, gbc.sp());
        EXPECT(0x3b05, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1F 0368
        gbc.setState(0xd5f2, 0x4447, 0x1aa0, 0x5bfa, 0xef42, 0x7668, 0x0, 0x1);
        gbc.writeMem(0xd5f2, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x4447, gbc.sp());
        EXPECT(0xd5f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd5f2));
        EXPECT(0x1f, gbc.readMem(0xd5f3));
        // CB 1F 0369
        gbc.setState(0xe0d8, 0x7a5a, 0x860, 0x83a8, 0xbb7a, 0x5f2b, 0x1, 0x1);
        gbc.writeMem(0xe0d8, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x7a5a, gbc.sp());
        EXPECT(0xe0da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe0d8));
        EXPECT(0x1f, gbc.readMem(0xe0d9));
        // CB 1F 036A
        gbc.setState(0x2730, 0x7455, 0x2ba0, 0x6156, 0x339b, 0x9fb7, 0x1, 0x1);
        gbc.writeMem(0x2730, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x7455, gbc.sp());
        EXPECT(0x2732, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 036B
        gbc.setState(0x92b4, 0xadb7, 0xc400, 0xb583, 0x6137, 0x918, 0x0, 0x0);
        gbc.writeMem(0x92b4, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xadb7, gbc.sp());
        EXPECT(0x92b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x92b4));
        EXPECT(0x1f, gbc.readMem(0x92b5));
        // CB 1F 036C
        gbc.setState(0x6cd8, 0xd2f0, 0xf2d0, 0x4714, 0x6021, 0x5972, 0x0, 0x1);
        gbc.writeMem(0x6cd8, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xd2f0, gbc.sp());
        EXPECT(0x6cda, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1F 036D
        gbc.setState(0xad00, 0xc68d, 0xfd80, 0xa431, 0xf3c2, 0x16b3, 0x1, 0x0);
        gbc.writeMem(0xad00, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xc68d, gbc.sp());
        EXPECT(0xad02, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad00));
        EXPECT(0x1f, gbc.readMem(0xad01));
        // CB 1F 036E
        gbc.setState(0x3e3e, 0xdd91, 0xe930, 0xced7, 0x8ddd, 0x782b, 0x0, 0x1);
        gbc.writeMem(0x3e3e, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xdd91, gbc.sp());
        EXPECT(0x3e40, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 036F
        gbc.setState(0x5a95, 0xf9dd, 0x7350, 0xc1a0, 0x4596, 0x2ef, 0x0, 0x1);
        gbc.writeMem(0x5a95, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xf9dd, gbc.sp());
        EXPECT(0x5a97, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 0370
        gbc.setState(0x4292, 0xc564, 0xe700, 0xe1f8, 0xb84b, 0x9959, 0x1, 0x1);
        gbc.writeMem(0x4292, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xc564, gbc.sp());
        EXPECT(0x4294, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 0371
        gbc.setState(0x5936, 0x27a6, 0x9b90, 0x472f, 0xc62b, 0x6b6a, 0x0, 0x0);
        gbc.writeMem(0x5936, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x27a6, gbc.sp());
        EXPECT(0x5938, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 0372
        gbc.setState(0x6358, 0xdb47, 0xb130, 0xab8a, 0x3207, 0xb5c8, 0x0, 0x1);
        gbc.writeMem(0x6358, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xdb47, gbc.sp());
        EXPECT(0x635a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 0373
        gbc.setState(0xbaa8, 0x3bf2, 0x5ee0, 0xfca4, 0x7e2f, 0x8a85, 0x1, 0x1);
        gbc.writeMem(0xbaa8, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x3bf2, gbc.sp());
        EXPECT(0xbaaa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbaa8));
        EXPECT(0x1f, gbc.readMem(0xbaa9));
        // CB 1F 0375
        gbc.setState(0xcd34, 0x3605, 0xbce0, 0x3873, 0xcc57, 0x61b9, 0x1, 0x1);
        gbc.writeMem(0xcd34, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x3605, gbc.sp());
        EXPECT(0xcd36, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd34));
        EXPECT(0x1f, gbc.readMem(0xcd35));
        // CB 1F 0376
        gbc.setState(0xc602, 0x57e2, 0x9f10, 0x130, 0xa9d7, 0xdd73, 0x0, 0x0);
        gbc.writeMem(0xc602, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x57e2, gbc.sp());
        EXPECT(0xc604, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc602));
        EXPECT(0x1f, gbc.readMem(0xc603));
        // CB 1F 0377
        gbc.setState(0x95e7, 0x725d, 0x1d40, 0xba2e, 0x2868, 0xa4a4, 0x0, 0x0);
        gbc.writeMem(0x95e7, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x725d, gbc.sp());
        EXPECT(0x95e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x95e7));
        EXPECT(0x1f, gbc.readMem(0x95e8));
        // CB 1F 037A
        gbc.setState(0xb34f, 0xb71f, 0xcf40, 0x6cd9, 0x8b33, 0xd9f5, 0x1, 0x1);
        gbc.writeMem(0xb34f, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xb71f, gbc.sp());
        EXPECT(0xb351, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb34f));
        EXPECT(0x1f, gbc.readMem(0xb350));
        // CB 1F 037B
        gbc.setState(0x6744, 0xfb52, 0xe110, 0x228, 0x6989, 0xb025, 0x0, 0x1);
        gbc.writeMem(0x6744, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xfb52, gbc.sp());
        EXPECT(0x6746, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 037C
        gbc.setState(0x1530, 0x8625, 0xe000, 0x27ad, 0xe496, 0x2b1f, 0x1, 0x1);
        gbc.writeMem(0x1530, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x8625, gbc.sp());
        EXPECT(0x1532, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1F 037D
        gbc.setState(0xcae9, 0x39f6, 0x7670, 0x93a3, 0x81bf, 0x780e, 0x0, 0x0);
        gbc.writeMem(0xcae9, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x39f6, gbc.sp());
        EXPECT(0xcaeb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcae9));
        EXPECT(0x1f, gbc.readMem(0xcaea));
        // CB 1F 037F
        gbc.setState(0x2961, 0x3fd4, 0x1bc0, 0xbbce, 0xc157, 0xf400, 0x1, 0x1);
        gbc.writeMem(0x2961, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x3fd4, gbc.sp());
        EXPECT(0x2963, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 0380
        gbc.setState(0x1fd3, 0x14fe, 0xe0d0, 0x168d, 0xdf5f, 0x3c9e, 0x0, 0x0);
        gbc.writeMem(0x1fd3, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x14fe, gbc.sp());
        EXPECT(0x1fd5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1F 0381
        gbc.setState(0x5ee3, 0x5cc9, 0xa720, 0x93a8, 0xd558, 0x6d4c, 0x0, 0x0);
        gbc.writeMem(0x5ee3, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x5cc9, gbc.sp());
        EXPECT(0x5ee5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 0382
        gbc.setState(0x7653, 0x93fc, 0x2df0, 0x87f0, 0x7bd9, 0x386c, 0x1, 0x0);
        gbc.writeMem(0x7653, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x93fc, gbc.sp());
        EXPECT(0x7655, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 0383
        gbc.setState(0x75d4, 0x5080, 0x6f0, 0x9e2, 0x9c19, 0x68b7, 0x1, 0x1);
        gbc.writeMem(0x75d4, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x5080, gbc.sp());
        EXPECT(0x75d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1F 0384
        gbc.setState(0xa8e0, 0x45ec, 0xbd30, 0x62ea, 0xe169, 0x36ce, 0x1, 0x0);
        gbc.writeMem(0xa8e0, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x45ec, gbc.sp());
        EXPECT(0xa8e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa8e0));
        EXPECT(0x1f, gbc.readMem(0xa8e1));
        // CB 1F 0385
        gbc.setState(0x2fc9, 0x9234, 0x2910, 0x732, 0x213, 0x9eb5, 0x1, 0x1);
        gbc.writeMem(0x2fc9, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x9234, gbc.sp());
        EXPECT(0x2fcb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 0387
        gbc.setState(0xb2f9, 0xd24, 0x1d40, 0x7161, 0xfc22, 0x5371, 0x1, 0x1);
        gbc.writeMem(0xb2f9, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xd24, gbc.sp());
        EXPECT(0xb2fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb2f9));
        EXPECT(0x1f, gbc.readMem(0xb2fa));
        // CB 1F 0388
        gbc.setState(0x622a, 0xeda4, 0x7e70, 0xffca, 0xf44a, 0xa2a2, 0x0, 0x0);
        gbc.writeMem(0x622a, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xeda4, gbc.sp());
        EXPECT(0x622c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1F 0389
        gbc.setState(0xc108, 0x5a39, 0xe00, 0x4b0, 0x61c7, 0x19e6, 0x1, 0x0);
        gbc.writeMem(0xc108, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x5a39, gbc.sp());
        EXPECT(0xc10a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc108));
        EXPECT(0x1f, gbc.readMem(0xc109));
        // CB 1F 038B
        gbc.setState(0xc851, 0xc9c6, 0xed30, 0xf39b, 0x847d, 0xbf20, 0x1, 0x1);
        gbc.writeMem(0xc851, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xc9c6, gbc.sp());
        EXPECT(0xc853, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc851));
        EXPECT(0x1f, gbc.readMem(0xc852));
        // CB 1F 038C
        gbc.setState(0xe944, 0x622f, 0x30, 0xb9b2, 0xe8cb, 0x34ee, 0x1, 0x1);
        gbc.writeMem(0xe944, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x622f, gbc.sp());
        EXPECT(0xe946, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe944));
        EXPECT(0x1f, gbc.readMem(0xe945));
        // CB 1F 038E
        gbc.setState(0x5e38, 0x5b2e, 0xb930, 0x83c9, 0xc598, 0x6810, 0x0, 0x1);
        gbc.writeMem(0x5e38, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x5b2e, gbc.sp());
        EXPECT(0x5e3a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 038F
        gbc.setState(0xd765, 0xe6eb, 0x3fc0, 0xe215, 0x9403, 0x1940, 0x1, 0x1);
        gbc.writeMem(0xd765, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xe6eb, gbc.sp());
        EXPECT(0xd767, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd765));
        EXPECT(0x1f, gbc.readMem(0xd766));
        // CB 1F 0390
        gbc.setState(0x2427, 0x437c, 0xb600, 0xc3e2, 0x87ce, 0xb66f, 0x0, 0x1);
        gbc.writeMem(0x2427, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x437c, gbc.sp());
        EXPECT(0x2429, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1F 0391
        gbc.setState(0x4fa6, 0x7434, 0xae0, 0x4549, 0x5827, 0x1a2, 0x1, 0x1);
        gbc.writeMem(0x4fa6, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x7434, gbc.sp());
        EXPECT(0x4fa8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1F 0392
        gbc.setState(0xe97a, 0x7938, 0x6510, 0x313d, 0x5b2b, 0xdee1, 0x1, 0x1);
        gbc.writeMem(0xe97a, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x7938, gbc.sp());
        EXPECT(0xe97c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe97a));
        EXPECT(0x1f, gbc.readMem(0xe97b));
        // CB 1F 0393
        gbc.setState(0xbc8d, 0x8239, 0xd6f0, 0x49be, 0xc50, 0xe875, 0x0, 0x1);
        gbc.writeMem(0xbc8d, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x8239, gbc.sp());
        EXPECT(0xbc8f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc8d));
        EXPECT(0x1f, gbc.readMem(0xbc8e));
        // CB 1F 0394
        gbc.setState(0x2c2b, 0x5182, 0x82e0, 0x341d, 0x496a, 0xa714, 0x0, 0x1);
        gbc.writeMem(0x2c2b, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x5182, gbc.sp());
        EXPECT(0x2c2d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1F 0395
        gbc.setState(0x8b33, 0x2c96, 0xdb10, 0xe9f9, 0x3092, 0xc6d4, 0x1, 0x1);
        gbc.writeMem(0x8b33, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x2c96, gbc.sp());
        EXPECT(0x8b35, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b33));
        EXPECT(0x1f, gbc.readMem(0x8b34));
        // CB 1F 0396
        gbc.setState(0x3e21, 0x8b45, 0x6f50, 0x98a1, 0x33ab, 0x2d93, 0x1, 0x1);
        gbc.writeMem(0x3e21, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x8b45, gbc.sp());
        EXPECT(0x3e23, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 0398
        gbc.setState(0x1c64, 0xd13f, 0xeac0, 0x9925, 0x8b0d, 0x52cf, 0x0, 0x1);
        gbc.writeMem(0x1c64, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xd13f, gbc.sp());
        EXPECT(0x1c66, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1F 0399
        gbc.setState(0x50c9, 0xabad, 0x8a90, 0x94e1, 0xf028, 0x7640, 0x1, 0x0);
        gbc.writeMem(0x50c9, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xabad, gbc.sp());
        EXPECT(0x50cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1F 039A
        gbc.setState(0x6744, 0xf247, 0x3130, 0x7ad9, 0x3051, 0xbb3, 0x0, 0x0);
        gbc.writeMem(0x6744, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xf247, gbc.sp());
        EXPECT(0x6746, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 039B
        gbc.setState(0xba31, 0xde36, 0xc20, 0x6920, 0x6ad2, 0xa1da, 0x0, 0x0);
        gbc.writeMem(0xba31, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xde36, gbc.sp());
        EXPECT(0xba33, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba31));
        EXPECT(0x1f, gbc.readMem(0xba32));
        // CB 1F 039C
        gbc.setState(0x58b7, 0x858c, 0x9130, 0x6cfb, 0x488a, 0x7ed0, 0x1, 0x1);
        gbc.writeMem(0x58b7, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x858c, gbc.sp());
        EXPECT(0x58b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 039D
        gbc.setState(0xd12d, 0xea8d, 0x2790, 0x758e, 0x5def, 0x418, 0x1, 0x1);
        gbc.writeMem(0xd12d, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xea8d, gbc.sp());
        EXPECT(0xd12f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd12d));
        EXPECT(0x1f, gbc.readMem(0xd12e));
        // CB 1F 039E
        gbc.setState(0x65f7, 0x7345, 0x31b0, 0xf52d, 0x845b, 0x55a2, 0x0, 0x0);
        gbc.writeMem(0x65f7, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x7345, gbc.sp());
        EXPECT(0x65f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 039F
        gbc.setState(0x9ad8, 0x7312, 0x5a60, 0xcf21, 0xe8dd, 0xbf0e, 0x1, 0x1);
        gbc.writeMem(0x9ad8, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x7312, gbc.sp());
        EXPECT(0x9ada, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ad8));
        EXPECT(0x1f, gbc.readMem(0x9ad9));
        // CB 1F 03A0
        gbc.setState(0x36b9, 0x560a, 0x8ba0, 0xe316, 0x97c8, 0xa6c2, 0x0, 0x1);
        gbc.writeMem(0x36b9, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x560a, gbc.sp());
        EXPECT(0x36bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 03A1
        gbc.setState(0xad34, 0xcd4f, 0x8690, 0xb05f, 0xcd74, 0x663b, 0x1, 0x0);
        gbc.writeMem(0xad34, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xcd4f, gbc.sp());
        EXPECT(0xad36, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad34));
        EXPECT(0x1f, gbc.readMem(0xad35));
        // CB 1F 03A2
        gbc.setState(0x84d3, 0x9567, 0x57e0, 0x1c7b, 0xd9d8, 0x53d2, 0x0, 0x1);
        gbc.writeMem(0x84d3, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x9567, gbc.sp());
        EXPECT(0x84d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x84d3));
        EXPECT(0x1f, gbc.readMem(0x84d4));
        // CB 1F 03A3
        gbc.setState(0x2e1d, 0x2b18, 0x8ff0, 0x5f8b, 0x1863, 0xe772, 0x0, 0x0);
        gbc.writeMem(0x2e1d, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x2b18, gbc.sp());
        EXPECT(0x2e1f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 03A4
        gbc.setState(0x2f69, 0x3705, 0x8b40, 0xd160, 0xa2b0, 0x8894, 0x0, 0x1);
        gbc.writeMem(0x2f69, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x3705, gbc.sp());
        EXPECT(0x2f6b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 03A5
        gbc.setState(0x4bbc, 0x4453, 0x27c0, 0xd7e2, 0xccb3, 0x7692, 0x0, 0x1);
        gbc.writeMem(0x4bbc, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x4453, gbc.sp());
        EXPECT(0x4bbe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 03A6
        gbc.setState(0x7c79, 0x664f, 0x4650, 0x61b8, 0x1f88, 0x1262, 0x1, 0x0);
        gbc.writeMem(0x7c79, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x664f, gbc.sp());
        EXPECT(0x7c7b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1F 03A7
        gbc.setState(0xa29c, 0xc120, 0x2910, 0x3740, 0x8851, 0x91a1, 0x1, 0x0);
        gbc.writeMem(0xa29c, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xc120, gbc.sp());
        EXPECT(0xa29e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa29c));
        EXPECT(0x1f, gbc.readMem(0xa29d));
        // CB 1F 03A8
        gbc.setState(0xc703, 0xb6e7, 0x3020, 0x8120, 0xca8e, 0xbd20, 0x0, 0x1);
        gbc.writeMem(0xc703, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xb6e7, gbc.sp());
        EXPECT(0xc705, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc703));
        EXPECT(0x1f, gbc.readMem(0xc704));
        // CB 1F 03A9
        gbc.setState(0x3598, 0xc6d1, 0x1360, 0xc8fe, 0x9f3f, 0xf618, 0x0, 0x1);
        gbc.writeMem(0x3598, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xc6d1, gbc.sp());
        EXPECT(0x359a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 03AA
        gbc.setState(0xba91, 0xdf2f, 0xe090, 0xc1ef, 0x92a1, 0x9d3b, 0x0, 0x0);
        gbc.writeMem(0xba91, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xdf2f, gbc.sp());
        EXPECT(0xba93, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba91));
        EXPECT(0x1f, gbc.readMem(0xba92));
        // CB 1F 03AB
        gbc.setState(0x84a2, 0x14de, 0x3620, 0xa146, 0x13b8, 0xf184, 0x0, 0x1);
        gbc.writeMem(0x84a2, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x14de, gbc.sp());
        EXPECT(0x84a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x84a2));
        EXPECT(0x1f, gbc.readMem(0x84a3));
        // CB 1F 03AC
        gbc.setState(0x86b6, 0x95d, 0xd490, 0x60c0, 0xb1a7, 0xc42f, 0x1, 0x1);
        gbc.writeMem(0x86b6, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x95d, gbc.sp());
        EXPECT(0x86b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x86b6));
        EXPECT(0x1f, gbc.readMem(0x86b7));
        // CB 1F 03AD
        gbc.setState(0xd92a, 0x2244, 0x3d60, 0xbcf4, 0x344f, 0xcebf, 0x0, 0x0);
        gbc.writeMem(0xd92a, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x2244, gbc.sp());
        EXPECT(0xd92c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd92a));
        EXPECT(0x1f, gbc.readMem(0xd92b));
        // CB 1F 03AE
        gbc.setState(0x6fde, 0x86d0, 0x25b0, 0x8aa7, 0xd7dd, 0xdf96, 0x0, 0x1);
        gbc.writeMem(0x6fde, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x86d0, gbc.sp());
        EXPECT(0x6fe0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 03AF
        gbc.setState(0x23db, 0x7ac6, 0xff60, 0x3bd7, 0xf5b8, 0x857b, 0x0, 0x1);
        gbc.writeMem(0x23db, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x7ac6, gbc.sp());
        EXPECT(0x23dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 03B0
        gbc.setState(0xec80, 0x9a86, 0xfa40, 0xeafc, 0x60ac, 0x3144, 0x0, 0x1);
        gbc.writeMem(0xec80, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x9a86, gbc.sp());
        EXPECT(0xec82, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec80));
        EXPECT(0x1f, gbc.readMem(0xec81));
        // CB 1F 03B1
        gbc.setState(0x7e9a, 0x6c1e, 0xcd40, 0xaa2e, 0x2386, 0x618e, 0x1, 0x1);
        gbc.writeMem(0x7e9a, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x6c1e, gbc.sp());
        EXPECT(0x7e9c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 03B2
        gbc.setState(0x550b, 0xfa10, 0xa10, 0xcbe, 0x7d4a, 0x15de, 0x1, 0x0);
        gbc.writeMem(0x550b, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xfa10, gbc.sp());
        EXPECT(0x550d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1F 03B3
        gbc.setState(0x59b4, 0x41b2, 0x6560, 0x3d3f, 0x7484, 0x4a52, 0x0, 0x0);
        gbc.writeMem(0x59b4, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x41b2, gbc.sp());
        EXPECT(0x59b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 03B4
        gbc.setState(0x6581, 0xa47a, 0xe3f0, 0xe81e, 0x4645, 0x3971, 0x0, 0x0);
        gbc.writeMem(0x6581, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xa47a, gbc.sp());
        EXPECT(0x6583, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 03B5
        gbc.setState(0xe4d4, 0x1eb8, 0x220, 0x252f, 0x9e22, 0x1237, 0x1, 0x0);
        gbc.writeMem(0xe4d4, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x1eb8, gbc.sp());
        EXPECT(0xe4d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe4d4));
        EXPECT(0x1f, gbc.readMem(0xe4d5));
        // CB 1F 03B6
        gbc.setState(0x19ca, 0x6981, 0x14b0, 0xd091, 0x4f48, 0x94dc, 0x1, 0x0);
        gbc.writeMem(0x19ca, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x6981, gbc.sp());
        EXPECT(0x19cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1F 03B7
        gbc.setState(0x2276, 0x41fe, 0xabb0, 0x94d2, 0x17a9, 0xa6e3, 0x1, 0x0);
        gbc.writeMem(0x2276, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x41fe, gbc.sp());
        EXPECT(0x2278, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 03B8
        gbc.setState(0x7c50, 0x83e4, 0xb80, 0x75d3, 0xfce6, 0x3a1f, 0x0, 0x1);
        gbc.writeMem(0x7c50, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x83e4, gbc.sp());
        EXPECT(0x7c52, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 03B9
        gbc.setState(0x95a3, 0xf15d, 0x43b0, 0xe650, 0x5c7a, 0x7dc9, 0x0, 0x1);
        gbc.writeMem(0x95a3, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xf15d, gbc.sp());
        EXPECT(0x95a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x95a3));
        EXPECT(0x1f, gbc.readMem(0x95a4));
        // CB 1F 03BA
        gbc.setState(0xbd37, 0x387e, 0x46f0, 0x8f73, 0x77ea, 0x571, 0x1, 0x1);
        gbc.writeMem(0xbd37, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x387e, gbc.sp());
        EXPECT(0xbd39, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd37));
        EXPECT(0x1f, gbc.readMem(0xbd38));
        // CB 1F 03BB
        gbc.setState(0xda56, 0x5b36, 0x6690, 0x5a54, 0xe116, 0xd311, 0x0, 0x1);
        gbc.writeMem(0xda56, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x5b36, gbc.sp());
        EXPECT(0xda58, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda56));
        EXPECT(0x1f, gbc.readMem(0xda57));
        // CB 1F 03BC
        gbc.setState(0x758c, 0x706d, 0x23a0, 0x8ac5, 0x92ae, 0x737a, 0x0, 0x1);
        gbc.writeMem(0x758c, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x706d, gbc.sp());
        EXPECT(0x758e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 03BE
        gbc.setState(0xdf02, 0xc3d4, 0x9320, 0xedc, 0xf86a, 0x1954, 0x0, 0x1);
        gbc.writeMem(0xdf02, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xc3d4, gbc.sp());
        EXPECT(0xdf04, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf02));
        EXPECT(0x1f, gbc.readMem(0xdf03));
        // CB 1F 03BF
        gbc.setState(0xdd2, 0x27b2, 0x92b0, 0x5e68, 0x1a0, 0xb84, 0x1, 0x0);
        gbc.writeMem(0xdd2, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x27b2, gbc.sp());
        EXPECT(0xdd4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1F 03C0
        gbc.setState(0x22cc, 0xff58, 0x2200, 0xfaad, 0x41b4, 0x4efe, 0x1, 0x0);
        gbc.writeMem(0x22cc, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xff58, gbc.sp());
        EXPECT(0x22ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1F 03C1
        gbc.setState(0xbef4, 0xe279, 0x6700, 0x47e0, 0xc838, 0x216c, 0x0, 0x1);
        gbc.writeMem(0xbef4, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xe279, gbc.sp());
        EXPECT(0xbef6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbef4));
        EXPECT(0x1f, gbc.readMem(0xbef5));
        // CB 1F 03C2
        gbc.setState(0x3f40, 0xb25, 0xea50, 0xfaa7, 0x9bba, 0x43fe, 0x1, 0x1);
        gbc.writeMem(0x3f40, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xb25, gbc.sp());
        EXPECT(0x3f42, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1F 03C3
        gbc.setState(0x809a, 0xc901, 0x9110, 0xae85, 0x1871, 0xf33b, 0x0, 0x1);
        gbc.writeMem(0x809a, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xc901, gbc.sp());
        EXPECT(0x809c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x809a));
        EXPECT(0x1f, gbc.readMem(0x809b));
        // CB 1F 03C4
        gbc.setState(0x584b, 0xf610, 0x40b0, 0x7a7b, 0x2294, 0x585, 0x0, 0x0);
        gbc.writeMem(0x584b, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xf610, gbc.sp());
        EXPECT(0x584d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1F 03C5
        gbc.setState(0xb63b, 0xc8f0, 0x4080, 0x6a73, 0x8566, 0x6d52, 0x1, 0x1);
        gbc.writeMem(0xb63b, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xc8f0, gbc.sp());
        EXPECT(0xb63d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb63b));
        EXPECT(0x1f, gbc.readMem(0xb63c));
        // CB 1F 03C6
        gbc.setState(0x402a, 0x7c08, 0x6740, 0x31b, 0x11dc, 0xecd4, 0x0, 0x1);
        gbc.writeMem(0x402a, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x7c08, gbc.sp());
        EXPECT(0x402c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 03C7
        gbc.setState(0x82ff, 0x3724, 0x39f0, 0x3132, 0xabd6, 0xf4aa, 0x1, 0x1);
        gbc.writeMem(0x82ff, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x3724, gbc.sp());
        EXPECT(0x8301, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x82ff));
        EXPECT(0x1f, gbc.readMem(0x8300));
        // CB 1F 03C8
        gbc.setState(0x3602, 0x1a5e, 0xae00, 0xa932, 0x948d, 0x769d, 0x1, 0x0);
        gbc.writeMem(0x3602, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x1a5e, gbc.sp());
        EXPECT(0x3604, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1F 03C9
        gbc.setState(0xbdf3, 0xf71b, 0x93e0, 0x5390, 0xceac, 0x4475, 0x1, 0x0);
        gbc.writeMem(0xbdf3, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xf71b, gbc.sp());
        EXPECT(0xbdf5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbdf3));
        EXPECT(0x1f, gbc.readMem(0xbdf4));
        // CB 1F 03CA
        gbc.setState(0x70f9, 0xf2ab, 0xf580, 0x659f, 0xa301, 0x183b, 0x1, 0x1);
        gbc.writeMem(0x70f9, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xf2ab, gbc.sp());
        EXPECT(0x70fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 03CB
        gbc.setState(0xc9f8, 0x25ec, 0xeb60, 0x1db4, 0x5d7d, 0x54f0, 0x1, 0x0);
        gbc.writeMem(0xc9f8, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x25ec, gbc.sp());
        EXPECT(0xc9fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc9f8));
        EXPECT(0x1f, gbc.readMem(0xc9f9));
        // CB 1F 03CD
        gbc.setState(0xa463, 0x31cd, 0x7290, 0x7237, 0x5984, 0xc4f4, 0x1, 0x1);
        gbc.writeMem(0xa463, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x31cd, gbc.sp());
        EXPECT(0xa465, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa463));
        EXPECT(0x1f, gbc.readMem(0xa464));
        // CB 1F 03CE
        gbc.setState(0x9a42, 0xf541, 0x67a0, 0x888c, 0x7c16, 0x3dae, 0x0, 0x0);
        gbc.writeMem(0x9a42, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xf541, gbc.sp());
        EXPECT(0x9a44, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a42));
        EXPECT(0x1f, gbc.readMem(0x9a43));
        // CB 1F 03CF
        gbc.setState(0xa80d, 0x6edc, 0xb470, 0x9e06, 0x708c, 0x7e0, 0x0, 0x1);
        gbc.writeMem(0xa80d, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x6edc, gbc.sp());
        EXPECT(0xa80f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa80d));
        EXPECT(0x1f, gbc.readMem(0xa80e));
        // CB 1F 03D0
        gbc.setState(0xc880, 0xf01d, 0x88d0, 0x75bf, 0xc358, 0xd47, 0x1, 0x1);
        gbc.writeMem(0xc880, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xf01d, gbc.sp());
        EXPECT(0xc882, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc880));
        EXPECT(0x1f, gbc.readMem(0xc881));
        // CB 1F 03D1
        gbc.setState(0xaed7, 0x5db7, 0x4360, 0xae60, 0x287f, 0x350d, 0x0, 0x0);
        gbc.writeMem(0xaed7, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x5db7, gbc.sp());
        EXPECT(0xaed9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaed7));
        EXPECT(0x1f, gbc.readMem(0xaed8));
        // CB 1F 03D2
        gbc.setState(0x63dd, 0xf907, 0xb8e0, 0x9e31, 0xa7e6, 0xdd8b, 0x1, 0x1);
        gbc.writeMem(0x63dd, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xf907, gbc.sp());
        EXPECT(0x63df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1F 03D3
        gbc.setState(0x5b5, 0x6534, 0x14b0, 0x5fe4, 0x79c1, 0xb2c5, 0x0, 0x0);
        gbc.writeMem(0x5b5, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x6534, gbc.sp());
        EXPECT(0x5b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1F 03D4
        gbc.setState(0xede5, 0x2bc3, 0x13d0, 0x38a9, 0x3f3e, 0xc108, 0x1, 0x1);
        gbc.writeMem(0xede5, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x2bc3, gbc.sp());
        EXPECT(0xede7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xede5));
        EXPECT(0x1f, gbc.readMem(0xede6));
        // CB 1F 03D5
        gbc.setState(0x29d2, 0x2354, 0xadf0, 0x88f8, 0x6844, 0x7b57, 0x1, 0x1);
        gbc.writeMem(0x29d2, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x2354, gbc.sp());
        EXPECT(0x29d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 03D6
        gbc.setState(0x9ada, 0x8b4c, 0xef10, 0x4826, 0x387a, 0x5202, 0x1, 0x0);
        gbc.writeMem(0x9ada, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x8b4c, gbc.sp());
        EXPECT(0x9adc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ada));
        EXPECT(0x1f, gbc.readMem(0x9adb));
        // CB 1F 03D7
        gbc.setState(0x9c05, 0x3096, 0xc020, 0x901, 0x377a, 0xf08c, 0x1, 0x0);
        gbc.writeMem(0x9c05, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x3096, gbc.sp());
        EXPECT(0x9c07, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c05));
        EXPECT(0x1f, gbc.readMem(0x9c06));
        // CB 1F 03D8
        gbc.setState(0x5db7, 0x6d86, 0xad80, 0xa503, 0x5cce, 0x5d5, 0x0, 0x0);
        gbc.writeMem(0x5db7, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x6d86, gbc.sp());
        EXPECT(0x5db9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 03D9
        gbc.setState(0x67c3, 0x708c, 0x5610, 0x50e2, 0xfbc1, 0x12cb, 0x0, 0x0);
        gbc.writeMem(0x67c3, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x708c, gbc.sp());
        EXPECT(0x67c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1F 03DA
        gbc.setState(0xddc4, 0xd723, 0xc90, 0x91ab, 0x66f2, 0xd4e6, 0x0, 0x1);
        gbc.writeMem(0xddc4, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xd723, gbc.sp());
        EXPECT(0xddc6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xddc4));
        EXPECT(0x1f, gbc.readMem(0xddc5));
        // CB 1F 03DB
        gbc.setState(0x2cff, 0x8352, 0xa1d0, 0x2a26, 0xd597, 0x7d1d, 0x1, 0x0);
        gbc.writeMem(0x2cff, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x8352, gbc.sp());
        EXPECT(0x2d01, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 03DC
        gbc.setState(0x8f94, 0x65e3, 0x50a0, 0xdc5f, 0x9e71, 0x20b6, 0x1, 0x1);
        gbc.writeMem(0x8f94, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x65e3, gbc.sp());
        EXPECT(0x8f96, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f94));
        EXPECT(0x1f, gbc.readMem(0x8f95));
        // CB 1F 03DD
        gbc.setState(0x722, 0x7080, 0x1620, 0x327d, 0xf93c, 0xd7c8, 0x0, 0x0);
        gbc.writeMem(0x722, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x7080, gbc.sp());
        EXPECT(0x724, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1F 03DE
        gbc.setState(0x399f, 0x81b, 0x7f20, 0x438b, 0xbd2b, 0x49c1, 0x0, 0x0);
        gbc.writeMem(0x399f, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x81b, gbc.sp());
        EXPECT(0x39a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1F 03DF
        gbc.setState(0x971c, 0xf628, 0x9050, 0xee09, 0x2452, 0xf270, 0x1, 0x0);
        gbc.writeMem(0x971c, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xf628, gbc.sp());
        EXPECT(0x971e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x971c));
        EXPECT(0x1f, gbc.readMem(0x971d));
        // CB 1F 03E0
        gbc.setState(0x889e, 0xd9cd, 0x9100, 0x66a1, 0x506, 0x2375, 0x0, 0x0);
        gbc.writeMem(0x889e, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xd9cd, gbc.sp());
        EXPECT(0x88a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x889e));
        EXPECT(0x1f, gbc.readMem(0x889f));
        // CB 1F 03E1
        gbc.setState(0x4dc6, 0x10e9, 0x2e20, 0xc1a7, 0xacc3, 0xb784, 0x1, 0x0);
        gbc.writeMem(0x4dc6, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x10e9, gbc.sp());
        EXPECT(0x4dc8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1F 03E2
        gbc.setState(0x9e4a, 0x3d37, 0xc3d0, 0x4eaf, 0xdcf5, 0x599, 0x1, 0x0);
        gbc.writeMem(0x9e4a, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x3d37, gbc.sp());
        EXPECT(0x9e4c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e4a));
        EXPECT(0x1f, gbc.readMem(0x9e4b));
        // CB 1F 03E5
        gbc.setState(0xc98a, 0xdf12, 0x2da0, 0xefdd, 0xe0ae, 0x958f, 0x0, 0x1);
        gbc.writeMem(0xc98a, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xdf12, gbc.sp());
        EXPECT(0xc98c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc98a));
        EXPECT(0x1f, gbc.readMem(0xc98b));
        // CB 1F 03E6
        gbc.setState(0xf24, 0x8cb2, 0xae0, 0xb1f1, 0xad2a, 0x57fa, 0x0, 0x1);
        gbc.writeMem(0xf24, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x8cb2, gbc.sp());
        EXPECT(0xf26, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1F 03E7
        gbc.setState(0x620f, 0xa2a3, 0x78a0, 0x2ee4, 0xb2bb, 0x3c1a, 0x1, 0x0);
        gbc.writeMem(0x620f, { 0xcb, 0x1f });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xa2a3, gbc.sp());
        EXPECT(0x6211, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
    }
