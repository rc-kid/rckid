    TEST(gbcemu, opcode_cb_c1) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB C1 0000
        gbc.setState(0x2ac9, 0xcdc9, 0xeaf0, 0x34a7, 0xb2b2, 0x963d, 0x1, 0x1);
        gbc.writeMem(0x2ac9, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xcdc9, gbc.sp());
        EXPECT(0x2acb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C1 0001
        gbc.setState(0xe36, 0x4644, 0xfe00, 0x5036, 0x7154, 0xcfd0, 0x1, 0x0);
        gbc.writeMem(0xe36, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x4644, gbc.sp());
        EXPECT(0xe38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C1 0002
        gbc.setState(0x70dd, 0x2208, 0xc1b0, 0x5a5b, 0xc157, 0x2a88, 0x1, 0x1);
        gbc.writeMem(0x70dd, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x2208, gbc.sp());
        EXPECT(0x70df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C1 0004
        gbc.setState(0x12b0, 0x370e, 0xf270, 0x8aef, 0x45b5, 0xa1bd, 0x1, 0x1);
        gbc.writeMem(0x12b0, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x370e, gbc.sp());
        EXPECT(0x12b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C1 0005
        gbc.setState(0xcfe2, 0xdd43, 0x4b0, 0xcdbd, 0xd6be, 0xc591, 0x0, 0x1);
        gbc.writeMem(0xcfe2, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xdd43, gbc.sp());
        EXPECT(0xcfe4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcfe2));
        EXPECT(0xc1, gbc.readMem(0xcfe3));
        // CB C1 0007
        gbc.setState(0x27d, 0x8aa6, 0x8890, 0x3a4, 0x10d, 0x1346, 0x1, 0x1);
        gbc.writeMem(0x27d, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x8aa6, gbc.sp());
        EXPECT(0x27f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C1 0008
        gbc.setState(0x5c50, 0xd196, 0x5060, 0xa0b3, 0x18f4, 0x2d64, 0x1, 0x1);
        gbc.writeMem(0x5c50, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xd196, gbc.sp());
        EXPECT(0x5c52, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C1 0009
        gbc.setState(0xdb94, 0xe70e, 0x5e20, 0x8aa2, 0x389a, 0x2b42, 0x0, 0x0);
        gbc.writeMem(0xdb94, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xe70e, gbc.sp());
        EXPECT(0xdb96, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb94));
        EXPECT(0xc1, gbc.readMem(0xdb95));
        // CB C1 000A
        gbc.setState(0x61c8, 0x274, 0x680, 0x716f, 0x5355, 0x7d1a, 0x0, 0x0);
        gbc.writeMem(0x61c8, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x274, gbc.sp());
        EXPECT(0x61ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C1 000B
        gbc.setState(0x16f7, 0xf34e, 0xe400, 0x6eae, 0xf02, 0x5bb3, 0x0, 0x0);
        gbc.writeMem(0x16f7, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xf34e, gbc.sp());
        EXPECT(0x16f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C1 000C
        gbc.setState(0x33a4, 0xb1d2, 0xe490, 0x5d4c, 0x9fa8, 0x6768, 0x0, 0x0);
        gbc.writeMem(0x33a4, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xb1d2, gbc.sp());
        EXPECT(0x33a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C1 000D
        gbc.setState(0x4a91, 0xbb45, 0x7340, 0xc4ff, 0xf9a8, 0xdeae, 0x0, 0x0);
        gbc.writeMem(0x4a91, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xbb45, gbc.sp());
        EXPECT(0x4a93, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C1 000E
        gbc.setState(0xb0f5, 0x1fc1, 0x810, 0x2f96, 0x2e5f, 0xe401, 0x0, 0x0);
        gbc.writeMem(0xb0f5, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x1fc1, gbc.sp());
        EXPECT(0xb0f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb0f5));
        EXPECT(0xc1, gbc.readMem(0xb0f6));
        // CB C1 000F
        gbc.setState(0x8274, 0xe460, 0x28e0, 0xf52f, 0x7069, 0x8c3, 0x1, 0x1);
        gbc.writeMem(0x8274, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xe460, gbc.sp());
        EXPECT(0x8276, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8274));
        EXPECT(0xc1, gbc.readMem(0x8275));
        // CB C1 0011
        gbc.setState(0x11aa, 0x890c, 0xf8b0, 0xa42a, 0x9542, 0x740e, 0x0, 0x1);
        gbc.writeMem(0x11aa, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x890c, gbc.sp());
        EXPECT(0x11ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C1 0012
        gbc.setState(0x7fe6, 0x9375, 0x2540, 0x94a3, 0xe899, 0x3289, 0x0, 0x0);
        gbc.writeMem(0x7fe6, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x9375, gbc.sp());
        EXPECT(0x7fe8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C1 0013
        gbc.setState(0xc60e, 0x6e7, 0xa190, 0x98eb, 0xe2ee, 0x8d49, 0x0, 0x1);
        gbc.writeMem(0xc60e, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x6e7, gbc.sp());
        EXPECT(0xc610, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc60e));
        EXPECT(0xc1, gbc.readMem(0xc60f));
        // CB C1 0014
        gbc.setState(0xc510, 0xb28d, 0x4050, 0xe888, 0x84e7, 0x268f, 0x1, 0x1);
        gbc.writeMem(0xc510, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xb28d, gbc.sp());
        EXPECT(0xc512, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc510));
        EXPECT(0xc1, gbc.readMem(0xc511));
        // CB C1 0015
        gbc.setState(0x52df, 0x8735, 0x6820, 0x939d, 0x3b3c, 0x926a, 0x0, 0x1);
        gbc.writeMem(0x52df, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x8735, gbc.sp());
        EXPECT(0x52e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C1 0016
        gbc.setState(0x4e96, 0x5605, 0xcd90, 0x41e4, 0x90e9, 0x4632, 0x0, 0x1);
        gbc.writeMem(0x4e96, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x5605, gbc.sp());
        EXPECT(0x4e98, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C1 0017
        gbc.setState(0x65f4, 0xf62c, 0x3ed0, 0x2605, 0x4bf5, 0xe73b, 0x1, 0x1);
        gbc.writeMem(0x65f4, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xf62c, gbc.sp());
        EXPECT(0x65f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C1 0018
        gbc.setState(0xc730, 0x46a4, 0x7620, 0x23ad, 0xc37d, 0x7774, 0x1, 0x1);
        gbc.writeMem(0xc730, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x46a4, gbc.sp());
        EXPECT(0xc732, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc730));
        EXPECT(0xc1, gbc.readMem(0xc731));
        // CB C1 0019
        gbc.setState(0xc1cf, 0x17af, 0x750, 0x3205, 0xf5ce, 0x3eb2, 0x0, 0x1);
        gbc.writeMem(0xc1cf, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x17af, gbc.sp());
        EXPECT(0xc1d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc1cf));
        EXPECT(0xc1, gbc.readMem(0xc1d0));
        // CB C1 001A
        gbc.setState(0xa218, 0x5e70, 0x30c0, 0x9d5, 0xfd73, 0x2bca, 0x1, 0x1);
        gbc.writeMem(0xa218, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x5e70, gbc.sp());
        EXPECT(0xa21a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa218));
        EXPECT(0xc1, gbc.readMem(0xa219));
        // CB C1 001B
        gbc.setState(0x1043, 0x848e, 0x3ca0, 0xe819, 0x51c9, 0x48d7, 0x1, 0x0);
        gbc.writeMem(0x1043, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x848e, gbc.sp());
        EXPECT(0x1045, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C1 001C
        gbc.setState(0x4b64, 0x35c7, 0xf0c0, 0x87d5, 0x390b, 0x98b3, 0x1, 0x0);
        gbc.writeMem(0x4b64, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x35c7, gbc.sp());
        EXPECT(0x4b66, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C1 001D
        gbc.setState(0xe0af, 0xcd2a, 0x8170, 0x64a8, 0x905d, 0xe087, 0x1, 0x0);
        gbc.writeMem(0xe0af, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xcd2a, gbc.sp());
        EXPECT(0xe0b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe0af));
        EXPECT(0xc1, gbc.readMem(0xe0b0));
        // CB C1 001E
        gbc.setState(0xdf2b, 0xde04, 0x36d0, 0x3e65, 0x185, 0x9979, 0x1, 0x1);
        gbc.writeMem(0xdf2b, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xde04, gbc.sp());
        EXPECT(0xdf2d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf2b));
        EXPECT(0xc1, gbc.readMem(0xdf2c));
        // CB C1 001F
        gbc.setState(0x950c, 0xdaa1, 0x2c20, 0xb769, 0xc7ab, 0x2c1f, 0x1, 0x1);
        gbc.writeMem(0x950c, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xdaa1, gbc.sp());
        EXPECT(0x950e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x950c));
        EXPECT(0xc1, gbc.readMem(0x950d));
        // CB C1 0020
        gbc.setState(0xd477, 0x434d, 0x1170, 0x349c, 0x16ac, 0x22ca, 0x1, 0x1);
        gbc.writeMem(0xd477, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x434d, gbc.sp());
        EXPECT(0xd479, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd477));
        EXPECT(0xc1, gbc.readMem(0xd478));
        // CB C1 0021
        gbc.setState(0xc9fc, 0x14b7, 0x10c0, 0x76ac, 0x68d6, 0xf1e8, 0x0, 0x1);
        gbc.writeMem(0xc9fc, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x14b7, gbc.sp());
        EXPECT(0xc9fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc9fc));
        EXPECT(0xc1, gbc.readMem(0xc9fd));
        // CB C1 0022
        gbc.setState(0xd664, 0x7221, 0x9df0, 0xe42c, 0xdc7, 0x9d91, 0x1, 0x1);
        gbc.writeMem(0xd664, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x7221, gbc.sp());
        EXPECT(0xd666, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd664));
        EXPECT(0xc1, gbc.readMem(0xd665));
        // CB C1 0023
        gbc.setState(0x12b, 0x2882, 0x74a0, 0x4c4c, 0x97e, 0xad5c, 0x1, 0x0);
        gbc.writeMem(0x12b, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x2882, gbc.sp());
        EXPECT(0x12d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C1 0024
        gbc.setState(0x43a4, 0x9e13, 0xf570, 0x31f, 0xc2bb, 0xc9fe, 0x0, 0x1);
        gbc.writeMem(0x43a4, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x9e13, gbc.sp());
        EXPECT(0x43a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C1 0025
        gbc.setState(0xa797, 0xac10, 0xfff0, 0x3471, 0xc805, 0x784e, 0x1, 0x0);
        gbc.writeMem(0xa797, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xac10, gbc.sp());
        EXPECT(0xa799, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa797));
        EXPECT(0xc1, gbc.readMem(0xa798));
        // CB C1 0026
        gbc.setState(0xdbf4, 0xb55b, 0xfd60, 0xfac4, 0x149b, 0x5170, 0x0, 0x1);
        gbc.writeMem(0xdbf4, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xb55b, gbc.sp());
        EXPECT(0xdbf6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdbf4));
        EXPECT(0xc1, gbc.readMem(0xdbf5));
        // CB C1 0027
        gbc.setState(0xaf7, 0xa46b, 0xddf0, 0x69c6, 0xc021, 0x8f00, 0x0, 0x0);
        gbc.writeMem(0xaf7, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xa46b, gbc.sp());
        EXPECT(0xaf9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C1 0028
        gbc.setState(0x69db, 0x2f2, 0x87e0, 0x1a6f, 0xdbf2, 0xb6b0, 0x1, 0x0);
        gbc.writeMem(0x69db, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x2f2, gbc.sp());
        EXPECT(0x69dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C1 0029
        gbc.setState(0x47b1, 0xafaf, 0x79e0, 0xe131, 0x52d6, 0xabd5, 0x0, 0x0);
        gbc.writeMem(0x47b1, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xafaf, gbc.sp());
        EXPECT(0x47b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C1 002A
        gbc.setState(0xbf06, 0xe29a, 0x83d0, 0x278, 0x9034, 0xca38, 0x0, 0x1);
        gbc.writeMem(0xbf06, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xe29a, gbc.sp());
        EXPECT(0xbf08, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf06));
        EXPECT(0xc1, gbc.readMem(0xbf07));
        // CB C1 002B
        gbc.setState(0xd19c, 0x41c6, 0xb290, 0xef4d, 0x4f87, 0xe465, 0x1, 0x1);
        gbc.writeMem(0xd19c, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x41c6, gbc.sp());
        EXPECT(0xd19e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd19c));
        EXPECT(0xc1, gbc.readMem(0xd19d));
        // CB C1 002D
        gbc.setState(0x246, 0x181d, 0xf670, 0x4763, 0xad44, 0x2b88, 0x0, 0x1);
        gbc.writeMem(0x246, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x181d, gbc.sp());
        EXPECT(0x248, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C1 002E
        gbc.setState(0x903b, 0xea1e, 0xb40, 0xaff3, 0x6235, 0xbbab, 0x0, 0x0);
        gbc.writeMem(0x903b, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xea1e, gbc.sp());
        EXPECT(0x903d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x903b));
        EXPECT(0xc1, gbc.readMem(0x903c));
        // CB C1 002F
        gbc.setState(0x591, 0xe1dc, 0x6e00, 0x5c7f, 0x1ad8, 0xd3e5, 0x1, 0x1);
        gbc.writeMem(0x591, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xe1dc, gbc.sp());
        EXPECT(0x593, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C1 0031
        gbc.setState(0xb9ab, 0xc39c, 0x9b0, 0xe82b, 0x9166, 0x235f, 0x1, 0x0);
        gbc.writeMem(0xb9ab, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xc39c, gbc.sp());
        EXPECT(0xb9ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb9ab));
        EXPECT(0xc1, gbc.readMem(0xb9ac));
        // CB C1 0032
        gbc.setState(0xdb0c, 0x5060, 0xa40, 0x7f24, 0xa21d, 0x6206, 0x0, 0x0);
        gbc.writeMem(0xdb0c, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x5060, gbc.sp());
        EXPECT(0xdb0e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb0c));
        EXPECT(0xc1, gbc.readMem(0xdb0d));
        // CB C1 0033
        gbc.setState(0x4846, 0x9d3b, 0xaa20, 0x177, 0x259b, 0x2ee0, 0x0, 0x0);
        gbc.writeMem(0x4846, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x9d3b, gbc.sp());
        EXPECT(0x4848, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C1 0034
        gbc.setState(0xc080, 0xe827, 0xe6c0, 0x9c4f, 0x79c5, 0xf674, 0x0, 0x0);
        gbc.writeMem(0xc080, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xe827, gbc.sp());
        EXPECT(0xc082, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc080));
        EXPECT(0xc1, gbc.readMem(0xc081));
        // CB C1 0035
        gbc.setState(0x45c4, 0xd9c8, 0xdb50, 0x8bc4, 0xf1f4, 0x6717, 0x0, 0x1);
        gbc.writeMem(0x45c4, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xd9c8, gbc.sp());
        EXPECT(0x45c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C1 0036
        gbc.setState(0x69b4, 0x3d6f, 0xa210, 0x5a21, 0x1b4, 0x5294, 0x1, 0x1);
        gbc.writeMem(0x69b4, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x3d6f, gbc.sp());
        EXPECT(0x69b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C1 0037
        gbc.setState(0xb1d4, 0x4a7, 0x5da0, 0x123f, 0xd53c, 0x280d, 0x1, 0x1);
        gbc.writeMem(0xb1d4, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x4a7, gbc.sp());
        EXPECT(0xb1d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb1d4));
        EXPECT(0xc1, gbc.readMem(0xb1d5));
        // CB C1 0038
        gbc.setState(0x5b7f, 0x45b9, 0xf650, 0xe6f4, 0x966c, 0x1ff, 0x0, 0x1);
        gbc.writeMem(0x5b7f, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x45b9, gbc.sp());
        EXPECT(0x5b81, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C1 0039
        gbc.setState(0x501, 0xeec6, 0x3a50, 0x548b, 0xd207, 0x54ae, 0x0, 0x0);
        gbc.writeMem(0x501, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xeec6, gbc.sp());
        EXPECT(0x503, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C1 003A
        gbc.setState(0x4daa, 0x52ac, 0x7970, 0xf73c, 0xa582, 0xa6ab, 0x0, 0x1);
        gbc.writeMem(0x4daa, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x52ac, gbc.sp());
        EXPECT(0x4dac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C1 003B
        gbc.setState(0x95f4, 0x6999, 0x1180, 0x969a, 0x2f22, 0x6731, 0x1, 0x1);
        gbc.writeMem(0x95f4, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x6999, gbc.sp());
        EXPECT(0x95f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x95f4));
        EXPECT(0xc1, gbc.readMem(0x95f5));
        // CB C1 003C
        gbc.setState(0x6ac8, 0x3944, 0x1360, 0x73f4, 0x6f0, 0x8689, 0x1, 0x0);
        gbc.writeMem(0x6ac8, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x3944, gbc.sp());
        EXPECT(0x6aca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C1 003D
        gbc.setState(0x9fa, 0x9a3d, 0xd4b0, 0x9704, 0x87d7, 0x846c, 0x0, 0x1);
        gbc.writeMem(0x9fa, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x9a3d, gbc.sp());
        EXPECT(0x9fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C1 003E
        gbc.setState(0xa1ab, 0x2044, 0x5dc0, 0xdfe7, 0x282f, 0x275f, 0x1, 0x1);
        gbc.writeMem(0xa1ab, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x2044, gbc.sp());
        EXPECT(0xa1ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa1ab));
        EXPECT(0xc1, gbc.readMem(0xa1ac));
        // CB C1 003F
        gbc.setState(0x4369, 0x753a, 0x8960, 0x7ab, 0x409a, 0x4a4f, 0x0, 0x0);
        gbc.writeMem(0x4369, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x753a, gbc.sp());
        EXPECT(0x436b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C1 0040
        gbc.setState(0xd5e0, 0x932e, 0xfc10, 0xc6ee, 0xe36e, 0x5504, 0x1, 0x0);
        gbc.writeMem(0xd5e0, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x932e, gbc.sp());
        EXPECT(0xd5e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd5e0));
        EXPECT(0xc1, gbc.readMem(0xd5e1));
        // CB C1 0041
        gbc.setState(0x6f27, 0x1260, 0x6a20, 0x5693, 0xaa61, 0xc900, 0x0, 0x0);
        gbc.writeMem(0x6f27, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x1260, gbc.sp());
        EXPECT(0x6f29, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C1 0042
        gbc.setState(0xe511, 0x7cc4, 0x1590, 0xf98e, 0xb3a, 0x7af, 0x0, 0x0);
        gbc.writeMem(0xe511, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x7cc4, gbc.sp());
        EXPECT(0xe513, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe511));
        EXPECT(0xc1, gbc.readMem(0xe512));
        // CB C1 0043
        gbc.setState(0xaae, 0x4e16, 0xca40, 0x4e92, 0x8706, 0x6e1, 0x0, 0x0);
        gbc.writeMem(0xaae, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x4e16, gbc.sp());
        EXPECT(0xab0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C1 0044
        gbc.setState(0xe21c, 0x4f39, 0x18e0, 0xc92c, 0xa961, 0x3beb, 0x1, 0x0);
        gbc.writeMem(0xe21c, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x4f39, gbc.sp());
        EXPECT(0xe21e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe21c));
        EXPECT(0xc1, gbc.readMem(0xe21d));
        // CB C1 0045
        gbc.setState(0x3da2, 0x1764, 0x3c60, 0x6732, 0x4cb2, 0x969, 0x1, 0x1);
        gbc.writeMem(0x3da2, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x1764, gbc.sp());
        EXPECT(0x3da4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C1 0046
        gbc.setState(0x5c11, 0xa446, 0x9f30, 0xcb54, 0x2f6f, 0x253, 0x0, 0x1);
        gbc.writeMem(0x5c11, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xa446, gbc.sp());
        EXPECT(0x5c13, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C1 0047
        gbc.setState(0xd4a4, 0xf6ec, 0xb210, 0xf0ac, 0x3b55, 0x1bff, 0x1, 0x1);
        gbc.writeMem(0xd4a4, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xf6ec, gbc.sp());
        EXPECT(0xd4a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd4a4));
        EXPECT(0xc1, gbc.readMem(0xd4a5));
        // CB C1 0048
        gbc.setState(0xc851, 0x9705, 0x7b00, 0x60b8, 0xcff5, 0x6406, 0x0, 0x1);
        gbc.writeMem(0xc851, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x9705, gbc.sp());
        EXPECT(0xc853, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc851));
        EXPECT(0xc1, gbc.readMem(0xc852));
        // CB C1 0049
        gbc.setState(0xa149, 0xce17, 0x9ad0, 0xf912, 0x78fd, 0x5404, 0x0, 0x1);
        gbc.writeMem(0xa149, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xce17, gbc.sp());
        EXPECT(0xa14b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa149));
        EXPECT(0xc1, gbc.readMem(0xa14a));
        // CB C1 004A
        gbc.setState(0xaf73, 0x4e9a, 0xe6e0, 0x4267, 0x378d, 0x461a, 0x1, 0x1);
        gbc.writeMem(0xaf73, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x4e9a, gbc.sp());
        EXPECT(0xaf75, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf73));
        EXPECT(0xc1, gbc.readMem(0xaf74));
        // CB C1 004B
        gbc.setState(0x59f4, 0x3bfc, 0xe130, 0x7882, 0x9d08, 0xd749, 0x0, 0x0);
        gbc.writeMem(0x59f4, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x3bfc, gbc.sp());
        EXPECT(0x59f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C1 004C
        gbc.setState(0x16e5, 0x6312, 0x5ee0, 0xf247, 0x69e9, 0xc4ff, 0x0, 0x1);
        gbc.writeMem(0x16e5, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x6312, gbc.sp());
        EXPECT(0x16e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C1 004D
        gbc.setState(0x8937, 0x7878, 0xbcf0, 0xc3d4, 0x766, 0x46ea, 0x0, 0x0);
        gbc.writeMem(0x8937, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x7878, gbc.sp());
        EXPECT(0x8939, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8937));
        EXPECT(0xc1, gbc.readMem(0x8938));
        // CB C1 004E
        gbc.setState(0xa3ae, 0x3030, 0x730, 0x367b, 0x194e, 0x9bfc, 0x0, 0x0);
        gbc.writeMem(0xa3ae, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x3030, gbc.sp());
        EXPECT(0xa3b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa3ae));
        EXPECT(0xc1, gbc.readMem(0xa3af));
        // CB C1 004F
        gbc.setState(0x4655, 0x2cf, 0xf5b0, 0xa540, 0x35a8, 0xf6f0, 0x0, 0x1);
        gbc.writeMem(0x4655, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x2cf, gbc.sp());
        EXPECT(0x4657, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C1 0050
        gbc.setState(0x4a2b, 0xb5a3, 0x5090, 0x869a, 0xdcf3, 0x83db, 0x0, 0x1);
        gbc.writeMem(0x4a2b, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xb5a3, gbc.sp());
        EXPECT(0x4a2d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C1 0051
        gbc.setState(0xa973, 0x46a2, 0xb8d0, 0x2978, 0xa211, 0x4f4f, 0x0, 0x1);
        gbc.writeMem(0xa973, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x46a2, gbc.sp());
        EXPECT(0xa975, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa973));
        EXPECT(0xc1, gbc.readMem(0xa974));
        // CB C1 0052
        gbc.setState(0xa38c, 0x7613, 0xe8e0, 0x3b6c, 0xe80c, 0xba14, 0x0, 0x1);
        gbc.writeMem(0xa38c, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x7613, gbc.sp());
        EXPECT(0xa38e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa38c));
        EXPECT(0xc1, gbc.readMem(0xa38d));
        // CB C1 0053
        gbc.setState(0x88b0, 0x777, 0x710, 0xc7d0, 0x8b9e, 0x5486, 0x0, 0x1);
        gbc.writeMem(0x88b0, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x777, gbc.sp());
        EXPECT(0x88b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x88b0));
        EXPECT(0xc1, gbc.readMem(0x88b1));
        // CB C1 0054
        gbc.setState(0x4524, 0x7838, 0x69a0, 0x6ac2, 0x9b82, 0x7d49, 0x0, 0x0);
        gbc.writeMem(0x4524, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x7838, gbc.sp());
        EXPECT(0x4526, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C1 0055
        gbc.setState(0x8f8, 0xa768, 0xdbc0, 0x3026, 0x5b09, 0xf650, 0x0, 0x0);
        gbc.writeMem(0x8f8, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xa768, gbc.sp());
        EXPECT(0x8fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C1 0056
        gbc.setState(0xe69d, 0x7c78, 0x1dd0, 0x55fb, 0x32bf, 0xa665, 0x0, 0x1);
        gbc.writeMem(0xe69d, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x7c78, gbc.sp());
        EXPECT(0xe69f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe69d));
        EXPECT(0xc1, gbc.readMem(0xe69e));
        // CB C1 0057
        gbc.setState(0x713d, 0xfd4f, 0xdb50, 0xb4aa, 0xfeb8, 0xd70f, 0x1, 0x1);
        gbc.writeMem(0x713d, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xfd4f, gbc.sp());
        EXPECT(0x713f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C1 0058
        gbc.setState(0x97f3, 0xd724, 0xbd50, 0xeeed, 0x1d5d, 0xd61, 0x0, 0x1);
        gbc.writeMem(0x97f3, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xd724, gbc.sp());
        EXPECT(0x97f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x97f3));
        EXPECT(0xc1, gbc.readMem(0x97f4));
        // CB C1 0059
        gbc.setState(0x20ea, 0x13, 0x4b0, 0xa56b, 0xaca5, 0x256b, 0x1, 0x1);
        gbc.writeMem(0x20ea, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x13, gbc.sp());
        EXPECT(0x20ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C1 005A
        gbc.setState(0xb193, 0x54fa, 0xb200, 0xe30f, 0x266c, 0x8873, 0x0, 0x1);
        gbc.writeMem(0xb193, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x54fa, gbc.sp());
        EXPECT(0xb195, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb193));
        EXPECT(0xc1, gbc.readMem(0xb194));
        // CB C1 005B
        gbc.setState(0x4871, 0xe86d, 0x5c60, 0xb2f8, 0xe26d, 0xbe54, 0x0, 0x1);
        gbc.writeMem(0x4871, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xe86d, gbc.sp());
        EXPECT(0x4873, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C1 005C
        gbc.setState(0xaaec, 0x54a3, 0xf480, 0x8a6d, 0xd5d6, 0x52bb, 0x1, 0x0);
        gbc.writeMem(0xaaec, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x54a3, gbc.sp());
        EXPECT(0xaaee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaaec));
        EXPECT(0xc1, gbc.readMem(0xaaed));
        // CB C1 005D
        gbc.setState(0x751d, 0x4079, 0x7c20, 0x5be4, 0x3be4, 0xfd88, 0x1, 0x0);
        gbc.writeMem(0x751d, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x4079, gbc.sp());
        EXPECT(0x751f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C1 005E
        gbc.setState(0xe91d, 0x8a51, 0x4c70, 0x2e73, 0x47be, 0x6c, 0x0, 0x0);
        gbc.writeMem(0xe91d, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x8a51, gbc.sp());
        EXPECT(0xe91f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe91d));
        EXPECT(0xc1, gbc.readMem(0xe91e));
        // CB C1 005F
        gbc.setState(0xa95, 0xf365, 0xdb0, 0x4e02, 0x6b5e, 0x960, 0x1, 0x0);
        gbc.writeMem(0xa95, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xf365, gbc.sp());
        EXPECT(0xa97, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C1 0060
        gbc.setState(0xb3e2, 0x39f9, 0xe1b0, 0x6a45, 0xf732, 0x253, 0x0, 0x0);
        gbc.writeMem(0xb3e2, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x39f9, gbc.sp());
        EXPECT(0xb3e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb3e2));
        EXPECT(0xc1, gbc.readMem(0xb3e3));
        // CB C1 0061
        gbc.setState(0xd4de, 0xf770, 0x5370, 0x2346, 0xc4d2, 0xbd05, 0x0, 0x0);
        gbc.writeMem(0xd4de, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xf770, gbc.sp());
        EXPECT(0xd4e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd4de));
        EXPECT(0xc1, gbc.readMem(0xd4df));
        // CB C1 0062
        gbc.setState(0x9c5d, 0xbabb, 0xf180, 0x59fe, 0x9582, 0xb945, 0x0, 0x0);
        gbc.writeMem(0x9c5d, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xbabb, gbc.sp());
        EXPECT(0x9c5f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c5d));
        EXPECT(0xc1, gbc.readMem(0x9c5e));
        // CB C1 0063
        gbc.setState(0x92d1, 0x469b, 0xeb60, 0x2511, 0x6f27, 0xd20b, 0x1, 0x0);
        gbc.writeMem(0x92d1, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x469b, gbc.sp());
        EXPECT(0x92d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x92d1));
        EXPECT(0xc1, gbc.readMem(0x92d2));
        // CB C1 0064
        gbc.setState(0xc958, 0x220b, 0x6ea0, 0xe558, 0x41db, 0x381e, 0x1, 0x1);
        gbc.writeMem(0xc958, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x220b, gbc.sp());
        EXPECT(0xc95a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc958));
        EXPECT(0xc1, gbc.readMem(0xc959));
        // CB C1 0065
        gbc.setState(0xdbc4, 0x8802, 0xb4f0, 0x2165, 0x9743, 0xdf1f, 0x0, 0x0);
        gbc.writeMem(0xdbc4, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x8802, gbc.sp());
        EXPECT(0xdbc6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdbc4));
        EXPECT(0xc1, gbc.readMem(0xdbc5));
        // CB C1 0066
        gbc.setState(0xb4fc, 0x7a63, 0xcd10, 0xaab1, 0x5b86, 0x797, 0x1, 0x1);
        gbc.writeMem(0xb4fc, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x7a63, gbc.sp());
        EXPECT(0xb4fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb4fc));
        EXPECT(0xc1, gbc.readMem(0xb4fd));
        // CB C1 0067
        gbc.setState(0xdaac, 0xbb22, 0x6c10, 0x8226, 0x1e5f, 0x97a3, 0x0, 0x0);
        gbc.writeMem(0xdaac, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xbb22, gbc.sp());
        EXPECT(0xdaae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdaac));
        EXPECT(0xc1, gbc.readMem(0xdaad));
        // CB C1 0068
        gbc.setState(0x468, 0xe3, 0xf0b0, 0x6f7, 0xdb1a, 0xbf04, 0x0, 0x0);
        gbc.writeMem(0x468, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xe3, gbc.sp());
        EXPECT(0x46a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C1 0069
        gbc.setState(0xd990, 0x71a4, 0x2460, 0x335c, 0x2c2d, 0xde10, 0x0, 0x0);
        gbc.writeMem(0xd990, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x71a4, gbc.sp());
        EXPECT(0xd992, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd990));
        EXPECT(0xc1, gbc.readMem(0xd991));
        // CB C1 006A
        gbc.setState(0x7e85, 0xf173, 0xf8d0, 0xfe98, 0xaeef, 0x633c, 0x1, 0x0);
        gbc.writeMem(0x7e85, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xf173, gbc.sp());
        EXPECT(0x7e87, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C1 006B
        gbc.setState(0x8c65, 0xd07d, 0xd1c0, 0xc0db, 0x62ce, 0xfcac, 0x0, 0x0);
        gbc.writeMem(0x8c65, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xd07d, gbc.sp());
        EXPECT(0x8c67, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c65));
        EXPECT(0xc1, gbc.readMem(0x8c66));
        // CB C1 006C
        gbc.setState(0xd291, 0xc66, 0xb7d0, 0x19d, 0x4d86, 0x97c5, 0x0, 0x0);
        gbc.writeMem(0xd291, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xc66, gbc.sp());
        EXPECT(0xd293, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd291));
        EXPECT(0xc1, gbc.readMem(0xd292));
        // CB C1 006D
        gbc.setState(0xb2a, 0x88b9, 0x4230, 0xa426, 0x15e5, 0x4455, 0x1, 0x0);
        gbc.writeMem(0xb2a, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x88b9, gbc.sp());
        EXPECT(0xb2c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C1 006E
        gbc.setState(0x53bb, 0x5b0d, 0xdb20, 0x1859, 0xa248, 0xec5e, 0x1, 0x0);
        gbc.writeMem(0x53bb, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x5b0d, gbc.sp());
        EXPECT(0x53bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C1 0070
        gbc.setState(0x31fa, 0x1b6f, 0xd40, 0xc831, 0x77ac, 0x1fa, 0x0, 0x1);
        gbc.writeMem(0x31fa, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x1b6f, gbc.sp());
        EXPECT(0x31fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C1 0071
        gbc.setState(0x8390, 0x8335, 0x4fe0, 0x277c, 0x2d5e, 0x8817, 0x0, 0x0);
        gbc.writeMem(0x8390, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x8335, gbc.sp());
        EXPECT(0x8392, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8390));
        EXPECT(0xc1, gbc.readMem(0x8391));
        // CB C1 0072
        gbc.setState(0x4de9, 0xd81d, 0xe0, 0x48f2, 0xc330, 0x5330, 0x0, 0x0);
        gbc.writeMem(0x4de9, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xd81d, gbc.sp());
        EXPECT(0x4deb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C1 0073
        gbc.setState(0x1e4f, 0x5f21, 0xf4c0, 0x60da, 0x7feb, 0x6994, 0x1, 0x1);
        gbc.writeMem(0x1e4f, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x5f21, gbc.sp());
        EXPECT(0x1e51, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C1 0074
        gbc.setState(0x17a8, 0x9c0c, 0x1d60, 0x5af2, 0x4611, 0x8d29, 0x1, 0x1);
        gbc.writeMem(0x17a8, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x9c0c, gbc.sp());
        EXPECT(0x17aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C1 0075
        gbc.setState(0x8141, 0xa765, 0xb910, 0xc3a, 0xe0a7, 0xdb3c, 0x0, 0x1);
        gbc.writeMem(0x8141, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xa765, gbc.sp());
        EXPECT(0x8143, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8141));
        EXPECT(0xc1, gbc.readMem(0x8142));
        // CB C1 0076
        gbc.setState(0xcf07, 0xd5fc, 0x7d20, 0x1ad0, 0xcee2, 0x4105, 0x0, 0x1);
        gbc.writeMem(0xcf07, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xd5fc, gbc.sp());
        EXPECT(0xcf09, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf07));
        EXPECT(0xc1, gbc.readMem(0xcf08));
        // CB C1 0077
        gbc.setState(0x503d, 0xb679, 0x5700, 0xfe80, 0xb92b, 0x1423, 0x0, 0x1);
        gbc.writeMem(0x503d, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xb679, gbc.sp());
        EXPECT(0x503f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C1 0078
        gbc.setState(0xda8e, 0x989a, 0x2420, 0x5b32, 0xf25c, 0x7216, 0x1, 0x0);
        gbc.writeMem(0xda8e, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x989a, gbc.sp());
        EXPECT(0xda90, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda8e));
        EXPECT(0xc1, gbc.readMem(0xda8f));
        // CB C1 0079
        gbc.setState(0xd03f, 0xe55d, 0xf880, 0xce2e, 0xf4b0, 0x63b, 0x0, 0x1);
        gbc.writeMem(0xd03f, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xe55d, gbc.sp());
        EXPECT(0xd041, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd03f));
        EXPECT(0xc1, gbc.readMem(0xd040));
        // CB C1 007A
        gbc.setState(0x1861, 0x331, 0x9830, 0x5c78, 0xe290, 0xa9d6, 0x0, 0x1);
        gbc.writeMem(0x1861, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x331, gbc.sp());
        EXPECT(0x1863, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C1 007B
        gbc.setState(0x53d4, 0x5675, 0xb610, 0x2bb1, 0x48a5, 0x2fc6, 0x0, 0x1);
        gbc.writeMem(0x53d4, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x5675, gbc.sp());
        EXPECT(0x53d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C1 007C
        gbc.setState(0x5136, 0xd585, 0xd5d0, 0x4d21, 0xe3ce, 0xed2a, 0x0, 0x0);
        gbc.writeMem(0x5136, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xd585, gbc.sp());
        EXPECT(0x5138, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C1 007D
        gbc.setState(0xe232, 0x64b5, 0x6680, 0x2683, 0xd1ec, 0xd62e, 0x0, 0x1);
        gbc.writeMem(0xe232, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x64b5, gbc.sp());
        EXPECT(0xe234, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe232));
        EXPECT(0xc1, gbc.readMem(0xe233));
        // CB C1 007E
        gbc.setState(0x6f65, 0x1a14, 0xbba0, 0x4927, 0xb35c, 0x55a4, 0x0, 0x0);
        gbc.writeMem(0x6f65, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x1a14, gbc.sp());
        EXPECT(0x6f67, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C1 007F
        gbc.setState(0x1c8f, 0xe403, 0xdba0, 0x1da2, 0x39be, 0xbd44, 0x1, 0x0);
        gbc.writeMem(0x1c8f, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xe403, gbc.sp());
        EXPECT(0x1c91, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C1 0080
        gbc.setState(0x6c78, 0x4743, 0xb060, 0xb4b9, 0xe726, 0x6fc8, 0x0, 0x1);
        gbc.writeMem(0x6c78, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x4743, gbc.sp());
        EXPECT(0x6c7a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C1 0081
        gbc.setState(0xcb86, 0xb2d6, 0xdd60, 0x69bd, 0xd1c8, 0xacd1, 0x1, 0x1);
        gbc.writeMem(0xcb86, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xb2d6, gbc.sp());
        EXPECT(0xcb88, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb86));
        EXPECT(0xc1, gbc.readMem(0xcb87));
        // CB C1 0082
        gbc.setState(0x1b41, 0x7df3, 0x44b0, 0xc82b, 0x422f, 0x4707, 0x1, 0x1);
        gbc.writeMem(0x1b41, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x7df3, gbc.sp());
        EXPECT(0x1b43, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C1 0083
        gbc.setState(0x232, 0x5506, 0xe8d0, 0xf6cc, 0x9601, 0xc614, 0x1, 0x1);
        gbc.writeMem(0x232, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x5506, gbc.sp());
        EXPECT(0x234, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C1 0084
        gbc.setState(0x62a7, 0x97de, 0xe380, 0x3bb3, 0x4022, 0x664f, 0x1, 0x1);
        gbc.writeMem(0x62a7, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x97de, gbc.sp());
        EXPECT(0x62a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C1 0085
        gbc.setState(0xc341, 0x6ac3, 0xdac0, 0xc721, 0x2cc2, 0x17cc, 0x0, 0x1);
        gbc.writeMem(0xc341, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x6ac3, gbc.sp());
        EXPECT(0xc343, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc341));
        EXPECT(0xc1, gbc.readMem(0xc342));
        // CB C1 0086
        gbc.setState(0x1617, 0x80d7, 0x81b0, 0x52a2, 0x7b28, 0x16d6, 0x1, 0x1);
        gbc.writeMem(0x1617, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x80d7, gbc.sp());
        EXPECT(0x1619, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C1 0087
        gbc.setState(0x144c, 0xbcd4, 0xaf40, 0x2eea, 0xcd0e, 0x284e, 0x0, 0x1);
        gbc.writeMem(0x144c, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xbcd4, gbc.sp());
        EXPECT(0x144e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C1 0088
        gbc.setState(0x64f7, 0xc238, 0x6d40, 0x1e01, 0xcd00, 0x2d4, 0x1, 0x1);
        gbc.writeMem(0x64f7, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xc238, gbc.sp());
        EXPECT(0x64f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C1 008A
        gbc.setState(0xc9fd, 0xf9f, 0xdd40, 0x84e2, 0x5a9b, 0xfd83, 0x1, 0x0);
        gbc.writeMem(0xc9fd, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xf9f, gbc.sp());
        EXPECT(0xc9ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc9fd));
        EXPECT(0xc1, gbc.readMem(0xc9fe));
        // CB C1 008B
        gbc.setState(0xc7da, 0xcbac, 0xcab0, 0xa501, 0xe271, 0x1808, 0x0, 0x1);
        gbc.writeMem(0xc7da, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xcbac, gbc.sp());
        EXPECT(0xc7dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc7da));
        EXPECT(0xc1, gbc.readMem(0xc7db));
        // CB C1 008C
        gbc.setState(0xe7cb, 0x1560, 0x87a0, 0x9692, 0x9ef6, 0x2c36, 0x1, 0x1);
        gbc.writeMem(0xe7cb, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x1560, gbc.sp());
        EXPECT(0xe7cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe7cb));
        EXPECT(0xc1, gbc.readMem(0xe7cc));
        // CB C1 008D
        gbc.setState(0xb473, 0x779f, 0x2e30, 0x6564, 0x5e99, 0x2dde, 0x0, 0x1);
        gbc.writeMem(0xb473, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x779f, gbc.sp());
        EXPECT(0xb475, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb473));
        EXPECT(0xc1, gbc.readMem(0xb474));
        // CB C1 008E
        gbc.setState(0x131, 0x1320, 0xb600, 0x3860, 0xdaa7, 0x49f1, 0x1, 0x1);
        gbc.writeMem(0x131, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x1320, gbc.sp());
        EXPECT(0x133, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C1 008F
        gbc.setState(0x5439, 0xb51, 0x49e0, 0xd7d7, 0x8a83, 0x62fd, 0x1, 0x0);
        gbc.writeMem(0x5439, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xb51, gbc.sp());
        EXPECT(0x543b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C1 0090
        gbc.setState(0x1a92, 0x6c1f, 0xd730, 0x8261, 0x8d9, 0x1407, 0x1, 0x0);
        gbc.writeMem(0x1a92, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x6c1f, gbc.sp());
        EXPECT(0x1a94, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C1 0091
        gbc.setState(0xb1a1, 0x34df, 0x2c00, 0x3aa6, 0x6c18, 0xf70a, 0x0, 0x0);
        gbc.writeMem(0xb1a1, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x34df, gbc.sp());
        EXPECT(0xb1a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb1a1));
        EXPECT(0xc1, gbc.readMem(0xb1a2));
        // CB C1 0093
        gbc.setState(0x6df0, 0x7410, 0x1ea0, 0xb79f, 0xd0c0, 0xf270, 0x1, 0x0);
        gbc.writeMem(0x6df0, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x7410, gbc.sp());
        EXPECT(0x6df2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C1 0094
        gbc.setState(0x8ec4, 0xf355, 0x4e30, 0x829c, 0x2270, 0x9e33, 0x1, 0x1);
        gbc.writeMem(0x8ec4, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xf355, gbc.sp());
        EXPECT(0x8ec6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ec4));
        EXPECT(0xc1, gbc.readMem(0x8ec5));
        // CB C1 0095
        gbc.setState(0x86b1, 0x16e2, 0xa7a0, 0x5be5, 0x6de4, 0x5643, 0x1, 0x1);
        gbc.writeMem(0x86b1, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x16e2, gbc.sp());
        EXPECT(0x86b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x86b1));
        EXPECT(0xc1, gbc.readMem(0x86b2));
        // CB C1 0096
        gbc.setState(0x6bce, 0x6a03, 0xd2a0, 0xefc, 0xc89c, 0x2559, 0x1, 0x0);
        gbc.writeMem(0x6bce, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x6a03, gbc.sp());
        EXPECT(0x6bd0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C1 0097
        gbc.setState(0xa1a, 0x9043, 0x2980, 0x1196, 0x3963, 0x32ee, 0x0, 0x1);
        gbc.writeMem(0xa1a, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x9043, gbc.sp());
        EXPECT(0xa1c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C1 0098
        gbc.setState(0x69de, 0x5959, 0x94a0, 0x1e37, 0x90d6, 0x32da, 0x0, 0x0);
        gbc.writeMem(0x69de, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x5959, gbc.sp());
        EXPECT(0x69e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C1 0099
        gbc.setState(0x4236, 0x70af, 0x5f30, 0xfa64, 0xc02d, 0x603, 0x0, 0x1);
        gbc.writeMem(0x4236, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x70af, gbc.sp());
        EXPECT(0x4238, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C1 009A
        gbc.setState(0xff0, 0xe4fa, 0x8fc0, 0x7846, 0xcb71, 0xbfbd, 0x0, 0x0);
        gbc.writeMem(0xff0, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xe4fa, gbc.sp());
        EXPECT(0xff2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C1 009B
        gbc.setState(0x513f, 0x18e, 0xa030, 0x9da3, 0x2015, 0xeb1, 0x1, 0x0);
        gbc.writeMem(0x513f, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x18e, gbc.sp());
        EXPECT(0x5141, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C1 009C
        gbc.setState(0x1520, 0x2070, 0xb0b0, 0xa3, 0x92f4, 0x4c4d, 0x0, 0x1);
        gbc.writeMem(0x1520, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x2070, gbc.sp());
        EXPECT(0x1522, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C1 009D
        gbc.setState(0xa969, 0xa022, 0xffc0, 0x6e68, 0xa76b, 0xbabe, 0x0, 0x1);
        gbc.writeMem(0xa969, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xa022, gbc.sp());
        EXPECT(0xa96b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa969));
        EXPECT(0xc1, gbc.readMem(0xa96a));
        // CB C1 009E
        gbc.setState(0x9961, 0x7676, 0xaaa0, 0x7c49, 0xb26b, 0x17a5, 0x0, 0x0);
        gbc.writeMem(0x9961, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x7676, gbc.sp());
        EXPECT(0x9963, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9961));
        EXPECT(0xc1, gbc.readMem(0x9962));
        // CB C1 009F
        gbc.setState(0x1247, 0x5349, 0xe000, 0x39cb, 0xd8b, 0x1477, 0x1, 0x0);
        gbc.writeMem(0x1247, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x5349, gbc.sp());
        EXPECT(0x1249, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C1 00A0
        gbc.setState(0x600d, 0x8362, 0x93b0, 0xeef0, 0x861a, 0xa72e, 0x1, 0x0);
        gbc.writeMem(0x600d, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x8362, gbc.sp());
        EXPECT(0x600f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C1 00A2
        gbc.setState(0xefc0, 0x43b8, 0x8760, 0x26c6, 0x627d, 0x1146, 0x1, 0x0);
        gbc.writeMem(0xefc0, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x43b8, gbc.sp());
        EXPECT(0xefc2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xefc0));
        EXPECT(0xc1, gbc.readMem(0xefc1));
        // CB C1 00A4
        gbc.setState(0x1354, 0xec12, 0xa480, 0xc6f2, 0xcdc7, 0xf167, 0x1, 0x0);
        gbc.writeMem(0x1354, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xec12, gbc.sp());
        EXPECT(0x1356, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C1 00A5
        gbc.setState(0xdf21, 0xf6c1, 0x99d0, 0x1e92, 0x7481, 0x2ca0, 0x1, 0x1);
        gbc.writeMem(0xdf21, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xf6c1, gbc.sp());
        EXPECT(0xdf23, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf21));
        EXPECT(0xc1, gbc.readMem(0xdf22));
        // CB C1 00A6
        gbc.setState(0xdc1c, 0xaea9, 0xf1b0, 0xd43c, 0x41, 0x36e, 0x1, 0x1);
        gbc.writeMem(0xdc1c, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xaea9, gbc.sp());
        EXPECT(0xdc1e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc1c));
        EXPECT(0xc1, gbc.readMem(0xdc1d));
        // CB C1 00A7
        gbc.setState(0xe6fa, 0x89fc, 0xf2c0, 0xb1ba, 0xba81, 0x3c6a, 0x1, 0x1);
        gbc.writeMem(0xe6fa, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x89fc, gbc.sp());
        EXPECT(0xe6fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe6fa));
        EXPECT(0xc1, gbc.readMem(0xe6fb));
        // CB C1 00A8
        gbc.setState(0x9144, 0x93ab, 0x2bc0, 0xcb2f, 0x5d54, 0x412c, 0x0, 0x1);
        gbc.writeMem(0x9144, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x93ab, gbc.sp());
        EXPECT(0x9146, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9144));
        EXPECT(0xc1, gbc.readMem(0x9145));
        // CB C1 00A9
        gbc.setState(0xb382, 0x608c, 0x44c0, 0x45b1, 0xf66f, 0x5c0e, 0x1, 0x1);
        gbc.writeMem(0xb382, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x608c, gbc.sp());
        EXPECT(0xb384, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb382));
        EXPECT(0xc1, gbc.readMem(0xb383));
        // CB C1 00AA
        gbc.setState(0xd70e, 0xd287, 0x9180, 0xd0bd, 0xed56, 0x89c7, 0x0, 0x1);
        gbc.writeMem(0xd70e, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xd287, gbc.sp());
        EXPECT(0xd710, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd70e));
        EXPECT(0xc1, gbc.readMem(0xd70f));
        // CB C1 00AB
        gbc.setState(0x734, 0x4f07, 0x91e0, 0x6438, 0xaafb, 0x3e60, 0x0, 0x1);
        gbc.writeMem(0x734, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x4f07, gbc.sp());
        EXPECT(0x736, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C1 00AC
        gbc.setState(0x51b5, 0x6f67, 0x9880, 0x6036, 0xafc1, 0xc766, 0x0, 0x1);
        gbc.writeMem(0x51b5, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x6f67, gbc.sp());
        EXPECT(0x51b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C1 00AD
        gbc.setState(0x2106, 0xdd3c, 0x610, 0xb897, 0x9ebb, 0x39fc, 0x0, 0x1);
        gbc.writeMem(0x2106, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xdd3c, gbc.sp());
        EXPECT(0x2108, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C1 00AE
        gbc.setState(0xb7b7, 0x31c5, 0x6140, 0x5e91, 0x165f, 0xa19b, 0x0, 0x0);
        gbc.writeMem(0xb7b7, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x31c5, gbc.sp());
        EXPECT(0xb7b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb7b7));
        EXPECT(0xc1, gbc.readMem(0xb7b8));
        // CB C1 00AF
        gbc.setState(0x4910, 0x1772, 0x78c0, 0x151e, 0x8f64, 0x1133, 0x0, 0x1);
        gbc.writeMem(0x4910, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x1772, gbc.sp());
        EXPECT(0x4912, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C1 00B0
        gbc.setState(0x448, 0xa846, 0x980, 0xa6b9, 0x83f3, 0xd54f, 0x1, 0x1);
        gbc.writeMem(0x448, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xa846, gbc.sp());
        EXPECT(0x44a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C1 00B1
        gbc.setState(0x5ce0, 0xb774, 0xca60, 0x5f2, 0x2f7, 0xd42, 0x0, 0x1);
        gbc.writeMem(0x5ce0, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xb774, gbc.sp());
        EXPECT(0x5ce2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C1 00B2
        gbc.setState(0x6caf, 0xbe0d, 0x83b0, 0xf8be, 0xa316, 0x2e26, 0x0, 0x0);
        gbc.writeMem(0x6caf, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xbe0d, gbc.sp());
        EXPECT(0x6cb1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C1 00B3
        gbc.setState(0xbcc8, 0x8b7d, 0xa910, 0x4eb1, 0x7df3, 0x58cb, 0x0, 0x1);
        gbc.writeMem(0xbcc8, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x8b7d, gbc.sp());
        EXPECT(0xbcca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbcc8));
        EXPECT(0xc1, gbc.readMem(0xbcc9));
        // CB C1 00B4
        gbc.setState(0x987c, 0x3b53, 0x7010, 0x3a7, 0x7f09, 0xd5f5, 0x0, 0x1);
        gbc.writeMem(0x987c, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x3b53, gbc.sp());
        EXPECT(0x987e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x987c));
        EXPECT(0xc1, gbc.readMem(0x987d));
        // CB C1 00B5
        gbc.setState(0x9d6c, 0xbd7a, 0xe580, 0xcd03, 0x629, 0xdf15, 0x0, 0x1);
        gbc.writeMem(0x9d6c, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xbd7a, gbc.sp());
        EXPECT(0x9d6e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d6c));
        EXPECT(0xc1, gbc.readMem(0x9d6d));
        // CB C1 00B6
        gbc.setState(0xd9aa, 0x9f04, 0xf290, 0xd805, 0x663d, 0x2ff3, 0x0, 0x1);
        gbc.writeMem(0xd9aa, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x9f04, gbc.sp());
        EXPECT(0xd9ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd9aa));
        EXPECT(0xc1, gbc.readMem(0xd9ab));
        // CB C1 00B7
        gbc.setState(0x85bf, 0x4666, 0x8d0, 0x2a76, 0x2b1, 0xf4e3, 0x0, 0x0);
        gbc.writeMem(0x85bf, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x4666, gbc.sp());
        EXPECT(0x85c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x85bf));
        EXPECT(0xc1, gbc.readMem(0x85c0));
        // CB C1 00B8
        gbc.setState(0xb0b0, 0x6cb5, 0xd7f0, 0xfeb5, 0xfea9, 0x70bc, 0x1, 0x1);
        gbc.writeMem(0xb0b0, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x6cb5, gbc.sp());
        EXPECT(0xb0b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb0b0));
        EXPECT(0xc1, gbc.readMem(0xb0b1));
        // CB C1 00B9
        gbc.setState(0xa4c7, 0xeedc, 0xc6b0, 0xcbe5, 0xb9c, 0x9a33, 0x1, 0x1);
        gbc.writeMem(0xa4c7, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xeedc, gbc.sp());
        EXPECT(0xa4c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa4c7));
        EXPECT(0xc1, gbc.readMem(0xa4c8));
        // CB C1 00BA
        gbc.setState(0xc42e, 0x6942, 0x6380, 0x27c1, 0xfd03, 0x59d6, 0x1, 0x0);
        gbc.writeMem(0xc42e, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x6942, gbc.sp());
        EXPECT(0xc430, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc42e));
        EXPECT(0xc1, gbc.readMem(0xc42f));
        // CB C1 00BC
        gbc.setState(0xa912, 0xc595, 0xe270, 0x9d5f, 0x5adf, 0x69f9, 0x0, 0x1);
        gbc.writeMem(0xa912, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xc595, gbc.sp());
        EXPECT(0xa914, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa912));
        EXPECT(0xc1, gbc.readMem(0xa913));
        // CB C1 00BD
        gbc.setState(0xd7, 0x3d94, 0xe920, 0xf792, 0x31f9, 0x7f58, 0x1, 0x0);
        gbc.writeMem(0xd7, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x3d94, gbc.sp());
        EXPECT(0xd9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C1 00C0
        gbc.setState(0xc18e, 0x5091, 0x8ae0, 0x566f, 0xca81, 0xadb4, 0x1, 0x0);
        gbc.writeMem(0xc18e, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x5091, gbc.sp());
        EXPECT(0xc190, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc18e));
        EXPECT(0xc1, gbc.readMem(0xc18f));
        // CB C1 00C1
        gbc.setState(0xaa7, 0xb6fd, 0xdc10, 0xca6d, 0x570d, 0x1252, 0x0, 0x0);
        gbc.writeMem(0xaa7, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xb6fd, gbc.sp());
        EXPECT(0xaa9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C1 00C2
        gbc.setState(0x8dcd, 0xad09, 0x9e20, 0x2fb9, 0x1d7, 0xfcf1, 0x1, 0x0);
        gbc.writeMem(0x8dcd, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xad09, gbc.sp());
        EXPECT(0x8dcf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8dcd));
        EXPECT(0xc1, gbc.readMem(0x8dce));
        // CB C1 00C3
        gbc.setState(0x311c, 0xffa, 0xe140, 0x6f71, 0xd64b, 0xfcbd, 0x0, 0x0);
        gbc.writeMem(0x311c, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xffa, gbc.sp());
        EXPECT(0x311e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C1 00C4
        gbc.setState(0xd9fc, 0x594d, 0x7220, 0xea6e, 0x66d7, 0x16ee, 0x1, 0x0);
        gbc.writeMem(0xd9fc, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x594d, gbc.sp());
        EXPECT(0xd9fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd9fc));
        EXPECT(0xc1, gbc.readMem(0xd9fd));
        // CB C1 00C5
        gbc.setState(0x10b6, 0x724a, 0x4600, 0xfbd6, 0x43bb, 0xd83d, 0x1, 0x0);
        gbc.writeMem(0x10b6, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x724a, gbc.sp());
        EXPECT(0x10b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C1 00C6
        gbc.setState(0xd171, 0xad5c, 0x8b80, 0x8a75, 0x9b81, 0xe489, 0x0, 0x1);
        gbc.writeMem(0xd171, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xad5c, gbc.sp());
        EXPECT(0xd173, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd171));
        EXPECT(0xc1, gbc.readMem(0xd172));
        // CB C1 00C7
        gbc.setState(0x2ca4, 0x590e, 0xf150, 0x905c, 0xd236, 0x7e4c, 0x0, 0x0);
        gbc.writeMem(0x2ca4, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x590e, gbc.sp());
        EXPECT(0x2ca6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C1 00C8
        gbc.setState(0xb153, 0x59c, 0x47e0, 0x1b84, 0xaee3, 0x7a, 0x1, 0x1);
        gbc.writeMem(0xb153, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x59c, gbc.sp());
        EXPECT(0xb155, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb153));
        EXPECT(0xc1, gbc.readMem(0xb154));
        // CB C1 00C9
        gbc.setState(0x13fd, 0xe049, 0x88f0, 0x2b4f, 0x586a, 0xa7f2, 0x0, 0x0);
        gbc.writeMem(0x13fd, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xe049, gbc.sp());
        EXPECT(0x13ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C1 00CA
        gbc.setState(0x9926, 0xfdd2, 0xd990, 0xefa5, 0xfd84, 0xd2a9, 0x0, 0x1);
        gbc.writeMem(0x9926, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xfdd2, gbc.sp());
        EXPECT(0x9928, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9926));
        EXPECT(0xc1, gbc.readMem(0x9927));
        // CB C1 00CB
        gbc.setState(0x7994, 0xb52a, 0xc480, 0xbbd9, 0x90d4, 0x31bc, 0x0, 0x1);
        gbc.writeMem(0x7994, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xb52a, gbc.sp());
        EXPECT(0x7996, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C1 00CC
        gbc.setState(0x36fb, 0xb94b, 0xb9d0, 0xf7c0, 0xef4d, 0x6386, 0x0, 0x1);
        gbc.writeMem(0x36fb, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xb94b, gbc.sp());
        EXPECT(0x36fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C1 00CD
        gbc.setState(0x7432, 0xde9, 0x2ac0, 0x4a3b, 0xde7c, 0x22c2, 0x1, 0x1);
        gbc.writeMem(0x7432, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xde9, gbc.sp());
        EXPECT(0x7434, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C1 00CE
        gbc.setState(0xc06c, 0xf722, 0x8f60, 0x8e92, 0x236c, 0x86dd, 0x0, 0x0);
        gbc.writeMem(0xc06c, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xf722, gbc.sp());
        EXPECT(0xc06e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc06c));
        EXPECT(0xc1, gbc.readMem(0xc06d));
        // CB C1 00D0
        gbc.setState(0xe861, 0x5b4a, 0x2230, 0x2839, 0xe951, 0x75c, 0x0, 0x1);
        gbc.writeMem(0xe861, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x5b4a, gbc.sp());
        EXPECT(0xe863, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe861));
        EXPECT(0xc1, gbc.readMem(0xe862));
        // CB C1 00D1
        gbc.setState(0x82db, 0xab9e, 0xeeb0, 0x8f09, 0x4454, 0xdeab, 0x0, 0x0);
        gbc.writeMem(0x82db, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xab9e, gbc.sp());
        EXPECT(0x82dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x82db));
        EXPECT(0xc1, gbc.readMem(0x82dc));
        // CB C1 00D2
        gbc.setState(0xbd53, 0x1b4c, 0xc3d0, 0x6073, 0x8b0, 0xe3da, 0x1, 0x0);
        gbc.writeMem(0xbd53, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x1b4c, gbc.sp());
        EXPECT(0xbd55, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd53));
        EXPECT(0xc1, gbc.readMem(0xbd54));
        // CB C1 00D4
        gbc.setState(0xb1b3, 0x62ea, 0xabc0, 0x44c2, 0xe568, 0xb91f, 0x0, 0x0);
        gbc.writeMem(0xb1b3, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x62ea, gbc.sp());
        EXPECT(0xb1b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb1b3));
        EXPECT(0xc1, gbc.readMem(0xb1b4));
        // CB C1 00D5
        gbc.setState(0xb2c, 0xcacd, 0xbe50, 0x916c, 0x372e, 0x2610, 0x1, 0x0);
        gbc.writeMem(0xb2c, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xcacd, gbc.sp());
        EXPECT(0xb2e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C1 00D6
        gbc.setState(0xaa98, 0xf915, 0xd030, 0xe677, 0x3ca5, 0x47e9, 0x0, 0x1);
        gbc.writeMem(0xaa98, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xf915, gbc.sp());
        EXPECT(0xaa9a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa98));
        EXPECT(0xc1, gbc.readMem(0xaa99));
        // CB C1 00D8
        gbc.setState(0x91bb, 0xa31d, 0xa2f0, 0x5f04, 0x50a9, 0xeb61, 0x1, 0x1);
        gbc.writeMem(0x91bb, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xa31d, gbc.sp());
        EXPECT(0x91bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x91bb));
        EXPECT(0xc1, gbc.readMem(0x91bc));
        // CB C1 00D9
        gbc.setState(0x2b10, 0x92bf, 0xf040, 0x45ab, 0x666b, 0x3b, 0x1, 0x0);
        gbc.writeMem(0x2b10, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x92bf, gbc.sp());
        EXPECT(0x2b12, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C1 00DA
        gbc.setState(0x1537, 0xf6cf, 0xe870, 0x4fb6, 0x4d9c, 0x6478, 0x0, 0x1);
        gbc.writeMem(0x1537, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xf6cf, gbc.sp());
        EXPECT(0x1539, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C1 00DB
        gbc.setState(0x17f4, 0x6b0e, 0x40d0, 0xa811, 0xb993, 0x3c95, 0x1, 0x0);
        gbc.writeMem(0x17f4, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x6b0e, gbc.sp());
        EXPECT(0x17f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C1 00DC
        gbc.setState(0x3ec9, 0xc0e9, 0xc930, 0x9054, 0x1bb6, 0xc3af, 0x1, 0x0);
        gbc.writeMem(0x3ec9, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xc0e9, gbc.sp());
        EXPECT(0x3ecb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C1 00DD
        gbc.setState(0x7dea, 0x7026, 0x4cd0, 0x7cf, 0x2051, 0xa6a4, 0x1, 0x1);
        gbc.writeMem(0x7dea, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x7026, gbc.sp());
        EXPECT(0x7dec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C1 00DE
        gbc.setState(0xace0, 0x37eb, 0x4760, 0x1b5d, 0x1233, 0xd013, 0x0, 0x1);
        gbc.writeMem(0xace0, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x37eb, gbc.sp());
        EXPECT(0xace2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xace0));
        EXPECT(0xc1, gbc.readMem(0xace1));
        // CB C1 00DF
        gbc.setState(0x6b1a, 0x6271, 0x9980, 0xab56, 0x8072, 0x6050, 0x0, 0x1);
        gbc.writeMem(0x6b1a, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x6271, gbc.sp());
        EXPECT(0x6b1c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C1 00E0
        gbc.setState(0x38fc, 0x4cab, 0x3730, 0x51f7, 0x67, 0xbe10, 0x1, 0x1);
        gbc.writeMem(0x38fc, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x4cab, gbc.sp());
        EXPECT(0x38fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C1 00E1
        gbc.setState(0x461b, 0x77a, 0xd720, 0x7f05, 0xa91, 0x2c00, 0x0, 0x1);
        gbc.writeMem(0x461b, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x77a, gbc.sp());
        EXPECT(0x461d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C1 00E2
        gbc.setState(0x21c6, 0xad38, 0x4320, 0x59e2, 0x233, 0xdd9f, 0x1, 0x1);
        gbc.writeMem(0x21c6, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xad38, gbc.sp());
        EXPECT(0x21c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C1 00E3
        gbc.setState(0xe984, 0x7758, 0x5d20, 0xed92, 0x308, 0x4bbd, 0x0, 0x1);
        gbc.writeMem(0xe984, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x7758, gbc.sp());
        EXPECT(0xe986, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe984));
        EXPECT(0xc1, gbc.readMem(0xe985));
        // CB C1 00E4
        gbc.setState(0x26b1, 0xb83d, 0x43a0, 0x37ab, 0x2205, 0xf2b1, 0x0, 0x1);
        gbc.writeMem(0x26b1, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xb83d, gbc.sp());
        EXPECT(0x26b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C1 00E5
        gbc.setState(0xc808, 0x1d68, 0x220, 0xab58, 0x1099, 0x1f5, 0x0, 0x0);
        gbc.writeMem(0xc808, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x1d68, gbc.sp());
        EXPECT(0xc80a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc808));
        EXPECT(0xc1, gbc.readMem(0xc809));
        // CB C1 00E6
        gbc.setState(0xc837, 0xffba, 0x8710, 0xc259, 0xf8bd, 0x3050, 0x0, 0x0);
        gbc.writeMem(0xc837, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xffba, gbc.sp());
        EXPECT(0xc839, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc837));
        EXPECT(0xc1, gbc.readMem(0xc838));
        // CB C1 00E7
        gbc.setState(0x29e8, 0x99ed, 0x8290, 0x89c9, 0xbe34, 0xd4f8, 0x1, 0x0);
        gbc.writeMem(0x29e8, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x99ed, gbc.sp());
        EXPECT(0x29ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C1 00E9
        gbc.setState(0xa03f, 0x3954, 0xdbb0, 0x829e, 0x2dc9, 0x310f, 0x1, 0x1);
        gbc.writeMem(0xa03f, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x3954, gbc.sp());
        EXPECT(0xa041, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa03f));
        EXPECT(0xc1, gbc.readMem(0xa040));
        // CB C1 00EA
        gbc.setState(0x5b77, 0xb9db, 0x8f30, 0xac67, 0x4eb6, 0xa831, 0x1, 0x0);
        gbc.writeMem(0x5b77, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xb9db, gbc.sp());
        EXPECT(0x5b79, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C1 00EB
        gbc.setState(0x80fc, 0xeabe, 0xfc0, 0x59, 0x513e, 0x7e57, 0x1, 0x0);
        gbc.writeMem(0x80fc, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xeabe, gbc.sp());
        EXPECT(0x80fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x80fc));
        EXPECT(0xc1, gbc.readMem(0x80fd));
        // CB C1 00ED
        gbc.setState(0x5499, 0x254b, 0xf900, 0x2c4d, 0xe425, 0xd615, 0x1, 0x0);
        gbc.writeMem(0x5499, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x254b, gbc.sp());
        EXPECT(0x549b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C1 00EE
        gbc.setState(0x5db6, 0xf264, 0xb670, 0xe0a, 0x2979, 0xfd4d, 0x1, 0x0);
        gbc.writeMem(0x5db6, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xf264, gbc.sp());
        EXPECT(0x5db8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C1 00EF
        gbc.setState(0x5efb, 0x8fb1, 0x6730, 0xa64e, 0xadd, 0x86ce, 0x0, 0x1);
        gbc.writeMem(0x5efb, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x8fb1, gbc.sp());
        EXPECT(0x5efd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C1 00F0
        gbc.setState(0x479, 0x748d, 0xa490, 0x84ac, 0x5067, 0x5c26, 0x0, 0x0);
        gbc.writeMem(0x479, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x748d, gbc.sp());
        EXPECT(0x47b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C1 00F1
        gbc.setState(0x3df0, 0xe33d, 0x4f40, 0x9db8, 0xc1da, 0xc222, 0x1, 0x1);
        gbc.writeMem(0x3df0, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xe33d, gbc.sp());
        EXPECT(0x3df2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C1 00F2
        gbc.setState(0x96f5, 0xe1d6, 0x5de0, 0xea19, 0x2eb0, 0xdf7d, 0x0, 0x1);
        gbc.writeMem(0x96f5, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xe1d6, gbc.sp());
        EXPECT(0x96f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x96f5));
        EXPECT(0xc1, gbc.readMem(0x96f6));
        // CB C1 00F3
        gbc.setState(0x3e00, 0x66fd, 0x4560, 0x1e8, 0x92d3, 0x4ac, 0x1, 0x0);
        gbc.writeMem(0x3e00, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x66fd, gbc.sp());
        EXPECT(0x3e02, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C1 00F4
        gbc.setState(0xa85a, 0x68e8, 0xe450, 0xa731, 0xb5a9, 0xe51f, 0x1, 0x1);
        gbc.writeMem(0xa85a, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x68e8, gbc.sp());
        EXPECT(0xa85c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa85a));
        EXPECT(0xc1, gbc.readMem(0xa85b));
        // CB C1 00F5
        gbc.setState(0x3bff, 0xdd51, 0x9da0, 0x56fb, 0x6c7f, 0xb5b7, 0x0, 0x0);
        gbc.writeMem(0x3bff, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xdd51, gbc.sp());
        EXPECT(0x3c01, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C1 00F6
        gbc.setState(0x6177, 0xb863, 0x4fe0, 0xcbb8, 0xe808, 0x4f20, 0x1, 0x1);
        gbc.writeMem(0x6177, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xb863, gbc.sp());
        EXPECT(0x6179, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C1 00F7
        gbc.setState(0x4221, 0x3dae, 0x5270, 0x4038, 0x88b1, 0x9b6, 0x0, 0x1);
        gbc.writeMem(0x4221, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x3dae, gbc.sp());
        EXPECT(0x4223, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C1 00F8
        gbc.setState(0x480c, 0xf23d, 0x5180, 0xf416, 0x6409, 0x69e1, 0x0, 0x1);
        gbc.writeMem(0x480c, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xf23d, gbc.sp());
        EXPECT(0x480e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C1 00F9
        gbc.setState(0x1206, 0x59d4, 0xd9a0, 0xf66d, 0x2d83, 0x340c, 0x1, 0x0);
        gbc.writeMem(0x1206, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x59d4, gbc.sp());
        EXPECT(0x1208, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C1 00FA
        gbc.setState(0x12a3, 0xd8f7, 0xbd80, 0x37c, 0x8206, 0xcf8c, 0x0, 0x0);
        gbc.writeMem(0x12a3, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xd8f7, gbc.sp());
        EXPECT(0x12a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C1 00FB
        gbc.setState(0xce8, 0xca0d, 0x1350, 0xba00, 0x226f, 0xbedb, 0x1, 0x0);
        gbc.writeMem(0xce8, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xca0d, gbc.sp());
        EXPECT(0xcea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C1 00FC
        gbc.setState(0x2d12, 0xdb25, 0x8800, 0x4027, 0x4eee, 0x7b0d, 0x1, 0x0);
        gbc.writeMem(0x2d12, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xdb25, gbc.sp());
        EXPECT(0x2d14, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C1 00FD
        gbc.setState(0x889, 0xe23, 0x4e90, 0xa367, 0xacf1, 0xf7a3, 0x1, 0x1);
        gbc.writeMem(0x889, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xe23, gbc.sp());
        EXPECT(0x88b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C1 00FE
        gbc.setState(0x932b, 0xe9ec, 0x7ce0, 0xad3a, 0x560, 0x3188, 0x0, 0x0);
        gbc.writeMem(0x932b, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xe9ec, gbc.sp());
        EXPECT(0x932d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x932b));
        EXPECT(0xc1, gbc.readMem(0x932c));
        // CB C1 00FF
        gbc.setState(0xc49d, 0x25b7, 0x5430, 0xba9f, 0x13bf, 0x104e, 0x1, 0x0);
        gbc.writeMem(0xc49d, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x25b7, gbc.sp());
        EXPECT(0xc49f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc49d));
        EXPECT(0xc1, gbc.readMem(0xc49e));
        // CB C1 0100
        gbc.setState(0x6c2b, 0x7081, 0x1a80, 0x6454, 0x2b03, 0xe4d6, 0x1, 0x0);
        gbc.writeMem(0x6c2b, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x7081, gbc.sp());
        EXPECT(0x6c2d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C1 0101
        gbc.setState(0x10df, 0xf6bc, 0x6390, 0x702c, 0xbe89, 0x17c2, 0x0, 0x0);
        gbc.writeMem(0x10df, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xf6bc, gbc.sp());
        EXPECT(0x10e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C1 0102
        gbc.setState(0x5213, 0xee15, 0xa090, 0x6960, 0xa4f3, 0x6ab5, 0x1, 0x1);
        gbc.writeMem(0x5213, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xee15, gbc.sp());
        EXPECT(0x5215, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C1 0103
        gbc.setState(0x297a, 0x808b, 0xd7c0, 0x6284, 0xfb6e, 0xb615, 0x0, 0x1);
        gbc.writeMem(0x297a, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x808b, gbc.sp());
        EXPECT(0x297c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C1 0104
        gbc.setState(0xd3e8, 0xc947, 0x6680, 0xbb08, 0x8467, 0xe779, 0x1, 0x0);
        gbc.writeMem(0xd3e8, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xc947, gbc.sp());
        EXPECT(0xd3ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd3e8));
        EXPECT(0xc1, gbc.readMem(0xd3e9));
        // CB C1 0105
        gbc.setState(0x6b31, 0x3a06, 0x21c0, 0xb0cd, 0x4859, 0xa656, 0x0, 0x1);
        gbc.writeMem(0x6b31, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x3a06, gbc.sp());
        EXPECT(0x6b33, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C1 0106
        gbc.setState(0x628d, 0x944, 0x620, 0xaff1, 0x6621, 0x2b0e, 0x0, 0x0);
        gbc.writeMem(0x628d, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x944, gbc.sp());
        EXPECT(0x628f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C1 0107
        gbc.setState(0x2c09, 0x63fc, 0x4340, 0x3ad6, 0xf92a, 0x8db0, 0x0, 0x1);
        gbc.writeMem(0x2c09, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x63fc, gbc.sp());
        EXPECT(0x2c0b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C1 0108
        gbc.setState(0xe430, 0x20a4, 0xc5c0, 0xb767, 0xe425, 0x2491, 0x0, 0x0);
        gbc.writeMem(0xe430, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x20a4, gbc.sp());
        EXPECT(0xe432, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe430));
        EXPECT(0xc1, gbc.readMem(0xe431));
        // CB C1 0109
        gbc.setState(0x58a5, 0xf4d8, 0xf730, 0xc452, 0xa24e, 0x13c7, 0x0, 0x1);
        gbc.writeMem(0x58a5, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xf4d8, gbc.sp());
        EXPECT(0x58a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C1 010A
        gbc.setState(0x6d50, 0x435e, 0x95a0, 0x1cd, 0xb10c, 0x8751, 0x1, 0x0);
        gbc.writeMem(0x6d50, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x435e, gbc.sp());
        EXPECT(0x6d52, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C1 010B
        gbc.setState(0xcdd2, 0xe58a, 0xdfc0, 0x64d1, 0xc30b, 0x91df, 0x1, 0x1);
        gbc.writeMem(0xcdd2, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xe58a, gbc.sp());
        EXPECT(0xcdd4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcdd2));
        EXPECT(0xc1, gbc.readMem(0xcdd3));
        // CB C1 010C
        gbc.setState(0xccdc, 0xa5cb, 0xe330, 0x500c, 0xf114, 0xc767, 0x0, 0x0);
        gbc.writeMem(0xccdc, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xa5cb, gbc.sp());
        EXPECT(0xccde, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xccdc));
        EXPECT(0xc1, gbc.readMem(0xccdd));
        // CB C1 010D
        gbc.setState(0xb536, 0xc165, 0x1910, 0x719e, 0x1fc6, 0x1916, 0x0, 0x1);
        gbc.writeMem(0xb536, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xc165, gbc.sp());
        EXPECT(0xb538, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb536));
        EXPECT(0xc1, gbc.readMem(0xb537));
        // CB C1 010E
        gbc.setState(0x667, 0x95de, 0x7610, 0xbb67, 0x7246, 0xb3d3, 0x1, 0x0);
        gbc.writeMem(0x667, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x95de, gbc.sp());
        EXPECT(0x669, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C1 010F
        gbc.setState(0x37b7, 0x393d, 0x9420, 0x987d, 0x2114, 0x8dcc, 0x1, 0x0);
        gbc.writeMem(0x37b7, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x393d, gbc.sp());
        EXPECT(0x37b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C1 0110
        gbc.setState(0x491d, 0xeeda, 0x210, 0x3dcf, 0xd92, 0xd19f, 0x1, 0x1);
        gbc.writeMem(0x491d, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xeeda, gbc.sp());
        EXPECT(0x491f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C1 0111
        gbc.setState(0x72be, 0xd770, 0xdea0, 0x5cc, 0x1182, 0x847e, 0x0, 0x0);
        gbc.writeMem(0x72be, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xd770, gbc.sp());
        EXPECT(0x72c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C1 0113
        gbc.setState(0x1486, 0xa9c3, 0xa1e0, 0x8982, 0xa02a, 0xffde, 0x0, 0x0);
        gbc.writeMem(0x1486, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xa9c3, gbc.sp());
        EXPECT(0x1488, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C1 0114
        gbc.setState(0x98da, 0x11aa, 0xaa50, 0x1775, 0xf54d, 0xd813, 0x0, 0x0);
        gbc.writeMem(0x98da, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x11aa, gbc.sp());
        EXPECT(0x98dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x98da));
        EXPECT(0xc1, gbc.readMem(0x98db));
        // CB C1 0115
        gbc.setState(0x8e42, 0xc39d, 0xbe30, 0x8f8, 0x4569, 0xb8c0, 0x1, 0x1);
        gbc.writeMem(0x8e42, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xc39d, gbc.sp());
        EXPECT(0x8e44, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e42));
        EXPECT(0xc1, gbc.readMem(0x8e43));
        // CB C1 0116
        gbc.setState(0xa47a, 0xcaa5, 0x9830, 0x3ed5, 0x26a, 0x4608, 0x0, 0x1);
        gbc.writeMem(0xa47a, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xcaa5, gbc.sp());
        EXPECT(0xa47c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa47a));
        EXPECT(0xc1, gbc.readMem(0xa47b));
        // CB C1 0117
        gbc.setState(0x64ef, 0x3c0a, 0x9f30, 0xb016, 0xe664, 0x3595, 0x0, 0x1);
        gbc.writeMem(0x64ef, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x3c0a, gbc.sp());
        EXPECT(0x64f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C1 0118
        gbc.setState(0x56bf, 0x1c9, 0x6a60, 0x829, 0x47c, 0x5aa2, 0x0, 0x0);
        gbc.writeMem(0x56bf, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x1c9, gbc.sp());
        EXPECT(0x56c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C1 0119
        gbc.setState(0x10ad, 0x2724, 0x4b40, 0xcf5c, 0x6b8d, 0x53a1, 0x1, 0x1);
        gbc.writeMem(0x10ad, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x2724, gbc.sp());
        EXPECT(0x10af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C1 011A
        gbc.setState(0x294d, 0xd64d, 0x1ec0, 0xcc8, 0x7d45, 0x66b4, 0x1, 0x0);
        gbc.writeMem(0x294d, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xd64d, gbc.sp());
        EXPECT(0x294f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C1 011B
        gbc.setState(0xb7ff, 0x3424, 0x9db0, 0xea76, 0x5b17, 0xa21e, 0x0, 0x0);
        gbc.writeMem(0xb7ff, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x3424, gbc.sp());
        EXPECT(0xb801, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb7ff));
        EXPECT(0xc1, gbc.readMem(0xb800));
        // CB C1 011C
        gbc.setState(0xdb94, 0x27b3, 0xc530, 0x6f4c, 0x9f58, 0xae13, 0x1, 0x1);
        gbc.writeMem(0xdb94, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x27b3, gbc.sp());
        EXPECT(0xdb96, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb94));
        EXPECT(0xc1, gbc.readMem(0xdb95));
        // CB C1 011E
        gbc.setState(0x9114, 0x9035, 0xac50, 0x60d5, 0x7950, 0x43a5, 0x0, 0x0);
        gbc.writeMem(0x9114, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x9035, gbc.sp());
        EXPECT(0x9116, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9114));
        EXPECT(0xc1, gbc.readMem(0x9115));
        // CB C1 011F
        gbc.setState(0xde74, 0x3a8d, 0xeae0, 0x6600, 0xde0e, 0x5b07, 0x0, 0x0);
        gbc.writeMem(0xde74, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x3a8d, gbc.sp());
        EXPECT(0xde76, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde74));
        EXPECT(0xc1, gbc.readMem(0xde75));
        // CB C1 0120
        gbc.setState(0x69f9, 0xa704, 0x2ae0, 0xb314, 0x642c, 0xc757, 0x1, 0x1);
        gbc.writeMem(0x69f9, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xa704, gbc.sp());
        EXPECT(0x69fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C1 0121
        gbc.setState(0x7a1b, 0xeca0, 0xba10, 0xf623, 0x8c9, 0xcfb5, 0x1, 0x0);
        gbc.writeMem(0x7a1b, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xeca0, gbc.sp());
        EXPECT(0x7a1d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C1 0122
        gbc.setState(0xea66, 0x64bc, 0x9980, 0xb33f, 0x7bf0, 0xfd86, 0x0, 0x1);
        gbc.writeMem(0xea66, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x64bc, gbc.sp());
        EXPECT(0xea68, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea66));
        EXPECT(0xc1, gbc.readMem(0xea67));
        // CB C1 0123
        gbc.setState(0xd0b7, 0xaed, 0x7220, 0x4e93, 0x7b6f, 0x1f83, 0x0, 0x1);
        gbc.writeMem(0xd0b7, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xaed, gbc.sp());
        EXPECT(0xd0b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd0b7));
        EXPECT(0xc1, gbc.readMem(0xd0b8));
        // CB C1 0124
        gbc.setState(0x163d, 0x1d37, 0x76e0, 0x64e0, 0x94a9, 0xedfa, 0x1, 0x0);
        gbc.writeMem(0x163d, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x1d37, gbc.sp());
        EXPECT(0x163f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C1 0125
        gbc.setState(0xcf98, 0x1009, 0x8080, 0x2fe6, 0x9a7f, 0x36ee, 0x0, 0x0);
        gbc.writeMem(0xcf98, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x1009, gbc.sp());
        EXPECT(0xcf9a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf98));
        EXPECT(0xc1, gbc.readMem(0xcf99));
        // CB C1 0126
        gbc.setState(0x2b53, 0xfa76, 0x390, 0x454b, 0x13d2, 0x258d, 0x1, 0x0);
        gbc.writeMem(0x2b53, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xfa76, gbc.sp());
        EXPECT(0x2b55, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C1 0127
        gbc.setState(0x1113, 0xb87a, 0x4b10, 0xec75, 0x150f, 0x72f0, 0x0, 0x0);
        gbc.writeMem(0x1113, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xb87a, gbc.sp());
        EXPECT(0x1115, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C1 0128
        gbc.setState(0x8358, 0xc750, 0x50a0, 0x69d2, 0x25ce, 0x6802, 0x1, 0x0);
        gbc.writeMem(0x8358, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xc750, gbc.sp());
        EXPECT(0x835a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8358));
        EXPECT(0xc1, gbc.readMem(0x8359));
        // CB C1 0129
        gbc.setState(0x9b81, 0xb820, 0xaeb0, 0x82d7, 0xce8b, 0xb91b, 0x0, 0x0);
        gbc.writeMem(0x9b81, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xb820, gbc.sp());
        EXPECT(0x9b83, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b81));
        EXPECT(0xc1, gbc.readMem(0x9b82));
        // CB C1 012A
        gbc.setState(0x2993, 0x386, 0x1ca0, 0x7612, 0xe58b, 0x7a44, 0x0, 0x1);
        gbc.writeMem(0x2993, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x386, gbc.sp());
        EXPECT(0x2995, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C1 012B
        gbc.setState(0x31e4, 0x279d, 0xcd30, 0x1996, 0xa06c, 0xc157, 0x1, 0x1);
        gbc.writeMem(0x31e4, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x279d, gbc.sp());
        EXPECT(0x31e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C1 012C
        gbc.setState(0x21e4, 0x8df6, 0xbd50, 0x3612, 0x1aff, 0xc610, 0x0, 0x1);
        gbc.writeMem(0x21e4, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x8df6, gbc.sp());
        EXPECT(0x21e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C1 012E
        gbc.setState(0x57d9, 0xa81e, 0x9220, 0x7b91, 0xe179, 0xe645, 0x1, 0x0);
        gbc.writeMem(0x57d9, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xa81e, gbc.sp());
        EXPECT(0x57db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C1 012F
        gbc.setState(0xda52, 0x469a, 0x2340, 0x8994, 0xfb42, 0xac69, 0x0, 0x1);
        gbc.writeMem(0xda52, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x469a, gbc.sp());
        EXPECT(0xda54, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda52));
        EXPECT(0xc1, gbc.readMem(0xda53));
        // CB C1 0130
        gbc.setState(0x89e1, 0x8ee8, 0x56c0, 0x6411, 0xfa5b, 0x74bd, 0x1, 0x0);
        gbc.writeMem(0x89e1, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x8ee8, gbc.sp());
        EXPECT(0x89e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x89e1));
        EXPECT(0xc1, gbc.readMem(0x89e2));
        // CB C1 0131
        gbc.setState(0xa487, 0x65cc, 0xbce0, 0xcbaf, 0x934d, 0x73c7, 0x1, 0x0);
        gbc.writeMem(0xa487, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x65cc, gbc.sp());
        EXPECT(0xa489, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa487));
        EXPECT(0xc1, gbc.readMem(0xa488));
        // CB C1 0132
        gbc.setState(0x6690, 0xa3a2, 0x1000, 0x973a, 0xc245, 0x9b57, 0x0, 0x0);
        gbc.writeMem(0x6690, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xa3a2, gbc.sp());
        EXPECT(0x6692, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C1 0133
        gbc.setState(0xa46f, 0x426, 0x8180, 0x9cba, 0xc678, 0x855f, 0x1, 0x1);
        gbc.writeMem(0xa46f, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x426, gbc.sp());
        EXPECT(0xa471, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa46f));
        EXPECT(0xc1, gbc.readMem(0xa470));
        // CB C1 0134
        gbc.setState(0x1c9b, 0xe09d, 0x41f0, 0x1ea0, 0xa9a7, 0x56b3, 0x1, 0x1);
        gbc.writeMem(0x1c9b, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xe09d, gbc.sp());
        EXPECT(0x1c9d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C1 0135
        gbc.setState(0xb05a, 0x1c41, 0xf7d0, 0x2bae, 0x9111, 0x421, 0x0, 0x1);
        gbc.writeMem(0xb05a, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x1c41, gbc.sp());
        EXPECT(0xb05c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb05a));
        EXPECT(0xc1, gbc.readMem(0xb05b));
        // CB C1 0136
        gbc.setState(0xe0b9, 0x4610, 0x3b0, 0x52c2, 0x4db6, 0x9c3a, 0x0, 0x1);
        gbc.writeMem(0xe0b9, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x4610, gbc.sp());
        EXPECT(0xe0bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe0b9));
        EXPECT(0xc1, gbc.readMem(0xe0ba));
        // CB C1 0137
        gbc.setState(0x1684, 0x1732, 0x2170, 0x5112, 0xd186, 0xcf9c, 0x0, 0x1);
        gbc.writeMem(0x1684, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x1732, gbc.sp());
        EXPECT(0x1686, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C1 0138
        gbc.setState(0x59a7, 0xd803, 0xc360, 0xc622, 0x83fc, 0xdcb4, 0x1, 0x1);
        gbc.writeMem(0x59a7, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xd803, gbc.sp());
        EXPECT(0x59a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C1 0139
        gbc.setState(0x84fb, 0x16c7, 0x8860, 0x8075, 0x237, 0xfb40, 0x1, 0x1);
        gbc.writeMem(0x84fb, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x16c7, gbc.sp());
        EXPECT(0x84fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x84fb));
        EXPECT(0xc1, gbc.readMem(0x84fc));
        // CB C1 013A
        gbc.setState(0xc72a, 0x2018, 0xa780, 0xc43d, 0x8f9a, 0xd67, 0x0, 0x0);
        gbc.writeMem(0xc72a, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x2018, gbc.sp());
        EXPECT(0xc72c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc72a));
        EXPECT(0xc1, gbc.readMem(0xc72b));
        // CB C1 013B
        gbc.setState(0x95a2, 0x9977, 0xdae0, 0x9ff2, 0x94a8, 0x40e2, 0x0, 0x0);
        gbc.writeMem(0x95a2, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x9977, gbc.sp());
        EXPECT(0x95a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x95a2));
        EXPECT(0xc1, gbc.readMem(0x95a3));
        // CB C1 013C
        gbc.setState(0xbef1, 0xf68e, 0x64e0, 0x1a9d, 0xcd12, 0x719b, 0x0, 0x0);
        gbc.writeMem(0xbef1, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xf68e, gbc.sp());
        EXPECT(0xbef3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbef1));
        EXPECT(0xc1, gbc.readMem(0xbef2));
        // CB C1 013D
        gbc.setState(0x563f, 0x96d3, 0x8510, 0xeb45, 0x3c68, 0x48ed, 0x1, 0x1);
        gbc.writeMem(0x563f, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x96d3, gbc.sp());
        EXPECT(0x5641, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C1 013E
        gbc.setState(0x7860, 0xb2f0, 0x7510, 0x1c53, 0x5b64, 0xf62e, 0x1, 0x0);
        gbc.writeMem(0x7860, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xb2f0, gbc.sp());
        EXPECT(0x7862, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C1 013F
        gbc.setState(0x312f, 0x2454, 0xd210, 0xd4d0, 0xc66d, 0x64bb, 0x0, 0x1);
        gbc.writeMem(0x312f, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x2454, gbc.sp());
        EXPECT(0x3131, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C1 0140
        gbc.setState(0x15fe, 0xa923, 0x8a40, 0x90d3, 0x3b3d, 0x154c, 0x1, 0x1);
        gbc.writeMem(0x15fe, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xa923, gbc.sp());
        EXPECT(0x1600, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C1 0143
        gbc.setState(0x93c4, 0xbf0f, 0x2910, 0xc598, 0xdffe, 0xa2c6, 0x1, 0x1);
        gbc.writeMem(0x93c4, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xbf0f, gbc.sp());
        EXPECT(0x93c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x93c4));
        EXPECT(0xc1, gbc.readMem(0x93c5));
        // CB C1 0144
        gbc.setState(0xc23f, 0xfc6d, 0x3af0, 0x7f5e, 0x793c, 0xdfb1, 0x0, 0x0);
        gbc.writeMem(0xc23f, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xfc6d, gbc.sp());
        EXPECT(0xc241, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc23f));
        EXPECT(0xc1, gbc.readMem(0xc240));
        // CB C1 0145
        gbc.setState(0xe67b, 0x39c8, 0x8f80, 0xcef7, 0x227f, 0xfd1f, 0x0, 0x0);
        gbc.writeMem(0xe67b, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x39c8, gbc.sp());
        EXPECT(0xe67d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe67b));
        EXPECT(0xc1, gbc.readMem(0xe67c));
        // CB C1 0146
        gbc.setState(0x3458, 0x9d13, 0xdc00, 0x39c7, 0x1e2d, 0x8465, 0x0, 0x1);
        gbc.writeMem(0x3458, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x9d13, gbc.sp());
        EXPECT(0x345a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C1 0147
        gbc.setState(0xf34, 0xf3d3, 0xf0e0, 0xd155, 0x907f, 0xf5d4, 0x0, 0x1);
        gbc.writeMem(0xf34, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xf3d3, gbc.sp());
        EXPECT(0xf36, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C1 0148
        gbc.setState(0x83dd, 0x40bd, 0x9db0, 0x5aaa, 0xdb40, 0x1469, 0x0, 0x0);
        gbc.writeMem(0x83dd, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x40bd, gbc.sp());
        EXPECT(0x83df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x83dd));
        EXPECT(0xc1, gbc.readMem(0x83de));
        // CB C1 0149
        gbc.setState(0xb3c4, 0xbd7a, 0x7ff0, 0xff43, 0x3da0, 0x2db2, 0x1, 0x0);
        gbc.writeMem(0xb3c4, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xbd7a, gbc.sp());
        EXPECT(0xb3c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb3c4));
        EXPECT(0xc1, gbc.readMem(0xb3c5));
        // CB C1 014A
        gbc.setState(0xdc76, 0x91ba, 0xef00, 0xc47, 0xe9c9, 0xceed, 0x0, 0x0);
        gbc.writeMem(0xdc76, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x91ba, gbc.sp());
        EXPECT(0xdc78, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc76));
        EXPECT(0xc1, gbc.readMem(0xdc77));
        // CB C1 014B
        gbc.setState(0x5af7, 0xc7c5, 0x2c0, 0x8471, 0xa50a, 0x10b4, 0x1, 0x1);
        gbc.writeMem(0x5af7, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xc7c5, gbc.sp());
        EXPECT(0x5af9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C1 014C
        gbc.setState(0x59ad, 0xc1a3, 0x5e80, 0x33e6, 0x1d9a, 0xae55, 0x0, 0x1);
        gbc.writeMem(0x59ad, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xc1a3, gbc.sp());
        EXPECT(0x59af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C1 014E
        gbc.setState(0x2ca6, 0x13d7, 0x3a60, 0x13fe, 0x30f7, 0x1840, 0x0, 0x0);
        gbc.writeMem(0x2ca6, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x13d7, gbc.sp());
        EXPECT(0x2ca8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C1 014F
        gbc.setState(0xe99d, 0x8f18, 0xda60, 0x3165, 0xfda8, 0x4089, 0x0, 0x1);
        gbc.writeMem(0xe99d, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x8f18, gbc.sp());
        EXPECT(0xe99f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe99d));
        EXPECT(0xc1, gbc.readMem(0xe99e));
        // CB C1 0150
        gbc.setState(0xcc20, 0x7da9, 0x96b0, 0x9577, 0x4541, 0x705b, 0x1, 0x1);
        gbc.writeMem(0xcc20, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x7da9, gbc.sp());
        EXPECT(0xcc22, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc20));
        EXPECT(0xc1, gbc.readMem(0xcc21));
        // CB C1 0151
        gbc.setState(0x66d1, 0xfd6, 0xe650, 0x9443, 0xde71, 0x56a1, 0x1, 0x0);
        gbc.writeMem(0x66d1, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xfd6, gbc.sp());
        EXPECT(0x66d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C1 0152
        gbc.setState(0x55ff, 0x642b, 0xc270, 0xddfc, 0xb83d, 0x547c, 0x1, 0x1);
        gbc.writeMem(0x55ff, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x642b, gbc.sp());
        EXPECT(0x5601, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C1 0153
        gbc.setState(0xa505, 0x6c01, 0xe60, 0x6683, 0xe494, 0x70b1, 0x0, 0x1);
        gbc.writeMem(0xa505, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x6c01, gbc.sp());
        EXPECT(0xa507, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa505));
        EXPECT(0xc1, gbc.readMem(0xa506));
        // CB C1 0155
        gbc.setState(0xd430, 0x7c1a, 0xeff0, 0x8053, 0xfb9f, 0xf00d, 0x1, 0x0);
        gbc.writeMem(0xd430, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x7c1a, gbc.sp());
        EXPECT(0xd432, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd430));
        EXPECT(0xc1, gbc.readMem(0xd431));
        // CB C1 0156
        gbc.setState(0x2685, 0x7fb0, 0x7530, 0xd68a, 0x3b06, 0x4f8, 0x0, 0x0);
        gbc.writeMem(0x2685, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x7fb0, gbc.sp());
        EXPECT(0x2687, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C1 0157
        gbc.setState(0x671b, 0x73f1, 0xcfa0, 0x6a3, 0x748d, 0x43a, 0x0, 0x0);
        gbc.writeMem(0x671b, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x73f1, gbc.sp());
        EXPECT(0x671d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C1 0158
        gbc.setState(0xe3df, 0xe56e, 0x7f90, 0x7d76, 0x73e0, 0xd9ee, 0x0, 0x0);
        gbc.writeMem(0xe3df, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xe56e, gbc.sp());
        EXPECT(0xe3e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe3df));
        EXPECT(0xc1, gbc.readMem(0xe3e0));
        // CB C1 0159
        gbc.setState(0xe734, 0x297d, 0x91f0, 0xaa34, 0x23e8, 0xd0d6, 0x0, 0x0);
        gbc.writeMem(0xe734, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x297d, gbc.sp());
        EXPECT(0xe736, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe734));
        EXPECT(0xc1, gbc.readMem(0xe735));
        // CB C1 015A
        gbc.setState(0x815e, 0x7fa1, 0xbc70, 0x421c, 0xcacc, 0xdf54, 0x0, 0x1);
        gbc.writeMem(0x815e, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x7fa1, gbc.sp());
        EXPECT(0x8160, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x815e));
        EXPECT(0xc1, gbc.readMem(0x815f));
        // CB C1 015B
        gbc.setState(0x4726, 0xc45, 0x54b0, 0xb7ab, 0xe16f, 0xdc65, 0x0, 0x1);
        gbc.writeMem(0x4726, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xc45, gbc.sp());
        EXPECT(0x4728, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C1 015C
        gbc.setState(0x37c0, 0x1af8, 0x9e40, 0xc90c, 0xe90c, 0xb801, 0x0, 0x1);
        gbc.writeMem(0x37c0, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x1af8, gbc.sp());
        EXPECT(0x37c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C1 015D
        gbc.setState(0x4057, 0xaba4, 0xe350, 0xdd28, 0xc1d5, 0xed88, 0x1, 0x1);
        gbc.writeMem(0x4057, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xaba4, gbc.sp());
        EXPECT(0x4059, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C1 015E
        gbc.setState(0x7d5c, 0x303, 0x14c0, 0x8b14, 0x29af, 0x7652, 0x0, 0x0);
        gbc.writeMem(0x7d5c, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x303, gbc.sp());
        EXPECT(0x7d5e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C1 015F
        gbc.setState(0x4d6c, 0x6d5a, 0xca0, 0x3a20, 0x64d6, 0x59fb, 0x0, 0x0);
        gbc.writeMem(0x4d6c, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x6d5a, gbc.sp());
        EXPECT(0x4d6e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C1 0160
        gbc.setState(0x5eb6, 0x1b3a, 0x980, 0xa02d, 0x3c8d, 0xf698, 0x0, 0x0);
        gbc.writeMem(0x5eb6, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x1b3a, gbc.sp());
        EXPECT(0x5eb8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C1 0161
        gbc.setState(0x3289, 0xc287, 0xd1a0, 0x422a, 0xe6cc, 0x8c1a, 0x0, 0x0);
        gbc.writeMem(0x3289, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xc287, gbc.sp());
        EXPECT(0x328b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C1 0162
        gbc.setState(0xac05, 0xb737, 0xeb20, 0x145c, 0x6ec7, 0x8d38, 0x0, 0x0);
        gbc.writeMem(0xac05, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xb737, gbc.sp());
        EXPECT(0xac07, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac05));
        EXPECT(0xc1, gbc.readMem(0xac06));
        // CB C1 0163
        gbc.setState(0x670, 0x88cf, 0xf1e0, 0x2f4e, 0x214a, 0xdaae, 0x1, 0x1);
        gbc.writeMem(0x670, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x88cf, gbc.sp());
        EXPECT(0x672, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C1 0164
        gbc.setState(0xb91c, 0xcc4c, 0xd9d0, 0xa9c7, 0x28e6, 0xa537, 0x1, 0x1);
        gbc.writeMem(0xb91c, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xcc4c, gbc.sp());
        EXPECT(0xb91e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb91c));
        EXPECT(0xc1, gbc.readMem(0xb91d));
        // CB C1 0165
        gbc.setState(0xa95e, 0xdf77, 0xff70, 0x9d29, 0x2851, 0xe3a, 0x1, 0x1);
        gbc.writeMem(0xa95e, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xdf77, gbc.sp());
        EXPECT(0xa960, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa95e));
        EXPECT(0xc1, gbc.readMem(0xa95f));
        // CB C1 0166
        gbc.setState(0x1375, 0x6d1, 0xb9f0, 0x1881, 0xe384, 0x8172, 0x0, 0x1);
        gbc.writeMem(0x1375, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x6d1, gbc.sp());
        EXPECT(0x1377, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C1 0167
        gbc.setState(0x8d33, 0x6c52, 0xd3f0, 0xfaab, 0xdd1a, 0xfb16, 0x0, 0x0);
        gbc.writeMem(0x8d33, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x6c52, gbc.sp());
        EXPECT(0x8d35, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d33));
        EXPECT(0xc1, gbc.readMem(0x8d34));
        // CB C1 0168
        gbc.setState(0xa804, 0xf9b, 0x3310, 0xe825, 0x752e, 0x7c33, 0x0, 0x1);
        gbc.writeMem(0xa804, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xf9b, gbc.sp());
        EXPECT(0xa806, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa804));
        EXPECT(0xc1, gbc.readMem(0xa805));
        // CB C1 0169
        gbc.setState(0x781a, 0xd3f5, 0x4750, 0x9e75, 0x994b, 0x32af, 0x0, 0x1);
        gbc.writeMem(0x781a, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xd3f5, gbc.sp());
        EXPECT(0x781c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C1 016A
        gbc.setState(0x1dc, 0x2b9c, 0x28c0, 0x5664, 0x8405, 0xea53, 0x0, 0x1);
        gbc.writeMem(0x1dc, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x2b9c, gbc.sp());
        EXPECT(0x1de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C1 016B
        gbc.setState(0xe246, 0x96ec, 0xc1b0, 0x169d, 0x2afd, 0x8194, 0x0, 0x0);
        gbc.writeMem(0xe246, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x96ec, gbc.sp());
        EXPECT(0xe248, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe246));
        EXPECT(0xc1, gbc.readMem(0xe247));
        // CB C1 016C
        gbc.setState(0x5a95, 0x3be, 0x4b0, 0xa317, 0xc349, 0xd237, 0x1, 0x0);
        gbc.writeMem(0x5a95, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x3be, gbc.sp());
        EXPECT(0x5a97, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C1 016D
        gbc.setState(0x85b7, 0xf57, 0x5080, 0xfd41, 0xd0ee, 0x3da, 0x0, 0x1);
        gbc.writeMem(0x85b7, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xf57, gbc.sp());
        EXPECT(0x85b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x85b7));
        EXPECT(0xc1, gbc.readMem(0x85b8));
        // CB C1 016E
        gbc.setState(0xde0f, 0x5c21, 0x6f80, 0x4b68, 0xce7c, 0x8f92, 0x0, 0x1);
        gbc.writeMem(0xde0f, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x5c21, gbc.sp());
        EXPECT(0xde11, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde0f));
        EXPECT(0xc1, gbc.readMem(0xde10));
        // CB C1 016F
        gbc.setState(0xd273, 0x26f9, 0x9b50, 0x4158, 0xf2a0, 0x7f0c, 0x1, 0x0);
        gbc.writeMem(0xd273, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x26f9, gbc.sp());
        EXPECT(0xd275, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd273));
        EXPECT(0xc1, gbc.readMem(0xd274));
        // CB C1 0170
        gbc.setState(0x3ccf, 0x6917, 0x3ad0, 0xf949, 0x36ad, 0x54fb, 0x0, 0x1);
        gbc.writeMem(0x3ccf, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x6917, gbc.sp());
        EXPECT(0x3cd1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C1 0171
        gbc.setState(0x6be2, 0x78bc, 0xec40, 0xb8fc, 0x2f35, 0xc8ae, 0x1, 0x1);
        gbc.writeMem(0x6be2, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x78bc, gbc.sp());
        EXPECT(0x6be4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C1 0173
        gbc.setState(0x101a, 0xe02b, 0x5500, 0x1bc6, 0x543a, 0x29e5, 0x1, 0x0);
        gbc.writeMem(0x101a, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xe02b, gbc.sp());
        EXPECT(0x101c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C1 0174
        gbc.setState(0x2c98, 0x9972, 0x9d30, 0xca00, 0xd988, 0x738b, 0x1, 0x0);
        gbc.writeMem(0x2c98, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x9972, gbc.sp());
        EXPECT(0x2c9a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C1 0175
        gbc.setState(0xc680, 0x7ae9, 0x4e90, 0x903c, 0xd470, 0x210d, 0x1, 0x0);
        gbc.writeMem(0xc680, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x7ae9, gbc.sp());
        EXPECT(0xc682, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc680));
        EXPECT(0xc1, gbc.readMem(0xc681));
        // CB C1 0176
        gbc.setState(0xead0, 0x7de9, 0xfef0, 0xabed, 0xc69, 0xa61b, 0x1, 0x1);
        gbc.writeMem(0xead0, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x7de9, gbc.sp());
        EXPECT(0xead2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xead0));
        EXPECT(0xc1, gbc.readMem(0xead1));
        // CB C1 0177
        gbc.setState(0x1455, 0x5e6b, 0x7600, 0x85a9, 0x510b, 0x6bdc, 0x0, 0x0);
        gbc.writeMem(0x1455, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x5e6b, gbc.sp());
        EXPECT(0x1457, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C1 0178
        gbc.setState(0xe4d5, 0x5f4e, 0x4270, 0x1514, 0xb552, 0x9722, 0x0, 0x0);
        gbc.writeMem(0xe4d5, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x5f4e, gbc.sp());
        EXPECT(0xe4d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe4d5));
        EXPECT(0xc1, gbc.readMem(0xe4d6));
        // CB C1 0179
        gbc.setState(0xc298, 0x1041, 0x9160, 0x3b21, 0x260f, 0xcc8e, 0x0, 0x0);
        gbc.writeMem(0xc298, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x1041, gbc.sp());
        EXPECT(0xc29a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc298));
        EXPECT(0xc1, gbc.readMem(0xc299));
        // CB C1 017A
        gbc.setState(0xa5f2, 0xa3a6, 0x3ca0, 0xa29a, 0xdfca, 0x5938, 0x0, 0x1);
        gbc.writeMem(0xa5f2, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xa3a6, gbc.sp());
        EXPECT(0xa5f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa5f2));
        EXPECT(0xc1, gbc.readMem(0xa5f3));
        // CB C1 017B
        gbc.setState(0x7667, 0xc656, 0x3710, 0xea85, 0x22f3, 0xdaff, 0x1, 0x1);
        gbc.writeMem(0x7667, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xc656, gbc.sp());
        EXPECT(0x7669, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C1 017C
        gbc.setState(0x85, 0xb8f, 0x3ad0, 0xeac, 0x1b4, 0x8cef, 0x1, 0x1);
        gbc.writeMem(0x85, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xb8f, gbc.sp());
        EXPECT(0x87, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C1 017D
        gbc.setState(0x2309, 0x2468, 0x2c0, 0x3a60, 0x9f9f, 0xd752, 0x0, 0x0);
        gbc.writeMem(0x2309, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x2468, gbc.sp());
        EXPECT(0x230b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C1 017E
        gbc.setState(0x1a68, 0x80ea, 0x3740, 0x90c6, 0xb83e, 0x9ae0, 0x0, 0x1);
        gbc.writeMem(0x1a68, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x80ea, gbc.sp());
        EXPECT(0x1a6a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C1 017F
        gbc.setState(0xd86b, 0xd253, 0xd2b0, 0x7acd, 0x5155, 0x628b, 0x0, 0x1);
        gbc.writeMem(0xd86b, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xd253, gbc.sp());
        EXPECT(0xd86d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd86b));
        EXPECT(0xc1, gbc.readMem(0xd86c));
        // CB C1 0180
        gbc.setState(0x23cd, 0xd27b, 0xeb0, 0xc94, 0x641d, 0x40ae, 0x0, 0x1);
        gbc.writeMem(0x23cd, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xd27b, gbc.sp());
        EXPECT(0x23cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C1 0181
        gbc.setState(0xb3bd, 0x827a, 0x8980, 0x7e47, 0x2fe5, 0x16af, 0x0, 0x1);
        gbc.writeMem(0xb3bd, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x827a, gbc.sp());
        EXPECT(0xb3bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb3bd));
        EXPECT(0xc1, gbc.readMem(0xb3be));
        // CB C1 0182
        gbc.setState(0xcd5f, 0xaf37, 0x7fd0, 0x49f0, 0x9780, 0x2c, 0x1, 0x1);
        gbc.writeMem(0xcd5f, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xaf37, gbc.sp());
        EXPECT(0xcd61, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd5f));
        EXPECT(0xc1, gbc.readMem(0xcd60));
        // CB C1 0183
        gbc.setState(0x4896, 0xa07a, 0xed80, 0xa754, 0x6fb6, 0xf427, 0x1, 0x0);
        gbc.writeMem(0x4896, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xa07a, gbc.sp());
        EXPECT(0x4898, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C1 0184
        gbc.setState(0x91b4, 0x2106, 0x8df0, 0x5cd5, 0x240a, 0xd662, 0x0, 0x1);
        gbc.writeMem(0x91b4, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x2106, gbc.sp());
        EXPECT(0x91b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x91b4));
        EXPECT(0xc1, gbc.readMem(0x91b5));
        // CB C1 0185
        gbc.setState(0xce5b, 0x2aa1, 0x64e0, 0x5bec, 0x4ad6, 0xf959, 0x1, 0x0);
        gbc.writeMem(0xce5b, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x2aa1, gbc.sp());
        EXPECT(0xce5d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce5b));
        EXPECT(0xc1, gbc.readMem(0xce5c));
        // CB C1 0186
        gbc.setState(0x3f7, 0x7d5, 0xdfd0, 0xd3f3, 0x5aeb, 0xcea2, 0x0, 0x1);
        gbc.writeMem(0x3f7, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x7d5, gbc.sp());
        EXPECT(0x3f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C1 0187
        gbc.setState(0xe2ed, 0x7011, 0xe550, 0x1427, 0xf32c, 0xed0d, 0x1, 0x0);
        gbc.writeMem(0xe2ed, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x7011, gbc.sp());
        EXPECT(0xe2ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe2ed));
        EXPECT(0xc1, gbc.readMem(0xe2ee));
        // CB C1 0188
        gbc.setState(0x96e, 0xcff7, 0xcd40, 0x2f31, 0x447, 0x758f, 0x0, 0x1);
        gbc.writeMem(0x96e, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xcff7, gbc.sp());
        EXPECT(0x970, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C1 0189
        gbc.setState(0x7f7b, 0xa8c5, 0x79b0, 0xa0ec, 0x5979, 0xfbe2, 0x0, 0x0);
        gbc.writeMem(0x7f7b, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xa8c5, gbc.sp());
        EXPECT(0x7f7d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C1 018A
        gbc.setState(0x32c7, 0x73df, 0x6830, 0x1df1, 0xb5fe, 0x73a, 0x0, 0x0);
        gbc.writeMem(0x32c7, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x73df, gbc.sp());
        EXPECT(0x32c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C1 018B
        gbc.setState(0x3039, 0xf1ac, 0x1ae0, 0x956f, 0x8a41, 0xd8fc, 0x0, 0x0);
        gbc.writeMem(0x3039, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xf1ac, gbc.sp());
        EXPECT(0x303b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C1 018C
        gbc.setState(0x6a97, 0x9447, 0xa8a0, 0x6721, 0xe0e4, 0xbf1c, 0x0, 0x1);
        gbc.writeMem(0x6a97, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x9447, gbc.sp());
        EXPECT(0x6a99, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C1 018D
        gbc.setState(0x6839, 0x8d94, 0x1400, 0xc9e, 0x4071, 0xbea3, 0x0, 0x1);
        gbc.writeMem(0x6839, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x8d94, gbc.sp());
        EXPECT(0x683b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C1 018E
        gbc.setState(0xab52, 0xeb6f, 0xe7e0, 0x3eb0, 0x9644, 0xfae5, 0x0, 0x0);
        gbc.writeMem(0xab52, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xeb6f, gbc.sp());
        EXPECT(0xab54, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab52));
        EXPECT(0xc1, gbc.readMem(0xab53));
        // CB C1 018F
        gbc.setState(0x8995, 0x4b36, 0x9980, 0x344c, 0xdfd5, 0xb2ea, 0x0, 0x1);
        gbc.writeMem(0x8995, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x4b36, gbc.sp());
        EXPECT(0x8997, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8995));
        EXPECT(0xc1, gbc.readMem(0x8996));
        // CB C1 0190
        gbc.setState(0xe947, 0x1119, 0xa9b0, 0xde43, 0xa203, 0x5195, 0x0, 0x1);
        gbc.writeMem(0xe947, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x1119, gbc.sp());
        EXPECT(0xe949, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe947));
        EXPECT(0xc1, gbc.readMem(0xe948));
        // CB C1 0191
        gbc.setState(0x6084, 0x815, 0x28f0, 0x5af9, 0xcc7f, 0xe9df, 0x1, 0x0);
        gbc.writeMem(0x6084, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x815, gbc.sp());
        EXPECT(0x6086, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C1 0192
        gbc.setState(0xc07d, 0x2e0d, 0x8c80, 0x33e4, 0x3ce8, 0x3a4, 0x1, 0x1);
        gbc.writeMem(0xc07d, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x2e0d, gbc.sp());
        EXPECT(0xc07f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc07d));
        EXPECT(0xc1, gbc.readMem(0xc07e));
        // CB C1 0194
        gbc.setState(0x792d, 0x6d95, 0xb930, 0x10a5, 0xe406, 0x92c3, 0x1, 0x1);
        gbc.writeMem(0x792d, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x6d95, gbc.sp());
        EXPECT(0x792f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C1 0195
        gbc.setState(0x91c5, 0xe6b7, 0xbf40, 0x4404, 0x3a0a, 0x1f47, 0x1, 0x1);
        gbc.writeMem(0x91c5, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xe6b7, gbc.sp());
        EXPECT(0x91c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x91c5));
        EXPECT(0xc1, gbc.readMem(0x91c6));
        // CB C1 0196
        gbc.setState(0x6597, 0x5155, 0x9540, 0xb0b5, 0xa902, 0x852d, 0x0, 0x1);
        gbc.writeMem(0x6597, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x5155, gbc.sp());
        EXPECT(0x6599, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C1 0198
        gbc.setState(0x52a8, 0x4e2b, 0x6020, 0xaa34, 0xa17c, 0x47a5, 0x1, 0x1);
        gbc.writeMem(0x52a8, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x4e2b, gbc.sp());
        EXPECT(0x52aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C1 0199
        gbc.setState(0x591f, 0x995a, 0x4950, 0xc4b1, 0xbdac, 0x9b8c, 0x1, 0x0);
        gbc.writeMem(0x591f, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x995a, gbc.sp());
        EXPECT(0x5921, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C1 019A
        gbc.setState(0x4cde, 0xe300, 0x95f0, 0x73fe, 0xdac6, 0xefbd, 0x1, 0x1);
        gbc.writeMem(0x4cde, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xe300, gbc.sp());
        EXPECT(0x4ce0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C1 019B
        gbc.setState(0x8e82, 0x612b, 0x2710, 0xd2a8, 0x20d0, 0x7342, 0x0, 0x1);
        gbc.writeMem(0x8e82, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x612b, gbc.sp());
        EXPECT(0x8e84, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e82));
        EXPECT(0xc1, gbc.readMem(0x8e83));
        // CB C1 019C
        gbc.setState(0x3b2a, 0x1409, 0xcca0, 0x4ff7, 0x960b, 0xcc49, 0x1, 0x1);
        gbc.writeMem(0x3b2a, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x1409, gbc.sp());
        EXPECT(0x3b2c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C1 019D
        gbc.setState(0x2fa0, 0x3e8, 0xa780, 0xae62, 0xbca6, 0x6fdc, 0x0, 0x1);
        gbc.writeMem(0x2fa0, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x3e8, gbc.sp());
        EXPECT(0x2fa2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C1 019E
        gbc.setState(0x8f63, 0x763b, 0xd910, 0xb15b, 0xece3, 0xaa06, 0x1, 0x1);
        gbc.writeMem(0x8f63, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x763b, gbc.sp());
        EXPECT(0x8f65, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f63));
        EXPECT(0xc1, gbc.readMem(0x8f64));
        // CB C1 019F
        gbc.setState(0x8ece, 0xabcd, 0x46b0, 0x2f31, 0x2355, 0x681f, 0x0, 0x1);
        gbc.writeMem(0x8ece, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xabcd, gbc.sp());
        EXPECT(0x8ed0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ece));
        EXPECT(0xc1, gbc.readMem(0x8ecf));
        // CB C1 01A0
        gbc.setState(0xd385, 0x3a7, 0x3cd0, 0x191, 0x46a3, 0x1b14, 0x0, 0x1);
        gbc.writeMem(0xd385, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x3a7, gbc.sp());
        EXPECT(0xd387, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd385));
        EXPECT(0xc1, gbc.readMem(0xd386));
        // CB C1 01A1
        gbc.setState(0xd774, 0x21f9, 0x3260, 0xb186, 0x7f3c, 0xa7df, 0x0, 0x0);
        gbc.writeMem(0xd774, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x21f9, gbc.sp());
        EXPECT(0xd776, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd774));
        EXPECT(0xc1, gbc.readMem(0xd775));
        // CB C1 01A2
        gbc.setState(0x2032, 0x43cf, 0xb530, 0xbb19, 0xfb51, 0x1be, 0x0, 0x1);
        gbc.writeMem(0x2032, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x43cf, gbc.sp());
        EXPECT(0x2034, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C1 01A3
        gbc.setState(0x5729, 0xdf20, 0xf450, 0x5405, 0xa074, 0x17af, 0x0, 0x0);
        gbc.writeMem(0x5729, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xdf20, gbc.sp());
        EXPECT(0x572b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C1 01A4
        gbc.setState(0x25cb, 0x381d, 0x7f90, 0xb853, 0xfdad, 0xfad8, 0x0, 0x1);
        gbc.writeMem(0x25cb, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x381d, gbc.sp());
        EXPECT(0x25cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C1 01A6
        gbc.setState(0xcead, 0x41ab, 0x8ea0, 0xca50, 0x3c8, 0xa9b2, 0x0, 0x1);
        gbc.writeMem(0xcead, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x41ab, gbc.sp());
        EXPECT(0xceaf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcead));
        EXPECT(0xc1, gbc.readMem(0xceae));
        // CB C1 01A7
        gbc.setState(0xb388, 0x75a9, 0xc070, 0xa507, 0x16af, 0x3f2a, 0x0, 0x0);
        gbc.writeMem(0xb388, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x75a9, gbc.sp());
        EXPECT(0xb38a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb388));
        EXPECT(0xc1, gbc.readMem(0xb389));
        // CB C1 01A8
        gbc.setState(0x741e, 0xa41, 0x64b0, 0xe926, 0xc5d5, 0x93e0, 0x0, 0x1);
        gbc.writeMem(0x741e, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xa41, gbc.sp());
        EXPECT(0x7420, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C1 01A9
        gbc.setState(0x7433, 0xd575, 0x36c0, 0xfe33, 0x56af, 0xd847, 0x0, 0x0);
        gbc.writeMem(0x7433, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xd575, gbc.sp());
        EXPECT(0x7435, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C1 01AA
        gbc.setState(0x60a4, 0x6e1a, 0x7530, 0xd3ae, 0xb4db, 0x175e, 0x0, 0x0);
        gbc.writeMem(0x60a4, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x6e1a, gbc.sp());
        EXPECT(0x60a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C1 01AB
        gbc.setState(0x1378, 0x19c9, 0xec10, 0xb764, 0xb20a, 0x1b0, 0x0, 0x1);
        gbc.writeMem(0x1378, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x19c9, gbc.sp());
        EXPECT(0x137a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C1 01AC
        gbc.setState(0xa6d3, 0x1d27, 0x2440, 0x3218, 0x4136, 0x8bc0, 0x0, 0x0);
        gbc.writeMem(0xa6d3, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x1d27, gbc.sp());
        EXPECT(0xa6d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa6d3));
        EXPECT(0xc1, gbc.readMem(0xa6d4));
        // CB C1 01AD
        gbc.setState(0xe325, 0x2fb7, 0xab50, 0x9e6a, 0x67c0, 0x508a, 0x0, 0x1);
        gbc.writeMem(0xe325, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x2fb7, gbc.sp());
        EXPECT(0xe327, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe325));
        EXPECT(0xc1, gbc.readMem(0xe326));
        // CB C1 01AE
        gbc.setState(0x4906, 0xf728, 0xf380, 0x23c6, 0xddc, 0xa57a, 0x1, 0x1);
        gbc.writeMem(0x4906, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xf728, gbc.sp());
        EXPECT(0x4908, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C1 01AF
        gbc.setState(0x8be7, 0xce1d, 0xb990, 0x6a74, 0x7482, 0xef34, 0x1, 0x1);
        gbc.writeMem(0x8be7, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xce1d, gbc.sp());
        EXPECT(0x8be9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8be7));
        EXPECT(0xc1, gbc.readMem(0x8be8));
        // CB C1 01B0
        gbc.setState(0x4de, 0x38ad, 0x8b50, 0x57b2, 0xbc61, 0x7d8, 0x1, 0x1);
        gbc.writeMem(0x4de, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x38ad, gbc.sp());
        EXPECT(0x4e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C1 01B1
        gbc.setState(0x7abf, 0x1d2a, 0xf7d0, 0x838e, 0xcfcb, 0x578a, 0x0, 0x1);
        gbc.writeMem(0x7abf, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x1d2a, gbc.sp());
        EXPECT(0x7ac1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C1 01B2
        gbc.setState(0x6896, 0x5286, 0x12d0, 0xa3e8, 0x163e, 0x8d54, 0x0, 0x1);
        gbc.writeMem(0x6896, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x5286, gbc.sp());
        EXPECT(0x6898, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C1 01B3
        gbc.setState(0x4107, 0x24c, 0xe130, 0x33ad, 0x22a3, 0xa555, 0x0, 0x0);
        gbc.writeMem(0x4107, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x24c, gbc.sp());
        EXPECT(0x4109, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C1 01B4
        gbc.setState(0x6fb4, 0xe992, 0xe190, 0x35e8, 0x3d2b, 0x85e, 0x1, 0x0);
        gbc.writeMem(0x6fb4, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xe992, gbc.sp());
        EXPECT(0x6fb6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C1 01B5
        gbc.setState(0x70b7, 0xa234, 0x380, 0x1d22, 0xa47c, 0x6ae0, 0x0, 0x0);
        gbc.writeMem(0x70b7, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xa234, gbc.sp());
        EXPECT(0x70b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C1 01B6
        gbc.setState(0xeacd, 0x63b7, 0x7d20, 0x3924, 0xb423, 0x4af0, 0x0, 0x1);
        gbc.writeMem(0xeacd, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x63b7, gbc.sp());
        EXPECT(0xeacf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeacd));
        EXPECT(0xc1, gbc.readMem(0xeace));
        // CB C1 01B7
        gbc.setState(0xbee6, 0xaf4c, 0x3230, 0xc90, 0xf980, 0x8358, 0x1, 0x1);
        gbc.writeMem(0xbee6, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xaf4c, gbc.sp());
        EXPECT(0xbee8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbee6));
        EXPECT(0xc1, gbc.readMem(0xbee7));
        // CB C1 01B8
        gbc.setState(0x3e4f, 0xa32d, 0x2110, 0x1f1, 0xf377, 0x9db3, 0x0, 0x1);
        gbc.writeMem(0x3e4f, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xa32d, gbc.sp());
        EXPECT(0x3e51, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C1 01BA
        gbc.setState(0x6068, 0x22bb, 0x6ca0, 0x372, 0x3c83, 0xa46a, 0x1, 0x1);
        gbc.writeMem(0x6068, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x22bb, gbc.sp());
        EXPECT(0x606a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C1 01BB
        gbc.setState(0x26e1, 0xd4cb, 0x3840, 0x87, 0x48d2, 0x491e, 0x1, 0x1);
        gbc.writeMem(0x26e1, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xd4cb, gbc.sp());
        EXPECT(0x26e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C1 01BC
        gbc.setState(0xb56c, 0x7abd, 0xfa50, 0x409a, 0x66e7, 0x3d41, 0x1, 0x1);
        gbc.writeMem(0xb56c, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x7abd, gbc.sp());
        EXPECT(0xb56e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb56c));
        EXPECT(0xc1, gbc.readMem(0xb56d));
        // CB C1 01BD
        gbc.setState(0x2a34, 0x2367, 0x29d0, 0x744f, 0xa8e9, 0xe3af, 0x0, 0x1);
        gbc.writeMem(0x2a34, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x2367, gbc.sp());
        EXPECT(0x2a36, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C1 01BE
        gbc.setState(0x99a1, 0xf280, 0x3c50, 0x9ae9, 0x2555, 0xcae, 0x1, 0x0);
        gbc.writeMem(0x99a1, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xf280, gbc.sp());
        EXPECT(0x99a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x99a1));
        EXPECT(0xc1, gbc.readMem(0x99a2));
        // CB C1 01BF
        gbc.setState(0xb410, 0x96dc, 0x82f0, 0x925d, 0x840b, 0xb202, 0x0, 0x1);
        gbc.writeMem(0xb410, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x96dc, gbc.sp());
        EXPECT(0xb412, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb410));
        EXPECT(0xc1, gbc.readMem(0xb411));
        // CB C1 01C0
        gbc.setState(0xe442, 0x3b3b, 0x9010, 0x131e, 0xdfba, 0x55e6, 0x1, 0x1);
        gbc.writeMem(0xe442, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x3b3b, gbc.sp());
        EXPECT(0xe444, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe442));
        EXPECT(0xc1, gbc.readMem(0xe443));
        // CB C1 01C1
        gbc.setState(0x41a3, 0xd0bb, 0xfa60, 0xbfad, 0x4e95, 0x86e8, 0x0, 0x0);
        gbc.writeMem(0x41a3, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xd0bb, gbc.sp());
        EXPECT(0x41a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C1 01C2
        gbc.setState(0x35c6, 0xb660, 0xe760, 0x930f, 0xf198, 0x1ab1, 0x0, 0x0);
        gbc.writeMem(0x35c6, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xb660, gbc.sp());
        EXPECT(0x35c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C1 01C3
        gbc.setState(0x2cb4, 0x27d, 0x1c90, 0xf31f, 0x9d3c, 0x8905, 0x0, 0x1);
        gbc.writeMem(0x2cb4, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x27d, gbc.sp());
        EXPECT(0x2cb6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C1 01C4
        gbc.setState(0x691, 0xccd2, 0xfae0, 0x5790, 0xfc75, 0x3a33, 0x1, 0x1);
        gbc.writeMem(0x691, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xccd2, gbc.sp());
        EXPECT(0x693, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C1 01C5
        gbc.setState(0xb02d, 0xee92, 0xae10, 0xabeb, 0x73a4, 0x15fa, 0x0, 0x0);
        gbc.writeMem(0xb02d, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xee92, gbc.sp());
        EXPECT(0xb02f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb02d));
        EXPECT(0xc1, gbc.readMem(0xb02e));
        // CB C1 01C6
        gbc.setState(0x8a0f, 0xbf99, 0x8420, 0x2a47, 0xfe74, 0xb522, 0x1, 0x0);
        gbc.writeMem(0x8a0f, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xbf99, gbc.sp());
        EXPECT(0x8a11, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a0f));
        EXPECT(0xc1, gbc.readMem(0x8a10));
        // CB C1 01C7
        gbc.setState(0x728b, 0xd824, 0xe5f0, 0xad86, 0x1c25, 0x59bd, 0x0, 0x1);
        gbc.writeMem(0x728b, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xd824, gbc.sp());
        EXPECT(0x728d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C1 01C8
        gbc.setState(0x96ec, 0x341c, 0x9540, 0x1546, 0xf990, 0x27a6, 0x0, 0x1);
        gbc.writeMem(0x96ec, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x341c, gbc.sp());
        EXPECT(0x96ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x96ec));
        EXPECT(0xc1, gbc.readMem(0x96ed));
        // CB C1 01C9
        gbc.setState(0xc57a, 0x85bb, 0xa4c0, 0x6edd, 0x7815, 0xe0a0, 0x1, 0x1);
        gbc.writeMem(0xc57a, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x85bb, gbc.sp());
        EXPECT(0xc57c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc57a));
        EXPECT(0xc1, gbc.readMem(0xc57b));
        // CB C1 01CA
        gbc.setState(0x758b, 0xcfdf, 0x6200, 0xfea4, 0x372f, 0x513c, 0x1, 0x1);
        gbc.writeMem(0x758b, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xcfdf, gbc.sp());
        EXPECT(0x758d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C1 01CB
        gbc.setState(0x25e3, 0xb483, 0x460, 0x7069, 0x1a0, 0x218c, 0x0, 0x1);
        gbc.writeMem(0x25e3, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xb483, gbc.sp());
        EXPECT(0x25e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C1 01CC
        gbc.setState(0xee0, 0x9aea, 0x1f80, 0xaa2b, 0x209f, 0xe587, 0x1, 0x1);
        gbc.writeMem(0xee0, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x9aea, gbc.sp());
        EXPECT(0xee2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C1 01CD
        gbc.setState(0x374, 0xec77, 0xd940, 0x1b30, 0x7722, 0x2931, 0x0, 0x1);
        gbc.writeMem(0x374, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xec77, gbc.sp());
        EXPECT(0x376, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C1 01CE
        gbc.setState(0x2e47, 0xa95e, 0x8340, 0x2099, 0x6cec, 0x8228, 0x0, 0x0);
        gbc.writeMem(0x2e47, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xa95e, gbc.sp());
        EXPECT(0x2e49, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C1 01CF
        gbc.setState(0xeefa, 0xeebf, 0x8790, 0xadec, 0xc08f, 0x4e23, 0x0, 0x1);
        gbc.writeMem(0xeefa, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xeebf, gbc.sp());
        EXPECT(0xeefc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeefa));
        EXPECT(0xc1, gbc.readMem(0xeefb));
        // CB C1 01D0
        gbc.setState(0xd320, 0xca2e, 0x5a80, 0x7c51, 0x3a8b, 0xb195, 0x0, 0x0);
        gbc.writeMem(0xd320, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xca2e, gbc.sp());
        EXPECT(0xd322, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd320));
        EXPECT(0xc1, gbc.readMem(0xd321));
        // CB C1 01D1
        gbc.setState(0x29df, 0xbd22, 0x9c70, 0x89d3, 0xbceb, 0x6382, 0x1, 0x0);
        gbc.writeMem(0x29df, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xbd22, gbc.sp());
        EXPECT(0x29e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C1 01D2
        gbc.setState(0xdea5, 0x3144, 0x8b80, 0x8354, 0x7043, 0x7e23, 0x0, 0x1);
        gbc.writeMem(0xdea5, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x3144, gbc.sp());
        EXPECT(0xdea7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdea5));
        EXPECT(0xc1, gbc.readMem(0xdea6));
        // CB C1 01D3
        gbc.setState(0xa003, 0x2bd4, 0x2440, 0xa196, 0xa871, 0xe77a, 0x0, 0x0);
        gbc.writeMem(0xa003, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x2bd4, gbc.sp());
        EXPECT(0xa005, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa003));
        EXPECT(0xc1, gbc.readMem(0xa004));
        // CB C1 01D4
        gbc.setState(0x5b56, 0xb38a, 0xa1b0, 0xc155, 0x15a7, 0x6447, 0x1, 0x1);
        gbc.writeMem(0x5b56, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xb38a, gbc.sp());
        EXPECT(0x5b58, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C1 01D5
        gbc.setState(0x3884, 0x91fe, 0x6140, 0x3d29, 0x6896, 0x9975, 0x1, 0x1);
        gbc.writeMem(0x3884, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x91fe, gbc.sp());
        EXPECT(0x3886, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C1 01D6
        gbc.setState(0xc474, 0x199a, 0x960, 0x7b85, 0xf0c0, 0x2e99, 0x1, 0x0);
        gbc.writeMem(0xc474, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x199a, gbc.sp());
        EXPECT(0xc476, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc474));
        EXPECT(0xc1, gbc.readMem(0xc475));
        // CB C1 01D7
        gbc.setState(0xaf74, 0x73bd, 0xefb0, 0x9dcf, 0xb540, 0xe5a2, 0x1, 0x1);
        gbc.writeMem(0xaf74, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x73bd, gbc.sp());
        EXPECT(0xaf76, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf74));
        EXPECT(0xc1, gbc.readMem(0xaf75));
        // CB C1 01D8
        gbc.setState(0x23ae, 0x8f95, 0xeb40, 0xb30, 0xbd0a, 0x70c5, 0x1, 0x1);
        gbc.writeMem(0x23ae, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x8f95, gbc.sp());
        EXPECT(0x23b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C1 01D9
        gbc.setState(0x1118, 0xfd10, 0x7680, 0xdd77, 0x66b1, 0xd81, 0x0, 0x1);
        gbc.writeMem(0x1118, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xfd10, gbc.sp());
        EXPECT(0x111a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C1 01DA
        gbc.setState(0x8469, 0xe31b, 0xba20, 0x82bb, 0xeee5, 0xe850, 0x1, 0x1);
        gbc.writeMem(0x8469, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xe31b, gbc.sp());
        EXPECT(0x846b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8469));
        EXPECT(0xc1, gbc.readMem(0x846a));
        // CB C1 01DB
        gbc.setState(0xabc9, 0x6801, 0x9ce0, 0xa21b, 0xad1c, 0x28b5, 0x0, 0x0);
        gbc.writeMem(0xabc9, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x6801, gbc.sp());
        EXPECT(0xabcb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xabc9));
        EXPECT(0xc1, gbc.readMem(0xabca));
        // CB C1 01DC
        gbc.setState(0xcd3a, 0xba74, 0x1fa0, 0x8c8e, 0xc2d5, 0x4c74, 0x1, 0x1);
        gbc.writeMem(0xcd3a, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xba74, gbc.sp());
        EXPECT(0xcd3c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd3a));
        EXPECT(0xc1, gbc.readMem(0xcd3b));
        // CB C1 01DE
        gbc.setState(0x7ac4, 0xb8d0, 0xdea0, 0x32f3, 0x24e, 0xeecd, 0x0, 0x0);
        gbc.writeMem(0x7ac4, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xb8d0, gbc.sp());
        EXPECT(0x7ac6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C1 01DF
        gbc.setState(0xcf53, 0x32a6, 0xc470, 0xebfa, 0x3ba4, 0x876d, 0x0, 0x0);
        gbc.writeMem(0xcf53, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x32a6, gbc.sp());
        EXPECT(0xcf55, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf53));
        EXPECT(0xc1, gbc.readMem(0xcf54));
        // CB C1 01E0
        gbc.setState(0xe4ae, 0x9c26, 0x9ff0, 0x8a8c, 0x7d59, 0xda5d, 0x1, 0x0);
        gbc.writeMem(0xe4ae, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x9c26, gbc.sp());
        EXPECT(0xe4b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe4ae));
        EXPECT(0xc1, gbc.readMem(0xe4af));
        // CB C1 01E1
        gbc.setState(0x54cd, 0xffb3, 0x830, 0x6dfe, 0x3afe, 0x143f, 0x0, 0x0);
        gbc.writeMem(0x54cd, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xffb3, gbc.sp());
        EXPECT(0x54cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C1 01E2
        gbc.setState(0xbb3b, 0xb6ed, 0x5740, 0xbf8, 0x2d81, 0x5594, 0x0, 0x1);
        gbc.writeMem(0xbb3b, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xb6ed, gbc.sp());
        EXPECT(0xbb3d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb3b));
        EXPECT(0xc1, gbc.readMem(0xbb3c));
        // CB C1 01E3
        gbc.setState(0xb6e8, 0x3ebd, 0xc700, 0x9db7, 0x9cc7, 0xf1ec, 0x1, 0x1);
        gbc.writeMem(0xb6e8, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x3ebd, gbc.sp());
        EXPECT(0xb6ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb6e8));
        EXPECT(0xc1, gbc.readMem(0xb6e9));
        // CB C1 01E4
        gbc.setState(0x6272, 0xc0fd, 0xd50, 0x9356, 0x8e3e, 0xaad6, 0x0, 0x0);
        gbc.writeMem(0x6272, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xc0fd, gbc.sp());
        EXPECT(0x6274, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C1 01E5
        gbc.setState(0x2af6, 0x7f32, 0x9900, 0x9fa1, 0x1f92, 0x95fc, 0x0, 0x1);
        gbc.writeMem(0x2af6, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x7f32, gbc.sp());
        EXPECT(0x2af8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C1 01E6
        gbc.setState(0xc3c9, 0xdfd7, 0xb130, 0x732d, 0x869b, 0xb3a2, 0x0, 0x1);
        gbc.writeMem(0xc3c9, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xdfd7, gbc.sp());
        EXPECT(0xc3cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc3c9));
        EXPECT(0xc1, gbc.readMem(0xc3ca));
        // CB C1 01E7
        gbc.setState(0xb6ae, 0xfb8e, 0x14a0, 0x2a74, 0xe32a, 0x70e3, 0x1, 0x0);
        gbc.writeMem(0xb6ae, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xfb8e, gbc.sp());
        EXPECT(0xb6b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb6ae));
        EXPECT(0xc1, gbc.readMem(0xb6af));
        // CB C1 01E8
        gbc.setState(0xd0a6, 0x32f1, 0x62a0, 0x2787, 0x47b1, 0x9ee6, 0x0, 0x0);
        gbc.writeMem(0xd0a6, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x32f1, gbc.sp());
        EXPECT(0xd0a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd0a6));
        EXPECT(0xc1, gbc.readMem(0xd0a7));
        // CB C1 01E9
        gbc.setState(0x1462, 0x7230, 0x45e0, 0x2e05, 0x6952, 0xecfe, 0x1, 0x1);
        gbc.writeMem(0x1462, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x7230, gbc.sp());
        EXPECT(0x1464, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C1 01EA
        gbc.setState(0xea05, 0x5b5c, 0xa0, 0xb2a6, 0x3883, 0x9c51, 0x0, 0x1);
        gbc.writeMem(0xea05, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x5b5c, gbc.sp());
        EXPECT(0xea07, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea05));
        EXPECT(0xc1, gbc.readMem(0xea06));
        // CB C1 01EB
        gbc.setState(0xefc3, 0xe9d7, 0xd990, 0xc15d, 0x6fd4, 0xdd76, 0x0, 0x0);
        gbc.writeMem(0xefc3, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xe9d7, gbc.sp());
        EXPECT(0xefc5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xefc3));
        EXPECT(0xc1, gbc.readMem(0xefc4));
        // CB C1 01EC
        gbc.setState(0x924a, 0xe8d9, 0xac80, 0xb78e, 0x7535, 0x6347, 0x0, 0x1);
        gbc.writeMem(0x924a, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xe8d9, gbc.sp());
        EXPECT(0x924c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x924a));
        EXPECT(0xc1, gbc.readMem(0x924b));
        // CB C1 01ED
        gbc.setState(0x357b, 0x710c, 0x2710, 0x2c5a, 0xc5a2, 0xfaa7, 0x1, 0x1);
        gbc.writeMem(0x357b, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x710c, gbc.sp());
        EXPECT(0x357d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C1 01EE
        gbc.setState(0xefb3, 0xaa8f, 0x8b50, 0x46a9, 0x394c, 0x6f75, 0x0, 0x1);
        gbc.writeMem(0xefb3, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xaa8f, gbc.sp());
        EXPECT(0xefb5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xefb3));
        EXPECT(0xc1, gbc.readMem(0xefb4));
        // CB C1 01EF
        gbc.setState(0x7b88, 0xb7dc, 0x6340, 0x2b90, 0xdbc, 0x7c40, 0x0, 0x0);
        gbc.writeMem(0x7b88, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xb7dc, gbc.sp());
        EXPECT(0x7b8a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C1 01F0
        gbc.setState(0xe740, 0x4161, 0x4cc0, 0x94b6, 0x5f28, 0x29dc, 0x1, 0x0);
        gbc.writeMem(0xe740, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x4161, gbc.sp());
        EXPECT(0xe742, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe740));
        EXPECT(0xc1, gbc.readMem(0xe741));
        // CB C1 01F1
        gbc.setState(0x938e, 0xd86e, 0x90a0, 0xd142, 0xefeb, 0x5788, 0x1, 0x1);
        gbc.writeMem(0x938e, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xd86e, gbc.sp());
        EXPECT(0x9390, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x938e));
        EXPECT(0xc1, gbc.readMem(0x938f));
        // CB C1 01F2
        gbc.setState(0x6753, 0x7cd8, 0x9570, 0x15e6, 0x241e, 0xfae6, 0x1, 0x1);
        gbc.writeMem(0x6753, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x7cd8, gbc.sp());
        EXPECT(0x6755, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C1 01F3
        gbc.setState(0x697d, 0xdc79, 0x8570, 0x2ed7, 0x8ffa, 0x35bf, 0x1, 0x0);
        gbc.writeMem(0x697d, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xdc79, gbc.sp());
        EXPECT(0x697f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C1 01F4
        gbc.setState(0x5949, 0xbd88, 0xc720, 0xf4e6, 0xa08e, 0x3f4c, 0x1, 0x0);
        gbc.writeMem(0x5949, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xbd88, gbc.sp());
        EXPECT(0x594b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C1 01F5
        gbc.setState(0x4ff5, 0x2735, 0x2140, 0x56ac, 0xb1e4, 0x22bf, 0x1, 0x0);
        gbc.writeMem(0x4ff5, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x2735, gbc.sp());
        EXPECT(0x4ff7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C1 01F6
        gbc.setState(0xe33b, 0x24c1, 0xdd50, 0x5f09, 0xfdfc, 0x22a0, 0x1, 0x0);
        gbc.writeMem(0xe33b, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x24c1, gbc.sp());
        EXPECT(0xe33d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe33b));
        EXPECT(0xc1, gbc.readMem(0xe33c));
        // CB C1 01F8
        gbc.setState(0x667e, 0x1306, 0x3860, 0xc694, 0x8116, 0xe6a7, 0x1, 0x0);
        gbc.writeMem(0x667e, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x1306, gbc.sp());
        EXPECT(0x6680, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C1 01FB
        gbc.setState(0x8cb9, 0xef, 0x58d0, 0x426c, 0xfe90, 0xb567, 0x0, 0x0);
        gbc.writeMem(0x8cb9, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xef, gbc.sp());
        EXPECT(0x8cbb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8cb9));
        EXPECT(0xc1, gbc.readMem(0x8cba));
        // CB C1 01FC
        gbc.setState(0xc135, 0xe637, 0xd430, 0xdc18, 0x444e, 0x1f35, 0x0, 0x1);
        gbc.writeMem(0xc135, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xe637, gbc.sp());
        EXPECT(0xc137, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc135));
        EXPECT(0xc1, gbc.readMem(0xc136));
        // CB C1 01FD
        gbc.setState(0x280e, 0x7986, 0x5750, 0xd1ed, 0x136, 0x6f3c, 0x1, 0x1);
        gbc.writeMem(0x280e, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x7986, gbc.sp());
        EXPECT(0x2810, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C1 01FE
        gbc.setState(0x914d, 0x45b0, 0xc220, 0x8838, 0x3377, 0x8b1a, 0x1, 0x1);
        gbc.writeMem(0x914d, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x45b0, gbc.sp());
        EXPECT(0x914f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x914d));
        EXPECT(0xc1, gbc.readMem(0x914e));
        // CB C1 01FF
        gbc.setState(0xb803, 0x64e4, 0x6ba0, 0xca3f, 0x6c70, 0x9a98, 0x0, 0x1);
        gbc.writeMem(0xb803, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x64e4, gbc.sp());
        EXPECT(0xb805, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb803));
        EXPECT(0xc1, gbc.readMem(0xb804));
        // CB C1 0200
        gbc.setState(0xba84, 0xb4cc, 0x1920, 0xb27a, 0x3c5a, 0x9c26, 0x0, 0x0);
        gbc.writeMem(0xba84, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xb4cc, gbc.sp());
        EXPECT(0xba86, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba84));
        EXPECT(0xc1, gbc.readMem(0xba85));
        // CB C1 0201
        gbc.setState(0x7ef2, 0x8d27, 0x6c60, 0xf48f, 0x479f, 0x79ca, 0x0, 0x1);
        gbc.writeMem(0x7ef2, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x8d27, gbc.sp());
        EXPECT(0x7ef4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C1 0202
        gbc.setState(0xd413, 0xec04, 0xf4d0, 0x2552, 0xbedc, 0xd681, 0x1, 0x0);
        gbc.writeMem(0xd413, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xec04, gbc.sp());
        EXPECT(0xd415, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd413));
        EXPECT(0xc1, gbc.readMem(0xd414));
        // CB C1 0203
        gbc.setState(0x758f, 0x41e6, 0x32c0, 0xa24, 0x9823, 0x8346, 0x0, 0x0);
        gbc.writeMem(0x758f, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x41e6, gbc.sp());
        EXPECT(0x7591, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C1 0204
        gbc.setState(0x36f9, 0xe170, 0x5660, 0x368d, 0xe783, 0x4331, 0x1, 0x0);
        gbc.writeMem(0x36f9, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xe170, gbc.sp());
        EXPECT(0x36fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C1 0206
        gbc.setState(0xbc23, 0x1122, 0x8f00, 0x4370, 0x4d69, 0x1c06, 0x1, 0x1);
        gbc.writeMem(0xbc23, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x1122, gbc.sp());
        EXPECT(0xbc25, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc23));
        EXPECT(0xc1, gbc.readMem(0xbc24));
        // CB C1 0207
        gbc.setState(0x3bb6, 0xe61f, 0xd720, 0xd06, 0xdace, 0xd2a5, 0x0, 0x1);
        gbc.writeMem(0x3bb6, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xe61f, gbc.sp());
        EXPECT(0x3bb8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C1 0208
        gbc.setState(0xed1b, 0xf806, 0xb5f0, 0x375f, 0x4525, 0x1485, 0x1, 0x0);
        gbc.writeMem(0xed1b, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xf806, gbc.sp());
        EXPECT(0xed1d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed1b));
        EXPECT(0xc1, gbc.readMem(0xed1c));
        // CB C1 0209
        gbc.setState(0xbb20, 0x5510, 0x9da0, 0x5641, 0xec60, 0xd69, 0x1, 0x1);
        gbc.writeMem(0xbb20, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x5510, gbc.sp());
        EXPECT(0xbb22, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb20));
        EXPECT(0xc1, gbc.readMem(0xbb21));
        // CB C1 020A
        gbc.setState(0x7be5, 0xc7a4, 0xdd0, 0xf791, 0x5911, 0xd9bd, 0x1, 0x0);
        gbc.writeMem(0x7be5, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xc7a4, gbc.sp());
        EXPECT(0x7be7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C1 020B
        gbc.setState(0xbb, 0xd462, 0x49a0, 0xb89c, 0xb916, 0xdca7, 0x1, 0x1);
        gbc.writeMem(0xbb, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xd462, gbc.sp());
        EXPECT(0xbd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C1 020C
        gbc.setState(0xa14a, 0xfff7, 0x41a0, 0x2e74, 0xbbfd, 0x2a4d, 0x0, 0x1);
        gbc.writeMem(0xa14a, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xfff7, gbc.sp());
        EXPECT(0xa14c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa14a));
        EXPECT(0xc1, gbc.readMem(0xa14b));
        // CB C1 020D
        gbc.setState(0xe47d, 0x544c, 0xc6c0, 0xd90e, 0x4351, 0x8dfa, 0x1, 0x1);
        gbc.writeMem(0xe47d, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x544c, gbc.sp());
        EXPECT(0xe47f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe47d));
        EXPECT(0xc1, gbc.readMem(0xe47e));
        // CB C1 020E
        gbc.setState(0x273b, 0xa0e9, 0xf7f0, 0xbc1c, 0x53bc, 0x9c0b, 0x0, 0x1);
        gbc.writeMem(0x273b, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xa0e9, gbc.sp());
        EXPECT(0x273d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C1 020F
        gbc.setState(0xbb7c, 0x72e1, 0xc3a0, 0x5af4, 0xf0b1, 0x2708, 0x0, 0x1);
        gbc.writeMem(0xbb7c, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x72e1, gbc.sp());
        EXPECT(0xbb7e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb7c));
        EXPECT(0xc1, gbc.readMem(0xbb7d));
        // CB C1 0210
        gbc.setState(0x23ca, 0x9741, 0xe1d0, 0x19c0, 0xd82, 0xd699, 0x1, 0x1);
        gbc.writeMem(0x23ca, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x9741, gbc.sp());
        EXPECT(0x23cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C1 0211
        gbc.setState(0x89c0, 0x1a1, 0x4eb0, 0xcc4a, 0x236d, 0x5fb4, 0x1, 0x1);
        gbc.writeMem(0x89c0, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x1a1, gbc.sp());
        EXPECT(0x89c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x89c0));
        EXPECT(0xc1, gbc.readMem(0x89c1));
        // CB C1 0212
        gbc.setState(0x7fc4, 0x279f, 0x3900, 0xe5e0, 0x1e7b, 0x55e2, 0x0, 0x1);
        gbc.writeMem(0x7fc4, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x279f, gbc.sp());
        EXPECT(0x7fc6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C1 0214
        gbc.setState(0x33a1, 0xe3ce, 0x8a70, 0xf120, 0xb7cf, 0xa116, 0x0, 0x1);
        gbc.writeMem(0x33a1, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xe3ce, gbc.sp());
        EXPECT(0x33a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C1 0215
        gbc.setState(0xd7a5, 0x6869, 0xb5b0, 0xeb0, 0xb15d, 0xffe4, 0x0, 0x1);
        gbc.writeMem(0xd7a5, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x6869, gbc.sp());
        EXPECT(0xd7a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd7a5));
        EXPECT(0xc1, gbc.readMem(0xd7a6));
        // CB C1 0217
        gbc.setState(0x4fb4, 0x2e21, 0x1fb0, 0x932b, 0x1158, 0xc2b6, 0x1, 0x1);
        gbc.writeMem(0x4fb4, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x2e21, gbc.sp());
        EXPECT(0x4fb6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C1 0218
        gbc.setState(0xb41b, 0xc749, 0xbdd0, 0x2423, 0x8f7c, 0x2247, 0x1, 0x0);
        gbc.writeMem(0xb41b, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xc749, gbc.sp());
        EXPECT(0xb41d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb41b));
        EXPECT(0xc1, gbc.readMem(0xb41c));
        // CB C1 0219
        gbc.setState(0x1fd5, 0x7111, 0xfbf0, 0xb220, 0x702d, 0xc8e4, 0x1, 0x1);
        gbc.writeMem(0x1fd5, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x7111, gbc.sp());
        EXPECT(0x1fd7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C1 021A
        gbc.setState(0xc50f, 0x44e4, 0x25e0, 0xdcd7, 0xc6e6, 0x4f5b, 0x1, 0x1);
        gbc.writeMem(0xc50f, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x44e4, gbc.sp());
        EXPECT(0xc511, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc50f));
        EXPECT(0xc1, gbc.readMem(0xc510));
        // CB C1 021B
        gbc.setState(0x46ec, 0x5a39, 0xdf90, 0x5789, 0xafa3, 0x45ad, 0x0, 0x0);
        gbc.writeMem(0x46ec, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x5a39, gbc.sp());
        EXPECT(0x46ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C1 021C
        gbc.setState(0x9189, 0x538f, 0x49b0, 0x1bf3, 0xf799, 0x4c48, 0x0, 0x0);
        gbc.writeMem(0x9189, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x538f, gbc.sp());
        EXPECT(0x918b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9189));
        EXPECT(0xc1, gbc.readMem(0x918a));
        // CB C1 021D
        gbc.setState(0xbcd4, 0x922f, 0xce80, 0x95b4, 0xf9e, 0xc7da, 0x0, 0x0);
        gbc.writeMem(0xbcd4, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x922f, gbc.sp());
        EXPECT(0xbcd6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbcd4));
        EXPECT(0xc1, gbc.readMem(0xbcd5));
        // CB C1 021E
        gbc.setState(0xf7a, 0x88f1, 0xfdd0, 0x4bd8, 0x2412, 0x528f, 0x0, 0x0);
        gbc.writeMem(0xf7a, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x88f1, gbc.sp());
        EXPECT(0xf7c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C1 021F
        gbc.setState(0x27f0, 0xda2f, 0x48b0, 0x2c4e, 0x493, 0x5084, 0x0, 0x1);
        gbc.writeMem(0x27f0, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xda2f, gbc.sp());
        EXPECT(0x27f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C1 0220
        gbc.setState(0xec72, 0x6124, 0x61f0, 0xea81, 0xfb49, 0x2ee8, 0x0, 0x0);
        gbc.writeMem(0xec72, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x6124, gbc.sp());
        EXPECT(0xec74, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec72));
        EXPECT(0xc1, gbc.readMem(0xec73));
        // CB C1 0221
        gbc.setState(0x42b2, 0x91f0, 0x9b80, 0x4ab9, 0xbd10, 0x1f92, 0x0, 0x0);
        gbc.writeMem(0x42b2, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x91f0, gbc.sp());
        EXPECT(0x42b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C1 0222
        gbc.setState(0x82dd, 0xb18f, 0x87d0, 0x21b6, 0xbe71, 0xebce, 0x1, 0x1);
        gbc.writeMem(0x82dd, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xb18f, gbc.sp());
        EXPECT(0x82df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x82dd));
        EXPECT(0xc1, gbc.readMem(0x82de));
        // CB C1 0223
        gbc.setState(0x698d, 0x17de, 0x210, 0x5080, 0x38d, 0x366f, 0x1, 0x1);
        gbc.writeMem(0x698d, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x17de, gbc.sp());
        EXPECT(0x698f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C1 0224
        gbc.setState(0x4a75, 0x7085, 0x6c70, 0x2b5a, 0xdf68, 0x3b37, 0x0, 0x1);
        gbc.writeMem(0x4a75, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x7085, gbc.sp());
        EXPECT(0x4a77, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C1 0225
        gbc.setState(0xee14, 0xff57, 0x220, 0x6158, 0x1c39, 0x4ff1, 0x1, 0x0);
        gbc.writeMem(0xee14, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xff57, gbc.sp());
        EXPECT(0xee16, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee14));
        EXPECT(0xc1, gbc.readMem(0xee15));
        // CB C1 0226
        gbc.setState(0x7708, 0xf102, 0x3b90, 0x100, 0x69f7, 0x84bb, 0x0, 0x0);
        gbc.writeMem(0x7708, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xf102, gbc.sp());
        EXPECT(0x770a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C1 0227
        gbc.setState(0x8677, 0x2b05, 0x2180, 0x9c41, 0x384f, 0x29d9, 0x0, 0x1);
        gbc.writeMem(0x8677, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x2b05, gbc.sp());
        EXPECT(0x8679, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8677));
        EXPECT(0xc1, gbc.readMem(0x8678));
        // CB C1 0228
        gbc.setState(0x23f3, 0x7d66, 0xb730, 0xfca3, 0x6e33, 0xe339, 0x0, 0x0);
        gbc.writeMem(0x23f3, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x7d66, gbc.sp());
        EXPECT(0x23f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C1 0229
        gbc.setState(0xd51c, 0x969b, 0x4470, 0xde4, 0x1527, 0x9f96, 0x1, 0x0);
        gbc.writeMem(0xd51c, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x969b, gbc.sp());
        EXPECT(0xd51e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd51c));
        EXPECT(0xc1, gbc.readMem(0xd51d));
        // CB C1 022A
        gbc.setState(0x40af, 0xaa25, 0x1c70, 0xb25a, 0x25bf, 0x6a9, 0x0, 0x1);
        gbc.writeMem(0x40af, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xaa25, gbc.sp());
        EXPECT(0x40b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C1 022B
        gbc.setState(0x17e2, 0xb068, 0xe3e0, 0x4bf9, 0xf470, 0x7d8a, 0x0, 0x1);
        gbc.writeMem(0x17e2, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xb068, gbc.sp());
        EXPECT(0x17e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C1 022C
        gbc.setState(0xa52f, 0x25d, 0x6930, 0x25b7, 0x7bd5, 0x6771, 0x0, 0x0);
        gbc.writeMem(0xa52f, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x25d, gbc.sp());
        EXPECT(0xa531, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa52f));
        EXPECT(0xc1, gbc.readMem(0xa530));
        // CB C1 022D
        gbc.setState(0xd00e, 0x363b, 0x4c80, 0xb583, 0xbe78, 0xa535, 0x0, 0x0);
        gbc.writeMem(0xd00e, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x363b, gbc.sp());
        EXPECT(0xd010, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd00e));
        EXPECT(0xc1, gbc.readMem(0xd00f));
        // CB C1 022E
        gbc.setState(0x4939, 0x8863, 0x5b00, 0x97d8, 0xb568, 0xd64c, 0x1, 0x0);
        gbc.writeMem(0x4939, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x8863, gbc.sp());
        EXPECT(0x493b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C1 022F
        gbc.setState(0x8ac0, 0x756a, 0xff80, 0x3047, 0x4c01, 0xb208, 0x1, 0x1);
        gbc.writeMem(0x8ac0, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x756a, gbc.sp());
        EXPECT(0x8ac2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ac0));
        EXPECT(0xc1, gbc.readMem(0x8ac1));
        // CB C1 0230
        gbc.setState(0x4122, 0x6b5e, 0x1130, 0x8184, 0x6a24, 0x26e6, 0x1, 0x1);
        gbc.writeMem(0x4122, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x6b5e, gbc.sp());
        EXPECT(0x4124, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C1 0231
        gbc.setState(0xdbc3, 0xba47, 0xb6d0, 0xd6c5, 0x377, 0xefc2, 0x1, 0x1);
        gbc.writeMem(0xdbc3, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xba47, gbc.sp());
        EXPECT(0xdbc5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdbc3));
        EXPECT(0xc1, gbc.readMem(0xdbc4));
        // CB C1 0232
        gbc.setState(0xf2f, 0xf601, 0xbcd0, 0xe237, 0xb93a, 0xeb13, 0x0, 0x1);
        gbc.writeMem(0xf2f, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xf601, gbc.sp());
        EXPECT(0xf31, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C1 0233
        gbc.setState(0xe36d, 0xee7f, 0x2920, 0x51c9, 0xc878, 0xa1b2, 0x0, 0x0);
        gbc.writeMem(0xe36d, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xee7f, gbc.sp());
        EXPECT(0xe36f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe36d));
        EXPECT(0xc1, gbc.readMem(0xe36e));
        // CB C1 0234
        gbc.setState(0xd642, 0x9de2, 0xcca0, 0x7301, 0xa8b5, 0x558a, 0x0, 0x0);
        gbc.writeMem(0xd642, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x9de2, gbc.sp());
        EXPECT(0xd644, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd642));
        EXPECT(0xc1, gbc.readMem(0xd643));
        // CB C1 0235
        gbc.setState(0xeeff, 0x1896, 0x4220, 0x4494, 0x39ba, 0xd715, 0x0, 0x1);
        gbc.writeMem(0xeeff, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x1896, gbc.sp());
        EXPECT(0xef01, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeeff));
        EXPECT(0xc1, gbc.readMem(0xef00));
        // CB C1 0236
        gbc.setState(0x8077, 0x500, 0x1390, 0x90f6, 0x29b0, 0xa13b, 0x0, 0x0);
        gbc.writeMem(0x8077, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x500, gbc.sp());
        EXPECT(0x8079, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8077));
        EXPECT(0xc1, gbc.readMem(0x8078));
        // CB C1 0237
        gbc.setState(0x3e9d, 0xfd58, 0x8d60, 0xfae6, 0x47c8, 0x306, 0x0, 0x1);
        gbc.writeMem(0x3e9d, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xfd58, gbc.sp());
        EXPECT(0x3e9f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C1 0238
        gbc.setState(0x3309, 0x72d3, 0xbd40, 0x1d20, 0x7de6, 0x9faa, 0x1, 0x1);
        gbc.writeMem(0x3309, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x72d3, gbc.sp());
        EXPECT(0x330b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C1 0239
        gbc.setState(0x22c8, 0x887d, 0x11c0, 0xabe9, 0xf252, 0xd1bf, 0x1, 0x0);
        gbc.writeMem(0x22c8, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x887d, gbc.sp());
        EXPECT(0x22ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C1 023A
        gbc.setState(0x1ac1, 0xe043, 0x93a0, 0x4223, 0x59f5, 0x67a8, 0x1, 0x0);
        gbc.writeMem(0x1ac1, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xe043, gbc.sp());
        EXPECT(0x1ac3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C1 023B
        gbc.setState(0x81c1, 0xa05f, 0x3ce0, 0x47f7, 0x610e, 0x14b0, 0x1, 0x1);
        gbc.writeMem(0x81c1, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xa05f, gbc.sp());
        EXPECT(0x81c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x81c1));
        EXPECT(0xc1, gbc.readMem(0x81c2));
        // CB C1 023C
        gbc.setState(0xb003, 0xe4ca, 0xf610, 0x9e35, 0xb24e, 0xca51, 0x0, 0x0);
        gbc.writeMem(0xb003, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xe4ca, gbc.sp());
        EXPECT(0xb005, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb003));
        EXPECT(0xc1, gbc.readMem(0xb004));
        // CB C1 023D
        gbc.setState(0x54a, 0xbac7, 0x5090, 0x18e8, 0x2057, 0x398e, 0x0, 0x1);
        gbc.writeMem(0x54a, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xbac7, gbc.sp());
        EXPECT(0x54c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C1 023E
        gbc.setState(0xc1bf, 0x814a, 0xc680, 0x3117, 0x7e38, 0xe5e9, 0x0, 0x1);
        gbc.writeMem(0xc1bf, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x814a, gbc.sp());
        EXPECT(0xc1c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc1bf));
        EXPECT(0xc1, gbc.readMem(0xc1c0));
        // CB C1 0240
        gbc.setState(0x84af, 0x57ae, 0x1630, 0x8da5, 0xdd5c, 0xf380, 0x1, 0x1);
        gbc.writeMem(0x84af, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x57ae, gbc.sp());
        EXPECT(0x84b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x84af));
        EXPECT(0xc1, gbc.readMem(0x84b0));
        // CB C1 0241
        gbc.setState(0xa451, 0x65a4, 0x7ef0, 0xcece, 0x7331, 0xacff, 0x0, 0x1);
        gbc.writeMem(0xa451, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x65a4, gbc.sp());
        EXPECT(0xa453, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa451));
        EXPECT(0xc1, gbc.readMem(0xa452));
        // CB C1 0242
        gbc.setState(0xafe9, 0x386f, 0xf10, 0xa355, 0xee65, 0xea3b, 0x0, 0x0);
        gbc.writeMem(0xafe9, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x386f, gbc.sp());
        EXPECT(0xafeb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xafe9));
        EXPECT(0xc1, gbc.readMem(0xafea));
        // CB C1 0243
        gbc.setState(0xcad2, 0x1bd2, 0xa160, 0x80f1, 0xb533, 0xaa68, 0x0, 0x0);
        gbc.writeMem(0xcad2, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x1bd2, gbc.sp());
        EXPECT(0xcad4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcad2));
        EXPECT(0xc1, gbc.readMem(0xcad3));
        // CB C1 0244
        gbc.setState(0x4d13, 0x5a30, 0x2cf0, 0x3aed, 0xb29b, 0x8f4c, 0x0, 0x0);
        gbc.writeMem(0x4d13, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x5a30, gbc.sp());
        EXPECT(0x4d15, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C1 0245
        gbc.setState(0xabcf, 0x61ab, 0x9780, 0xb5dd, 0x2bd5, 0x9e07, 0x1, 0x1);
        gbc.writeMem(0xabcf, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x61ab, gbc.sp());
        EXPECT(0xabd1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xabcf));
        EXPECT(0xc1, gbc.readMem(0xabd0));
        // CB C1 0246
        gbc.setState(0x7b98, 0xf4df, 0x7d30, 0x874e, 0x6c8b, 0xd647, 0x0, 0x0);
        gbc.writeMem(0x7b98, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xf4df, gbc.sp());
        EXPECT(0x7b9a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C1 0247
        gbc.setState(0x809a, 0xe174, 0x1580, 0xb0ae, 0xcace, 0x844b, 0x1, 0x0);
        gbc.writeMem(0x809a, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xe174, gbc.sp());
        EXPECT(0x809c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x809a));
        EXPECT(0xc1, gbc.readMem(0x809b));
        // CB C1 0248
        gbc.setState(0xc52e, 0x73be, 0xb880, 0xe187, 0x7c0c, 0xbb99, 0x1, 0x1);
        gbc.writeMem(0xc52e, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x73be, gbc.sp());
        EXPECT(0xc530, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc52e));
        EXPECT(0xc1, gbc.readMem(0xc52f));
        // CB C1 0249
        gbc.setState(0x2496, 0x51f1, 0x5740, 0xd4c, 0xe057, 0xc2c5, 0x0, 0x1);
        gbc.writeMem(0x2496, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x51f1, gbc.sp());
        EXPECT(0x2498, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C1 024A
        gbc.setState(0xa780, 0xcc7d, 0xad40, 0x6b4f, 0x87c8, 0xfb03, 0x1, 0x1);
        gbc.writeMem(0xa780, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xcc7d, gbc.sp());
        EXPECT(0xa782, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa780));
        EXPECT(0xc1, gbc.readMem(0xa781));
        // CB C1 024B
        gbc.setState(0x6480, 0xe2f4, 0xbaf0, 0xd2de, 0xaf5f, 0x35d7, 0x1, 0x1);
        gbc.writeMem(0x6480, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xe2f4, gbc.sp());
        EXPECT(0x6482, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C1 024C
        gbc.setState(0x221e, 0x19f2, 0x4f0, 0x7774, 0x2591, 0xf1bf, 0x1, 0x1);
        gbc.writeMem(0x221e, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x19f2, gbc.sp());
        EXPECT(0x2220, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C1 024D
        gbc.setState(0x36c8, 0xa6a3, 0x2e30, 0x9c90, 0x7002, 0xe71, 0x1, 0x1);
        gbc.writeMem(0x36c8, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xa6a3, gbc.sp());
        EXPECT(0x36ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C1 024E
        gbc.setState(0x23d4, 0x737c, 0xd4e0, 0x51c1, 0x5211, 0xf583, 0x0, 0x1);
        gbc.writeMem(0x23d4, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x737c, gbc.sp());
        EXPECT(0x23d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C1 024F
        gbc.setState(0xe8ac, 0x677e, 0xb840, 0x24d2, 0xf4bf, 0x90f9, 0x0, 0x1);
        gbc.writeMem(0xe8ac, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x677e, gbc.sp());
        EXPECT(0xe8ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe8ac));
        EXPECT(0xc1, gbc.readMem(0xe8ad));
        // CB C1 0250
        gbc.setState(0xee15, 0xa348, 0x7200, 0x85ca, 0xb225, 0x594a, 0x1, 0x1);
        gbc.writeMem(0xee15, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xa348, gbc.sp());
        EXPECT(0xee17, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee15));
        EXPECT(0xc1, gbc.readMem(0xee16));
        // CB C1 0251
        gbc.setState(0x4b85, 0x82b9, 0xc2a0, 0xf992, 0x49ad, 0xbc5, 0x0, 0x1);
        gbc.writeMem(0x4b85, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x82b9, gbc.sp());
        EXPECT(0x4b87, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C1 0253
        gbc.setState(0x45db, 0x9702, 0xae50, 0x6079, 0xec54, 0x8f6e, 0x0, 0x0);
        gbc.writeMem(0x45db, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x9702, gbc.sp());
        EXPECT(0x45dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C1 0254
        gbc.setState(0x44cc, 0xed9e, 0xe760, 0xcd19, 0x2b00, 0x3d00, 0x0, 0x0);
        gbc.writeMem(0x44cc, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xed9e, gbc.sp());
        EXPECT(0x44ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C1 0255
        gbc.setState(0x74e5, 0x7659, 0xcd40, 0xf960, 0x4a67, 0x58da, 0x1, 0x0);
        gbc.writeMem(0x74e5, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x7659, gbc.sp());
        EXPECT(0x74e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C1 0256
        gbc.setState(0xc873, 0x468f, 0x1380, 0xeba9, 0xb40b, 0x6b5c, 0x1, 0x1);
        gbc.writeMem(0xc873, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x468f, gbc.sp());
        EXPECT(0xc875, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc873));
        EXPECT(0xc1, gbc.readMem(0xc874));
        // CB C1 0257
        gbc.setState(0x4d11, 0xa202, 0x6e30, 0x86df, 0x58ff, 0x35c4, 0x0, 0x1);
        gbc.writeMem(0x4d11, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xa202, gbc.sp());
        EXPECT(0x4d13, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C1 0258
        gbc.setState(0x78d1, 0x1ec9, 0xce50, 0xd80f, 0x11a1, 0x9fbe, 0x1, 0x1);
        gbc.writeMem(0x78d1, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x1ec9, gbc.sp());
        EXPECT(0x78d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C1 0259
        gbc.setState(0x101d, 0xb7b4, 0xed00, 0xb77c, 0xd44, 0x2ecc, 0x1, 0x0);
        gbc.writeMem(0x101d, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xb7b4, gbc.sp());
        EXPECT(0x101f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C1 025A
        gbc.setState(0x523e, 0x436d, 0x2380, 0xd016, 0x8ee, 0xc83c, 0x1, 0x0);
        gbc.writeMem(0x523e, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x436d, gbc.sp());
        EXPECT(0x5240, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C1 025B
        gbc.setState(0x7c99, 0x8ccf, 0x4660, 0xc98d, 0xf190, 0xb8a2, 0x1, 0x1);
        gbc.writeMem(0x7c99, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x8ccf, gbc.sp());
        EXPECT(0x7c9b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C1 025C
        gbc.setState(0x7bd4, 0xcf7f, 0x9770, 0x3c5f, 0xd8f8, 0xb6af, 0x1, 0x0);
        gbc.writeMem(0x7bd4, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xcf7f, gbc.sp());
        EXPECT(0x7bd6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C1 025D
        gbc.setState(0xa997, 0x5c86, 0xc790, 0xeb02, 0x1b9b, 0x58ee, 0x1, 0x1);
        gbc.writeMem(0xa997, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x5c86, gbc.sp());
        EXPECT(0xa999, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa997));
        EXPECT(0xc1, gbc.readMem(0xa998));
        // CB C1 025E
        gbc.setState(0xd512, 0x7f15, 0x9470, 0xaa6a, 0x96dc, 0xe70f, 0x1, 0x0);
        gbc.writeMem(0xd512, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x7f15, gbc.sp());
        EXPECT(0xd514, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd512));
        EXPECT(0xc1, gbc.readMem(0xd513));
        // CB C1 0260
        gbc.setState(0x8565, 0x365c, 0x4c70, 0xc28d, 0x5d06, 0x6e82, 0x1, 0x1);
        gbc.writeMem(0x8565, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x365c, gbc.sp());
        EXPECT(0x8567, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8565));
        EXPECT(0xc1, gbc.readMem(0x8566));
        // CB C1 0262
        gbc.setState(0x8a91, 0xf61c, 0x8890, 0x2168, 0xba65, 0x555f, 0x1, 0x0);
        gbc.writeMem(0x8a91, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xf61c, gbc.sp());
        EXPECT(0x8a93, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a91));
        EXPECT(0xc1, gbc.readMem(0x8a92));
        // CB C1 0263
        gbc.setState(0x7b74, 0x3341, 0xeb20, 0x2aec, 0x880, 0xec02, 0x1, 0x1);
        gbc.writeMem(0x7b74, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x3341, gbc.sp());
        EXPECT(0x7b76, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C1 0264
        gbc.setState(0x39f3, 0x6495, 0x2d80, 0xb423, 0x4dad, 0xf7ce, 0x1, 0x0);
        gbc.writeMem(0x39f3, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x6495, gbc.sp());
        EXPECT(0x39f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C1 0265
        gbc.setState(0x6256, 0x4e47, 0x50b0, 0xeae6, 0x8561, 0x48cc, 0x0, 0x0);
        gbc.writeMem(0x6256, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x4e47, gbc.sp());
        EXPECT(0x6258, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C1 0266
        gbc.setState(0xd1c, 0xf962, 0x570, 0x542e, 0x48b2, 0x6834, 0x0, 0x1);
        gbc.writeMem(0xd1c, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xf962, gbc.sp());
        EXPECT(0xd1e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C1 0267
        gbc.setState(0xb5f2, 0x5111, 0x1fe0, 0x87c2, 0xd39e, 0x5df0, 0x1, 0x1);
        gbc.writeMem(0xb5f2, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x5111, gbc.sp());
        EXPECT(0xb5f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb5f2));
        EXPECT(0xc1, gbc.readMem(0xb5f3));
        // CB C1 0268
        gbc.setState(0x7927, 0xbccd, 0x9a70, 0x9f03, 0xf010, 0x9bc7, 0x1, 0x0);
        gbc.writeMem(0x7927, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xbccd, gbc.sp());
        EXPECT(0x7929, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C1 0269
        gbc.setState(0x8987, 0x1c4a, 0x1b50, 0x1be4, 0x2157, 0xdf63, 0x0, 0x1);
        gbc.writeMem(0x8987, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x1c4a, gbc.sp());
        EXPECT(0x8989, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8987));
        EXPECT(0xc1, gbc.readMem(0x8988));
        // CB C1 026A
        gbc.setState(0xb6f, 0xee75, 0xccf0, 0xa9df, 0xd2d6, 0x6be7, 0x0, 0x0);
        gbc.writeMem(0xb6f, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xee75, gbc.sp());
        EXPECT(0xb71, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C1 026B
        gbc.setState(0xcb68, 0xcf89, 0xfa60, 0xf98d, 0x895a, 0x27d9, 0x0, 0x0);
        gbc.writeMem(0xcb68, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xcf89, gbc.sp());
        EXPECT(0xcb6a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb68));
        EXPECT(0xc1, gbc.readMem(0xcb69));
        // CB C1 026C
        gbc.setState(0x87d5, 0xe9cb, 0xc770, 0x7e2e, 0xd26b, 0xb0c5, 0x0, 0x0);
        gbc.writeMem(0x87d5, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xe9cb, gbc.sp());
        EXPECT(0x87d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x87d5));
        EXPECT(0xc1, gbc.readMem(0x87d6));
        // CB C1 026D
        gbc.setState(0xa46d, 0xa747, 0x9740, 0xbb39, 0xf686, 0x8842, 0x1, 0x1);
        gbc.writeMem(0xa46d, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xa747, gbc.sp());
        EXPECT(0xa46f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa46d));
        EXPECT(0xc1, gbc.readMem(0xa46e));
        // CB C1 026E
        gbc.setState(0x41c8, 0xacde, 0xfbb0, 0xb78a, 0xe708, 0xa1f6, 0x0, 0x1);
        gbc.writeMem(0x41c8, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xacde, gbc.sp());
        EXPECT(0x41ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C1 026F
        gbc.setState(0x310c, 0x501f, 0x5690, 0xec2a, 0x8426, 0x4e11, 0x0, 0x0);
        gbc.writeMem(0x310c, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x501f, gbc.sp());
        EXPECT(0x310e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C1 0270
        gbc.setState(0x6201, 0xc20, 0xd3d0, 0xa2a5, 0xc9d, 0xf470, 0x1, 0x1);
        gbc.writeMem(0x6201, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xc20, gbc.sp());
        EXPECT(0x6203, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C1 0272
        gbc.setState(0x1148, 0xe3f, 0x4cd0, 0xf47, 0xa7a, 0xbebc, 0x0, 0x1);
        gbc.writeMem(0x1148, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xe3f, gbc.sp());
        EXPECT(0x114a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C1 0273
        gbc.setState(0x4e1, 0xd1e4, 0x7250, 0x6be9, 0x826c, 0x4ce5, 0x1, 0x0);
        gbc.writeMem(0x4e1, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xd1e4, gbc.sp());
        EXPECT(0x4e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C1 0274
        gbc.setState(0xbd11, 0x2a50, 0xd5d0, 0xc814, 0x8c8c, 0xf1f, 0x1, 0x0);
        gbc.writeMem(0xbd11, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x2a50, gbc.sp());
        EXPECT(0xbd13, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd11));
        EXPECT(0xc1, gbc.readMem(0xbd12));
        // CB C1 0275
        gbc.setState(0x8241, 0x3f1c, 0x52a0, 0x56db, 0xb30b, 0xfc65, 0x1, 0x0);
        gbc.writeMem(0x8241, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x3f1c, gbc.sp());
        EXPECT(0x8243, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8241));
        EXPECT(0xc1, gbc.readMem(0x8242));
        // CB C1 0276
        gbc.setState(0xfb3, 0xedae, 0x7760, 0xa721, 0xf8c3, 0x5179, 0x0, 0x0);
        gbc.writeMem(0xfb3, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xedae, gbc.sp());
        EXPECT(0xfb5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C1 0277
        gbc.setState(0x126e, 0x4cd3, 0xa130, 0x1583, 0x4d03, 0x9448, 0x1, 0x1);
        gbc.writeMem(0x126e, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x4cd3, gbc.sp());
        EXPECT(0x1270, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C1 0278
        gbc.setState(0x452d, 0x1fc1, 0x9c50, 0xe9b6, 0xcea0, 0x786c, 0x0, 0x0);
        gbc.writeMem(0x452d, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x1fc1, gbc.sp());
        EXPECT(0x452f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C1 0279
        gbc.setState(0x68a9, 0x92a1, 0x6430, 0xce68, 0x2409, 0xf7dd, 0x1, 0x1);
        gbc.writeMem(0x68a9, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x92a1, gbc.sp());
        EXPECT(0x68ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C1 027A
        gbc.setState(0x95f2, 0x3d60, 0x8990, 0xd27b, 0x3d2f, 0x1692, 0x1, 0x0);
        gbc.writeMem(0x95f2, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x3d60, gbc.sp());
        EXPECT(0x95f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x95f2));
        EXPECT(0xc1, gbc.readMem(0x95f3));
        // CB C1 027B
        gbc.setState(0xb4b5, 0xa80f, 0xd310, 0xa444, 0x2641, 0x4aa0, 0x1, 0x1);
        gbc.writeMem(0xb4b5, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xa80f, gbc.sp());
        EXPECT(0xb4b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb4b5));
        EXPECT(0xc1, gbc.readMem(0xb4b6));
        // CB C1 027C
        gbc.setState(0xd43b, 0xce6e, 0xad90, 0xd9a0, 0x9a51, 0xc069, 0x1, 0x1);
        gbc.writeMem(0xd43b, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xce6e, gbc.sp());
        EXPECT(0xd43d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd43b));
        EXPECT(0xc1, gbc.readMem(0xd43c));
        // CB C1 027D
        gbc.setState(0xd777, 0xed32, 0xe0c0, 0xa05f, 0x56bf, 0x3e00, 0x0, 0x1);
        gbc.writeMem(0xd777, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xed32, gbc.sp());
        EXPECT(0xd779, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd777));
        EXPECT(0xc1, gbc.readMem(0xd778));
        // CB C1 027F
        gbc.setState(0x402a, 0x32bd, 0x1310, 0xc9fd, 0x4c34, 0x4d62, 0x0, 0x1);
        gbc.writeMem(0x402a, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x32bd, gbc.sp());
        EXPECT(0x402c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C1 0280
        gbc.setState(0x7b18, 0xa4d9, 0xb660, 0xaa0e, 0xd532, 0x148d, 0x0, 0x0);
        gbc.writeMem(0x7b18, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xa4d9, gbc.sp());
        EXPECT(0x7b1a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C1 0281
        gbc.setState(0x53d8, 0x99ac, 0x4210, 0x6174, 0x3aa0, 0xf8d6, 0x1, 0x0);
        gbc.writeMem(0x53d8, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x99ac, gbc.sp());
        EXPECT(0x53da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C1 0282
        gbc.setState(0xa05f, 0x690, 0x8960, 0x3bcc, 0x9ed6, 0x833c, 0x0, 0x0);
        gbc.writeMem(0xa05f, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x690, gbc.sp());
        EXPECT(0xa061, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa05f));
        EXPECT(0xc1, gbc.readMem(0xa060));
        // CB C1 0283
        gbc.setState(0x5e6b, 0xe473, 0x20a0, 0xa5de, 0x5072, 0xe661, 0x0, 0x0);
        gbc.writeMem(0x5e6b, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xe473, gbc.sp());
        EXPECT(0x5e6d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C1 0284
        gbc.setState(0xe2e3, 0x2292, 0x5a60, 0xfe6f, 0x4c35, 0xffcd, 0x1, 0x1);
        gbc.writeMem(0xe2e3, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x2292, gbc.sp());
        EXPECT(0xe2e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe2e3));
        EXPECT(0xc1, gbc.readMem(0xe2e4));
        // CB C1 0285
        gbc.setState(0x6bd1, 0x567f, 0x1810, 0x97ef, 0x1fbb, 0x23da, 0x0, 0x0);
        gbc.writeMem(0x6bd1, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x567f, gbc.sp());
        EXPECT(0x6bd3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C1 0286
        gbc.setState(0x3f24, 0x2f80, 0x1e80, 0xd293, 0x7988, 0xc95e, 0x1, 0x0);
        gbc.writeMem(0x3f24, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x2f80, gbc.sp());
        EXPECT(0x3f26, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C1 0287
        gbc.setState(0x5097, 0x2014, 0xea0, 0x5935, 0x5c2b, 0x2797, 0x1, 0x1);
        gbc.writeMem(0x5097, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x2014, gbc.sp());
        EXPECT(0x5099, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C1 0288
        gbc.setState(0xcfee, 0xe914, 0x25a0, 0xd9aa, 0x356b, 0xab0f, 0x1, 0x0);
        gbc.writeMem(0xcfee, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xe914, gbc.sp());
        EXPECT(0xcff0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcfee));
        EXPECT(0xc1, gbc.readMem(0xcfef));
        // CB C1 0289
        gbc.setState(0xacdc, 0xb772, 0x2a00, 0x255c, 0x4ea1, 0x12dc, 0x1, 0x1);
        gbc.writeMem(0xacdc, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xb772, gbc.sp());
        EXPECT(0xacde, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xacdc));
        EXPECT(0xc1, gbc.readMem(0xacdd));
        // CB C1 028A
        gbc.setState(0xa170, 0x6597, 0x5890, 0xdc17, 0x188, 0x660, 0x0, 0x1);
        gbc.writeMem(0xa170, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x6597, gbc.sp());
        EXPECT(0xa172, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa170));
        EXPECT(0xc1, gbc.readMem(0xa171));
        // CB C1 028B
        gbc.setState(0xab5a, 0x1c6f, 0x7990, 0x1c2c, 0x9168, 0xa9, 0x0, 0x1);
        gbc.writeMem(0xab5a, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x1c6f, gbc.sp());
        EXPECT(0xab5c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab5a));
        EXPECT(0xc1, gbc.readMem(0xab5b));
        // CB C1 028C
        gbc.setState(0xc860, 0x2ad5, 0x70f0, 0x1420, 0xf780, 0xd57e, 0x1, 0x0);
        gbc.writeMem(0xc860, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x2ad5, gbc.sp());
        EXPECT(0xc862, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc860));
        EXPECT(0xc1, gbc.readMem(0xc861));
        // CB C1 028D
        gbc.setState(0x291, 0x9d93, 0xcbd0, 0x4759, 0x4c81, 0x6591, 0x1, 0x1);
        gbc.writeMem(0x291, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x9d93, gbc.sp());
        EXPECT(0x293, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C1 028E
        gbc.setState(0x6e21, 0x7c69, 0x6280, 0xd8bc, 0xa8fc, 0xbaf9, 0x0, 0x1);
        gbc.writeMem(0x6e21, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x7c69, gbc.sp());
        EXPECT(0x6e23, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C1 028F
        gbc.setState(0x43ac, 0x1661, 0xb780, 0x38b2, 0xfe01, 0x6e0b, 0x0, 0x1);
        gbc.writeMem(0x43ac, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x1661, gbc.sp());
        EXPECT(0x43ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C1 0290
        gbc.setState(0x3a4c, 0x8cf6, 0x7de0, 0xa994, 0xcbcb, 0x9fdf, 0x0, 0x1);
        gbc.writeMem(0x3a4c, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x8cf6, gbc.sp());
        EXPECT(0x3a4e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C1 0291
        gbc.setState(0x3502, 0x7880, 0x7830, 0xae2e, 0x37bd, 0xfafd, 0x1, 0x1);
        gbc.writeMem(0x3502, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x7880, gbc.sp());
        EXPECT(0x3504, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C1 0292
        gbc.setState(0x4f72, 0xbc64, 0xcb60, 0x1668, 0x1149, 0xff8a, 0x1, 0x0);
        gbc.writeMem(0x4f72, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xbc64, gbc.sp());
        EXPECT(0x4f74, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C1 0293
        gbc.setState(0x34c0, 0x7377, 0x4240, 0x763d, 0x5b6c, 0xc829, 0x1, 0x1);
        gbc.writeMem(0x34c0, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x7377, gbc.sp());
        EXPECT(0x34c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C1 0294
        gbc.setState(0xc028, 0x46c1, 0xf3a0, 0xe0c, 0x1267, 0x1b8b, 0x0, 0x1);
        gbc.writeMem(0xc028, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x46c1, gbc.sp());
        EXPECT(0xc02a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc028));
        EXPECT(0xc1, gbc.readMem(0xc029));
        // CB C1 0295
        gbc.setState(0x7856, 0xef55, 0x6420, 0xa0d8, 0xb4b7, 0x3cb7, 0x0, 0x0);
        gbc.writeMem(0x7856, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xef55, gbc.sp());
        EXPECT(0x7858, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C1 0296
        gbc.setState(0x9b5f, 0x18bd, 0xe1c0, 0xc599, 0x3ecd, 0x8681, 0x0, 0x1);
        gbc.writeMem(0x9b5f, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x18bd, gbc.sp());
        EXPECT(0x9b61, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b5f));
        EXPECT(0xc1, gbc.readMem(0x9b60));
        // CB C1 0297
        gbc.setState(0x36ce, 0xe67, 0xb750, 0x1ef1, 0xb179, 0xa890, 0x1, 0x1);
        gbc.writeMem(0x36ce, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xe67, gbc.sp());
        EXPECT(0x36d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C1 0298
        gbc.setState(0x63be, 0x6076, 0xda0, 0x1517, 0xf7b6, 0xed49, 0x1, 0x1);
        gbc.writeMem(0x63be, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x6076, gbc.sp());
        EXPECT(0x63c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C1 0299
        gbc.setState(0xb949, 0xe149, 0xc630, 0xabcf, 0x21a3, 0xb2f7, 0x0, 0x0);
        gbc.writeMem(0xb949, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xe149, gbc.sp());
        EXPECT(0xb94b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb949));
        EXPECT(0xc1, gbc.readMem(0xb94a));
        // CB C1 029A
        gbc.setState(0xcded, 0xa65c, 0x4430, 0xc4a8, 0xe05e, 0xc8d, 0x0, 0x0);
        gbc.writeMem(0xcded, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xa65c, gbc.sp());
        EXPECT(0xcdef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcded));
        EXPECT(0xc1, gbc.readMem(0xcdee));
        // CB C1 029B
        gbc.setState(0x8725, 0x1f6f, 0x5ec0, 0x6f72, 0x40ae, 0x9e42, 0x1, 0x0);
        gbc.writeMem(0x8725, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x1f6f, gbc.sp());
        EXPECT(0x8727, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8725));
        EXPECT(0xc1, gbc.readMem(0x8726));
        // CB C1 029C
        gbc.setState(0x8166, 0x4811, 0x5d0, 0xb7e5, 0x7ccd, 0x832a, 0x1, 0x1);
        gbc.writeMem(0x8166, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x4811, gbc.sp());
        EXPECT(0x8168, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8166));
        EXPECT(0xc1, gbc.readMem(0x8167));
        // CB C1 029D
        gbc.setState(0x4f59, 0x31d7, 0xa090, 0x3e00, 0x5449, 0xa051, 0x0, 0x0);
        gbc.writeMem(0x4f59, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x31d7, gbc.sp());
        EXPECT(0x4f5b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C1 029F
        gbc.setState(0xba03, 0x88a2, 0x7b70, 0xbc91, 0x8984, 0xad40, 0x1, 0x0);
        gbc.writeMem(0xba03, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x88a2, gbc.sp());
        EXPECT(0xba05, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba03));
        EXPECT(0xc1, gbc.readMem(0xba04));
        // CB C1 02A0
        gbc.setState(0xb8f2, 0x1ca, 0x61a0, 0xeaac, 0xa87e, 0xd0, 0x0, 0x0);
        gbc.writeMem(0xb8f2, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x1ca, gbc.sp());
        EXPECT(0xb8f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb8f2));
        EXPECT(0xc1, gbc.readMem(0xb8f3));
        // CB C1 02A1
        gbc.setState(0x9ae6, 0x8772, 0x7ff0, 0x7afc, 0x2036, 0xae00, 0x1, 0x0);
        gbc.writeMem(0x9ae6, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x8772, gbc.sp());
        EXPECT(0x9ae8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ae6));
        EXPECT(0xc1, gbc.readMem(0x9ae7));
        // CB C1 02A2
        gbc.setState(0x793f, 0xf0ad, 0xf930, 0xac32, 0x191b, 0x9b3b, 0x0, 0x1);
        gbc.writeMem(0x793f, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xf0ad, gbc.sp());
        EXPECT(0x7941, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C1 02A3
        gbc.setState(0x1b2a, 0xb662, 0xcce0, 0x2f2, 0x454a, 0x52ea, 0x1, 0x1);
        gbc.writeMem(0x1b2a, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xb662, gbc.sp());
        EXPECT(0x1b2c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C1 02A4
        gbc.setState(0x59e8, 0x6643, 0x3aa0, 0xef3a, 0x99e5, 0x2c8a, 0x0, 0x1);
        gbc.writeMem(0x59e8, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x6643, gbc.sp());
        EXPECT(0x59ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C1 02A5
        gbc.setState(0xdbe0, 0xa17e, 0x3300, 0x8db1, 0x802e, 0x1a3b, 0x1, 0x1);
        gbc.writeMem(0xdbe0, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xa17e, gbc.sp());
        EXPECT(0xdbe2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdbe0));
        EXPECT(0xc1, gbc.readMem(0xdbe1));
        // CB C1 02A6
        gbc.setState(0x5120, 0x41ef, 0x2af0, 0x830e, 0x4875, 0x6084, 0x0, 0x0);
        gbc.writeMem(0x5120, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x41ef, gbc.sp());
        EXPECT(0x5122, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C1 02A7
        gbc.setState(0x7236, 0xbb52, 0x5c70, 0xa97a, 0xb1d0, 0x9cf0, 0x0, 0x1);
        gbc.writeMem(0x7236, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xbb52, gbc.sp());
        EXPECT(0x7238, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C1 02A8
        gbc.setState(0xc87a, 0xf64d, 0xc290, 0xa39a, 0xd1b1, 0xa8aa, 0x0, 0x0);
        gbc.writeMem(0xc87a, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xf64d, gbc.sp());
        EXPECT(0xc87c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc87a));
        EXPECT(0xc1, gbc.readMem(0xc87b));
        // CB C1 02A9
        gbc.setState(0xbae3, 0x8f43, 0x5b20, 0xd6f, 0xe6b2, 0x9e8c, 0x0, 0x0);
        gbc.writeMem(0xbae3, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x8f43, gbc.sp());
        EXPECT(0xbae5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbae3));
        EXPECT(0xc1, gbc.readMem(0xbae4));
        // CB C1 02AA
        gbc.setState(0xdff, 0xf479, 0xff90, 0x3163, 0x5a88, 0x8b11, 0x0, 0x0);
        gbc.writeMem(0xdff, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xf479, gbc.sp());
        EXPECT(0xe01, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C1 02AB
        gbc.setState(0x8b3b, 0x944, 0xacf0, 0x67dd, 0x94c8, 0x6d96, 0x1, 0x1);
        gbc.writeMem(0x8b3b, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x944, gbc.sp());
        EXPECT(0x8b3d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b3b));
        EXPECT(0xc1, gbc.readMem(0x8b3c));
        // CB C1 02AC
        gbc.setState(0x5562, 0x8b34, 0xb650, 0x5eeb, 0x1e8f, 0xfa21, 0x1, 0x0);
        gbc.writeMem(0x5562, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x8b34, gbc.sp());
        EXPECT(0x5564, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C1 02AE
        gbc.setState(0x3206, 0x20a7, 0x9ff0, 0xd0cd, 0xa291, 0xb58c, 0x0, 0x1);
        gbc.writeMem(0x3206, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x20a7, gbc.sp());
        EXPECT(0x3208, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C1 02AF
        gbc.setState(0x66c1, 0x56be, 0x8f40, 0x13ac, 0x2e94, 0x3502, 0x1, 0x1);
        gbc.writeMem(0x66c1, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x56be, gbc.sp());
        EXPECT(0x66c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C1 02B0
        gbc.setState(0xd501, 0xdb9d, 0x4a00, 0x4f29, 0xcd26, 0x6b0c, 0x0, 0x0);
        gbc.writeMem(0xd501, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xdb9d, gbc.sp());
        EXPECT(0xd503, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd501));
        EXPECT(0xc1, gbc.readMem(0xd502));
        // CB C1 02B2
        gbc.setState(0x7da1, 0x17e7, 0xa370, 0xc282, 0xe824, 0x626, 0x0, 0x0);
        gbc.writeMem(0x7da1, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x17e7, gbc.sp());
        EXPECT(0x7da3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C1 02B3
        gbc.setState(0x8cd6, 0xd11, 0x3d10, 0x160d, 0x1175, 0xd940, 0x1, 0x0);
        gbc.writeMem(0x8cd6, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xd11, gbc.sp());
        EXPECT(0x8cd8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8cd6));
        EXPECT(0xc1, gbc.readMem(0x8cd7));
        // CB C1 02B4
        gbc.setState(0x4a5a, 0x5915, 0xb230, 0xfea7, 0x7a14, 0x678d, 0x1, 0x1);
        gbc.writeMem(0x4a5a, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x5915, gbc.sp());
        EXPECT(0x4a5c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C1 02B6
        gbc.setState(0xd825, 0x2d77, 0x380, 0x2530, 0x7100, 0xf523, 0x1, 0x0);
        gbc.writeMem(0xd825, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x2d77, gbc.sp());
        EXPECT(0xd827, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd825));
        EXPECT(0xc1, gbc.readMem(0xd826));
        // CB C1 02B7
        gbc.setState(0x571d, 0xf4c2, 0xc4a0, 0x9497, 0x58aa, 0x2b44, 0x1, 0x1);
        gbc.writeMem(0x571d, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xf4c2, gbc.sp());
        EXPECT(0x571f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C1 02B8
        gbc.setState(0x5451, 0xcb62, 0x5db0, 0x4ff2, 0xcfb3, 0x2bc1, 0x1, 0x1);
        gbc.writeMem(0x5451, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xcb62, gbc.sp());
        EXPECT(0x5453, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C1 02B9
        gbc.setState(0x70d0, 0x6b50, 0x7200, 0x501b, 0xcd5d, 0xb82, 0x1, 0x0);
        gbc.writeMem(0x70d0, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x6b50, gbc.sp());
        EXPECT(0x70d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C1 02BB
        gbc.setState(0xdcff, 0x66a2, 0xb8a0, 0x6406, 0x36a4, 0xeb00, 0x0, 0x0);
        gbc.writeMem(0xdcff, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x66a2, gbc.sp());
        EXPECT(0xdd01, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdcff));
        EXPECT(0xc1, gbc.readMem(0xdd00));
        // CB C1 02BC
        gbc.setState(0x52a8, 0x2239, 0x4e40, 0x5f47, 0xa430, 0x6181, 0x0, 0x0);
        gbc.writeMem(0x52a8, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x2239, gbc.sp());
        EXPECT(0x52aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C1 02BD
        gbc.setState(0xaeff, 0xcb64, 0xea10, 0x3e8b, 0x6ebb, 0x55bd, 0x1, 0x0);
        gbc.writeMem(0xaeff, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xcb64, gbc.sp());
        EXPECT(0xaf01, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaeff));
        EXPECT(0xc1, gbc.readMem(0xaf00));
        // CB C1 02BE
        gbc.setState(0xd5c1, 0xf22e, 0xdb00, 0x6910, 0xd074, 0xe069, 0x1, 0x1);
        gbc.writeMem(0xd5c1, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xf22e, gbc.sp());
        EXPECT(0xd5c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd5c1));
        EXPECT(0xc1, gbc.readMem(0xd5c2));
        // CB C1 02BF
        gbc.setState(0x7894, 0x22bd, 0x10c0, 0xcb41, 0x2dc5, 0x1eae, 0x0, 0x0);
        gbc.writeMem(0x7894, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x22bd, gbc.sp());
        EXPECT(0x7896, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C1 02C0
        gbc.setState(0xcbe1, 0x8fee, 0xfa50, 0x6ce6, 0x33dd, 0x2c6e, 0x1, 0x1);
        gbc.writeMem(0xcbe1, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x8fee, gbc.sp());
        EXPECT(0xcbe3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcbe1));
        EXPECT(0xc1, gbc.readMem(0xcbe2));
        // CB C1 02C2
        gbc.setState(0x2026, 0xc415, 0xfa70, 0x21c1, 0x39c6, 0x6048, 0x1, 0x1);
        gbc.writeMem(0x2026, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xc415, gbc.sp());
        EXPECT(0x2028, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C1 02C3
        gbc.setState(0x8874, 0x8fe5, 0x6210, 0xc5a1, 0x6650, 0x39ea, 0x1, 0x1);
        gbc.writeMem(0x8874, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x8fe5, gbc.sp());
        EXPECT(0x8876, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8874));
        EXPECT(0xc1, gbc.readMem(0x8875));
        // CB C1 02C4
        gbc.setState(0x69d8, 0xadb4, 0xc6b0, 0xfab7, 0x1280, 0x6b82, 0x0, 0x1);
        gbc.writeMem(0x69d8, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xadb4, gbc.sp());
        EXPECT(0x69da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C1 02C5
        gbc.setState(0xd898, 0x62b8, 0xde80, 0xc1d7, 0x1876, 0x63fb, 0x0, 0x0);
        gbc.writeMem(0xd898, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x62b8, gbc.sp());
        EXPECT(0xd89a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd898));
        EXPECT(0xc1, gbc.readMem(0xd899));
        // CB C1 02C6
        gbc.setState(0x7575, 0x2dd0, 0x1b20, 0x57f, 0x2603, 0x1d28, 0x0, 0x0);
        gbc.writeMem(0x7575, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x2dd0, gbc.sp());
        EXPECT(0x7577, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C1 02C7
        gbc.setState(0x946, 0x30c2, 0xbb80, 0x1ecf, 0xf679, 0xe334, 0x1, 0x1);
        gbc.writeMem(0x946, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x30c2, gbc.sp());
        EXPECT(0x948, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C1 02C8
        gbc.setState(0x6367, 0x991f, 0x9d20, 0xb28c, 0x9c2e, 0x94f2, 0x0, 0x1);
        gbc.writeMem(0x6367, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x991f, gbc.sp());
        EXPECT(0x6369, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C1 02C9
        gbc.setState(0x2b53, 0x368c, 0x83a0, 0xea3c, 0x23e3, 0x321e, 0x1, 0x0);
        gbc.writeMem(0x2b53, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x368c, gbc.sp());
        EXPECT(0x2b55, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C1 02CA
        gbc.setState(0x1a58, 0x78a6, 0x24f0, 0x5b92, 0x1894, 0x4f8, 0x1, 0x1);
        gbc.writeMem(0x1a58, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x78a6, gbc.sp());
        EXPECT(0x1a5a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C1 02CB
        gbc.setState(0x36b5, 0xd763, 0x630, 0x4433, 0xc209, 0xa652, 0x0, 0x0);
        gbc.writeMem(0x36b5, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xd763, gbc.sp());
        EXPECT(0x36b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C1 02CC
        gbc.setState(0x4879, 0x8d59, 0x2d90, 0xf339, 0xa587, 0xca8, 0x1, 0x1);
        gbc.writeMem(0x4879, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x8d59, gbc.sp());
        EXPECT(0x487b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C1 02CD
        gbc.setState(0xaa41, 0x583c, 0xc560, 0x898e, 0x9c8a, 0xc8d, 0x0, 0x0);
        gbc.writeMem(0xaa41, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x583c, gbc.sp());
        EXPECT(0xaa43, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa41));
        EXPECT(0xc1, gbc.readMem(0xaa42));
        // CB C1 02CE
        gbc.setState(0xbdd4, 0x5501, 0x8040, 0xa4bb, 0xa902, 0xb6b8, 0x0, 0x1);
        gbc.writeMem(0xbdd4, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x5501, gbc.sp());
        EXPECT(0xbdd6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbdd4));
        EXPECT(0xc1, gbc.readMem(0xbdd5));
        // CB C1 02CF
        gbc.setState(0x28, 0xb212, 0x1bf0, 0xf77b, 0xa157, 0x72e, 0x1, 0x0);
        gbc.writeMem(0x28, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xb212, gbc.sp());
        EXPECT(0x2a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C1 02D0
        gbc.setState(0xcf7d, 0x92e1, 0xe050, 0xfb27, 0x15bd, 0xbd4e, 0x0, 0x0);
        gbc.writeMem(0xcf7d, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x92e1, gbc.sp());
        EXPECT(0xcf7f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf7d));
        EXPECT(0xc1, gbc.readMem(0xcf7e));
        // CB C1 02D1
        gbc.setState(0x2f48, 0xc55, 0xe820, 0x4445, 0x6723, 0x6ad, 0x0, 0x1);
        gbc.writeMem(0x2f48, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xc55, gbc.sp());
        EXPECT(0x2f4a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C1 02D2
        gbc.setState(0xb1db, 0x23a3, 0x6a60, 0x1dde, 0x44e, 0xdafc, 0x0, 0x1);
        gbc.writeMem(0xb1db, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x23a3, gbc.sp());
        EXPECT(0xb1dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb1db));
        EXPECT(0xc1, gbc.readMem(0xb1dc));
        // CB C1 02D4
        gbc.setState(0x5881, 0x223e, 0xabf0, 0x5770, 0x40d6, 0x7e20, 0x0, 0x1);
        gbc.writeMem(0x5881, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x223e, gbc.sp());
        EXPECT(0x5883, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C1 02D5
        gbc.setState(0x210f, 0x2f71, 0xb8a0, 0x63b9, 0x63ee, 0xbd10, 0x1, 0x0);
        gbc.writeMem(0x210f, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x2f71, gbc.sp());
        EXPECT(0x2111, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C1 02D6
        gbc.setState(0xedc7, 0xb45e, 0x5f50, 0x856, 0x1bfa, 0x7cb, 0x1, 0x0);
        gbc.writeMem(0xedc7, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xb45e, gbc.sp());
        EXPECT(0xedc9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xedc7));
        EXPECT(0xc1, gbc.readMem(0xedc8));
        // CB C1 02D8
        gbc.setState(0xd9b0, 0xfdc8, 0xb600, 0xe352, 0x935a, 0x6e74, 0x0, 0x1);
        gbc.writeMem(0xd9b0, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xfdc8, gbc.sp());
        EXPECT(0xd9b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd9b0));
        EXPECT(0xc1, gbc.readMem(0xd9b1));
        // CB C1 02D9
        gbc.setState(0xb8fa, 0x7d4b, 0x32e0, 0x9a3f, 0xe370, 0x8a82, 0x0, 0x0);
        gbc.writeMem(0xb8fa, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x7d4b, gbc.sp());
        EXPECT(0xb8fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb8fa));
        EXPECT(0xc1, gbc.readMem(0xb8fb));
        // CB C1 02DA
        gbc.setState(0xc826, 0xb017, 0x63e0, 0xa499, 0xc6a, 0x800, 0x0, 0x1);
        gbc.writeMem(0xc826, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xb017, gbc.sp());
        EXPECT(0xc828, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc826));
        EXPECT(0xc1, gbc.readMem(0xc827));
        // CB C1 02DB
        gbc.setState(0xb96c, 0xf121, 0x6ed0, 0x28fb, 0x404e, 0x3343, 0x0, 0x0);
        gbc.writeMem(0xb96c, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xf121, gbc.sp());
        EXPECT(0xb96e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb96c));
        EXPECT(0xc1, gbc.readMem(0xb96d));
        // CB C1 02DC
        gbc.setState(0x2acb, 0x9c39, 0xc920, 0xef1b, 0xe30b, 0x7acd, 0x1, 0x0);
        gbc.writeMem(0x2acb, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x9c39, gbc.sp());
        EXPECT(0x2acd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C1 02DE
        gbc.setState(0x2883, 0x836a, 0xddf0, 0x61bd, 0x1dda, 0xfc50, 0x0, 0x1);
        gbc.writeMem(0x2883, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x836a, gbc.sp());
        EXPECT(0x2885, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C1 02DF
        gbc.setState(0x671c, 0x3349, 0xf6f0, 0x6ddf, 0x42a9, 0x5ace, 0x1, 0x1);
        gbc.writeMem(0x671c, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x3349, gbc.sp());
        EXPECT(0x671e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C1 02E0
        gbc.setState(0x921b, 0x20ca, 0xeb30, 0xd8bd, 0x8a97, 0x5439, 0x0, 0x1);
        gbc.writeMem(0x921b, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x20ca, gbc.sp());
        EXPECT(0x921d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x921b));
        EXPECT(0xc1, gbc.readMem(0x921c));
        // CB C1 02E1
        gbc.setState(0x5edf, 0xf7f2, 0x5f10, 0xb41, 0x7ce, 0x20b2, 0x1, 0x1);
        gbc.writeMem(0x5edf, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xf7f2, gbc.sp());
        EXPECT(0x5ee1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C1 02E3
        gbc.setState(0x3e91, 0x7051, 0x2bc0, 0x2e35, 0x81ac, 0x5d0f, 0x0, 0x1);
        gbc.writeMem(0x3e91, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x7051, gbc.sp());
        EXPECT(0x3e93, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C1 02E4
        gbc.setState(0xee95, 0x3c84, 0x9bf0, 0xbb4a, 0xce5f, 0xaf76, 0x0, 0x0);
        gbc.writeMem(0xee95, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x3c84, gbc.sp());
        EXPECT(0xee97, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee95));
        EXPECT(0xc1, gbc.readMem(0xee96));
        // CB C1 02E5
        gbc.setState(0x2d73, 0x8181, 0x2680, 0x8013, 0x7999, 0xf565, 0x1, 0x1);
        gbc.writeMem(0x2d73, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x8181, gbc.sp());
        EXPECT(0x2d75, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C1 02E6
        gbc.setState(0x8bec, 0x4798, 0x6720, 0x5e7f, 0xa8b9, 0xbeb3, 0x1, 0x0);
        gbc.writeMem(0x8bec, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x4798, gbc.sp());
        EXPECT(0x8bee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8bec));
        EXPECT(0xc1, gbc.readMem(0x8bed));
        // CB C1 02E7
        gbc.setState(0x73b4, 0x8d55, 0x76b0, 0x687a, 0x2dbd, 0xd230, 0x0, 0x1);
        gbc.writeMem(0x73b4, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x8d55, gbc.sp());
        EXPECT(0x73b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C1 02E8
        gbc.setState(0xaf47, 0xaf9e, 0x4a10, 0xc234, 0x5666, 0x1e5e, 0x1, 0x0);
        gbc.writeMem(0xaf47, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xaf9e, gbc.sp());
        EXPECT(0xaf49, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf47));
        EXPECT(0xc1, gbc.readMem(0xaf48));
        // CB C1 02E9
        gbc.setState(0xc2ef, 0xf5c4, 0x69d0, 0x4f4f, 0x24f8, 0xa7f7, 0x0, 0x0);
        gbc.writeMem(0xc2ef, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xf5c4, gbc.sp());
        EXPECT(0xc2f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc2ef));
        EXPECT(0xc1, gbc.readMem(0xc2f0));
        // CB C1 02EA
        gbc.setState(0x65b0, 0xee6c, 0xd690, 0xfaf9, 0xe183, 0x1e92, 0x1, 0x0);
        gbc.writeMem(0x65b0, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xee6c, gbc.sp());
        EXPECT(0x65b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C1 02EB
        gbc.setState(0xd06d, 0x2c7, 0x3060, 0x7c4d, 0x1dde, 0x9937, 0x0, 0x0);
        gbc.writeMem(0xd06d, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x2c7, gbc.sp());
        EXPECT(0xd06f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd06d));
        EXPECT(0xc1, gbc.readMem(0xd06e));
        // CB C1 02EC
        gbc.setState(0xed18, 0xfab9, 0xe10, 0xa658, 0x5002, 0x39d4, 0x0, 0x1);
        gbc.writeMem(0xed18, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xfab9, gbc.sp());
        EXPECT(0xed1a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed18));
        EXPECT(0xc1, gbc.readMem(0xed19));
        // CB C1 02ED
        gbc.setState(0x6a91, 0x6021, 0xab50, 0xac94, 0xeabf, 0xd4ae, 0x1, 0x0);
        gbc.writeMem(0x6a91, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x6021, gbc.sp());
        EXPECT(0x6a93, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C1 02EF
        gbc.setState(0x4de9, 0x667a, 0xf7d0, 0x15b9, 0x20a4, 0x81af, 0x0, 0x1);
        gbc.writeMem(0x4de9, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x667a, gbc.sp());
        EXPECT(0x4deb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C1 02F0
        gbc.setState(0xd97e, 0x9046, 0x2ee0, 0x1e7a, 0x819f, 0x23f2, 0x0, 0x0);
        gbc.writeMem(0xd97e, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x9046, gbc.sp());
        EXPECT(0xd980, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd97e));
        EXPECT(0xc1, gbc.readMem(0xd97f));
        // CB C1 02F1
        gbc.setState(0x8b80, 0x1e0d, 0x5790, 0xdba1, 0x4a99, 0x957f, 0x0, 0x1);
        gbc.writeMem(0x8b80, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x1e0d, gbc.sp());
        EXPECT(0x8b82, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b80));
        EXPECT(0xc1, gbc.readMem(0x8b81));
        // CB C1 02F2
        gbc.setState(0xeb2c, 0xbee8, 0xe620, 0xcafd, 0xf75e, 0xcd0b, 0x1, 0x0);
        gbc.writeMem(0xeb2c, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xbee8, gbc.sp());
        EXPECT(0xeb2e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb2c));
        EXPECT(0xc1, gbc.readMem(0xeb2d));
        // CB C1 02F3
        gbc.setState(0xeee9, 0xaef9, 0x6c20, 0x4d97, 0x59b3, 0xdbb4, 0x0, 0x0);
        gbc.writeMem(0xeee9, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xaef9, gbc.sp());
        EXPECT(0xeeeb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeee9));
        EXPECT(0xc1, gbc.readMem(0xeeea));
        // CB C1 02F4
        gbc.setState(0x595a, 0x19c0, 0x3310, 0xa5c4, 0xc8d5, 0x99d1, 0x1, 0x1);
        gbc.writeMem(0x595a, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x19c0, gbc.sp());
        EXPECT(0x595c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C1 02F5
        gbc.setState(0x245e, 0xc37d, 0x15f0, 0xc78a, 0x4cfd, 0x77f5, 0x1, 0x0);
        gbc.writeMem(0x245e, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xc37d, gbc.sp());
        EXPECT(0x2460, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C1 02F6
        gbc.setState(0x84ae, 0x3190, 0xfeb0, 0x3ba2, 0xb83, 0xf63c, 0x1, 0x0);
        gbc.writeMem(0x84ae, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x3190, gbc.sp());
        EXPECT(0x84b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x84ae));
        EXPECT(0xc1, gbc.readMem(0x84af));
        // CB C1 02F7
        gbc.setState(0xec5e, 0x1e96, 0xe550, 0x22c2, 0x9445, 0xcba2, 0x0, 0x1);
        gbc.writeMem(0xec5e, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x1e96, gbc.sp());
        EXPECT(0xec60, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec5e));
        EXPECT(0xc1, gbc.readMem(0xec5f));
        // CB C1 02F8
        gbc.setState(0xd58b, 0xbe0e, 0xe8c0, 0x2f95, 0xa308, 0x4cf7, 0x1, 0x1);
        gbc.writeMem(0xd58b, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xbe0e, gbc.sp());
        EXPECT(0xd58d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd58b));
        EXPECT(0xc1, gbc.readMem(0xd58c));
        // CB C1 02F9
        gbc.setState(0xcdba, 0xda9, 0x87d0, 0xc065, 0xc66a, 0xea51, 0x1, 0x1);
        gbc.writeMem(0xcdba, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xda9, gbc.sp());
        EXPECT(0xcdbc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcdba));
        EXPECT(0xc1, gbc.readMem(0xcdbb));
        // CB C1 02FA
        gbc.setState(0xe6d5, 0xd0c3, 0xa860, 0x3ab4, 0x9fb3, 0x477c, 0x0, 0x0);
        gbc.writeMem(0xe6d5, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xd0c3, gbc.sp());
        EXPECT(0xe6d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe6d5));
        EXPECT(0xc1, gbc.readMem(0xe6d6));
        // CB C1 02FB
        gbc.setState(0xdb7a, 0x3ec6, 0xd0d0, 0xa88d, 0x9e45, 0x87e3, 0x0, 0x1);
        gbc.writeMem(0xdb7a, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x3ec6, gbc.sp());
        EXPECT(0xdb7c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb7a));
        EXPECT(0xc1, gbc.readMem(0xdb7b));
        // CB C1 02FC
        gbc.setState(0x31b6, 0x712b, 0xec20, 0x6ea2, 0x6273, 0x5ddf, 0x0, 0x1);
        gbc.writeMem(0x31b6, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x712b, gbc.sp());
        EXPECT(0x31b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C1 02FD
        gbc.setState(0xb7c1, 0x3333, 0xda80, 0x61aa, 0x4131, 0xa247, 0x0, 0x0);
        gbc.writeMem(0xb7c1, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x3333, gbc.sp());
        EXPECT(0xb7c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb7c1));
        EXPECT(0xc1, gbc.readMem(0xb7c2));
        // CB C1 02FE
        gbc.setState(0x1a46, 0xe2df, 0xdd80, 0xb091, 0x4133, 0x8efc, 0x1, 0x0);
        gbc.writeMem(0x1a46, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xe2df, gbc.sp());
        EXPECT(0x1a48, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C1 0301
        gbc.setState(0xd03e, 0xb924, 0xd8b0, 0x2e59, 0xd41a, 0xf5fe, 0x1, 0x0);
        gbc.writeMem(0xd03e, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xb924, gbc.sp());
        EXPECT(0xd040, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd03e));
        EXPECT(0xc1, gbc.readMem(0xd03f));
        // CB C1 0302
        gbc.setState(0x4b20, 0x1ee9, 0xb7c0, 0xa833, 0xaa3b, 0xb3d1, 0x1, 0x0);
        gbc.writeMem(0x4b20, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x1ee9, gbc.sp());
        EXPECT(0x4b22, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C1 0303
        gbc.setState(0xe7d8, 0x30b1, 0x58d0, 0x6e9c, 0x4cdd, 0x3025, 0x0, 0x1);
        gbc.writeMem(0xe7d8, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x30b1, gbc.sp());
        EXPECT(0xe7da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe7d8));
        EXPECT(0xc1, gbc.readMem(0xe7d9));
        // CB C1 0304
        gbc.setState(0x73aa, 0x6947, 0x6c00, 0x6a51, 0x2f57, 0x80d0, 0x0, 0x0);
        gbc.writeMem(0x73aa, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x6947, gbc.sp());
        EXPECT(0x73ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C1 0305
        gbc.setState(0x2996, 0xa9df, 0x2030, 0x8008, 0xa582, 0xc11, 0x1, 0x0);
        gbc.writeMem(0x2996, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xa9df, gbc.sp());
        EXPECT(0x2998, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C1 0306
        gbc.setState(0x3a61, 0xc971, 0x6870, 0x644a, 0xe8bc, 0x4b27, 0x1, 0x1);
        gbc.writeMem(0x3a61, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xc971, gbc.sp());
        EXPECT(0x3a63, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C1 0307
        gbc.setState(0x88f5, 0xdbd8, 0x5810, 0xe4f1, 0x6cef, 0x57a, 0x1, 0x0);
        gbc.writeMem(0x88f5, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xdbd8, gbc.sp());
        EXPECT(0x88f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x88f5));
        EXPECT(0xc1, gbc.readMem(0x88f6));
        // CB C1 0308
        gbc.setState(0x4e2d, 0xcdb2, 0xaa40, 0x2a90, 0xf6d2, 0x1b4c, 0x1, 0x0);
        gbc.writeMem(0x4e2d, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xcdb2, gbc.sp());
        EXPECT(0x4e2f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C1 0309
        gbc.setState(0xb2e4, 0x5582, 0x3840, 0xc029, 0xad7a, 0x874b, 0x1, 0x1);
        gbc.writeMem(0xb2e4, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x5582, gbc.sp());
        EXPECT(0xb2e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb2e4));
        EXPECT(0xc1, gbc.readMem(0xb2e5));
        // CB C1 030A
        gbc.setState(0x763e, 0x47cf, 0x74b0, 0x590, 0xb602, 0xfa79, 0x1, 0x1);
        gbc.writeMem(0x763e, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x47cf, gbc.sp());
        EXPECT(0x7640, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C1 030B
        gbc.setState(0xa641, 0xd0c0, 0x13f0, 0x6bc8, 0x2b16, 0x6893, 0x0, 0x1);
        gbc.writeMem(0xa641, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xd0c0, gbc.sp());
        EXPECT(0xa643, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa641));
        EXPECT(0xc1, gbc.readMem(0xa642));
        // CB C1 030C
        gbc.setState(0xbf35, 0xb4e2, 0xb570, 0x52e9, 0xd90f, 0x30c3, 0x0, 0x0);
        gbc.writeMem(0xbf35, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xb4e2, gbc.sp());
        EXPECT(0xbf37, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf35));
        EXPECT(0xc1, gbc.readMem(0xbf36));
        // CB C1 030D
        gbc.setState(0x1e25, 0xd194, 0x5680, 0x8073, 0x337d, 0x7490, 0x0, 0x0);
        gbc.writeMem(0x1e25, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xd194, gbc.sp());
        EXPECT(0x1e27, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C1 030E
        gbc.setState(0xba36, 0x2e31, 0x2700, 0xed6, 0xed1c, 0xa37c, 0x0, 0x0);
        gbc.writeMem(0xba36, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x2e31, gbc.sp());
        EXPECT(0xba38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba36));
        EXPECT(0xc1, gbc.readMem(0xba37));
        // CB C1 030F
        gbc.setState(0x73dc, 0xdbe9, 0xa270, 0xd7e9, 0x91d2, 0xdd59, 0x1, 0x1);
        gbc.writeMem(0x73dc, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xdbe9, gbc.sp());
        EXPECT(0x73de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C1 0310
        gbc.setState(0xd1bf, 0xdd9c, 0xf060, 0x6c84, 0xec7, 0x2ebf, 0x0, 0x0);
        gbc.writeMem(0xd1bf, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xdd9c, gbc.sp());
        EXPECT(0xd1c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd1bf));
        EXPECT(0xc1, gbc.readMem(0xd1c0));
        // CB C1 0311
        gbc.setState(0x779b, 0xacf2, 0xa7f0, 0xa272, 0x37bc, 0x6466, 0x0, 0x0);
        gbc.writeMem(0x779b, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xacf2, gbc.sp());
        EXPECT(0x779d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C1 0312
        gbc.setState(0x5812, 0x34b6, 0x5a90, 0x202f, 0xdf9a, 0xfd64, 0x0, 0x0);
        gbc.writeMem(0x5812, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x34b6, gbc.sp());
        EXPECT(0x5814, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C1 0313
        gbc.setState(0xb73a, 0x75d7, 0x6d80, 0x2fab, 0x8e7d, 0x85e7, 0x1, 0x1);
        gbc.writeMem(0xb73a, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x75d7, gbc.sp());
        EXPECT(0xb73c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb73a));
        EXPECT(0xc1, gbc.readMem(0xb73b));
        // CB C1 0314
        gbc.setState(0x2891, 0x6aa6, 0xa740, 0x8e6c, 0x39eb, 0x8975, 0x1, 0x0);
        gbc.writeMem(0x2891, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x6aa6, gbc.sp());
        EXPECT(0x2893, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C1 0315
        gbc.setState(0xae88, 0xe8bf, 0xf390, 0x60f, 0x70b9, 0x64c, 0x0, 0x1);
        gbc.writeMem(0xae88, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xe8bf, gbc.sp());
        EXPECT(0xae8a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae88));
        EXPECT(0xc1, gbc.readMem(0xae89));
        // CB C1 0316
        gbc.setState(0x65a2, 0x83d1, 0x66e0, 0x394d, 0x95b3, 0xd010, 0x0, 0x0);
        gbc.writeMem(0x65a2, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x83d1, gbc.sp());
        EXPECT(0x65a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C1 0317
        gbc.setState(0xcf7b, 0xd052, 0x8c00, 0xd37a, 0x8ce1, 0x1b75, 0x0, 0x1);
        gbc.writeMem(0xcf7b, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xd052, gbc.sp());
        EXPECT(0xcf7d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf7b));
        EXPECT(0xc1, gbc.readMem(0xcf7c));
        // CB C1 0318
        gbc.setState(0xb1a6, 0xcf24, 0x4f40, 0xb10b, 0x11c6, 0xf98f, 0x1, 0x0);
        gbc.writeMem(0xb1a6, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xcf24, gbc.sp());
        EXPECT(0xb1a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb1a6));
        EXPECT(0xc1, gbc.readMem(0xb1a7));
        // CB C1 0319
        gbc.setState(0xe4be, 0x3b68, 0x38d0, 0x1444, 0x4812, 0x66d3, 0x0, 0x1);
        gbc.writeMem(0xe4be, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x3b68, gbc.sp());
        EXPECT(0xe4c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe4be));
        EXPECT(0xc1, gbc.readMem(0xe4bf));
        // CB C1 031A
        gbc.setState(0x44bb, 0xa0be, 0x8960, 0x1531, 0xfc33, 0xd6c1, 0x0, 0x0);
        gbc.writeMem(0x44bb, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xa0be, gbc.sp());
        EXPECT(0x44bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C1 031B
        gbc.setState(0x2196, 0xdc99, 0xeb80, 0xb2f5, 0xdc22, 0x3b1a, 0x0, 0x1);
        gbc.writeMem(0x2196, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xdc99, gbc.sp());
        EXPECT(0x2198, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C1 031C
        gbc.setState(0x7a1, 0x6122, 0xc860, 0x6b9f, 0x6258, 0x7562, 0x1, 0x0);
        gbc.writeMem(0x7a1, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x6122, gbc.sp());
        EXPECT(0x7a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C1 031D
        gbc.setState(0x225d, 0x7c75, 0xc470, 0xfc0e, 0xd519, 0xefed, 0x0, 0x0);
        gbc.writeMem(0x225d, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x7c75, gbc.sp());
        EXPECT(0x225f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C1 031E
        gbc.setState(0x7d28, 0x5fba, 0xeb60, 0x6b6f, 0xa72c, 0x9998, 0x1, 0x1);
        gbc.writeMem(0x7d28, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x5fba, gbc.sp());
        EXPECT(0x7d2a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C1 0320
        gbc.setState(0x10f3, 0xb15a, 0x4cd0, 0xa190, 0x7027, 0x1e81, 0x0, 0x0);
        gbc.writeMem(0x10f3, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xb15a, gbc.sp());
        EXPECT(0x10f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C1 0321
        gbc.setState(0x987d, 0xd69, 0x4d20, 0x5fae, 0xa723, 0xb6bd, 0x0, 0x0);
        gbc.writeMem(0x987d, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xd69, gbc.sp());
        EXPECT(0x987f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x987d));
        EXPECT(0xc1, gbc.readMem(0x987e));
        // CB C1 0322
        gbc.setState(0x8ab7, 0x2282, 0x2b50, 0x5b13, 0xc270, 0x5681, 0x0, 0x0);
        gbc.writeMem(0x8ab7, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x2282, gbc.sp());
        EXPECT(0x8ab9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ab7));
        EXPECT(0xc1, gbc.readMem(0x8ab8));
        // CB C1 0323
        gbc.setState(0x4a4, 0xa50, 0x2330, 0xa821, 0xf797, 0x3753, 0x0, 0x1);
        gbc.writeMem(0x4a4, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xa50, gbc.sp());
        EXPECT(0x4a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C1 0324
        gbc.setState(0xb63d, 0xa433, 0x4fc0, 0x413b, 0x40f7, 0x1e5b, 0x1, 0x0);
        gbc.writeMem(0xb63d, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xa433, gbc.sp());
        EXPECT(0xb63f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb63d));
        EXPECT(0xc1, gbc.readMem(0xb63e));
        // CB C1 0325
        gbc.setState(0x62cb, 0x78a8, 0x5450, 0x47e8, 0xe34a, 0xa26e, 0x0, 0x0);
        gbc.writeMem(0x62cb, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x78a8, gbc.sp());
        EXPECT(0x62cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C1 0326
        gbc.setState(0x4fa5, 0x6974, 0x69c0, 0x5449, 0xf265, 0x8ee, 0x1, 0x1);
        gbc.writeMem(0x4fa5, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x6974, gbc.sp());
        EXPECT(0x4fa7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C1 0327
        gbc.setState(0x1972, 0x25fa, 0x6c10, 0x8d8, 0x5d87, 0xdf93, 0x0, 0x0);
        gbc.writeMem(0x1972, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x25fa, gbc.sp());
        EXPECT(0x1974, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C1 0328
        gbc.setState(0x631e, 0xe5d8, 0xb760, 0xa9b9, 0x1ff6, 0xb549, 0x0, 0x1);
        gbc.writeMem(0x631e, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xe5d8, gbc.sp());
        EXPECT(0x6320, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C1 0329
        gbc.setState(0x2696, 0x4872, 0xa8a0, 0x12af, 0x665b, 0x5732, 0x0, 0x1);
        gbc.writeMem(0x2696, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x4872, gbc.sp());
        EXPECT(0x2698, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C1 032A
        gbc.setState(0x2cc2, 0x85b1, 0x2f70, 0xdbb, 0x55e3, 0x2021, 0x0, 0x0);
        gbc.writeMem(0x2cc2, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x85b1, gbc.sp());
        EXPECT(0x2cc4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C1 032B
        gbc.setState(0xd6f9, 0xa55f, 0xe000, 0x169, 0x61b8, 0xe772, 0x1, 0x0);
        gbc.writeMem(0xd6f9, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xa55f, gbc.sp());
        EXPECT(0xd6fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd6f9));
        EXPECT(0xc1, gbc.readMem(0xd6fa));
        // CB C1 032C
        gbc.setState(0xb134, 0x79be, 0xed50, 0x1823, 0xc595, 0x2ca9, 0x0, 0x0);
        gbc.writeMem(0xb134, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x79be, gbc.sp());
        EXPECT(0xb136, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb134));
        EXPECT(0xc1, gbc.readMem(0xb135));
        // CB C1 032D
        gbc.setState(0xdd0c, 0xb9b4, 0x8f70, 0x5c4b, 0x58fd, 0x445c, 0x1, 0x1);
        gbc.writeMem(0xdd0c, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xb9b4, gbc.sp());
        EXPECT(0xdd0e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd0c));
        EXPECT(0xc1, gbc.readMem(0xdd0d));
        // CB C1 032E
        gbc.setState(0xb9ca, 0x7ec, 0xa390, 0x161e, 0x56b7, 0x4c33, 0x1, 0x0);
        gbc.writeMem(0xb9ca, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x7ec, gbc.sp());
        EXPECT(0xb9cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb9ca));
        EXPECT(0xc1, gbc.readMem(0xb9cb));
        // CB C1 032F
        gbc.setState(0xa059, 0xf9eb, 0x61e0, 0xa862, 0x6aa4, 0xa23b, 0x0, 0x1);
        gbc.writeMem(0xa059, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xf9eb, gbc.sp());
        EXPECT(0xa05b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa059));
        EXPECT(0xc1, gbc.readMem(0xa05a));
        // CB C1 0330
        gbc.setState(0x9950, 0xd30f, 0xe190, 0xe1c9, 0x230, 0xff8b, 0x0, 0x1);
        gbc.writeMem(0x9950, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xd30f, gbc.sp());
        EXPECT(0x9952, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9950));
        EXPECT(0xc1, gbc.readMem(0x9951));
        // CB C1 0331
        gbc.setState(0xc197, 0x4e4a, 0xc2f0, 0xc4ef, 0xcaca, 0x970a, 0x1, 0x1);
        gbc.writeMem(0xc197, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x4e4a, gbc.sp());
        EXPECT(0xc199, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc197));
        EXPECT(0xc1, gbc.readMem(0xc198));
        // CB C1 0332
        gbc.setState(0xb9bd, 0x66fd, 0xce0, 0xf3c6, 0xd01e, 0x12a5, 0x1, 0x0);
        gbc.writeMem(0xb9bd, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x66fd, gbc.sp());
        EXPECT(0xb9bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb9bd));
        EXPECT(0xc1, gbc.readMem(0xb9be));
        // CB C1 0333
        gbc.setState(0xbc03, 0xaa40, 0x62b0, 0xf903, 0x2e79, 0x2e97, 0x1, 0x0);
        gbc.writeMem(0xbc03, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xaa40, gbc.sp());
        EXPECT(0xbc05, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc03));
        EXPECT(0xc1, gbc.readMem(0xbc04));
        // CB C1 0334
        gbc.setState(0xed51, 0xf891, 0x7470, 0xbad5, 0xf157, 0xa8c1, 0x1, 0x0);
        gbc.writeMem(0xed51, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xf891, gbc.sp());
        EXPECT(0xed53, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed51));
        EXPECT(0xc1, gbc.readMem(0xed52));
        // CB C1 0335
        gbc.setState(0x7e81, 0x3b9a, 0xb7b0, 0x58e2, 0x3cf9, 0x3846, 0x0, 0x0);
        gbc.writeMem(0x7e81, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x3b9a, gbc.sp());
        EXPECT(0x7e83, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C1 0336
        gbc.setState(0xb831, 0xee5, 0xd5c0, 0x25af, 0xc3f9, 0x3532, 0x0, 0x0);
        gbc.writeMem(0xb831, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xee5, gbc.sp());
        EXPECT(0xb833, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb831));
        EXPECT(0xc1, gbc.readMem(0xb832));
        // CB C1 0337
        gbc.setState(0x5a49, 0xf061, 0x6820, 0xa303, 0x3c54, 0xd694, 0x1, 0x1);
        gbc.writeMem(0x5a49, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xf061, gbc.sp());
        EXPECT(0x5a4b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C1 0338
        gbc.setState(0xd2b8, 0xb2bd, 0xe360, 0xce73, 0x357a, 0x1a27, 0x1, 0x0);
        gbc.writeMem(0xd2b8, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xb2bd, gbc.sp());
        EXPECT(0xd2ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd2b8));
        EXPECT(0xc1, gbc.readMem(0xd2b9));
        // CB C1 0339
        gbc.setState(0x86f, 0x9df0, 0x4460, 0xdde2, 0x18, 0x45af, 0x1, 0x0);
        gbc.writeMem(0x86f, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x9df0, gbc.sp());
        EXPECT(0x871, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C1 033A
        gbc.setState(0x8e64, 0xbf18, 0xf670, 0xcba5, 0x5b35, 0xed95, 0x0, 0x0);
        gbc.writeMem(0x8e64, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xbf18, gbc.sp());
        EXPECT(0x8e66, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e64));
        EXPECT(0xc1, gbc.readMem(0x8e65));
        // CB C1 033B
        gbc.setState(0x4df8, 0x37b9, 0x98b0, 0xace5, 0xc809, 0xe0fe, 0x0, 0x1);
        gbc.writeMem(0x4df8, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x37b9, gbc.sp());
        EXPECT(0x4dfa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C1 033C
        gbc.setState(0x225a, 0x9e43, 0xbca0, 0x1028, 0x528a, 0x7af3, 0x1, 0x1);
        gbc.writeMem(0x225a, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x9e43, gbc.sp());
        EXPECT(0x225c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C1 033D
        gbc.setState(0x6106, 0xc3e0, 0x8f40, 0xcae3, 0x7368, 0x21d4, 0x1, 0x1);
        gbc.writeMem(0x6106, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xc3e0, gbc.sp());
        EXPECT(0x6108, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C1 033E
        gbc.setState(0xd02b, 0xa812, 0x74a0, 0x33c, 0xc05, 0x2922, 0x1, 0x0);
        gbc.writeMem(0xd02b, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xa812, gbc.sp());
        EXPECT(0xd02d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd02b));
        EXPECT(0xc1, gbc.readMem(0xd02c));
        // CB C1 033F
        gbc.setState(0xb0f8, 0x46f6, 0xc9e0, 0xddc, 0x4388, 0x7272, 0x1, 0x1);
        gbc.writeMem(0xb0f8, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x46f6, gbc.sp());
        EXPECT(0xb0fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb0f8));
        EXPECT(0xc1, gbc.readMem(0xb0f9));
        // CB C1 0340
        gbc.setState(0xce7, 0x9a79, 0x8dd0, 0x2072, 0xe1fe, 0xd09f, 0x0, 0x1);
        gbc.writeMem(0xce7, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x9a79, gbc.sp());
        EXPECT(0xce9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C1 0341
        gbc.setState(0xdfe1, 0xe618, 0x1240, 0x92da, 0x6232, 0x4e5, 0x1, 0x1);
        gbc.writeMem(0xdfe1, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xe618, gbc.sp());
        EXPECT(0xdfe3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdfe1));
        EXPECT(0xc1, gbc.readMem(0xdfe2));
        // CB C1 0342
        gbc.setState(0x28f8, 0x7885, 0xade0, 0x7a39, 0x4f1f, 0x56d0, 0x1, 0x1);
        gbc.writeMem(0x28f8, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x7885, gbc.sp());
        EXPECT(0x28fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C1 0344
        gbc.setState(0xaf04, 0xf06, 0x7900, 0x1d2d, 0x3cea, 0x9112, 0x1, 0x1);
        gbc.writeMem(0xaf04, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xf06, gbc.sp());
        EXPECT(0xaf06, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf04));
        EXPECT(0xc1, gbc.readMem(0xaf05));
        // CB C1 0345
        gbc.setState(0xbde2, 0x6c8f, 0x240, 0xf39e, 0xea8b, 0xa14e, 0x1, 0x0);
        gbc.writeMem(0xbde2, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x6c8f, gbc.sp());
        EXPECT(0xbde4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbde2));
        EXPECT(0xc1, gbc.readMem(0xbde3));
        // CB C1 0346
        gbc.setState(0x6007, 0xa9b0, 0xa5c0, 0x30c9, 0xf9d8, 0xd338, 0x1, 0x0);
        gbc.writeMem(0x6007, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xa9b0, gbc.sp());
        EXPECT(0x6009, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C1 0347
        gbc.setState(0x58dc, 0xc03b, 0x4110, 0xf419, 0xfdb5, 0xcdfb, 0x1, 0x0);
        gbc.writeMem(0x58dc, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xc03b, gbc.sp());
        EXPECT(0x58de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C1 0348
        gbc.setState(0x28e4, 0x532a, 0x5ad0, 0xbcaa, 0xdbd7, 0x7d4a, 0x1, 0x0);
        gbc.writeMem(0x28e4, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x532a, gbc.sp());
        EXPECT(0x28e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C1 0349
        gbc.setState(0x15e9, 0xc68b, 0xb5b0, 0x7b09, 0x15fa, 0x6dc9, 0x0, 0x0);
        gbc.writeMem(0x15e9, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xc68b, gbc.sp());
        EXPECT(0x15eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C1 034A
        gbc.setState(0x15f9, 0xc692, 0x9330, 0x9734, 0x9607, 0xb139, 0x0, 0x0);
        gbc.writeMem(0x15f9, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xc692, gbc.sp());
        EXPECT(0x15fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C1 034B
        gbc.setState(0x39d9, 0xc6db, 0x67e0, 0xc9fd, 0xe7fe, 0x7b5a, 0x1, 0x0);
        gbc.writeMem(0x39d9, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xc6db, gbc.sp());
        EXPECT(0x39db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C1 034C
        gbc.setState(0x7e56, 0xc098, 0xa040, 0xbf9e, 0xd0f6, 0xbebb, 0x0, 0x1);
        gbc.writeMem(0x7e56, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xc098, gbc.sp());
        EXPECT(0x7e58, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C1 034D
        gbc.setState(0xb1bb, 0xdc7c, 0x13a0, 0x7389, 0xd00, 0x8a03, 0x1, 0x0);
        gbc.writeMem(0xb1bb, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xdc7c, gbc.sp());
        EXPECT(0xb1bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb1bb));
        EXPECT(0xc1, gbc.readMem(0xb1bc));
        // CB C1 034E
        gbc.setState(0xe863, 0x160b, 0x68a0, 0x8452, 0xfc63, 0xac40, 0x1, 0x1);
        gbc.writeMem(0xe863, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x160b, gbc.sp());
        EXPECT(0xe865, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe863));
        EXPECT(0xc1, gbc.readMem(0xe864));
        // CB C1 034F
        gbc.setState(0xcb80, 0x5f12, 0x95b0, 0xd244, 0xe378, 0x5030, 0x0, 0x1);
        gbc.writeMem(0xcb80, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x5f12, gbc.sp());
        EXPECT(0xcb82, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb80));
        EXPECT(0xc1, gbc.readMem(0xcb81));
        // CB C1 0350
        gbc.setState(0x7e83, 0x4200, 0x7a10, 0xd294, 0xf0f, 0xb7d2, 0x0, 0x1);
        gbc.writeMem(0x7e83, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x4200, gbc.sp());
        EXPECT(0x7e85, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C1 0351
        gbc.setState(0xe085, 0x353a, 0xea20, 0xa4dc, 0x21a5, 0xc6f1, 0x0, 0x1);
        gbc.writeMem(0xe085, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x353a, gbc.sp());
        EXPECT(0xe087, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe085));
        EXPECT(0xc1, gbc.readMem(0xe086));
        // CB C1 0352
        gbc.setState(0xe8e9, 0x7883, 0x6a50, 0xc92f, 0x48bf, 0x4eb4, 0x1, 0x0);
        gbc.writeMem(0xe8e9, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x7883, gbc.sp());
        EXPECT(0xe8eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe8e9));
        EXPECT(0xc1, gbc.readMem(0xe8ea));
        // CB C1 0353
        gbc.setState(0x4441, 0x7a3e, 0x7020, 0xe443, 0x5a84, 0x62c9, 0x1, 0x1);
        gbc.writeMem(0x4441, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x7a3e, gbc.sp());
        EXPECT(0x4443, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C1 0354
        gbc.setState(0xae2a, 0x38e7, 0xd8b0, 0xafe9, 0xdf26, 0xfd2f, 0x1, 0x0);
        gbc.writeMem(0xae2a, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x38e7, gbc.sp());
        EXPECT(0xae2c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae2a));
        EXPECT(0xc1, gbc.readMem(0xae2b));
        // CB C1 0355
        gbc.setState(0xc400, 0x9677, 0x7300, 0x45a0, 0xac8c, 0xc8a7, 0x1, 0x0);
        gbc.writeMem(0xc400, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x9677, gbc.sp());
        EXPECT(0xc402, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc400));
        EXPECT(0xc1, gbc.readMem(0xc401));
        // CB C1 0356
        gbc.setState(0xaf1e, 0xc6ce, 0x6c90, 0xbc85, 0x7639, 0x49d7, 0x0, 0x0);
        gbc.writeMem(0xaf1e, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xc6ce, gbc.sp());
        EXPECT(0xaf20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf1e));
        EXPECT(0xc1, gbc.readMem(0xaf1f));
        // CB C1 0357
        gbc.setState(0xe598, 0xa922, 0xd2f0, 0x6f47, 0xafe3, 0xf867, 0x1, 0x0);
        gbc.writeMem(0xe598, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xa922, gbc.sp());
        EXPECT(0xe59a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe598));
        EXPECT(0xc1, gbc.readMem(0xe599));
        // CB C1 0358
        gbc.setState(0x5600, 0x945e, 0xbdb0, 0x35a2, 0x301f, 0xcbf3, 0x1, 0x0);
        gbc.writeMem(0x5600, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x945e, gbc.sp());
        EXPECT(0x5602, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C1 0359
        gbc.setState(0x9e21, 0x9c2d, 0xd6f0, 0xa297, 0x2b55, 0xb31c, 0x0, 0x1);
        gbc.writeMem(0x9e21, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x9c2d, gbc.sp());
        EXPECT(0x9e23, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e21));
        EXPECT(0xc1, gbc.readMem(0x9e22));
        // CB C1 035A
        gbc.setState(0xaa0d, 0x9f2e, 0x7a00, 0x6f7f, 0x1550, 0x9827, 0x0, 0x0);
        gbc.writeMem(0xaa0d, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x9f2e, gbc.sp());
        EXPECT(0xaa0f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa0d));
        EXPECT(0xc1, gbc.readMem(0xaa0e));
        // CB C1 035B
        gbc.setState(0x4856, 0xb432, 0x8210, 0x9ec4, 0x7ce2, 0xad07, 0x1, 0x0);
        gbc.writeMem(0x4856, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xb432, gbc.sp());
        EXPECT(0x4858, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C1 035D
        gbc.setState(0xc25b, 0x1a6f, 0xa9c0, 0x803, 0xd15e, 0xcfd4, 0x0, 0x0);
        gbc.writeMem(0xc25b, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x1a6f, gbc.sp());
        EXPECT(0xc25d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc25b));
        EXPECT(0xc1, gbc.readMem(0xc25c));
        // CB C1 035E
        gbc.setState(0xb402, 0x8cd, 0xfda0, 0x1390, 0x104d, 0x8dac, 0x0, 0x1);
        gbc.writeMem(0xb402, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x8cd, gbc.sp());
        EXPECT(0xb404, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb402));
        EXPECT(0xc1, gbc.readMem(0xb403));
        // CB C1 035F
        gbc.setState(0x108a, 0x978b, 0x44e0, 0x82d4, 0x553c, 0x65dd, 0x0, 0x0);
        gbc.writeMem(0x108a, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x978b, gbc.sp());
        EXPECT(0x108c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C1 0360
        gbc.setState(0x4b7d, 0xb12c, 0x2db0, 0x2194, 0x7976, 0x1a04, 0x0, 0x1);
        gbc.writeMem(0x4b7d, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xb12c, gbc.sp());
        EXPECT(0x4b7f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C1 0361
        gbc.setState(0xcd2b, 0x5a7d, 0xad20, 0x2785, 0x75b7, 0x77b4, 0x0, 0x0);
        gbc.writeMem(0xcd2b, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x5a7d, gbc.sp());
        EXPECT(0xcd2d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd2b));
        EXPECT(0xc1, gbc.readMem(0xcd2c));
        // CB C1 0362
        gbc.setState(0x5929, 0x5493, 0xa700, 0xcf31, 0x83c, 0x164a, 0x1, 0x1);
        gbc.writeMem(0x5929, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x5493, gbc.sp());
        EXPECT(0x592b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C1 0363
        gbc.setState(0xc211, 0xace4, 0xd110, 0x9b2f, 0x5c6c, 0xbe8, 0x1, 0x1);
        gbc.writeMem(0xc211, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xace4, gbc.sp());
        EXPECT(0xc213, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc211));
        EXPECT(0xc1, gbc.readMem(0xc212));
        // CB C1 0364
        gbc.setState(0x4e8e, 0x12cf, 0xab70, 0x288f, 0xc646, 0x60db, 0x1, 0x1);
        gbc.writeMem(0x4e8e, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x12cf, gbc.sp());
        EXPECT(0x4e90, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C1 0366
        gbc.setState(0x7153, 0x2a64, 0x4720, 0xf5c9, 0x593b, 0x37a5, 0x0, 0x0);
        gbc.writeMem(0x7153, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x2a64, gbc.sp());
        EXPECT(0x7155, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C1 0367
        gbc.setState(0x64b8, 0x617c, 0x3d40, 0x4479, 0x5408, 0x4aa4, 0x0, 0x0);
        gbc.writeMem(0x64b8, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x617c, gbc.sp());
        EXPECT(0x64ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C1 0368
        gbc.setState(0x3367, 0x8387, 0x210, 0x2afb, 0xc121, 0xde20, 0x1, 0x1);
        gbc.writeMem(0x3367, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x8387, gbc.sp());
        EXPECT(0x3369, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C1 0369
        gbc.setState(0x44db, 0x4a97, 0x5210, 0xdcab, 0x428, 0xd757, 0x1, 0x0);
        gbc.writeMem(0x44db, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x4a97, gbc.sp());
        EXPECT(0x44dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C1 036A
        gbc.setState(0x13ba, 0x498c, 0x2be0, 0x820b, 0x6b47, 0xc3ed, 0x1, 0x1);
        gbc.writeMem(0x13ba, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x498c, gbc.sp());
        EXPECT(0x13bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C1 036B
        gbc.setState(0x707, 0x1ff4, 0x5360, 0x179e, 0xdded, 0xa985, 0x1, 0x1);
        gbc.writeMem(0x707, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x1ff4, gbc.sp());
        EXPECT(0x709, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C1 036C
        gbc.setState(0x5f66, 0x1835, 0x420, 0xfa5d, 0x1061, 0x1d35, 0x1, 0x1);
        gbc.writeMem(0x5f66, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x1835, gbc.sp());
        EXPECT(0x5f68, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C1 036D
        gbc.setState(0x924c, 0x47df, 0xbcd0, 0x3c1, 0xad17, 0xa4fd, 0x1, 0x0);
        gbc.writeMem(0x924c, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x47df, gbc.sp());
        EXPECT(0x924e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x924c));
        EXPECT(0xc1, gbc.readMem(0x924d));
        // CB C1 0370
        gbc.setState(0x8e42, 0x1fe9, 0x36e0, 0xbfc1, 0x9d1a, 0xe2f8, 0x0, 0x0);
        gbc.writeMem(0x8e42, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x1fe9, gbc.sp());
        EXPECT(0x8e44, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e42));
        EXPECT(0xc1, gbc.readMem(0x8e43));
        // CB C1 0371
        gbc.setState(0x3e09, 0x2dc, 0x59e0, 0xe79f, 0x49c3, 0xe43f, 0x0, 0x0);
        gbc.writeMem(0x3e09, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x2dc, gbc.sp());
        EXPECT(0x3e0b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C1 0372
        gbc.setState(0x31b8, 0x6c4a, 0xe470, 0xfc80, 0x568f, 0xfc17, 0x0, 0x0);
        gbc.writeMem(0x31b8, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x6c4a, gbc.sp());
        EXPECT(0x31ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C1 0373
        gbc.setState(0xd4d, 0xa973, 0xee60, 0x32d2, 0x3c2d, 0x6c3d, 0x1, 0x1);
        gbc.writeMem(0xd4d, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xa973, gbc.sp());
        EXPECT(0xd4f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C1 0374
        gbc.setState(0xa7fc, 0xab10, 0xefc0, 0x78c0, 0x6aad, 0xd63d, 0x1, 0x1);
        gbc.writeMem(0xa7fc, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xab10, gbc.sp());
        EXPECT(0xa7fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa7fc));
        EXPECT(0xc1, gbc.readMem(0xa7fd));
        // CB C1 0375
        gbc.setState(0x63a2, 0x7962, 0x71e0, 0x8b1d, 0xb3fc, 0x4c11, 0x1, 0x0);
        gbc.writeMem(0x63a2, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x7962, gbc.sp());
        EXPECT(0x63a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C1 0376
        gbc.setState(0x4667, 0x694c, 0xe8b0, 0xfcd7, 0x187d, 0xcadd, 0x1, 0x1);
        gbc.writeMem(0x4667, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x694c, gbc.sp());
        EXPECT(0x4669, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C1 0378
        gbc.setState(0x7fe6, 0x4c26, 0x1a50, 0x7b74, 0xe75, 0xf2a5, 0x1, 0x0);
        gbc.writeMem(0x7fe6, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x4c26, gbc.sp());
        EXPECT(0x7fe8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C1 0379
        gbc.setState(0xd844, 0xd84d, 0x6420, 0xae8b, 0x2380, 0xe99b, 0x0, 0x1);
        gbc.writeMem(0xd844, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xd84d, gbc.sp());
        EXPECT(0xd846, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd844));
        EXPECT(0xc1, gbc.readMem(0xd845));
        // CB C1 037A
        gbc.setState(0x1bba, 0xfd16, 0x1d10, 0x1976, 0xcab8, 0xc984, 0x0, 0x1);
        gbc.writeMem(0x1bba, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xfd16, gbc.sp());
        EXPECT(0x1bbc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C1 037B
        gbc.setState(0xdf18, 0x2cf9, 0x3c90, 0xac1c, 0x95d0, 0x3f19, 0x0, 0x0);
        gbc.writeMem(0xdf18, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x2cf9, gbc.sp());
        EXPECT(0xdf1a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf18));
        EXPECT(0xc1, gbc.readMem(0xdf19));
        // CB C1 037C
        gbc.setState(0x3611, 0x4523, 0xce80, 0xc3ca, 0xa2f2, 0x4646, 0x1, 0x0);
        gbc.writeMem(0x3611, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x4523, gbc.sp());
        EXPECT(0x3613, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C1 037D
        gbc.setState(0x788f, 0x5fd, 0x5860, 0xf834, 0xff94, 0x3590, 0x0, 0x1);
        gbc.writeMem(0x788f, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x5fd, gbc.sp());
        EXPECT(0x7891, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C1 037E
        gbc.setState(0x45cd, 0x31fa, 0x68d0, 0xf7a8, 0xd73f, 0xa5f9, 0x0, 0x0);
        gbc.writeMem(0x45cd, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x31fa, gbc.sp());
        EXPECT(0x45cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C1 037F
        gbc.setState(0xe7f, 0x281f, 0x6e50, 0xd96a, 0x5889, 0xff16, 0x1, 0x1);
        gbc.writeMem(0xe7f, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x281f, gbc.sp());
        EXPECT(0xe81, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C1 0380
        gbc.setState(0x72ea, 0x3ab2, 0x3b0, 0xa9eb, 0xa2b3, 0x8686, 0x0, 0x1);
        gbc.writeMem(0x72ea, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x3ab2, gbc.sp());
        EXPECT(0x72ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C1 0381
        gbc.setState(0x766e, 0xe2d8, 0x5b10, 0x6e94, 0xc444, 0x1ca5, 0x1, 0x1);
        gbc.writeMem(0x766e, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xe2d8, gbc.sp());
        EXPECT(0x7670, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C1 0383
        gbc.setState(0x43a5, 0x426f, 0x2da0, 0x243c, 0x1cfd, 0x5a7e, 0x1, 0x0);
        gbc.writeMem(0x43a5, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x426f, gbc.sp());
        EXPECT(0x43a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C1 0384
        gbc.setState(0xbc0e, 0x307a, 0xf4a0, 0x7dd8, 0xeade, 0xf79, 0x0, 0x0);
        gbc.writeMem(0xbc0e, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x307a, gbc.sp());
        EXPECT(0xbc10, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc0e));
        EXPECT(0xc1, gbc.readMem(0xbc0f));
        // CB C1 0385
        gbc.setState(0x1f17, 0x7cf9, 0x2540, 0x1d7a, 0x6308, 0x129d, 0x1, 0x0);
        gbc.writeMem(0x1f17, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x7cf9, gbc.sp());
        EXPECT(0x1f19, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C1 0386
        gbc.setState(0xb973, 0x115b, 0x7880, 0x8ddb, 0x4c2d, 0xffd, 0x1, 0x1);
        gbc.writeMem(0xb973, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x115b, gbc.sp());
        EXPECT(0xb975, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb973));
        EXPECT(0xc1, gbc.readMem(0xb974));
        // CB C1 0387
        gbc.setState(0x1f56, 0x27b6, 0x6300, 0xf5c9, 0xf9f8, 0x2c21, 0x1, 0x1);
        gbc.writeMem(0x1f56, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x27b6, gbc.sp());
        EXPECT(0x1f58, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C1 0388
        gbc.setState(0xddbf, 0x7bf, 0x3aa0, 0x2351, 0x96d7, 0x96aa, 0x0, 0x1);
        gbc.writeMem(0xddbf, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x7bf, gbc.sp());
        EXPECT(0xddc1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xddbf));
        EXPECT(0xc1, gbc.readMem(0xddc0));
        // CB C1 0389
        gbc.setState(0x9510, 0xbc9c, 0xbb20, 0x20c6, 0x4df6, 0xfb9c, 0x1, 0x1);
        gbc.writeMem(0x9510, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xbc9c, gbc.sp());
        EXPECT(0x9512, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9510));
        EXPECT(0xc1, gbc.readMem(0x9511));
        // CB C1 038A
        gbc.setState(0xe2e, 0x76f9, 0xa860, 0x96ea, 0x1f0b, 0xf8c0, 0x1, 0x0);
        gbc.writeMem(0xe2e, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x76f9, gbc.sp());
        EXPECT(0xe30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C1 038B
        gbc.setState(0xb29c, 0x4267, 0x68e0, 0x2322, 0xcc3e, 0x968e, 0x0, 0x1);
        gbc.writeMem(0xb29c, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x4267, gbc.sp());
        EXPECT(0xb29e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb29c));
        EXPECT(0xc1, gbc.readMem(0xb29d));
        // CB C1 038C
        gbc.setState(0x7cfa, 0xe806, 0xbb0, 0xaca0, 0x7c98, 0x8002, 0x1, 0x0);
        gbc.writeMem(0x7cfa, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xe806, gbc.sp());
        EXPECT(0x7cfc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C1 038D
        gbc.setState(0x3963, 0xa874, 0x4830, 0x14dd, 0xeafc, 0xa156, 0x0, 0x0);
        gbc.writeMem(0x3963, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xa874, gbc.sp());
        EXPECT(0x3965, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C1 038E
        gbc.setState(0x6ef7, 0xd5fa, 0x8f30, 0x3f16, 0x49a9, 0xd1c2, 0x1, 0x1);
        gbc.writeMem(0x6ef7, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xd5fa, gbc.sp());
        EXPECT(0x6ef9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C1 038F
        gbc.setState(0x7b8f, 0x66c7, 0xbd60, 0x62a8, 0x19c8, 0xa11a, 0x0, 0x0);
        gbc.writeMem(0x7b8f, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x66c7, gbc.sp());
        EXPECT(0x7b91, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C1 0390
        gbc.setState(0xc4e, 0x97f0, 0x53c0, 0x362a, 0x7c1, 0x42c, 0x1, 0x1);
        gbc.writeMem(0xc4e, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x97f0, gbc.sp());
        EXPECT(0xc50, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C1 0391
        gbc.setState(0x61ca, 0x51d0, 0xa410, 0xce0, 0x789b, 0x6899, 0x1, 0x0);
        gbc.writeMem(0x61ca, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x51d0, gbc.sp());
        EXPECT(0x61cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C1 0392
        gbc.setState(0x430f, 0x299c, 0xa220, 0xcb65, 0x26e5, 0xd25f, 0x0, 0x0);
        gbc.writeMem(0x430f, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x299c, gbc.sp());
        EXPECT(0x4311, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C1 0393
        gbc.setState(0x305d, 0xfdcc, 0x30c0, 0xa59d, 0xb915, 0x6563, 0x0, 0x1);
        gbc.writeMem(0x305d, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xfdcc, gbc.sp());
        EXPECT(0x305f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C1 0394
        gbc.setState(0xb864, 0x33c3, 0x3250, 0x254d, 0x3cd5, 0x89f1, 0x1, 0x0);
        gbc.writeMem(0xb864, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x33c3, gbc.sp());
        EXPECT(0xb866, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb864));
        EXPECT(0xc1, gbc.readMem(0xb865));
        // CB C1 0396
        gbc.setState(0x1b6d, 0xdf30, 0x8ff0, 0xd7b4, 0x643c, 0x800f, 0x1, 0x1);
        gbc.writeMem(0x1b6d, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xdf30, gbc.sp());
        EXPECT(0x1b6f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C1 0397
        gbc.setState(0x9f45, 0xe7b, 0xab40, 0xf7cf, 0x8e1c, 0xe9ff, 0x0, 0x0);
        gbc.writeMem(0x9f45, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xe7b, gbc.sp());
        EXPECT(0x9f47, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f45));
        EXPECT(0xc1, gbc.readMem(0x9f46));
        // CB C1 0398
        gbc.setState(0x388d, 0x4594, 0xbc00, 0xddfd, 0xe996, 0x6e40, 0x0, 0x0);
        gbc.writeMem(0x388d, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x4594, gbc.sp());
        EXPECT(0x388f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C1 039A
        gbc.setState(0xa093, 0x58ba, 0x56f0, 0x2add, 0x69e5, 0xe294, 0x0, 0x1);
        gbc.writeMem(0xa093, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x58ba, gbc.sp());
        EXPECT(0xa095, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa093));
        EXPECT(0xc1, gbc.readMem(0xa094));
        // CB C1 039B
        gbc.setState(0x1dc4, 0x46a9, 0xdad0, 0xa495, 0x8ef9, 0x4ece, 0x1, 0x1);
        gbc.writeMem(0x1dc4, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x46a9, gbc.sp());
        EXPECT(0x1dc6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C1 039C
        gbc.setState(0x94f, 0x7fc0, 0xfb10, 0x9fb6, 0x9831, 0xd745, 0x0, 0x1);
        gbc.writeMem(0x94f, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x7fc0, gbc.sp());
        EXPECT(0x951, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C1 039E
        gbc.setState(0x545c, 0x3d21, 0xc970, 0xb1ee, 0x25f8, 0xfe72, 0x1, 0x1);
        gbc.writeMem(0x545c, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x3d21, gbc.sp());
        EXPECT(0x545e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C1 039F
        gbc.setState(0x6095, 0x4f2b, 0x9c50, 0xf8d9, 0x48db, 0xca5a, 0x1, 0x0);
        gbc.writeMem(0x6095, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x4f2b, gbc.sp());
        EXPECT(0x6097, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C1 03A0
        gbc.setState(0x6c9, 0x8e52, 0x29e0, 0xf0a5, 0xde25, 0x69cc, 0x1, 0x0);
        gbc.writeMem(0x6c9, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x8e52, gbc.sp());
        EXPECT(0x6cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C1 03A1
        gbc.setState(0xdbbe, 0x1717, 0xb740, 0xd219, 0xf72e, 0x4492, 0x1, 0x0);
        gbc.writeMem(0xdbbe, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x1717, gbc.sp());
        EXPECT(0xdbc0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdbbe));
        EXPECT(0xc1, gbc.readMem(0xdbbf));
        // CB C1 03A3
        gbc.setState(0xbfb, 0xf18b, 0xc9d0, 0x1bdf, 0x47c0, 0x7f17, 0x1, 0x0);
        gbc.writeMem(0xbfb, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xf18b, gbc.sp());
        EXPECT(0xbfd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C1 03A4
        gbc.setState(0x31bd, 0xe5a7, 0xe050, 0x5d74, 0x5346, 0xb26e, 0x0, 0x0);
        gbc.writeMem(0x31bd, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xe5a7, gbc.sp());
        EXPECT(0x31bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C1 03A5
        gbc.setState(0x6ec1, 0x88fa, 0x2f90, 0x1e27, 0xc3ed, 0xb542, 0x0, 0x1);
        gbc.writeMem(0x6ec1, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x88fa, gbc.sp());
        EXPECT(0x6ec3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C1 03A6
        gbc.setState(0xd761, 0xb60a, 0x2cd0, 0x1308, 0x2d50, 0xaa24, 0x0, 0x0);
        gbc.writeMem(0xd761, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xb60a, gbc.sp());
        EXPECT(0xd763, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd761));
        EXPECT(0xc1, gbc.readMem(0xd762));
        // CB C1 03A7
        gbc.setState(0x4f3b, 0x7511, 0xd110, 0x2260, 0xd4f1, 0x3cc8, 0x1, 0x0);
        gbc.writeMem(0x4f3b, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x7511, gbc.sp());
        EXPECT(0x4f3d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C1 03A9
        gbc.setState(0x1903, 0xd192, 0xbf60, 0xfa98, 0xd00a, 0x5e19, 0x1, 0x0);
        gbc.writeMem(0x1903, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xd192, gbc.sp());
        EXPECT(0x1905, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C1 03AA
        gbc.setState(0xa54b, 0x8673, 0x1770, 0x87a, 0xdc54, 0xd182, 0x0, 0x0);
        gbc.writeMem(0xa54b, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x8673, gbc.sp());
        EXPECT(0xa54d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa54b));
        EXPECT(0xc1, gbc.readMem(0xa54c));
        // CB C1 03AB
        gbc.setState(0x61e4, 0x3509, 0x29f0, 0xfac2, 0x8b8, 0x761a, 0x1, 0x0);
        gbc.writeMem(0x61e4, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x3509, gbc.sp());
        EXPECT(0x61e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C1 03AC
        gbc.setState(0x7a2a, 0xa99e, 0x5d20, 0xe31c, 0x6624, 0x3547, 0x0, 0x0);
        gbc.writeMem(0x7a2a, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xa99e, gbc.sp());
        EXPECT(0x7a2c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C1 03AD
        gbc.setState(0xded0, 0x40a5, 0xa560, 0x8ef5, 0xdbd3, 0x89d1, 0x0, 0x0);
        gbc.writeMem(0xded0, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x40a5, gbc.sp());
        EXPECT(0xded2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xded0));
        EXPECT(0xc1, gbc.readMem(0xded1));
        // CB C1 03AE
        gbc.setState(0xc342, 0x1c15, 0xe400, 0xc2ee, 0xc5bd, 0x19b4, 0x1, 0x1);
        gbc.writeMem(0xc342, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x1c15, gbc.sp());
        EXPECT(0xc344, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc342));
        EXPECT(0xc1, gbc.readMem(0xc343));
        // CB C1 03AF
        gbc.setState(0xcf2a, 0xebaf, 0xb610, 0x92c3, 0x930d, 0xd264, 0x0, 0x1);
        gbc.writeMem(0xcf2a, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xebaf, gbc.sp());
        EXPECT(0xcf2c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf2a));
        EXPECT(0xc1, gbc.readMem(0xcf2b));
        // CB C1 03B0
        gbc.setState(0x8334, 0xe6a8, 0x2cd0, 0xbd96, 0x87a7, 0xe1ac, 0x1, 0x1);
        gbc.writeMem(0x8334, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xe6a8, gbc.sp());
        EXPECT(0x8336, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8334));
        EXPECT(0xc1, gbc.readMem(0x8335));
        // CB C1 03B1
        gbc.setState(0x2ac7, 0xed83, 0xfb60, 0x7341, 0x44bd, 0x2250, 0x0, 0x1);
        gbc.writeMem(0x2ac7, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xed83, gbc.sp());
        EXPECT(0x2ac9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C1 03B2
        gbc.setState(0xc87d, 0x1e1d, 0xe110, 0xd4f, 0x593, 0x4467, 0x0, 0x1);
        gbc.writeMem(0xc87d, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x1e1d, gbc.sp());
        EXPECT(0xc87f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc87d));
        EXPECT(0xc1, gbc.readMem(0xc87e));
        // CB C1 03B3
        gbc.setState(0x476f, 0x1407, 0x3ab0, 0xc689, 0x2d7f, 0x6576, 0x1, 0x0);
        gbc.writeMem(0x476f, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x1407, gbc.sp());
        EXPECT(0x4771, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C1 03B4
        gbc.setState(0x87b0, 0x7669, 0x460, 0xe01e, 0xae48, 0xf511, 0x1, 0x1);
        gbc.writeMem(0x87b0, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x7669, gbc.sp());
        EXPECT(0x87b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x87b0));
        EXPECT(0xc1, gbc.readMem(0x87b1));
        // CB C1 03B5
        gbc.setState(0xade0, 0x38c3, 0xfb40, 0xf390, 0xe667, 0x1056, 0x0, 0x1);
        gbc.writeMem(0xade0, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x38c3, gbc.sp());
        EXPECT(0xade2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xade0));
        EXPECT(0xc1, gbc.readMem(0xade1));
        // CB C1 03B6
        gbc.setState(0xd558, 0x535e, 0x1930, 0x642, 0xdb34, 0xd8bb, 0x0, 0x0);
        gbc.writeMem(0xd558, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x535e, gbc.sp());
        EXPECT(0xd55a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd558));
        EXPECT(0xc1, gbc.readMem(0xd559));
        // CB C1 03B7
        gbc.setState(0x2873, 0xaf3b, 0xd780, 0x1eff, 0x1a37, 0xdf17, 0x1, 0x0);
        gbc.writeMem(0x2873, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xaf3b, gbc.sp());
        EXPECT(0x2875, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C1 03B8
        gbc.setState(0x20a6, 0xdc09, 0x7e30, 0xfab2, 0x3161, 0xca95, 0x1, 0x1);
        gbc.writeMem(0x20a6, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xdc09, gbc.sp());
        EXPECT(0x20a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C1 03B9
        gbc.setState(0xb4e2, 0x9274, 0x9b40, 0x4dae, 0x6697, 0x4b46, 0x1, 0x1);
        gbc.writeMem(0xb4e2, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x9274, gbc.sp());
        EXPECT(0xb4e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb4e2));
        EXPECT(0xc1, gbc.readMem(0xb4e3));
        // CB C1 03BA
        gbc.setState(0x1d64, 0xea24, 0x9ed0, 0x188d, 0x6b32, 0xaa44, 0x0, 0x1);
        gbc.writeMem(0x1d64, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xea24, gbc.sp());
        EXPECT(0x1d66, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C1 03BB
        gbc.setState(0x5b49, 0xf6ab, 0x9ca0, 0x77d7, 0x3aaa, 0x10b8, 0x1, 0x1);
        gbc.writeMem(0x5b49, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xf6ab, gbc.sp());
        EXPECT(0x5b4b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C1 03BC
        gbc.setState(0xa55d, 0xd579, 0xd080, 0x54b2, 0x3efb, 0xdcb9, 0x1, 0x1);
        gbc.writeMem(0xa55d, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xd579, gbc.sp());
        EXPECT(0xa55f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa55d));
        EXPECT(0xc1, gbc.readMem(0xa55e));
        // CB C1 03BD
        gbc.setState(0x9d41, 0xbc98, 0x97b0, 0x2e83, 0x53a7, 0x184f, 0x1, 0x0);
        gbc.writeMem(0x9d41, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xbc98, gbc.sp());
        EXPECT(0x9d43, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d41));
        EXPECT(0xc1, gbc.readMem(0x9d42));
        // CB C1 03BF
        gbc.setState(0x3773, 0x9262, 0xd050, 0x7acb, 0xcf3b, 0xf79b, 0x1, 0x0);
        gbc.writeMem(0x3773, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x9262, gbc.sp());
        EXPECT(0x3775, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C1 03C0
        gbc.setState(0xcad, 0x97ac, 0xd810, 0x8ee7, 0x2006, 0x6753, 0x1, 0x1);
        gbc.writeMem(0xcad, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x97ac, gbc.sp());
        EXPECT(0xcaf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C1 03C1
        gbc.setState(0x247, 0x4787, 0x5440, 0x4fcd, 0x9d1c, 0x8a32, 0x0, 0x1);
        gbc.writeMem(0x247, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x4787, gbc.sp());
        EXPECT(0x249, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C1 03C2
        gbc.setState(0xda6f, 0x8263, 0x3410, 0x1bc, 0xcd9f, 0x8ded, 0x0, 0x1);
        gbc.writeMem(0xda6f, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x8263, gbc.sp());
        EXPECT(0xda71, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda6f));
        EXPECT(0xc1, gbc.readMem(0xda70));
        // CB C1 03C3
        gbc.setState(0xcee7, 0xd5a7, 0xb400, 0xf423, 0x213c, 0xfe5d, 0x0, 0x1);
        gbc.writeMem(0xcee7, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xd5a7, gbc.sp());
        EXPECT(0xcee9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcee7));
        EXPECT(0xc1, gbc.readMem(0xcee8));
        // CB C1 03C4
        gbc.setState(0x6288, 0x2456, 0x8310, 0x84e, 0x20de, 0x2b46, 0x1, 0x1);
        gbc.writeMem(0x6288, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x2456, gbc.sp());
        EXPECT(0x628a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C1 03C5
        gbc.setState(0xa612, 0x8052, 0x24d0, 0xb2f2, 0xe343, 0x20a, 0x0, 0x0);
        gbc.writeMem(0xa612, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x8052, gbc.sp());
        EXPECT(0xa614, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa612));
        EXPECT(0xc1, gbc.readMem(0xa613));
        // CB C1 03C7
        gbc.setState(0xc722, 0x6ecf, 0xac60, 0x34b, 0xe68a, 0x5d0, 0x1, 0x1);
        gbc.writeMem(0xc722, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x6ecf, gbc.sp());
        EXPECT(0xc724, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc722));
        EXPECT(0xc1, gbc.readMem(0xc723));
        // CB C1 03C8
        gbc.setState(0xe140, 0xfc60, 0x81e0, 0x4f3a, 0xdfa6, 0x7f2, 0x1, 0x1);
        gbc.writeMem(0xe140, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xfc60, gbc.sp());
        EXPECT(0xe142, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe140));
        EXPECT(0xc1, gbc.readMem(0xe141));
        // CB C1 03C9
        gbc.setState(0x14ed, 0xdcbf, 0x9160, 0x874, 0xd7be, 0xa764, 0x1, 0x0);
        gbc.writeMem(0x14ed, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xdcbf, gbc.sp());
        EXPECT(0x14ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C1 03CA
        gbc.setState(0x9fb3, 0x57de, 0xf6d0, 0x76d2, 0xbbbd, 0xdd2, 0x1, 0x1);
        gbc.writeMem(0x9fb3, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x57de, gbc.sp());
        EXPECT(0x9fb5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9fb3));
        EXPECT(0xc1, gbc.readMem(0x9fb4));
        // CB C1 03CB
        gbc.setState(0x9d72, 0xc356, 0xab10, 0x14d7, 0xff91, 0xd58e, 0x1, 0x0);
        gbc.writeMem(0x9d72, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xc356, gbc.sp());
        EXPECT(0x9d74, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d72));
        EXPECT(0xc1, gbc.readMem(0x9d73));
        // CB C1 03CC
        gbc.setState(0x7002, 0xb95b, 0xf2c0, 0x68c2, 0x59f0, 0xa40f, 0x1, 0x1);
        gbc.writeMem(0x7002, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xb95b, gbc.sp());
        EXPECT(0x7004, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C1 03CD
        gbc.setState(0x222a, 0x2f8, 0x2a0, 0xc846, 0xa014, 0xb21c, 0x0, 0x0);
        gbc.writeMem(0x222a, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x2f8, gbc.sp());
        EXPECT(0x222c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C1 03CE
        gbc.setState(0xd9d7, 0x6315, 0xc160, 0x21fc, 0xddb4, 0x29e2, 0x0, 0x1);
        gbc.writeMem(0xd9d7, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x6315, gbc.sp());
        EXPECT(0xd9d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd9d7));
        EXPECT(0xc1, gbc.readMem(0xd9d8));
        // CB C1 03CF
        gbc.setState(0x814a, 0xa3f2, 0xef20, 0x175d, 0xc8a6, 0xe235, 0x0, 0x0);
        gbc.writeMem(0x814a, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xa3f2, gbc.sp());
        EXPECT(0x814c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x814a));
        EXPECT(0xc1, gbc.readMem(0x814b));
        // CB C1 03D0
        gbc.setState(0x6b00, 0xa278, 0xe300, 0x6d4f, 0x6f67, 0xab5e, 0x0, 0x0);
        gbc.writeMem(0x6b00, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xa278, gbc.sp());
        EXPECT(0x6b02, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C1 03D1
        gbc.setState(0x6142, 0x669a, 0xc390, 0x2f61, 0x2a18, 0x9d8a, 0x0, 0x0);
        gbc.writeMem(0x6142, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x669a, gbc.sp());
        EXPECT(0x6144, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C1 03D2
        gbc.setState(0x46cd, 0xaccc, 0xb5f0, 0xa5f8, 0xdb58, 0x4204, 0x0, 0x0);
        gbc.writeMem(0x46cd, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xaccc, gbc.sp());
        EXPECT(0x46cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C1 03D3
        gbc.setState(0x49ba, 0x55eb, 0xe720, 0x98c4, 0x5451, 0x5023, 0x1, 0x0);
        gbc.writeMem(0x49ba, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x55eb, gbc.sp());
        EXPECT(0x49bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C1 03D4
        gbc.setState(0x50ff, 0x6289, 0xa4a0, 0xaa2, 0xc446, 0x2019, 0x0, 0x0);
        gbc.writeMem(0x50ff, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x6289, gbc.sp());
        EXPECT(0x5101, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C1 03D5
        gbc.setState(0x5350, 0x3a7, 0x72c0, 0xd1ca, 0xf9fb, 0x295b, 0x1, 0x0);
        gbc.writeMem(0x5350, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x3a7, gbc.sp());
        EXPECT(0x5352, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C1 03D6
        gbc.setState(0x50f6, 0xb026, 0xb6f0, 0xd32f, 0x266b, 0x150d, 0x1, 0x0);
        gbc.writeMem(0x50f6, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xb026, gbc.sp());
        EXPECT(0x50f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C1 03D7
        gbc.setState(0x9afa, 0xaded, 0x7a30, 0x1dc0, 0x55ff, 0x50bc, 0x1, 0x0);
        gbc.writeMem(0x9afa, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xaded, gbc.sp());
        EXPECT(0x9afc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9afa));
        EXPECT(0xc1, gbc.readMem(0x9afb));
        // CB C1 03D8
        gbc.setState(0x647f, 0x18ec, 0xdd0, 0x7859, 0xe481, 0x6388, 0x0, 0x1);
        gbc.writeMem(0x647f, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x18ec, gbc.sp());
        EXPECT(0x6481, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C1 03DA
        gbc.setState(0xd362, 0x9de1, 0xb200, 0x6415, 0xa05c, 0x98c1, 0x0, 0x0);
        gbc.writeMem(0xd362, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x9de1, gbc.sp());
        EXPECT(0xd364, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd362));
        EXPECT(0xc1, gbc.readMem(0xd363));
        // CB C1 03DB
        gbc.setState(0x3c79, 0x367f, 0x1f50, 0x474, 0x2ea5, 0x952d, 0x0, 0x0);
        gbc.writeMem(0x3c79, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x367f, gbc.sp());
        EXPECT(0x3c7b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C1 03DC
        gbc.setState(0x709d, 0xd39, 0xe460, 0x7702, 0xf78d, 0x644b, 0x1, 0x1);
        gbc.writeMem(0x709d, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xd39, gbc.sp());
        EXPECT(0x709f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C1 03DD
        gbc.setState(0x35d7, 0xdebe, 0xe8c0, 0xde4b, 0x8f60, 0x2ffb, 0x0, 0x1);
        gbc.writeMem(0x35d7, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xdebe, gbc.sp());
        EXPECT(0x35d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C1 03DE
        gbc.setState(0x1b1c, 0xba0c, 0x2530, 0x3e78, 0x8abb, 0xdb2e, 0x0, 0x1);
        gbc.writeMem(0x1b1c, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xba0c, gbc.sp());
        EXPECT(0x1b1e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C1 03DF
        gbc.setState(0x8c91, 0x5ebf, 0x1380, 0xb430, 0x1993, 0xbefd, 0x1, 0x1);
        gbc.writeMem(0x8c91, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x5ebf, gbc.sp());
        EXPECT(0x8c93, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c91));
        EXPECT(0xc1, gbc.readMem(0x8c92));
        // CB C1 03E0
        gbc.setState(0xcaf0, 0x4b0e, 0x6fe0, 0xdc21, 0x70fd, 0xdc57, 0x0, 0x1);
        gbc.writeMem(0xcaf0, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x4b0e, gbc.sp());
        EXPECT(0xcaf2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcaf0));
        EXPECT(0xc1, gbc.readMem(0xcaf1));
        // CB C1 03E1
        gbc.setState(0x12cf, 0x4b87, 0x9110, 0xa7a1, 0xeb6f, 0x3f9a, 0x1, 0x1);
        gbc.writeMem(0x12cf, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x4b87, gbc.sp());
        EXPECT(0x12d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C1 03E2
        gbc.setState(0x8630, 0x84e3, 0xbe60, 0x88cc, 0xf2a8, 0xdc20, 0x1, 0x0);
        gbc.writeMem(0x8630, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x84e3, gbc.sp());
        EXPECT(0x8632, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8630));
        EXPECT(0xc1, gbc.readMem(0x8631));
        // CB C1 03E3
        gbc.setState(0x9178, 0x72e1, 0x7900, 0x9844, 0x1eb4, 0x959b, 0x0, 0x0);
        gbc.writeMem(0x9178, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x72e1, gbc.sp());
        EXPECT(0x917a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9178));
        EXPECT(0xc1, gbc.readMem(0x9179));
        // CB C1 03E4
        gbc.setState(0x9aa7, 0x98fc, 0x2db0, 0x6153, 0x75cb, 0x34c9, 0x0, 0x0);
        gbc.writeMem(0x9aa7, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x98fc, gbc.sp());
        EXPECT(0x9aa9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9aa7));
        EXPECT(0xc1, gbc.readMem(0x9aa8));
        // CB C1 03E5
        gbc.setState(0xceea, 0x3196, 0x1f40, 0x2cfe, 0x3f3c, 0xb213, 0x1, 0x1);
        gbc.writeMem(0xceea, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x3196, gbc.sp());
        EXPECT(0xceec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xceea));
        EXPECT(0xc1, gbc.readMem(0xceeb));
        // CB C1 03E6
        gbc.setState(0x75b5, 0xae66, 0x3730, 0xd71, 0xa443, 0xc640, 0x0, 0x1);
        gbc.writeMem(0x75b5, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xae66, gbc.sp());
        EXPECT(0x75b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C1 03E7
        gbc.setState(0x1521, 0xa0e1, 0x8710, 0x57ed, 0x2ddd, 0x5ff8, 0x0, 0x1);
        gbc.writeMem(0x1521, { 0xcb, 0xc1 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xa0e1, gbc.sp());
        EXPECT(0x1523, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
    }
