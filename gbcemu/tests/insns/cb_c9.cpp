#include "../gbctests_insns.h"
#if (defined GBCEMU_INSNS_TESTS_ALL) || (defined GBCEMU_INSNS_TESTS_cb_c9)
#include "../gbctests.h"

namespace rckid::gbcemu {

    TEST(gbcemu, opcode_cb_c9) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB C9 0000
        gbc.setState(0x10ef, 0x47e2, 0x7a60, 0x8208, 0xfe6e, 0x476f, 0x0, 0x1);
        gbc.writeMem(0x10ef, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x47e2);
        EXPECT(gbc.pc(), 0x10f1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C9 0001
        gbc.setState(0x567a, 0x61fb, 0x5f80, 0xe140, 0x2e3c, 0x15cf, 0x0, 0x0);
        gbc.writeMem(0x567a, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x61fb);
        EXPECT(gbc.pc(), 0x567c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C9 0002
        gbc.setState(0x2b5b, 0x2f93, 0x34f0, 0x4f28, 0xf3b9, 0x2a5a, 0x0, 0x0);
        gbc.writeMem(0x2b5b, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x2f93);
        EXPECT(gbc.pc(), 0x2b5d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C9 0003
        gbc.setState(0x2706, 0xc1a0, 0xb7d0, 0xa507, 0x7088, 0x8ee9, 0x0, 0x0);
        gbc.writeMem(0x2706, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0xc1a0);
        EXPECT(gbc.pc(), 0x2708);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C9 0004
        gbc.setState(0xa9cf, 0xb38a, 0x5420, 0x5fd9, 0x7977, 0xe559, 0x1, 0x1);
        gbc.writeMem(0xa9cf, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0xb38a);
        EXPECT(gbc.pc(), 0xa9d1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa9cf), 0xcb);
        EXPECT(gbc.readMem(0xa9d0), 0xc9);
        // CB C9 0005
        gbc.setState(0x909d, 0x180f, 0x9370, 0xca37, 0xf571, 0x803, 0x0, 0x0);
        gbc.writeMem(0x909d, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x180f);
        EXPECT(gbc.pc(), 0x909f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x909d), 0xcb);
        EXPECT(gbc.readMem(0x909e), 0xc9);
        // CB C9 0006
        gbc.setState(0x3973, 0x850f, 0xab10, 0x5110, 0x9e21, 0x57b1, 0x1, 0x0);
        gbc.writeMem(0x3973, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x850f);
        EXPECT(gbc.pc(), 0x3975);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C9 0007
        gbc.setState(0xd9dd, 0x26e1, 0x3d00, 0xf7fb, 0x3d4b, 0xb495, 0x0, 0x1);
        gbc.writeMem(0xd9dd, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x26e1);
        EXPECT(gbc.pc(), 0xd9df);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd9dd), 0xcb);
        EXPECT(gbc.readMem(0xd9de), 0xc9);
        // CB C9 0008
        gbc.setState(0xe47b, 0x7e57, 0xc330, 0x2216, 0xe375, 0xd334, 0x0, 0x0);
        gbc.writeMem(0xe47b, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x7e57);
        EXPECT(gbc.pc(), 0xe47d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe47b), 0xcb);
        EXPECT(gbc.readMem(0xe47c), 0xc9);
        // CB C9 0009
        gbc.setState(0xe4db, 0x13b, 0xb00, 0x8328, 0x61e2, 0x4fd4, 0x1, 0x1);
        gbc.writeMem(0xe4db, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x13b);
        EXPECT(gbc.pc(), 0xe4dd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe4db), 0xcb);
        EXPECT(gbc.readMem(0xe4dc), 0xc9);
        // CB C9 000A
        gbc.setState(0x9116, 0xe5e3, 0x6bc0, 0x7009, 0x7196, 0xe33f, 0x0, 0x1);
        gbc.writeMem(0x9116, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xe5e3);
        EXPECT(gbc.pc(), 0x9118);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9116), 0xcb);
        EXPECT(gbc.readMem(0x9117), 0xc9);
        // CB C9 000C
        gbc.setState(0x475f, 0x76eb, 0x3530, 0x6ae0, 0xc233, 0x8fac, 0x1, 0x1);
        gbc.writeMem(0x475f, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x76eb);
        EXPECT(gbc.pc(), 0x4761);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C9 000D
        gbc.setState(0x781, 0x3997, 0x8c70, 0x62a2, 0x2e22, 0x4e7f, 0x1, 0x1);
        gbc.writeMem(0x781, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x3997);
        EXPECT(gbc.pc(), 0x783);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C9 000E
        gbc.setState(0x7047, 0xeb62, 0x530, 0xb128, 0x34fd, 0x4308, 0x0, 0x0);
        gbc.writeMem(0x7047, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0xeb62);
        EXPECT(gbc.pc(), 0x7049);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C9 000F
        gbc.setState(0x419d, 0xec59, 0x1800, 0xbece, 0x4ec3, 0x484a, 0x0, 0x0);
        gbc.writeMem(0x419d, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xec59);
        EXPECT(gbc.pc(), 0x419f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C9 0010
        gbc.setState(0x9f91, 0x2b4b, 0x1430, 0x1291, 0x179, 0xf3f1, 0x0, 0x1);
        gbc.writeMem(0x9f91, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x2b4b);
        EXPECT(gbc.pc(), 0x9f93);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9f91), 0xcb);
        EXPECT(gbc.readMem(0x9f92), 0xc9);
        // CB C9 0011
        gbc.setState(0x53e2, 0xc818, 0x79c0, 0xdcbd, 0x1669, 0xa9f1, 0x0, 0x1);
        gbc.writeMem(0x53e2, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0xc818);
        EXPECT(gbc.pc(), 0x53e4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C9 0012
        gbc.setState(0xef94, 0xd647, 0x39d0, 0x2d7, 0xa819, 0xd6fc, 0x0, 0x1);
        gbc.writeMem(0xef94, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0xd647);
        EXPECT(gbc.pc(), 0xef96);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xef94), 0xcb);
        EXPECT(gbc.readMem(0xef95), 0xc9);
        // CB C9 0013
        gbc.setState(0xd3b1, 0x5bfe, 0xda50, 0x4eb3, 0x9bb0, 0xedcf, 0x1, 0x0);
        gbc.writeMem(0xd3b1, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x5bfe);
        EXPECT(gbc.pc(), 0xd3b3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd3b1), 0xcb);
        EXPECT(gbc.readMem(0xd3b2), 0xc9);
        // CB C9 0014
        gbc.setState(0xd683, 0x743c, 0xb110, 0x3c65, 0x29a3, 0xfbb0, 0x1, 0x0);
        gbc.writeMem(0xd683, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x743c);
        EXPECT(gbc.pc(), 0xd685);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd683), 0xcb);
        EXPECT(gbc.readMem(0xd684), 0xc9);
        // CB C9 0015
        gbc.setState(0x9741, 0x9c48, 0xcf20, 0x8d12, 0x7a09, 0xbf40, 0x0, 0x0);
        gbc.writeMem(0x9741, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x9c48);
        EXPECT(gbc.pc(), 0x9743);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9741), 0xcb);
        EXPECT(gbc.readMem(0x9742), 0xc9);
        // CB C9 0016
        gbc.setState(0x1f68, 0x205f, 0xa3e0, 0xfe83, 0x5376, 0xa0af, 0x0, 0x1);
        gbc.writeMem(0x1f68, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x205f);
        EXPECT(gbc.pc(), 0x1f6a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C9 0017
        gbc.setState(0xd54, 0xe187, 0x72a0, 0x8aad, 0x57ca, 0x9e32, 0x0, 0x1);
        gbc.writeMem(0xd54, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xe187);
        EXPECT(gbc.pc(), 0xd56);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C9 0018
        gbc.setState(0x4e03, 0xd8c6, 0xdf20, 0x8e2, 0x578c, 0x4c87, 0x1, 0x1);
        gbc.writeMem(0x4e03, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xd8c6);
        EXPECT(gbc.pc(), 0x4e05);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C9 0019
        gbc.setState(0x13b0, 0xfb5a, 0xf5f0, 0xa7c5, 0xbb7, 0x7fdd, 0x0, 0x1);
        gbc.writeMem(0x13b0, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0xfb5a);
        EXPECT(gbc.pc(), 0x13b2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C9 001A
        gbc.setState(0xda3, 0x1e6d, 0xe8d0, 0x8d9f, 0xd367, 0xbdca, 0x1, 0x1);
        gbc.writeMem(0xda3, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x1e6d);
        EXPECT(gbc.pc(), 0xda5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C9 001B
        gbc.setState(0x98d4, 0x47c8, 0x4920, 0xd5fb, 0x834b, 0x11b7, 0x1, 0x0);
        gbc.writeMem(0x98d4, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x47c8);
        EXPECT(gbc.pc(), 0x98d6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x98d4), 0xcb);
        EXPECT(gbc.readMem(0x98d5), 0xc9);
        // CB C9 001C
        gbc.setState(0x1604, 0x90b4, 0xcdb0, 0x6e7d, 0x261d, 0x910b, 0x1, 0x0);
        gbc.writeMem(0x1604, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x90b4);
        EXPECT(gbc.pc(), 0x1606);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C9 001D
        gbc.setState(0x44dd, 0x54ef, 0x16b0, 0xe28, 0xd601, 0xe971, 0x0, 0x1);
        gbc.writeMem(0x44dd, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x54ef);
        EXPECT(gbc.pc(), 0x44df);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C9 001E
        gbc.setState(0xeb74, 0x28fe, 0x45a0, 0xfdce, 0x6731, 0x9520, 0x1, 0x1);
        gbc.writeMem(0xeb74, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x28fe);
        EXPECT(gbc.pc(), 0xeb76);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeb74), 0xcb);
        EXPECT(gbc.readMem(0xeb75), 0xc9);
        // CB C9 001F
        gbc.setState(0x50da, 0x89a4, 0x8250, 0x15b1, 0x3338, 0x7278, 0x0, 0x0);
        gbc.writeMem(0x50da, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x89a4);
        EXPECT(gbc.pc(), 0x50dc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C9 0021
        gbc.setState(0x4751, 0x35de, 0x8fb0, 0x606c, 0x7b92, 0x2379, 0x0, 0x1);
        gbc.writeMem(0x4751, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x35de);
        EXPECT(gbc.pc(), 0x4753);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C9 0022
        gbc.setState(0x1dc5, 0x4c6, 0xfa60, 0xf880, 0x5587, 0x8b2e, 0x1, 0x0);
        gbc.writeMem(0x1dc5, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x4c6);
        EXPECT(gbc.pc(), 0x1dc7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C9 0023
        gbc.setState(0xc794, 0xa19f, 0xbe70, 0xfa5f, 0x961b, 0xe7ab, 0x1, 0x0);
        gbc.writeMem(0xc794, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xa19f);
        EXPECT(gbc.pc(), 0xc796);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc794), 0xcb);
        EXPECT(gbc.readMem(0xc795), 0xc9);
        // CB C9 0024
        gbc.setState(0x9b78, 0x623a, 0x540, 0xf10c, 0x6702, 0x1714, 0x0, 0x1);
        gbc.writeMem(0x9b78, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x623a);
        EXPECT(gbc.pc(), 0x9b7a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9b78), 0xcb);
        EXPECT(gbc.readMem(0x9b79), 0xc9);
        // CB C9 0025
        gbc.setState(0xbf4f, 0xd85a, 0x58c0, 0x9686, 0x698f, 0x8ae2, 0x0, 0x0);
        gbc.writeMem(0xbf4f, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0xd85a);
        EXPECT(gbc.pc(), 0xbf51);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbf4f), 0xcb);
        EXPECT(gbc.readMem(0xbf50), 0xc9);
        // CB C9 0026
        gbc.setState(0x700, 0xd429, 0x9db0, 0x6a8d, 0x1da8, 0xce02, 0x1, 0x1);
        gbc.writeMem(0x700, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xd429);
        EXPECT(gbc.pc(), 0x702);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C9 0027
        gbc.setState(0xb7f0, 0x2ba8, 0x8250, 0x4808, 0x3bf4, 0xa805, 0x1, 0x0);
        gbc.writeMem(0xb7f0, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x2ba8);
        EXPECT(gbc.pc(), 0xb7f2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb7f0), 0xcb);
        EXPECT(gbc.readMem(0xb7f1), 0xc9);
        // CB C9 0028
        gbc.setState(0x6db4, 0x244b, 0x7740, 0x1fc0, 0x33c9, 0xc8a2, 0x1, 0x0);
        gbc.writeMem(0x6db4, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x244b);
        EXPECT(gbc.pc(), 0x6db6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C9 0029
        gbc.setState(0x11c5, 0x6602, 0xa290, 0x6acf, 0x63ec, 0x8ee3, 0x0, 0x1);
        gbc.writeMem(0x11c5, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x6602);
        EXPECT(gbc.pc(), 0x11c7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C9 002A
        gbc.setState(0x1c4, 0xd384, 0x80f0, 0x2a36, 0xd37b, 0x5347, 0x0, 0x0);
        gbc.writeMem(0x1c4, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0xd384);
        EXPECT(gbc.pc(), 0x1c6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C9 002B
        gbc.setState(0x2a3e, 0x3316, 0xac10, 0xd5d, 0x4a9d, 0xb1cb, 0x0, 0x1);
        gbc.writeMem(0x2a3e, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x3316);
        EXPECT(gbc.pc(), 0x2a40);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C9 002C
        gbc.setState(0x25ea, 0x1c6e, 0xd650, 0xb24e, 0xfbd9, 0xb3ca, 0x0, 0x1);
        gbc.writeMem(0x25ea, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x1c6e);
        EXPECT(gbc.pc(), 0x25ec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C9 002D
        gbc.setState(0x57f9, 0xa26, 0x3f20, 0xba0a, 0x9f2e, 0xff28, 0x1, 0x1);
        gbc.writeMem(0x57f9, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xa26);
        EXPECT(gbc.pc(), 0x57fb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C9 002E
        gbc.setState(0x8d17, 0xe746, 0xfa80, 0x516e, 0x3df5, 0x302a, 0x0, 0x1);
        gbc.writeMem(0x8d17, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xe746);
        EXPECT(gbc.pc(), 0x8d19);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d17), 0xcb);
        EXPECT(gbc.readMem(0x8d18), 0xc9);
        // CB C9 002F
        gbc.setState(0x1f21, 0x59c, 0x79d0, 0x9f14, 0xdf9d, 0xc133, 0x0, 0x1);
        gbc.writeMem(0x1f21, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x59c);
        EXPECT(gbc.pc(), 0x1f23);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C9 0030
        gbc.setState(0xec4c, 0xdbff, 0xaca0, 0xaf3c, 0xa76e, 0x4f81, 0x1, 0x0);
        gbc.writeMem(0xec4c, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0xdbff);
        EXPECT(gbc.pc(), 0xec4e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xec4c), 0xcb);
        EXPECT(gbc.readMem(0xec4d), 0xc9);
        // CB C9 0031
        gbc.setState(0xa812, 0x3f6d, 0xf770, 0x7fe1, 0xeea3, 0xc591, 0x0, 0x0);
        gbc.writeMem(0xa812, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x3f6d);
        EXPECT(gbc.pc(), 0xa814);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa812), 0xcb);
        EXPECT(gbc.readMem(0xa813), 0xc9);
        // CB C9 0032
        gbc.setState(0x2c1a, 0x54f5, 0x5cc0, 0xd6f, 0x9fbd, 0x4124, 0x1, 0x1);
        gbc.writeMem(0x2c1a, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x54f5);
        EXPECT(gbc.pc(), 0x2c1c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C9 0033
        gbc.setState(0x4856, 0x1c98, 0x72e0, 0x2170, 0x84b6, 0x4020, 0x1, 0x1);
        gbc.writeMem(0x4856, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x1c98);
        EXPECT(gbc.pc(), 0x4858);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C9 0034
        gbc.setState(0xa6a2, 0x5064, 0xb870, 0xc27f, 0xb53b, 0xf4ec, 0x1, 0x1);
        gbc.writeMem(0xa6a2, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x5064);
        EXPECT(gbc.pc(), 0xa6a4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa6a2), 0xcb);
        EXPECT(gbc.readMem(0xa6a3), 0xc9);
        // CB C9 0035
        gbc.setState(0xb6b2, 0x3fdc, 0x94f0, 0x75a, 0x500d, 0xe13a, 0x0, 0x1);
        gbc.writeMem(0xb6b2, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x3fdc);
        EXPECT(gbc.pc(), 0xb6b4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb6b2), 0xcb);
        EXPECT(gbc.readMem(0xb6b3), 0xc9);
        // CB C9 0036
        gbc.setState(0x32e9, 0x9f8a, 0xfff0, 0xbcc, 0xc34c, 0x6ae5, 0x1, 0x0);
        gbc.writeMem(0x32e9, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x9f8a);
        EXPECT(gbc.pc(), 0x32eb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C9 0038
        gbc.setState(0xc0de, 0xfef6, 0xdb40, 0xf4ca, 0xbf50, 0xc4a9, 0x0, 0x0);
        gbc.writeMem(0xc0de, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0xfef6);
        EXPECT(gbc.pc(), 0xc0e0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc0de), 0xcb);
        EXPECT(gbc.readMem(0xc0df), 0xc9);
        // CB C9 0039
        gbc.setState(0xab2b, 0xf928, 0xc5d0, 0x464f, 0xff91, 0x350a, 0x0, 0x0);
        gbc.writeMem(0xab2b, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0xf928);
        EXPECT(gbc.pc(), 0xab2d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xab2b), 0xcb);
        EXPECT(gbc.readMem(0xab2c), 0xc9);
        // CB C9 003A
        gbc.setState(0x98bc, 0x579d, 0xe210, 0xfb03, 0x1363, 0x46b9, 0x1, 0x0);
        gbc.writeMem(0x98bc, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x579d);
        EXPECT(gbc.pc(), 0x98be);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x98bc), 0xcb);
        EXPECT(gbc.readMem(0x98bd), 0xc9);
        // CB C9 003B
        gbc.setState(0x9892, 0xaeb4, 0x2620, 0x5794, 0xd746, 0xd2c8, 0x0, 0x0);
        gbc.writeMem(0x9892, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0xaeb4);
        EXPECT(gbc.pc(), 0x9894);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9892), 0xcb);
        EXPECT(gbc.readMem(0x9893), 0xc9);
        // CB C9 003C
        gbc.setState(0x3eeb, 0xabfb, 0xb4a0, 0x75d8, 0x72f5, 0x8623, 0x0, 0x0);
        gbc.writeMem(0x3eeb, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0xabfb);
        EXPECT(gbc.pc(), 0x3eed);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C9 003D
        gbc.setState(0x10ae, 0xa6e, 0x670, 0xeae9, 0x5562, 0xe9c2, 0x0, 0x1);
        gbc.writeMem(0x10ae, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0xa6e);
        EXPECT(gbc.pc(), 0x10b0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C9 003E
        gbc.setState(0xe9eb, 0x399c, 0x4ed0, 0x2062, 0x44df, 0xe3e6, 0x1, 0x0);
        gbc.writeMem(0xe9eb, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x399c);
        EXPECT(gbc.pc(), 0xe9ed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe9eb), 0xcb);
        EXPECT(gbc.readMem(0xe9ec), 0xc9);
        // CB C9 003F
        gbc.setState(0xd25d, 0x627d, 0xc1d0, 0xebc8, 0x3c2f, 0x2e1, 0x0, 0x0);
        gbc.writeMem(0xd25d, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x627d);
        EXPECT(gbc.pc(), 0xd25f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd25d), 0xcb);
        EXPECT(gbc.readMem(0xd25e), 0xc9);
        // CB C9 0040
        gbc.setState(0x2f0e, 0x3960, 0x4b60, 0xb455, 0xd0cb, 0x5143, 0x1, 0x1);
        gbc.writeMem(0x2f0e, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x3960);
        EXPECT(gbc.pc(), 0x2f10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C9 0041
        gbc.setState(0x2141, 0x9804, 0xc3a0, 0x2f91, 0xd7ce, 0x92a4, 0x1, 0x0);
        gbc.writeMem(0x2141, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x9804);
        EXPECT(gbc.pc(), 0x2143);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C9 0042
        gbc.setState(0x7d8a, 0xe1a8, 0x4620, 0x719c, 0x7048, 0x3a06, 0x0, 0x0);
        gbc.writeMem(0x7d8a, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0xe1a8);
        EXPECT(gbc.pc(), 0x7d8c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C9 0044
        gbc.setState(0x2a54, 0x91f2, 0xd810, 0x3aa3, 0xa0, 0x3daa, 0x0, 0x1);
        gbc.writeMem(0x2a54, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x91f2);
        EXPECT(gbc.pc(), 0x2a56);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C9 0045
        gbc.setState(0x7479, 0xe9d, 0x6010, 0x631b, 0x4861, 0x414b, 0x0, 0x1);
        gbc.writeMem(0x7479, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0xe9d);
        EXPECT(gbc.pc(), 0x747b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C9 0046
        gbc.setState(0xefeb, 0x3539, 0xe90, 0x2d93, 0xfdf5, 0xddb0, 0x0, 0x0);
        gbc.writeMem(0xefeb, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x3539);
        EXPECT(gbc.pc(), 0xefed);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xefeb), 0xcb);
        EXPECT(gbc.readMem(0xefec), 0xc9);
        // CB C9 0047
        gbc.setState(0xe322, 0x24f9, 0x2280, 0x1c19, 0x9caa, 0x3ac6, 0x1, 0x0);
        gbc.writeMem(0xe322, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x24f9);
        EXPECT(gbc.pc(), 0xe324);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe322), 0xcb);
        EXPECT(gbc.readMem(0xe323), 0xc9);
        // CB C9 0048
        gbc.setState(0x8ebe, 0x7cce, 0x5100, 0xb945, 0x7d0c, 0x3f32, 0x1, 0x1);
        gbc.writeMem(0x8ebe, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x7cce);
        EXPECT(gbc.pc(), 0x8ec0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ebe), 0xcb);
        EXPECT(gbc.readMem(0x8ebf), 0xc9);
        // CB C9 0049
        gbc.setState(0x478b, 0xd636, 0xefc0, 0x49f4, 0x8627, 0xa20c, 0x0, 0x1);
        gbc.writeMem(0x478b, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xd636);
        EXPECT(gbc.pc(), 0x478d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C9 004A
        gbc.setState(0x7f19, 0x60a3, 0x50f0, 0x774c, 0x1b90, 0x7108, 0x1, 0x1);
        gbc.writeMem(0x7f19, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x60a3);
        EXPECT(gbc.pc(), 0x7f1b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C9 004B
        gbc.setState(0xe96a, 0xc543, 0x6d80, 0xd1c7, 0x9bac, 0xc0f6, 0x1, 0x0);
        gbc.writeMem(0xe96a, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0xc543);
        EXPECT(gbc.pc(), 0xe96c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe96a), 0xcb);
        EXPECT(gbc.readMem(0xe96b), 0xc9);
        // CB C9 004C
        gbc.setState(0x7060, 0xcc53, 0xea20, 0x6bcf, 0xf7ac, 0xb2a6, 0x0, 0x1);
        gbc.writeMem(0x7060, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0xcc53);
        EXPECT(gbc.pc(), 0x7062);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C9 004D
        gbc.setState(0x7766, 0x11cb, 0xb680, 0x1216, 0x91fb, 0xd8b2, 0x1, 0x0);
        gbc.writeMem(0x7766, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x11cb);
        EXPECT(gbc.pc(), 0x7768);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C9 004E
        gbc.setState(0x941e, 0xcd27, 0xfb40, 0xe0d6, 0x7eb2, 0x6db8, 0x1, 0x1);
        gbc.writeMem(0x941e, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0xcd27);
        EXPECT(gbc.pc(), 0x9420);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x941e), 0xcb);
        EXPECT(gbc.readMem(0x941f), 0xc9);
        // CB C9 004F
        gbc.setState(0xdaef, 0xbefb, 0x17a0, 0xb024, 0xf188, 0xc0dd, 0x1, 0x1);
        gbc.writeMem(0xdaef, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0xbefb);
        EXPECT(gbc.pc(), 0xdaf1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdaef), 0xcb);
        EXPECT(gbc.readMem(0xdaf0), 0xc9);
        // CB C9 0050
        gbc.setState(0x2f73, 0x37db, 0x3b0, 0x4ad7, 0xd5ad, 0x522, 0x1, 0x1);
        gbc.writeMem(0x2f73, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x37db);
        EXPECT(gbc.pc(), 0x2f75);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C9 0051
        gbc.setState(0x8a3d, 0xe61e, 0xae50, 0xea25, 0xdb4e, 0xbe7c, 0x0, 0x0);
        gbc.writeMem(0x8a3d, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xe61e);
        EXPECT(gbc.pc(), 0x8a3f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8a3d), 0xcb);
        EXPECT(gbc.readMem(0x8a3e), 0xc9);
        // CB C9 0052
        gbc.setState(0x610b, 0x750, 0xf950, 0x9040, 0xf29d, 0x66eb, 0x0, 0x0);
        gbc.writeMem(0x610b, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x750);
        EXPECT(gbc.pc(), 0x610d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C9 0053
        gbc.setState(0xe122, 0xd8da, 0x3cf0, 0x93b0, 0xfe07, 0xbc21, 0x1, 0x1);
        gbc.writeMem(0xe122, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0xd8da);
        EXPECT(gbc.pc(), 0xe124);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe122), 0xcb);
        EXPECT(gbc.readMem(0xe123), 0xc9);
        // CB C9 0054
        gbc.setState(0xbd4a, 0x2605, 0xab40, 0x2201, 0x4385, 0x7d6d, 0x0, 0x0);
        gbc.writeMem(0xbd4a, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x2605);
        EXPECT(gbc.pc(), 0xbd4c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbd4a), 0xcb);
        EXPECT(gbc.readMem(0xbd4b), 0xc9);
        // CB C9 0055
        gbc.setState(0x594d, 0x355f, 0xd9f0, 0xf921, 0x3b8, 0x2d31, 0x1, 0x0);
        gbc.writeMem(0x594d, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x355f);
        EXPECT(gbc.pc(), 0x594f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C9 0056
        gbc.setState(0x9ecf, 0x13ad, 0x8b40, 0xe226, 0x9b18, 0xaeb8, 0x1, 0x0);
        gbc.writeMem(0x9ecf, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x13ad);
        EXPECT(gbc.pc(), 0x9ed1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9ecf), 0xcb);
        EXPECT(gbc.readMem(0x9ed0), 0xc9);
        // CB C9 0057
        gbc.setState(0x5e2, 0x9551, 0xf0e0, 0xdd88, 0x4fe4, 0x4d6f, 0x0, 0x1);
        gbc.writeMem(0x5e2, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x9551);
        EXPECT(gbc.pc(), 0x5e4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C9 0058
        gbc.setState(0xe155, 0x3e5, 0x650, 0x2e36, 0xeee, 0x1daa, 0x1, 0x0);
        gbc.writeMem(0xe155, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x3e5);
        EXPECT(gbc.pc(), 0xe157);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe155), 0xcb);
        EXPECT(gbc.readMem(0xe156), 0xc9);
        // CB C9 0059
        gbc.setState(0x80d0, 0xeb6a, 0xd8b0, 0x449, 0xe778, 0x807e, 0x1, 0x1);
        gbc.writeMem(0x80d0, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0xeb6a);
        EXPECT(gbc.pc(), 0x80d2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x80d0), 0xcb);
        EXPECT(gbc.readMem(0x80d1), 0xc9);
        // CB C9 005A
        gbc.setState(0xcb8a, 0x3f81, 0x7290, 0x4db2, 0xc8ce, 0xecfe, 0x1, 0x1);
        gbc.writeMem(0xcb8a, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x3f81);
        EXPECT(gbc.pc(), 0xcb8c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcb8a), 0xcb);
        EXPECT(gbc.readMem(0xcb8b), 0xc9);
        // CB C9 005B
        gbc.setState(0xe6c8, 0xe81e, 0xbf50, 0xbba4, 0x85ef, 0x9d09, 0x1, 0x1);
        gbc.writeMem(0xe6c8, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0xe81e);
        EXPECT(gbc.pc(), 0xe6ca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe6c8), 0xcb);
        EXPECT(gbc.readMem(0xe6c9), 0xc9);
        // CB C9 005C
        gbc.setState(0x324, 0xc22b, 0x3180, 0x460b, 0x14ed, 0xc48c, 0x1, 0x1);
        gbc.writeMem(0x324, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0xc22b);
        EXPECT(gbc.pc(), 0x326);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C9 005D
        gbc.setState(0x4599, 0x3105, 0x1fb0, 0xd9b0, 0xb03e, 0x37b2, 0x1, 0x1);
        gbc.writeMem(0x4599, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x3105);
        EXPECT(gbc.pc(), 0x459b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C9 005E
        gbc.setState(0x886c, 0xfc90, 0xa250, 0xa7c8, 0x2bc2, 0x63ff, 0x0, 0x1);
        gbc.writeMem(0x886c, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0xfc90);
        EXPECT(gbc.pc(), 0x886e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x886c), 0xcb);
        EXPECT(gbc.readMem(0x886d), 0xc9);
        // CB C9 005F
        gbc.setState(0x6544, 0x2113, 0xa630, 0xb5da, 0xc09d, 0xfbda, 0x0, 0x1);
        gbc.writeMem(0x6544, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x2113);
        EXPECT(gbc.pc(), 0x6546);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C9 0060
        gbc.setState(0xee32, 0x8f0d, 0x78a0, 0xb86f, 0xe866, 0x56e0, 0x1, 0x1);
        gbc.writeMem(0xee32, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x8f0d);
        EXPECT(gbc.pc(), 0xee34);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xee32), 0xcb);
        EXPECT(gbc.readMem(0xee33), 0xc9);
        // CB C9 0061
        gbc.setState(0x7fa1, 0xc244, 0x2c10, 0x873b, 0xe6, 0xa90e, 0x1, 0x1);
        gbc.writeMem(0x7fa1, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0xc244);
        EXPECT(gbc.pc(), 0x7fa3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C9 0062
        gbc.setState(0xcdd8, 0xeec3, 0xef60, 0xb2d7, 0xd4fa, 0xcd31, 0x0, 0x0);
        gbc.writeMem(0xcdd8, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xeec3);
        EXPECT(gbc.pc(), 0xcdda);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcdd8), 0xcb);
        EXPECT(gbc.readMem(0xcdd9), 0xc9);
        // CB C9 0063
        gbc.setState(0xa3c2, 0x70d2, 0x26a0, 0x9703, 0x8664, 0xd9ad, 0x0, 0x1);
        gbc.writeMem(0xa3c2, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x70d2);
        EXPECT(gbc.pc(), 0xa3c4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa3c2), 0xcb);
        EXPECT(gbc.readMem(0xa3c3), 0xc9);
        // CB C9 0064
        gbc.setState(0x3905, 0xb50a, 0x6670, 0x807d, 0xbf72, 0xc9cc, 0x0, 0x1);
        gbc.writeMem(0x3905, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0xb50a);
        EXPECT(gbc.pc(), 0x3907);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C9 0065
        gbc.setState(0xba9, 0x6b62, 0x1c70, 0x4a7b, 0x18c5, 0xfa73, 0x0, 0x1);
        gbc.writeMem(0xba9, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x6b62);
        EXPECT(gbc.pc(), 0xbab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C9 0066
        gbc.setState(0x6bc2, 0xb34e, 0xd670, 0x1702, 0x8712, 0x357b, 0x0, 0x1);
        gbc.writeMem(0x6bc2, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0xb34e);
        EXPECT(gbc.pc(), 0x6bc4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C9 0067
        gbc.setState(0x163a, 0x9d9f, 0x3c90, 0xb76c, 0xed63, 0x7a21, 0x1, 0x1);
        gbc.writeMem(0x163a, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x9d9f);
        EXPECT(gbc.pc(), 0x163c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C9 0068
        gbc.setState(0x5a7f, 0xe5d7, 0x4060, 0xf3ae, 0x7e5d, 0x28fb, 0x1, 0x1);
        gbc.writeMem(0x5a7f, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0xe5d7);
        EXPECT(gbc.pc(), 0x5a81);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C9 0069
        gbc.setState(0x19a, 0x120d, 0xc800, 0x82e2, 0xd2b2, 0x7082, 0x1, 0x0);
        gbc.writeMem(0x19a, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x120d);
        EXPECT(gbc.pc(), 0x19c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C9 006A
        gbc.setState(0x3553, 0xd152, 0x3ef0, 0x5b67, 0x5adb, 0x9fcb, 0x1, 0x0);
        gbc.writeMem(0x3553, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0xd152);
        EXPECT(gbc.pc(), 0x3555);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C9 006B
        gbc.setState(0x587d, 0xe9d6, 0x9c60, 0xc4c7, 0xcdf1, 0xe270, 0x1, 0x1);
        gbc.writeMem(0x587d, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0xe9d6);
        EXPECT(gbc.pc(), 0x587f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C9 006C
        gbc.setState(0xe09c, 0x5771, 0xb3f0, 0x8bf, 0xb4c, 0xe250, 0x1, 0x1);
        gbc.writeMem(0xe09c, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x5771);
        EXPECT(gbc.pc(), 0xe09e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe09c), 0xcb);
        EXPECT(gbc.readMem(0xe09d), 0xc9);
        // CB C9 006D
        gbc.setState(0x9157, 0x5efa, 0xdc60, 0xade5, 0xfc7d, 0x3ee4, 0x1, 0x0);
        gbc.writeMem(0x9157, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x5efa);
        EXPECT(gbc.pc(), 0x9159);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9157), 0xcb);
        EXPECT(gbc.readMem(0x9158), 0xc9);
        // CB C9 006E
        gbc.setState(0x892a, 0xe0ea, 0x310, 0x6f2a, 0x6ac1, 0xb464, 0x1, 0x1);
        gbc.writeMem(0x892a, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0xe0ea);
        EXPECT(gbc.pc(), 0x892c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x892a), 0xcb);
        EXPECT(gbc.readMem(0x892b), 0xc9);
        // CB C9 006F
        gbc.setState(0x9263, 0x4c43, 0xa480, 0xd7cb, 0x5a75, 0xe0ac, 0x0, 0x1);
        gbc.writeMem(0x9263, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x4c43);
        EXPECT(gbc.pc(), 0x9265);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9263), 0xcb);
        EXPECT(gbc.readMem(0x9264), 0xc9);
        // CB C9 0070
        gbc.setState(0x73bb, 0xa734, 0xb0c0, 0x4471, 0xae39, 0x9de0, 0x0, 0x0);
        gbc.writeMem(0x73bb, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0xa734);
        EXPECT(gbc.pc(), 0x73bd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C9 0071
        gbc.setState(0x3116, 0x5f08, 0x7390, 0xae78, 0x1c97, 0xddb5, 0x1, 0x1);
        gbc.writeMem(0x3116, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x5f08);
        EXPECT(gbc.pc(), 0x3118);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C9 0072
        gbc.setState(0x34d5, 0xb943, 0x4140, 0xdc09, 0xbdd4, 0xd9cf, 0x1, 0x0);
        gbc.writeMem(0x34d5, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0xb943);
        EXPECT(gbc.pc(), 0x34d7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C9 0074
        gbc.setState(0xefb7, 0x22f, 0x3710, 0xc2af, 0x211f, 0xbb68, 0x1, 0x1);
        gbc.writeMem(0xefb7, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x22f);
        EXPECT(gbc.pc(), 0xefb9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xefb7), 0xcb);
        EXPECT(gbc.readMem(0xefb8), 0xc9);
        // CB C9 0075
        gbc.setState(0x9861, 0xb272, 0xe5c0, 0x9062, 0x44e, 0xe3d7, 0x1, 0x1);
        gbc.writeMem(0x9861, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0xb272);
        EXPECT(gbc.pc(), 0x9863);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9861), 0xcb);
        EXPECT(gbc.readMem(0x9862), 0xc9);
        // CB C9 0076
        gbc.setState(0x3807, 0xb656, 0xfe0, 0xa30f, 0x8489, 0x6fc9, 0x0, 0x1);
        gbc.writeMem(0x3807, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0xb656);
        EXPECT(gbc.pc(), 0x3809);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C9 0077
        gbc.setState(0xd3fc, 0x4696, 0x7500, 0xa64d, 0xc167, 0x782c, 0x0, 0x0);
        gbc.writeMem(0xd3fc, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x4696);
        EXPECT(gbc.pc(), 0xd3fe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd3fc), 0xcb);
        EXPECT(gbc.readMem(0xd3fd), 0xc9);
        // CB C9 0078
        gbc.setState(0xe9c4, 0x5d95, 0xb350, 0x4707, 0x84d1, 0xbad3, 0x1, 0x0);
        gbc.writeMem(0xe9c4, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x5d95);
        EXPECT(gbc.pc(), 0xe9c6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe9c4), 0xcb);
        EXPECT(gbc.readMem(0xe9c5), 0xc9);
        // CB C9 0079
        gbc.setState(0x706e, 0x9ffb, 0xf780, 0x7634, 0x7f7a, 0x7bae, 0x0, 0x1);
        gbc.writeMem(0x706e, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x9ffb);
        EXPECT(gbc.pc(), 0x7070);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C9 007A
        gbc.setState(0xdd47, 0xfaf8, 0x8de0, 0x1a9, 0x3fa9, 0xaa00, 0x1, 0x1);
        gbc.writeMem(0xdd47, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0xfaf8);
        EXPECT(gbc.pc(), 0xdd49);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdd47), 0xcb);
        EXPECT(gbc.readMem(0xdd48), 0xc9);
        // CB C9 007B
        gbc.setState(0xd471, 0x99d6, 0x9670, 0x3816, 0xe660, 0x6fe9, 0x1, 0x1);
        gbc.writeMem(0xd471, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x99d6);
        EXPECT(gbc.pc(), 0xd473);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd471), 0xcb);
        EXPECT(gbc.readMem(0xd472), 0xc9);
        // CB C9 007C
        gbc.setState(0x4e91, 0xd808, 0xbac0, 0xb3b9, 0x2d73, 0x3103, 0x0, 0x0);
        gbc.writeMem(0x4e91, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0xd808);
        EXPECT(gbc.pc(), 0x4e93);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C9 007D
        gbc.setState(0xc22f, 0x3404, 0xde10, 0x2f7f, 0x7b75, 0x1f, 0x0, 0x0);
        gbc.writeMem(0xc22f, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x3404);
        EXPECT(gbc.pc(), 0xc231);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc22f), 0xcb);
        EXPECT(gbc.readMem(0xc230), 0xc9);
        // CB C9 007E
        gbc.setState(0x8a7e, 0x5205, 0x190, 0x8a8b, 0x2eb5, 0x75b9, 0x0, 0x0);
        gbc.writeMem(0x8a7e, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x5205);
        EXPECT(gbc.pc(), 0x8a80);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8a7e), 0xcb);
        EXPECT(gbc.readMem(0x8a7f), 0xc9);
        // CB C9 007F
        gbc.setState(0x8188, 0x8534, 0xc7b0, 0xb697, 0xb9e, 0x6b7f, 0x0, 0x1);
        gbc.writeMem(0x8188, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x8534);
        EXPECT(gbc.pc(), 0x818a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8188), 0xcb);
        EXPECT(gbc.readMem(0x8189), 0xc9);
        // CB C9 0080
        gbc.setState(0xe752, 0x8eb0, 0x5c80, 0xbdcc, 0x6612, 0x6c27, 0x1, 0x0);
        gbc.writeMem(0xe752, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x8eb0);
        EXPECT(gbc.pc(), 0xe754);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe752), 0xcb);
        EXPECT(gbc.readMem(0xe753), 0xc9);
        // CB C9 0081
        gbc.setState(0x7f3, 0x63ed, 0x7170, 0x701a, 0x391c, 0xf999, 0x1, 0x0);
        gbc.writeMem(0x7f3, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x63ed);
        EXPECT(gbc.pc(), 0x7f5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C9 0082
        gbc.setState(0x6c47, 0x25ff, 0x4dc0, 0xe7c2, 0xaa35, 0x3601, 0x0, 0x1);
        gbc.writeMem(0x6c47, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x25ff);
        EXPECT(gbc.pc(), 0x6c49);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C9 0083
        gbc.setState(0xec, 0x9630, 0x5490, 0x240, 0x2f5e, 0x995f, 0x1, 0x0);
        gbc.writeMem(0xec, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x9630);
        EXPECT(gbc.pc(), 0xee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C9 0084
        gbc.setState(0x2d94, 0xe54, 0x3620, 0x11c8, 0x65a2, 0x408a, 0x0, 0x1);
        gbc.writeMem(0x2d94, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xe54);
        EXPECT(gbc.pc(), 0x2d96);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C9 0085
        gbc.setState(0xc55a, 0x62ca, 0xe2b0, 0xdf71, 0xe253, 0xe99f, 0x1, 0x0);
        gbc.writeMem(0xc55a, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x62ca);
        EXPECT(gbc.pc(), 0xc55c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc55a), 0xcb);
        EXPECT(gbc.readMem(0xc55b), 0xc9);
        // CB C9 0086
        gbc.setState(0x905c, 0x21c6, 0x6010, 0xf75d, 0x310d, 0xd67b, 0x0, 0x1);
        gbc.writeMem(0x905c, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x21c6);
        EXPECT(gbc.pc(), 0x905e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x905c), 0xcb);
        EXPECT(gbc.readMem(0x905d), 0xc9);
        // CB C9 0087
        gbc.setState(0x693, 0xd3b8, 0x5500, 0xe54f, 0xbda8, 0x5b2, 0x1, 0x1);
        gbc.writeMem(0x693, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0xd3b8);
        EXPECT(gbc.pc(), 0x695);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C9 0088
        gbc.setState(0x44a0, 0xc6a9, 0x8150, 0x226f, 0x7d2d, 0x1b0f, 0x0, 0x1);
        gbc.writeMem(0x44a0, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0xc6a9);
        EXPECT(gbc.pc(), 0x44a2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C9 0089
        gbc.setState(0x95d2, 0x584f, 0xe4e0, 0x802a, 0xc811, 0x7a1a, 0x0, 0x0);
        gbc.writeMem(0x95d2, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x584f);
        EXPECT(gbc.pc(), 0x95d4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x95d2), 0xcb);
        EXPECT(gbc.readMem(0x95d3), 0xc9);
        // CB C9 008A
        gbc.setState(0x1047, 0xe115, 0x4b40, 0x8f19, 0x3b77, 0xf127, 0x0, 0x1);
        gbc.writeMem(0x1047, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0xe115);
        EXPECT(gbc.pc(), 0x1049);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C9 008B
        gbc.setState(0x29c0, 0x7560, 0xbbd0, 0x5ccf, 0x1434, 0xf571, 0x1, 0x1);
        gbc.writeMem(0x29c0, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x7560);
        EXPECT(gbc.pc(), 0x29c2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C9 008C
        gbc.setState(0xc546, 0xf094, 0xa830, 0xac16, 0xdec1, 0x53f7, 0x0, 0x1);
        gbc.writeMem(0xc546, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0xf094);
        EXPECT(gbc.pc(), 0xc548);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc546), 0xcb);
        EXPECT(gbc.readMem(0xc547), 0xc9);
        // CB C9 008D
        gbc.setState(0x14d1, 0xf4e6, 0xb340, 0x3636, 0x6b09, 0xf14c, 0x0, 0x1);
        gbc.writeMem(0x14d1, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0xf4e6);
        EXPECT(gbc.pc(), 0x14d3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C9 008E
        gbc.setState(0x116c, 0x1d8f, 0xe380, 0xfa8d, 0x5d73, 0x86f4, 0x1, 0x0);
        gbc.writeMem(0x116c, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x1d8f);
        EXPECT(gbc.pc(), 0x116e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C9 008F
        gbc.setState(0xaf00, 0xbed9, 0x8e00, 0xc7d6, 0x4049, 0x46be, 0x1, 0x1);
        gbc.writeMem(0xaf00, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0xbed9);
        EXPECT(gbc.pc(), 0xaf02);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaf00), 0xcb);
        EXPECT(gbc.readMem(0xaf01), 0xc9);
        // CB C9 0090
        gbc.setState(0x2ae4, 0x5ca2, 0x1b00, 0x610b, 0x262, 0xfc2d, 0x1, 0x0);
        gbc.writeMem(0x2ae4, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x5ca2);
        EXPECT(gbc.pc(), 0x2ae6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C9 0091
        gbc.setState(0x300c, 0xeb8e, 0x7fd0, 0xe41c, 0xae53, 0xcce1, 0x1, 0x1);
        gbc.writeMem(0x300c, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xeb8e);
        EXPECT(gbc.pc(), 0x300e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C9 0092
        gbc.setState(0xcac7, 0x8ec7, 0xe330, 0xf091, 0xffca, 0x276c, 0x0, 0x0);
        gbc.writeMem(0xcac7, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x8ec7);
        EXPECT(gbc.pc(), 0xcac9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcac7), 0xcb);
        EXPECT(gbc.readMem(0xcac8), 0xc9);
        // CB C9 0093
        gbc.setState(0xe5b1, 0x87e4, 0x23a0, 0xd2bf, 0xa9e, 0x4942, 0x0, 0x0);
        gbc.writeMem(0xe5b1, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x87e4);
        EXPECT(gbc.pc(), 0xe5b3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe5b1), 0xcb);
        EXPECT(gbc.readMem(0xe5b2), 0xc9);
        // CB C9 0094
        gbc.setState(0x8fc3, 0xed90, 0x63b0, 0x834b, 0x7010, 0x21b2, 0x0, 0x1);
        gbc.writeMem(0x8fc3, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0xed90);
        EXPECT(gbc.pc(), 0x8fc5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8fc3), 0xcb);
        EXPECT(gbc.readMem(0x8fc4), 0xc9);
        // CB C9 0096
        gbc.setState(0x7273, 0x92a0, 0xc240, 0x62d9, 0x2cbb, 0xa796, 0x1, 0x0);
        gbc.writeMem(0x7273, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x92a0);
        EXPECT(gbc.pc(), 0x7275);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C9 0097
        gbc.setState(0xcb39, 0xf382, 0xdf50, 0x7006, 0xb7f1, 0x793c, 0x0, 0x0);
        gbc.writeMem(0xcb39, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xf382);
        EXPECT(gbc.pc(), 0xcb3b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcb39), 0xcb);
        EXPECT(gbc.readMem(0xcb3a), 0xc9);
        // CB C9 0098
        gbc.setState(0x612e, 0xe48, 0x6590, 0xcee8, 0x2b80, 0xe9a, 0x0, 0x0);
        gbc.writeMem(0x612e, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0xe48);
        EXPECT(gbc.pc(), 0x6130);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C9 0099
        gbc.setState(0xae5b, 0xafa5, 0x2cc0, 0x2404, 0x3512, 0x8dba, 0x0, 0x0);
        gbc.writeMem(0xae5b, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0xafa5);
        EXPECT(gbc.pc(), 0xae5d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xae5b), 0xcb);
        EXPECT(gbc.readMem(0xae5c), 0xc9);
        // CB C9 009A
        gbc.setState(0xcb11, 0x2b18, 0x1010, 0x9391, 0x26dc, 0x482, 0x1, 0x0);
        gbc.writeMem(0xcb11, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x2b18);
        EXPECT(gbc.pc(), 0xcb13);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcb11), 0xcb);
        EXPECT(gbc.readMem(0xcb12), 0xc9);
        // CB C9 009B
        gbc.setState(0x8a82, 0x6661, 0x3fc0, 0x34cd, 0x84b5, 0x59d5, 0x1, 0x1);
        gbc.writeMem(0x8a82, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x6661);
        EXPECT(gbc.pc(), 0x8a84);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8a82), 0xcb);
        EXPECT(gbc.readMem(0x8a83), 0xc9);
        // CB C9 009C
        gbc.setState(0x470d, 0xa840, 0x1920, 0x67cf, 0x77c5, 0x86e5, 0x0, 0x0);
        gbc.writeMem(0x470d, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xa840);
        EXPECT(gbc.pc(), 0x470f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C9 009D
        gbc.setState(0x889a, 0xf3c4, 0xde60, 0xc19b, 0xf188, 0xb273, 0x1, 0x0);
        gbc.writeMem(0x889a, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0xf3c4);
        EXPECT(gbc.pc(), 0x889c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x889a), 0xcb);
        EXPECT(gbc.readMem(0x889b), 0xc9);
        // CB C9 009E
        gbc.setState(0x6a26, 0x4004, 0x7c40, 0x84a5, 0xc039, 0xa8fc, 0x1, 0x0);
        gbc.writeMem(0x6a26, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x4004);
        EXPECT(gbc.pc(), 0x6a28);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C9 009F
        gbc.setState(0xdf1f, 0x6fdf, 0xac40, 0xcd70, 0x506c, 0x5152, 0x1, 0x1);
        gbc.writeMem(0xdf1f, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x6fdf);
        EXPECT(gbc.pc(), 0xdf21);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdf1f), 0xcb);
        EXPECT(gbc.readMem(0xdf20), 0xc9);
        // CB C9 00A0
        gbc.setState(0xdb14, 0xf4, 0xb8e0, 0xbc2f, 0xc2e7, 0x725f, 0x0, 0x1);
        gbc.writeMem(0xdb14, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0xf4);
        EXPECT(gbc.pc(), 0xdb16);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdb14), 0xcb);
        EXPECT(gbc.readMem(0xdb15), 0xc9);
        // CB C9 00A1
        gbc.setState(0x8201, 0x2821, 0x1ca0, 0x5520, 0xc0f5, 0x5e83, 0x1, 0x1);
        gbc.writeMem(0x8201, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x2821);
        EXPECT(gbc.pc(), 0x8203);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8201), 0xcb);
        EXPECT(gbc.readMem(0x8202), 0xc9);
        // CB C9 00A2
        gbc.setState(0xae55, 0x25f8, 0x8ac0, 0xc4fe, 0x8f1f, 0x871a, 0x1, 0x1);
        gbc.writeMem(0xae55, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x25f8);
        EXPECT(gbc.pc(), 0xae57);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xae55), 0xcb);
        EXPECT(gbc.readMem(0xae56), 0xc9);
        // CB C9 00A3
        gbc.setState(0xa7da, 0xba47, 0x5840, 0xd4d7, 0x6acc, 0x3e6a, 0x0, 0x1);
        gbc.writeMem(0xa7da, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xba47);
        EXPECT(gbc.pc(), 0xa7dc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa7da), 0xcb);
        EXPECT(gbc.readMem(0xa7db), 0xc9);
        // CB C9 00A4
        gbc.setState(0x8989, 0x125d, 0xcc10, 0x2b56, 0x7395, 0xb7fa, 0x1, 0x1);
        gbc.writeMem(0x8989, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x125d);
        EXPECT(gbc.pc(), 0x898b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8989), 0xcb);
        EXPECT(gbc.readMem(0x898a), 0xc9);
        // CB C9 00A5
        gbc.setState(0xe8bf, 0xddd9, 0xbfd0, 0x99f7, 0xf704, 0xa14c, 0x1, 0x1);
        gbc.writeMem(0xe8bf, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0xddd9);
        EXPECT(gbc.pc(), 0xe8c1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe8bf), 0xcb);
        EXPECT(gbc.readMem(0xe8c0), 0xc9);
        // CB C9 00A6
        gbc.setState(0x2997, 0xeebb, 0x8880, 0xb57f, 0xbc40, 0x56ec, 0x0, 0x0);
        gbc.writeMem(0x2997, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0xeebb);
        EXPECT(gbc.pc(), 0x2999);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C9 00A7
        gbc.setState(0xe3f5, 0x5989, 0xcaa0, 0xc728, 0xabad, 0x97ea, 0x1, 0x1);
        gbc.writeMem(0xe3f5, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x5989);
        EXPECT(gbc.pc(), 0xe3f7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe3f5), 0xcb);
        EXPECT(gbc.readMem(0xe3f6), 0xc9);
        // CB C9 00A8
        gbc.setState(0x856c, 0x7da8, 0x3e60, 0x5479, 0xc504, 0xc2fa, 0x0, 0x0);
        gbc.writeMem(0x856c, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x7da8);
        EXPECT(gbc.pc(), 0x856e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x856c), 0xcb);
        EXPECT(gbc.readMem(0x856d), 0xc9);
        // CB C9 00A9
        gbc.setState(0x85db, 0x6e03, 0x59d0, 0x333d, 0xbb35, 0xbf7a, 0x0, 0x0);
        gbc.writeMem(0x85db, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x6e03);
        EXPECT(gbc.pc(), 0x85dd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x85db), 0xcb);
        EXPECT(gbc.readMem(0x85dc), 0xc9);
        // CB C9 00AA
        gbc.setState(0x798d, 0x1d50, 0x8150, 0xfce4, 0x59fd, 0xfea2, 0x1, 0x1);
        gbc.writeMem(0x798d, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x1d50);
        EXPECT(gbc.pc(), 0x798f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C9 00AB
        gbc.setState(0xdc75, 0x649b, 0x7a30, 0x98ad, 0xe18c, 0x7f41, 0x0, 0x1);
        gbc.writeMem(0xdc75, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x649b);
        EXPECT(gbc.pc(), 0xdc77);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdc75), 0xcb);
        EXPECT(gbc.readMem(0xdc76), 0xc9);
        // CB C9 00AC
        gbc.setState(0xa2d0, 0x8ad9, 0x45d0, 0x222e, 0x836, 0x2cc7, 0x1, 0x0);
        gbc.writeMem(0xa2d0, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x8ad9);
        EXPECT(gbc.pc(), 0xa2d2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa2d0), 0xcb);
        EXPECT(gbc.readMem(0xa2d1), 0xc9);
        // CB C9 00AE
        gbc.setState(0xd7b6, 0x7c98, 0x1540, 0x5aa6, 0xdbb3, 0x7e97, 0x1, 0x0);
        gbc.writeMem(0xd7b6, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x7c98);
        EXPECT(gbc.pc(), 0xd7b8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd7b6), 0xcb);
        EXPECT(gbc.readMem(0xd7b7), 0xc9);
        // CB C9 00AF
        gbc.setState(0x2fd5, 0xc5bb, 0x2030, 0x143d, 0x32ae, 0xb2af, 0x1, 0x0);
        gbc.writeMem(0x2fd5, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0xc5bb);
        EXPECT(gbc.pc(), 0x2fd7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C9 00B0
        gbc.setState(0x30a9, 0xa181, 0xc5c0, 0x700e, 0xad8b, 0x5c4e, 0x0, 0x1);
        gbc.writeMem(0x30a9, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0xa181);
        EXPECT(gbc.pc(), 0x30ab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C9 00B1
        gbc.setState(0x6a1, 0x81b9, 0x28b0, 0x95ee, 0xf5a6, 0xf941, 0x1, 0x0);
        gbc.writeMem(0x6a1, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x81b9);
        EXPECT(gbc.pc(), 0x6a3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C9 00B2
        gbc.setState(0xb6f2, 0x1fe8, 0x4680, 0x3867, 0x5e09, 0x3dc7, 0x0, 0x0);
        gbc.writeMem(0xb6f2, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x1fe8);
        EXPECT(gbc.pc(), 0xb6f4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb6f2), 0xcb);
        EXPECT(gbc.readMem(0xb6f3), 0xc9);
        // CB C9 00B3
        gbc.setState(0x8b2, 0xe260, 0x9470, 0x257c, 0x3729, 0x5679, 0x0, 0x0);
        gbc.writeMem(0x8b2, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xe260);
        EXPECT(gbc.pc(), 0x8b4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C9 00B4
        gbc.setState(0x9b32, 0x1d1c, 0xa220, 0x5ca8, 0xfcd3, 0xc99, 0x0, 0x0);
        gbc.writeMem(0x9b32, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x1d1c);
        EXPECT(gbc.pc(), 0x9b34);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9b32), 0xcb);
        EXPECT(gbc.readMem(0x9b33), 0xc9);
        // CB C9 00B5
        gbc.setState(0x1abf, 0xcae8, 0xacd0, 0xc8cc, 0x8e58, 0x248d, 0x1, 0x1);
        gbc.writeMem(0x1abf, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0xcae8);
        EXPECT(gbc.pc(), 0x1ac1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C9 00B6
        gbc.setState(0x48c0, 0x1d39, 0xc470, 0x518, 0x180a, 0xe481, 0x1, 0x0);
        gbc.writeMem(0x48c0, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x1d39);
        EXPECT(gbc.pc(), 0x48c2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C9 00B7
        gbc.setState(0x11f7, 0x6576, 0xbae0, 0x9d7a, 0xcb73, 0xf946, 0x1, 0x0);
        gbc.writeMem(0x11f7, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x6576);
        EXPECT(gbc.pc(), 0x11f9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C9 00B8
        gbc.setState(0x356e, 0x7859, 0xea0, 0xbf6d, 0x71aa, 0xac9d, 0x1, 0x0);
        gbc.writeMem(0x356e, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x7859);
        EXPECT(gbc.pc(), 0x3570);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C9 00B9
        gbc.setState(0x4029, 0x7488, 0x18d0, 0xcb7a, 0x7b57, 0x873, 0x0, 0x0);
        gbc.writeMem(0x4029, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x7488);
        EXPECT(gbc.pc(), 0x402b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C9 00BA
        gbc.setState(0x822a, 0xe7c4, 0xaee0, 0x8b22, 0xf028, 0xcdd4, 0x0, 0x1);
        gbc.writeMem(0x822a, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xe7c4);
        EXPECT(gbc.pc(), 0x822c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x822a), 0xcb);
        EXPECT(gbc.readMem(0x822b), 0xc9);
        // CB C9 00BB
        gbc.setState(0xd395, 0x9ab, 0xfc0, 0xd246, 0x2a5a, 0xc9df, 0x1, 0x0);
        gbc.writeMem(0xd395, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x9ab);
        EXPECT(gbc.pc(), 0xd397);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd395), 0xcb);
        EXPECT(gbc.readMem(0xd396), 0xc9);
        // CB C9 00BC
        gbc.setState(0xa5cc, 0x82b0, 0x33c0, 0x24be, 0xaf7a, 0xf954, 0x1, 0x0);
        gbc.writeMem(0xa5cc, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x82b0);
        EXPECT(gbc.pc(), 0xa5ce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa5cc), 0xcb);
        EXPECT(gbc.readMem(0xa5cd), 0xc9);
        // CB C9 00BD
        gbc.setState(0x6914, 0xb791, 0x80a0, 0x99ea, 0xf2af, 0x1754, 0x1, 0x1);
        gbc.writeMem(0x6914, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0xb791);
        EXPECT(gbc.pc(), 0x6916);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C9 00BE
        gbc.setState(0x3956, 0xec31, 0x22d0, 0xfb4, 0xf87a, 0x8a02, 0x0, 0x0);
        gbc.writeMem(0x3956, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xec31);
        EXPECT(gbc.pc(), 0x3958);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C9 00BF
        gbc.setState(0xafcf, 0x6988, 0x8b80, 0x5653, 0x9cf7, 0x884, 0x1, 0x1);
        gbc.writeMem(0xafcf, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x6988);
        EXPECT(gbc.pc(), 0xafd1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xafcf), 0xcb);
        EXPECT(gbc.readMem(0xafd0), 0xc9);
        // CB C9 00C0
        gbc.setState(0x4336, 0x177b, 0x4da0, 0x4b48, 0x59bb, 0x31e0, 0x1, 0x1);
        gbc.writeMem(0x4336, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x177b);
        EXPECT(gbc.pc(), 0x4338);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C9 00C1
        gbc.setState(0x4283, 0x2b96, 0xbb0, 0x98f8, 0xf9f3, 0x2ac6, 0x1, 0x1);
        gbc.writeMem(0x4283, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x2b96);
        EXPECT(gbc.pc(), 0x4285);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C9 00C2
        gbc.setState(0x91d2, 0x5104, 0xf3f0, 0x31ad, 0x549e, 0x5c5c, 0x1, 0x0);
        gbc.writeMem(0x91d2, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x5104);
        EXPECT(gbc.pc(), 0x91d4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x91d2), 0xcb);
        EXPECT(gbc.readMem(0x91d3), 0xc9);
        // CB C9 00C3
        gbc.setState(0x590e, 0x4b57, 0xdb50, 0x49aa, 0xca7e, 0x2f0b, 0x0, 0x1);
        gbc.writeMem(0x590e, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x4b57);
        EXPECT(gbc.pc(), 0x5910);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C9 00C4
        gbc.setState(0xd702, 0x8604, 0x6b30, 0xd42f, 0x896a, 0x7289, 0x0, 0x1);
        gbc.writeMem(0xd702, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x8604);
        EXPECT(gbc.pc(), 0xd704);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd702), 0xcb);
        EXPECT(gbc.readMem(0xd703), 0xc9);
        // CB C9 00C5
        gbc.setState(0xbdac, 0x28e2, 0x7c00, 0xc7ee, 0xb8dc, 0xd876, 0x1, 0x0);
        gbc.writeMem(0xbdac, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x28e2);
        EXPECT(gbc.pc(), 0xbdae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbdac), 0xcb);
        EXPECT(gbc.readMem(0xbdad), 0xc9);
        // CB C9 00C6
        gbc.setState(0x232b, 0x57ee, 0xc300, 0xc2c8, 0x7e0b, 0x2cf0, 0x1, 0x0);
        gbc.writeMem(0x232b, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x57ee);
        EXPECT(gbc.pc(), 0x232d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C9 00C7
        gbc.setState(0x613e, 0x2d6d, 0x9cb0, 0x2311, 0x2c77, 0x74e4, 0x0, 0x1);
        gbc.writeMem(0x613e, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x2d6d);
        EXPECT(gbc.pc(), 0x6140);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C9 00C8
        gbc.setState(0x3151, 0x950e, 0x630, 0xf221, 0xc9a6, 0x894f, 0x0, 0x0);
        gbc.writeMem(0x3151, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x950e);
        EXPECT(gbc.pc(), 0x3153);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C9 00CA
        gbc.setState(0x3f47, 0x9b9b, 0x2f50, 0x8748, 0x578d, 0x4bb2, 0x1, 0x0);
        gbc.writeMem(0x3f47, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x9b9b);
        EXPECT(gbc.pc(), 0x3f49);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C9 00CB
        gbc.setState(0x2583, 0x5607, 0x45d0, 0x928f, 0x169, 0xd9e, 0x0, 0x1);
        gbc.writeMem(0x2583, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x5607);
        EXPECT(gbc.pc(), 0x2585);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C9 00CC
        gbc.setState(0x7863, 0xfc1, 0xc700, 0x5179, 0x9e6f, 0x7eaf, 0x1, 0x1);
        gbc.writeMem(0x7863, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0xfc1);
        EXPECT(gbc.pc(), 0x7865);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C9 00CD
        gbc.setState(0x7d4a, 0xf12, 0xb9d0, 0xba81, 0xa448, 0x2f26, 0x1, 0x1);
        gbc.writeMem(0x7d4a, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0xf12);
        EXPECT(gbc.pc(), 0x7d4c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C9 00CE
        gbc.setState(0xc080, 0xe26d, 0xf4c0, 0xdab, 0x6d4a, 0x4ae, 0x1, 0x1);
        gbc.writeMem(0xc080, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0xe26d);
        EXPECT(gbc.pc(), 0xc082);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc080), 0xcb);
        EXPECT(gbc.readMem(0xc081), 0xc9);
        // CB C9 00CF
        gbc.setState(0xb53e, 0xd678, 0x30, 0x399f, 0x7a40, 0x2867, 0x0, 0x0);
        gbc.writeMem(0xb53e, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0xd678);
        EXPECT(gbc.pc(), 0xb540);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb53e), 0xcb);
        EXPECT(gbc.readMem(0xb53f), 0xc9);
        // CB C9 00D0
        gbc.setState(0x5c00, 0x704c, 0x4850, 0x6e18, 0x9df0, 0xab16, 0x1, 0x1);
        gbc.writeMem(0x5c00, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x704c);
        EXPECT(gbc.pc(), 0x5c02);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C9 00D1
        gbc.setState(0x3091, 0x9cb9, 0x6f20, 0xfe4e, 0x5b11, 0xd327, 0x0, 0x1);
        gbc.writeMem(0x3091, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x9cb9);
        EXPECT(gbc.pc(), 0x3093);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C9 00D2
        gbc.setState(0xab02, 0x355f, 0x460, 0xb305, 0xda7b, 0x3a2e, 0x0, 0x0);
        gbc.writeMem(0xab02, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x355f);
        EXPECT(gbc.pc(), 0xab04);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xab02), 0xcb);
        EXPECT(gbc.readMem(0xab03), 0xc9);
        // CB C9 00D3
        gbc.setState(0xbb8d, 0x3c0d, 0x7d80, 0xbe7f, 0x1e25, 0xdd4c, 0x1, 0x0);
        gbc.writeMem(0xbb8d, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x3c0d);
        EXPECT(gbc.pc(), 0xbb8f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbb8d), 0xcb);
        EXPECT(gbc.readMem(0xbb8e), 0xc9);
        // CB C9 00D4
        gbc.setState(0xa31d, 0x5dab, 0x90a0, 0xf157, 0x51b9, 0x129a, 0x1, 0x0);
        gbc.writeMem(0xa31d, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x5dab);
        EXPECT(gbc.pc(), 0xa31f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa31d), 0xcb);
        EXPECT(gbc.readMem(0xa31e), 0xc9);
        // CB C9 00D5
        gbc.setState(0xd1f4, 0x7377, 0x8ee0, 0x17bf, 0x969a, 0x8afb, 0x1, 0x0);
        gbc.writeMem(0xd1f4, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x7377);
        EXPECT(gbc.pc(), 0xd1f6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd1f4), 0xcb);
        EXPECT(gbc.readMem(0xd1f5), 0xc9);
        // CB C9 00D6
        gbc.setState(0x7d09, 0x792b, 0x7ab0, 0xbfe5, 0xfbd2, 0x4602, 0x0, 0x1);
        gbc.writeMem(0x7d09, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x792b);
        EXPECT(gbc.pc(), 0x7d0b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C9 00D7
        gbc.setState(0xeec3, 0xed61, 0x190, 0xffba, 0x46b4, 0x2d45, 0x1, 0x1);
        gbc.writeMem(0xeec3, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0xed61);
        EXPECT(gbc.pc(), 0xeec5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeec3), 0xcb);
        EXPECT(gbc.readMem(0xeec4), 0xc9);
        // CB C9 00D8
        gbc.setState(0xc076, 0x6828, 0x55e0, 0x9530, 0xdd61, 0x1ca0, 0x0, 0x1);
        gbc.writeMem(0xc076, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x6828);
        EXPECT(gbc.pc(), 0xc078);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc076), 0xcb);
        EXPECT(gbc.readMem(0xc077), 0xc9);
        // CB C9 00D9
        gbc.setState(0x6e8c, 0x51fd, 0x56b0, 0xce28, 0x800e, 0xfb70, 0x0, 0x1);
        gbc.writeMem(0x6e8c, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x51fd);
        EXPECT(gbc.pc(), 0x6e8e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C9 00DA
        gbc.setState(0x8530, 0xf184, 0x1870, 0x57b3, 0xd9f1, 0xa69c, 0x1, 0x1);
        gbc.writeMem(0x8530, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0xf184);
        EXPECT(gbc.pc(), 0x8532);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8530), 0xcb);
        EXPECT(gbc.readMem(0x8531), 0xc9);
        // CB C9 00DB
        gbc.setState(0xbe5a, 0x8daa, 0xa8a0, 0xb952, 0xd40f, 0x94b3, 0x1, 0x0);
        gbc.writeMem(0xbe5a, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x8daa);
        EXPECT(gbc.pc(), 0xbe5c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbe5a), 0xcb);
        EXPECT(gbc.readMem(0xbe5b), 0xc9);
        // CB C9 00DC
        gbc.setState(0x5951, 0x5651, 0xe4d0, 0x2145, 0xc8ad, 0x69e0, 0x1, 0x1);
        gbc.writeMem(0x5951, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x5651);
        EXPECT(gbc.pc(), 0x5953);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C9 00DD
        gbc.setState(0x1048, 0xbd7f, 0x4f80, 0xd125, 0x9c69, 0x9f1f, 0x1, 0x0);
        gbc.writeMem(0x1048, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0xbd7f);
        EXPECT(gbc.pc(), 0x104a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C9 00DE
        gbc.setState(0x9fab, 0xdf8c, 0x4840, 0xf5b0, 0x8080, 0xa3b1, 0x0, 0x0);
        gbc.writeMem(0x9fab, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0xdf8c);
        EXPECT(gbc.pc(), 0x9fad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9fab), 0xcb);
        EXPECT(gbc.readMem(0x9fac), 0xc9);
        // CB C9 00DF
        gbc.setState(0x2ff7, 0x902c, 0xd0b0, 0x8da2, 0xa247, 0xf5d3, 0x1, 0x0);
        gbc.writeMem(0x2ff7, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x902c);
        EXPECT(gbc.pc(), 0x2ff9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C9 00E0
        gbc.setState(0x4d46, 0xc67, 0x84a0, 0x1d69, 0x3d14, 0xf78b, 0x1, 0x1);
        gbc.writeMem(0x4d46, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0xc67);
        EXPECT(gbc.pc(), 0x4d48);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C9 00E1
        gbc.setState(0x8e83, 0x277c, 0x99d0, 0xaead, 0x15cc, 0x497, 0x0, 0x0);
        gbc.writeMem(0x8e83, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x277c);
        EXPECT(gbc.pc(), 0x8e85);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8e83), 0xcb);
        EXPECT(gbc.readMem(0x8e84), 0xc9);
        // CB C9 00E2
        gbc.setState(0x9621, 0xf1f7, 0x5da0, 0x54ed, 0x6e03, 0x1334, 0x1, 0x0);
        gbc.writeMem(0x9621, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xf1f7);
        EXPECT(gbc.pc(), 0x9623);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9621), 0xcb);
        EXPECT(gbc.readMem(0x9622), 0xc9);
        // CB C9 00E4
        gbc.setState(0x75e0, 0xd0c3, 0xe0a0, 0xa915, 0x7cbe, 0xf67e, 0x0, 0x1);
        gbc.writeMem(0x75e0, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0xd0c3);
        EXPECT(gbc.pc(), 0x75e2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C9 00E5
        gbc.setState(0x4a5, 0x5b4f, 0x20f0, 0x21a, 0x4f93, 0xf784, 0x1, 0x0);
        gbc.writeMem(0x4a5, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x5b4f);
        EXPECT(gbc.pc(), 0x4a7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C9 00E6
        gbc.setState(0xebdd, 0x580c, 0x9b10, 0xdea8, 0xda49, 0x5f18, 0x0, 0x0);
        gbc.writeMem(0xebdd, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x580c);
        EXPECT(gbc.pc(), 0xebdf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xebdd), 0xcb);
        EXPECT(gbc.readMem(0xebde), 0xc9);
        // CB C9 00E7
        gbc.setState(0x4637, 0xa51b, 0x7570, 0xfffb, 0x4f88, 0x736, 0x1, 0x1);
        gbc.writeMem(0x4637, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0xa51b);
        EXPECT(gbc.pc(), 0x4639);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C9 00E8
        gbc.setState(0x37db, 0xf05e, 0x5a20, 0xaf36, 0xdd1a, 0x5e02, 0x0, 0x0);
        gbc.writeMem(0x37db, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xf05e);
        EXPECT(gbc.pc(), 0x37dd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C9 00E9
        gbc.setState(0x26a0, 0x3914, 0x51c0, 0x8046, 0xf39, 0xb61d, 0x0, 0x0);
        gbc.writeMem(0x26a0, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x3914);
        EXPECT(gbc.pc(), 0x26a2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C9 00EA
        gbc.setState(0xb383, 0xbb0b, 0xd670, 0xc08f, 0x54d, 0xb9c1, 0x1, 0x1);
        gbc.writeMem(0xb383, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0xbb0b);
        EXPECT(gbc.pc(), 0xb385);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb383), 0xcb);
        EXPECT(gbc.readMem(0xb384), 0xc9);
        // CB C9 00EB
        gbc.setState(0x5c20, 0x87b5, 0x7990, 0xb4b1, 0x8990, 0x5fd1, 0x0, 0x0);
        gbc.writeMem(0x5c20, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x87b5);
        EXPECT(gbc.pc(), 0x5c22);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C9 00EC
        gbc.setState(0xdf5d, 0x2fa2, 0x2c10, 0x229d, 0xad88, 0xf6ae, 0x1, 0x0);
        gbc.writeMem(0xdf5d, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x2fa2);
        EXPECT(gbc.pc(), 0xdf5f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdf5d), 0xcb);
        EXPECT(gbc.readMem(0xdf5e), 0xc9);
        // CB C9 00ED
        gbc.setState(0x36c0, 0x274c, 0xe6b0, 0x36e0, 0x7d8a, 0xff39, 0x1, 0x1);
        gbc.writeMem(0x36c0, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x274c);
        EXPECT(gbc.pc(), 0x36c2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C9 00EE
        gbc.setState(0x37be, 0x157c, 0xaf50, 0xe1b0, 0x4b90, 0xda83, 0x0, 0x0);
        gbc.writeMem(0x37be, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x157c);
        EXPECT(gbc.pc(), 0x37c0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C9 00EF
        gbc.setState(0x4c1a, 0xf93f, 0xe940, 0x194c, 0x40c5, 0x7dab, 0x1, 0x1);
        gbc.writeMem(0x4c1a, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xf93f);
        EXPECT(gbc.pc(), 0x4c1c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C9 00F0
        gbc.setState(0xe5d5, 0x27fb, 0x2910, 0x6dba, 0x4519, 0xe292, 0x1, 0x0);
        gbc.writeMem(0xe5d5, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x27fb);
        EXPECT(gbc.pc(), 0xe5d7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe5d5), 0xcb);
        EXPECT(gbc.readMem(0xe5d6), 0xc9);
        // CB C9 00F1
        gbc.setState(0xb9d5, 0xc5f, 0x2490, 0x6012, 0x9b01, 0x84c1, 0x1, 0x0);
        gbc.writeMem(0xb9d5, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0xc5f);
        EXPECT(gbc.pc(), 0xb9d7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb9d5), 0xcb);
        EXPECT(gbc.readMem(0xb9d6), 0xc9);
        // CB C9 00F2
        gbc.setState(0x3253, 0x3100, 0xabc0, 0xd267, 0x1e0, 0x9735, 0x0, 0x0);
        gbc.writeMem(0x3253, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x3100);
        EXPECT(gbc.pc(), 0x3255);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C9 00F3
        gbc.setState(0x51b7, 0xcdb, 0xd970, 0xddea, 0x4867, 0xbbfe, 0x0, 0x1);
        gbc.writeMem(0x51b7, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0xcdb);
        EXPECT(gbc.pc(), 0x51b9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C9 00F4
        gbc.setState(0xae3f, 0x65fd, 0x2d10, 0x195e, 0xdc6b, 0x1c6e, 0x0, 0x1);
        gbc.writeMem(0xae3f, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x65fd);
        EXPECT(gbc.pc(), 0xae41);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xae3f), 0xcb);
        EXPECT(gbc.readMem(0xae40), 0xc9);
        // CB C9 00F5
        gbc.setState(0xb270, 0x68e0, 0x4020, 0xddb7, 0x9fbe, 0xcb17, 0x1, 0x0);
        gbc.writeMem(0xb270, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x68e0);
        EXPECT(gbc.pc(), 0xb272);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb270), 0xcb);
        EXPECT(gbc.readMem(0xb271), 0xc9);
        // CB C9 00F6
        gbc.setState(0x11bb, 0xee06, 0x9fa0, 0x39b1, 0x4777, 0x16b6, 0x0, 0x1);
        gbc.writeMem(0x11bb, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xee06);
        EXPECT(gbc.pc(), 0x11bd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C9 00F7
        gbc.setState(0x1c4d, 0xe010, 0x33b0, 0xc536, 0x2e32, 0x3421, 0x0, 0x1);
        gbc.writeMem(0x1c4d, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0xe010);
        EXPECT(gbc.pc(), 0x1c4f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C9 00F8
        gbc.setState(0x2439, 0x31b9, 0x9780, 0x3751, 0x9602, 0xa952, 0x0, 0x0);
        gbc.writeMem(0x2439, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x31b9);
        EXPECT(gbc.pc(), 0x243b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C9 00F9
        gbc.setState(0x5bfc, 0xb4b9, 0x6570, 0x6c70, 0x2c13, 0xba29, 0x1, 0x0);
        gbc.writeMem(0x5bfc, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0xb4b9);
        EXPECT(gbc.pc(), 0x5bfe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C9 00FA
        gbc.setState(0x880c, 0x14e, 0xbe80, 0x8169, 0x1bf7, 0xa801, 0x0, 0x0);
        gbc.writeMem(0x880c, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x14e);
        EXPECT(gbc.pc(), 0x880e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x880c), 0xcb);
        EXPECT(gbc.readMem(0x880d), 0xc9);
        // CB C9 00FC
        gbc.setState(0x567d, 0x85de, 0xd00, 0xefee, 0xc04d, 0x96ca, 0x0, 0x0);
        gbc.writeMem(0x567d, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x85de);
        EXPECT(gbc.pc(), 0x567f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C9 00FD
        gbc.setState(0xcee8, 0x35c7, 0x14c0, 0xda52, 0x2d76, 0xc0de, 0x1, 0x1);
        gbc.writeMem(0xcee8, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x35c7);
        EXPECT(gbc.pc(), 0xceea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcee8), 0xcb);
        EXPECT(gbc.readMem(0xcee9), 0xc9);
        // CB C9 00FE
        gbc.setState(0xcecf, 0x37dc, 0xc570, 0xdc9c, 0x4b47, 0x32b3, 0x1, 0x1);
        gbc.writeMem(0xcecf, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x37dc);
        EXPECT(gbc.pc(), 0xced1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcecf), 0xcb);
        EXPECT(gbc.readMem(0xced0), 0xc9);
        // CB C9 00FF
        gbc.setState(0xb6a2, 0x4517, 0xa210, 0xf40e, 0xc6cd, 0x6b3a, 0x0, 0x1);
        gbc.writeMem(0xb6a2, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x4517);
        EXPECT(gbc.pc(), 0xb6a4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb6a2), 0xcb);
        EXPECT(gbc.readMem(0xb6a3), 0xc9);
        // CB C9 0100
        gbc.setState(0x8e8f, 0xec2d, 0x4f0, 0x3805, 0x9c28, 0xcaf4, 0x0, 0x1);
        gbc.writeMem(0x8e8f, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0xec2d);
        EXPECT(gbc.pc(), 0x8e91);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8e8f), 0xcb);
        EXPECT(gbc.readMem(0x8e90), 0xc9);
        // CB C9 0101
        gbc.setState(0x987, 0x7b2c, 0xe830, 0x4473, 0x7460, 0x5b2b, 0x1, 0x1);
        gbc.writeMem(0x987, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x7b2c);
        EXPECT(gbc.pc(), 0x989);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C9 0102
        gbc.setState(0x702a, 0x74ff, 0x840, 0x71ed, 0xe095, 0xc34f, 0x1, 0x1);
        gbc.writeMem(0x702a, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x74ff);
        EXPECT(gbc.pc(), 0x702c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C9 0103
        gbc.setState(0x52de, 0x4f37, 0x8cd0, 0x484f, 0x3b75, 0x3108, 0x1, 0x0);
        gbc.writeMem(0x52de, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x4f37);
        EXPECT(gbc.pc(), 0x52e0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C9 0104
        gbc.setState(0x4d7a, 0x930d, 0x6680, 0xb476, 0x2050, 0xecdd, 0x1, 0x1);
        gbc.writeMem(0x4d7a, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x930d);
        EXPECT(gbc.pc(), 0x4d7c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C9 0105
        gbc.setState(0x81f6, 0xaea7, 0x8040, 0x6a64, 0x90a0, 0xb68b, 0x0, 0x1);
        gbc.writeMem(0x81f6, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0xaea7);
        EXPECT(gbc.pc(), 0x81f8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x81f6), 0xcb);
        EXPECT(gbc.readMem(0x81f7), 0xc9);
        // CB C9 0106
        gbc.setState(0x9cb7, 0xc678, 0xb970, 0x14a1, 0x8e2, 0x9ebf, 0x0, 0x1);
        gbc.writeMem(0x9cb7, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0xc678);
        EXPECT(gbc.pc(), 0x9cb9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9cb7), 0xcb);
        EXPECT(gbc.readMem(0x9cb8), 0xc9);
        // CB C9 0107
        gbc.setState(0x73f9, 0x70e, 0x4910, 0x9ffe, 0x42bb, 0x78ea, 0x1, 0x1);
        gbc.writeMem(0x73f9, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x70e);
        EXPECT(gbc.pc(), 0x73fb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C9 0108
        gbc.setState(0xa02c, 0x1d92, 0xc850, 0x12fa, 0xae06, 0xb8d2, 0x1, 0x0);
        gbc.writeMem(0xa02c, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x1d92);
        EXPECT(gbc.pc(), 0xa02e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa02c), 0xcb);
        EXPECT(gbc.readMem(0xa02d), 0xc9);
        // CB C9 0109
        gbc.setState(0xdaba, 0x55c2, 0x850, 0x2604, 0x1f05, 0xaccb, 0x1, 0x0);
        gbc.writeMem(0xdaba, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x55c2);
        EXPECT(gbc.pc(), 0xdabc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdaba), 0xcb);
        EXPECT(gbc.readMem(0xdabb), 0xc9);
        // CB C9 010A
        gbc.setState(0xeb55, 0x74d2, 0xe300, 0xd4aa, 0x77c4, 0xa455, 0x1, 0x0);
        gbc.writeMem(0xeb55, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x74d2);
        EXPECT(gbc.pc(), 0xeb57);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeb55), 0xcb);
        EXPECT(gbc.readMem(0xeb56), 0xc9);
        // CB C9 010B
        gbc.setState(0xae26, 0x67a7, 0xa3b0, 0x1298, 0xe3ca, 0x3b54, 0x0, 0x1);
        gbc.writeMem(0xae26, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x67a7);
        EXPECT(gbc.pc(), 0xae28);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xae26), 0xcb);
        EXPECT(gbc.readMem(0xae27), 0xc9);
        // CB C9 010C
        gbc.setState(0x2b0f, 0x1a37, 0xd140, 0x4bf0, 0x5afb, 0xf4cd, 0x1, 0x0);
        gbc.writeMem(0x2b0f, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x1a37);
        EXPECT(gbc.pc(), 0x2b11);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C9 010D
        gbc.setState(0x66e5, 0x7579, 0xf0, 0x386b, 0x7dc6, 0x264a, 0x0, 0x1);
        gbc.writeMem(0x66e5, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x7579);
        EXPECT(gbc.pc(), 0x66e7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C9 010E
        gbc.setState(0xcb51, 0x18ea, 0x6b60, 0x28ca, 0x84d4, 0xa619, 0x0, 0x0);
        gbc.writeMem(0xcb51, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x18ea);
        EXPECT(gbc.pc(), 0xcb53);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcb51), 0xcb);
        EXPECT(gbc.readMem(0xcb52), 0xc9);
        // CB C9 010F
        gbc.setState(0xadd4, 0x9f6f, 0x2680, 0xc769, 0x3684, 0x8e5c, 0x1, 0x0);
        gbc.writeMem(0xadd4, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x9f6f);
        EXPECT(gbc.pc(), 0xadd6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xadd4), 0xcb);
        EXPECT(gbc.readMem(0xadd5), 0xc9);
        // CB C9 0110
        gbc.setState(0x33e4, 0x85fb, 0x7e80, 0x22af, 0x6561, 0xcd48, 0x1, 0x1);
        gbc.writeMem(0x33e4, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x85fb);
        EXPECT(gbc.pc(), 0x33e6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C9 0111
        gbc.setState(0x6fe1, 0xe3c, 0x7060, 0x30bb, 0x6b4c, 0x6e43, 0x0, 0x1);
        gbc.writeMem(0x6fe1, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xe3c);
        EXPECT(gbc.pc(), 0x6fe3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C9 0112
        gbc.setState(0xb306, 0x4d14, 0xe640, 0xabca, 0x65cd, 0x73b9, 0x1, 0x1);
        gbc.writeMem(0xb306, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x4d14);
        EXPECT(gbc.pc(), 0xb308);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb306), 0xcb);
        EXPECT(gbc.readMem(0xb307), 0xc9);
        // CB C9 0113
        gbc.setState(0x2edc, 0xe4ec, 0xbc60, 0x6231, 0x9fca, 0x24e9, 0x1, 0x0);
        gbc.writeMem(0x2edc, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0xe4ec);
        EXPECT(gbc.pc(), 0x2ede);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C9 0114
        gbc.setState(0xce3b, 0xc8ac, 0xe760, 0x58b6, 0xf59a, 0x3dc4, 0x0, 0x1);
        gbc.writeMem(0xce3b, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0xc8ac);
        EXPECT(gbc.pc(), 0xce3d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xce3b), 0xcb);
        EXPECT(gbc.readMem(0xce3c), 0xc9);
        // CB C9 0115
        gbc.setState(0xe718, 0xacab, 0xc660, 0xb79c, 0xc983, 0x6ccb, 0x1, 0x0);
        gbc.writeMem(0xe718, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0xacab);
        EXPECT(gbc.pc(), 0xe71a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe718), 0xcb);
        EXPECT(gbc.readMem(0xe719), 0xc9);
        // CB C9 0116
        gbc.setState(0x130d, 0x6dbd, 0xb2f0, 0xc391, 0x4220, 0x8476, 0x1, 0x0);
        gbc.writeMem(0x130d, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x6dbd);
        EXPECT(gbc.pc(), 0x130f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C9 0117
        gbc.setState(0x59df, 0xc82c, 0x5930, 0x7880, 0x8e91, 0xde8b, 0x0, 0x0);
        gbc.writeMem(0x59df, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0xc82c);
        EXPECT(gbc.pc(), 0x59e1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C9 0118
        gbc.setState(0x9cfc, 0xeda7, 0x1080, 0x3ab9, 0x4db6, 0x58d3, 0x0, 0x0);
        gbc.writeMem(0x9cfc, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0xeda7);
        EXPECT(gbc.pc(), 0x9cfe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9cfc), 0xcb);
        EXPECT(gbc.readMem(0x9cfd), 0xc9);
        // CB C9 0119
        gbc.setState(0x4d3c, 0xdae9, 0x20e0, 0x2738, 0x3384, 0x6395, 0x1, 0x1);
        gbc.writeMem(0x4d3c, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0xdae9);
        EXPECT(gbc.pc(), 0x4d3e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C9 011A
        gbc.setState(0x9d4b, 0xf36f, 0x4a80, 0x8864, 0xeb8d, 0x8e46, 0x0, 0x0);
        gbc.writeMem(0x9d4b, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0xf36f);
        EXPECT(gbc.pc(), 0x9d4d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9d4b), 0xcb);
        EXPECT(gbc.readMem(0x9d4c), 0xc9);
        // CB C9 011B
        gbc.setState(0x1b5b, 0x14d7, 0x9ae0, 0x45b2, 0x22e0, 0x82bc, 0x0, 0x0);
        gbc.writeMem(0x1b5b, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x14d7);
        EXPECT(gbc.pc(), 0x1b5d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C9 011C
        gbc.setState(0x38a4, 0xd0e6, 0x7990, 0x1059, 0x7a20, 0xe2a, 0x0, 0x0);
        gbc.writeMem(0x38a4, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xd0e6);
        EXPECT(gbc.pc(), 0x38a6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C9 011D
        gbc.setState(0x694c, 0xcde0, 0x2540, 0xc92, 0xdfb0, 0x14df, 0x1, 0x1);
        gbc.writeMem(0x694c, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0xcde0);
        EXPECT(gbc.pc(), 0x694e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C9 011E
        gbc.setState(0xb67, 0x154f, 0xaaa0, 0xf224, 0xd368, 0x68a0, 0x0, 0x0);
        gbc.writeMem(0xb67, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x154f);
        EXPECT(gbc.pc(), 0xb69);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C9 011F
        gbc.setState(0x691, 0xbedb, 0xf850, 0x9977, 0x154f, 0xca48, 0x1, 0x1);
        gbc.writeMem(0x691, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0xbedb);
        EXPECT(gbc.pc(), 0x693);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C9 0120
        gbc.setState(0x56b3, 0x86f5, 0xb960, 0x8b51, 0xce68, 0xdff4, 0x0, 0x1);
        gbc.writeMem(0x56b3, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x86f5);
        EXPECT(gbc.pc(), 0x56b5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C9 0121
        gbc.setState(0xe115, 0xb2de, 0xbf20, 0xc1da, 0xa583, 0xe1f5, 0x1, 0x1);
        gbc.writeMem(0xe115, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0xb2de);
        EXPECT(gbc.pc(), 0xe117);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe115), 0xcb);
        EXPECT(gbc.readMem(0xe116), 0xc9);
        // CB C9 0122
        gbc.setState(0xe8be, 0xdd0f, 0xb10, 0xb01a, 0xff47, 0xb024, 0x0, 0x0);
        gbc.writeMem(0xe8be, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0xdd0f);
        EXPECT(gbc.pc(), 0xe8c0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe8be), 0xcb);
        EXPECT(gbc.readMem(0xe8bf), 0xc9);
        // CB C9 0123
        gbc.setState(0xd981, 0x7484, 0x5e30, 0xeeb9, 0x7b1f, 0x98af, 0x0, 0x1);
        gbc.writeMem(0xd981, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x7484);
        EXPECT(gbc.pc(), 0xd983);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd981), 0xcb);
        EXPECT(gbc.readMem(0xd982), 0xc9);
        // CB C9 0124
        gbc.setState(0x2730, 0xff49, 0xd220, 0x87b6, 0x51a1, 0xaedf, 0x1, 0x0);
        gbc.writeMem(0x2730, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0xff49);
        EXPECT(gbc.pc(), 0x2732);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C9 0125
        gbc.setState(0xdc3f, 0x91e2, 0x81f0, 0x6162, 0x35f3, 0x2f92, 0x0, 0x1);
        gbc.writeMem(0xdc3f, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x91e2);
        EXPECT(gbc.pc(), 0xdc41);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdc3f), 0xcb);
        EXPECT(gbc.readMem(0xdc40), 0xc9);
        // CB C9 0126
        gbc.setState(0xb6f7, 0xc26a, 0xa030, 0xd5f5, 0xafda, 0xf461, 0x1, 0x1);
        gbc.writeMem(0xb6f7, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0xc26a);
        EXPECT(gbc.pc(), 0xb6f9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb6f7), 0xcb);
        EXPECT(gbc.readMem(0xb6f8), 0xc9);
        // CB C9 0127
        gbc.setState(0xcd3a, 0x3967, 0x5300, 0xeafd, 0xfb81, 0x8716, 0x1, 0x0);
        gbc.writeMem(0xcd3a, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x3967);
        EXPECT(gbc.pc(), 0xcd3c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcd3a), 0xcb);
        EXPECT(gbc.readMem(0xcd3b), 0xc9);
        // CB C9 0128
        gbc.setState(0xcb9b, 0x950a, 0xc2c0, 0x7caf, 0xf296, 0x4ab5, 0x0, 0x0);
        gbc.writeMem(0xcb9b, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x950a);
        EXPECT(gbc.pc(), 0xcb9d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcb9b), 0xcb);
        EXPECT(gbc.readMem(0xcb9c), 0xc9);
        // CB C9 0129
        gbc.setState(0x2ac0, 0xffbb, 0xd830, 0x63e7, 0xe4f3, 0xede6, 0x0, 0x0);
        gbc.writeMem(0x2ac0, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xffbb);
        EXPECT(gbc.pc(), 0x2ac2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C9 012A
        gbc.setState(0x2e00, 0x6c9f, 0xfd60, 0x1e0a, 0xaf05, 0x8ef, 0x1, 0x0);
        gbc.writeMem(0x2e00, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x6c9f);
        EXPECT(gbc.pc(), 0x2e02);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C9 012C
        gbc.setState(0xbe65, 0x1f0c, 0xe150, 0xe3bc, 0x3935, 0xb8e6, 0x1, 0x0);
        gbc.writeMem(0xbe65, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x1f0c);
        EXPECT(gbc.pc(), 0xbe67);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbe65), 0xcb);
        EXPECT(gbc.readMem(0xbe66), 0xc9);
        // CB C9 012E
        gbc.setState(0x627a, 0x6d7b, 0xf250, 0xad49, 0x65a7, 0x88f4, 0x1, 0x1);
        gbc.writeMem(0x627a, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x6d7b);
        EXPECT(gbc.pc(), 0x627c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C9 012F
        gbc.setState(0xd900, 0x561, 0x1450, 0xd759, 0x4580, 0x66f5, 0x1, 0x1);
        gbc.writeMem(0xd900, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x561);
        EXPECT(gbc.pc(), 0xd902);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd900), 0xcb);
        EXPECT(gbc.readMem(0xd901), 0xc9);
        // CB C9 0130
        gbc.setState(0xae6b, 0x9dea, 0xac20, 0x588e, 0x7ce4, 0x7407, 0x0, 0x1);
        gbc.writeMem(0xae6b, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x9dea);
        EXPECT(gbc.pc(), 0xae6d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xae6b), 0xcb);
        EXPECT(gbc.readMem(0xae6c), 0xc9);
        // CB C9 0131
        gbc.setState(0x3a83, 0x70b0, 0xead0, 0x59c7, 0x9294, 0xc198, 0x1, 0x1);
        gbc.writeMem(0x3a83, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x70b0);
        EXPECT(gbc.pc(), 0x3a85);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C9 0132
        gbc.setState(0x4dbc, 0x576c, 0x710, 0x5ee8, 0xd3ac, 0x56, 0x1, 0x0);
        gbc.writeMem(0x4dbc, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x576c);
        EXPECT(gbc.pc(), 0x4dbe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C9 0133
        gbc.setState(0x304f, 0xef80, 0x8da0, 0xcbc5, 0xfb7a, 0x3209, 0x0, 0x0);
        gbc.writeMem(0x304f, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0xef80);
        EXPECT(gbc.pc(), 0x3051);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C9 0134
        gbc.setState(0xde26, 0x6c0e, 0x7c90, 0xee28, 0x53cf, 0x6eab, 0x0, 0x1);
        gbc.writeMem(0xde26, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x6c0e);
        EXPECT(gbc.pc(), 0xde28);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xde26), 0xcb);
        EXPECT(gbc.readMem(0xde27), 0xc9);
        // CB C9 0135
        gbc.setState(0xde13, 0x170a, 0xe550, 0xdf72, 0x8ce1, 0x10b7, 0x1, 0x0);
        gbc.writeMem(0xde13, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x170a);
        EXPECT(gbc.pc(), 0xde15);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xde13), 0xcb);
        EXPECT(gbc.readMem(0xde14), 0xc9);
        // CB C9 0136
        gbc.setState(0x4d40, 0x8344, 0x6660, 0x94d0, 0x9e64, 0xce0d, 0x1, 0x1);
        gbc.writeMem(0x4d40, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x8344);
        EXPECT(gbc.pc(), 0x4d42);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C9 0137
        gbc.setState(0x64fc, 0xb748, 0x830, 0x4a43, 0x42b7, 0x5b02, 0x1, 0x1);
        gbc.writeMem(0x64fc, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xb748);
        EXPECT(gbc.pc(), 0x64fe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C9 0138
        gbc.setState(0x6306, 0x8a94, 0x8cc0, 0x246a, 0xfa22, 0x7ac9, 0x0, 0x1);
        gbc.writeMem(0x6306, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x8a94);
        EXPECT(gbc.pc(), 0x6308);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C9 0139
        gbc.setState(0xc494, 0x6cae, 0xf080, 0xfc0f, 0x76bf, 0x6f5a, 0x0, 0x0);
        gbc.writeMem(0xc494, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x6cae);
        EXPECT(gbc.pc(), 0xc496);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc494), 0xcb);
        EXPECT(gbc.readMem(0xc495), 0xc9);
        // CB C9 013A
        gbc.setState(0x3467, 0xc5bd, 0xba40, 0xb88, 0xbcc4, 0xeb77, 0x0, 0x1);
        gbc.writeMem(0x3467, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xc5bd);
        EXPECT(gbc.pc(), 0x3469);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C9 013B
        gbc.setState(0x6da2, 0x2c91, 0xb10, 0xfe5e, 0x4cdd, 0xebc0, 0x1, 0x1);
        gbc.writeMem(0x6da2, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x2c91);
        EXPECT(gbc.pc(), 0x6da4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C9 013C
        gbc.setState(0x3d05, 0x67e5, 0x5710, 0xa0ce, 0xc919, 0xf59, 0x0, 0x1);
        gbc.writeMem(0x3d05, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x67e5);
        EXPECT(gbc.pc(), 0x3d07);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C9 013D
        gbc.setState(0x9f5a, 0x9446, 0x4b00, 0xaa94, 0x9da5, 0xed6, 0x1, 0x0);
        gbc.writeMem(0x9f5a, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x9446);
        EXPECT(gbc.pc(), 0x9f5c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9f5a), 0xcb);
        EXPECT(gbc.readMem(0x9f5b), 0xc9);
        // CB C9 013E
        gbc.setState(0x8ff6, 0x22c8, 0x4170, 0x3988, 0xdb6c, 0xbd53, 0x0, 0x1);
        gbc.writeMem(0x8ff6, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x22c8);
        EXPECT(gbc.pc(), 0x8ff8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8ff6), 0xcb);
        EXPECT(gbc.readMem(0x8ff7), 0xc9);
        // CB C9 013F
        gbc.setState(0x1c45, 0x2864, 0x3a30, 0xb7a7, 0xdf81, 0xd05f, 0x1, 0x0);
        gbc.writeMem(0x1c45, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x2864);
        EXPECT(gbc.pc(), 0x1c47);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C9 0140
        gbc.setState(0x4444, 0x4d1b, 0xcc50, 0x5b30, 0x57cf, 0xb2a2, 0x1, 0x0);
        gbc.writeMem(0x4444, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x4d1b);
        EXPECT(gbc.pc(), 0x4446);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C9 0141
        gbc.setState(0x2f47, 0x6614, 0x9f20, 0x3bfc, 0x1e12, 0xd452, 0x1, 0x0);
        gbc.writeMem(0x2f47, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x6614);
        EXPECT(gbc.pc(), 0x2f49);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C9 0142
        gbc.setState(0xb600, 0x1d19, 0x3e00, 0xda5b, 0xeff0, 0x54ea, 0x0, 0x1);
        gbc.writeMem(0xb600, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x1d19);
        EXPECT(gbc.pc(), 0xb602);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb600), 0xcb);
        EXPECT(gbc.readMem(0xb601), 0xc9);
        // CB C9 0143
        gbc.setState(0xdcd6, 0x517f, 0x56f0, 0xe7a7, 0x2c2e, 0x40b7, 0x1, 0x1);
        gbc.writeMem(0xdcd6, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x517f);
        EXPECT(gbc.pc(), 0xdcd8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdcd6), 0xcb);
        EXPECT(gbc.readMem(0xdcd7), 0xc9);
        // CB C9 0144
        gbc.setState(0xd22c, 0xe2a, 0xad80, 0x6c65, 0x9568, 0x897a, 0x0, 0x1);
        gbc.writeMem(0xd22c, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xe2a);
        EXPECT(gbc.pc(), 0xd22e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd22c), 0xcb);
        EXPECT(gbc.readMem(0xd22d), 0xc9);
        // CB C9 0145
        gbc.setState(0x19e3, 0x3b59, 0xde00, 0xad36, 0xcd2d, 0xc89, 0x1, 0x0);
        gbc.writeMem(0x19e3, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x3b59);
        EXPECT(gbc.pc(), 0x19e5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C9 0146
        gbc.setState(0x8f2f, 0xf06, 0x3740, 0x5a86, 0x7570, 0xf7d5, 0x0, 0x0);
        gbc.writeMem(0x8f2f, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0xf06);
        EXPECT(gbc.pc(), 0x8f31);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8f2f), 0xcb);
        EXPECT(gbc.readMem(0x8f30), 0xc9);
        // CB C9 0147
        gbc.setState(0xa89, 0x4a36, 0xf570, 0xc214, 0x1d31, 0x68cf, 0x1, 0x1);
        gbc.writeMem(0xa89, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x4a36);
        EXPECT(gbc.pc(), 0xa8b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C9 0148
        gbc.setState(0x714e, 0xe84d, 0xbcd0, 0xee56, 0xfc54, 0x86a1, 0x1, 0x1);
        gbc.writeMem(0x714e, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0xe84d);
        EXPECT(gbc.pc(), 0x7150);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C9 0149
        gbc.setState(0xd8c9, 0x3d4a, 0x1eb0, 0x73e3, 0xc510, 0xf2d6, 0x0, 0x0);
        gbc.writeMem(0xd8c9, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x3d4a);
        EXPECT(gbc.pc(), 0xd8cb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd8c9), 0xcb);
        EXPECT(gbc.readMem(0xd8ca), 0xc9);
        // CB C9 014A
        gbc.setState(0x1da1, 0xc1e0, 0x3f10, 0x5fd2, 0xb42a, 0x50e4, 0x0, 0x1);
        gbc.writeMem(0x1da1, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0xc1e0);
        EXPECT(gbc.pc(), 0x1da3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C9 014B
        gbc.setState(0xd69f, 0x6df1, 0x5d40, 0xfbad, 0x7ad3, 0x2818, 0x0, 0x0);
        gbc.writeMem(0xd69f, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x6df1);
        EXPECT(gbc.pc(), 0xd6a1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd69f), 0xcb);
        EXPECT(gbc.readMem(0xd6a0), 0xc9);
        // CB C9 014C
        gbc.setState(0x97b6, 0x417c, 0x6f40, 0x24cd, 0x8f81, 0xd37b, 0x1, 0x0);
        gbc.writeMem(0x97b6, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x417c);
        EXPECT(gbc.pc(), 0x97b8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x97b6), 0xcb);
        EXPECT(gbc.readMem(0x97b7), 0xc9);
        // CB C9 014D
        gbc.setState(0xdb46, 0x3640, 0xa150, 0x72c5, 0xc6f0, 0xa73b, 0x0, 0x1);
        gbc.writeMem(0xdb46, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x3640);
        EXPECT(gbc.pc(), 0xdb48);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdb46), 0xcb);
        EXPECT(gbc.readMem(0xdb47), 0xc9);
        // CB C9 014E
        gbc.setState(0xa366, 0x4bfd, 0x5800, 0x881e, 0xcae7, 0x9f84, 0x1, 0x1);
        gbc.writeMem(0xa366, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x4bfd);
        EXPECT(gbc.pc(), 0xa368);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa366), 0xcb);
        EXPECT(gbc.readMem(0xa367), 0xc9);
        // CB C9 014F
        gbc.setState(0xc718, 0xf15b, 0xa650, 0x4ead, 0x8ce4, 0x579d, 0x1, 0x1);
        gbc.writeMem(0xc718, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0xf15b);
        EXPECT(gbc.pc(), 0xc71a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc718), 0xcb);
        EXPECT(gbc.readMem(0xc719), 0xc9);
        // CB C9 0150
        gbc.setState(0xcfef, 0x5923, 0x5280, 0x3daa, 0xe4f3, 0x97f1, 0x1, 0x1);
        gbc.writeMem(0xcfef, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x5923);
        EXPECT(gbc.pc(), 0xcff1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcfef), 0xcb);
        EXPECT(gbc.readMem(0xcff0), 0xc9);
        // CB C9 0152
        gbc.setState(0x2d33, 0x9e82, 0xfa50, 0x7bd2, 0x9ab0, 0x4ef2, 0x0, 0x0);
        gbc.writeMem(0x2d33, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x9e82);
        EXPECT(gbc.pc(), 0x2d35);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C9 0153
        gbc.setState(0x82af, 0xd461, 0xb5a0, 0xa5b5, 0x62bd, 0xcaf1, 0x0, 0x1);
        gbc.writeMem(0x82af, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0xd461);
        EXPECT(gbc.pc(), 0x82b1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x82af), 0xcb);
        EXPECT(gbc.readMem(0x82b0), 0xc9);
        // CB C9 0154
        gbc.setState(0x72ce, 0x35f3, 0x48f0, 0x56d, 0x4c9c, 0xe1e9, 0x0, 0x1);
        gbc.writeMem(0x72ce, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x35f3);
        EXPECT(gbc.pc(), 0x72d0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C9 0155
        gbc.setState(0x596d, 0x95f4, 0x8910, 0x13b2, 0x66db, 0x4448, 0x1, 0x1);
        gbc.writeMem(0x596d, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x95f4);
        EXPECT(gbc.pc(), 0x596f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C9 0156
        gbc.setState(0xce1f, 0x245f, 0xdc20, 0xb3af, 0x79c7, 0xd466, 0x0, 0x0);
        gbc.writeMem(0xce1f, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x245f);
        EXPECT(gbc.pc(), 0xce21);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xce1f), 0xcb);
        EXPECT(gbc.readMem(0xce20), 0xc9);
        // CB C9 0157
        gbc.setState(0x9b8d, 0x3bfe, 0xf6a0, 0xab4, 0xac3b, 0xa276, 0x1, 0x0);
        gbc.writeMem(0x9b8d, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x3bfe);
        EXPECT(gbc.pc(), 0x9b8f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9b8d), 0xcb);
        EXPECT(gbc.readMem(0x9b8e), 0xc9);
        // CB C9 0158
        gbc.setState(0x95b9, 0xfc11, 0x91b0, 0x40e, 0x45c6, 0x53cf, 0x0, 0x0);
        gbc.writeMem(0x95b9, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0xfc11);
        EXPECT(gbc.pc(), 0x95bb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x95b9), 0xcb);
        EXPECT(gbc.readMem(0x95ba), 0xc9);
        // CB C9 0159
        gbc.setState(0x6911, 0xdd6b, 0x62b0, 0xc271, 0x167, 0x4015, 0x1, 0x1);
        gbc.writeMem(0x6911, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0xdd6b);
        EXPECT(gbc.pc(), 0x6913);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C9 015B
        gbc.setState(0x9bb0, 0xaba3, 0x1f0, 0x75f8, 0x2d2a, 0xa8c8, 0x0, 0x1);
        gbc.writeMem(0x9bb0, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0xaba3);
        EXPECT(gbc.pc(), 0x9bb2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9bb0), 0xcb);
        EXPECT(gbc.readMem(0x9bb1), 0xc9);
        // CB C9 015C
        gbc.setState(0x5539, 0x29d5, 0x7080, 0xf903, 0x4fac, 0x296b, 0x0, 0x0);
        gbc.writeMem(0x5539, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x29d5);
        EXPECT(gbc.pc(), 0x553b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C9 015E
        gbc.setState(0x3f68, 0xd9d5, 0xd770, 0x9913, 0x21eb, 0x825f, 0x0, 0x1);
        gbc.writeMem(0x3f68, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0xd9d5);
        EXPECT(gbc.pc(), 0x3f6a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C9 015F
        gbc.setState(0x5b63, 0xa6f9, 0x4f20, 0x2396, 0x2472, 0x1570, 0x0, 0x1);
        gbc.writeMem(0x5b63, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0xa6f9);
        EXPECT(gbc.pc(), 0x5b65);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C9 0160
        gbc.setState(0xd992, 0x69d6, 0x860, 0x2747, 0xf708, 0xc9de, 0x0, 0x0);
        gbc.writeMem(0xd992, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x69d6);
        EXPECT(gbc.pc(), 0xd994);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd992), 0xcb);
        EXPECT(gbc.readMem(0xd993), 0xc9);
        // CB C9 0161
        gbc.setState(0x4a45, 0x704a, 0x3660, 0x74cd, 0xacef, 0xb191, 0x1, 0x0);
        gbc.writeMem(0x4a45, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x704a);
        EXPECT(gbc.pc(), 0x4a47);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C9 0162
        gbc.setState(0xd411, 0x9389, 0xc20, 0xab8f, 0xcf68, 0x2d4e, 0x0, 0x1);
        gbc.writeMem(0xd411, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x9389);
        EXPECT(gbc.pc(), 0xd413);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd411), 0xcb);
        EXPECT(gbc.readMem(0xd412), 0xc9);
        // CB C9 0163
        gbc.setState(0xe2d9, 0x2f00, 0x6aa0, 0x18ce, 0xcf97, 0xd9f3, 0x1, 0x1);
        gbc.writeMem(0xe2d9, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x2f00);
        EXPECT(gbc.pc(), 0xe2db);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe2d9), 0xcb);
        EXPECT(gbc.readMem(0xe2da), 0xc9);
        // CB C9 0164
        gbc.setState(0x943a, 0x3bb4, 0xd4a0, 0x2b4d, 0x3bd0, 0x5fde, 0x1, 0x1);
        gbc.writeMem(0x943a, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x3bb4);
        EXPECT(gbc.pc(), 0x943c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x943a), 0xcb);
        EXPECT(gbc.readMem(0x943b), 0xc9);
        // CB C9 0165
        gbc.setState(0xd7ec, 0x3049, 0xe4c0, 0x69b2, 0x1928, 0x7477, 0x0, 0x1);
        gbc.writeMem(0xd7ec, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x3049);
        EXPECT(gbc.pc(), 0xd7ee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd7ec), 0xcb);
        EXPECT(gbc.readMem(0xd7ed), 0xc9);
        // CB C9 0167
        gbc.setState(0xa7a8, 0x80c1, 0x6510, 0x6dd2, 0xb6db, 0xd5f8, 0x0, 0x0);
        gbc.writeMem(0xa7a8, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x80c1);
        EXPECT(gbc.pc(), 0xa7aa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa7a8), 0xcb);
        EXPECT(gbc.readMem(0xa7a9), 0xc9);
        // CB C9 0168
        gbc.setState(0x8594, 0x65de, 0xce50, 0x4d51, 0x353c, 0x5d0d, 0x0, 0x0);
        gbc.writeMem(0x8594, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x65de);
        EXPECT(gbc.pc(), 0x8596);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8594), 0xcb);
        EXPECT(gbc.readMem(0x8595), 0xc9);
        // CB C9 0169
        gbc.setState(0x5882, 0x14d2, 0x6a20, 0x9377, 0xcdd2, 0xc70a, 0x0, 0x0);
        gbc.writeMem(0x5882, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x14d2);
        EXPECT(gbc.pc(), 0x5884);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C9 016A
        gbc.setState(0x4619, 0xada3, 0xe110, 0xc9d4, 0x2238, 0xcacd, 0x0, 0x1);
        gbc.writeMem(0x4619, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0xada3);
        EXPECT(gbc.pc(), 0x461b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C9 016B
        gbc.setState(0x8128, 0xbf7d, 0xb2b0, 0xc318, 0x9a97, 0x2ffa, 0x1, 0x1);
        gbc.writeMem(0x8128, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xbf7d);
        EXPECT(gbc.pc(), 0x812a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8128), 0xcb);
        EXPECT(gbc.readMem(0x8129), 0xc9);
        // CB C9 016C
        gbc.setState(0x6e25, 0xee4d, 0xf290, 0x1bfd, 0x87eb, 0x1557, 0x1, 0x0);
        gbc.writeMem(0x6e25, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0xee4d);
        EXPECT(gbc.pc(), 0x6e27);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C9 016D
        gbc.setState(0x3f71, 0xe41f, 0x7900, 0xa074, 0x7848, 0x89d8, 0x0, 0x0);
        gbc.writeMem(0x3f71, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0xe41f);
        EXPECT(gbc.pc(), 0x3f73);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C9 016E
        gbc.setState(0x7fb2, 0xbb7d, 0xb5b0, 0x2b3f, 0x2d8d, 0x50e4, 0x1, 0x0);
        gbc.writeMem(0x7fb2, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0xbb7d);
        EXPECT(gbc.pc(), 0x7fb4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C9 016F
        gbc.setState(0x4d31, 0xb6a0, 0xe3a0, 0x863e, 0x8905, 0x7314, 0x1, 0x1);
        gbc.writeMem(0x4d31, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0xb6a0);
        EXPECT(gbc.pc(), 0x4d33);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C9 0170
        gbc.setState(0xa2d7, 0x98a3, 0x5710, 0xc72f, 0x2a69, 0xc9a9, 0x0, 0x1);
        gbc.writeMem(0xa2d7, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x98a3);
        EXPECT(gbc.pc(), 0xa2d9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa2d7), 0xcb);
        EXPECT(gbc.readMem(0xa2d8), 0xc9);
        // CB C9 0171
        gbc.setState(0xa59c, 0xb73e, 0xffd0, 0x2d9, 0x75ff, 0x978e, 0x1, 0x0);
        gbc.writeMem(0xa59c, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0xb73e);
        EXPECT(gbc.pc(), 0xa59e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa59c), 0xcb);
        EXPECT(gbc.readMem(0xa59d), 0xc9);
        // CB C9 0172
        gbc.setState(0x1208, 0x2180, 0x7470, 0x1d2a, 0xc4b7, 0x61d0, 0x0, 0x1);
        gbc.writeMem(0x1208, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x2180);
        EXPECT(gbc.pc(), 0x120a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C9 0173
        gbc.setState(0xbb4d, 0xf8d8, 0xff00, 0x58ed, 0x3352, 0x9eff, 0x1, 0x0);
        gbc.writeMem(0xbb4d, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0xf8d8);
        EXPECT(gbc.pc(), 0xbb4f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbb4d), 0xcb);
        EXPECT(gbc.readMem(0xbb4e), 0xc9);
        // CB C9 0175
        gbc.setState(0x44e4, 0x33a7, 0xbbd0, 0x8566, 0x32b8, 0xeb81, 0x1, 0x1);
        gbc.writeMem(0x44e4, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x33a7);
        EXPECT(gbc.pc(), 0x44e6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C9 0176
        gbc.setState(0xa152, 0x1ee, 0xd580, 0xa8e, 0xc3a0, 0xc8d1, 0x0, 0x0);
        gbc.writeMem(0xa152, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x1ee);
        EXPECT(gbc.pc(), 0xa154);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa152), 0xcb);
        EXPECT(gbc.readMem(0xa153), 0xc9);
        // CB C9 0177
        gbc.setState(0xccf4, 0x2211, 0xdf0, 0x7b64, 0x4501, 0x1996, 0x0, 0x0);
        gbc.writeMem(0xccf4, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x2211);
        EXPECT(gbc.pc(), 0xccf6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xccf4), 0xcb);
        EXPECT(gbc.readMem(0xccf5), 0xc9);
        // CB C9 0178
        gbc.setState(0xc14e, 0x821, 0x92a0, 0x9a21, 0xb151, 0xbdcd, 0x0, 0x0);
        gbc.writeMem(0xc14e, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x821);
        EXPECT(gbc.pc(), 0xc150);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc14e), 0xcb);
        EXPECT(gbc.readMem(0xc14f), 0xc9);
        // CB C9 0179
        gbc.setState(0x9642, 0x8079, 0xd670, 0x56de, 0xe548, 0x4b9, 0x1, 0x0);
        gbc.writeMem(0x9642, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x8079);
        EXPECT(gbc.pc(), 0x9644);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9642), 0xcb);
        EXPECT(gbc.readMem(0x9643), 0xc9);
        // CB C9 017A
        gbc.setState(0x76d4, 0x5726, 0x9fb0, 0x43a4, 0x6b7d, 0x9c7d, 0x1, 0x1);
        gbc.writeMem(0x76d4, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x5726);
        EXPECT(gbc.pc(), 0x76d6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C9 017B
        gbc.setState(0x5dda, 0x31ae, 0xde40, 0x38a1, 0xd9f3, 0x9105, 0x1, 0x0);
        gbc.writeMem(0x5dda, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x31ae);
        EXPECT(gbc.pc(), 0x5ddc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C9 017C
        gbc.setState(0xbc7e, 0x34f0, 0x6a60, 0x13d1, 0x9c07, 0xc48a, 0x1, 0x0);
        gbc.writeMem(0xbc7e, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x34f0);
        EXPECT(gbc.pc(), 0xbc80);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbc7e), 0xcb);
        EXPECT(gbc.readMem(0xbc7f), 0xc9);
        // CB C9 017D
        gbc.setState(0xca17, 0x4d35, 0xc980, 0x4e60, 0x55fe, 0x838e, 0x0, 0x0);
        gbc.writeMem(0xca17, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x4d35);
        EXPECT(gbc.pc(), 0xca19);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xca17), 0xcb);
        EXPECT(gbc.readMem(0xca18), 0xc9);
        // CB C9 017E
        gbc.setState(0x6d2f, 0x2ea8, 0xb1b0, 0x8c47, 0x5c5f, 0x1a24, 0x1, 0x1);
        gbc.writeMem(0x6d2f, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x2ea8);
        EXPECT(gbc.pc(), 0x6d31);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C9 017F
        gbc.setState(0x6926, 0x9876, 0x3020, 0xbd61, 0x7bf7, 0x4efa, 0x0, 0x0);
        gbc.writeMem(0x6926, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x9876);
        EXPECT(gbc.pc(), 0x6928);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C9 0181
        gbc.setState(0x2e2e, 0xab1a, 0x5030, 0x1dce, 0xd886, 0xcd, 0x0, 0x0);
        gbc.writeMem(0x2e2e, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0xab1a);
        EXPECT(gbc.pc(), 0x2e30);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C9 0182
        gbc.setState(0x86d6, 0xa584, 0xc60, 0x644, 0xef9e, 0x63ea, 0x0, 0x0);
        gbc.writeMem(0x86d6, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0xa584);
        EXPECT(gbc.pc(), 0x86d8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x86d6), 0xcb);
        EXPECT(gbc.readMem(0x86d7), 0xc9);
        // CB C9 0183
        gbc.setState(0xd2ec, 0x6f11, 0xd4b0, 0x579c, 0xd754, 0xbfa6, 0x1, 0x1);
        gbc.writeMem(0xd2ec, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x6f11);
        EXPECT(gbc.pc(), 0xd2ee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd2ec), 0xcb);
        EXPECT(gbc.readMem(0xd2ed), 0xc9);
        // CB C9 0184
        gbc.setState(0xc5a4, 0x8495, 0x4de0, 0x2387, 0xb86, 0x4b2c, 0x0, 0x0);
        gbc.writeMem(0xc5a4, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x8495);
        EXPECT(gbc.pc(), 0xc5a6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc5a4), 0xcb);
        EXPECT(gbc.readMem(0xc5a5), 0xc9);
        // CB C9 0185
        gbc.setState(0xa81f, 0xfae5, 0x3f50, 0x9aa5, 0x3cab, 0x1631, 0x0, 0x0);
        gbc.writeMem(0xa81f, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xfae5);
        EXPECT(gbc.pc(), 0xa821);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa81f), 0xcb);
        EXPECT(gbc.readMem(0xa820), 0xc9);
        // CB C9 0186
        gbc.setState(0xd3c1, 0x90b5, 0xa450, 0x38ea, 0x4a7, 0x7bd, 0x1, 0x1);
        gbc.writeMem(0xd3c1, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x90b5);
        EXPECT(gbc.pc(), 0xd3c3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd3c1), 0xcb);
        EXPECT(gbc.readMem(0xd3c2), 0xc9);
        // CB C9 0187
        gbc.setState(0xa954, 0x2ff6, 0xbea0, 0x3152, 0xefc0, 0x77f6, 0x1, 0x0);
        gbc.writeMem(0xa954, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x2ff6);
        EXPECT(gbc.pc(), 0xa956);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa954), 0xcb);
        EXPECT(gbc.readMem(0xa955), 0xc9);
        // CB C9 0188
        gbc.setState(0x808f, 0x3d00, 0x3190, 0x4e31, 0xfd9, 0x48ab, 0x1, 0x0);
        gbc.writeMem(0x808f, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x3d00);
        EXPECT(gbc.pc(), 0x8091);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x808f), 0xcb);
        EXPECT(gbc.readMem(0x8090), 0xc9);
        // CB C9 0189
        gbc.setState(0xd3c3, 0xd76d, 0x8f60, 0xe105, 0x1e47, 0x621e, 0x1, 0x1);
        gbc.writeMem(0xd3c3, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0xd76d);
        EXPECT(gbc.pc(), 0xd3c5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd3c3), 0xcb);
        EXPECT(gbc.readMem(0xd3c4), 0xc9);
        // CB C9 018A
        gbc.setState(0xa2a4, 0x5a72, 0xddd0, 0x49df, 0x61e8, 0x264a, 0x0, 0x0);
        gbc.writeMem(0xa2a4, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x5a72);
        EXPECT(gbc.pc(), 0xa2a6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa2a4), 0xcb);
        EXPECT(gbc.readMem(0xa2a5), 0xc9);
        // CB C9 018B
        gbc.setState(0xc29c, 0x40b9, 0xf3d0, 0xf9c, 0xa362, 0x778d, 0x1, 0x1);
        gbc.writeMem(0xc29c, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x40b9);
        EXPECT(gbc.pc(), 0xc29e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc29c), 0xcb);
        EXPECT(gbc.readMem(0xc29d), 0xc9);
        // CB C9 018C
        gbc.setState(0xdf62, 0x3254, 0xb90, 0x8a6, 0x3c, 0xbe7f, 0x1, 0x1);
        gbc.writeMem(0xdf62, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x3254);
        EXPECT(gbc.pc(), 0xdf64);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdf62), 0xcb);
        EXPECT(gbc.readMem(0xdf63), 0xc9);
        // CB C9 018D
        gbc.setState(0x153b, 0x2d5c, 0x30f0, 0x6ef6, 0x7983, 0x152e, 0x0, 0x1);
        gbc.writeMem(0x153b, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x2d5c);
        EXPECT(gbc.pc(), 0x153d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C9 018E
        gbc.setState(0x682d, 0x3230, 0xf7d0, 0x2cd4, 0xe8cd, 0xdb83, 0x0, 0x1);
        gbc.writeMem(0x682d, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x3230);
        EXPECT(gbc.pc(), 0x682f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C9 018F
        gbc.setState(0x2e4b, 0x594d, 0x5cd0, 0xcf, 0xb4fc, 0xcbd0, 0x1, 0x0);
        gbc.writeMem(0x2e4b, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x594d);
        EXPECT(gbc.pc(), 0x2e4d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C9 0190
        gbc.setState(0x8e83, 0x910a, 0xca70, 0xef48, 0x93, 0xe04a, 0x1, 0x1);
        gbc.writeMem(0x8e83, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x910a);
        EXPECT(gbc.pc(), 0x8e85);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8e83), 0xcb);
        EXPECT(gbc.readMem(0x8e84), 0xc9);
        // CB C9 0191
        gbc.setState(0xba0e, 0xd243, 0x6d30, 0x8223, 0xf5b2, 0x4b6d, 0x1, 0x0);
        gbc.writeMem(0xba0e, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0xd243);
        EXPECT(gbc.pc(), 0xba10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xba0e), 0xcb);
        EXPECT(gbc.readMem(0xba0f), 0xc9);
        // CB C9 0192
        gbc.setState(0x8e7, 0xc992, 0x93a0, 0x84ef, 0xfda5, 0x2a8b, 0x1, 0x1);
        gbc.writeMem(0x8e7, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0xc992);
        EXPECT(gbc.pc(), 0x8e9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C9 0193
        gbc.setState(0xd033, 0x342d, 0xe0a0, 0x7e8e, 0xc7d9, 0xe4d1, 0x0, 0x1);
        gbc.writeMem(0xd033, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x342d);
        EXPECT(gbc.pc(), 0xd035);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd033), 0xcb);
        EXPECT(gbc.readMem(0xd034), 0xc9);
        // CB C9 0194
        gbc.setState(0xd6fa, 0x9f71, 0x690, 0x7b9, 0x6a99, 0x62cd, 0x1, 0x1);
        gbc.writeMem(0xd6fa, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x9f71);
        EXPECT(gbc.pc(), 0xd6fc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd6fa), 0xcb);
        EXPECT(gbc.readMem(0xd6fb), 0xc9);
        // CB C9 0195
        gbc.setState(0x8845, 0xfa9e, 0xf000, 0x8472, 0xcdf0, 0x5606, 0x0, 0x1);
        gbc.writeMem(0x8845, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0xfa9e);
        EXPECT(gbc.pc(), 0x8847);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8845), 0xcb);
        EXPECT(gbc.readMem(0x8846), 0xc9);
        // CB C9 0196
        gbc.setState(0x1314, 0x5dc8, 0x8680, 0x5887, 0xab1b, 0xcaee, 0x0, 0x0);
        gbc.writeMem(0x1314, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x5dc8);
        EXPECT(gbc.pc(), 0x1316);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C9 0197
        gbc.setState(0xdf2f, 0xd39a, 0xd1a0, 0xd864, 0x190c, 0x9f52, 0x0, 0x0);
        gbc.writeMem(0xdf2f, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0xd39a);
        EXPECT(gbc.pc(), 0xdf31);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdf2f), 0xcb);
        EXPECT(gbc.readMem(0xdf30), 0xc9);
        // CB C9 0198
        gbc.setState(0xb0f9, 0xca90, 0xd170, 0xb3a4, 0x488f, 0xd818, 0x0, 0x0);
        gbc.writeMem(0xb0f9, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xca90);
        EXPECT(gbc.pc(), 0xb0fb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb0f9), 0xcb);
        EXPECT(gbc.readMem(0xb0fa), 0xc9);
        // CB C9 0199
        gbc.setState(0xcd07, 0x50f6, 0x1d70, 0xfd8, 0x8bc9, 0x631f, 0x1, 0x0);
        gbc.writeMem(0xcd07, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x50f6);
        EXPECT(gbc.pc(), 0xcd09);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcd07), 0xcb);
        EXPECT(gbc.readMem(0xcd08), 0xc9);
        // CB C9 019A
        gbc.setState(0x8ca3, 0xb8c, 0x3ab0, 0x7167, 0x7843, 0x169f, 0x1, 0x1);
        gbc.writeMem(0x8ca3, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0xb8c);
        EXPECT(gbc.pc(), 0x8ca5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8ca3), 0xcb);
        EXPECT(gbc.readMem(0x8ca4), 0xc9);
        // CB C9 019B
        gbc.setState(0x6397, 0x98f1, 0x1b30, 0xb806, 0xc90c, 0x78ee, 0x0, 0x0);
        gbc.writeMem(0x6397, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x98f1);
        EXPECT(gbc.pc(), 0x6399);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C9 019C
        gbc.setState(0x6e38, 0xee1c, 0x3c0, 0xe5a8, 0x40a7, 0x78d6, 0x0, 0x0);
        gbc.writeMem(0x6e38, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0xee1c);
        EXPECT(gbc.pc(), 0x6e3a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C9 019D
        gbc.setState(0x8873, 0x8368, 0xac30, 0x9aa1, 0x8bd1, 0x35dd, 0x1, 0x0);
        gbc.writeMem(0x8873, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x8368);
        EXPECT(gbc.pc(), 0x8875);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8873), 0xcb);
        EXPECT(gbc.readMem(0x8874), 0xc9);
        // CB C9 019E
        gbc.setState(0x4ca9, 0xa967, 0xb030, 0x9a6, 0xd62d, 0x4da6, 0x1, 0x0);
        gbc.writeMem(0x4ca9, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0xa967);
        EXPECT(gbc.pc(), 0x4cab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C9 019F
        gbc.setState(0xe435, 0xaa5c, 0x1e40, 0xe748, 0xbfb4, 0x37a2, 0x1, 0x1);
        gbc.writeMem(0xe435, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0xaa5c);
        EXPECT(gbc.pc(), 0xe437);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe435), 0xcb);
        EXPECT(gbc.readMem(0xe436), 0xc9);
        // CB C9 01A0
        gbc.setState(0x3e83, 0x7d6d, 0x80, 0xc861, 0xb2a0, 0xf8ce, 0x1, 0x1);
        gbc.writeMem(0x3e83, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x7d6d);
        EXPECT(gbc.pc(), 0x3e85);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C9 01A1
        gbc.setState(0x2f03, 0xbf56, 0x1750, 0x4af5, 0x3050, 0x5dee, 0x0, 0x1);
        gbc.writeMem(0x2f03, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0xbf56);
        EXPECT(gbc.pc(), 0x2f05);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C9 01A2
        gbc.setState(0x2bae, 0xc4ce, 0x7b10, 0x4c0a, 0x382c, 0x5e84, 0x0, 0x0);
        gbc.writeMem(0x2bae, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0xc4ce);
        EXPECT(gbc.pc(), 0x2bb0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C9 01A3
        gbc.setState(0xde6d, 0xb5db, 0xdde0, 0x6899, 0xcf20, 0x54f, 0x0, 0x1);
        gbc.writeMem(0xde6d, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0xb5db);
        EXPECT(gbc.pc(), 0xde6f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xde6d), 0xcb);
        EXPECT(gbc.readMem(0xde6e), 0xc9);
        // CB C9 01A4
        gbc.setState(0x49ab, 0xb47a, 0x6590, 0xc068, 0x34e2, 0x1de1, 0x0, 0x1);
        gbc.writeMem(0x49ab, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xb47a);
        EXPECT(gbc.pc(), 0x49ad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C9 01A5
        gbc.setState(0x5d53, 0x4117, 0xa240, 0xdad7, 0x13be, 0xcdba, 0x1, 0x1);
        gbc.writeMem(0x5d53, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x4117);
        EXPECT(gbc.pc(), 0x5d55);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C9 01A6
        gbc.setState(0xd479, 0x9a76, 0x4ff0, 0x877d, 0xa455, 0xca9a, 0x1, 0x1);
        gbc.writeMem(0xd479, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x9a76);
        EXPECT(gbc.pc(), 0xd47b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd479), 0xcb);
        EXPECT(gbc.readMem(0xd47a), 0xc9);
        // CB C9 01A7
        gbc.setState(0xeea1, 0x8a78, 0x7e70, 0xa298, 0xa364, 0x73ff, 0x1, 0x0);
        gbc.writeMem(0xeea1, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x8a78);
        EXPECT(gbc.pc(), 0xeea3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeea1), 0xcb);
        EXPECT(gbc.readMem(0xeea2), 0xc9);
        // CB C9 01A8
        gbc.setState(0xcfc7, 0xb5b8, 0x9890, 0x6b9, 0x4726, 0x9334, 0x0, 0x1);
        gbc.writeMem(0xcfc7, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xb5b8);
        EXPECT(gbc.pc(), 0xcfc9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcfc7), 0xcb);
        EXPECT(gbc.readMem(0xcfc8), 0xc9);
        // CB C9 01A9
        gbc.setState(0x9ed8, 0x3629, 0x4500, 0xe5d, 0x29d9, 0xf9aa, 0x0, 0x0);
        gbc.writeMem(0x9ed8, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x3629);
        EXPECT(gbc.pc(), 0x9eda);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9ed8), 0xcb);
        EXPECT(gbc.readMem(0x9ed9), 0xc9);
        // CB C9 01AA
        gbc.setState(0xe180, 0x1122, 0x3f20, 0x35f0, 0x1851, 0x770a, 0x1, 0x0);
        gbc.writeMem(0xe180, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x1122);
        EXPECT(gbc.pc(), 0xe182);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe180), 0xcb);
        EXPECT(gbc.readMem(0xe181), 0xc9);
        // CB C9 01AC
        gbc.setState(0x9e62, 0x1894, 0xaf90, 0x863a, 0x672, 0x21fc, 0x1, 0x1);
        gbc.writeMem(0x9e62, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x1894);
        EXPECT(gbc.pc(), 0x9e64);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9e62), 0xcb);
        EXPECT(gbc.readMem(0x9e63), 0xc9);
        // CB C9 01AD
        gbc.setState(0xc0a1, 0x4595, 0xb320, 0x8e05, 0xb363, 0xb8f7, 0x1, 0x1);
        gbc.writeMem(0xc0a1, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x4595);
        EXPECT(gbc.pc(), 0xc0a3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc0a1), 0xcb);
        EXPECT(gbc.readMem(0xc0a2), 0xc9);
        // CB C9 01AE
        gbc.setState(0xa335, 0x5949, 0x59f0, 0xb608, 0xe642, 0x956, 0x1, 0x0);
        gbc.writeMem(0xa335, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x5949);
        EXPECT(gbc.pc(), 0xa337);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa335), 0xcb);
        EXPECT(gbc.readMem(0xa336), 0xc9);
        // CB C9 01AF
        gbc.setState(0xb505, 0x58ca, 0x230, 0x224f, 0x8f7a, 0x280e, 0x1, 0x1);
        gbc.writeMem(0xb505, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x58ca);
        EXPECT(gbc.pc(), 0xb507);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb505), 0xcb);
        EXPECT(gbc.readMem(0xb506), 0xc9);
        // CB C9 01B0
        gbc.setState(0x1c5b, 0x4737, 0x2da0, 0x669f, 0xee69, 0x8934, 0x1, 0x0);
        gbc.writeMem(0x1c5b, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x4737);
        EXPECT(gbc.pc(), 0x1c5d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C9 01B2
        gbc.setState(0x1534, 0x6d2a, 0xa640, 0xe34c, 0x2fe5, 0x7c6d, 0x0, 0x0);
        gbc.writeMem(0x1534, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x6d2a);
        EXPECT(gbc.pc(), 0x1536);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C9 01B3
        gbc.setState(0x2254, 0xe9fb, 0x5330, 0x881d, 0xc7ea, 0x621b, 0x0, 0x0);
        gbc.writeMem(0x2254, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0xe9fb);
        EXPECT(gbc.pc(), 0x2256);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C9 01B4
        gbc.setState(0xb440, 0xd1b6, 0xdb60, 0x2b23, 0xa11d, 0xbbee, 0x0, 0x1);
        gbc.writeMem(0xb440, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0xd1b6);
        EXPECT(gbc.pc(), 0xb442);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb440), 0xcb);
        EXPECT(gbc.readMem(0xb441), 0xc9);
        // CB C9 01B5
        gbc.setState(0xa9e, 0x7d6, 0x1d30, 0xf09, 0xe342, 0xf936, 0x0, 0x0);
        gbc.writeMem(0xa9e, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x7d6);
        EXPECT(gbc.pc(), 0xaa0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C9 01B6
        gbc.setState(0x8081, 0xe99e, 0xc4b0, 0x258, 0x17ea, 0x1a46, 0x0, 0x1);
        gbc.writeMem(0x8081, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0xe99e);
        EXPECT(gbc.pc(), 0x8083);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8081), 0xcb);
        EXPECT(gbc.readMem(0x8082), 0xc9);
        // CB C9 01B7
        gbc.setState(0xe64b, 0x28dc, 0x4ae0, 0x2cff, 0x131b, 0x1700, 0x0, 0x1);
        gbc.writeMem(0xe64b, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x28dc);
        EXPECT(gbc.pc(), 0xe64d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe64b), 0xcb);
        EXPECT(gbc.readMem(0xe64c), 0xc9);
        // CB C9 01B8
        gbc.setState(0x52f9, 0x39cf, 0x9c0, 0x9c82, 0xecac, 0x5808, 0x1, 0x1);
        gbc.writeMem(0x52f9, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x39cf);
        EXPECT(gbc.pc(), 0x52fb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C9 01BA
        gbc.setState(0xadf2, 0xacf1, 0x3ca0, 0xc7f2, 0xd7b, 0x6145, 0x1, 0x0);
        gbc.writeMem(0xadf2, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0xacf1);
        EXPECT(gbc.pc(), 0xadf4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xadf2), 0xcb);
        EXPECT(gbc.readMem(0xadf3), 0xc9);
        // CB C9 01BB
        gbc.setState(0x4eda, 0xad0f, 0xb3f0, 0xbb9b, 0xdd3c, 0x8d79, 0x0, 0x1);
        gbc.writeMem(0x4eda, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xad0f);
        EXPECT(gbc.pc(), 0x4edc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C9 01BC
        gbc.setState(0x8adf, 0x174a, 0xc120, 0x66fe, 0xc19d, 0x9854, 0x1, 0x0);
        gbc.writeMem(0x8adf, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x174a);
        EXPECT(gbc.pc(), 0x8ae1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8adf), 0xcb);
        EXPECT(gbc.readMem(0x8ae0), 0xc9);
        // CB C9 01BD
        gbc.setState(0xdc05, 0xc095, 0x70a0, 0x1287, 0x40b1, 0x7c8, 0x1, 0x0);
        gbc.writeMem(0xdc05, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0xc095);
        EXPECT(gbc.pc(), 0xdc07);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdc05), 0xcb);
        EXPECT(gbc.readMem(0xdc06), 0xc9);
        // CB C9 01BE
        gbc.setState(0xe796, 0x5f56, 0x8cd0, 0xc9e0, 0xcb82, 0x4c42, 0x0, 0x1);
        gbc.writeMem(0xe796, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x5f56);
        EXPECT(gbc.pc(), 0xe798);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe796), 0xcb);
        EXPECT(gbc.readMem(0xe797), 0xc9);
        // CB C9 01BF
        gbc.setState(0x4971, 0x93b9, 0xc380, 0x6cc1, 0x79d5, 0x338e, 0x0, 0x0);
        gbc.writeMem(0x4971, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x93b9);
        EXPECT(gbc.pc(), 0x4973);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C9 01C0
        gbc.setState(0x8042, 0x6456, 0x9d40, 0xc75c, 0x1330, 0x82ec, 0x0, 0x1);
        gbc.writeMem(0x8042, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x6456);
        EXPECT(gbc.pc(), 0x8044);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8042), 0xcb);
        EXPECT(gbc.readMem(0x8043), 0xc9);
        // CB C9 01C1
        gbc.setState(0xd949, 0x8b4a, 0x50a0, 0xf7ec, 0x47f0, 0xdf8d, 0x0, 0x0);
        gbc.writeMem(0xd949, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x8b4a);
        EXPECT(gbc.pc(), 0xd94b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd949), 0xcb);
        EXPECT(gbc.readMem(0xd94a), 0xc9);
        // CB C9 01C2
        gbc.setState(0xbaf8, 0x75c7, 0xdad0, 0x1da7, 0x99bc, 0x8a4e, 0x1, 0x1);
        gbc.writeMem(0xbaf8, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x75c7);
        EXPECT(gbc.pc(), 0xbafa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbaf8), 0xcb);
        EXPECT(gbc.readMem(0xbaf9), 0xc9);
        // CB C9 01C4
        gbc.setState(0xe333, 0x8a4a, 0xf240, 0x211d, 0x4c8d, 0x2114, 0x0, 0x1);
        gbc.writeMem(0xe333, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x8a4a);
        EXPECT(gbc.pc(), 0xe335);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe333), 0xcb);
        EXPECT(gbc.readMem(0xe334), 0xc9);
        // CB C9 01C5
        gbc.setState(0x5f34, 0xb2df, 0x4070, 0x99d1, 0x1f9f, 0xaaa2, 0x0, 0x1);
        gbc.writeMem(0x5f34, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0xb2df);
        EXPECT(gbc.pc(), 0x5f36);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C9 01C6
        gbc.setState(0xbd25, 0x8221, 0xbc90, 0x87a9, 0xccaa, 0xb957, 0x0, 0x1);
        gbc.writeMem(0xbd25, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x8221);
        EXPECT(gbc.pc(), 0xbd27);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbd25), 0xcb);
        EXPECT(gbc.readMem(0xbd26), 0xc9);
        // CB C9 01C7
        gbc.setState(0x79e4, 0x4d0, 0x5940, 0x5c81, 0x7419, 0xbe1c, 0x0, 0x0);
        gbc.writeMem(0x79e4, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x4d0);
        EXPECT(gbc.pc(), 0x79e6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C9 01C8
        gbc.setState(0x2c57, 0xe0fe, 0xcf50, 0xca11, 0x3de3, 0x729b, 0x1, 0x0);
        gbc.writeMem(0x2c57, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0xe0fe);
        EXPECT(gbc.pc(), 0x2c59);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C9 01C9
        gbc.setState(0x3296, 0x1835, 0x2860, 0x22bb, 0x5860, 0x5209, 0x1, 0x0);
        gbc.writeMem(0x3296, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x1835);
        EXPECT(gbc.pc(), 0x3298);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C9 01CA
        gbc.setState(0xaa1e, 0x717b, 0xd400, 0xaf39, 0x63c6, 0xea7b, 0x1, 0x1);
        gbc.writeMem(0xaa1e, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x717b);
        EXPECT(gbc.pc(), 0xaa20);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaa1e), 0xcb);
        EXPECT(gbc.readMem(0xaa1f), 0xc9);
        // CB C9 01CB
        gbc.setState(0x7710, 0x64f9, 0x6bd0, 0xded, 0xe203, 0x33e6, 0x1, 0x0);
        gbc.writeMem(0x7710, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x64f9);
        EXPECT(gbc.pc(), 0x7712);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C9 01CC
        gbc.setState(0x8949, 0xc72b, 0xbcc0, 0x62c5, 0x3a75, 0x5558, 0x1, 0x1);
        gbc.writeMem(0x8949, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0xc72b);
        EXPECT(gbc.pc(), 0x894b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8949), 0xcb);
        EXPECT(gbc.readMem(0x894a), 0xc9);
        // CB C9 01CD
        gbc.setState(0x4c1e, 0x2187, 0x5c60, 0xb62b, 0x8620, 0x2e9c, 0x1, 0x0);
        gbc.writeMem(0x4c1e, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x2187);
        EXPECT(gbc.pc(), 0x4c20);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C9 01CE
        gbc.setState(0xb5e1, 0xffcf, 0xfe00, 0xf263, 0x1739, 0x3d6a, 0x0, 0x1);
        gbc.writeMem(0xb5e1, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xffcf);
        EXPECT(gbc.pc(), 0xb5e3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb5e1), 0xcb);
        EXPECT(gbc.readMem(0xb5e2), 0xc9);
        // CB C9 01CF
        gbc.setState(0x103b, 0x9128, 0x3a70, 0x58d0, 0x5d48, 0xf8e3, 0x1, 0x1);
        gbc.writeMem(0x103b, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x9128);
        EXPECT(gbc.pc(), 0x103d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C9 01D0
        gbc.setState(0x3500, 0x9123, 0x3a0, 0x10ec, 0xd98c, 0x1ae0, 0x1, 0x0);
        gbc.writeMem(0x3500, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x9123);
        EXPECT(gbc.pc(), 0x3502);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C9 01D1
        gbc.setState(0xbbf5, 0x65e7, 0xc620, 0x2fd2, 0x69a4, 0xcc, 0x0, 0x0);
        gbc.writeMem(0xbbf5, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x65e7);
        EXPECT(gbc.pc(), 0xbbf7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbbf5), 0xcb);
        EXPECT(gbc.readMem(0xbbf6), 0xc9);
        // CB C9 01D2
        gbc.setState(0x1a3b, 0x4a0a, 0x7750, 0x78f, 0x117a, 0x8889, 0x0, 0x0);
        gbc.writeMem(0x1a3b, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x4a0a);
        EXPECT(gbc.pc(), 0x1a3d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C9 01D3
        gbc.setState(0x2f70, 0x26b4, 0x8840, 0xcf98, 0x62cc, 0xa3d3, 0x1, 0x0);
        gbc.writeMem(0x2f70, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x26b4);
        EXPECT(gbc.pc(), 0x2f72);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C9 01D4
        gbc.setState(0x22df, 0xde48, 0x330, 0xbf3d, 0x2810, 0x3e5c, 0x1, 0x1);
        gbc.writeMem(0x22df, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0xde48);
        EXPECT(gbc.pc(), 0x22e1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C9 01D5
        gbc.setState(0x123f, 0x6296, 0xcd90, 0xaf5, 0x6f48, 0xc92d, 0x1, 0x0);
        gbc.writeMem(0x123f, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x6296);
        EXPECT(gbc.pc(), 0x1241);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C9 01D6
        gbc.setState(0xbb1d, 0x72ce, 0x6ac0, 0xf21d, 0xa1ff, 0xc894, 0x1, 0x0);
        gbc.writeMem(0xbb1d, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x72ce);
        EXPECT(gbc.pc(), 0xbb1f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbb1d), 0xcb);
        EXPECT(gbc.readMem(0xbb1e), 0xc9);
        // CB C9 01D7
        gbc.setState(0x6c3c, 0x4072, 0x5080, 0x8153, 0xb48c, 0x457, 0x0, 0x0);
        gbc.writeMem(0x6c3c, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x4072);
        EXPECT(gbc.pc(), 0x6c3e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C9 01D8
        gbc.setState(0x343b, 0xadd9, 0x4b0, 0xdcb4, 0x9ad0, 0xefc8, 0x1, 0x1);
        gbc.writeMem(0x343b, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0xadd9);
        EXPECT(gbc.pc(), 0x343d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C9 01D9
        gbc.setState(0x4308, 0xd7b2, 0x4350, 0xd2b7, 0x1d92, 0x9393, 0x1, 0x1);
        gbc.writeMem(0x4308, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0xd7b2);
        EXPECT(gbc.pc(), 0x430a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C9 01DA
        gbc.setState(0x7d4f, 0x2abb, 0x8760, 0x5094, 0x29be, 0x9ba6, 0x1, 0x0);
        gbc.writeMem(0x7d4f, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x2abb);
        EXPECT(gbc.pc(), 0x7d51);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C9 01DB
        gbc.setState(0x7c0c, 0x964, 0x4fd0, 0x1df7, 0x1c84, 0xfddf, 0x1, 0x0);
        gbc.writeMem(0x7c0c, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x964);
        EXPECT(gbc.pc(), 0x7c0e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C9 01DC
        gbc.setState(0x84c6, 0x98d7, 0x6960, 0xe608, 0x39e6, 0xf0c5, 0x1, 0x0);
        gbc.writeMem(0x84c6, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x98d7);
        EXPECT(gbc.pc(), 0x84c8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x84c6), 0xcb);
        EXPECT(gbc.readMem(0x84c7), 0xc9);
        // CB C9 01DD
        gbc.setState(0xb61f, 0xe7dd, 0x7110, 0xbaac, 0x5edb, 0x6d51, 0x1, 0x1);
        gbc.writeMem(0xb61f, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xe7dd);
        EXPECT(gbc.pc(), 0xb621);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb61f), 0xcb);
        EXPECT(gbc.readMem(0xb620), 0xc9);
        // CB C9 01DE
        gbc.setState(0x10b3, 0x626e, 0xa170, 0xeca9, 0xbfda, 0xc612, 0x1, 0x1);
        gbc.writeMem(0x10b3, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x626e);
        EXPECT(gbc.pc(), 0x10b5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C9 01DF
        gbc.setState(0xe412, 0xf5, 0x5220, 0x6783, 0xd64e, 0x9309, 0x1, 0x1);
        gbc.writeMem(0xe412, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0xf5);
        EXPECT(gbc.pc(), 0xe414);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe412), 0xcb);
        EXPECT(gbc.readMem(0xe413), 0xc9);
        // CB C9 01E0
        gbc.setState(0x949a, 0x156c, 0xd560, 0xd11c, 0x8c51, 0x892e, 0x0, 0x0);
        gbc.writeMem(0x949a, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x156c);
        EXPECT(gbc.pc(), 0x949c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x949a), 0xcb);
        EXPECT(gbc.readMem(0x949b), 0xc9);
        // CB C9 01E1
        gbc.setState(0x2bcb, 0xa91f, 0xb110, 0x3847, 0xc8d, 0x8c89, 0x1, 0x0);
        gbc.writeMem(0x2bcb, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0xa91f);
        EXPECT(gbc.pc(), 0x2bcd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C9 01E2
        gbc.setState(0xad2c, 0xf4b8, 0xdc40, 0xfd93, 0x84c2, 0x77c5, 0x1, 0x0);
        gbc.writeMem(0xad2c, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0xf4b8);
        EXPECT(gbc.pc(), 0xad2e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xad2c), 0xcb);
        EXPECT(gbc.readMem(0xad2d), 0xc9);
        // CB C9 01E3
        gbc.setState(0x4693, 0x5f39, 0x2890, 0x6a31, 0x1587, 0xb63, 0x0, 0x1);
        gbc.writeMem(0x4693, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x5f39);
        EXPECT(gbc.pc(), 0x4695);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C9 01E4
        gbc.setState(0xe4c1, 0x374a, 0x5a90, 0xe047, 0xe99e, 0xc8ca, 0x0, 0x0);
        gbc.writeMem(0xe4c1, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x374a);
        EXPECT(gbc.pc(), 0xe4c3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe4c1), 0xcb);
        EXPECT(gbc.readMem(0xe4c2), 0xc9);
        // CB C9 01E5
        gbc.setState(0xdbc5, 0xe0cc, 0xfb0, 0x8ddd, 0x6931, 0x9821, 0x1, 0x1);
        gbc.writeMem(0xdbc5, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0xe0cc);
        EXPECT(gbc.pc(), 0xdbc7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdbc5), 0xcb);
        EXPECT(gbc.readMem(0xdbc6), 0xc9);
        // CB C9 01E6
        gbc.setState(0x2b2f, 0xd914, 0xcab0, 0xb3af, 0x4951, 0xb564, 0x0, 0x0);
        gbc.writeMem(0x2b2f, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0xd914);
        EXPECT(gbc.pc(), 0x2b31);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C9 01E7
        gbc.setState(0xb646, 0x2c94, 0x49b0, 0x8bdf, 0x6168, 0x72d4, 0x0, 0x1);
        gbc.writeMem(0xb646, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x2c94);
        EXPECT(gbc.pc(), 0xb648);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb646), 0xcb);
        EXPECT(gbc.readMem(0xb647), 0xc9);
        // CB C9 01E8
        gbc.setState(0x69aa, 0xc91e, 0x6dd0, 0x1fe, 0x5d96, 0x89d3, 0x1, 0x1);
        gbc.writeMem(0x69aa, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0xc91e);
        EXPECT(gbc.pc(), 0x69ac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C9 01E9
        gbc.setState(0x618e, 0x324, 0x4110, 0x942a, 0x2b73, 0x51e9, 0x0, 0x0);
        gbc.writeMem(0x618e, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x324);
        EXPECT(gbc.pc(), 0x6190);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C9 01EA
        gbc.setState(0x74e4, 0xda27, 0xfd60, 0xb9b3, 0x2ee3, 0x3e21, 0x0, 0x0);
        gbc.writeMem(0x74e4, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0xda27);
        EXPECT(gbc.pc(), 0x74e6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C9 01EB
        gbc.setState(0x989b, 0x23da, 0xc540, 0x861d, 0xf64e, 0x40d6, 0x1, 0x0);
        gbc.writeMem(0x989b, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x23da);
        EXPECT(gbc.pc(), 0x989d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x989b), 0xcb);
        EXPECT(gbc.readMem(0x989c), 0xc9);
        // CB C9 01EC
        gbc.setState(0x3f6c, 0xd248, 0x9f10, 0x17bd, 0x62ba, 0x5047, 0x1, 0x0);
        gbc.writeMem(0x3f6c, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0xd248);
        EXPECT(gbc.pc(), 0x3f6e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C9 01ED
        gbc.setState(0xcef2, 0x94c5, 0x9f80, 0x3a3c, 0x732e, 0x5f3e, 0x1, 0x1);
        gbc.writeMem(0xcef2, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x94c5);
        EXPECT(gbc.pc(), 0xcef4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcef2), 0xcb);
        EXPECT(gbc.readMem(0xcef3), 0xc9);
        // CB C9 01EE
        gbc.setState(0x5fbc, 0x9320, 0xa590, 0xe01e, 0xbcc0, 0x60, 0x1, 0x0);
        gbc.writeMem(0x5fbc, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x9320);
        EXPECT(gbc.pc(), 0x5fbe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C9 01F1
        gbc.setState(0xd754, 0x81db, 0xec0, 0x3ea9, 0x73ca, 0xf0a2, 0x0, 0x0);
        gbc.writeMem(0xd754, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x81db);
        EXPECT(gbc.pc(), 0xd756);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd754), 0xcb);
        EXPECT(gbc.readMem(0xd755), 0xc9);
        // CB C9 01F2
        gbc.setState(0xc128, 0x147e, 0x5c80, 0x1cb8, 0x53d7, 0x36ed, 0x0, 0x1);
        gbc.writeMem(0xc128, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x147e);
        EXPECT(gbc.pc(), 0xc12a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc128), 0xcb);
        EXPECT(gbc.readMem(0xc129), 0xc9);
        // CB C9 01F3
        gbc.setState(0xae62, 0xb6cd, 0xec80, 0x8f21, 0x6968, 0xa22c, 0x1, 0x1);
        gbc.writeMem(0xae62, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0xb6cd);
        EXPECT(gbc.pc(), 0xae64);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xae62), 0xcb);
        EXPECT(gbc.readMem(0xae63), 0xc9);
        // CB C9 01F5
        gbc.setState(0x1646, 0x5d08, 0x4b80, 0x7f02, 0x3091, 0x7251, 0x0, 0x1);
        gbc.writeMem(0x1646, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x5d08);
        EXPECT(gbc.pc(), 0x1648);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C9 01F6
        gbc.setState(0x9d62, 0x3fa7, 0x6750, 0x16fe, 0xb1fd, 0xba05, 0x0, 0x1);
        gbc.writeMem(0x9d62, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x3fa7);
        EXPECT(gbc.pc(), 0x9d64);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9d62), 0xcb);
        EXPECT(gbc.readMem(0x9d63), 0xc9);
        // CB C9 01F7
        gbc.setState(0x1ba7, 0xf877, 0x6250, 0x9deb, 0xf83d, 0xd991, 0x1, 0x1);
        gbc.writeMem(0x1ba7, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0xf877);
        EXPECT(gbc.pc(), 0x1ba9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C9 01F8
        gbc.setState(0x406a, 0x8c49, 0xfb30, 0x3d9a, 0x3517, 0x87ca, 0x1, 0x1);
        gbc.writeMem(0x406a, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x8c49);
        EXPECT(gbc.pc(), 0x406c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C9 01F9
        gbc.setState(0xe53f, 0x90a7, 0x5440, 0x4e84, 0x69ee, 0x544e, 0x0, 0x1);
        gbc.writeMem(0xe53f, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x90a7);
        EXPECT(gbc.pc(), 0xe541);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe53f), 0xcb);
        EXPECT(gbc.readMem(0xe540), 0xc9);
        // CB C9 01FA
        gbc.setState(0x99c0, 0x514b, 0x7830, 0x5ed9, 0xefdf, 0x9ac6, 0x1, 0x1);
        gbc.writeMem(0x99c0, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x514b);
        EXPECT(gbc.pc(), 0x99c2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x99c0), 0xcb);
        EXPECT(gbc.readMem(0x99c1), 0xc9);
        // CB C9 01FB
        gbc.setState(0x9ad1, 0x471c, 0xce80, 0x4172, 0xc349, 0x867c, 0x1, 0x0);
        gbc.writeMem(0x9ad1, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x471c);
        EXPECT(gbc.pc(), 0x9ad3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9ad1), 0xcb);
        EXPECT(gbc.readMem(0x9ad2), 0xc9);
        // CB C9 01FC
        gbc.setState(0x2b50, 0xb929, 0x2270, 0xe17e, 0xac90, 0x5414, 0x1, 0x1);
        gbc.writeMem(0x2b50, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0xb929);
        EXPECT(gbc.pc(), 0x2b52);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C9 01FD
        gbc.setState(0x790, 0x50f8, 0x55d0, 0xa23c, 0x467b, 0x9762, 0x0, 0x1);
        gbc.writeMem(0x790, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x50f8);
        EXPECT(gbc.pc(), 0x792);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C9 01FE
        gbc.setState(0xfcb, 0xea9e, 0x83d0, 0x69f3, 0xc09b, 0x58f3, 0x0, 0x0);
        gbc.writeMem(0xfcb, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0xea9e);
        EXPECT(gbc.pc(), 0xfcd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C9 01FF
        gbc.setState(0xa4ac, 0xf9c9, 0xfbc0, 0xf7e6, 0x1929, 0xe07e, 0x1, 0x1);
        gbc.writeMem(0xa4ac, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0xf9c9);
        EXPECT(gbc.pc(), 0xa4ae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa4ac), 0xcb);
        EXPECT(gbc.readMem(0xa4ad), 0xc9);
        // CB C9 0200
        gbc.setState(0x7bfc, 0xc33e, 0xbfd0, 0xa393, 0xdda7, 0x6e07, 0x1, 0x1);
        gbc.writeMem(0x7bfc, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xc33e);
        EXPECT(gbc.pc(), 0x7bfe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C9 0201
        gbc.setState(0x5e4a, 0x6dc8, 0xe1a0, 0xe9c3, 0xc6a6, 0x4bd1, 0x0, 0x1);
        gbc.writeMem(0x5e4a, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x6dc8);
        EXPECT(gbc.pc(), 0x5e4c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C9 0202
        gbc.setState(0xedb6, 0x370b, 0xfae0, 0x798b, 0xd800, 0x23a1, 0x1, 0x1);
        gbc.writeMem(0xedb6, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x370b);
        EXPECT(gbc.pc(), 0xedb8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xedb6), 0xcb);
        EXPECT(gbc.readMem(0xedb7), 0xc9);
        // CB C9 0204
        gbc.setState(0xa9bd, 0x553e, 0x5900, 0x8af9, 0xdac5, 0xe665, 0x0, 0x0);
        gbc.writeMem(0xa9bd, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x553e);
        EXPECT(gbc.pc(), 0xa9bf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa9bd), 0xcb);
        EXPECT(gbc.readMem(0xa9be), 0xc9);
        // CB C9 0205
        gbc.setState(0x640b, 0x38e2, 0x1250, 0x6df3, 0xa29d, 0xea80, 0x1, 0x0);
        gbc.writeMem(0x640b, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x38e2);
        EXPECT(gbc.pc(), 0x640d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C9 0206
        gbc.setState(0xa33a, 0x45c0, 0xccd0, 0xb401, 0xc64d, 0xabbe, 0x1, 0x1);
        gbc.writeMem(0xa33a, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x45c0);
        EXPECT(gbc.pc(), 0xa33c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa33a), 0xcb);
        EXPECT(gbc.readMem(0xa33b), 0xc9);
        // CB C9 0207
        gbc.setState(0x350c, 0xc7b9, 0x28a0, 0xb1e1, 0xcb92, 0x5af, 0x1, 0x1);
        gbc.writeMem(0x350c, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0xc7b9);
        EXPECT(gbc.pc(), 0x350e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C9 0209
        gbc.setState(0x3577, 0xbe62, 0xc0e0, 0x988a, 0x3130, 0x1705, 0x1, 0x0);
        gbc.writeMem(0x3577, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0xbe62);
        EXPECT(gbc.pc(), 0x3579);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C9 020A
        gbc.setState(0xda08, 0x9999, 0xdc40, 0xf904, 0xfa5a, 0x1263, 0x1, 0x0);
        gbc.writeMem(0xda08, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x9999);
        EXPECT(gbc.pc(), 0xda0a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xda08), 0xcb);
        EXPECT(gbc.readMem(0xda09), 0xc9);
        // CB C9 020B
        gbc.setState(0xd1a0, 0x305b, 0x7cf0, 0xd1ed, 0xf457, 0xedde, 0x0, 0x1);
        gbc.writeMem(0xd1a0, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x305b);
        EXPECT(gbc.pc(), 0xd1a2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd1a0), 0xcb);
        EXPECT(gbc.readMem(0xd1a1), 0xc9);
        // CB C9 020C
        gbc.setState(0x1ada, 0x10af, 0x6750, 0xdfd, 0xc9f0, 0x9ec1, 0x0, 0x0);
        gbc.writeMem(0x1ada, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x10af);
        EXPECT(gbc.pc(), 0x1adc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C9 020D
        gbc.setState(0x8327, 0x5568, 0x2d00, 0x8eb4, 0x2009, 0xe5d8, 0x0, 0x1);
        gbc.writeMem(0x8327, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x5568);
        EXPECT(gbc.pc(), 0x8329);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8327), 0xcb);
        EXPECT(gbc.readMem(0x8328), 0xc9);
        // CB C9 020E
        gbc.setState(0x26b8, 0xa689, 0xd8c0, 0xbfe3, 0x5512, 0xe8f8, 0x1, 0x0);
        gbc.writeMem(0x26b8, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0xa689);
        EXPECT(gbc.pc(), 0x26ba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C9 020F
        gbc.setState(0xa84d, 0x6fd2, 0x2580, 0xfd19, 0xe6ed, 0x3a02, 0x1, 0x0);
        gbc.writeMem(0xa84d, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x6fd2);
        EXPECT(gbc.pc(), 0xa84f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa84d), 0xcb);
        EXPECT(gbc.readMem(0xa84e), 0xc9);
        // CB C9 0210
        gbc.setState(0xa388, 0xf455, 0x2380, 0x6393, 0x315, 0x808c, 0x1, 0x1);
        gbc.writeMem(0xa388, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0xf455);
        EXPECT(gbc.pc(), 0xa38a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa388), 0xcb);
        EXPECT(gbc.readMem(0xa389), 0xc9);
        // CB C9 0211
        gbc.setState(0x7ce3, 0x6c6e, 0x87e0, 0x6225, 0x7ed6, 0xbdbf, 0x0, 0x0);
        gbc.writeMem(0x7ce3, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x6c6e);
        EXPECT(gbc.pc(), 0x7ce5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C9 0212
        gbc.setState(0x37ec, 0xa83c, 0xe850, 0xa956, 0x1392, 0x8936, 0x0, 0x1);
        gbc.writeMem(0x37ec, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0xa83c);
        EXPECT(gbc.pc(), 0x37ee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C9 0213
        gbc.setState(0x333e, 0x6731, 0x3ec0, 0x2180, 0x2123, 0x9f32, 0x1, 0x0);
        gbc.writeMem(0x333e, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x6731);
        EXPECT(gbc.pc(), 0x3340);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C9 0214
        gbc.setState(0x2fda, 0x9bad, 0x25a0, 0x68d2, 0x9d0b, 0x9408, 0x0, 0x0);
        gbc.writeMem(0x2fda, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x9bad);
        EXPECT(gbc.pc(), 0x2fdc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C9 0215
        gbc.setState(0x80cc, 0xf9b3, 0x2970, 0x144e, 0xc57c, 0x56df, 0x1, 0x1);
        gbc.writeMem(0x80cc, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0xf9b3);
        EXPECT(gbc.pc(), 0x80ce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x80cc), 0xcb);
        EXPECT(gbc.readMem(0x80cd), 0xc9);
        // CB C9 0216
        gbc.setState(0x151f, 0x5ddb, 0x9b50, 0xd550, 0xc8e9, 0xaa76, 0x0, 0x0);
        gbc.writeMem(0x151f, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x5ddb);
        EXPECT(gbc.pc(), 0x1521);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C9 0217
        gbc.setState(0x4488, 0x8f94, 0xf340, 0x2480, 0x5052, 0x19a5, 0x1, 0x0);
        gbc.writeMem(0x4488, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x8f94);
        EXPECT(gbc.pc(), 0x448a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C9 0218
        gbc.setState(0x581f, 0xb0d5, 0x3900, 0x29f4, 0x45c8, 0xc8e1, 0x1, 0x1);
        gbc.writeMem(0x581f, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xb0d5);
        EXPECT(gbc.pc(), 0x5821);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C9 0219
        gbc.setState(0xb4f2, 0xcbb, 0xc8c0, 0x8da0, 0xfe24, 0xecc6, 0x0, 0x1);
        gbc.writeMem(0xb4f2, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0xcbb);
        EXPECT(gbc.pc(), 0xb4f4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb4f2), 0xcb);
        EXPECT(gbc.readMem(0xb4f3), 0xc9);
        // CB C9 021A
        gbc.setState(0x57a8, 0xba8e, 0x6ba0, 0xf154, 0x1a78, 0x6149, 0x1, 0x1);
        gbc.writeMem(0x57a8, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xba8e);
        EXPECT(gbc.pc(), 0x57aa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C9 021B
        gbc.setState(0x38d1, 0xcc5d, 0xb5f0, 0x778, 0xc490, 0x7c4d, 0x0, 0x1);
        gbc.writeMem(0x38d1, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0xcc5d);
        EXPECT(gbc.pc(), 0x38d3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C9 021C
        gbc.setState(0xb991, 0xaef0, 0x460, 0x32c0, 0x2118, 0xbcec, 0x1, 0x0);
        gbc.writeMem(0xb991, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0xaef0);
        EXPECT(gbc.pc(), 0xb993);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb991), 0xcb);
        EXPECT(gbc.readMem(0xb992), 0xc9);
        // CB C9 021D
        gbc.setState(0x65f0, 0xc066, 0xa620, 0xa33a, 0xc3d, 0xbf65, 0x1, 0x1);
        gbc.writeMem(0x65f0, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0xc066);
        EXPECT(gbc.pc(), 0x65f2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C9 021E
        gbc.setState(0xdfdb, 0x63cb, 0x9ee0, 0x5f24, 0xf46d, 0x802, 0x0, 0x0);
        gbc.writeMem(0xdfdb, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x63cb);
        EXPECT(gbc.pc(), 0xdfdd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdfdb), 0xcb);
        EXPECT(gbc.readMem(0xdfdc), 0xc9);
        // CB C9 021F
        gbc.setState(0xc603, 0xfac1, 0x800, 0x1570, 0x24de, 0x802b, 0x1, 0x0);
        gbc.writeMem(0xc603, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0xfac1);
        EXPECT(gbc.pc(), 0xc605);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc603), 0xcb);
        EXPECT(gbc.readMem(0xc604), 0xc9);
        // CB C9 0220
        gbc.setState(0x5e05, 0x524b, 0x7b10, 0xc0f0, 0xb147, 0x1430, 0x0, 0x1);
        gbc.writeMem(0x5e05, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x524b);
        EXPECT(gbc.pc(), 0x5e07);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C9 0221
        gbc.setState(0x3f52, 0x6bb4, 0x9b20, 0x67d5, 0x39fb, 0x2920, 0x1, 0x1);
        gbc.writeMem(0x3f52, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x6bb4);
        EXPECT(gbc.pc(), 0x3f54);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C9 0222
        gbc.setState(0xa49, 0xb5a, 0x7820, 0x9b2, 0x7b16, 0x7235, 0x1, 0x1);
        gbc.writeMem(0xa49, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0xb5a);
        EXPECT(gbc.pc(), 0xa4b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C9 0223
        gbc.setState(0x7dbb, 0x7b12, 0x9400, 0x1fb5, 0xd5ae, 0x11e2, 0x1, 0x0);
        gbc.writeMem(0x7dbb, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x7b12);
        EXPECT(gbc.pc(), 0x7dbd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C9 0224
        gbc.setState(0xda69, 0x3b18, 0x6c60, 0x6021, 0xb22b, 0xb3d8, 0x0, 0x0);
        gbc.writeMem(0xda69, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x3b18);
        EXPECT(gbc.pc(), 0xda6b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xda69), 0xcb);
        EXPECT(gbc.readMem(0xda6a), 0xc9);
        // CB C9 0225
        gbc.setState(0x3b6e, 0x7ef6, 0x75e0, 0x8e2b, 0x1257, 0x214d, 0x1, 0x0);
        gbc.writeMem(0x3b6e, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x7ef6);
        EXPECT(gbc.pc(), 0x3b70);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C9 0226
        gbc.setState(0x14cc, 0xe926, 0x41d0, 0x8f08, 0xe8f6, 0xa360, 0x0, 0x1);
        gbc.writeMem(0x14cc, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xe926);
        EXPECT(gbc.pc(), 0x14ce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C9 0227
        gbc.setState(0x9c4, 0xec91, 0x2fc0, 0x2439, 0x4f94, 0xd74b, 0x0, 0x0);
        gbc.writeMem(0x9c4, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0xec91);
        EXPECT(gbc.pc(), 0x9c6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C9 0228
        gbc.setState(0x939, 0x41e6, 0x24b0, 0xa17a, 0xd88, 0x654f, 0x1, 0x0);
        gbc.writeMem(0x939, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x41e6);
        EXPECT(gbc.pc(), 0x93b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C9 0229
        gbc.setState(0x103, 0x573a, 0x7740, 0xf0e0, 0x799d, 0x7020, 0x1, 0x1);
        gbc.writeMem(0x103, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x573a);
        EXPECT(gbc.pc(), 0x105);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C9 022A
        gbc.setState(0x4c49, 0x3e47, 0xc810, 0x2d5, 0x8137, 0x49c3, 0x1, 0x1);
        gbc.writeMem(0x4c49, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x3e47);
        EXPECT(gbc.pc(), 0x4c4b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C9 022B
        gbc.setState(0xe87d, 0x4b37, 0x5bf0, 0x8019, 0xd52c, 0xa4a9, 0x1, 0x0);
        gbc.writeMem(0xe87d, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x4b37);
        EXPECT(gbc.pc(), 0xe87f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe87d), 0xcb);
        EXPECT(gbc.readMem(0xe87e), 0xc9);
        // CB C9 022C
        gbc.setState(0x8185, 0xee02, 0x8850, 0x28d8, 0x87b6, 0xd526, 0x0, 0x1);
        gbc.writeMem(0x8185, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0xee02);
        EXPECT(gbc.pc(), 0x8187);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8185), 0xcb);
        EXPECT(gbc.readMem(0x8186), 0xc9);
        // CB C9 022D
        gbc.setState(0xc418, 0x3120, 0x5410, 0xea32, 0x11ae, 0xb820, 0x1, 0x0);
        gbc.writeMem(0xc418, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x3120);
        EXPECT(gbc.pc(), 0xc41a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc418), 0xcb);
        EXPECT(gbc.readMem(0xc419), 0xc9);
        // CB C9 022E
        gbc.setState(0x90a2, 0x6900, 0xc570, 0xf0a0, 0x8a52, 0x12ad, 0x1, 0x1);
        gbc.writeMem(0x90a2, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x6900);
        EXPECT(gbc.pc(), 0x90a4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x90a2), 0xcb);
        EXPECT(gbc.readMem(0x90a3), 0xc9);
        // CB C9 022F
        gbc.setState(0xa518, 0xa193, 0xfa20, 0x24f9, 0x4f8f, 0xa258, 0x0, 0x1);
        gbc.writeMem(0xa518, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0xa193);
        EXPECT(gbc.pc(), 0xa51a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa518), 0xcb);
        EXPECT(gbc.readMem(0xa519), 0xc9);
        // CB C9 0230
        gbc.setState(0x4627, 0x32f6, 0x1520, 0xa205, 0xf9ad, 0xa47c, 0x0, 0x1);
        gbc.writeMem(0x4627, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x32f6);
        EXPECT(gbc.pc(), 0x4629);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C9 0231
        gbc.setState(0x9693, 0xec8, 0xc570, 0xfc05, 0x5204, 0xcf7, 0x0, 0x1);
        gbc.writeMem(0x9693, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0xec8);
        EXPECT(gbc.pc(), 0x9695);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9693), 0xcb);
        EXPECT(gbc.readMem(0x9694), 0xc9);
        // CB C9 0232
        gbc.setState(0x7ec6, 0xc6e5, 0xed80, 0x7d01, 0x274f, 0x4f78, 0x1, 0x1);
        gbc.writeMem(0x7ec6, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0xc6e5);
        EXPECT(gbc.pc(), 0x7ec8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C9 0233
        gbc.setState(0x24d8, 0x1b91, 0x4c10, 0x37bb, 0x9a35, 0xa78e, 0x1, 0x0);
        gbc.writeMem(0x24d8, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x1b91);
        EXPECT(gbc.pc(), 0x24da);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C9 0234
        gbc.setState(0x9281, 0xb2e3, 0x32a0, 0xdf95, 0x2647, 0x72dd, 0x0, 0x0);
        gbc.writeMem(0x9281, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0xb2e3);
        EXPECT(gbc.pc(), 0x9283);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9281), 0xcb);
        EXPECT(gbc.readMem(0x9282), 0xc9);
        // CB C9 0235
        gbc.setState(0x4e4c, 0x1516, 0x10e0, 0xd195, 0x92c, 0x1091, 0x1, 0x0);
        gbc.writeMem(0x4e4c, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x1516);
        EXPECT(gbc.pc(), 0x4e4e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C9 0236
        gbc.setState(0x2ccd, 0x352c, 0xbe0, 0x375a, 0x425e, 0x4e82, 0x0, 0x0);
        gbc.writeMem(0x2ccd, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x352c);
        EXPECT(gbc.pc(), 0x2ccf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C9 0237
        gbc.setState(0x7d4f, 0x5b3f, 0x5e20, 0x3626, 0x9aa9, 0x5e9, 0x1, 0x0);
        gbc.writeMem(0x7d4f, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x5b3f);
        EXPECT(gbc.pc(), 0x7d51);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C9 0238
        gbc.setState(0x846d, 0x29ce, 0xd650, 0x77ad, 0x2441, 0x9254, 0x0, 0x1);
        gbc.writeMem(0x846d, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x29ce);
        EXPECT(gbc.pc(), 0x846f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x846d), 0xcb);
        EXPECT(gbc.readMem(0x846e), 0xc9);
        // CB C9 0239
        gbc.setState(0x9875, 0x3bff, 0xc2f0, 0xdf66, 0xe97f, 0xb7c7, 0x0, 0x1);
        gbc.writeMem(0x9875, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x3bff);
        EXPECT(gbc.pc(), 0x9877);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9875), 0xcb);
        EXPECT(gbc.readMem(0x9876), 0xc9);
        // CB C9 023A
        gbc.setState(0x66cc, 0xc171, 0x1ce0, 0x61aa, 0x4257, 0x479, 0x0, 0x0);
        gbc.writeMem(0x66cc, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xc171);
        EXPECT(gbc.pc(), 0x66ce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C9 023C
        gbc.setState(0xfb4, 0x6462, 0x8bc0, 0xdde4, 0x632a, 0x631a, 0x1, 0x1);
        gbc.writeMem(0xfb4, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x6462);
        EXPECT(gbc.pc(), 0xfb6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C9 023D
        gbc.setState(0x4644, 0xda72, 0x4760, 0xa6f9, 0xcca7, 0xafc6, 0x1, 0x1);
        gbc.writeMem(0x4644, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0xda72);
        EXPECT(gbc.pc(), 0x4646);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C9 023E
        gbc.setState(0xdd, 0x788e, 0xf130, 0x61a6, 0xad1b, 0x692b, 0x1, 0x0);
        gbc.writeMem(0xdd, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x788e);
        EXPECT(gbc.pc(), 0xdf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C9 023F
        gbc.setState(0x561, 0xf086, 0x31a0, 0x2ded, 0x16e7, 0x58f9, 0x0, 0x0);
        gbc.writeMem(0x561, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xf086);
        EXPECT(gbc.pc(), 0x563);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C9 0240
        gbc.setState(0x8eef, 0xb783, 0x3c90, 0x982d, 0x670c, 0x2926, 0x0, 0x1);
        gbc.writeMem(0x8eef, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0xb783);
        EXPECT(gbc.pc(), 0x8ef1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8eef), 0xcb);
        EXPECT(gbc.readMem(0x8ef0), 0xc9);
        // CB C9 0241
        gbc.setState(0x4d74, 0xe73c, 0x3970, 0x8eae, 0x4f2a, 0x4c4c, 0x0, 0x1);
        gbc.writeMem(0x4d74, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0xe73c);
        EXPECT(gbc.pc(), 0x4d76);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C9 0242
        gbc.setState(0x8e4b, 0xa520, 0x84f0, 0x7965, 0x5586, 0x93c0, 0x0, 0x1);
        gbc.writeMem(0x8e4b, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0xa520);
        EXPECT(gbc.pc(), 0x8e4d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8e4b), 0xcb);
        EXPECT(gbc.readMem(0x8e4c), 0xc9);
        // CB C9 0244
        gbc.setState(0x6d74, 0xe757, 0xd880, 0x1992, 0xf50e, 0x4acf, 0x1, 0x0);
        gbc.writeMem(0x6d74, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0xe757);
        EXPECT(gbc.pc(), 0x6d76);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C9 0245
        gbc.setState(0x89be, 0x17ed, 0xa230, 0x4993, 0xb26e, 0x7d23, 0x0, 0x1);
        gbc.writeMem(0x89be, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x17ed);
        EXPECT(gbc.pc(), 0x89c0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x89be), 0xcb);
        EXPECT(gbc.readMem(0x89bf), 0xc9);
        // CB C9 0246
        gbc.setState(0x2e76, 0xbdf4, 0x50a0, 0xe0d5, 0x26be, 0x20c2, 0x1, 0x1);
        gbc.writeMem(0x2e76, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0xbdf4);
        EXPECT(gbc.pc(), 0x2e78);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C9 0247
        gbc.setState(0x5e57, 0x2d02, 0xdd40, 0x4e7d, 0x72e9, 0xecc0, 0x1, 0x0);
        gbc.writeMem(0x5e57, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x2d02);
        EXPECT(gbc.pc(), 0x5e59);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C9 0248
        gbc.setState(0xa469, 0xd29d, 0x5440, 0x6293, 0xe5d, 0xda52, 0x0, 0x1);
        gbc.writeMem(0xa469, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0xd29d);
        EXPECT(gbc.pc(), 0xa46b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa469), 0xcb);
        EXPECT(gbc.readMem(0xa46a), 0xc9);
        // CB C9 0249
        gbc.setState(0xebb6, 0xc3e9, 0x9950, 0x7a5c, 0x9896, 0xd886, 0x1, 0x1);
        gbc.writeMem(0xebb6, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0xc3e9);
        EXPECT(gbc.pc(), 0xebb8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xebb6), 0xcb);
        EXPECT(gbc.readMem(0xebb7), 0xc9);
        // CB C9 024A
        gbc.setState(0x6e5, 0xd927, 0xa0c0, 0xe28c, 0x6392, 0x26a9, 0x0, 0x0);
        gbc.writeMem(0x6e5, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0xd927);
        EXPECT(gbc.pc(), 0x6e7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C9 024B
        gbc.setState(0x6d7, 0x4e00, 0x7690, 0x5915, 0x2a2c, 0xefd, 0x1, 0x1);
        gbc.writeMem(0x6d7, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x4e00);
        EXPECT(gbc.pc(), 0x6d9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C9 024C
        gbc.setState(0x7d74, 0x5783, 0xe620, 0x835e, 0xb6d4, 0xd0c, 0x1, 0x1);
        gbc.writeMem(0x7d74, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x5783);
        EXPECT(gbc.pc(), 0x7d76);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C9 024D
        gbc.setState(0xc0a7, 0xfc26, 0xc10, 0x39cb, 0x98f6, 0xe281, 0x0, 0x1);
        gbc.writeMem(0xc0a7, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0xfc26);
        EXPECT(gbc.pc(), 0xc0a9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc0a7), 0xcb);
        EXPECT(gbc.readMem(0xc0a8), 0xc9);
        // CB C9 024E
        gbc.setState(0xb2aa, 0x43ce, 0x7860, 0x274f, 0x6bf5, 0x227a, 0x0, 0x1);
        gbc.writeMem(0xb2aa, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x43ce);
        EXPECT(gbc.pc(), 0xb2ac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb2aa), 0xcb);
        EXPECT(gbc.readMem(0xb2ab), 0xc9);
        // CB C9 024F
        gbc.setState(0xbd8d, 0xb914, 0x1560, 0x3077, 0x918a, 0x7315, 0x1, 0x0);
        gbc.writeMem(0xbd8d, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0xb914);
        EXPECT(gbc.pc(), 0xbd8f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbd8d), 0xcb);
        EXPECT(gbc.readMem(0xbd8e), 0xc9);
        // CB C9 0250
        gbc.setState(0x1952, 0xc435, 0x1c00, 0xe442, 0xfd96, 0x67f4, 0x0, 0x0);
        gbc.writeMem(0x1952, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0xc435);
        EXPECT(gbc.pc(), 0x1954);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C9 0251
        gbc.setState(0xa798, 0x9c6b, 0xa390, 0x1615, 0xe395, 0xc981, 0x0, 0x0);
        gbc.writeMem(0xa798, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x9c6b);
        EXPECT(gbc.pc(), 0xa79a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa798), 0xcb);
        EXPECT(gbc.readMem(0xa799), 0xc9);
        // CB C9 0252
        gbc.setState(0x5579, 0x9c9e, 0x8940, 0x6533, 0xa5c7, 0x3b15, 0x1, 0x1);
        gbc.writeMem(0x5579, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x9c9e);
        EXPECT(gbc.pc(), 0x557b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C9 0253
        gbc.setState(0xe931, 0xaca6, 0x5300, 0x6ed2, 0xe8f6, 0xcd37, 0x0, 0x1);
        gbc.writeMem(0xe931, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0xaca6);
        EXPECT(gbc.pc(), 0xe933);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe931), 0xcb);
        EXPECT(gbc.readMem(0xe932), 0xc9);
        // CB C9 0255
        gbc.setState(0xd9ae, 0xeed8, 0x9a40, 0x1635, 0x6743, 0x6b75, 0x1, 0x0);
        gbc.writeMem(0xd9ae, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xeed8);
        EXPECT(gbc.pc(), 0xd9b0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd9ae), 0xcb);
        EXPECT(gbc.readMem(0xd9af), 0xc9);
        // CB C9 0256
        gbc.setState(0x9506, 0x7db9, 0x4ef0, 0xa58f, 0x638d, 0x3506, 0x0, 0x1);
        gbc.writeMem(0x9506, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x7db9);
        EXPECT(gbc.pc(), 0x9508);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9506), 0xcb);
        EXPECT(gbc.readMem(0x9507), 0xc9);
        // CB C9 0258
        gbc.setState(0xdf21, 0xfa99, 0x9bb0, 0xfb26, 0x1772, 0x891f, 0x0, 0x1);
        gbc.writeMem(0xdf21, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0xfa99);
        EXPECT(gbc.pc(), 0xdf23);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdf21), 0xcb);
        EXPECT(gbc.readMem(0xdf22), 0xc9);
        // CB C9 0259
        gbc.setState(0x6dc2, 0xb1dd, 0x6880, 0xd0d8, 0x856c, 0xc216, 0x1, 0x0);
        gbc.writeMem(0x6dc2, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xb1dd);
        EXPECT(gbc.pc(), 0x6dc4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C9 025B
        gbc.setState(0xc32e, 0x20e8, 0x3b00, 0xe4b0, 0x279f, 0x3088, 0x0, 0x0);
        gbc.writeMem(0xc32e, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x20e8);
        EXPECT(gbc.pc(), 0xc330);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc32e), 0xcb);
        EXPECT(gbc.readMem(0xc32f), 0xc9);
        // CB C9 025C
        gbc.setState(0x1d52, 0x442c, 0x2430, 0x2ae6, 0xc693, 0x4132, 0x0, 0x0);
        gbc.writeMem(0x1d52, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x442c);
        EXPECT(gbc.pc(), 0x1d54);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C9 025D
        gbc.setState(0xc0a7, 0x126d, 0xa800, 0x65eb, 0x6897, 0xfa8e, 0x1, 0x0);
        gbc.writeMem(0xc0a7, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x126d);
        EXPECT(gbc.pc(), 0xc0a9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc0a7), 0xcb);
        EXPECT(gbc.readMem(0xc0a8), 0xc9);
        // CB C9 025E
        gbc.setState(0xdfef, 0x79f3, 0xd790, 0xce13, 0x4a27, 0x454a, 0x0, 0x1);
        gbc.writeMem(0xdfef, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x79f3);
        EXPECT(gbc.pc(), 0xdff1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdfef), 0xcb);
        EXPECT(gbc.readMem(0xdff0), 0xc9);
        // CB C9 025F
        gbc.setState(0x79c9, 0x5dc9, 0x4f30, 0x6209, 0xda3f, 0xba25, 0x0, 0x1);
        gbc.writeMem(0x79c9, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x5dc9);
        EXPECT(gbc.pc(), 0x79cb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C9 0260
        gbc.setState(0xa34b, 0xaffc, 0x7340, 0x608f, 0x583d, 0xbc2e, 0x0, 0x0);
        gbc.writeMem(0xa34b, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xaffc);
        EXPECT(gbc.pc(), 0xa34d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa34b), 0xcb);
        EXPECT(gbc.readMem(0xa34c), 0xc9);
        // CB C9 0261
        gbc.setState(0xa37f, 0x5f30, 0xfe90, 0xa969, 0xc51e, 0xb195, 0x0, 0x0);
        gbc.writeMem(0xa37f, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x5f30);
        EXPECT(gbc.pc(), 0xa381);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa37f), 0xcb);
        EXPECT(gbc.readMem(0xa380), 0xc9);
        // CB C9 0262
        gbc.setState(0x948c, 0x4514, 0xcbd0, 0x4134, 0xf243, 0xa8e3, 0x1, 0x1);
        gbc.writeMem(0x948c, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x4514);
        EXPECT(gbc.pc(), 0x948e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x948c), 0xcb);
        EXPECT(gbc.readMem(0x948d), 0xc9);
        // CB C9 0263
        gbc.setState(0x7167, 0x5629, 0xc880, 0x8770, 0x86be, 0xa1f6, 0x1, 0x1);
        gbc.writeMem(0x7167, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x5629);
        EXPECT(gbc.pc(), 0x7169);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C9 0264
        gbc.setState(0x4956, 0xac28, 0x130, 0x80d5, 0x4ac8, 0x5535, 0x1, 0x0);
        gbc.writeMem(0x4956, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0xac28);
        EXPECT(gbc.pc(), 0x4958);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C9 0265
        gbc.setState(0x937b, 0xe48c, 0x1b50, 0x94be, 0xefda, 0xe764, 0x1, 0x0);
        gbc.writeMem(0x937b, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0xe48c);
        EXPECT(gbc.pc(), 0x937d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x937b), 0xcb);
        EXPECT(gbc.readMem(0x937c), 0xc9);
        // CB C9 0266
        gbc.setState(0x305f, 0xf8d9, 0xf8e0, 0x5654, 0x6edb, 0x8e26, 0x0, 0x0);
        gbc.writeMem(0x305f, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0xf8d9);
        EXPECT(gbc.pc(), 0x3061);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C9 0267
        gbc.setState(0x421a, 0xfe23, 0xaf70, 0xebd9, 0xcfd3, 0xda6b, 0x1, 0x0);
        gbc.writeMem(0x421a, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0xfe23);
        EXPECT(gbc.pc(), 0x421c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C9 0268
        gbc.setState(0x23eb, 0x1ff9, 0x81e0, 0x1902, 0x63d8, 0x900b, 0x0, 0x0);
        gbc.writeMem(0x23eb, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x1ff9);
        EXPECT(gbc.pc(), 0x23ed);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C9 0269
        gbc.setState(0xc72d, 0xbac0, 0x5830, 0xa8fc, 0xaf16, 0x58d4, 0x1, 0x1);
        gbc.writeMem(0xc72d, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xbac0);
        EXPECT(gbc.pc(), 0xc72f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc72d), 0xcb);
        EXPECT(gbc.readMem(0xc72e), 0xc9);
        // CB C9 026A
        gbc.setState(0x9e06, 0xd428, 0xdc70, 0x9e92, 0x3b7c, 0xda8e, 0x0, 0x0);
        gbc.writeMem(0x9e06, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0xd428);
        EXPECT(gbc.pc(), 0x9e08);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9e06), 0xcb);
        EXPECT(gbc.readMem(0x9e07), 0xc9);
        // CB C9 026C
        gbc.setState(0xaa68, 0x1b18, 0x2210, 0x5ca8, 0x4d26, 0x3fb1, 0x1, 0x1);
        gbc.writeMem(0xaa68, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x1b18);
        EXPECT(gbc.pc(), 0xaa6a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaa68), 0xcb);
        EXPECT(gbc.readMem(0xaa69), 0xc9);
        // CB C9 026D
        gbc.setState(0x7a65, 0xda6a, 0x3970, 0x318f, 0x7acb, 0xbf00, 0x0, 0x1);
        gbc.writeMem(0x7a65, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0xda6a);
        EXPECT(gbc.pc(), 0x7a67);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C9 026E
        gbc.setState(0x53ac, 0x879b, 0xc1c0, 0x933d, 0x7044, 0x8da0, 0x1, 0x0);
        gbc.writeMem(0x53ac, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x879b);
        EXPECT(gbc.pc(), 0x53ae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C9 026F
        gbc.setState(0xd2b, 0x5791, 0x6b00, 0xe8c2, 0xf1f7, 0x51ac, 0x1, 0x0);
        gbc.writeMem(0xd2b, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x5791);
        EXPECT(gbc.pc(), 0xd2d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C9 0270
        gbc.setState(0xa80d, 0xc887, 0x8a90, 0x303, 0x546e, 0x8c87, 0x0, 0x1);
        gbc.writeMem(0xa80d, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xc887);
        EXPECT(gbc.pc(), 0xa80f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa80d), 0xcb);
        EXPECT(gbc.readMem(0xa80e), 0xc9);
        // CB C9 0271
        gbc.setState(0x3bb6, 0xb693, 0xcac0, 0x71ef, 0x7fc0, 0xdd93, 0x0, 0x0);
        gbc.writeMem(0x3bb6, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0xb693);
        EXPECT(gbc.pc(), 0x3bb8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C9 0272
        gbc.setState(0x3541, 0xde88, 0x1240, 0xbc22, 0x16d3, 0x452f, 0x0, 0x0);
        gbc.writeMem(0x3541, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xde88);
        EXPECT(gbc.pc(), 0x3543);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C9 0274
        gbc.setState(0x241c, 0x5873, 0x15a0, 0x1e02, 0x7260, 0xc6e5, 0x1, 0x1);
        gbc.writeMem(0x241c, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x5873);
        EXPECT(gbc.pc(), 0x241e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C9 0275
        gbc.setState(0xe4bc, 0xcb4b, 0x8890, 0xd303, 0x9d46, 0x625e, 0x0, 0x0);
        gbc.writeMem(0xe4bc, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0xcb4b);
        EXPECT(gbc.pc(), 0xe4be);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe4bc), 0xcb);
        EXPECT(gbc.readMem(0xe4bd), 0xc9);
        // CB C9 0276
        gbc.setState(0x52ff, 0x3cf7, 0x8620, 0x9d3e, 0x3422, 0x9f17, 0x1, 0x0);
        gbc.writeMem(0x52ff, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x3cf7);
        EXPECT(gbc.pc(), 0x5301);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C9 0277
        gbc.setState(0x2cda, 0xdbce, 0x8c10, 0x8cf6, 0x5b1d, 0xe07a, 0x1, 0x1);
        gbc.writeMem(0x2cda, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xdbce);
        EXPECT(gbc.pc(), 0x2cdc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C9 0278
        gbc.setState(0x46e5, 0x89e2, 0xb6c0, 0x780a, 0xd12, 0x9910, 0x1, 0x1);
        gbc.writeMem(0x46e5, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x89e2);
        EXPECT(gbc.pc(), 0x46e7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C9 0279
        gbc.setState(0xddff, 0x8222, 0x8600, 0xf0db, 0xdbd0, 0xe867, 0x0, 0x1);
        gbc.writeMem(0xddff, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x8222);
        EXPECT(gbc.pc(), 0xde01);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xddff), 0xcb);
        EXPECT(gbc.readMem(0xde00), 0xc9);
        // CB C9 027A
        gbc.setState(0x79b1, 0x60e5, 0xd20, 0xd291, 0x3499, 0x6fb9, 0x1, 0x1);
        gbc.writeMem(0x79b1, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x60e5);
        EXPECT(gbc.pc(), 0x79b3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C9 027B
        gbc.setState(0xeaa8, 0xb93, 0x1810, 0x422c, 0x98df, 0x2a5f, 0x0, 0x1);
        gbc.writeMem(0xeaa8, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0xb93);
        EXPECT(gbc.pc(), 0xeaaa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeaa8), 0xcb);
        EXPECT(gbc.readMem(0xeaa9), 0xc9);
        // CB C9 027C
        gbc.setState(0x2d3e, 0xa4ab, 0x86c0, 0xa4bf, 0x6304, 0x374, 0x1, 0x0);
        gbc.writeMem(0x2d3e, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xa4ab);
        EXPECT(gbc.pc(), 0x2d40);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C9 027D
        gbc.setState(0xd3e0, 0x8be2, 0x4610, 0xdfea, 0x9105, 0xfa90, 0x1, 0x0);
        gbc.writeMem(0xd3e0, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x8be2);
        EXPECT(gbc.pc(), 0xd3e2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd3e0), 0xcb);
        EXPECT(gbc.readMem(0xd3e1), 0xc9);
        // CB C9 027F
        gbc.setState(0x4247, 0x2f8a, 0xc990, 0xce53, 0x8247, 0x88aa, 0x1, 0x0);
        gbc.writeMem(0x4247, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x2f8a);
        EXPECT(gbc.pc(), 0x4249);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C9 0280
        gbc.setState(0xa76d, 0x78fc, 0x16b0, 0x1e6e, 0xa286, 0x89f1, 0x0, 0x0);
        gbc.writeMem(0xa76d, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x78fc);
        EXPECT(gbc.pc(), 0xa76f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa76d), 0xcb);
        EXPECT(gbc.readMem(0xa76e), 0xc9);
        // CB C9 0281
        gbc.setState(0x6905, 0x84ac, 0xc850, 0x3281, 0x7da6, 0xbe3c, 0x0, 0x0);
        gbc.writeMem(0x6905, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x84ac);
        EXPECT(gbc.pc(), 0x6907);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C9 0282
        gbc.setState(0x326d, 0xd93e, 0xde0, 0xf13c, 0xc72, 0xebf7, 0x1, 0x1);
        gbc.writeMem(0x326d, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0xd93e);
        EXPECT(gbc.pc(), 0x326f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C9 0283
        gbc.setState(0x77e9, 0xbe11, 0x25a0, 0x9029, 0xe40f, 0x4f3e, 0x0, 0x0);
        gbc.writeMem(0x77e9, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0xbe11);
        EXPECT(gbc.pc(), 0x77eb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C9 0284
        gbc.setState(0xb59a, 0xe850, 0xef90, 0xd277, 0xe42e, 0xd428, 0x0, 0x0);
        gbc.writeMem(0xb59a, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xe850);
        EXPECT(gbc.pc(), 0xb59c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb59a), 0xcb);
        EXPECT(gbc.readMem(0xb59b), 0xc9);
        // CB C9 0285
        gbc.setState(0xc303, 0x713e, 0x35d0, 0xfb49, 0x6766, 0x42d5, 0x0, 0x0);
        gbc.writeMem(0xc303, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x713e);
        EXPECT(gbc.pc(), 0xc305);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc303), 0xcb);
        EXPECT(gbc.readMem(0xc304), 0xc9);
        // CB C9 0286
        gbc.setState(0x1735, 0xa7a, 0xe6f0, 0xc376, 0x5451, 0x1fff, 0x0, 0x1);
        gbc.writeMem(0x1735, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0xa7a);
        EXPECT(gbc.pc(), 0x1737);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C9 0287
        gbc.setState(0xcaea, 0x2e00, 0x24c0, 0x6b82, 0xaa65, 0x3371, 0x0, 0x1);
        gbc.writeMem(0xcaea, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x2e00);
        EXPECT(gbc.pc(), 0xcaec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcaea), 0xcb);
        EXPECT(gbc.readMem(0xcaeb), 0xc9);
        // CB C9 0288
        gbc.setState(0x6e51, 0xc021, 0xc490, 0x6a03, 0x7c53, 0x910f, 0x1, 0x1);
        gbc.writeMem(0x6e51, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0xc021);
        EXPECT(gbc.pc(), 0x6e53);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C9 0289
        gbc.setState(0x382d, 0xa147, 0x9330, 0x3554, 0x39a1, 0xa1d8, 0x1, 0x1);
        gbc.writeMem(0x382d, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0xa147);
        EXPECT(gbc.pc(), 0x382f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C9 028A
        gbc.setState(0xbac3, 0x7fc, 0x3d90, 0xf6d0, 0x24b7, 0x588e, 0x1, 0x0);
        gbc.writeMem(0xbac3, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x7fc);
        EXPECT(gbc.pc(), 0xbac5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbac3), 0xcb);
        EXPECT(gbc.readMem(0xbac4), 0xc9);
        // CB C9 028B
        gbc.setState(0x5e0, 0x103b, 0x1450, 0x1f37, 0x8312, 0xf286, 0x1, 0x0);
        gbc.writeMem(0x5e0, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x103b);
        EXPECT(gbc.pc(), 0x5e2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C9 028D
        gbc.setState(0xca83, 0x3826, 0xb640, 0xd376, 0xf054, 0x79b6, 0x1, 0x0);
        gbc.writeMem(0xca83, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x3826);
        EXPECT(gbc.pc(), 0xca85);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xca83), 0xcb);
        EXPECT(gbc.readMem(0xca84), 0xc9);
        // CB C9 028E
        gbc.setState(0x422, 0x8fc4, 0xa980, 0x8eef, 0x397f, 0x4174, 0x1, 0x1);
        gbc.writeMem(0x422, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x8fc4);
        EXPECT(gbc.pc(), 0x424);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C9 028F
        gbc.setState(0x3030, 0xad64, 0x37a0, 0xf29b, 0x7933, 0x5ae3, 0x0, 0x1);
        gbc.writeMem(0x3030, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xad64);
        EXPECT(gbc.pc(), 0x3032);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C9 0290
        gbc.setState(0x511f, 0x484a, 0xb840, 0xdb8, 0x650e, 0x8f39, 0x0, 0x1);
        gbc.writeMem(0x511f, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x484a);
        EXPECT(gbc.pc(), 0x5121);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C9 0291
        gbc.setState(0x4e3, 0xd455, 0x48e0, 0x6a07, 0x674a, 0x1483, 0x1, 0x1);
        gbc.writeMem(0x4e3, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0xd455);
        EXPECT(gbc.pc(), 0x4e5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C9 0292
        gbc.setState(0xef7f, 0x1e95, 0xb210, 0xa9f2, 0x438a, 0x4147, 0x0, 0x1);
        gbc.writeMem(0xef7f, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x1e95);
        EXPECT(gbc.pc(), 0xef81);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xef7f), 0xcb);
        EXPECT(gbc.readMem(0xef80), 0xc9);
        // CB C9 0293
        gbc.setState(0xc78c, 0x3723, 0x60, 0x535d, 0x772e, 0xaf3e, 0x1, 0x1);
        gbc.writeMem(0xc78c, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x3723);
        EXPECT(gbc.pc(), 0xc78e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc78c), 0xcb);
        EXPECT(gbc.readMem(0xc78d), 0xc9);
        // CB C9 0294
        gbc.setState(0x42a7, 0xcdd5, 0xcd20, 0x3ace, 0xa565, 0x1df1, 0x1, 0x0);
        gbc.writeMem(0x42a7, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0xcdd5);
        EXPECT(gbc.pc(), 0x42a9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C9 0295
        gbc.setState(0x9bed, 0xc03e, 0x80d0, 0xce27, 0xb832, 0xc7f, 0x1, 0x1);
        gbc.writeMem(0x9bed, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xc03e);
        EXPECT(gbc.pc(), 0x9bef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9bed), 0xcb);
        EXPECT(gbc.readMem(0x9bee), 0xc9);
        // CB C9 0296
        gbc.setState(0x1046, 0xfefb, 0x51f0, 0xb545, 0x7ce7, 0x43c8, 0x0, 0x0);
        gbc.writeMem(0x1046, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0xfefb);
        EXPECT(gbc.pc(), 0x1048);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C9 0297
        gbc.setState(0x7ece, 0x3353, 0x4fe0, 0xb498, 0x2457, 0x828, 0x0, 0x0);
        gbc.writeMem(0x7ece, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x3353);
        EXPECT(gbc.pc(), 0x7ed0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C9 0299
        gbc.setState(0xefb5, 0x8352, 0xc910, 0x7451, 0x4c14, 0x8f27, 0x0, 0x1);
        gbc.writeMem(0xefb5, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x8352);
        EXPECT(gbc.pc(), 0xefb7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xefb5), 0xcb);
        EXPECT(gbc.readMem(0xefb6), 0xc9);
        // CB C9 029A
        gbc.setState(0xa24d, 0x8267, 0x87c0, 0x50c7, 0xcade, 0xa287, 0x0, 0x1);
        gbc.writeMem(0xa24d, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x8267);
        EXPECT(gbc.pc(), 0xa24f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa24d), 0xcb);
        EXPECT(gbc.readMem(0xa24e), 0xc9);
        // CB C9 029B
        gbc.setState(0x6c0a, 0xb6e6, 0xb960, 0x6483, 0xaf99, 0xd0c3, 0x0, 0x0);
        gbc.writeMem(0x6c0a, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xb6e6);
        EXPECT(gbc.pc(), 0x6c0c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C9 029C
        gbc.setState(0x3db8, 0xe47f, 0x8e10, 0x440e, 0xb000, 0xbd85, 0x0, 0x1);
        gbc.writeMem(0x3db8, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0xe47f);
        EXPECT(gbc.pc(), 0x3dba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C9 029D
        gbc.setState(0xa712, 0xab6a, 0x2110, 0x92e8, 0x8a66, 0xf943, 0x1, 0x1);
        gbc.writeMem(0xa712, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xab6a);
        EXPECT(gbc.pc(), 0xa714);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa712), 0xcb);
        EXPECT(gbc.readMem(0xa713), 0xc9);
        // CB C9 029E
        gbc.setState(0x83fb, 0xecbc, 0x1f40, 0xa81a, 0x4b3f, 0x1381, 0x1, 0x1);
        gbc.writeMem(0x83fb, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0xecbc);
        EXPECT(gbc.pc(), 0x83fd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x83fb), 0xcb);
        EXPECT(gbc.readMem(0x83fc), 0xc9);
        // CB C9 029F
        gbc.setState(0x1cf, 0xfae9, 0xae60, 0xf116, 0x316a, 0xe45, 0x1, 0x1);
        gbc.writeMem(0x1cf, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0xfae9);
        EXPECT(gbc.pc(), 0x1d1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C9 02A0
        gbc.setState(0xb0d4, 0x3ae1, 0x9f80, 0xbdb1, 0x1e37, 0x17d6, 0x0, 0x0);
        gbc.writeMem(0xb0d4, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x3ae1);
        EXPECT(gbc.pc(), 0xb0d6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb0d4), 0xcb);
        EXPECT(gbc.readMem(0xb0d5), 0xc9);
        // CB C9 02A1
        gbc.setState(0x7ff1, 0x95c6, 0xa1a0, 0xd0d5, 0x9794, 0x2e47, 0x0, 0x0);
        gbc.writeMem(0x7ff1, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x95c6);
        EXPECT(gbc.pc(), 0x7ff3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C9 02A2
        gbc.setState(0x1e7f, 0x9fdd, 0x2520, 0x7634, 0xa7ed, 0x5ae1, 0x0, 0x0);
        gbc.writeMem(0x1e7f, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x9fdd);
        EXPECT(gbc.pc(), 0x1e81);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C9 02A3
        gbc.setState(0xaae2, 0x7193, 0x3820, 0xd052, 0x490f, 0xcc48, 0x1, 0x0);
        gbc.writeMem(0xaae2, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x7193);
        EXPECT(gbc.pc(), 0xaae4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaae2), 0xcb);
        EXPECT(gbc.readMem(0xaae3), 0xc9);
        // CB C9 02A4
        gbc.setState(0x5540, 0x220, 0xf470, 0x1cec, 0xaf78, 0x62d1, 0x1, 0x1);
        gbc.writeMem(0x5540, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x220);
        EXPECT(gbc.pc(), 0x5542);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C9 02A5
        gbc.setState(0xbe69, 0x7a0, 0x2980, 0x53bd, 0xd3e7, 0x382a, 0x1, 0x1);
        gbc.writeMem(0xbe69, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x7a0);
        EXPECT(gbc.pc(), 0xbe6b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbe69), 0xcb);
        EXPECT(gbc.readMem(0xbe6a), 0xc9);
        // CB C9 02A6
        gbc.setState(0x1582, 0x1894, 0x9a20, 0xf156, 0x2428, 0xbe72, 0x1, 0x0);
        gbc.writeMem(0x1582, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x1894);
        EXPECT(gbc.pc(), 0x1584);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C9 02A7
        gbc.setState(0x3a05, 0xb45b, 0xaee0, 0x553a, 0x21cf, 0x6d8e, 0x1, 0x0);
        gbc.writeMem(0x3a05, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0xb45b);
        EXPECT(gbc.pc(), 0x3a07);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C9 02A8
        gbc.setState(0x28bb, 0x4003, 0xf850, 0x44cc, 0x2194, 0xd344, 0x1, 0x0);
        gbc.writeMem(0x28bb, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x4003);
        EXPECT(gbc.pc(), 0x28bd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C9 02A9
        gbc.setState(0xe176, 0x7c6b, 0xb730, 0xde30, 0xa70a, 0xed5b, 0x0, 0x1);
        gbc.writeMem(0xe176, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x7c6b);
        EXPECT(gbc.pc(), 0xe178);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe176), 0xcb);
        EXPECT(gbc.readMem(0xe177), 0xc9);
        // CB C9 02AA
        gbc.setState(0x9469, 0xda3b, 0x1480, 0x557b, 0x2fe2, 0x1706, 0x1, 0x1);
        gbc.writeMem(0x9469, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0xda3b);
        EXPECT(gbc.pc(), 0x946b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9469), 0xcb);
        EXPECT(gbc.readMem(0x946a), 0xc9);
        // CB C9 02AB
        gbc.setState(0x87d7, 0xce0d, 0xed60, 0x9a8f, 0x5f1e, 0x81b4, 0x1, 0x1);
        gbc.writeMem(0x87d7, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xce0d);
        EXPECT(gbc.pc(), 0x87d9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x87d7), 0xcb);
        EXPECT(gbc.readMem(0x87d8), 0xc9);
        // CB C9 02AC
        gbc.setState(0x9cb, 0x7975, 0x49a0, 0x289e, 0x10cb, 0xa773, 0x1, 0x0);
        gbc.writeMem(0x9cb, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x7975);
        EXPECT(gbc.pc(), 0x9cd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C9 02AD
        gbc.setState(0x4054, 0xc3bb, 0x5090, 0x54dd, 0xdf83, 0x566d, 0x0, 0x0);
        gbc.writeMem(0x4054, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0xc3bb);
        EXPECT(gbc.pc(), 0x4056);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C9 02AE
        gbc.setState(0x391a, 0xe7, 0x69e0, 0x1fcb, 0x18df, 0x1c2d, 0x0, 0x0);
        gbc.writeMem(0x391a, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0xe7);
        EXPECT(gbc.pc(), 0x391c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C9 02AF
        gbc.setState(0x477b, 0xc1cf, 0xae20, 0x8027, 0xd664, 0xfbf7, 0x0, 0x1);
        gbc.writeMem(0x477b, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0xc1cf);
        EXPECT(gbc.pc(), 0x477d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C9 02B0
        gbc.setState(0xbbc7, 0xe809, 0x1470, 0xa577, 0xb5d0, 0x9279, 0x1, 0x0);
        gbc.writeMem(0xbbc7, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xe809);
        EXPECT(gbc.pc(), 0xbbc9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbbc7), 0xcb);
        EXPECT(gbc.readMem(0xbbc8), 0xc9);
        // CB C9 02B2
        gbc.setState(0xc3b7, 0xb4a2, 0x9ef0, 0xc40d, 0xb62c, 0x2e65, 0x0, 0x1);
        gbc.writeMem(0xc3b7, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0xb4a2);
        EXPECT(gbc.pc(), 0xc3b9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc3b7), 0xcb);
        EXPECT(gbc.readMem(0xc3b8), 0xc9);
        // CB C9 02B3
        gbc.setState(0x96b2, 0x89a3, 0xb8d0, 0x9907, 0x55c2, 0x1e07, 0x0, 0x0);
        gbc.writeMem(0x96b2, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x89a3);
        EXPECT(gbc.pc(), 0x96b4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x96b2), 0xcb);
        EXPECT(gbc.readMem(0x96b3), 0xc9);
        // CB C9 02B4
        gbc.setState(0xef42, 0x83d5, 0x8d20, 0xe42a, 0x7400, 0x606a, 0x0, 0x0);
        gbc.writeMem(0xef42, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x83d5);
        EXPECT(gbc.pc(), 0xef44);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xef42), 0xcb);
        EXPECT(gbc.readMem(0xef43), 0xc9);
        // CB C9 02B5
        gbc.setState(0x619a, 0xdf6f, 0xf020, 0xe6db, 0x71a6, 0x5d56, 0x0, 0x0);
        gbc.writeMem(0x619a, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0xdf6f);
        EXPECT(gbc.pc(), 0x619c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C9 02B6
        gbc.setState(0x79cb, 0xd330, 0x5890, 0x94d2, 0x6571, 0x9268, 0x0, 0x1);
        gbc.writeMem(0x79cb, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0xd330);
        EXPECT(gbc.pc(), 0x79cd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C9 02B7
        gbc.setState(0x89d8, 0x27db, 0x1820, 0xb321, 0xb1b4, 0x8df, 0x0, 0x1);
        gbc.writeMem(0x89d8, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x27db);
        EXPECT(gbc.pc(), 0x89da);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x89d8), 0xcb);
        EXPECT(gbc.readMem(0x89d9), 0xc9);
        // CB C9 02B8
        gbc.setState(0x8a8a, 0xd7db, 0x7fe0, 0x4999, 0x2a42, 0xfb0, 0x0, 0x1);
        gbc.writeMem(0x8a8a, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xd7db);
        EXPECT(gbc.pc(), 0x8a8c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8a8a), 0xcb);
        EXPECT(gbc.readMem(0x8a8b), 0xc9);
        // CB C9 02B9
        gbc.setState(0x277d, 0x9284, 0xaff0, 0xd673, 0xbb63, 0xd361, 0x1, 0x0);
        gbc.writeMem(0x277d, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x9284);
        EXPECT(gbc.pc(), 0x277f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C9 02BA
        gbc.setState(0xae85, 0x9b78, 0xc850, 0xe35b, 0x4a49, 0x2291, 0x0, 0x0);
        gbc.writeMem(0xae85, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x9b78);
        EXPECT(gbc.pc(), 0xae87);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xae85), 0xcb);
        EXPECT(gbc.readMem(0xae86), 0xc9);
        // CB C9 02BB
        gbc.setState(0x636a, 0x486c, 0x1ab0, 0x120f, 0xd8bc, 0x1394, 0x0, 0x1);
        gbc.writeMem(0x636a, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x486c);
        EXPECT(gbc.pc(), 0x636c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C9 02BC
        gbc.setState(0x32d, 0xa430, 0xb040, 0xefb3, 0x1003, 0x865d, 0x1, 0x1);
        gbc.writeMem(0x32d, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xa430);
        EXPECT(gbc.pc(), 0x32f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C9 02BE
        gbc.setState(0x6e9f, 0x9e88, 0x2d90, 0x61f6, 0xdfcf, 0x994e, 0x0, 0x0);
        gbc.writeMem(0x6e9f, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x9e88);
        EXPECT(gbc.pc(), 0x6ea1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C9 02BF
        gbc.setState(0x2e8f, 0x7603, 0xa0b0, 0x95be, 0x2e33, 0xcefe, 0x0, 0x1);
        gbc.writeMem(0x2e8f, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x7603);
        EXPECT(gbc.pc(), 0x2e91);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C9 02C0
        gbc.setState(0x5fbf, 0x2d14, 0xd460, 0xd430, 0x226f, 0x837b, 0x0, 0x1);
        gbc.writeMem(0x5fbf, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x2d14);
        EXPECT(gbc.pc(), 0x5fc1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C9 02C1
        gbc.setState(0x84bb, 0x23, 0x3590, 0xf5c0, 0x2090, 0xc77f, 0x1, 0x1);
        gbc.writeMem(0x84bb, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x23);
        EXPECT(gbc.pc(), 0x84bd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x84bb), 0xcb);
        EXPECT(gbc.readMem(0x84bc), 0xc9);
        // CB C9 02C2
        gbc.setState(0x5576, 0xa494, 0x58b0, 0x5b3f, 0xef79, 0x9e76, 0x1, 0x0);
        gbc.writeMem(0x5576, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0xa494);
        EXPECT(gbc.pc(), 0x5578);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C9 02C3
        gbc.setState(0xab72, 0x3297, 0x3f90, 0x80a4, 0x6a0e, 0xb887, 0x0, 0x0);
        gbc.writeMem(0xab72, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x3297);
        EXPECT(gbc.pc(), 0xab74);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xab72), 0xcb);
        EXPECT(gbc.readMem(0xab73), 0xc9);
        // CB C9 02C4
        gbc.setState(0xbbce, 0xf501, 0xc700, 0x7436, 0x3199, 0x3474, 0x1, 0x1);
        gbc.writeMem(0xbbce, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xf501);
        EXPECT(gbc.pc(), 0xbbd0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbbce), 0xcb);
        EXPECT(gbc.readMem(0xbbcf), 0xc9);
        // CB C9 02C5
        gbc.setState(0x6342, 0x34a0, 0x9db0, 0x3692, 0xe65a, 0xc3dc, 0x1, 0x0);
        gbc.writeMem(0x6342, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x34a0);
        EXPECT(gbc.pc(), 0x6344);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C9 02C6
        gbc.setState(0xb513, 0x1bc6, 0xf3b0, 0x944a, 0xb30b, 0xcf2d, 0x1, 0x0);
        gbc.writeMem(0xb513, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x1bc6);
        EXPECT(gbc.pc(), 0xb515);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb513), 0xcb);
        EXPECT(gbc.readMem(0xb514), 0xc9);
        // CB C9 02C7
        gbc.setState(0x4db5, 0xfb82, 0x6400, 0x10f2, 0x7e44, 0x9e5d, 0x1, 0x0);
        gbc.writeMem(0x4db5, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xfb82);
        EXPECT(gbc.pc(), 0x4db7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C9 02C8
        gbc.setState(0x2eef, 0x2830, 0xe50, 0xbbbf, 0x8a89, 0xf14f, 0x0, 0x1);
        gbc.writeMem(0x2eef, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x2830);
        EXPECT(gbc.pc(), 0x2ef1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C9 02C9
        gbc.setState(0xdf67, 0x6467, 0x4a80, 0xf525, 0xcc58, 0xaefd, 0x1, 0x0);
        gbc.writeMem(0xdf67, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x6467);
        EXPECT(gbc.pc(), 0xdf69);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdf67), 0xcb);
        EXPECT(gbc.readMem(0xdf68), 0xc9);
        // CB C9 02CA
        gbc.setState(0xaaf0, 0x9589, 0x8c80, 0x22b3, 0x993c, 0x362d, 0x0, 0x0);
        gbc.writeMem(0xaaf0, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x9589);
        EXPECT(gbc.pc(), 0xaaf2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaaf0), 0xcb);
        EXPECT(gbc.readMem(0xaaf1), 0xc9);
        // CB C9 02CB
        gbc.setState(0xd9ff, 0x7f96, 0xc370, 0xf5dd, 0xb3be, 0x2e86, 0x0, 0x0);
        gbc.writeMem(0xd9ff, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x7f96);
        EXPECT(gbc.pc(), 0xda01);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd9ff), 0xcb);
        EXPECT(gbc.readMem(0xda00), 0xc9);
        // CB C9 02CC
        gbc.setState(0x9b94, 0x15f7, 0x3990, 0x8fd9, 0x9ffc, 0xe7df, 0x1, 0x1);
        gbc.writeMem(0x9b94, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x15f7);
        EXPECT(gbc.pc(), 0x9b96);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9b94), 0xcb);
        EXPECT(gbc.readMem(0x9b95), 0xc9);
        // CB C9 02CD
        gbc.setState(0x108d, 0x8551, 0x8790, 0x2bc8, 0x475f, 0xfeb8, 0x0, 0x0);
        gbc.writeMem(0x108d, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x8551);
        EXPECT(gbc.pc(), 0x108f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C9 02CE
        gbc.setState(0x4374, 0xcb64, 0x77e0, 0x3d86, 0x4b50, 0xbf43, 0x0, 0x1);
        gbc.writeMem(0x4374, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xcb64);
        EXPECT(gbc.pc(), 0x4376);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C9 02CF
        gbc.setState(0xec32, 0x501, 0x9850, 0xf48, 0x27d, 0x7dac, 0x1, 0x1);
        gbc.writeMem(0xec32, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x501);
        EXPECT(gbc.pc(), 0xec34);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xec32), 0xcb);
        EXPECT(gbc.readMem(0xec33), 0xc9);
        // CB C9 02D0
        gbc.setState(0x8f80, 0xc41d, 0x9860, 0xb791, 0x2ff7, 0x3a8, 0x0, 0x0);
        gbc.writeMem(0x8f80, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0xc41d);
        EXPECT(gbc.pc(), 0x8f82);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8f80), 0xcb);
        EXPECT(gbc.readMem(0x8f81), 0xc9);
        // CB C9 02D1
        gbc.setState(0xb01e, 0x5232, 0xdb50, 0x4e61, 0x4cc5, 0xe36, 0x1, 0x0);
        gbc.writeMem(0xb01e, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x5232);
        EXPECT(gbc.pc(), 0xb020);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb01e), 0xcb);
        EXPECT(gbc.readMem(0xb01f), 0xc9);
        // CB C9 02D2
        gbc.setState(0x11b4, 0x9626, 0x3870, 0xc6b0, 0x1b6f, 0x5106, 0x0, 0x0);
        gbc.writeMem(0x11b4, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x9626);
        EXPECT(gbc.pc(), 0x11b6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C9 02D3
        gbc.setState(0xa9c1, 0x1d80, 0x2210, 0xb3ac, 0x360a, 0x530f, 0x1, 0x0);
        gbc.writeMem(0xa9c1, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x1d80);
        EXPECT(gbc.pc(), 0xa9c3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa9c1), 0xcb);
        EXPECT(gbc.readMem(0xa9c2), 0xc9);
        // CB C9 02D4
        gbc.setState(0x9233, 0xa830, 0x78c0, 0x7f0c, 0xd4c0, 0x1262, 0x1, 0x1);
        gbc.writeMem(0x9233, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xa830);
        EXPECT(gbc.pc(), 0x9235);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9233), 0xcb);
        EXPECT(gbc.readMem(0x9234), 0xc9);
        // CB C9 02D5
        gbc.setState(0x2255, 0x397b, 0x1ba0, 0xa2a0, 0xc022, 0x6961, 0x0, 0x1);
        gbc.writeMem(0x2255, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x397b);
        EXPECT(gbc.pc(), 0x2257);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C9 02D7
        gbc.setState(0x3631, 0xf54, 0x5230, 0xf7a5, 0x91b9, 0x3474, 0x0, 0x1);
        gbc.writeMem(0x3631, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xf54);
        EXPECT(gbc.pc(), 0x3633);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C9 02D8
        gbc.setState(0xebd4, 0x9d89, 0xb50, 0x92b5, 0x56e, 0x819e, 0x1, 0x0);
        gbc.writeMem(0xebd4, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x9d89);
        EXPECT(gbc.pc(), 0xebd6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xebd4), 0xcb);
        EXPECT(gbc.readMem(0xebd5), 0xc9);
        // CB C9 02D9
        gbc.setState(0xe88a, 0x784b, 0x2440, 0xdbe9, 0x3b4, 0x95f5, 0x0, 0x0);
        gbc.writeMem(0xe88a, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x784b);
        EXPECT(gbc.pc(), 0xe88c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe88a), 0xcb);
        EXPECT(gbc.readMem(0xe88b), 0xc9);
        // CB C9 02DA
        gbc.setState(0x9d78, 0x9236, 0x37c0, 0x6940, 0x93a9, 0xd73a, 0x1, 0x0);
        gbc.writeMem(0x9d78, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x9236);
        EXPECT(gbc.pc(), 0x9d7a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9d78), 0xcb);
        EXPECT(gbc.readMem(0x9d79), 0xc9);
        // CB C9 02DB
        gbc.setState(0x7e49, 0x677, 0x6f50, 0xbb03, 0xd3f9, 0x3567, 0x1, 0x0);
        gbc.writeMem(0x7e49, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x677);
        EXPECT(gbc.pc(), 0x7e4b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C9 02DC
        gbc.setState(0x253e, 0xbe24, 0xd360, 0x2acb, 0xf50c, 0x1376, 0x1, 0x1);
        gbc.writeMem(0x253e, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0xbe24);
        EXPECT(gbc.pc(), 0x2540);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C9 02DD
        gbc.setState(0xed1a, 0x9f8c, 0x7b60, 0x9f41, 0x8c9c, 0xa776, 0x1, 0x1);
        gbc.writeMem(0xed1a, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x9f8c);
        EXPECT(gbc.pc(), 0xed1c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xed1a), 0xcb);
        EXPECT(gbc.readMem(0xed1b), 0xc9);
        // CB C9 02DE
        gbc.setState(0x48b1, 0xbc90, 0x1630, 0x4ef6, 0x79b2, 0x72df, 0x0, 0x1);
        gbc.writeMem(0x48b1, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0xbc90);
        EXPECT(gbc.pc(), 0x48b3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C9 02DF
        gbc.setState(0x447b, 0x79f4, 0xd150, 0x7598, 0x90f4, 0xb825, 0x1, 0x1);
        gbc.writeMem(0x447b, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x79f4);
        EXPECT(gbc.pc(), 0x447d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C9 02E0
        gbc.setState(0x5d9d, 0x33d6, 0xcc30, 0x2117, 0x8d2d, 0xf71e, 0x0, 0x1);
        gbc.writeMem(0x5d9d, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x33d6);
        EXPECT(gbc.pc(), 0x5d9f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C9 02E1
        gbc.setState(0xbe88, 0xf40f, 0x8f60, 0x3e7e, 0x238, 0xc80e, 0x1, 0x1);
        gbc.writeMem(0xbe88, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0xf40f);
        EXPECT(gbc.pc(), 0xbe8a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbe88), 0xcb);
        EXPECT(gbc.readMem(0xbe89), 0xc9);
        // CB C9 02E2
        gbc.setState(0x97d5, 0x3942, 0xf080, 0xc507, 0xdfbb, 0x6ef5, 0x1, 0x1);
        gbc.writeMem(0x97d5, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x3942);
        EXPECT(gbc.pc(), 0x97d7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x97d5), 0xcb);
        EXPECT(gbc.readMem(0x97d6), 0xc9);
        // CB C9 02E3
        gbc.setState(0x1b32, 0x420e, 0xbaa0, 0xf95e, 0xc611, 0xfff4, 0x0, 0x0);
        gbc.writeMem(0x1b32, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x420e);
        EXPECT(gbc.pc(), 0x1b34);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C9 02E4
        gbc.setState(0x204e, 0x2272, 0x9900, 0x9366, 0xc112, 0x2540, 0x0, 0x0);
        gbc.writeMem(0x204e, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x2272);
        EXPECT(gbc.pc(), 0x2050);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C9 02E5
        gbc.setState(0xc9cd, 0x4f13, 0xc5e0, 0x8a44, 0x8935, 0xbfc, 0x0, 0x1);
        gbc.writeMem(0xc9cd, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x4f13);
        EXPECT(gbc.pc(), 0xc9cf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc9cd), 0xcb);
        EXPECT(gbc.readMem(0xc9ce), 0xc9);
        // CB C9 02E6
        gbc.setState(0xa388, 0x482c, 0x1fe0, 0x764c, 0xc423, 0x85c9, 0x1, 0x0);
        gbc.writeMem(0xa388, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x482c);
        EXPECT(gbc.pc(), 0xa38a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa388), 0xcb);
        EXPECT(gbc.readMem(0xa389), 0xc9);
        // CB C9 02E7
        gbc.setState(0x9059, 0xea44, 0x6dd0, 0xae9b, 0x3c99, 0x11c4, 0x0, 0x0);
        gbc.writeMem(0x9059, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0xea44);
        EXPECT(gbc.pc(), 0x905b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9059), 0xcb);
        EXPECT(gbc.readMem(0x905a), 0xc9);
        // CB C9 02E9
        gbc.setState(0x4c3f, 0x2de3, 0xf6c0, 0x292c, 0xa9f4, 0xfeb5, 0x1, 0x1);
        gbc.writeMem(0x4c3f, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x2de3);
        EXPECT(gbc.pc(), 0x4c41);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C9 02EB
        gbc.setState(0x7c87, 0xdaec, 0xb6e0, 0xeeb0, 0xb0d4, 0x798b, 0x0, 0x1);
        gbc.writeMem(0x7c87, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0xdaec);
        EXPECT(gbc.pc(), 0x7c89);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C9 02EC
        gbc.setState(0x5200, 0x98d0, 0x2820, 0x84ee, 0x5f62, 0x8e5c, 0x1, 0x1);
        gbc.writeMem(0x5200, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x98d0);
        EXPECT(gbc.pc(), 0x5202);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C9 02ED
        gbc.setState(0xaedf, 0xc6ce, 0x4980, 0x4fe5, 0x26b0, 0x3fa6, 0x1, 0x1);
        gbc.writeMem(0xaedf, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0xc6ce);
        EXPECT(gbc.pc(), 0xaee1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaedf), 0xcb);
        EXPECT(gbc.readMem(0xaee0), 0xc9);
        // CB C9 02EE
        gbc.setState(0xc627, 0xcdda, 0xca50, 0xb98b, 0x4372, 0xe519, 0x0, 0x0);
        gbc.writeMem(0xc627, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0xcdda);
        EXPECT(gbc.pc(), 0xc629);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc627), 0xcb);
        EXPECT(gbc.readMem(0xc628), 0xc9);
        // CB C9 02F0
        gbc.setState(0x6543, 0x7cd0, 0x460, 0x419c, 0x316b, 0xe921, 0x1, 0x1);
        gbc.writeMem(0x6543, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x7cd0);
        EXPECT(gbc.pc(), 0x6545);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C9 02F1
        gbc.setState(0x7c82, 0xe032, 0xa340, 0xed55, 0x1cde, 0x847d, 0x0, 0x0);
        gbc.writeMem(0x7c82, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xe032);
        EXPECT(gbc.pc(), 0x7c84);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C9 02F2
        gbc.setState(0x259e, 0x5852, 0xa440, 0xb5cf, 0xf55b, 0xd53c, 0x1, 0x1);
        gbc.writeMem(0x259e, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x5852);
        EXPECT(gbc.pc(), 0x25a0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C9 02F3
        gbc.setState(0x901f, 0x790c, 0x20e0, 0x106b, 0x248c, 0xec46, 0x0, 0x0);
        gbc.writeMem(0x901f, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x790c);
        EXPECT(gbc.pc(), 0x9021);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x901f), 0xcb);
        EXPECT(gbc.readMem(0x9020), 0xc9);
        // CB C9 02F4
        gbc.setState(0xb037, 0xea32, 0x10b0, 0x1e43, 0xabd7, 0xd555, 0x0, 0x1);
        gbc.writeMem(0xb037, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0xea32);
        EXPECT(gbc.pc(), 0xb039);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb037), 0xcb);
        EXPECT(gbc.readMem(0xb038), 0xc9);
        // CB C9 02F5
        gbc.setState(0xcf6c, 0x6f09, 0x5b90, 0x97fd, 0xb47, 0xecaf, 0x0, 0x0);
        gbc.writeMem(0xcf6c, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x6f09);
        EXPECT(gbc.pc(), 0xcf6e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcf6c), 0xcb);
        EXPECT(gbc.readMem(0xcf6d), 0xc9);
        // CB C9 02F6
        gbc.setState(0xe075, 0x4ac2, 0x9cb0, 0x93f3, 0x90f6, 0x2441, 0x0, 0x0);
        gbc.writeMem(0xe075, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x4ac2);
        EXPECT(gbc.pc(), 0xe077);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe075), 0xcb);
        EXPECT(gbc.readMem(0xe076), 0xc9);
        // CB C9 02F7
        gbc.setState(0xcdf9, 0x9c2, 0x6380, 0x60fe, 0x92d0, 0x49a5, 0x1, 0x1);
        gbc.writeMem(0xcdf9, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x9c2);
        EXPECT(gbc.pc(), 0xcdfb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcdf9), 0xcb);
        EXPECT(gbc.readMem(0xcdfa), 0xc9);
        // CB C9 02F8
        gbc.setState(0x6a8b, 0x4da3, 0x1ba0, 0x5128, 0x96c3, 0x65, 0x1, 0x1);
        gbc.writeMem(0x6a8b, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x4da3);
        EXPECT(gbc.pc(), 0x6a8d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C9 02F9
        gbc.setState(0xd893, 0xe4e0, 0x1100, 0xa653, 0x2b7, 0x9378, 0x0, 0x0);
        gbc.writeMem(0xd893, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0xe4e0);
        EXPECT(gbc.pc(), 0xd895);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd893), 0xcb);
        EXPECT(gbc.readMem(0xd894), 0xc9);
        // CB C9 02FB
        gbc.setState(0xc93c, 0x7ca0, 0xf050, 0x12aa, 0x47ea, 0x1b7c, 0x0, 0x0);
        gbc.writeMem(0xc93c, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x7ca0);
        EXPECT(gbc.pc(), 0xc93e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc93c), 0xcb);
        EXPECT(gbc.readMem(0xc93d), 0xc9);
        // CB C9 02FC
        gbc.setState(0x24b2, 0x1613, 0x8690, 0xd304, 0x3c83, 0xc50e, 0x0, 0x1);
        gbc.writeMem(0x24b2, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x1613);
        EXPECT(gbc.pc(), 0x24b4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C9 02FD
        gbc.setState(0xb6c6, 0x332f, 0x99e0, 0x3117, 0x7b17, 0xa613, 0x1, 0x1);
        gbc.writeMem(0xb6c6, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x332f);
        EXPECT(gbc.pc(), 0xb6c8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb6c6), 0xcb);
        EXPECT(gbc.readMem(0xb6c7), 0xc9);
        // CB C9 02FE
        gbc.setState(0x2487, 0xb580, 0x2d50, 0xe767, 0xf76c, 0xfe11, 0x1, 0x1);
        gbc.writeMem(0x2487, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0xb580);
        EXPECT(gbc.pc(), 0x2489);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C9 02FF
        gbc.setState(0xa0d8, 0x2878, 0xc9b0, 0xb55a, 0x5b4a, 0x4cb5, 0x1, 0x0);
        gbc.writeMem(0xa0d8, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x2878);
        EXPECT(gbc.pc(), 0xa0da);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa0d8), 0xcb);
        EXPECT(gbc.readMem(0xa0d9), 0xc9);
        // CB C9 0300
        gbc.setState(0x7125, 0x95cd, 0x38f0, 0xed7c, 0xa0e7, 0xe27d, 0x0, 0x1);
        gbc.writeMem(0x7125, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x95cd);
        EXPECT(gbc.pc(), 0x7127);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C9 0301
        gbc.setState(0xd439, 0xc550, 0xb460, 0x4102, 0xa63b, 0xa10, 0x0, 0x1);
        gbc.writeMem(0xd439, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xc550);
        EXPECT(gbc.pc(), 0xd43b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd439), 0xcb);
        EXPECT(gbc.readMem(0xd43a), 0xc9);
        // CB C9 0302
        gbc.setState(0xa11f, 0x8c6, 0x4380, 0x35d7, 0x8670, 0xcf0, 0x0, 0x1);
        gbc.writeMem(0xa11f, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x8c6);
        EXPECT(gbc.pc(), 0xa121);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa11f), 0xcb);
        EXPECT(gbc.readMem(0xa120), 0xc9);
        // CB C9 0303
        gbc.setState(0x2eed, 0x681c, 0x1950, 0x8ec, 0x3a4e, 0xb7fb, 0x0, 0x1);
        gbc.writeMem(0x2eed, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x681c);
        EXPECT(gbc.pc(), 0x2eef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C9 0304
        gbc.setState(0x5f24, 0x3d53, 0x9110, 0x3b99, 0xbe94, 0xbc43, 0x0, 0x0);
        gbc.writeMem(0x5f24, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x3d53);
        EXPECT(gbc.pc(), 0x5f26);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C9 0305
        gbc.setState(0x7f61, 0x7439, 0x640, 0xd2e6, 0xa14f, 0x44e5, 0x1, 0x0);
        gbc.writeMem(0x7f61, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x7439);
        EXPECT(gbc.pc(), 0x7f63);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C9 0306
        gbc.setState(0x5f0c, 0xb6af, 0x6a60, 0x5fee, 0x258e, 0x46b2, 0x0, 0x0);
        gbc.writeMem(0x5f0c, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0xb6af);
        EXPECT(gbc.pc(), 0x5f0e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C9 0307
        gbc.setState(0x61ad, 0xb03f, 0xa400, 0xa4bc, 0xab29, 0x67e8, 0x1, 0x0);
        gbc.writeMem(0x61ad, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0xb03f);
        EXPECT(gbc.pc(), 0x61af);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C9 0308
        gbc.setState(0x3862, 0x9d6e, 0x590, 0xef28, 0x5bfe, 0xd898, 0x0, 0x0);
        gbc.writeMem(0x3862, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x9d6e);
        EXPECT(gbc.pc(), 0x3864);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C9 0309
        gbc.setState(0x5508, 0x95fa, 0xef20, 0xfbc4, 0xbc0d, 0xd256, 0x0, 0x0);
        gbc.writeMem(0x5508, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x95fa);
        EXPECT(gbc.pc(), 0x550a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C9 030A
        gbc.setState(0xad26, 0xd53b, 0x7210, 0xb24c, 0xa725, 0xbc20, 0x1, 0x0);
        gbc.writeMem(0xad26, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0xd53b);
        EXPECT(gbc.pc(), 0xad28);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xad26), 0xcb);
        EXPECT(gbc.readMem(0xad27), 0xc9);
        // CB C9 030B
        gbc.setState(0xa618, 0xe5fc, 0x4680, 0x2087, 0xe2fb, 0xb317, 0x1, 0x1);
        gbc.writeMem(0xa618, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0xe5fc);
        EXPECT(gbc.pc(), 0xa61a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa618), 0xcb);
        EXPECT(gbc.readMem(0xa619), 0xc9);
        // CB C9 030C
        gbc.setState(0xebb8, 0x3d03, 0x6b70, 0xeb1d, 0x581b, 0x3f7, 0x0, 0x0);
        gbc.writeMem(0xebb8, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x3d03);
        EXPECT(gbc.pc(), 0xebba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xebb8), 0xcb);
        EXPECT(gbc.readMem(0xebb9), 0xc9);
        // CB C9 030D
        gbc.setState(0x3520, 0xb6c8, 0x3fd0, 0x1861, 0x4c59, 0x3e97, 0x1, 0x1);
        gbc.writeMem(0x3520, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0xb6c8);
        EXPECT(gbc.pc(), 0x3522);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C9 030E
        gbc.setState(0x2b40, 0xb205, 0x5840, 0x2c4c, 0xb4d0, 0x4fe6, 0x1, 0x1);
        gbc.writeMem(0x2b40, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xb205);
        EXPECT(gbc.pc(), 0x2b42);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C9 030F
        gbc.setState(0xeb0c, 0x71e0, 0x8960, 0x15a, 0xf0b0, 0xd54a, 0x1, 0x0);
        gbc.writeMem(0xeb0c, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x71e0);
        EXPECT(gbc.pc(), 0xeb0e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeb0c), 0xcb);
        EXPECT(gbc.readMem(0xeb0d), 0xc9);
        // CB C9 0310
        gbc.setState(0x1a1d, 0x5647, 0x7750, 0xf42f, 0x2743, 0x2b99, 0x0, 0x0);
        gbc.writeMem(0x1a1d, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x5647);
        EXPECT(gbc.pc(), 0x1a1f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C9 0311
        gbc.setState(0xe03c, 0xf21f, 0x6920, 0x569d, 0x62a, 0xcf86, 0x1, 0x0);
        gbc.writeMem(0xe03c, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0xf21f);
        EXPECT(gbc.pc(), 0xe03e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe03c), 0xcb);
        EXPECT(gbc.readMem(0xe03d), 0xc9);
        // CB C9 0312
        gbc.setState(0xc8bf, 0x5cfc, 0x8cb0, 0x6984, 0x1654, 0x2d9e, 0x0, 0x0);
        gbc.writeMem(0xc8bf, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x5cfc);
        EXPECT(gbc.pc(), 0xc8c1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc8bf), 0xcb);
        EXPECT(gbc.readMem(0xc8c0), 0xc9);
        // CB C9 0313
        gbc.setState(0xb576, 0xe553, 0xc7a0, 0x3c62, 0x6f49, 0xbc84, 0x0, 0x1);
        gbc.writeMem(0xb576, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0xe553);
        EXPECT(gbc.pc(), 0xb578);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb576), 0xcb);
        EXPECT(gbc.readMem(0xb577), 0xc9);
        // CB C9 0314
        gbc.setState(0x164, 0xe802, 0x9850, 0xc22b, 0x29b7, 0x4bf2, 0x1, 0x0);
        gbc.writeMem(0x164, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0xe802);
        EXPECT(gbc.pc(), 0x166);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C9 0315
        gbc.setState(0x582c, 0x694, 0x45b0, 0x8266, 0x5c0a, 0x452, 0x0, 0x0);
        gbc.writeMem(0x582c, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x694);
        EXPECT(gbc.pc(), 0x582e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C9 0316
        gbc.setState(0x92c2, 0x1f10, 0x810, 0x60a7, 0x8363, 0xa7f4, 0x1, 0x1);
        gbc.writeMem(0x92c2, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x1f10);
        EXPECT(gbc.pc(), 0x92c4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x92c2), 0xcb);
        EXPECT(gbc.readMem(0x92c3), 0xc9);
        // CB C9 0317
        gbc.setState(0x91c2, 0x6aa9, 0x9570, 0x89ad, 0x6310, 0xfd6b, 0x1, 0x1);
        gbc.writeMem(0x91c2, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x6aa9);
        EXPECT(gbc.pc(), 0x91c4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x91c2), 0xcb);
        EXPECT(gbc.readMem(0x91c3), 0xc9);
        // CB C9 0318
        gbc.setState(0x7f95, 0xead6, 0x90d0, 0xf422, 0xe64f, 0x4054, 0x0, 0x1);
        gbc.writeMem(0x7f95, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0xead6);
        EXPECT(gbc.pc(), 0x7f97);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C9 0319
        gbc.setState(0x8f8b, 0x3b8d, 0x4400, 0xc5ea, 0x2f2d, 0xc277, 0x0, 0x1);
        gbc.writeMem(0x8f8b, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x3b8d);
        EXPECT(gbc.pc(), 0x8f8d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8f8b), 0xcb);
        EXPECT(gbc.readMem(0x8f8c), 0xc9);
        // CB C9 031B
        gbc.setState(0x992d, 0xea4a, 0x11c0, 0xd93d, 0x6445, 0xe79b, 0x1, 0x0);
        gbc.writeMem(0x992d, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0xea4a);
        EXPECT(gbc.pc(), 0x992f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x992d), 0xcb);
        EXPECT(gbc.readMem(0x992e), 0xc9);
        // CB C9 031C
        gbc.setState(0x6812, 0x699e, 0xb290, 0x7413, 0xac44, 0x44f6, 0x1, 0x0);
        gbc.writeMem(0x6812, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x699e);
        EXPECT(gbc.pc(), 0x6814);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C9 031D
        gbc.setState(0xae38, 0x9430, 0xa040, 0x58a4, 0x9ccb, 0x1b3e, 0x0, 0x1);
        gbc.writeMem(0xae38, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x9430);
        EXPECT(gbc.pc(), 0xae3a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xae38), 0xcb);
        EXPECT(gbc.readMem(0xae39), 0xc9);
        // CB C9 031E
        gbc.setState(0x9553, 0x2d03, 0x84c0, 0x69f2, 0x752a, 0xf190, 0x1, 0x1);
        gbc.writeMem(0x9553, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x2d03);
        EXPECT(gbc.pc(), 0x9555);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9553), 0xcb);
        EXPECT(gbc.readMem(0x9554), 0xc9);
        // CB C9 031F
        gbc.setState(0x46ce, 0xe76, 0x8e90, 0x7844, 0xbf2b, 0x3cf8, 0x1, 0x1);
        gbc.writeMem(0x46ce, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0xe76);
        EXPECT(gbc.pc(), 0x46d0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C9 0320
        gbc.setState(0xb1f5, 0xd51b, 0xd110, 0x6731, 0x26e, 0xbf33, 0x1, 0x0);
        gbc.writeMem(0xb1f5, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0xd51b);
        EXPECT(gbc.pc(), 0xb1f7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb1f5), 0xcb);
        EXPECT(gbc.readMem(0xb1f6), 0xc9);
        // CB C9 0321
        gbc.setState(0xe307, 0x4ccc, 0xee90, 0x781, 0x45e8, 0x8bae, 0x1, 0x0);
        gbc.writeMem(0xe307, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x4ccc);
        EXPECT(gbc.pc(), 0xe309);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe307), 0xcb);
        EXPECT(gbc.readMem(0xe308), 0xc9);
        // CB C9 0323
        gbc.setState(0x6421, 0x5844, 0xfcd0, 0x8865, 0x9e59, 0xdf1e, 0x1, 0x0);
        gbc.writeMem(0x6421, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x5844);
        EXPECT(gbc.pc(), 0x6423);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C9 0324
        gbc.setState(0x7936, 0x4c30, 0xddb0, 0x7e72, 0x3ffe, 0xbafd, 0x0, 0x0);
        gbc.writeMem(0x7936, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x4c30);
        EXPECT(gbc.pc(), 0x7938);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C9 0325
        gbc.setState(0x87ee, 0x11fc, 0xec60, 0x51cc, 0xdf4a, 0x98ad, 0x1, 0x0);
        gbc.writeMem(0x87ee, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x11fc);
        EXPECT(gbc.pc(), 0x87f0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x87ee), 0xcb);
        EXPECT(gbc.readMem(0x87ef), 0xc9);
        // CB C9 0326
        gbc.setState(0x5810, 0xb825, 0xb000, 0xa900, 0x7be9, 0xd84f, 0x0, 0x0);
        gbc.writeMem(0x5810, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0xb825);
        EXPECT(gbc.pc(), 0x5812);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C9 0327
        gbc.setState(0x4513, 0xb329, 0x5f60, 0xbbca, 0x4b9b, 0x8be3, 0x1, 0x0);
        gbc.writeMem(0x4513, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xb329);
        EXPECT(gbc.pc(), 0x4515);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C9 0328
        gbc.setState(0xf2e, 0xabbc, 0x81d0, 0xf81a, 0x351b, 0xd03f, 0x1, 0x0);
        gbc.writeMem(0xf2e, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xabbc);
        EXPECT(gbc.pc(), 0xf30);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C9 0329
        gbc.setState(0xb152, 0xe38e, 0x61b0, 0xdb07, 0x2f6a, 0xb535, 0x0, 0x1);
        gbc.writeMem(0xb152, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0xe38e);
        EXPECT(gbc.pc(), 0xb154);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb152), 0xcb);
        EXPECT(gbc.readMem(0xb153), 0xc9);
        // CB C9 032A
        gbc.setState(0x2a00, 0x48a1, 0x500, 0xbabe, 0x8e74, 0x426f, 0x0, 0x0);
        gbc.writeMem(0x2a00, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x48a1);
        EXPECT(gbc.pc(), 0x2a02);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C9 032B
        gbc.setState(0x2eb8, 0x4887, 0x3540, 0x5044, 0xfc2e, 0x6638, 0x0, 0x1);
        gbc.writeMem(0x2eb8, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x4887);
        EXPECT(gbc.pc(), 0x2eba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C9 032C
        gbc.setState(0xd38f, 0x31b9, 0xbac0, 0x4a26, 0x2062, 0x83aa, 0x1, 0x1);
        gbc.writeMem(0xd38f, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x31b9);
        EXPECT(gbc.pc(), 0xd391);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd38f), 0xcb);
        EXPECT(gbc.readMem(0xd390), 0xc9);
        // CB C9 032D
        gbc.setState(0xa146, 0x143c, 0x1e0, 0x404d, 0x150e, 0xc78d, 0x1, 0x0);
        gbc.writeMem(0xa146, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x143c);
        EXPECT(gbc.pc(), 0xa148);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa146), 0xcb);
        EXPECT(gbc.readMem(0xa147), 0xc9);
        // CB C9 032E
        gbc.setState(0x91d7, 0xf7a4, 0x3170, 0x20a4, 0x24b, 0x4d33, 0x0, 0x0);
        gbc.writeMem(0x91d7, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0xf7a4);
        EXPECT(gbc.pc(), 0x91d9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x91d7), 0xcb);
        EXPECT(gbc.readMem(0x91d8), 0xc9);
        // CB C9 0330
        gbc.setState(0x116a, 0xaf37, 0x7b70, 0x3a8c, 0x5f8c, 0xc496, 0x1, 0x1);
        gbc.writeMem(0x116a, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0xaf37);
        EXPECT(gbc.pc(), 0x116c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C9 0331
        gbc.setState(0x387a, 0xa6bc, 0xe690, 0x9dff, 0x4bc8, 0xcb20, 0x0, 0x0);
        gbc.writeMem(0x387a, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0xa6bc);
        EXPECT(gbc.pc(), 0x387c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C9 0332
        gbc.setState(0xae0f, 0x39e5, 0xfcb0, 0x6644, 0xa314, 0xd912, 0x1, 0x0);
        gbc.writeMem(0xae0f, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x39e5);
        EXPECT(gbc.pc(), 0xae11);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xae0f), 0xcb);
        EXPECT(gbc.readMem(0xae10), 0xc9);
        // CB C9 0333
        gbc.setState(0x7ac1, 0x2ea3, 0xa8f0, 0x7d83, 0x8222, 0x38b2, 0x0, 0x0);
        gbc.writeMem(0x7ac1, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x2ea3);
        EXPECT(gbc.pc(), 0x7ac3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C9 0334
        gbc.setState(0x8aa5, 0x60c4, 0x8d00, 0x6854, 0xb40a, 0x97dc, 0x0, 0x1);
        gbc.writeMem(0x8aa5, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x60c4);
        EXPECT(gbc.pc(), 0x8aa7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8aa5), 0xcb);
        EXPECT(gbc.readMem(0x8aa6), 0xc9);
        // CB C9 0335
        gbc.setState(0xed93, 0x302a, 0x960, 0xf85e, 0xfb69, 0x57b8, 0x1, 0x1);
        gbc.writeMem(0xed93, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x302a);
        EXPECT(gbc.pc(), 0xed95);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xed93), 0xcb);
        EXPECT(gbc.readMem(0xed94), 0xc9);
        // CB C9 0336
        gbc.setState(0xb9bb, 0xc245, 0xd200, 0x25c4, 0x449d, 0xa5a, 0x0, 0x0);
        gbc.writeMem(0xb9bb, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0xc245);
        EXPECT(gbc.pc(), 0xb9bd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb9bb), 0xcb);
        EXPECT(gbc.readMem(0xb9bc), 0xc9);
        // CB C9 0337
        gbc.setState(0x1c1, 0xb42, 0x42f0, 0x1853, 0xd8a6, 0x8f70, 0x1, 0x0);
        gbc.writeMem(0x1c1, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0xb42);
        EXPECT(gbc.pc(), 0x1c3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C9 0338
        gbc.setState(0xe9fb, 0x7175, 0xac90, 0x4b00, 0x45cc, 0xecfa, 0x1, 0x0);
        gbc.writeMem(0xe9fb, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x7175);
        EXPECT(gbc.pc(), 0xe9fd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe9fb), 0xcb);
        EXPECT(gbc.readMem(0xe9fc), 0xc9);
        // CB C9 0339
        gbc.setState(0x2e44, 0xa326, 0x54e0, 0x63f5, 0x99a2, 0x7b58, 0x0, 0x0);
        gbc.writeMem(0x2e44, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0xa326);
        EXPECT(gbc.pc(), 0x2e46);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C9 033A
        gbc.setState(0xd7aa, 0x4f2e, 0x48b0, 0x7338, 0x8798, 0x6d1c, 0x0, 0x0);
        gbc.writeMem(0xd7aa, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x4f2e);
        EXPECT(gbc.pc(), 0xd7ac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd7aa), 0xcb);
        EXPECT(gbc.readMem(0xd7ab), 0xc9);
        // CB C9 033B
        gbc.setState(0x86b5, 0x2e6, 0xe220, 0x99b7, 0x6dcd, 0x86f, 0x1, 0x0);
        gbc.writeMem(0x86b5, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x2e6);
        EXPECT(gbc.pc(), 0x86b7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x86b5), 0xcb);
        EXPECT(gbc.readMem(0x86b6), 0xc9);
        // CB C9 033C
        gbc.setState(0xe0b7, 0xcad8, 0x9310, 0xdebe, 0xfe49, 0xc54c, 0x0, 0x0);
        gbc.writeMem(0xe0b7, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0xcad8);
        EXPECT(gbc.pc(), 0xe0b9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe0b7), 0xcb);
        EXPECT(gbc.readMem(0xe0b8), 0xc9);
        // CB C9 033D
        gbc.setState(0x9a06, 0x3c6c, 0x3fe0, 0x5766, 0xc244, 0x9869, 0x0, 0x1);
        gbc.writeMem(0x9a06, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x3c6c);
        EXPECT(gbc.pc(), 0x9a08);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9a06), 0xcb);
        EXPECT(gbc.readMem(0x9a07), 0xc9);
        // CB C9 033E
        gbc.setState(0x395b, 0xf85a, 0x4000, 0x5abd, 0xce46, 0xbb77, 0x1, 0x0);
        gbc.writeMem(0x395b, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xf85a);
        EXPECT(gbc.pc(), 0x395d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C9 033F
        gbc.setState(0xe417, 0x5e40, 0x6030, 0xf7ab, 0x4509, 0x4b56, 0x1, 0x1);
        gbc.writeMem(0xe417, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x5e40);
        EXPECT(gbc.pc(), 0xe419);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe417), 0xcb);
        EXPECT(gbc.readMem(0xe418), 0xc9);
        // CB C9 0340
        gbc.setState(0xa751, 0xb7d9, 0x6a0, 0x9500, 0x1b3, 0x60df, 0x1, 0x0);
        gbc.writeMem(0xa751, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0xb7d9);
        EXPECT(gbc.pc(), 0xa753);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa751), 0xcb);
        EXPECT(gbc.readMem(0xa752), 0xc9);
        // CB C9 0341
        gbc.setState(0x6d85, 0x3769, 0x40b0, 0x6424, 0x8d00, 0x886d, 0x1, 0x0);
        gbc.writeMem(0x6d85, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x3769);
        EXPECT(gbc.pc(), 0x6d87);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C9 0342
        gbc.setState(0xe4b5, 0x2490, 0x43a0, 0x871b, 0x7b32, 0xdb45, 0x1, 0x1);
        gbc.writeMem(0xe4b5, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x2490);
        EXPECT(gbc.pc(), 0xe4b7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe4b5), 0xcb);
        EXPECT(gbc.readMem(0xe4b6), 0xc9);
        // CB C9 0343
        gbc.setState(0x7705, 0xcdba, 0x4680, 0x662, 0x8514, 0x3abd, 0x0, 0x0);
        gbc.writeMem(0x7705, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0xcdba);
        EXPECT(gbc.pc(), 0x7707);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C9 0344
        gbc.setState(0xd831, 0x26da, 0xfd90, 0x99f6, 0x469f, 0x105d, 0x0, 0x0);
        gbc.writeMem(0xd831, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x26da);
        EXPECT(gbc.pc(), 0xd833);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd831), 0xcb);
        EXPECT(gbc.readMem(0xd832), 0xc9);
        // CB C9 0345
        gbc.setState(0xb345, 0xe894, 0xb820, 0x6026, 0x4d1e, 0xb93c, 0x1, 0x1);
        gbc.writeMem(0xb345, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xe894);
        EXPECT(gbc.pc(), 0xb347);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb345), 0xcb);
        EXPECT(gbc.readMem(0xb346), 0xc9);
        // CB C9 0346
        gbc.setState(0x78af, 0x2545, 0x91e0, 0x657, 0xac46, 0x5890, 0x1, 0x1);
        gbc.writeMem(0x78af, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x2545);
        EXPECT(gbc.pc(), 0x78b1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C9 0347
        gbc.setState(0x25a9, 0xfb0d, 0xf3b0, 0x501c, 0xc377, 0xcb1a, 0x0, 0x0);
        gbc.writeMem(0x25a9, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0xfb0d);
        EXPECT(gbc.pc(), 0x25ab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C9 0348
        gbc.setState(0x2abd, 0x888a, 0xaf60, 0x8c3, 0x6ded, 0xc332, 0x0, 0x0);
        gbc.writeMem(0x2abd, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x888a);
        EXPECT(gbc.pc(), 0x2abf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C9 0349
        gbc.setState(0x1a4a, 0x267b, 0xfd80, 0x76c7, 0xc432, 0x9611, 0x0, 0x1);
        gbc.writeMem(0x1a4a, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x267b);
        EXPECT(gbc.pc(), 0x1a4c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C9 034A
        gbc.setState(0x781c, 0xc3ec, 0xb30, 0xe53d, 0x43a3, 0x7e66, 0x0, 0x0);
        gbc.writeMem(0x781c, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0xc3ec);
        EXPECT(gbc.pc(), 0x781e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C9 034C
        gbc.setState(0x247d, 0x50e0, 0x5f90, 0x8937, 0x660b, 0x17c3, 0x1, 0x0);
        gbc.writeMem(0x247d, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x50e0);
        EXPECT(gbc.pc(), 0x247f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C9 034D
        gbc.setState(0x629a, 0x4565, 0xfcb0, 0x7f69, 0xc428, 0x9eb, 0x0, 0x0);
        gbc.writeMem(0x629a, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x4565);
        EXPECT(gbc.pc(), 0x629c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C9 034F
        gbc.setState(0x37a5, 0x6584, 0xd140, 0x3731, 0xcbe1, 0x151e, 0x1, 0x1);
        gbc.writeMem(0x37a5, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x6584);
        EXPECT(gbc.pc(), 0x37a7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C9 0350
        gbc.setState(0x637, 0x381, 0x4540, 0x1f27, 0x9855, 0x259e, 0x1, 0x1);
        gbc.writeMem(0x637, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x381);
        EXPECT(gbc.pc(), 0x639);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C9 0351
        gbc.setState(0x54fc, 0xc936, 0x9970, 0xd143, 0xb4ee, 0x9015, 0x1, 0x0);
        gbc.writeMem(0x54fc, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0xc936);
        EXPECT(gbc.pc(), 0x54fe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C9 0352
        gbc.setState(0xd18, 0x8b21, 0x680, 0xda72, 0xe71, 0xbbbd, 0x1, 0x1);
        gbc.writeMem(0xd18, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x8b21);
        EXPECT(gbc.pc(), 0xd1a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C9 0353
        gbc.setState(0x354d, 0x4eb9, 0xd730, 0x508f, 0x99da, 0x68fb, 0x0, 0x0);
        gbc.writeMem(0x354d, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x4eb9);
        EXPECT(gbc.pc(), 0x354f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C9 0354
        gbc.setState(0xc603, 0xd857, 0x9170, 0xb076, 0xb2b2, 0xb901, 0x0, 0x0);
        gbc.writeMem(0xc603, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0xd857);
        EXPECT(gbc.pc(), 0xc605);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc603), 0xcb);
        EXPECT(gbc.readMem(0xc604), 0xc9);
        // CB C9 0355
        gbc.setState(0xaa55, 0xf473, 0x3740, 0x1814, 0xf22d, 0xd2a4, 0x0, 0x0);
        gbc.writeMem(0xaa55, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0xf473);
        EXPECT(gbc.pc(), 0xaa57);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaa55), 0xcb);
        EXPECT(gbc.readMem(0xaa56), 0xc9);
        // CB C9 0356
        gbc.setState(0xeeb, 0x360f, 0xab00, 0x873f, 0x58a8, 0x59ee, 0x0, 0x0);
        gbc.writeMem(0xeeb, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x360f);
        EXPECT(gbc.pc(), 0xeed);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C9 0357
        gbc.setState(0x3d14, 0x18eb, 0x6ae0, 0xefc6, 0x2091, 0xa6e0, 0x1, 0x1);
        gbc.writeMem(0x3d14, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x18eb);
        EXPECT(gbc.pc(), 0x3d16);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C9 0358
        gbc.setState(0x9957, 0x82e9, 0x8260, 0xb44a, 0x9bed, 0x54be, 0x0, 0x1);
        gbc.writeMem(0x9957, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x82e9);
        EXPECT(gbc.pc(), 0x9959);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9957), 0xcb);
        EXPECT(gbc.readMem(0x9958), 0xc9);
        // CB C9 0359
        gbc.setState(0x57d0, 0x8ecb, 0x750, 0x6eb4, 0x8f3e, 0xda78, 0x1, 0x0);
        gbc.writeMem(0x57d0, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x8ecb);
        EXPECT(gbc.pc(), 0x57d2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C9 035A
        gbc.setState(0xec95, 0x37f, 0xb060, 0xe110, 0x9a15, 0x5105, 0x1, 0x1);
        gbc.writeMem(0xec95, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x37f);
        EXPECT(gbc.pc(), 0xec97);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xec95), 0xcb);
        EXPECT(gbc.readMem(0xec96), 0xc9);
        // CB C9 035B
        gbc.setState(0xa7ce, 0x7a00, 0xe1f0, 0xde3e, 0xcbf5, 0xab88, 0x1, 0x1);
        gbc.writeMem(0xa7ce, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x7a00);
        EXPECT(gbc.pc(), 0xa7d0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa7ce), 0xcb);
        EXPECT(gbc.readMem(0xa7cf), 0xc9);
        // CB C9 035C
        gbc.setState(0x90a2, 0xe566, 0x1b50, 0xe5e7, 0xdc02, 0xf67, 0x1, 0x0);
        gbc.writeMem(0x90a2, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0xe566);
        EXPECT(gbc.pc(), 0x90a4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x90a2), 0xcb);
        EXPECT(gbc.readMem(0x90a3), 0xc9);
        // CB C9 035D
        gbc.setState(0xa939, 0xff0e, 0xb6f0, 0xa548, 0xf276, 0x1b59, 0x0, 0x1);
        gbc.writeMem(0xa939, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0xff0e);
        EXPECT(gbc.pc(), 0xa93b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa939), 0xcb);
        EXPECT(gbc.readMem(0xa93a), 0xc9);
        // CB C9 035E
        gbc.setState(0x530c, 0x56e6, 0x9410, 0x6e99, 0xc668, 0xd294, 0x1, 0x0);
        gbc.writeMem(0x530c, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x56e6);
        EXPECT(gbc.pc(), 0x530e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C9 035F
        gbc.setState(0x2a64, 0x3c45, 0x5060, 0xb1de, 0x97b7, 0x501f, 0x1, 0x1);
        gbc.writeMem(0x2a64, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x3c45);
        EXPECT(gbc.pc(), 0x2a66);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C9 0360
        gbc.setState(0x7d2c, 0x754e, 0xc00, 0xe861, 0x77d, 0x8129, 0x1, 0x0);
        gbc.writeMem(0x7d2c, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x754e);
        EXPECT(gbc.pc(), 0x7d2e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C9 0361
        gbc.setState(0x2500, 0x76a, 0x94f0, 0xf094, 0xe81b, 0xd220, 0x1, 0x1);
        gbc.writeMem(0x2500, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x76a);
        EXPECT(gbc.pc(), 0x2502);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C9 0362
        gbc.setState(0xcb13, 0x55a, 0x3a20, 0xb842, 0x779, 0x7f61, 0x1, 0x0);
        gbc.writeMem(0xcb13, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x55a);
        EXPECT(gbc.pc(), 0xcb15);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcb13), 0xcb);
        EXPECT(gbc.readMem(0xcb14), 0xc9);
        // CB C9 0364
        gbc.setState(0x5088, 0x1fe7, 0xb960, 0x56ec, 0x73d2, 0xb5fa, 0x0, 0x1);
        gbc.writeMem(0x5088, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x1fe7);
        EXPECT(gbc.pc(), 0x508a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C9 0365
        gbc.setState(0xfb5, 0x6e4d, 0x4f20, 0xc2d4, 0x3e85, 0x7b40, 0x0, 0x0);
        gbc.writeMem(0xfb5, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x6e4d);
        EXPECT(gbc.pc(), 0xfb7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C9 0367
        gbc.setState(0x5ce1, 0x4aee, 0x1220, 0xbeac, 0xedb3, 0x3a6a, 0x1, 0x1);
        gbc.writeMem(0x5ce1, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x4aee);
        EXPECT(gbc.pc(), 0x5ce3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C9 0369
        gbc.setState(0x115c, 0x86ab, 0x9390, 0xdede, 0x9d8, 0xe02d, 0x0, 0x1);
        gbc.writeMem(0x115c, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x86ab);
        EXPECT(gbc.pc(), 0x115e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C9 036A
        gbc.setState(0xaada, 0x779d, 0x540, 0x5b2e, 0x8adf, 0x7f18, 0x0, 0x0);
        gbc.writeMem(0xaada, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x779d);
        EXPECT(gbc.pc(), 0xaadc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaada), 0xcb);
        EXPECT(gbc.readMem(0xaadb), 0xc9);
        // CB C9 036B
        gbc.setState(0xa8bf, 0x2260, 0x4d80, 0x6ce, 0xca1e, 0xb10e, 0x0, 0x1);
        gbc.writeMem(0xa8bf, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x2260);
        EXPECT(gbc.pc(), 0xa8c1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa8bf), 0xcb);
        EXPECT(gbc.readMem(0xa8c0), 0xc9);
        // CB C9 036C
        gbc.setState(0x1ee6, 0x75ae, 0x8d0, 0x20fa, 0xedda, 0x161b, 0x0, 0x1);
        gbc.writeMem(0x1ee6, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x75ae);
        EXPECT(gbc.pc(), 0x1ee8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C9 036D
        gbc.setState(0xd939, 0x6025, 0x57f0, 0xdd25, 0x34c4, 0xe77a, 0x1, 0x1);
        gbc.writeMem(0xd939, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x6025);
        EXPECT(gbc.pc(), 0xd93b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd939), 0xcb);
        EXPECT(gbc.readMem(0xd93a), 0xc9);
        // CB C9 036E
        gbc.setState(0xe445, 0x2404, 0xc590, 0xfab, 0x8bd6, 0xfabd, 0x1, 0x0);
        gbc.writeMem(0xe445, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x2404);
        EXPECT(gbc.pc(), 0xe447);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe445), 0xcb);
        EXPECT(gbc.readMem(0xe446), 0xc9);
        // CB C9 036F
        gbc.setState(0x95fe, 0x697f, 0x29c0, 0xeb3, 0x111d, 0x6a5c, 0x1, 0x1);
        gbc.writeMem(0x95fe, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x697f);
        EXPECT(gbc.pc(), 0x9600);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x95fe), 0xcb);
        EXPECT(gbc.readMem(0x95ff), 0xc9);
        // CB C9 0370
        gbc.setState(0xbe4f, 0x6114, 0x250, 0x1951, 0xebf2, 0x949, 0x0, 0x0);
        gbc.writeMem(0xbe4f, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x6114);
        EXPECT(gbc.pc(), 0xbe51);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbe4f), 0xcb);
        EXPECT(gbc.readMem(0xbe50), 0xc9);
        // CB C9 0371
        gbc.setState(0x1116, 0x3c3f, 0xc340, 0x16f4, 0x41ed, 0x982a, 0x0, 0x0);
        gbc.writeMem(0x1116, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x3c3f);
        EXPECT(gbc.pc(), 0x1118);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C9 0372
        gbc.setState(0xa600, 0xcea5, 0x3ef0, 0x9eb6, 0x8bba, 0xd638, 0x1, 0x0);
        gbc.writeMem(0xa600, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0xcea5);
        EXPECT(gbc.pc(), 0xa602);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa600), 0xcb);
        EXPECT(gbc.readMem(0xa601), 0xc9);
        // CB C9 0373
        gbc.setState(0x8e38, 0xb1d, 0x3270, 0x7789, 0x15d8, 0x8add, 0x0, 0x0);
        gbc.writeMem(0x8e38, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0xb1d);
        EXPECT(gbc.pc(), 0x8e3a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8e38), 0xcb);
        EXPECT(gbc.readMem(0x8e39), 0xc9);
        // CB C9 0374
        gbc.setState(0x4dbf, 0x914a, 0x4360, 0xcea8, 0x55e1, 0x2d1d, 0x1, 0x0);
        gbc.writeMem(0x4dbf, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x914a);
        EXPECT(gbc.pc(), 0x4dc1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C9 0375
        gbc.setState(0xda18, 0xdb89, 0x62d0, 0x6471, 0x1c86, 0x5977, 0x1, 0x1);
        gbc.writeMem(0xda18, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xdb89);
        EXPECT(gbc.pc(), 0xda1a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xda18), 0xcb);
        EXPECT(gbc.readMem(0xda19), 0xc9);
        // CB C9 0376
        gbc.setState(0x5980, 0x1571, 0xe770, 0x2ac, 0x429e, 0x88e7, 0x0, 0x1);
        gbc.writeMem(0x5980, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x1571);
        EXPECT(gbc.pc(), 0x5982);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C9 0377
        gbc.setState(0x90b4, 0xb05b, 0x1850, 0xd37e, 0x40da, 0x86a8, 0x1, 0x0);
        gbc.writeMem(0x90b4, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0xb05b);
        EXPECT(gbc.pc(), 0x90b6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x90b4), 0xcb);
        EXPECT(gbc.readMem(0x90b5), 0xc9);
        // CB C9 0378
        gbc.setState(0xd362, 0x2ce0, 0x1480, 0x3540, 0x2dbd, 0xb4ee, 0x1, 0x1);
        gbc.writeMem(0xd362, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x2ce0);
        EXPECT(gbc.pc(), 0xd364);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd362), 0xcb);
        EXPECT(gbc.readMem(0xd363), 0xc9);
        // CB C9 0379
        gbc.setState(0x5719, 0x3387, 0x71a0, 0xd53b, 0x3a95, 0xb64d, 0x1, 0x1);
        gbc.writeMem(0x5719, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x3387);
        EXPECT(gbc.pc(), 0x571b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C9 037A
        gbc.setState(0x1a97, 0x1822, 0xa5f0, 0xb1b6, 0x7b4e, 0xe8ba, 0x0, 0x1);
        gbc.writeMem(0x1a97, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x1822);
        EXPECT(gbc.pc(), 0x1a99);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C9 037B
        gbc.setState(0x7780, 0x28a8, 0xb9b0, 0x7606, 0x3989, 0x9fa1, 0x1, 0x1);
        gbc.writeMem(0x7780, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x28a8);
        EXPECT(gbc.pc(), 0x7782);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C9 037C
        gbc.setState(0xebaf, 0xdbfe, 0xf8b0, 0xf75f, 0x21ca, 0x7ccb, 0x1, 0x0);
        gbc.writeMem(0xebaf, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0xdbfe);
        EXPECT(gbc.pc(), 0xebb1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xebaf), 0xcb);
        EXPECT(gbc.readMem(0xebb0), 0xc9);
        // CB C9 037E
        gbc.setState(0x422b, 0x131e, 0xa220, 0x156c, 0xdf7, 0x5736, 0x0, 0x1);
        gbc.writeMem(0x422b, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x131e);
        EXPECT(gbc.pc(), 0x422d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C9 037F
        gbc.setState(0x53b5, 0xdd66, 0xe120, 0xe204, 0xb584, 0xd169, 0x1, 0x0);
        gbc.writeMem(0x53b5, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0xdd66);
        EXPECT(gbc.pc(), 0x53b7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C9 0380
        gbc.setState(0x4a83, 0xffb, 0x2fe0, 0xc86f, 0x1e80, 0x1f85, 0x0, 0x1);
        gbc.writeMem(0x4a83, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0xffb);
        EXPECT(gbc.pc(), 0x4a85);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C9 0381
        gbc.setState(0xb4, 0x48f0, 0xad50, 0x8b82, 0x5490, 0x861a, 0x0, 0x0);
        gbc.writeMem(0xb4, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x48f0);
        EXPECT(gbc.pc(), 0xb6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C9 0382
        gbc.setState(0xcec1, 0xae2f, 0x51e0, 0x2b52, 0xb28a, 0x647f, 0x0, 0x1);
        gbc.writeMem(0xcec1, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xae2f);
        EXPECT(gbc.pc(), 0xcec3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcec1), 0xcb);
        EXPECT(gbc.readMem(0xcec2), 0xc9);
        // CB C9 0383
        gbc.setState(0x68f, 0xc514, 0x84a0, 0x3f0b, 0x2fb2, 0xfeeb, 0x1, 0x0);
        gbc.writeMem(0x68f, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0xc514);
        EXPECT(gbc.pc(), 0x691);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C9 0384
        gbc.setState(0x499f, 0xb4e7, 0xd510, 0x92ca, 0xe491, 0x74ef, 0x0, 0x0);
        gbc.writeMem(0x499f, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0xb4e7);
        EXPECT(gbc.pc(), 0x49a1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C9 0385
        gbc.setState(0x59ea, 0xb617, 0x2200, 0x6775, 0xb1ae, 0xe13e, 0x0, 0x1);
        gbc.writeMem(0x59ea, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0xb617);
        EXPECT(gbc.pc(), 0x59ec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C9 0386
        gbc.setState(0x18b6, 0xa698, 0x46b0, 0x6681, 0x553d, 0x3df5, 0x0, 0x0);
        gbc.writeMem(0x18b6, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0xa698);
        EXPECT(gbc.pc(), 0x18b8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C9 0387
        gbc.setState(0x10c3, 0x1040, 0xc200, 0xcc8f, 0x517a, 0x94d3, 0x0, 0x0);
        gbc.writeMem(0x10c3, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x1040);
        EXPECT(gbc.pc(), 0x10c5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C9 0388
        gbc.setState(0x3468, 0x4a89, 0x9f90, 0xff12, 0xcb8e, 0xa4f7, 0x1, 0x0);
        gbc.writeMem(0x3468, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x4a89);
        EXPECT(gbc.pc(), 0x346a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C9 0389
        gbc.setState(0x9548, 0x7221, 0x3f80, 0xa1a7, 0xec0b, 0xd96b, 0x1, 0x1);
        gbc.writeMem(0x9548, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x7221);
        EXPECT(gbc.pc(), 0x954a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9548), 0xcb);
        EXPECT(gbc.readMem(0x9549), 0xc9);
        // CB C9 038A
        gbc.setState(0xd0a, 0xe971, 0x68a0, 0x55b9, 0x86fd, 0xc2f9, 0x0, 0x1);
        gbc.writeMem(0xd0a, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xe971);
        EXPECT(gbc.pc(), 0xd0c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C9 038B
        gbc.setState(0x30cf, 0x2301, 0x4240, 0x9bda, 0x8a53, 0xdae8, 0x0, 0x0);
        gbc.writeMem(0x30cf, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x2301);
        EXPECT(gbc.pc(), 0x30d1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C9 038C
        gbc.setState(0x35c6, 0x1024, 0x6c30, 0x18cc, 0x88b2, 0xbf67, 0x1, 0x0);
        gbc.writeMem(0x35c6, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x1024);
        EXPECT(gbc.pc(), 0x35c8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C9 038D
        gbc.setState(0xced8, 0x8609, 0x950, 0xbf87, 0x2ba1, 0xfe02, 0x1, 0x1);
        gbc.writeMem(0xced8, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x8609);
        EXPECT(gbc.pc(), 0xceda);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xced8), 0xcb);
        EXPECT(gbc.readMem(0xced9), 0xc9);
        // CB C9 038E
        gbc.setState(0xa6b6, 0xdce9, 0xc630, 0x8e2e, 0x212d, 0x31dd, 0x0, 0x0);
        gbc.writeMem(0xa6b6, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0xdce9);
        EXPECT(gbc.pc(), 0xa6b8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa6b6), 0xcb);
        EXPECT(gbc.readMem(0xa6b7), 0xc9);
        // CB C9 038F
        gbc.setState(0x9095, 0xe94, 0x210, 0x391e, 0x3576, 0x856e, 0x1, 0x0);
        gbc.writeMem(0x9095, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xe94);
        EXPECT(gbc.pc(), 0x9097);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9095), 0xcb);
        EXPECT(gbc.readMem(0x9096), 0xc9);
        // CB C9 0390
        gbc.setState(0x91cb, 0xdf67, 0x1020, 0xae87, 0xe160, 0xab80, 0x1, 0x1);
        gbc.writeMem(0x91cb, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0xdf67);
        EXPECT(gbc.pc(), 0x91cd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x91cb), 0xcb);
        EXPECT(gbc.readMem(0x91cc), 0xc9);
        // CB C9 0391
        gbc.setState(0xca12, 0xac0f, 0xf810, 0xacbd, 0xfbd3, 0x95ae, 0x0, 0x1);
        gbc.writeMem(0xca12, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0xac0f);
        EXPECT(gbc.pc(), 0xca14);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xca12), 0xcb);
        EXPECT(gbc.readMem(0xca13), 0xc9);
        // CB C9 0392
        gbc.setState(0xbffd, 0x2894, 0x3ed0, 0xc6d1, 0xb996, 0x182a, 0x1, 0x0);
        gbc.writeMem(0xbffd, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x2894);
        EXPECT(gbc.pc(), 0xbfff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbffd), 0xcb);
        EXPECT(gbc.readMem(0xbffe), 0xc9);
        // CB C9 0393
        gbc.setState(0xa6aa, 0xbcfa, 0xc1b0, 0x64d3, 0xd7f3, 0xf22a, 0x1, 0x1);
        gbc.writeMem(0xa6aa, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xbcfa);
        EXPECT(gbc.pc(), 0xa6ac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa6aa), 0xcb);
        EXPECT(gbc.readMem(0xa6ab), 0xc9);
        // CB C9 0394
        gbc.setState(0x1175, 0x9d2f, 0xdb40, 0xef84, 0xa5c1, 0xf277, 0x1, 0x0);
        gbc.writeMem(0x1175, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x9d2f);
        EXPECT(gbc.pc(), 0x1177);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C9 0395
        gbc.setState(0xc0db, 0x548c, 0x83c0, 0x7f71, 0xe6b4, 0xde3d, 0x0, 0x1);
        gbc.writeMem(0xc0db, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x548c);
        EXPECT(gbc.pc(), 0xc0dd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc0db), 0xcb);
        EXPECT(gbc.readMem(0xc0dc), 0xc9);
        // CB C9 0396
        gbc.setState(0x778, 0x3cb0, 0x5910, 0x7a57, 0xc654, 0x6882, 0x0, 0x0);
        gbc.writeMem(0x778, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x3cb0);
        EXPECT(gbc.pc(), 0x77a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C9 0397
        gbc.setState(0x7689, 0xdfac, 0x6300, 0x7af0, 0xcb97, 0x315b, 0x0, 0x1);
        gbc.writeMem(0x7689, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0xdfac);
        EXPECT(gbc.pc(), 0x768b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C9 0398
        gbc.setState(0x74f5, 0xb6e7, 0x95d0, 0x2b07, 0xd71d, 0x632d, 0x0, 0x1);
        gbc.writeMem(0x74f5, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0xb6e7);
        EXPECT(gbc.pc(), 0x74f7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C9 0399
        gbc.setState(0x5772, 0xcde4, 0x7830, 0xce8b, 0xc98, 0x2084, 0x0, 0x0);
        gbc.writeMem(0x5772, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0xcde4);
        EXPECT(gbc.pc(), 0x5774);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C9 039A
        gbc.setState(0x1331, 0x67f4, 0xc4d0, 0x19dc, 0x96a6, 0x3d57, 0x0, 0x0);
        gbc.writeMem(0x1331, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x67f4);
        EXPECT(gbc.pc(), 0x1333);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C9 039B
        gbc.setState(0x8744, 0x1eb9, 0x7ef0, 0x34e7, 0x3718, 0xac6d, 0x1, 0x0);
        gbc.writeMem(0x8744, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x1eb9);
        EXPECT(gbc.pc(), 0x8746);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8744), 0xcb);
        EXPECT(gbc.readMem(0x8745), 0xc9);
        // CB C9 039C
        gbc.setState(0x5dcc, 0x846e, 0x1430, 0xc7df, 0x3409, 0x6649, 0x0, 0x1);
        gbc.writeMem(0x5dcc, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x846e);
        EXPECT(gbc.pc(), 0x5dce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C9 039D
        gbc.setState(0x1f54, 0x19d4, 0x180, 0x308d, 0xbd67, 0x38bb, 0x1, 0x1);
        gbc.writeMem(0x1f54, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x19d4);
        EXPECT(gbc.pc(), 0x1f56);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C9 039E
        gbc.setState(0x4007, 0xb1fe, 0x5d90, 0x70d3, 0x1a78, 0x911c, 0x1, 0x0);
        gbc.writeMem(0x4007, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0xb1fe);
        EXPECT(gbc.pc(), 0x4009);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C9 039F
        gbc.setState(0x50b2, 0xca2b, 0xda90, 0x25d4, 0x2c85, 0x30e9, 0x0, 0x0);
        gbc.writeMem(0x50b2, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0xca2b);
        EXPECT(gbc.pc(), 0x50b4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C9 03A0
        gbc.setState(0xaa31, 0xdd2b, 0x10e0, 0xd5c3, 0xf058, 0x38e6, 0x1, 0x0);
        gbc.writeMem(0xaa31, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xdd2b);
        EXPECT(gbc.pc(), 0xaa33);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaa31), 0xcb);
        EXPECT(gbc.readMem(0xaa32), 0xc9);
        // CB C9 03A1
        gbc.setState(0xb218, 0x27ef, 0x9f90, 0x5b7a, 0xe124, 0x25a7, 0x0, 0x0);
        gbc.writeMem(0xb218, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x27ef);
        EXPECT(gbc.pc(), 0xb21a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb218), 0xcb);
        EXPECT(gbc.readMem(0xb219), 0xc9);
        // CB C9 03A2
        gbc.setState(0xbf85, 0xb58c, 0x630, 0x3fab, 0x2a82, 0x317e, 0x1, 0x1);
        gbc.writeMem(0xbf85, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0xb58c);
        EXPECT(gbc.pc(), 0xbf87);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbf85), 0xcb);
        EXPECT(gbc.readMem(0xbf86), 0xc9);
        // CB C9 03A3
        gbc.setState(0x49b, 0xe9, 0x1650, 0x34d4, 0x8b5e, 0x4e34, 0x0, 0x0);
        gbc.writeMem(0x49b, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xe9);
        EXPECT(gbc.pc(), 0x49d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C9 03A4
        gbc.setState(0x33e2, 0xecb6, 0xee10, 0x191c, 0x38e4, 0x25cb, 0x1, 0x0);
        gbc.writeMem(0x33e2, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0xecb6);
        EXPECT(gbc.pc(), 0x33e4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C9 03A5
        gbc.setState(0xa070, 0x400f, 0x4560, 0x7a6f, 0x2292, 0x28f2, 0x0, 0x1);
        gbc.writeMem(0xa070, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x400f);
        EXPECT(gbc.pc(), 0xa072);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa070), 0xcb);
        EXPECT(gbc.readMem(0xa071), 0xc9);
        // CB C9 03A7
        gbc.setState(0x1f5f, 0xb5be, 0x2830, 0xe542, 0x436f, 0x3f4a, 0x1, 0x1);
        gbc.writeMem(0x1f5f, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xb5be);
        EXPECT(gbc.pc(), 0x1f61);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C9 03A9
        gbc.setState(0x6aec, 0xd370, 0xfa0, 0x80a0, 0x2aac, 0x3c9c, 0x1, 0x1);
        gbc.writeMem(0x6aec, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0xd370);
        EXPECT(gbc.pc(), 0x6aee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C9 03AA
        gbc.setState(0x2265, 0xfd47, 0x2920, 0x4fc1, 0x646c, 0xbdec, 0x0, 0x1);
        gbc.writeMem(0x2265, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0xfd47);
        EXPECT(gbc.pc(), 0x2267);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C9 03AB
        gbc.setState(0x5314, 0xe273, 0x3430, 0xcd34, 0x609d, 0xb201, 0x0, 0x1);
        gbc.writeMem(0x5314, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0xe273);
        EXPECT(gbc.pc(), 0x5316);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C9 03AC
        gbc.setState(0x9c99, 0x5693, 0x62e0, 0x9424, 0x2dc4, 0x631a, 0x0, 0x1);
        gbc.writeMem(0x9c99, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x5693);
        EXPECT(gbc.pc(), 0x9c9b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9c99), 0xcb);
        EXPECT(gbc.readMem(0x9c9a), 0xc9);
        // CB C9 03AD
        gbc.setState(0xebee, 0xc574, 0xd1c0, 0x6430, 0x88d, 0xb1d8, 0x1, 0x0);
        gbc.writeMem(0xebee, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0xc574);
        EXPECT(gbc.pc(), 0xebf0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xebee), 0xcb);
        EXPECT(gbc.readMem(0xebef), 0xc9);
        // CB C9 03AF
        gbc.setState(0xb3d4, 0xb105, 0x8a00, 0x6d57, 0xc8ad, 0x2da4, 0x0, 0x1);
        gbc.writeMem(0xb3d4, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0xb105);
        EXPECT(gbc.pc(), 0xb3d6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb3d4), 0xcb);
        EXPECT(gbc.readMem(0xb3d5), 0xc9);
        // CB C9 03B0
        gbc.setState(0xad98, 0x5563, 0x8c90, 0x9ad6, 0xa7ae, 0x827b, 0x0, 0x0);
        gbc.writeMem(0xad98, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x5563);
        EXPECT(gbc.pc(), 0xad9a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xad98), 0xcb);
        EXPECT(gbc.readMem(0xad99), 0xc9);
        // CB C9 03B3
        gbc.setState(0x1fdd, 0xcf13, 0xf0c0, 0xe7b7, 0x15f5, 0x86b0, 0x0, 0x1);
        gbc.writeMem(0x1fdd, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xcf13);
        EXPECT(gbc.pc(), 0x1fdf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C9 03B4
        gbc.setState(0x3c47, 0xc41a, 0x6530, 0x17a1, 0x1841, 0x4956, 0x0, 0x1);
        gbc.writeMem(0x3c47, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0xc41a);
        EXPECT(gbc.pc(), 0x3c49);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C9 03B5
        gbc.setState(0x2e22, 0x9bcf, 0x7c30, 0xf98, 0xe51c, 0xb15e, 0x1, 0x1);
        gbc.writeMem(0x2e22, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x9bcf);
        EXPECT(gbc.pc(), 0x2e24);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C9 03B6
        gbc.setState(0x2a07, 0x62e0, 0x3dd0, 0xe8c5, 0xac66, 0x68d0, 0x1, 0x0);
        gbc.writeMem(0x2a07, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x62e0);
        EXPECT(gbc.pc(), 0x2a09);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C9 03B7
        gbc.setState(0x4ee8, 0x89ee, 0xa470, 0x9f09, 0xf220, 0x96ac, 0x1, 0x1);
        gbc.writeMem(0x4ee8, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x89ee);
        EXPECT(gbc.pc(), 0x4eea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C9 03B8
        gbc.setState(0xe669, 0xa055, 0x3590, 0x1b33, 0x8b9, 0x8e6b, 0x0, 0x0);
        gbc.writeMem(0xe669, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0xa055);
        EXPECT(gbc.pc(), 0xe66b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe669), 0xcb);
        EXPECT(gbc.readMem(0xe66a), 0xc9);
        // CB C9 03B9
        gbc.setState(0xaaec, 0x9160, 0x4e00, 0xfe30, 0x243a, 0x1cba, 0x0, 0x0);
        gbc.writeMem(0xaaec, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x9160);
        EXPECT(gbc.pc(), 0xaaee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaaec), 0xcb);
        EXPECT(gbc.readMem(0xaaed), 0xc9);
        // CB C9 03BA
        gbc.setState(0x6449, 0x64f4, 0xe210, 0xcb5a, 0x4157, 0xed27, 0x0, 0x0);
        gbc.writeMem(0x6449, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x64f4);
        EXPECT(gbc.pc(), 0x644b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C9 03BC
        gbc.setState(0x743d, 0xde48, 0x5830, 0x4c3c, 0xb18c, 0xed38, 0x0, 0x1);
        gbc.writeMem(0x743d, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0xde48);
        EXPECT(gbc.pc(), 0x743f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C9 03BD
        gbc.setState(0x89ff, 0xcf7f, 0x2210, 0xccda, 0x5d9, 0x1097, 0x0, 0x0);
        gbc.writeMem(0x89ff, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0xcf7f);
        EXPECT(gbc.pc(), 0x8a01);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x89ff), 0xcb);
        EXPECT(gbc.readMem(0x8a00), 0xc9);
        // CB C9 03BE
        gbc.setState(0xc405, 0x9bb2, 0x88b0, 0x7d4f, 0x6c25, 0x44e4, 0x0, 0x1);
        gbc.writeMem(0xc405, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x9bb2);
        EXPECT(gbc.pc(), 0xc407);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc405), 0xcb);
        EXPECT(gbc.readMem(0xc406), 0xc9);
        // CB C9 03BF
        gbc.setState(0x7b27, 0x39f2, 0x2c90, 0xf4d5, 0xcf8f, 0xc5c8, 0x1, 0x0);
        gbc.writeMem(0x7b27, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x39f2);
        EXPECT(gbc.pc(), 0x7b29);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C9 03C0
        gbc.setState(0x4caf, 0x6f49, 0x8320, 0xf219, 0x6eae, 0xe8b8, 0x0, 0x0);
        gbc.writeMem(0x4caf, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x6f49);
        EXPECT(gbc.pc(), 0x4cb1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C9 03C1
        gbc.setState(0x2bb, 0x8dd5, 0xa10, 0xc557, 0x307, 0x7081, 0x0, 0x0);
        gbc.writeMem(0x2bb, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x8dd5);
        EXPECT(gbc.pc(), 0x2bd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C9 03C2
        gbc.setState(0xd714, 0x94ef, 0xaf10, 0x21e1, 0xca51, 0x1cf0, 0x0, 0x1);
        gbc.writeMem(0xd714, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x94ef);
        EXPECT(gbc.pc(), 0xd716);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd714), 0xcb);
        EXPECT(gbc.readMem(0xd715), 0xc9);
        // CB C9 03C3
        gbc.setState(0x95da, 0x26bb, 0x7810, 0x832, 0x2d5, 0x5a63, 0x0, 0x1);
        gbc.writeMem(0x95da, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x26bb);
        EXPECT(gbc.pc(), 0x95dc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x95da), 0xcb);
        EXPECT(gbc.readMem(0x95db), 0xc9);
        // CB C9 03C4
        gbc.setState(0x3660, 0xce8e, 0x4480, 0x6d8f, 0x245c, 0x70ff, 0x0, 0x0);
        gbc.writeMem(0x3660, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0xce8e);
        EXPECT(gbc.pc(), 0x3662);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C9 03C5
        gbc.setState(0x7693, 0x2457, 0xd200, 0x908b, 0x9dd1, 0x6e18, 0x0, 0x0);
        gbc.writeMem(0x7693, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x2457);
        EXPECT(gbc.pc(), 0x7695);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C9 03C6
        gbc.setState(0x9c25, 0x29e7, 0x9e30, 0xe821, 0xd328, 0x8d86, 0x0, 0x0);
        gbc.writeMem(0x9c25, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x29e7);
        EXPECT(gbc.pc(), 0x9c27);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9c25), 0xcb);
        EXPECT(gbc.readMem(0x9c26), 0xc9);
        // CB C9 03C7
        gbc.setState(0xe51d, 0xc17e, 0x1520, 0x4164, 0x5fc2, 0xee00, 0x1, 0x1);
        gbc.writeMem(0xe51d, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0xc17e);
        EXPECT(gbc.pc(), 0xe51f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe51d), 0xcb);
        EXPECT(gbc.readMem(0xe51e), 0xc9);
        // CB C9 03C8
        gbc.setState(0x733e, 0x7c2, 0x9840, 0x601e, 0x6184, 0x79cc, 0x1, 0x0);
        gbc.writeMem(0x733e, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x7c2);
        EXPECT(gbc.pc(), 0x7340);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C9 03C9
        gbc.setState(0x8bbd, 0x9c2a, 0xa560, 0x177, 0x9208, 0x6ac2, 0x1, 0x0);
        gbc.writeMem(0x8bbd, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x9c2a);
        EXPECT(gbc.pc(), 0x8bbf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8bbd), 0xcb);
        EXPECT(gbc.readMem(0x8bbe), 0xc9);
        // CB C9 03CA
        gbc.setState(0x6573, 0xbe94, 0x1400, 0x3074, 0x540a, 0xc2e5, 0x0, 0x0);
        gbc.writeMem(0x6573, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xbe94);
        EXPECT(gbc.pc(), 0x6575);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C9 03CB
        gbc.setState(0xbfac, 0x34ec, 0xe710, 0x25c7, 0x6f21, 0xc7bd, 0x0, 0x0);
        gbc.writeMem(0xbfac, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x34ec);
        EXPECT(gbc.pc(), 0xbfae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbfac), 0xcb);
        EXPECT(gbc.readMem(0xbfad), 0xc9);
        // CB C9 03CC
        gbc.setState(0xcd1f, 0x7600, 0x9e30, 0x5c59, 0xdb15, 0xc9f2, 0x0, 0x0);
        gbc.writeMem(0xcd1f, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x7600);
        EXPECT(gbc.pc(), 0xcd21);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcd1f), 0xcb);
        EXPECT(gbc.readMem(0xcd20), 0xc9);
        // CB C9 03CD
        gbc.setState(0xa332, 0x125, 0x48a0, 0x4950, 0x5035, 0xeb24, 0x1, 0x0);
        gbc.writeMem(0xa332, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x125);
        EXPECT(gbc.pc(), 0xa334);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa332), 0xcb);
        EXPECT(gbc.readMem(0xa333), 0xc9);
        // CB C9 03CF
        gbc.setState(0x9ff9, 0xbdb0, 0x23e0, 0xe1b, 0x3112, 0xa428, 0x1, 0x0);
        gbc.writeMem(0x9ff9, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xbdb0);
        EXPECT(gbc.pc(), 0x9ffb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9ff9), 0xcb);
        EXPECT(gbc.readMem(0x9ffa), 0xc9);
        // CB C9 03D0
        gbc.setState(0x68bb, 0xbb67, 0x5360, 0x5de4, 0x5a83, 0x4d07, 0x1, 0x1);
        gbc.writeMem(0x68bb, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xbb67);
        EXPECT(gbc.pc(), 0x68bd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C9 03D1
        gbc.setState(0x40df, 0x1601, 0xb930, 0x60cf, 0xc28, 0x5dbe, 0x1, 0x1);
        gbc.writeMem(0x40df, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x1601);
        EXPECT(gbc.pc(), 0x40e1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C9 03D2
        gbc.setState(0x3aa8, 0xaa86, 0x7060, 0xb84, 0xbb70, 0x8387, 0x1, 0x1);
        gbc.writeMem(0x3aa8, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xaa86);
        EXPECT(gbc.pc(), 0x3aaa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C9 03D3
        gbc.setState(0x5211, 0x661, 0x7bd0, 0x31a7, 0xda25, 0x1b3e, 0x1, 0x1);
        gbc.writeMem(0x5211, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x661);
        EXPECT(gbc.pc(), 0x5213);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C9 03D4
        gbc.setState(0x1798, 0xb6dd, 0x1d70, 0x9dbe, 0x8377, 0x3a2e, 0x0, 0x1);
        gbc.writeMem(0x1798, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xb6dd);
        EXPECT(gbc.pc(), 0x179a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C9 03D5
        gbc.setState(0xe010, 0x4fa1, 0xbee0, 0x99de, 0x3ac0, 0xe154, 0x1, 0x0);
        gbc.writeMem(0xe010, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x4fa1);
        EXPECT(gbc.pc(), 0xe012);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe010), 0xcb);
        EXPECT(gbc.readMem(0xe011), 0xc9);
        // CB C9 03D6
        gbc.setState(0xab3c, 0xbfca, 0xb410, 0x93e8, 0xe1b1, 0x79e, 0x1, 0x0);
        gbc.writeMem(0xab3c, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0xbfca);
        EXPECT(gbc.pc(), 0xab3e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xab3c), 0xcb);
        EXPECT(gbc.readMem(0xab3d), 0xc9);
        // CB C9 03D7
        gbc.setState(0x74f5, 0xdc2f, 0x78f0, 0xb562, 0x7295, 0x3a01, 0x1, 0x0);
        gbc.writeMem(0x74f5, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0xdc2f);
        EXPECT(gbc.pc(), 0x74f7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C9 03D8
        gbc.setState(0xdef8, 0x8509, 0xf810, 0xbd0d, 0xb44e, 0xeb63, 0x1, 0x0);
        gbc.writeMem(0xdef8, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x8509);
        EXPECT(gbc.pc(), 0xdefa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdef8), 0xcb);
        EXPECT(gbc.readMem(0xdef9), 0xc9);
        // CB C9 03D9
        gbc.setState(0x4eb4, 0x7a6d, 0x98c0, 0xdb62, 0xa403, 0x6af6, 0x0, 0x1);
        gbc.writeMem(0x4eb4, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x7a6d);
        EXPECT(gbc.pc(), 0x4eb6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C9 03DA
        gbc.setState(0x799f, 0x9d86, 0x9bf0, 0x3c08, 0x14d5, 0x606f, 0x0, 0x1);
        gbc.writeMem(0x799f, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x9d86);
        EXPECT(gbc.pc(), 0x79a1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C9 03DB
        gbc.setState(0x90ec, 0x60f8, 0x7d0, 0x3e1b, 0x9cd4, 0xd486, 0x0, 0x1);
        gbc.writeMem(0x90ec, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x60f8);
        EXPECT(gbc.pc(), 0x90ee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x90ec), 0xcb);
        EXPECT(gbc.readMem(0x90ed), 0xc9);
        // CB C9 03DC
        gbc.setState(0xc6ee, 0x4297, 0x6de0, 0x491c, 0xd1d4, 0xa051, 0x1, 0x0);
        gbc.writeMem(0xc6ee, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x4297);
        EXPECT(gbc.pc(), 0xc6f0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc6ee), 0xcb);
        EXPECT(gbc.readMem(0xc6ef), 0xc9);
        // CB C9 03DD
        gbc.setState(0xb6c, 0xfabc, 0x310, 0x9169, 0x3a5c, 0xc841, 0x1, 0x1);
        gbc.writeMem(0xb6c, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0xfabc);
        EXPECT(gbc.pc(), 0xb6e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C9 03DE
        gbc.setState(0x65e0, 0x214c, 0x8500, 0x9ee2, 0x9f8f, 0xbebe, 0x1, 0x1);
        gbc.writeMem(0x65e0, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x214c);
        EXPECT(gbc.pc(), 0x65e2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C9 03DF
        gbc.setState(0xc01a, 0x970f, 0xf470, 0x9ad6, 0x917a, 0xfc2, 0x1, 0x1);
        gbc.writeMem(0xc01a, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x970f);
        EXPECT(gbc.pc(), 0xc01c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc01a), 0xcb);
        EXPECT(gbc.readMem(0xc01b), 0xc9);
        // CB C9 03E0
        gbc.setState(0x263a, 0x4eb6, 0x9e40, 0xa428, 0x8373, 0x7f96, 0x0, 0x1);
        gbc.writeMem(0x263a, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x4eb6);
        EXPECT(gbc.pc(), 0x263c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C9 03E1
        gbc.setState(0xe53a, 0xf7c2, 0x6600, 0xb89e, 0xbf2, 0x572e, 0x0, 0x0);
        gbc.writeMem(0xe53a, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xf7c2);
        EXPECT(gbc.pc(), 0xe53c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe53a), 0xcb);
        EXPECT(gbc.readMem(0xe53b), 0xc9);
        // CB C9 03E2
        gbc.setState(0x9b19, 0x9e36, 0x6a00, 0x9c3, 0xc0b3, 0xe7b8, 0x0, 0x1);
        gbc.writeMem(0x9b19, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x9e36);
        EXPECT(gbc.pc(), 0x9b1b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9b19), 0xcb);
        EXPECT(gbc.readMem(0x9b1a), 0xc9);
        // CB C9 03E3
        gbc.setState(0x36cd, 0xeef1, 0xff50, 0xc5b7, 0x7f53, 0xed19, 0x0, 0x1);
        gbc.writeMem(0x36cd, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0xeef1);
        EXPECT(gbc.pc(), 0x36cf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C9 03E4
        gbc.setState(0x7c1b, 0xda70, 0x8700, 0x58c0, 0x1673, 0xce41, 0x1, 0x0);
        gbc.writeMem(0x7c1b, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0xda70);
        EXPECT(gbc.pc(), 0x7c1d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C9 03E5
        gbc.setState(0x524a, 0xd20b, 0x52e0, 0x810f, 0xd7ef, 0x9b61, 0x1, 0x0);
        gbc.writeMem(0x524a, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0xd20b);
        EXPECT(gbc.pc(), 0x524c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C9 03E6
        gbc.setState(0x8935, 0x8627, 0x6380, 0x3040, 0xad4e, 0x800f, 0x1, 0x0);
        gbc.writeMem(0x8935, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x8627);
        EXPECT(gbc.pc(), 0x8937);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8935), 0xcb);
        EXPECT(gbc.readMem(0x8936), 0xc9);
        // CB C9 03E7
        gbc.setState(0x7f4f, 0xb53f, 0x70e0, 0x2436, 0x8d86, 0x99b1, 0x1, 0x0);
        gbc.writeMem(0x7f4f, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0xb53f);
        EXPECT(gbc.pc(), 0x7f51);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
    }
}
#endif
