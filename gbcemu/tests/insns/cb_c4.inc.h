    TEST(gbcemu, opcode_cb_c4) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB C4 0000
        gbc.setState(0xa020, 0xfee4, 0xf50, 0xf0c0, 0xd783, 0xad97, 0x1, 0x0);
        gbc.writeMem(0xa020, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0xfee4);
        EXPECT(gbc.pc(), 0xa022);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa020), 0xcb);
        EXPECT(gbc.readMem(0xa021), 0xc4);
        // CB C4 0001
        gbc.setState(0x9a34, 0x666b, 0x65f0, 0x480d, 0xbe21, 0xb3cb, 0x1, 0x0);
        gbc.writeMem(0x9a34, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x666b);
        EXPECT(gbc.pc(), 0x9a36);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9a34), 0xcb);
        EXPECT(gbc.readMem(0x9a35), 0xc4);
        // CB C4 0002
        gbc.setState(0x8a08, 0x6e83, 0xa3f0, 0xeeab, 0x1a7b, 0xfa5b, 0x1, 0x1);
        gbc.writeMem(0x8a08, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x6e83);
        EXPECT(gbc.pc(), 0x8a0a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8a08), 0xcb);
        EXPECT(gbc.readMem(0x8a09), 0xc4);
        // CB C4 0003
        gbc.setState(0xb80, 0xd294, 0xcd0, 0xf3a0, 0x9164, 0x367, 0x0, 0x0);
        gbc.writeMem(0xb80, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0xd294);
        EXPECT(gbc.pc(), 0xb82);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C4 0004
        gbc.setState(0x6850, 0xa0a5, 0x8e10, 0x359a, 0xca5a, 0x7f6f, 0x0, 0x1);
        gbc.writeMem(0x6850, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0xa0a5);
        EXPECT(gbc.pc(), 0x6852);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C4 0005
        gbc.setState(0x3041, 0x76e9, 0x9860, 0x2818, 0xcdef, 0x50d9, 0x1, 0x1);
        gbc.writeMem(0x3041, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x76e9);
        EXPECT(gbc.pc(), 0x3043);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C4 0006
        gbc.setState(0xa7f4, 0x2dcf, 0xfd60, 0xf658, 0x4ad4, 0x8165, 0x1, 0x1);
        gbc.writeMem(0xa7f4, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x2dcf);
        EXPECT(gbc.pc(), 0xa7f6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa7f4), 0xcb);
        EXPECT(gbc.readMem(0xa7f5), 0xc4);
        // CB C4 0007
        gbc.setState(0xeeee, 0xbb05, 0x74d0, 0x94c3, 0x383c, 0x3d43, 0x1, 0x0);
        gbc.writeMem(0xeeee, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xbb05);
        EXPECT(gbc.pc(), 0xeef0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeeee), 0xcb);
        EXPECT(gbc.readMem(0xeeef), 0xc4);
        // CB C4 0008
        gbc.setState(0xd44f, 0x3033, 0xa860, 0x840b, 0x2e46, 0xf90b, 0x0, 0x0);
        gbc.writeMem(0xd44f, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x3033);
        EXPECT(gbc.pc(), 0xd451);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd44f), 0xcb);
        EXPECT(gbc.readMem(0xd450), 0xc4);
        // CB C4 0009
        gbc.setState(0xb65a, 0xfb08, 0x1620, 0xfb41, 0xd26e, 0xd027, 0x0, 0x0);
        gbc.writeMem(0xb65a, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0xfb08);
        EXPECT(gbc.pc(), 0xb65c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb65a), 0xcb);
        EXPECT(gbc.readMem(0xb65b), 0xc4);
        // CB C4 000A
        gbc.setState(0x6f57, 0xde08, 0x1410, 0xaf59, 0xe0e2, 0x9056, 0x1, 0x0);
        gbc.writeMem(0x6f57, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0xde08);
        EXPECT(gbc.pc(), 0x6f59);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C4 000B
        gbc.setState(0x68bc, 0x3c8b, 0x1110, 0x766d, 0x519f, 0x94c6, 0x0, 0x0);
        gbc.writeMem(0x68bc, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x3c8b);
        EXPECT(gbc.pc(), 0x68be);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C4 000C
        gbc.setState(0x3a03, 0xf203, 0x8060, 0x197b, 0xee49, 0xfcba, 0x1, 0x1);
        gbc.writeMem(0x3a03, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0xf203);
        EXPECT(gbc.pc(), 0x3a05);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C4 000D
        gbc.setState(0xc5cf, 0x3e0d, 0xca0, 0x8f1e, 0x11f8, 0x25cb, 0x1, 0x1);
        gbc.writeMem(0xc5cf, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x3e0d);
        EXPECT(gbc.pc(), 0xc5d1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc5cf), 0xcb);
        EXPECT(gbc.readMem(0xc5d0), 0xc4);
        // CB C4 000E
        gbc.setState(0x2a54, 0xab64, 0xee10, 0x96c2, 0xfcd, 0x4d22, 0x0, 0x1);
        gbc.writeMem(0x2a54, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0xab64);
        EXPECT(gbc.pc(), 0x2a56);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C4 000F
        gbc.setState(0xe569, 0x7e73, 0xb360, 0x5756, 0x2ae8, 0x994e, 0x0, 0x0);
        gbc.writeMem(0xe569, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x7e73);
        EXPECT(gbc.pc(), 0xe56b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe569), 0xcb);
        EXPECT(gbc.readMem(0xe56a), 0xc4);
        // CB C4 0010
        gbc.setState(0x5cc6, 0xb762, 0x7bb0, 0x3f64, 0xe0b5, 0xa77f, 0x1, 0x0);
        gbc.writeMem(0x5cc6, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xb762);
        EXPECT(gbc.pc(), 0x5cc8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C4 0011
        gbc.setState(0xb11c, 0xd514, 0xaa0, 0xbb28, 0xc6c3, 0xdd14, 0x0, 0x0);
        gbc.writeMem(0xb11c, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0xd514);
        EXPECT(gbc.pc(), 0xb11e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb11c), 0xcb);
        EXPECT(gbc.readMem(0xb11d), 0xc4);
        // CB C4 0012
        gbc.setState(0xd6ea, 0xfcfd, 0xcc80, 0xb7e, 0xa977, 0x9d68, 0x0, 0x0);
        gbc.writeMem(0xd6ea, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0xfcfd);
        EXPECT(gbc.pc(), 0xd6ec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd6ea), 0xcb);
        EXPECT(gbc.readMem(0xd6eb), 0xc4);
        // CB C4 0013
        gbc.setState(0x4d08, 0x9958, 0xc4a0, 0xb7f5, 0xbaf0, 0xa152, 0x1, 0x0);
        gbc.writeMem(0x4d08, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x9958);
        EXPECT(gbc.pc(), 0x4d0a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C4 0014
        gbc.setState(0x17ff, 0x5f30, 0xd7d0, 0xc6d, 0xaa92, 0xe0ac, 0x0, 0x0);
        gbc.writeMem(0x17ff, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x5f30);
        EXPECT(gbc.pc(), 0x1801);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C4 0015
        gbc.setState(0x8d44, 0xb49f, 0x70, 0xe994, 0x5280, 0x1c76, 0x1, 0x0);
        gbc.writeMem(0x8d44, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0xb49f);
        EXPECT(gbc.pc(), 0x8d46);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8d44), 0xcb);
        EXPECT(gbc.readMem(0x8d45), 0xc4);
        // CB C4 0016
        gbc.setState(0xae0d, 0xb10d, 0x4340, 0xa69, 0x6f0b, 0x9cfa, 0x1, 0x1);
        gbc.writeMem(0xae0d, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xb10d);
        EXPECT(gbc.pc(), 0xae0f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xae0d), 0xcb);
        EXPECT(gbc.readMem(0xae0e), 0xc4);
        // CB C4 0017
        gbc.setState(0xefa4, 0x8104, 0x1170, 0x49a6, 0x472b, 0xfc07, 0x0, 0x1);
        gbc.writeMem(0xefa4, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x8104);
        EXPECT(gbc.pc(), 0xefa6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xefa4), 0xcb);
        EXPECT(gbc.readMem(0xefa5), 0xc4);
        // CB C4 0019
        gbc.setState(0xd1b3, 0xa78b, 0x3db0, 0x3908, 0x154f, 0xc65a, 0x0, 0x1);
        gbc.writeMem(0xd1b3, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0xa78b);
        EXPECT(gbc.pc(), 0xd1b5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd1b3), 0xcb);
        EXPECT(gbc.readMem(0xd1b4), 0xc4);
        // CB C4 001A
        gbc.setState(0xa7df, 0x78fb, 0x8f60, 0xb5cd, 0x732b, 0xfe0a, 0x0, 0x1);
        gbc.writeMem(0xa7df, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x78fb);
        EXPECT(gbc.pc(), 0xa7e1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa7df), 0xcb);
        EXPECT(gbc.readMem(0xa7e0), 0xc4);
        // CB C4 001B
        gbc.setState(0x1a9b, 0x7e33, 0xf930, 0x423d, 0x8a60, 0x3213, 0x0, 0x1);
        gbc.writeMem(0x1a9b, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x7e33);
        EXPECT(gbc.pc(), 0x1a9d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C4 001C
        gbc.setState(0xde8d, 0xfe00, 0x64b0, 0x13aa, 0x294d, 0xa6d4, 0x0, 0x1);
        gbc.writeMem(0xde8d, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xfe00);
        EXPECT(gbc.pc(), 0xde8f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xde8d), 0xcb);
        EXPECT(gbc.readMem(0xde8e), 0xc4);
        // CB C4 001E
        gbc.setState(0x71d9, 0x8863, 0xf860, 0x33d7, 0xc3fa, 0xe1fa, 0x1, 0x1);
        gbc.writeMem(0x71d9, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x8863);
        EXPECT(gbc.pc(), 0x71db);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C4 001F
        gbc.setState(0x24b8, 0x5caa, 0xf9e0, 0x85c6, 0x543e, 0xb255, 0x1, 0x1);
        gbc.writeMem(0x24b8, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x5caa);
        EXPECT(gbc.pc(), 0x24ba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C4 0020
        gbc.setState(0x9386, 0x946b, 0x4770, 0xc18a, 0x75a8, 0xd18d, 0x0, 0x1);
        gbc.writeMem(0x9386, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x946b);
        EXPECT(gbc.pc(), 0x9388);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9386), 0xcb);
        EXPECT(gbc.readMem(0x9387), 0xc4);
        // CB C4 0021
        gbc.setState(0x4761, 0x82b5, 0xf190, 0xfc7f, 0x9a57, 0x7c5c, 0x1, 0x1);
        gbc.writeMem(0x4761, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x82b5);
        EXPECT(gbc.pc(), 0x4763);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C4 0022
        gbc.setState(0x6c97, 0xc1d1, 0xdc70, 0xd00c, 0x5897, 0x1af3, 0x0, 0x0);
        gbc.writeMem(0x6c97, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0xc1d1);
        EXPECT(gbc.pc(), 0x6c99);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C4 0024
        gbc.setState(0x2d6f, 0xb5a7, 0x2f00, 0x73cb, 0xf86b, 0x1315, 0x1, 0x0);
        gbc.writeMem(0x2d6f, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0xb5a7);
        EXPECT(gbc.pc(), 0x2d71);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C4 0025
        gbc.setState(0x9afa, 0x8314, 0x1cd0, 0x9bb8, 0xa78f, 0xfe07, 0x0, 0x0);
        gbc.writeMem(0x9afa, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x8314);
        EXPECT(gbc.pc(), 0x9afc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9afa), 0xcb);
        EXPECT(gbc.readMem(0x9afb), 0xc4);
        // CB C4 0026
        gbc.setState(0x31f6, 0x30d4, 0x7b70, 0x5060, 0x2c4a, 0x9bd3, 0x1, 0x1);
        gbc.writeMem(0x31f6, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x30d4);
        EXPECT(gbc.pc(), 0x31f8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C4 0027
        gbc.setState(0xd171, 0x3c46, 0x76d0, 0x38f9, 0xa533, 0xad3b, 0x0, 0x1);
        gbc.writeMem(0xd171, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x3c46);
        EXPECT(gbc.pc(), 0xd173);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd171), 0xcb);
        EXPECT(gbc.readMem(0xd172), 0xc4);
        // CB C4 0028
        gbc.setState(0xc18e, 0x62a9, 0x52b0, 0x7bc, 0x1107, 0x4bce, 0x0, 0x1);
        gbc.writeMem(0xc18e, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x62a9);
        EXPECT(gbc.pc(), 0xc190);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc18e), 0xcb);
        EXPECT(gbc.readMem(0xc18f), 0xc4);
        // CB C4 0029
        gbc.setState(0xd2c, 0xa839, 0x5600, 0x4b6, 0xb6aa, 0x9d1f, 0x1, 0x0);
        gbc.writeMem(0xd2c, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0xa839);
        EXPECT(gbc.pc(), 0xd2e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C4 002A
        gbc.setState(0xea07, 0x5350, 0x6f90, 0xef07, 0xd015, 0xe859, 0x1, 0x1);
        gbc.writeMem(0xea07, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x5350);
        EXPECT(gbc.pc(), 0xea09);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xea07), 0xcb);
        EXPECT(gbc.readMem(0xea08), 0xc4);
        // CB C4 002B
        gbc.setState(0x1cfc, 0x2b8, 0xdc70, 0xb79f, 0xfb9a, 0xefdd, 0x0, 0x1);
        gbc.writeMem(0x1cfc, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x2b8);
        EXPECT(gbc.pc(), 0x1cfe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C4 002C
        gbc.setState(0xb0fa, 0xbd3, 0xafe0, 0xffd6, 0xc989, 0xee1c, 0x0, 0x1);
        gbc.writeMem(0xb0fa, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0xbd3);
        EXPECT(gbc.pc(), 0xb0fc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb0fa), 0xcb);
        EXPECT(gbc.readMem(0xb0fb), 0xc4);
        // CB C4 002D
        gbc.setState(0x1475, 0x3d43, 0x6d00, 0x1e8f, 0x51b3, 0xb99e, 0x0, 0x0);
        gbc.writeMem(0x1475, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x3d43);
        EXPECT(gbc.pc(), 0x1477);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C4 002E
        gbc.setState(0xcbf0, 0x73b5, 0x980, 0x420f, 0x826b, 0x4883, 0x1, 0x1);
        gbc.writeMem(0xcbf0, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x73b5);
        EXPECT(gbc.pc(), 0xcbf2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcbf0), 0xcb);
        EXPECT(gbc.readMem(0xcbf1), 0xc4);
        // CB C4 002F
        gbc.setState(0xb7b7, 0x9f16, 0x7f30, 0xc339, 0xdbf, 0xf2bd, 0x0, 0x1);
        gbc.writeMem(0xb7b7, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x9f16);
        EXPECT(gbc.pc(), 0xb7b9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb7b7), 0xcb);
        EXPECT(gbc.readMem(0xb7b8), 0xc4);
        // CB C4 0030
        gbc.setState(0xbfe0, 0xc09d, 0x6090, 0x6d1d, 0x26c0, 0x78ed, 0x1, 0x1);
        gbc.writeMem(0xbfe0, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0xc09d);
        EXPECT(gbc.pc(), 0xbfe2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbfe0), 0xcb);
        EXPECT(gbc.readMem(0xbfe1), 0xc4);
        // CB C4 0031
        gbc.setState(0xd272, 0x8658, 0xef50, 0x31a7, 0xe725, 0xc759, 0x0, 0x1);
        gbc.writeMem(0xd272, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x8658);
        EXPECT(gbc.pc(), 0xd274);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd272), 0xcb);
        EXPECT(gbc.readMem(0xd273), 0xc4);
        // CB C4 0032
        gbc.setState(0x7d9a, 0x4164, 0x6fe0, 0x602f, 0x785d, 0x67a1, 0x0, 0x0);
        gbc.writeMem(0x7d9a, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x4164);
        EXPECT(gbc.pc(), 0x7d9c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C4 0033
        gbc.setState(0x3947, 0x48d7, 0xe8f0, 0xcedf, 0xc8f5, 0x5b74, 0x0, 0x0);
        gbc.writeMem(0x3947, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x48d7);
        EXPECT(gbc.pc(), 0x3949);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C4 0034
        gbc.setState(0xb94f, 0x71b7, 0xf590, 0x8d56, 0xcfc3, 0x5aca, 0x0, 0x0);
        gbc.writeMem(0xb94f, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x71b7);
        EXPECT(gbc.pc(), 0xb951);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb94f), 0xcb);
        EXPECT(gbc.readMem(0xb950), 0xc4);
        // CB C4 0035
        gbc.setState(0x3d88, 0x2ba7, 0xa460, 0x67e2, 0x1691, 0x31e6, 0x0, 0x0);
        gbc.writeMem(0x3d88, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x2ba7);
        EXPECT(gbc.pc(), 0x3d8a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C4 0036
        gbc.setState(0x6540, 0x1caf, 0x9380, 0x2745, 0x100e, 0x6c5e, 0x0, 0x0);
        gbc.writeMem(0x6540, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x1caf);
        EXPECT(gbc.pc(), 0x6542);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C4 0037
        gbc.setState(0x9f74, 0xc28b, 0x5360, 0x4282, 0x71ca, 0x1f0d, 0x1, 0x0);
        gbc.writeMem(0x9f74, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0xc28b);
        EXPECT(gbc.pc(), 0x9f76);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9f74), 0xcb);
        EXPECT(gbc.readMem(0x9f75), 0xc4);
        // CB C4 0038
        gbc.setState(0x31b8, 0x7a52, 0x9340, 0xa200, 0x15ed, 0x5296, 0x1, 0x1);
        gbc.writeMem(0x31b8, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x7a52);
        EXPECT(gbc.pc(), 0x31ba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C4 0039
        gbc.setState(0x118, 0xaf05, 0x5ad0, 0x78ff, 0x8aee, 0x7635, 0x0, 0x0);
        gbc.writeMem(0x118, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0xaf05);
        EXPECT(gbc.pc(), 0x11a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C4 003A
        gbc.setState(0xb216, 0x6998, 0x4cf0, 0x7373, 0x61d1, 0xbf4, 0x1, 0x1);
        gbc.writeMem(0xb216, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x6998);
        EXPECT(gbc.pc(), 0xb218);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb216), 0xcb);
        EXPECT(gbc.readMem(0xb217), 0xc4);
        // CB C4 003B
        gbc.setState(0xc61d, 0xe2eb, 0xcbb0, 0x3999, 0x225c, 0x6e85, 0x0, 0x1);
        gbc.writeMem(0xc61d, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0xe2eb);
        EXPECT(gbc.pc(), 0xc61f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc61d), 0xcb);
        EXPECT(gbc.readMem(0xc61e), 0xc4);
        // CB C4 003C
        gbc.setState(0x8be4, 0xd5d5, 0x8280, 0x4d3e, 0x37a1, 0x6a7a, 0x1, 0x0);
        gbc.writeMem(0x8be4, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xd5d5);
        EXPECT(gbc.pc(), 0x8be6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8be4), 0xcb);
        EXPECT(gbc.readMem(0x8be5), 0xc4);
        // CB C4 003D
        gbc.setState(0x847c, 0x12de, 0x69a0, 0x5d21, 0xef2, 0x1340, 0x0, 0x1);
        gbc.writeMem(0x847c, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x12de);
        EXPECT(gbc.pc(), 0x847e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x847c), 0xcb);
        EXPECT(gbc.readMem(0x847d), 0xc4);
        // CB C4 003E
        gbc.setState(0x5bab, 0x6694, 0x1ae0, 0xfc31, 0x8043, 0x658d, 0x0, 0x0);
        gbc.writeMem(0x5bab, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x6694);
        EXPECT(gbc.pc(), 0x5bad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C4 003F
        gbc.setState(0xb20c, 0x7b3c, 0xe9a0, 0xff8e, 0x77e6, 0x82d8, 0x0, 0x1);
        gbc.writeMem(0xb20c, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x7b3c);
        EXPECT(gbc.pc(), 0xb20e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb20c), 0xcb);
        EXPECT(gbc.readMem(0xb20d), 0xc4);
        // CB C4 0040
        gbc.setState(0x3af8, 0x98ef, 0x4510, 0x4c56, 0x1858, 0x83f6, 0x1, 0x1);
        gbc.writeMem(0x3af8, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x98ef);
        EXPECT(gbc.pc(), 0x3afa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C4 0041
        gbc.setState(0x5b62, 0xeecf, 0x6530, 0xea80, 0xc74e, 0xf3d0, 0x0, 0x0);
        gbc.writeMem(0x5b62, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0xeecf);
        EXPECT(gbc.pc(), 0x5b64);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C4 0042
        gbc.setState(0x8fd5, 0xbebe, 0x5e80, 0xf186, 0x447d, 0x914b, 0x1, 0x0);
        gbc.writeMem(0x8fd5, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0xbebe);
        EXPECT(gbc.pc(), 0x8fd7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8fd5), 0xcb);
        EXPECT(gbc.readMem(0x8fd6), 0xc4);
        // CB C4 0043
        gbc.setState(0xe51, 0x9cf7, 0xe70, 0x758, 0xad43, 0x4989, 0x1, 0x0);
        gbc.writeMem(0xe51, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x9cf7);
        EXPECT(gbc.pc(), 0xe53);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C4 0044
        gbc.setState(0xd445, 0xb0f3, 0x5e50, 0xd1ce, 0x2d9a, 0xb113, 0x0, 0x1);
        gbc.writeMem(0xd445, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0xb0f3);
        EXPECT(gbc.pc(), 0xd447);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd445), 0xcb);
        EXPECT(gbc.readMem(0xd446), 0xc4);
        // CB C4 0045
        gbc.setState(0xd3ce, 0xf1a5, 0xb3f0, 0x45ed, 0xf7b5, 0x9101, 0x0, 0x1);
        gbc.writeMem(0xd3ce, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0xf1a5);
        EXPECT(gbc.pc(), 0xd3d0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd3ce), 0xcb);
        EXPECT(gbc.readMem(0xd3cf), 0xc4);
        // CB C4 0046
        gbc.setState(0xb26e, 0x385d, 0x2df0, 0xba75, 0xabbb, 0x5558, 0x1, 0x0);
        gbc.writeMem(0xb26e, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x385d);
        EXPECT(gbc.pc(), 0xb270);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb26e), 0xcb);
        EXPECT(gbc.readMem(0xb26f), 0xc4);
        // CB C4 0047
        gbc.setState(0xb118, 0xb829, 0x2da0, 0xc88d, 0x5145, 0x8378, 0x1, 0x1);
        gbc.writeMem(0xb118, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0xb829);
        EXPECT(gbc.pc(), 0xb11a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb118), 0xcb);
        EXPECT(gbc.readMem(0xb119), 0xc4);
        // CB C4 0048
        gbc.setState(0xc570, 0x9d94, 0x3a00, 0x490c, 0x6555, 0x6ae5, 0x0, 0x1);
        gbc.writeMem(0xc570, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x9d94);
        EXPECT(gbc.pc(), 0xc572);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc570), 0xcb);
        EXPECT(gbc.readMem(0xc571), 0xc4);
        // CB C4 0049
        gbc.setState(0x887, 0x69c6, 0x6d50, 0xb446, 0x266f, 0x9846, 0x0, 0x1);
        gbc.writeMem(0x887, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x69c6);
        EXPECT(gbc.pc(), 0x889);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C4 004A
        gbc.setState(0x789c, 0x8c3, 0x5900, 0xf38c, 0xd798, 0x293a, 0x1, 0x0);
        gbc.writeMem(0x789c, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x8c3);
        EXPECT(gbc.pc(), 0x789e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C4 004B
        gbc.setState(0x5ffa, 0xd127, 0x9580, 0x43d0, 0xcb9, 0xdb4a, 0x0, 0x1);
        gbc.writeMem(0x5ffa, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xd127);
        EXPECT(gbc.pc(), 0x5ffc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C4 004C
        gbc.setState(0x4aa, 0x95c7, 0x4790, 0x3b04, 0xe398, 0x3136, 0x1, 0x0);
        gbc.writeMem(0x4aa, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x95c7);
        EXPECT(gbc.pc(), 0x4ac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C4 004D
        gbc.setState(0x8430, 0x993c, 0xb100, 0x8e15, 0xbf7d, 0x846f, 0x1, 0x1);
        gbc.writeMem(0x8430, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x993c);
        EXPECT(gbc.pc(), 0x8432);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8430), 0xcb);
        EXPECT(gbc.readMem(0x8431), 0xc4);
        // CB C4 004E
        gbc.setState(0x84f3, 0xb71e, 0xf020, 0xe732, 0x484a, 0x7fba, 0x1, 0x0);
        gbc.writeMem(0x84f3, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0xb71e);
        EXPECT(gbc.pc(), 0x84f5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x84f3), 0xcb);
        EXPECT(gbc.readMem(0x84f4), 0xc4);
        // CB C4 004F
        gbc.setState(0x1eb3, 0x3f12, 0xdbe0, 0xf14a, 0x5e23, 0xb7f2, 0x1, 0x0);
        gbc.writeMem(0x1eb3, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x3f12);
        EXPECT(gbc.pc(), 0x1eb5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C4 0050
        gbc.setState(0x965e, 0xb359, 0x1450, 0x8cac, 0xa7b0, 0x8dc5, 0x1, 0x1);
        gbc.writeMem(0x965e, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0xb359);
        EXPECT(gbc.pc(), 0x9660);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x965e), 0xcb);
        EXPECT(gbc.readMem(0x965f), 0xc4);
        // CB C4 0051
        gbc.setState(0x10d7, 0x49a3, 0xd8f0, 0xd8eb, 0x8ca7, 0x99e1, 0x1, 0x1);
        gbc.writeMem(0x10d7, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x49a3);
        EXPECT(gbc.pc(), 0x10d9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C4 0052
        gbc.setState(0x2738, 0x7d5b, 0x5240, 0x67ee, 0x9a60, 0x4824, 0x1, 0x1);
        gbc.writeMem(0x2738, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x7d5b);
        EXPECT(gbc.pc(), 0x273a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C4 0053
        gbc.setState(0xd44, 0x330b, 0xd20, 0x49b7, 0x2d40, 0xd52b, 0x0, 0x0);
        gbc.writeMem(0xd44, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x330b);
        EXPECT(gbc.pc(), 0xd46);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C4 0054
        gbc.setState(0xe056, 0x1339, 0x2810, 0x38cb, 0xaca6, 0x85e0, 0x1, 0x1);
        gbc.writeMem(0xe056, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x1339);
        EXPECT(gbc.pc(), 0xe058);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe056), 0xcb);
        EXPECT(gbc.readMem(0xe057), 0xc4);
        // CB C4 0055
        gbc.setState(0xe704, 0xfc15, 0xc030, 0xc42b, 0x3cb2, 0xd291, 0x0, 0x0);
        gbc.writeMem(0xe704, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0xfc15);
        EXPECT(gbc.pc(), 0xe706);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe704), 0xcb);
        EXPECT(gbc.readMem(0xe705), 0xc4);
        // CB C4 0056
        gbc.setState(0xc4b6, 0xd559, 0xbe40, 0x7136, 0xf127, 0x23c5, 0x0, 0x1);
        gbc.writeMem(0xc4b6, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0xd559);
        EXPECT(gbc.pc(), 0xc4b8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc4b6), 0xcb);
        EXPECT(gbc.readMem(0xc4b7), 0xc4);
        // CB C4 0057
        gbc.setState(0x9461, 0xcac3, 0x6040, 0xabcb, 0x92d3, 0xc9b5, 0x0, 0x1);
        gbc.writeMem(0x9461, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0xcac3);
        EXPECT(gbc.pc(), 0x9463);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9461), 0xcb);
        EXPECT(gbc.readMem(0x9462), 0xc4);
        // CB C4 0058
        gbc.setState(0x558a, 0x9e32, 0xeff0, 0x1248, 0x46fc, 0xeeed, 0x1, 0x1);
        gbc.writeMem(0x558a, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x9e32);
        EXPECT(gbc.pc(), 0x558c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C4 0059
        gbc.setState(0x6df3, 0xc108, 0xf140, 0x7f12, 0xb159, 0x1119, 0x1, 0x0);
        gbc.writeMem(0x6df3, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0xc108);
        EXPECT(gbc.pc(), 0x6df5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C4 005A
        gbc.setState(0xced1, 0x5818, 0xa950, 0x3535, 0x1bfc, 0xbf0d, 0x0, 0x1);
        gbc.writeMem(0xced1, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x5818);
        EXPECT(gbc.pc(), 0xced3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xced1), 0xcb);
        EXPECT(gbc.readMem(0xced2), 0xc4);
        // CB C4 005B
        gbc.setState(0x389d, 0xca8e, 0xb740, 0x7a80, 0x666d, 0x25a9, 0x1, 0x0);
        gbc.writeMem(0x389d, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0xca8e);
        EXPECT(gbc.pc(), 0x389f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C4 005C
        gbc.setState(0x7180, 0xc304, 0xa490, 0xa63e, 0x5af, 0x7d3a, 0x0, 0x0);
        gbc.writeMem(0x7180, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0xc304);
        EXPECT(gbc.pc(), 0x7182);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C4 005D
        gbc.setState(0x5afc, 0x2d34, 0x260, 0xbfb, 0xb6ae, 0x33fb, 0x1, 0x1);
        gbc.writeMem(0x5afc, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x2d34);
        EXPECT(gbc.pc(), 0x5afe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C4 005E
        gbc.setState(0x8ed9, 0x6e5c, 0xe3b0, 0xa568, 0x75cb, 0x12f4, 0x0, 0x1);
        gbc.writeMem(0x8ed9, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x6e5c);
        EXPECT(gbc.pc(), 0x8edb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8ed9), 0xcb);
        EXPECT(gbc.readMem(0x8eda), 0xc4);
        // CB C4 005F
        gbc.setState(0x7646, 0x1cd3, 0x7130, 0x9231, 0x46a4, 0x1540, 0x0, 0x1);
        gbc.writeMem(0x7646, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x1cd3);
        EXPECT(gbc.pc(), 0x7648);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C4 0060
        gbc.setState(0x751, 0xb93b, 0x6ab0, 0xc9e5, 0xce5c, 0xd962, 0x0, 0x1);
        gbc.writeMem(0x751, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xb93b);
        EXPECT(gbc.pc(), 0x753);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C4 0061
        gbc.setState(0xb717, 0xdff5, 0x31c0, 0x1050, 0xe538, 0xbbe7, 0x1, 0x1);
        gbc.writeMem(0xb717, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xdff5);
        EXPECT(gbc.pc(), 0xb719);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb717), 0xcb);
        EXPECT(gbc.readMem(0xb718), 0xc4);
        // CB C4 0062
        gbc.setState(0x3c4a, 0xc7a7, 0xfc70, 0x721, 0x5dfe, 0x4e4b, 0x1, 0x1);
        gbc.writeMem(0x3c4a, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0xc7a7);
        EXPECT(gbc.pc(), 0x3c4c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C4 0064
        gbc.setState(0x210d, 0xdd8a, 0xce10, 0xdbf, 0x97c, 0xa819, 0x0, 0x0);
        gbc.writeMem(0x210d, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0xdd8a);
        EXPECT(gbc.pc(), 0x210f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C4 0066
        gbc.setState(0x2d30, 0xaaac, 0x5d0, 0xb05f, 0x3061, 0x93aa, 0x1, 0x1);
        gbc.writeMem(0x2d30, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0xaaac);
        EXPECT(gbc.pc(), 0x2d32);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C4 0067
        gbc.setState(0xb23, 0x620d, 0xccc0, 0xbae7, 0x3179, 0x3dac, 0x1, 0x1);
        gbc.writeMem(0xb23, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x620d);
        EXPECT(gbc.pc(), 0xb25);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C4 0068
        gbc.setState(0x1289, 0xfaa7, 0xf2c0, 0xf35c, 0x9e1e, 0x620, 0x1, 0x1);
        gbc.writeMem(0x1289, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0xfaa7);
        EXPECT(gbc.pc(), 0x128b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C4 0069
        gbc.setState(0x106e, 0x8c2a, 0x4740, 0x7798, 0x4719, 0x2abc, 0x1, 0x0);
        gbc.writeMem(0x106e, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x8c2a);
        EXPECT(gbc.pc(), 0x1070);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C4 006A
        gbc.setState(0x1cf8, 0x9ba1, 0x62c0, 0xe289, 0x42e6, 0x6481, 0x0, 0x0);
        gbc.writeMem(0x1cf8, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x9ba1);
        EXPECT(gbc.pc(), 0x1cfa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C4 006B
        gbc.setState(0x39fa, 0x6fbb, 0x270, 0xc72f, 0x4370, 0x1816, 0x0, 0x0);
        gbc.writeMem(0x39fa, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x6fbb);
        EXPECT(gbc.pc(), 0x39fc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C4 006C
        gbc.setState(0x4dbf, 0x1ed7, 0xf3f0, 0xda38, 0x3b7d, 0xccf4, 0x1, 0x0);
        gbc.writeMem(0x4dbf, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x1ed7);
        EXPECT(gbc.pc(), 0x4dc1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C4 006D
        gbc.setState(0xbb32, 0xa60d, 0x1b10, 0xbb9c, 0xa541, 0xe0d4, 0x1, 0x1);
        gbc.writeMem(0xbb32, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xa60d);
        EXPECT(gbc.pc(), 0xbb34);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbb32), 0xcb);
        EXPECT(gbc.readMem(0xbb33), 0xc4);
        // CB C4 006E
        gbc.setState(0xe859, 0x2082, 0xce60, 0x2f71, 0x3123, 0x449e, 0x1, 0x0);
        gbc.writeMem(0xe859, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x2082);
        EXPECT(gbc.pc(), 0xe85b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe859), 0xcb);
        EXPECT(gbc.readMem(0xe85a), 0xc4);
        // CB C4 006F
        gbc.setState(0x31d0, 0xf8ee, 0x2840, 0x2804, 0xafae, 0xa2d9, 0x0, 0x0);
        gbc.writeMem(0x31d0, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0xf8ee);
        EXPECT(gbc.pc(), 0x31d2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C4 0070
        gbc.setState(0x8e26, 0x2a22, 0x8390, 0xc22d, 0xa636, 0x3bd9, 0x1, 0x1);
        gbc.writeMem(0x8e26, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x2a22);
        EXPECT(gbc.pc(), 0x8e28);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8e26), 0xcb);
        EXPECT(gbc.readMem(0x8e27), 0xc4);
        // CB C4 0071
        gbc.setState(0x107b, 0x9132, 0x4fb0, 0x91e2, 0x7714, 0xa2b1, 0x0, 0x1);
        gbc.writeMem(0x107b, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x9132);
        EXPECT(gbc.pc(), 0x107d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C4 0072
        gbc.setState(0x59e4, 0x2ea2, 0xe240, 0x6170, 0xa4cb, 0x1103, 0x1, 0x0);
        gbc.writeMem(0x59e4, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x2ea2);
        EXPECT(gbc.pc(), 0x59e6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C4 0073
        gbc.setState(0x35c8, 0x3c64, 0x93e0, 0xac57, 0x3b84, 0xbc25, 0x0, 0x1);
        gbc.writeMem(0x35c8, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x3c64);
        EXPECT(gbc.pc(), 0x35ca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C4 0074
        gbc.setState(0x7060, 0xeff4, 0xd2e0, 0x2c5, 0x1519, 0x13ce, 0x1, 0x1);
        gbc.writeMem(0x7060, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0xeff4);
        EXPECT(gbc.pc(), 0x7062);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C4 0075
        gbc.setState(0x9381, 0x17ce, 0xd940, 0xb8da, 0xc7bc, 0xa047, 0x1, 0x1);
        gbc.writeMem(0x9381, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x17ce);
        EXPECT(gbc.pc(), 0x9383);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9381), 0xcb);
        EXPECT(gbc.readMem(0x9382), 0xc4);
        // CB C4 0076
        gbc.setState(0x1ddc, 0x591b, 0xf490, 0xf200, 0xcefe, 0xd8c6, 0x0, 0x0);
        gbc.writeMem(0x1ddc, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x591b);
        EXPECT(gbc.pc(), 0x1dde);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C4 0077
        gbc.setState(0x89f, 0x1bb0, 0xeaa0, 0xae3a, 0xfdbf, 0xbd29, 0x1, 0x1);
        gbc.writeMem(0x89f, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x1bb0);
        EXPECT(gbc.pc(), 0x8a1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C4 0078
        gbc.setState(0xd01b, 0xe73a, 0x5da0, 0xf0a8, 0xdbbe, 0x9351, 0x0, 0x0);
        gbc.writeMem(0xd01b, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xe73a);
        EXPECT(gbc.pc(), 0xd01d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd01b), 0xcb);
        EXPECT(gbc.readMem(0xd01c), 0xc4);
        // CB C4 0079
        gbc.setState(0x22cb, 0xc2da, 0x6900, 0xd20b, 0x73cb, 0x6105, 0x0, 0x1);
        gbc.writeMem(0x22cb, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0xc2da);
        EXPECT(gbc.pc(), 0x22cd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C4 007A
        gbc.setState(0xdfa1, 0xdd67, 0x86c0, 0x24ce, 0xfd67, 0x5789, 0x1, 0x1);
        gbc.writeMem(0xdfa1, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0xdd67);
        EXPECT(gbc.pc(), 0xdfa3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdfa1), 0xcb);
        EXPECT(gbc.readMem(0xdfa2), 0xc4);
        // CB C4 007B
        gbc.setState(0x744a, 0xd794, 0x4d30, 0x3c9d, 0x1e4, 0xd0b1, 0x1, 0x0);
        gbc.writeMem(0x744a, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0xd794);
        EXPECT(gbc.pc(), 0x744c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C4 007C
        gbc.setState(0x9549, 0x3145, 0xc960, 0x1ee0, 0x76e9, 0xcbfb, 0x0, 0x0);
        gbc.writeMem(0x9549, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x3145);
        EXPECT(gbc.pc(), 0x954b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9549), 0xcb);
        EXPECT(gbc.readMem(0x954a), 0xc4);
        // CB C4 007D
        gbc.setState(0x7aca, 0xd183, 0x980, 0xc5c2, 0xc4e9, 0xafc5, 0x0, 0x0);
        gbc.writeMem(0x7aca, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0xd183);
        EXPECT(gbc.pc(), 0x7acc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C4 007E
        gbc.setState(0x8b99, 0xbd0d, 0xbfa0, 0xc218, 0xc4, 0x3f3, 0x1, 0x1);
        gbc.writeMem(0x8b99, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0xbd0d);
        EXPECT(gbc.pc(), 0x8b9b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8b99), 0xcb);
        EXPECT(gbc.readMem(0x8b9a), 0xc4);
        // CB C4 007F
        gbc.setState(0x9443, 0x17e4, 0xff70, 0xc3e3, 0x8b45, 0x1ecd, 0x0, 0x0);
        gbc.writeMem(0x9443, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x17e4);
        EXPECT(gbc.pc(), 0x9445);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9443), 0xcb);
        EXPECT(gbc.readMem(0x9444), 0xc4);
        // CB C4 0080
        gbc.setState(0x1076, 0x888b, 0xe600, 0xc492, 0x1e39, 0x8ef0, 0x0, 0x0);
        gbc.writeMem(0x1076, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x888b);
        EXPECT(gbc.pc(), 0x1078);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C4 0082
        gbc.setState(0xeedc, 0x806b, 0x85c0, 0xfa0c, 0xd18c, 0x5bcc, 0x0, 0x1);
        gbc.writeMem(0xeedc, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x806b);
        EXPECT(gbc.pc(), 0xeede);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeedc), 0xcb);
        EXPECT(gbc.readMem(0xeedd), 0xc4);
        // CB C4 0083
        gbc.setState(0x26bb, 0xbf31, 0xd070, 0xe460, 0x11a1, 0x8cab, 0x0, 0x1);
        gbc.writeMem(0x26bb, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xbf31);
        EXPECT(gbc.pc(), 0x26bd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C4 0084
        gbc.setState(0x8234, 0x5fd7, 0xd160, 0x7a22, 0x4b6d, 0x8c57, 0x1, 0x0);
        gbc.writeMem(0x8234, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x5fd7);
        EXPECT(gbc.pc(), 0x8236);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8234), 0xcb);
        EXPECT(gbc.readMem(0x8235), 0xc4);
        // CB C4 0085
        gbc.setState(0xa16e, 0x5a3d, 0xebe0, 0xd2b, 0x7385, 0x1d0d, 0x0, 0x1);
        gbc.writeMem(0xa16e, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x5a3d);
        EXPECT(gbc.pc(), 0xa170);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa16e), 0xcb);
        EXPECT(gbc.readMem(0xa16f), 0xc4);
        // CB C4 0086
        gbc.setState(0xaca0, 0xe64f, 0xcf70, 0xb25b, 0x1c22, 0x8717, 0x1, 0x1);
        gbc.writeMem(0xaca0, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0xe64f);
        EXPECT(gbc.pc(), 0xaca2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaca0), 0xcb);
        EXPECT(gbc.readMem(0xaca1), 0xc4);
        // CB C4 0087
        gbc.setState(0x8f1c, 0xef01, 0x580, 0x33dd, 0x8b98, 0xb23, 0x1, 0x0);
        gbc.writeMem(0x8f1c, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0xef01);
        EXPECT(gbc.pc(), 0x8f1e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8f1c), 0xcb);
        EXPECT(gbc.readMem(0x8f1d), 0xc4);
        // CB C4 0088
        gbc.setState(0x2778, 0xe42c, 0xd930, 0xa731, 0xea11, 0xe7dc, 0x0, 0x1);
        gbc.writeMem(0x2778, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0xe42c);
        EXPECT(gbc.pc(), 0x277a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C4 0089
        gbc.setState(0x1ad, 0x5058, 0x2660, 0xf517, 0x75de, 0x43fd, 0x0, 0x0);
        gbc.writeMem(0x1ad, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x5058);
        EXPECT(gbc.pc(), 0x1af);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C4 008A
        gbc.setState(0xb594, 0x47a1, 0x9180, 0xaace, 0xef3d, 0x912f, 0x1, 0x0);
        gbc.writeMem(0xb594, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x47a1);
        EXPECT(gbc.pc(), 0xb596);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb594), 0xcb);
        EXPECT(gbc.readMem(0xb595), 0xc4);
        // CB C4 008B
        gbc.setState(0x966f, 0x91bf, 0x4920, 0xbe89, 0xd320, 0x3530, 0x0, 0x0);
        gbc.writeMem(0x966f, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x91bf);
        EXPECT(gbc.pc(), 0x9671);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x966f), 0xcb);
        EXPECT(gbc.readMem(0x9670), 0xc4);
        // CB C4 008C
        gbc.setState(0x87c3, 0xca09, 0xb120, 0x4cf0, 0x45ff, 0xd0ab, 0x1, 0x1);
        gbc.writeMem(0x87c3, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xca09);
        EXPECT(gbc.pc(), 0x87c5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x87c3), 0xcb);
        EXPECT(gbc.readMem(0x87c4), 0xc4);
        // CB C4 008D
        gbc.setState(0xc533, 0xddb6, 0x86b0, 0x5624, 0xc7f5, 0x667c, 0x1, 0x1);
        gbc.writeMem(0xc533, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xddb6);
        EXPECT(gbc.pc(), 0xc535);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc533), 0xcb);
        EXPECT(gbc.readMem(0xc534), 0xc4);
        // CB C4 008E
        gbc.setState(0xd899, 0xfed6, 0xfff0, 0x6196, 0x54de, 0xa517, 0x1, 0x0);
        gbc.writeMem(0xd899, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0xfed6);
        EXPECT(gbc.pc(), 0xd89b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd899), 0xcb);
        EXPECT(gbc.readMem(0xd89a), 0xc4);
        // CB C4 008F
        gbc.setState(0x879a, 0x659f, 0xe9c0, 0x4e22, 0xd8e8, 0x155b, 0x1, 0x0);
        gbc.writeMem(0x879a, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x659f);
        EXPECT(gbc.pc(), 0x879c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x879a), 0xcb);
        EXPECT(gbc.readMem(0x879b), 0xc4);
        // CB C4 0090
        gbc.setState(0xcadf, 0xd769, 0xc510, 0xf09c, 0x42b2, 0xeb34, 0x0, 0x0);
        gbc.writeMem(0xcadf, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xd769);
        EXPECT(gbc.pc(), 0xcae1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcadf), 0xcb);
        EXPECT(gbc.readMem(0xcae0), 0xc4);
        // CB C4 0091
        gbc.setState(0xc9b6, 0x81d0, 0x4500, 0x5b5e, 0xcd66, 0xcc27, 0x1, 0x1);
        gbc.writeMem(0xc9b6, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x81d0);
        EXPECT(gbc.pc(), 0xc9b8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc9b6), 0xcb);
        EXPECT(gbc.readMem(0xc9b7), 0xc4);
        // CB C4 0092
        gbc.setState(0x60c7, 0x3b7, 0x6de0, 0x6c4a, 0xfa51, 0xa264, 0x1, 0x1);
        gbc.writeMem(0x60c7, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x3b7);
        EXPECT(gbc.pc(), 0x60c9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C4 0093
        gbc.setState(0x5085, 0x500e, 0xf200, 0x870b, 0x698e, 0x79fe, 0x1, 0x0);
        gbc.writeMem(0x5085, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x500e);
        EXPECT(gbc.pc(), 0x5087);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C4 0094
        gbc.setState(0x116e, 0xdc4, 0x2570, 0xe118, 0xdac0, 0x2190, 0x0, 0x0);
        gbc.writeMem(0x116e, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0xdc4);
        EXPECT(gbc.pc(), 0x1170);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C4 0095
        gbc.setState(0xbe78, 0x5bd8, 0xc2a0, 0xb0d4, 0x1513, 0xbf1f, 0x1, 0x1);
        gbc.writeMem(0xbe78, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x5bd8);
        EXPECT(gbc.pc(), 0xbe7a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbe78), 0xcb);
        EXPECT(gbc.readMem(0xbe79), 0xc4);
        // CB C4 0096
        gbc.setState(0xee64, 0x7629, 0x86d0, 0xa0ef, 0xc59d, 0x74ef, 0x1, 0x1);
        gbc.writeMem(0xee64, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x7629);
        EXPECT(gbc.pc(), 0xee66);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xee64), 0xcb);
        EXPECT(gbc.readMem(0xee65), 0xc4);
        // CB C4 0097
        gbc.setState(0x23da, 0xbb4f, 0xf830, 0x5706, 0x40e9, 0x5e1, 0x0, 0x0);
        gbc.writeMem(0x23da, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xbb4f);
        EXPECT(gbc.pc(), 0x23dc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C4 0098
        gbc.setState(0x36d0, 0x89f6, 0x5370, 0xe86d, 0xb0e3, 0xb361, 0x1, 0x1);
        gbc.writeMem(0x36d0, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x89f6);
        EXPECT(gbc.pc(), 0x36d2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C4 0099
        gbc.setState(0x298f, 0x151d, 0xb220, 0xe5de, 0xa13c, 0xbfee, 0x0, 0x1);
        gbc.writeMem(0x298f, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x151d);
        EXPECT(gbc.pc(), 0x2991);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C4 009A
        gbc.setState(0xed56, 0x9980, 0x1b30, 0x787a, 0xcbfc, 0x1ecf, 0x0, 0x1);
        gbc.writeMem(0xed56, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x9980);
        EXPECT(gbc.pc(), 0xed58);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xed56), 0xcb);
        EXPECT(gbc.readMem(0xed57), 0xc4);
        // CB C4 009C
        gbc.setState(0x81a2, 0xf702, 0x220, 0x812, 0x6f93, 0x1098, 0x1, 0x1);
        gbc.writeMem(0x81a2, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xf702);
        EXPECT(gbc.pc(), 0x81a4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x81a2), 0xcb);
        EXPECT(gbc.readMem(0x81a3), 0xc4);
        // CB C4 009D
        gbc.setState(0xe49b, 0x3c45, 0xdef0, 0x7fd4, 0x4da0, 0x6c54, 0x1, 0x0);
        gbc.writeMem(0xe49b, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x3c45);
        EXPECT(gbc.pc(), 0xe49d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe49b), 0xcb);
        EXPECT(gbc.readMem(0xe49c), 0xc4);
        // CB C4 009E
        gbc.setState(0xb394, 0xdd17, 0x6aa0, 0xdbc9, 0x4828, 0x3fd, 0x1, 0x0);
        gbc.writeMem(0xb394, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xdd17);
        EXPECT(gbc.pc(), 0xb396);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb394), 0xcb);
        EXPECT(gbc.readMem(0xb395), 0xc4);
        // CB C4 009F
        gbc.setState(0xb203, 0x5a2d, 0x3a60, 0xdba7, 0x5d1d, 0xa9c6, 0x0, 0x0);
        gbc.writeMem(0xb203, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x5a2d);
        EXPECT(gbc.pc(), 0xb205);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb203), 0xcb);
        EXPECT(gbc.readMem(0xb204), 0xc4);
        // CB C4 00A1
        gbc.setState(0x88d9, 0xd5e2, 0xa4b0, 0xa786, 0x65fb, 0x4c64, 0x1, 0x1);
        gbc.writeMem(0x88d9, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0xd5e2);
        EXPECT(gbc.pc(), 0x88db);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x88d9), 0xcb);
        EXPECT(gbc.readMem(0x88da), 0xc4);
        // CB C4 00A2
        gbc.setState(0xc0f0, 0xb4fb, 0xc1f0, 0x8d80, 0x8ec, 0x1134, 0x0, 0x0);
        gbc.writeMem(0xc0f0, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xb4fb);
        EXPECT(gbc.pc(), 0xc0f2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc0f0), 0xcb);
        EXPECT(gbc.readMem(0xc0f1), 0xc4);
        // CB C4 00A3
        gbc.setState(0x4624, 0x5253, 0xad0, 0xed50, 0xe9be, 0x9c4c, 0x0, 0x1);
        gbc.writeMem(0x4624, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x5253);
        EXPECT(gbc.pc(), 0x4626);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C4 00A4
        gbc.setState(0x41b9, 0x6430, 0xd210, 0xd40c, 0xcb74, 0xbd10, 0x0, 0x1);
        gbc.writeMem(0x41b9, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x6430);
        EXPECT(gbc.pc(), 0x41bb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C4 00A5
        gbc.setState(0x85fe, 0xe713, 0xa9f0, 0xbc9e, 0xcd30, 0xe4e3, 0x1, 0x0);
        gbc.writeMem(0x85fe, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xe713);
        EXPECT(gbc.pc(), 0x8600);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x85fe), 0xcb);
        EXPECT(gbc.readMem(0x85ff), 0xc4);
        // CB C4 00A6
        gbc.setState(0x8052, 0x2028, 0x30a0, 0x73f5, 0x2f7b, 0xf58c, 0x1, 0x1);
        gbc.writeMem(0x8052, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x2028);
        EXPECT(gbc.pc(), 0x8054);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8052), 0xcb);
        EXPECT(gbc.readMem(0x8053), 0xc4);
        // CB C4 00A7
        gbc.setState(0x4801, 0x31c6, 0x2800, 0x1b7e, 0x933d, 0x1d5c, 0x0, 0x1);
        gbc.writeMem(0x4801, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x31c6);
        EXPECT(gbc.pc(), 0x4803);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C4 00A8
        gbc.setState(0x5d96, 0x20a3, 0xa1d0, 0x9022, 0xf7d4, 0x3e64, 0x1, 0x1);
        gbc.writeMem(0x5d96, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x20a3);
        EXPECT(gbc.pc(), 0x5d98);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C4 00A9
        gbc.setState(0x2f4c, 0x18ef, 0x4320, 0xe149, 0x7fb3, 0xe498, 0x1, 0x1);
        gbc.writeMem(0x2f4c, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x18ef);
        EXPECT(gbc.pc(), 0x2f4e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C4 00AB
        gbc.setState(0x6cc, 0xdf61, 0xfbb0, 0x6c16, 0xf92a, 0xd19, 0x1, 0x0);
        gbc.writeMem(0x6cc, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0xdf61);
        EXPECT(gbc.pc(), 0x6ce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C4 00AC
        gbc.setState(0x3dec, 0xbef9, 0x5ed0, 0x64a, 0xb859, 0xdf25, 0x0, 0x0);
        gbc.writeMem(0x3dec, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0xbef9);
        EXPECT(gbc.pc(), 0x3dee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C4 00AD
        gbc.setState(0x81ed, 0xe485, 0xa0b0, 0x826c, 0xbf42, 0xf4f8, 0x1, 0x1);
        gbc.writeMem(0x81ed, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0xe485);
        EXPECT(gbc.pc(), 0x81ef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x81ed), 0xcb);
        EXPECT(gbc.readMem(0x81ee), 0xc4);
        // CB C4 00AE
        gbc.setState(0xc91, 0xdb40, 0x3f70, 0xdf07, 0xb8b5, 0x5c12, 0x0, 0x1);
        gbc.writeMem(0xc91, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0xdb40);
        EXPECT(gbc.pc(), 0xc93);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C4 00AF
        gbc.setState(0xdfc3, 0x29b3, 0x880, 0x5b28, 0xeb3, 0xac7f, 0x1, 0x0);
        gbc.writeMem(0xdfc3, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x29b3);
        EXPECT(gbc.pc(), 0xdfc5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdfc3), 0xcb);
        EXPECT(gbc.readMem(0xdfc4), 0xc4);
        // CB C4 00B0
        gbc.setState(0x52b3, 0x2263, 0x1cf0, 0xae7a, 0x9e4e, 0xfe8e, 0x0, 0x1);
        gbc.writeMem(0x52b3, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x2263);
        EXPECT(gbc.pc(), 0x52b5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C4 00B1
        gbc.setState(0x8670, 0xc925, 0x1aa0, 0x8d5a, 0x82cc, 0x2c29, 0x0, 0x0);
        gbc.writeMem(0x8670, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0xc925);
        EXPECT(gbc.pc(), 0x8672);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8670), 0xcb);
        EXPECT(gbc.readMem(0x8671), 0xc4);
        // CB C4 00B2
        gbc.setState(0xd9d2, 0xeb60, 0x2ee0, 0xd450, 0xb329, 0x94c3, 0x0, 0x0);
        gbc.writeMem(0xd9d2, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xeb60);
        EXPECT(gbc.pc(), 0xd9d4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd9d2), 0xcb);
        EXPECT(gbc.readMem(0xd9d3), 0xc4);
        // CB C4 00B3
        gbc.setState(0xbd37, 0x37be, 0xad30, 0xbac0, 0xb87d, 0x331c, 0x0, 0x0);
        gbc.writeMem(0xbd37, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x37be);
        EXPECT(gbc.pc(), 0xbd39);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbd37), 0xcb);
        EXPECT(gbc.readMem(0xbd38), 0xc4);
        // CB C4 00B4
        gbc.setState(0xd440, 0xf15d, 0xb250, 0x944, 0x52a9, 0xcdc0, 0x0, 0x0);
        gbc.writeMem(0xd440, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0xf15d);
        EXPECT(gbc.pc(), 0xd442);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd440), 0xcb);
        EXPECT(gbc.readMem(0xd441), 0xc4);
        // CB C4 00B5
        gbc.setState(0xc93d, 0x6d84, 0x7510, 0xf44d, 0x459d, 0xea12, 0x0, 0x0);
        gbc.writeMem(0xc93d, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x6d84);
        EXPECT(gbc.pc(), 0xc93f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc93d), 0xcb);
        EXPECT(gbc.readMem(0xc93e), 0xc4);
        // CB C4 00B7
        gbc.setState(0xdfb9, 0xae30, 0x2630, 0x823a, 0x99b0, 0x5e8e, 0x1, 0x0);
        gbc.writeMem(0xdfb9, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0xae30);
        EXPECT(gbc.pc(), 0xdfbb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdfb9), 0xcb);
        EXPECT(gbc.readMem(0xdfba), 0xc4);
        // CB C4 00B9
        gbc.setState(0x8135, 0xf43b, 0xe570, 0x9c2e, 0x26fa, 0x171b, 0x0, 0x0);
        gbc.writeMem(0x8135, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0xf43b);
        EXPECT(gbc.pc(), 0x8137);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8135), 0xcb);
        EXPECT(gbc.readMem(0x8136), 0xc4);
        // CB C4 00BA
        gbc.setState(0x7e6, 0x5be, 0x5c00, 0x4ba7, 0x730c, 0x35fd, 0x0, 0x1);
        gbc.writeMem(0x7e6, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x5be);
        EXPECT(gbc.pc(), 0x7e8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C4 00BB
        gbc.setState(0x7ca8, 0x87a5, 0x9620, 0xf992, 0xe7a8, 0xfc31, 0x0, 0x0);
        gbc.writeMem(0x7ca8, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x87a5);
        EXPECT(gbc.pc(), 0x7caa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C4 00BD
        gbc.setState(0x9285, 0x3d9, 0xc0c0, 0x61a0, 0x6aa8, 0x9b74, 0x0, 0x0);
        gbc.writeMem(0x9285, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x3d9);
        EXPECT(gbc.pc(), 0x9287);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9285), 0xcb);
        EXPECT(gbc.readMem(0x9286), 0xc4);
        // CB C4 00BE
        gbc.setState(0x4323, 0xca59, 0x1ba0, 0x34df, 0xc8d9, 0x7761, 0x1, 0x0);
        gbc.writeMem(0x4323, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0xca59);
        EXPECT(gbc.pc(), 0x4325);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C4 00BF
        gbc.setState(0x75c6, 0x4cb5, 0xcbc0, 0xa77b, 0xc63, 0x9c8f, 0x1, 0x0);
        gbc.writeMem(0x75c6, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x4cb5);
        EXPECT(gbc.pc(), 0x75c8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C4 00C0
        gbc.setState(0xd12f, 0xf7f2, 0xedf0, 0x9a1e, 0xd05e, 0x6497, 0x0, 0x0);
        gbc.writeMem(0xd12f, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0xf7f2);
        EXPECT(gbc.pc(), 0xd131);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd12f), 0xcb);
        EXPECT(gbc.readMem(0xd130), 0xc4);
        // CB C4 00C1
        gbc.setState(0x1f63, 0x74d5, 0x8c50, 0xbabd, 0xfddd, 0xf4d7, 0x0, 0x1);
        gbc.writeMem(0x1f63, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x74d5);
        EXPECT(gbc.pc(), 0x1f65);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C4 00C2
        gbc.setState(0x543b, 0xd435, 0xf30, 0x97c5, 0xd2e5, 0x37d3, 0x0, 0x1);
        gbc.writeMem(0x543b, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0xd435);
        EXPECT(gbc.pc(), 0x543d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C4 00C3
        gbc.setState(0xe1b, 0x9533, 0xdee0, 0xf1c, 0x2c2d, 0xd87d, 0x0, 0x0);
        gbc.writeMem(0xe1b, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x9533);
        EXPECT(gbc.pc(), 0xe1d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C4 00C4
        gbc.setState(0x56ad, 0xa3d5, 0xe9f0, 0xc10f, 0x4856, 0xb16e, 0x0, 0x1);
        gbc.writeMem(0x56ad, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xa3d5);
        EXPECT(gbc.pc(), 0x56af);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C4 00C5
        gbc.setState(0xdb48, 0x26e8, 0x5a00, 0x6b3a, 0x576f, 0x356, 0x1, 0x0);
        gbc.writeMem(0xdb48, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x26e8);
        EXPECT(gbc.pc(), 0xdb4a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdb48), 0xcb);
        EXPECT(gbc.readMem(0xdb49), 0xc4);
        // CB C4 00C6
        gbc.setState(0x81cc, 0x9872, 0xe390, 0x4a90, 0xcd74, 0x2894, 0x0, 0x1);
        gbc.writeMem(0x81cc, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x9872);
        EXPECT(gbc.pc(), 0x81ce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x81cc), 0xcb);
        EXPECT(gbc.readMem(0x81cd), 0xc4);
        // CB C4 00C7
        gbc.setState(0xb276, 0x29fa, 0x4140, 0x5b8d, 0x2dc9, 0x8d96, 0x1, 0x1);
        gbc.writeMem(0xb276, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x29fa);
        EXPECT(gbc.pc(), 0xb278);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb276), 0xcb);
        EXPECT(gbc.readMem(0xb277), 0xc4);
        // CB C4 00C8
        gbc.setState(0xc282, 0x3003, 0x2d20, 0x26ee, 0x993f, 0x3d53, 0x1, 0x0);
        gbc.writeMem(0xc282, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x3003);
        EXPECT(gbc.pc(), 0xc284);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc282), 0xcb);
        EXPECT(gbc.readMem(0xc283), 0xc4);
        // CB C4 00C9
        gbc.setState(0xb7f7, 0xe469, 0xe9c0, 0xd47, 0x9b07, 0x135c, 0x1, 0x0);
        gbc.writeMem(0xb7f7, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0xe469);
        EXPECT(gbc.pc(), 0xb7f9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb7f7), 0xcb);
        EXPECT(gbc.readMem(0xb7f8), 0xc4);
        // CB C4 00CA
        gbc.setState(0x400e, 0x1270, 0x3050, 0xd25a, 0x8a7c, 0x9d3d, 0x0, 0x0);
        gbc.writeMem(0x400e, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x1270);
        EXPECT(gbc.pc(), 0x4010);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C4 00CB
        gbc.setState(0x137e, 0xa9a7, 0x41a0, 0x64de, 0xab80, 0x60b8, 0x0, 0x1);
        gbc.writeMem(0x137e, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0xa9a7);
        EXPECT(gbc.pc(), 0x1380);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C4 00CC
        gbc.setState(0x5779, 0x584e, 0xf930, 0xdf51, 0xdfbc, 0x9b47, 0x1, 0x0);
        gbc.writeMem(0x5779, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x584e);
        EXPECT(gbc.pc(), 0x577b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C4 00CD
        gbc.setState(0x5550, 0xe3f7, 0x1ba0, 0xa800, 0xa54b, 0xaad8, 0x1, 0x1);
        gbc.writeMem(0x5550, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0xe3f7);
        EXPECT(gbc.pc(), 0x5552);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C4 00CE
        gbc.setState(0x9350, 0xc634, 0xc520, 0x753e, 0xab5, 0x2ca3, 0x0, 0x1);
        gbc.writeMem(0x9350, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0xc634);
        EXPECT(gbc.pc(), 0x9352);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9350), 0xcb);
        EXPECT(gbc.readMem(0x9351), 0xc4);
        // CB C4 00CF
        gbc.setState(0xdb27, 0x3cdc, 0xae30, 0x508f, 0x6bd6, 0xd5e5, 0x0, 0x1);
        gbc.writeMem(0xdb27, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x3cdc);
        EXPECT(gbc.pc(), 0xdb29);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdb27), 0xcb);
        EXPECT(gbc.readMem(0xdb28), 0xc4);
        // CB C4 00D0
        gbc.setState(0xa91e, 0x76a2, 0xb140, 0xf778, 0x9099, 0xc8fa, 0x1, 0x0);
        gbc.writeMem(0xa91e, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x76a2);
        EXPECT(gbc.pc(), 0xa920);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa91e), 0xcb);
        EXPECT(gbc.readMem(0xa91f), 0xc4);
        // CB C4 00D1
        gbc.setState(0x30fc, 0x4295, 0xfac0, 0xd59c, 0x296, 0xf6e1, 0x0, 0x0);
        gbc.writeMem(0x30fc, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x4295);
        EXPECT(gbc.pc(), 0x30fe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C4 00D2
        gbc.setState(0x4dce, 0x3c4b, 0xe50, 0x92dd, 0xfb75, 0xb503, 0x1, 0x1);
        gbc.writeMem(0x4dce, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x3c4b);
        EXPECT(gbc.pc(), 0x4dd0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C4 00D4
        gbc.setState(0x77b7, 0xb0d1, 0x8bb0, 0xc504, 0x91e0, 0x2863, 0x1, 0x0);
        gbc.writeMem(0x77b7, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0xb0d1);
        EXPECT(gbc.pc(), 0x77b9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C4 00D5
        gbc.setState(0xc947, 0x20ba, 0xc850, 0xe6ac, 0x517b, 0x1e3a, 0x0, 0x0);
        gbc.writeMem(0xc947, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x20ba);
        EXPECT(gbc.pc(), 0xc949);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc947), 0xcb);
        EXPECT(gbc.readMem(0xc948), 0xc4);
        // CB C4 00D6
        gbc.setState(0x2e88, 0x567, 0x3760, 0x5b94, 0x592f, 0x6ed8, 0x0, 0x1);
        gbc.writeMem(0x2e88, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x567);
        EXPECT(gbc.pc(), 0x2e8a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C4 00D7
        gbc.setState(0xe6b2, 0x1951, 0x78f0, 0xaaed, 0xb773, 0xe4d9, 0x0, 0x1);
        gbc.writeMem(0xe6b2, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x1951);
        EXPECT(gbc.pc(), 0xe6b4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe6b2), 0xcb);
        EXPECT(gbc.readMem(0xe6b3), 0xc4);
        // CB C4 00D8
        gbc.setState(0x4717, 0x5548, 0xd9f0, 0x182d, 0x8138, 0xaaa6, 0x0, 0x0);
        gbc.writeMem(0x4717, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x5548);
        EXPECT(gbc.pc(), 0x4719);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C4 00D9
        gbc.setState(0x4899, 0xdf04, 0xa6d0, 0xfc4b, 0x47fa, 0x84b1, 0x0, 0x0);
        gbc.writeMem(0x4899, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0xdf04);
        EXPECT(gbc.pc(), 0x489b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C4 00DA
        gbc.setState(0x205b, 0x4c91, 0x3cc0, 0x80a5, 0x3bf8, 0x29de, 0x1, 0x1);
        gbc.writeMem(0x205b, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x4c91);
        EXPECT(gbc.pc(), 0x205d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C4 00DB
        gbc.setState(0x96e9, 0xe4e2, 0xa690, 0x9cb7, 0x8eb4, 0xe41a, 0x0, 0x1);
        gbc.writeMem(0x96e9, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0xe4e2);
        EXPECT(gbc.pc(), 0x96eb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x96e9), 0xcb);
        EXPECT(gbc.readMem(0x96ea), 0xc4);
        // CB C4 00DC
        gbc.setState(0xc5d5, 0x3b5f, 0x3010, 0x71c9, 0xec4a, 0x25a9, 0x1, 0x0);
        gbc.writeMem(0xc5d5, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x3b5f);
        EXPECT(gbc.pc(), 0xc5d7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc5d5), 0xcb);
        EXPECT(gbc.readMem(0xc5d6), 0xc4);
        // CB C4 00DD
        gbc.setState(0xd6bb, 0xeeea, 0xdc40, 0xe7db, 0x2290, 0xf364, 0x1, 0x1);
        gbc.writeMem(0xd6bb, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0xeeea);
        EXPECT(gbc.pc(), 0xd6bd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd6bb), 0xcb);
        EXPECT(gbc.readMem(0xd6bc), 0xc4);
        // CB C4 00DE
        gbc.setState(0xc25e, 0xb3bd, 0xf2f0, 0x2a9a, 0x32aa, 0x1ab4, 0x1, 0x1);
        gbc.writeMem(0xc25e, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xb3bd);
        EXPECT(gbc.pc(), 0xc260);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc25e), 0xcb);
        EXPECT(gbc.readMem(0xc25f), 0xc4);
        // CB C4 00DF
        gbc.setState(0x5fd6, 0xf950, 0x56b0, 0xdad3, 0x4904, 0x5593, 0x0, 0x1);
        gbc.writeMem(0x5fd6, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0xf950);
        EXPECT(gbc.pc(), 0x5fd8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C4 00E0
        gbc.setState(0xea29, 0x7440, 0x950, 0xa6eb, 0xfe6d, 0xc84c, 0x1, 0x0);
        gbc.writeMem(0xea29, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x7440);
        EXPECT(gbc.pc(), 0xea2b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xea29), 0xcb);
        EXPECT(gbc.readMem(0xea2a), 0xc4);
        // CB C4 00E1
        gbc.setState(0x52aa, 0x91dc, 0xb3d0, 0x5aac, 0xc4ba, 0xf682, 0x1, 0x0);
        gbc.writeMem(0x52aa, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x91dc);
        EXPECT(gbc.pc(), 0x52ac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C4 00E2
        gbc.setState(0x37a8, 0xd5e, 0x3b20, 0x2a87, 0x5687, 0x57ff, 0x1, 0x1);
        gbc.writeMem(0x37a8, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0xd5e);
        EXPECT(gbc.pc(), 0x37aa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C4 00E3
        gbc.setState(0x6c0e, 0xdc49, 0x61e0, 0xd92d, 0x49b8, 0xe656, 0x0, 0x0);
        gbc.writeMem(0x6c0e, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0xdc49);
        EXPECT(gbc.pc(), 0x6c10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C4 00E4
        gbc.setState(0x3711, 0x1cb9, 0x2d0, 0x3b6, 0x3a76, 0x4d02, 0x0, 0x0);
        gbc.writeMem(0x3711, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x1cb9);
        EXPECT(gbc.pc(), 0x3713);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C4 00E5
        gbc.setState(0x1904, 0x5921, 0x190, 0x35bd, 0x6de6, 0xbe43, 0x1, 0x0);
        gbc.writeMem(0x1904, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x5921);
        EXPECT(gbc.pc(), 0x1906);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C4 00E6
        gbc.setState(0xcbe1, 0x1a87, 0x6aa0, 0xb86d, 0x4c3, 0x34ab, 0x1, 0x1);
        gbc.writeMem(0xcbe1, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x1a87);
        EXPECT(gbc.pc(), 0xcbe3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcbe1), 0xcb);
        EXPECT(gbc.readMem(0xcbe2), 0xc4);
        // CB C4 00E7
        gbc.setState(0x3ddc, 0xab1f, 0x9260, 0x4d24, 0xfad6, 0x66b0, 0x0, 0x1);
        gbc.writeMem(0x3ddc, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xab1f);
        EXPECT(gbc.pc(), 0x3dde);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C4 00E8
        gbc.setState(0x1462, 0x4674, 0x69e0, 0x590, 0x4ecb, 0xf362, 0x1, 0x0);
        gbc.writeMem(0x1462, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x4674);
        EXPECT(gbc.pc(), 0x1464);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C4 00E9
        gbc.setState(0x1266, 0x62a4, 0x60b0, 0xbdb3, 0xa41c, 0xa7b3, 0x1, 0x1);
        gbc.writeMem(0x1266, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x62a4);
        EXPECT(gbc.pc(), 0x1268);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C4 00EA
        gbc.setState(0x2690, 0x72dc, 0x62d0, 0xb62c, 0x218f, 0xc95e, 0x0, 0x1);
        gbc.writeMem(0x2690, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x72dc);
        EXPECT(gbc.pc(), 0x2692);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C4 00EB
        gbc.setState(0xeded, 0x55c0, 0x6720, 0x26fa, 0x62d6, 0xc61b, 0x1, 0x1);
        gbc.writeMem(0xeded, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x55c0);
        EXPECT(gbc.pc(), 0xedef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeded), 0xcb);
        EXPECT(gbc.readMem(0xedee), 0xc4);
        // CB C4 00EC
        gbc.setState(0xc250, 0x46e0, 0x2ed0, 0xa98, 0x102b, 0xacf9, 0x1, 0x1);
        gbc.writeMem(0xc250, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x46e0);
        EXPECT(gbc.pc(), 0xc252);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc250), 0xcb);
        EXPECT(gbc.readMem(0xc251), 0xc4);
        // CB C4 00ED
        gbc.setState(0x1aac, 0xe3bc, 0x6740, 0xa819, 0x2713, 0xa325, 0x0, 0x1);
        gbc.writeMem(0x1aac, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0xe3bc);
        EXPECT(gbc.pc(), 0x1aae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C4 00EE
        gbc.setState(0x780b, 0x13e6, 0x2d0, 0xdc85, 0x5b28, 0x17c2, 0x0, 0x0);
        gbc.writeMem(0x780b, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x13e6);
        EXPECT(gbc.pc(), 0x780d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C4 00EF
        gbc.setState(0xdb05, 0xfcb4, 0x2050, 0x755c, 0x91cf, 0x7948, 0x1, 0x1);
        gbc.writeMem(0xdb05, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0xfcb4);
        EXPECT(gbc.pc(), 0xdb07);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdb05), 0xcb);
        EXPECT(gbc.readMem(0xdb06), 0xc4);
        // CB C4 00F0
        gbc.setState(0x6088, 0x282e, 0xe570, 0xdab1, 0xa989, 0x2788, 0x1, 0x0);
        gbc.writeMem(0x6088, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x282e);
        EXPECT(gbc.pc(), 0x608a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C4 00F1
        gbc.setState(0x8dc1, 0xbf73, 0x59d0, 0x2811, 0xd44d, 0xe428, 0x1, 0x1);
        gbc.writeMem(0x8dc1, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xbf73);
        EXPECT(gbc.pc(), 0x8dc3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8dc1), 0xcb);
        EXPECT(gbc.readMem(0x8dc2), 0xc4);
        // CB C4 00F2
        gbc.setState(0xd128, 0x6b0d, 0x6490, 0x848, 0xa4a3, 0xe513, 0x1, 0x0);
        gbc.writeMem(0xd128, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x6b0d);
        EXPECT(gbc.pc(), 0xd12a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd128), 0xcb);
        EXPECT(gbc.readMem(0xd129), 0xc4);
        // CB C4 00F3
        gbc.setState(0x1e72, 0x4c84, 0x9cd0, 0x281a, 0x132c, 0xe3bf, 0x1, 0x1);
        gbc.writeMem(0x1e72, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x4c84);
        EXPECT(gbc.pc(), 0x1e74);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C4 00F4
        gbc.setState(0x395e, 0x66a2, 0x1b40, 0x6426, 0x6c66, 0x2c5c, 0x1, 0x1);
        gbc.writeMem(0x395e, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x66a2);
        EXPECT(gbc.pc(), 0x3960);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C4 00F5
        gbc.setState(0x3c2f, 0xbb7f, 0x65f0, 0xbe86, 0xf723, 0x26, 0x1, 0x1);
        gbc.writeMem(0x3c2f, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0xbb7f);
        EXPECT(gbc.pc(), 0x3c31);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C4 00F6
        gbc.setState(0x7165, 0xa12d, 0x90d0, 0xf917, 0x8eab, 0xe261, 0x1, 0x1);
        gbc.writeMem(0x7165, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0xa12d);
        EXPECT(gbc.pc(), 0x7167);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C4 00F7
        gbc.setState(0xa8c5, 0x6978, 0xc710, 0xdf5c, 0x9f, 0xa55e, 0x0, 0x0);
        gbc.writeMem(0xa8c5, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x6978);
        EXPECT(gbc.pc(), 0xa8c7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa8c5), 0xcb);
        EXPECT(gbc.readMem(0xa8c6), 0xc4);
        // CB C4 00F8
        gbc.setState(0xb489, 0x2513, 0xea70, 0x2010, 0xcf46, 0xb531, 0x0, 0x1);
        gbc.writeMem(0xb489, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x2513);
        EXPECT(gbc.pc(), 0xb48b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb489), 0xcb);
        EXPECT(gbc.readMem(0xb48a), 0xc4);
        // CB C4 00F9
        gbc.setState(0xe0c0, 0xab9f, 0xf4f0, 0x9705, 0x791d, 0x165c, 0x0, 0x1);
        gbc.writeMem(0xe0c0, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0xab9f);
        EXPECT(gbc.pc(), 0xe0c2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe0c0), 0xcb);
        EXPECT(gbc.readMem(0xe0c1), 0xc4);
        // CB C4 00FA
        gbc.setState(0x7ea9, 0x5ae6, 0x2a20, 0x64bb, 0x46a2, 0x759a, 0x1, 0x1);
        gbc.writeMem(0x7ea9, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x5ae6);
        EXPECT(gbc.pc(), 0x7eab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C4 00FB
        gbc.setState(0x9357, 0xf760, 0x6030, 0x9c13, 0xd7a8, 0x937e, 0x0, 0x0);
        gbc.writeMem(0x9357, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0xf760);
        EXPECT(gbc.pc(), 0x9359);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9357), 0xcb);
        EXPECT(gbc.readMem(0x9358), 0xc4);
        // CB C4 00FC
        gbc.setState(0x158a, 0xb06f, 0xc4e0, 0xa222, 0xe402, 0xf97d, 0x1, 0x0);
        gbc.writeMem(0x158a, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xb06f);
        EXPECT(gbc.pc(), 0x158c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C4 00FD
        gbc.setState(0x294d, 0x74a6, 0x8d90, 0x80c9, 0x847a, 0x37c6, 0x0, 0x0);
        gbc.writeMem(0x294d, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x74a6);
        EXPECT(gbc.pc(), 0x294f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C4 00FF
        gbc.setState(0xcce1, 0x2c83, 0xf820, 0xd398, 0xf1b4, 0x7463, 0x1, 0x0);
        gbc.writeMem(0xcce1, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x2c83);
        EXPECT(gbc.pc(), 0xcce3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcce1), 0xcb);
        EXPECT(gbc.readMem(0xcce2), 0xc4);
        // CB C4 0100
        gbc.setState(0xe19f, 0x4f5a, 0x7390, 0x1c92, 0xcfba, 0xcaf4, 0x1, 0x0);
        gbc.writeMem(0xe19f, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x4f5a);
        EXPECT(gbc.pc(), 0xe1a1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe19f), 0xcb);
        EXPECT(gbc.readMem(0xe1a0), 0xc4);
        // CB C4 0101
        gbc.setState(0x6c04, 0x35ce, 0x40d0, 0x63c1, 0x6daa, 0x3275, 0x0, 0x1);
        gbc.writeMem(0x6c04, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x35ce);
        EXPECT(gbc.pc(), 0x6c06);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C4 0102
        gbc.setState(0xe699, 0x535c, 0x6300, 0x74c2, 0x4b97, 0x107f, 0x1, 0x1);
        gbc.writeMem(0xe699, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x535c);
        EXPECT(gbc.pc(), 0xe69b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe699), 0xcb);
        EXPECT(gbc.readMem(0xe69a), 0xc4);
        // CB C4 0103
        gbc.setState(0xa64c, 0x159f, 0xc450, 0xe2eb, 0x7d67, 0x1b7a, 0x0, 0x1);
        gbc.writeMem(0xa64c, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x159f);
        EXPECT(gbc.pc(), 0xa64e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa64c), 0xcb);
        EXPECT(gbc.readMem(0xa64d), 0xc4);
        // CB C4 0104
        gbc.setState(0x15b7, 0x82d1, 0xb5b0, 0xfe56, 0x1a37, 0x36b7, 0x1, 0x0);
        gbc.writeMem(0x15b7, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x82d1);
        EXPECT(gbc.pc(), 0x15b9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C4 0105
        gbc.setState(0xcdb, 0xf983, 0x6460, 0xfe61, 0xfee8, 0xf586, 0x0, 0x1);
        gbc.writeMem(0xcdb, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0xf983);
        EXPECT(gbc.pc(), 0xcdd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C4 0106
        gbc.setState(0x205a, 0xb82e, 0x1040, 0xd9df, 0xe505, 0x3296, 0x1, 0x1);
        gbc.writeMem(0x205a, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0xb82e);
        EXPECT(gbc.pc(), 0x205c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C4 0107
        gbc.setState(0x8870, 0xce07, 0xab40, 0x3979, 0xeee9, 0xfb79, 0x1, 0x1);
        gbc.writeMem(0x8870, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xce07);
        EXPECT(gbc.pc(), 0x8872);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8870), 0xcb);
        EXPECT(gbc.readMem(0x8871), 0xc4);
        // CB C4 0108
        gbc.setState(0x84ca, 0xb39, 0x8000, 0x825d, 0x9b1d, 0x6eb8, 0x0, 0x1);
        gbc.writeMem(0x84ca, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0xb39);
        EXPECT(gbc.pc(), 0x84cc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x84ca), 0xcb);
        EXPECT(gbc.readMem(0x84cb), 0xc4);
        // CB C4 0109
        gbc.setState(0x5206, 0xd2ac, 0x6250, 0xac14, 0x8246, 0x2354, 0x0, 0x1);
        gbc.writeMem(0x5206, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0xd2ac);
        EXPECT(gbc.pc(), 0x5208);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C4 010A
        gbc.setState(0x7c65, 0x6ae7, 0xec00, 0x4321, 0xdb29, 0xbdad, 0x0, 0x1);
        gbc.writeMem(0x7c65, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x6ae7);
        EXPECT(gbc.pc(), 0x7c67);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C4 010B
        gbc.setState(0xe530, 0xaf2e, 0x4950, 0x473, 0xde07, 0x3b09, 0x0, 0x1);
        gbc.writeMem(0xe530, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0xaf2e);
        EXPECT(gbc.pc(), 0xe532);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe530), 0xcb);
        EXPECT(gbc.readMem(0xe531), 0xc4);
        // CB C4 010C
        gbc.setState(0xb5c4, 0xe968, 0x7eb0, 0xb8dd, 0x631e, 0xe3b5, 0x0, 0x0);
        gbc.writeMem(0xb5c4, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0xe968);
        EXPECT(gbc.pc(), 0xb5c6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb5c4), 0xcb);
        EXPECT(gbc.readMem(0xb5c5), 0xc4);
        // CB C4 010D
        gbc.setState(0x77a1, 0xa572, 0x5060, 0x4516, 0xc8d8, 0x4b82, 0x0, 0x1);
        gbc.writeMem(0x77a1, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0xa572);
        EXPECT(gbc.pc(), 0x77a3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C4 010E
        gbc.setState(0xa30c, 0x791, 0x9610, 0xf48f, 0x9005, 0x297f, 0x0, 0x1);
        gbc.writeMem(0xa30c, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x791);
        EXPECT(gbc.pc(), 0xa30e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa30c), 0xcb);
        EXPECT(gbc.readMem(0xa30d), 0xc4);
        // CB C4 010F
        gbc.setState(0xbb5f, 0x9371, 0xf940, 0x80b2, 0x5176, 0xd96a, 0x0, 0x0);
        gbc.writeMem(0xbb5f, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x9371);
        EXPECT(gbc.pc(), 0xbb61);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbb5f), 0xcb);
        EXPECT(gbc.readMem(0xbb60), 0xc4);
        // CB C4 0110
        gbc.setState(0xa9bc, 0x14d, 0xc980, 0xe661, 0x3d97, 0xbd3d, 0x1, 0x1);
        gbc.writeMem(0xa9bc, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x14d);
        EXPECT(gbc.pc(), 0xa9be);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa9bc), 0xcb);
        EXPECT(gbc.readMem(0xa9bd), 0xc4);
        // CB C4 0111
        gbc.setState(0x68bc, 0xc390, 0x4650, 0x3940, 0xc0d4, 0xf014, 0x1, 0x0);
        gbc.writeMem(0x68bc, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0xc390);
        EXPECT(gbc.pc(), 0x68be);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C4 0112
        gbc.setState(0x983b, 0xe4f9, 0x76b0, 0xb73b, 0x7a62, 0x7e77, 0x0, 0x0);
        gbc.writeMem(0x983b, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xe4f9);
        EXPECT(gbc.pc(), 0x983d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x983b), 0xcb);
        EXPECT(gbc.readMem(0x983c), 0xc4);
        // CB C4 0113
        gbc.setState(0x46d0, 0x5df8, 0xea70, 0x63ba, 0x8066, 0x2580, 0x1, 0x0);
        gbc.writeMem(0x46d0, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x5df8);
        EXPECT(gbc.pc(), 0x46d2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C4 0114
        gbc.setState(0xa357, 0x11a2, 0xb180, 0x153a, 0xf586, 0xd1a2, 0x0, 0x0);
        gbc.writeMem(0xa357, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x11a2);
        EXPECT(gbc.pc(), 0xa359);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa357), 0xcb);
        EXPECT(gbc.readMem(0xa358), 0xc4);
        // CB C4 0115
        gbc.setState(0xb6ff, 0x8395, 0xa340, 0x590d, 0x271c, 0xed91, 0x0, 0x1);
        gbc.writeMem(0xb6ff, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x8395);
        EXPECT(gbc.pc(), 0xb701);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb6ff), 0xcb);
        EXPECT(gbc.readMem(0xb700), 0xc4);
        // CB C4 0116
        gbc.setState(0xdc69, 0x9c28, 0xda10, 0xe660, 0x336f, 0x2341, 0x0, 0x0);
        gbc.writeMem(0xdc69, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x9c28);
        EXPECT(gbc.pc(), 0xdc6b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdc69), 0xcb);
        EXPECT(gbc.readMem(0xdc6a), 0xc4);
        // CB C4 0117
        gbc.setState(0xb64a, 0x6472, 0x9f40, 0x5dd9, 0xe11b, 0x3a6a, 0x0, 0x1);
        gbc.writeMem(0xb64a, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x6472);
        EXPECT(gbc.pc(), 0xb64c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb64a), 0xcb);
        EXPECT(gbc.readMem(0xb64b), 0xc4);
        // CB C4 0119
        gbc.setState(0x5d1e, 0x9531, 0xcb60, 0x3613, 0x2a25, 0xff9, 0x0, 0x0);
        gbc.writeMem(0x5d1e, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x9531);
        EXPECT(gbc.pc(), 0x5d20);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C4 011A
        gbc.setState(0x930b, 0xb57d, 0x62a0, 0xba07, 0x285b, 0x3ee5, 0x0, 0x0);
        gbc.writeMem(0x930b, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xb57d);
        EXPECT(gbc.pc(), 0x930d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x930b), 0xcb);
        EXPECT(gbc.readMem(0x930c), 0xc4);
        // CB C4 011B
        gbc.setState(0xe6b5, 0x9265, 0x5180, 0x20d5, 0xc633, 0x6bb0, 0x0, 0x1);
        gbc.writeMem(0xe6b5, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x9265);
        EXPECT(gbc.pc(), 0xe6b7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe6b5), 0xcb);
        EXPECT(gbc.readMem(0xe6b6), 0xc4);
        // CB C4 011C
        gbc.setState(0x14cd, 0xceeb, 0x8c70, 0x573c, 0xc5b, 0x99b9, 0x0, 0x1);
        gbc.writeMem(0x14cd, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0xceeb);
        EXPECT(gbc.pc(), 0x14cf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C4 011D
        gbc.setState(0x95c9, 0x1d43, 0xaa80, 0x739c, 0x4b61, 0x497f, 0x1, 0x1);
        gbc.writeMem(0x95c9, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x1d43);
        EXPECT(gbc.pc(), 0x95cb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x95c9), 0xcb);
        EXPECT(gbc.readMem(0x95ca), 0xc4);
        // CB C4 011E
        gbc.setState(0x99ee, 0x4280, 0xc40, 0xb481, 0x6e2e, 0x5de9, 0x0, 0x0);
        gbc.writeMem(0x99ee, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x4280);
        EXPECT(gbc.pc(), 0x99f0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x99ee), 0xcb);
        EXPECT(gbc.readMem(0x99ef), 0xc4);
        // CB C4 011F
        gbc.setState(0xa702, 0x37c5, 0xcb60, 0xc007, 0x2c9d, 0x2235, 0x0, 0x1);
        gbc.writeMem(0xa702, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x37c5);
        EXPECT(gbc.pc(), 0xa704);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa702), 0xcb);
        EXPECT(gbc.readMem(0xa703), 0xc4);
        // CB C4 0120
        gbc.setState(0x8c47, 0x2fc5, 0x2200, 0xfa8d, 0xc55, 0xa25c, 0x0, 0x1);
        gbc.writeMem(0x8c47, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x2fc5);
        EXPECT(gbc.pc(), 0x8c49);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c47), 0xcb);
        EXPECT(gbc.readMem(0x8c48), 0xc4);
        // CB C4 0121
        gbc.setState(0xca83, 0x881d, 0xb60, 0x3da6, 0xd7ee, 0x33ff, 0x1, 0x0);
        gbc.writeMem(0xca83, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x881d);
        EXPECT(gbc.pc(), 0xca85);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xca83), 0xcb);
        EXPECT(gbc.readMem(0xca84), 0xc4);
        // CB C4 0122
        gbc.setState(0xd681, 0x8fa9, 0x4c60, 0xb486, 0x8423, 0x5a3e, 0x1, 0x1);
        gbc.writeMem(0xd681, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x8fa9);
        EXPECT(gbc.pc(), 0xd683);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd681), 0xcb);
        EXPECT(gbc.readMem(0xd682), 0xc4);
        // CB C4 0123
        gbc.setState(0xd153, 0x9475, 0x8a60, 0xbc73, 0x101c, 0xbc1, 0x1, 0x0);
        gbc.writeMem(0xd153, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x9475);
        EXPECT(gbc.pc(), 0xd155);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd153), 0xcb);
        EXPECT(gbc.readMem(0xd154), 0xc4);
        // CB C4 0124
        gbc.setState(0xa2dc, 0x9e55, 0xfbc0, 0xc8a4, 0x6387, 0xa74a, 0x1, 0x1);
        gbc.writeMem(0xa2dc, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x9e55);
        EXPECT(gbc.pc(), 0xa2de);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa2dc), 0xcb);
        EXPECT(gbc.readMem(0xa2dd), 0xc4);
        // CB C4 0125
        gbc.setState(0x9d91, 0x6b3f, 0xe740, 0x8424, 0xe380, 0x343e, 0x1, 0x0);
        gbc.writeMem(0x9d91, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x6b3f);
        EXPECT(gbc.pc(), 0x9d93);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9d91), 0xcb);
        EXPECT(gbc.readMem(0x9d92), 0xc4);
        // CB C4 0126
        gbc.setState(0x2456, 0x5770, 0x9480, 0xf384, 0xb1a9, 0xed11, 0x0, 0x0);
        gbc.writeMem(0x2456, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x5770);
        EXPECT(gbc.pc(), 0x2458);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C4 0127
        gbc.setState(0xed49, 0xac39, 0x2d50, 0x2949, 0x2c1a, 0xde12, 0x0, 0x0);
        gbc.writeMem(0xed49, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0xac39);
        EXPECT(gbc.pc(), 0xed4b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xed49), 0xcb);
        EXPECT(gbc.readMem(0xed4a), 0xc4);
        // CB C4 0128
        gbc.setState(0x5788, 0x3228, 0x99c0, 0x2294, 0x36aa, 0xa7fa, 0x1, 0x0);
        gbc.writeMem(0x5788, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x3228);
        EXPECT(gbc.pc(), 0x578a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C4 0129
        gbc.setState(0xa303, 0x7d18, 0xf470, 0x9449, 0xa3aa, 0x9ae8, 0x0, 0x0);
        gbc.writeMem(0xa303, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x7d18);
        EXPECT(gbc.pc(), 0xa305);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa303), 0xcb);
        EXPECT(gbc.readMem(0xa304), 0xc4);
        // CB C4 012A
        gbc.setState(0x188e, 0x6a5a, 0x8670, 0x8acf, 0xd4e0, 0x4e76, 0x1, 0x0);
        gbc.writeMem(0x188e, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x6a5a);
        EXPECT(gbc.pc(), 0x1890);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C4 012B
        gbc.setState(0xa464, 0x7936, 0x7280, 0x1484, 0xb274, 0x7e77, 0x1, 0x0);
        gbc.writeMem(0xa464, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x7936);
        EXPECT(gbc.pc(), 0xa466);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa464), 0xcb);
        EXPECT(gbc.readMem(0xa465), 0xc4);
        // CB C4 012C
        gbc.setState(0x2dc8, 0x92d7, 0xe010, 0x7f0f, 0x5f29, 0xf8f, 0x1, 0x0);
        gbc.writeMem(0x2dc8, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x92d7);
        EXPECT(gbc.pc(), 0x2dca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C4 012D
        gbc.setState(0xdf1f, 0xb966, 0xee00, 0x5cae, 0x53a1, 0x47c4, 0x0, 0x0);
        gbc.writeMem(0xdf1f, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0xb966);
        EXPECT(gbc.pc(), 0xdf21);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdf1f), 0xcb);
        EXPECT(gbc.readMem(0xdf20), 0xc4);
        // CB C4 012E
        gbc.setState(0x6c51, 0xf602, 0x2d20, 0x505f, 0xdb5c, 0xac9, 0x1, 0x0);
        gbc.writeMem(0x6c51, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0xf602);
        EXPECT(gbc.pc(), 0x6c53);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C4 012F
        gbc.setState(0x3ca3, 0xd41a, 0x7880, 0xbb4c, 0xe866, 0x8476, 0x1, 0x0);
        gbc.writeMem(0x3ca3, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0xd41a);
        EXPECT(gbc.pc(), 0x3ca5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C4 0130
        gbc.setState(0xa0f8, 0x1051, 0xf050, 0xb6f6, 0xb8b2, 0xa870, 0x1, 0x0);
        gbc.writeMem(0xa0f8, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x1051);
        EXPECT(gbc.pc(), 0xa0fa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa0f8), 0xcb);
        EXPECT(gbc.readMem(0xa0f9), 0xc4);
        // CB C4 0131
        gbc.setState(0xed44, 0x64e9, 0x3e0, 0xc3a, 0xf803, 0x1918, 0x0, 0x0);
        gbc.writeMem(0xed44, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x64e9);
        EXPECT(gbc.pc(), 0xed46);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xed44), 0xcb);
        EXPECT(gbc.readMem(0xed45), 0xc4);
        // CB C4 0132
        gbc.setState(0x93e4, 0xec0, 0x8ab0, 0x63e9, 0x3d0d, 0xd959, 0x1, 0x0);
        gbc.writeMem(0x93e4, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0xec0);
        EXPECT(gbc.pc(), 0x93e6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x93e4), 0xcb);
        EXPECT(gbc.readMem(0x93e5), 0xc4);
        // CB C4 0133
        gbc.setState(0x5544, 0xb107, 0x3ab0, 0xad18, 0x2d67, 0xbceb, 0x0, 0x0);
        gbc.writeMem(0x5544, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0xb107);
        EXPECT(gbc.pc(), 0x5546);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C4 0134
        gbc.setState(0x7b72, 0x816a, 0x2ef0, 0x1a70, 0x321a, 0xdd5c, 0x1, 0x0);
        gbc.writeMem(0x7b72, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x816a);
        EXPECT(gbc.pc(), 0x7b74);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C4 0135
        gbc.setState(0xeedb, 0x4878, 0x7300, 0x54de, 0xdc93, 0xb8d3, 0x1, 0x1);
        gbc.writeMem(0xeedb, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x4878);
        EXPECT(gbc.pc(), 0xeedd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeedb), 0xcb);
        EXPECT(gbc.readMem(0xeedc), 0xc4);
        // CB C4 0136
        gbc.setState(0xb4, 0x47d0, 0x5190, 0x2e41, 0xde84, 0x993d, 0x0, 0x1);
        gbc.writeMem(0xb4, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x47d0);
        EXPECT(gbc.pc(), 0xb6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C4 0137
        gbc.setState(0x8ec6, 0x7669, 0xbfc0, 0x7dcb, 0xcbaa, 0x364f, 0x1, 0x0);
        gbc.writeMem(0x8ec6, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x7669);
        EXPECT(gbc.pc(), 0x8ec8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ec6), 0xcb);
        EXPECT(gbc.readMem(0x8ec7), 0xc4);
        // CB C4 0138
        gbc.setState(0xb9a9, 0x4819, 0x1d10, 0xf761, 0xe83b, 0x1cb3, 0x1, 0x1);
        gbc.writeMem(0xb9a9, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x4819);
        EXPECT(gbc.pc(), 0xb9ab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb9a9), 0xcb);
        EXPECT(gbc.readMem(0xb9aa), 0xc4);
        // CB C4 0139
        gbc.setState(0xe57, 0xb2ee, 0x89e0, 0xc57e, 0xb269, 0x78a0, 0x1, 0x1);
        gbc.writeMem(0xe57, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xb2ee);
        EXPECT(gbc.pc(), 0xe59);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C4 013A
        gbc.setState(0x9e0b, 0xc72, 0x4500, 0x4dbf, 0x33c4, 0x9101, 0x1, 0x1);
        gbc.writeMem(0x9e0b, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0xc72);
        EXPECT(gbc.pc(), 0x9e0d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9e0b), 0xcb);
        EXPECT(gbc.readMem(0x9e0c), 0xc4);
        // CB C4 013B
        gbc.setState(0x44a1, 0x81ca, 0x260, 0x5957, 0x1544, 0x47b9, 0x1, 0x1);
        gbc.writeMem(0x44a1, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x81ca);
        EXPECT(gbc.pc(), 0x44a3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C4 013C
        gbc.setState(0x9a1, 0x6ca5, 0x3220, 0x26a7, 0x61f9, 0xebcb, 0x0, 0x0);
        gbc.writeMem(0x9a1, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x6ca5);
        EXPECT(gbc.pc(), 0x9a3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C4 013D
        gbc.setState(0x7ebd, 0xf18a, 0x79b0, 0x4315, 0xe27, 0xa6d2, 0x0, 0x0);
        gbc.writeMem(0x7ebd, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0xf18a);
        EXPECT(gbc.pc(), 0x7ebf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C4 013E
        gbc.setState(0xc082, 0x335e, 0x9340, 0xf42a, 0x8c8a, 0xb6e3, 0x0, 0x0);
        gbc.writeMem(0xc082, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x335e);
        EXPECT(gbc.pc(), 0xc084);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc082), 0xcb);
        EXPECT(gbc.readMem(0xc083), 0xc4);
        // CB C4 013F
        gbc.setState(0xc9a1, 0x73b8, 0x6190, 0xafab, 0x48b8, 0xd9ef, 0x0, 0x1);
        gbc.writeMem(0xc9a1, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x73b8);
        EXPECT(gbc.pc(), 0xc9a3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc9a1), 0xcb);
        EXPECT(gbc.readMem(0xc9a2), 0xc4);
        // CB C4 0140
        gbc.setState(0x3968, 0x7eaa, 0x6670, 0x943c, 0xab2f, 0x415c, 0x1, 0x0);
        gbc.writeMem(0x3968, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x7eaa);
        EXPECT(gbc.pc(), 0x396a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C4 0141
        gbc.setState(0x3a5a, 0x9d43, 0xce0, 0x8f6, 0x268d, 0x8382, 0x0, 0x0);
        gbc.writeMem(0x3a5a, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x9d43);
        EXPECT(gbc.pc(), 0x3a5c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C4 0142
        gbc.setState(0x7696, 0x173e, 0xfb60, 0xfcbe, 0xe33d, 0xb873, 0x0, 0x0);
        gbc.writeMem(0x7696, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x173e);
        EXPECT(gbc.pc(), 0x7698);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C4 0144
        gbc.setState(0xcec9, 0x6d56, 0xb5c0, 0xb78e, 0x33c7, 0x3a72, 0x0, 0x1);
        gbc.writeMem(0xcec9, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x6d56);
        EXPECT(gbc.pc(), 0xcecb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcec9), 0xcb);
        EXPECT(gbc.readMem(0xceca), 0xc4);
        // CB C4 0145
        gbc.setState(0x299c, 0xc657, 0x5140, 0xb9c0, 0xd0e3, 0x91ba, 0x1, 0x0);
        gbc.writeMem(0x299c, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0xc657);
        EXPECT(gbc.pc(), 0x299e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C4 0146
        gbc.setState(0x53cb, 0x3500, 0xacc0, 0x7d0c, 0x655e, 0x1ea, 0x1, 0x1);
        gbc.writeMem(0x53cb, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x3500);
        EXPECT(gbc.pc(), 0x53cd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C4 0147
        gbc.setState(0x96df, 0xc7fc, 0xbbd0, 0x3389, 0x59e1, 0x6fe2, 0x0, 0x0);
        gbc.writeMem(0x96df, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0xc7fc);
        EXPECT(gbc.pc(), 0x96e1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x96df), 0xcb);
        EXPECT(gbc.readMem(0x96e0), 0xc4);
        // CB C4 0148
        gbc.setState(0xb128, 0x7640, 0x8a00, 0x9449, 0xccdf, 0xd96f, 0x1, 0x1);
        gbc.writeMem(0xb128, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x7640);
        EXPECT(gbc.pc(), 0xb12a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb128), 0xcb);
        EXPECT(gbc.readMem(0xb129), 0xc4);
        // CB C4 0149
        gbc.setState(0x822a, 0xc749, 0x5e20, 0x7d7a, 0x3411, 0x8bf1, 0x1, 0x0);
        gbc.writeMem(0x822a, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0xc749);
        EXPECT(gbc.pc(), 0x822c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x822a), 0xcb);
        EXPECT(gbc.readMem(0x822b), 0xc4);
        // CB C4 014A
        gbc.setState(0x5d8d, 0x55fd, 0xad00, 0x2f52, 0x4139, 0x9d52, 0x1, 0x0);
        gbc.writeMem(0x5d8d, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x55fd);
        EXPECT(gbc.pc(), 0x5d8f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C4 014B
        gbc.setState(0x3c3c, 0x20b0, 0xf300, 0xdd7, 0xf296, 0xc7e8, 0x1, 0x1);
        gbc.writeMem(0x3c3c, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x20b0);
        EXPECT(gbc.pc(), 0x3c3e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C4 014C
        gbc.setState(0x18c, 0xecb1, 0x7f30, 0xdfce, 0x12ed, 0x8695, 0x0, 0x0);
        gbc.writeMem(0x18c, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0xecb1);
        EXPECT(gbc.pc(), 0x18e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C4 014D
        gbc.setState(0x6c3a, 0x1c04, 0xc4b0, 0x9e19, 0x578b, 0x4579, 0x1, 0x1);
        gbc.writeMem(0x6c3a, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x1c04);
        EXPECT(gbc.pc(), 0x6c3c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C4 014E
        gbc.setState(0x85ae, 0xc0c0, 0xc5d0, 0x5be1, 0x6bba, 0xa2d9, 0x0, 0x0);
        gbc.writeMem(0x85ae, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0xc0c0);
        EXPECT(gbc.pc(), 0x85b0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x85ae), 0xcb);
        EXPECT(gbc.readMem(0x85af), 0xc4);
        // CB C4 014F
        gbc.setState(0x4abf, 0xc840, 0xe870, 0x9740, 0xc199, 0x1bc9, 0x0, 0x0);
        gbc.writeMem(0x4abf, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0xc840);
        EXPECT(gbc.pc(), 0x4ac1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C4 0150
        gbc.setState(0xb11a, 0x8c96, 0x4e30, 0x5487, 0xcf21, 0x68c0, 0x0, 0x0);
        gbc.writeMem(0xb11a, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x8c96);
        EXPECT(gbc.pc(), 0xb11c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb11a), 0xcb);
        EXPECT(gbc.readMem(0xb11b), 0xc4);
        // CB C4 0151
        gbc.setState(0x5888, 0x259c, 0xa3a0, 0x2453, 0x972a, 0xf3c9, 0x1, 0x0);
        gbc.writeMem(0x5888, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x259c);
        EXPECT(gbc.pc(), 0x588a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C4 0152
        gbc.setState(0x31e7, 0x96fe, 0xf6c0, 0xb868, 0xc873, 0xdd5d, 0x0, 0x1);
        gbc.writeMem(0x31e7, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x96fe);
        EXPECT(gbc.pc(), 0x31e9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C4 0153
        gbc.setState(0xce73, 0x6083, 0xd600, 0x715a, 0x35d6, 0xc595, 0x0, 0x1);
        gbc.writeMem(0xce73, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x6083);
        EXPECT(gbc.pc(), 0xce75);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xce73), 0xcb);
        EXPECT(gbc.readMem(0xce74), 0xc4);
        // CB C4 0154
        gbc.setState(0x79d6, 0xbe13, 0x6810, 0xa6a8, 0xfc45, 0xe57d, 0x0, 0x0);
        gbc.writeMem(0x79d6, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xbe13);
        EXPECT(gbc.pc(), 0x79d8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C4 0155
        gbc.setState(0xb9c0, 0xcd9d, 0xe060, 0x53a3, 0x14bc, 0x8e18, 0x0, 0x0);
        gbc.writeMem(0xb9c0, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xcd9d);
        EXPECT(gbc.pc(), 0xb9c2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb9c0), 0xcb);
        EXPECT(gbc.readMem(0xb9c1), 0xc4);
        // CB C4 0156
        gbc.setState(0x581c, 0x66e1, 0xde90, 0xa7f0, 0xc2f0, 0x3886, 0x1, 0x0);
        gbc.writeMem(0x581c, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x66e1);
        EXPECT(gbc.pc(), 0x581e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C4 0157
        gbc.setState(0xeb1c, 0x4da5, 0x1db0, 0xaa72, 0xe891, 0x1225, 0x1, 0x0);
        gbc.writeMem(0xeb1c, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x4da5);
        EXPECT(gbc.pc(), 0xeb1e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeb1c), 0xcb);
        EXPECT(gbc.readMem(0xeb1d), 0xc4);
        // CB C4 0158
        gbc.setState(0xf00, 0x5c14, 0xb750, 0xc1ff, 0xbdd1, 0xfa0b, 0x0, 0x0);
        gbc.writeMem(0xf00, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x5c14);
        EXPECT(gbc.pc(), 0xf02);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C4 0159
        gbc.setState(0x15da, 0xa52, 0xdde0, 0xb003, 0x7741, 0x9c99, 0x1, 0x0);
        gbc.writeMem(0x15da, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0xa52);
        EXPECT(gbc.pc(), 0x15dc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C4 015A
        gbc.setState(0xa948, 0x507a, 0xf5e0, 0xd145, 0xcd3f, 0x3c92, 0x1, 0x0);
        gbc.writeMem(0xa948, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x507a);
        EXPECT(gbc.pc(), 0xa94a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa948), 0xcb);
        EXPECT(gbc.readMem(0xa949), 0xc4);
        // CB C4 015B
        gbc.setState(0x1f82, 0xea29, 0x6d40, 0xb50c, 0x7f17, 0xb782, 0x0, 0x1);
        gbc.writeMem(0x1f82, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0xea29);
        EXPECT(gbc.pc(), 0x1f84);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C4 015C
        gbc.setState(0xe978, 0x90ae, 0x5f0, 0x4431, 0x2367, 0x354e, 0x1, 0x0);
        gbc.writeMem(0xe978, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x90ae);
        EXPECT(gbc.pc(), 0xe97a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe978), 0xcb);
        EXPECT(gbc.readMem(0xe979), 0xc4);
        // CB C4 015D
        gbc.setState(0xc6, 0xb7d2, 0x5d20, 0xc97, 0x708f, 0x97e4, 0x0, 0x1);
        gbc.writeMem(0xc6, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0xb7d2);
        EXPECT(gbc.pc(), 0xc8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C4 015E
        gbc.setState(0xe575, 0x3801, 0x30, 0xee41, 0xed4, 0x5baa, 0x1, 0x0);
        gbc.writeMem(0xe575, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x3801);
        EXPECT(gbc.pc(), 0xe577);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe575), 0xcb);
        EXPECT(gbc.readMem(0xe576), 0xc4);
        // CB C4 015F
        gbc.setState(0xbce7, 0x30e, 0xcd10, 0x35a3, 0x5150, 0xea87, 0x0, 0x0);
        gbc.writeMem(0xbce7, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x30e);
        EXPECT(gbc.pc(), 0xbce9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbce7), 0xcb);
        EXPECT(gbc.readMem(0xbce8), 0xc4);
        // CB C4 0161
        gbc.setState(0x6460, 0x770f, 0x1f50, 0x7423, 0x93a7, 0x7677, 0x0, 0x1);
        gbc.writeMem(0x6460, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x770f);
        EXPECT(gbc.pc(), 0x6462);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C4 0162
        gbc.setState(0x6f05, 0x6c28, 0x83f0, 0x8a2c, 0x9d61, 0xff61, 0x0, 0x0);
        gbc.writeMem(0x6f05, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x6c28);
        EXPECT(gbc.pc(), 0x6f07);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C4 0163
        gbc.setState(0xda0e, 0xc714, 0x1c50, 0x6535, 0x82ea, 0x8a31, 0x1, 0x1);
        gbc.writeMem(0xda0e, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xc714);
        EXPECT(gbc.pc(), 0xda10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xda0e), 0xcb);
        EXPECT(gbc.readMem(0xda0f), 0xc4);
        // CB C4 0164
        gbc.setState(0x51d8, 0xa274, 0x12b0, 0x6654, 0x3f93, 0x2b39, 0x1, 0x0);
        gbc.writeMem(0x51d8, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0xa274);
        EXPECT(gbc.pc(), 0x51da);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C4 0165
        gbc.setState(0xa7c6, 0x9792, 0x55b0, 0xccf8, 0x9e93, 0xa8e6, 0x0, 0x1);
        gbc.writeMem(0xa7c6, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x9792);
        EXPECT(gbc.pc(), 0xa7c8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa7c6), 0xcb);
        EXPECT(gbc.readMem(0xa7c7), 0xc4);
        // CB C4 0166
        gbc.setState(0xa85d, 0xf74, 0xe760, 0xa796, 0x95a3, 0x52be, 0x0, 0x0);
        gbc.writeMem(0xa85d, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0xf74);
        EXPECT(gbc.pc(), 0xa85f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa85d), 0xcb);
        EXPECT(gbc.readMem(0xa85e), 0xc4);
        // CB C4 0167
        gbc.setState(0x4791, 0x8f4e, 0x44e0, 0xcd54, 0x550a, 0x5f34, 0x1, 0x0);
        gbc.writeMem(0x4791, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x8f4e);
        EXPECT(gbc.pc(), 0x4793);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C4 0169
        gbc.setState(0x5a7f, 0xd3bc, 0xff60, 0x9a51, 0xfee7, 0x24bf, 0x0, 0x0);
        gbc.writeMem(0x5a7f, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0xd3bc);
        EXPECT(gbc.pc(), 0x5a81);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C4 016A
        gbc.setState(0xd6f3, 0xa924, 0x2500, 0x2d37, 0xc495, 0x1999, 0x0, 0x0);
        gbc.writeMem(0xd6f3, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0xa924);
        EXPECT(gbc.pc(), 0xd6f5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd6f3), 0xcb);
        EXPECT(gbc.readMem(0xd6f4), 0xc4);
        // CB C4 016B
        gbc.setState(0x3d5, 0xfcd8, 0x3500, 0x6f0c, 0xc561, 0x68e2, 0x1, 0x1);
        gbc.writeMem(0x3d5, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0xfcd8);
        EXPECT(gbc.pc(), 0x3d7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C4 016C
        gbc.setState(0xad13, 0xc36f, 0xe270, 0x461f, 0xdf16, 0x71a3, 0x1, 0x1);
        gbc.writeMem(0xad13, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0xc36f);
        EXPECT(gbc.pc(), 0xad15);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xad13), 0xcb);
        EXPECT(gbc.readMem(0xad14), 0xc4);
        // CB C4 016D
        gbc.setState(0xd9da, 0x11ec, 0x4c00, 0x8b4d, 0xd518, 0x2190, 0x0, 0x1);
        gbc.writeMem(0xd9da, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x11ec);
        EXPECT(gbc.pc(), 0xd9dc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd9da), 0xcb);
        EXPECT(gbc.readMem(0xd9db), 0xc4);
        // CB C4 016E
        gbc.setState(0x55f4, 0x6a7a, 0xfc70, 0xe69a, 0x618e, 0x2eed, 0x0, 0x1);
        gbc.writeMem(0x55f4, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x6a7a);
        EXPECT(gbc.pc(), 0x55f6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C4 016F
        gbc.setState(0x5399, 0xc78b, 0x9e70, 0x35c3, 0xe06c, 0x9d10, 0x0, 0x0);
        gbc.writeMem(0x5399, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xc78b);
        EXPECT(gbc.pc(), 0x539b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C4 0171
        gbc.setState(0x65fa, 0xa6f7, 0x1070, 0x60ce, 0xf230, 0xd02, 0x0, 0x0);
        gbc.writeMem(0x65fa, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xa6f7);
        EXPECT(gbc.pc(), 0x65fc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C4 0172
        gbc.setState(0xeba0, 0x87b1, 0x6930, 0x2fdc, 0xa697, 0xde0, 0x1, 0x0);
        gbc.writeMem(0xeba0, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x87b1);
        EXPECT(gbc.pc(), 0xeba2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeba0), 0xcb);
        EXPECT(gbc.readMem(0xeba1), 0xc4);
        // CB C4 0173
        gbc.setState(0x52f, 0xf42c, 0xe990, 0xe9f8, 0x85cf, 0x962a, 0x0, 0x1);
        gbc.writeMem(0x52f, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xf42c);
        EXPECT(gbc.pc(), 0x531);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C4 0174
        gbc.setState(0x8891, 0x109e, 0x230, 0xa4a6, 0xf60f, 0x8365, 0x1, 0x0);
        gbc.writeMem(0x8891, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x109e);
        EXPECT(gbc.pc(), 0x8893);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8891), 0xcb);
        EXPECT(gbc.readMem(0x8892), 0xc4);
        // CB C4 0175
        gbc.setState(0x24c2, 0x17df, 0x150, 0x71e5, 0x7bb5, 0x37cb, 0x0, 0x1);
        gbc.writeMem(0x24c2, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x17df);
        EXPECT(gbc.pc(), 0x24c4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C4 0176
        gbc.setState(0x80a3, 0x644c, 0x3b90, 0xedc8, 0xa604, 0x6c4f, 0x1, 0x1);
        gbc.writeMem(0x80a3, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x644c);
        EXPECT(gbc.pc(), 0x80a5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x80a3), 0xcb);
        EXPECT(gbc.readMem(0x80a4), 0xc4);
        // CB C4 0177
        gbc.setState(0x7800, 0xe636, 0x5ac0, 0xd0ab, 0x3975, 0xcfeb, 0x1, 0x1);
        gbc.writeMem(0x7800, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0xe636);
        EXPECT(gbc.pc(), 0x7802);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C4 0178
        gbc.setState(0x71ce, 0x9bbb, 0x44e0, 0x6aff, 0xa7ca, 0x19d5, 0x0, 0x0);
        gbc.writeMem(0x71ce, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x9bbb);
        EXPECT(gbc.pc(), 0x71d0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C4 0179
        gbc.setState(0x254, 0x524a, 0x1d0, 0x6a67, 0xd42e, 0x9828, 0x1, 0x0);
        gbc.writeMem(0x254, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x524a);
        EXPECT(gbc.pc(), 0x256);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C4 017A
        gbc.setState(0x53af, 0xfb70, 0x8450, 0x91a7, 0xf38b, 0x4b22, 0x0, 0x1);
        gbc.writeMem(0x53af, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0xfb70);
        EXPECT(gbc.pc(), 0x53b1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C4 017B
        gbc.setState(0x2662, 0xf952, 0x41b0, 0xf1b2, 0x3af3, 0x932a, 0x0, 0x0);
        gbc.writeMem(0x2662, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xf952);
        EXPECT(gbc.pc(), 0x2664);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C4 017C
        gbc.setState(0xbb38, 0x2aff, 0xb510, 0xb83a, 0xe2b0, 0x3030, 0x1, 0x1);
        gbc.writeMem(0xbb38, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x2aff);
        EXPECT(gbc.pc(), 0xbb3a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbb38), 0xcb);
        EXPECT(gbc.readMem(0xbb39), 0xc4);
        // CB C4 017D
        gbc.setState(0x6184, 0x12a5, 0xfe40, 0x9912, 0xb0af, 0x3b44, 0x0, 0x0);
        gbc.writeMem(0x6184, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x12a5);
        EXPECT(gbc.pc(), 0x6186);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C4 017E
        gbc.setState(0x77f3, 0x4011, 0x10b0, 0xd3e0, 0xc13d, 0x807c, 0x1, 0x0);
        gbc.writeMem(0x77f3, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x4011);
        EXPECT(gbc.pc(), 0x77f5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C4 017F
        gbc.setState(0x244a, 0x30d7, 0xc6a0, 0x4539, 0x872d, 0x9bc1, 0x0, 0x1);
        gbc.writeMem(0x244a, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x30d7);
        EXPECT(gbc.pc(), 0x244c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C4 0180
        gbc.setState(0x344a, 0x6b2e, 0x1640, 0x8a49, 0x8493, 0xd20d, 0x1, 0x0);
        gbc.writeMem(0x344a, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x6b2e);
        EXPECT(gbc.pc(), 0x344c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C4 0182
        gbc.setState(0x69b4, 0x720, 0x2570, 0x102f, 0x1fdd, 0x2cbb, 0x1, 0x1);
        gbc.writeMem(0x69b4, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x720);
        EXPECT(gbc.pc(), 0x69b6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C4 0183
        gbc.setState(0xd0ad, 0x5a2, 0x6390, 0xa6d9, 0xeeb1, 0xa8ae, 0x0, 0x0);
        gbc.writeMem(0xd0ad, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x5a2);
        EXPECT(gbc.pc(), 0xd0af);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd0ad), 0xcb);
        EXPECT(gbc.readMem(0xd0ae), 0xc4);
        // CB C4 0184
        gbc.setState(0x5790, 0x4e13, 0xb020, 0x5aff, 0x255a, 0xf88f, 0x1, 0x1);
        gbc.writeMem(0x5790, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x4e13);
        EXPECT(gbc.pc(), 0x5792);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C4 0185
        gbc.setState(0xd6d7, 0x56f1, 0x1c70, 0x7875, 0xe55c, 0xe950, 0x1, 0x1);
        gbc.writeMem(0xd6d7, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x56f1);
        EXPECT(gbc.pc(), 0xd6d9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd6d7), 0xcb);
        EXPECT(gbc.readMem(0xd6d8), 0xc4);
        // CB C4 0186
        gbc.setState(0x6f1f, 0xb783, 0x9c00, 0x6ffb, 0xace7, 0x4d5f, 0x0, 0x1);
        gbc.writeMem(0x6f1f, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0xb783);
        EXPECT(gbc.pc(), 0x6f21);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C4 0187
        gbc.setState(0x8fcc, 0xa8d9, 0x2d50, 0x3b78, 0xcae0, 0xc674, 0x0, 0x0);
        gbc.writeMem(0x8fcc, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xa8d9);
        EXPECT(gbc.pc(), 0x8fce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8fcc), 0xcb);
        EXPECT(gbc.readMem(0x8fcd), 0xc4);
        // CB C4 0188
        gbc.setState(0x7ca6, 0xfe23, 0xf5e0, 0x7ffe, 0xbbd1, 0xfaab, 0x0, 0x1);
        gbc.writeMem(0x7ca6, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xfe23);
        EXPECT(gbc.pc(), 0x7ca8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C4 0189
        gbc.setState(0xd579, 0x83d3, 0x1440, 0x6420, 0x1cd3, 0x35a, 0x0, 0x1);
        gbc.writeMem(0xd579, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x83d3);
        EXPECT(gbc.pc(), 0xd57b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd579), 0xcb);
        EXPECT(gbc.readMem(0xd57a), 0xc4);
        // CB C4 018A
        gbc.setState(0x96, 0xbd6f, 0x5870, 0x6015, 0x55cd, 0xd77d, 0x1, 0x1);
        gbc.writeMem(0x96, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xbd6f);
        EXPECT(gbc.pc(), 0x98);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C4 018B
        gbc.setState(0x26d9, 0xadb8, 0x1720, 0xaf9e, 0xfb94, 0xc6f, 0x1, 0x1);
        gbc.writeMem(0x26d9, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0xadb8);
        EXPECT(gbc.pc(), 0x26db);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C4 018D
        gbc.setState(0x5b8d, 0x7adf, 0x4050, 0xdb04, 0x6c1e, 0x9015, 0x0, 0x1);
        gbc.writeMem(0x5b8d, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x7adf);
        EXPECT(gbc.pc(), 0x5b8f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C4 018E
        gbc.setState(0x5f8, 0x961f, 0x1120, 0x5db4, 0xe22e, 0x5277, 0x0, 0x0);
        gbc.writeMem(0x5f8, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x961f);
        EXPECT(gbc.pc(), 0x5fa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C4 018F
        gbc.setState(0xe570, 0x8a2c, 0x73b0, 0xa640, 0x7486, 0xe89f, 0x0, 0x1);
        gbc.writeMem(0xe570, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x8a2c);
        EXPECT(gbc.pc(), 0xe572);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe570), 0xcb);
        EXPECT(gbc.readMem(0xe571), 0xc4);
        // CB C4 0190
        gbc.setState(0x7d5d, 0x5dfd, 0xceb0, 0xe50e, 0x55e9, 0xb8f6, 0x0, 0x0);
        gbc.writeMem(0x7d5d, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x5dfd);
        EXPECT(gbc.pc(), 0x7d5f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C4 0192
        gbc.setState(0xa054, 0x22d, 0x3350, 0xd6f7, 0x7f3a, 0xdb31, 0x1, 0x1);
        gbc.writeMem(0xa054, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x22d);
        EXPECT(gbc.pc(), 0xa056);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa054), 0xcb);
        EXPECT(gbc.readMem(0xa055), 0xc4);
        // CB C4 0193
        gbc.setState(0xbdb6, 0x8cb9, 0x74d0, 0x5c29, 0x10d1, 0xcc0, 0x0, 0x1);
        gbc.writeMem(0xbdb6, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x8cb9);
        EXPECT(gbc.pc(), 0xbdb8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbdb6), 0xcb);
        EXPECT(gbc.readMem(0xbdb7), 0xc4);
        // CB C4 0194
        gbc.setState(0xa4b7, 0x4245, 0x11d0, 0xa9d2, 0x8e73, 0xaf03, 0x0, 0x1);
        gbc.writeMem(0xa4b7, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x4245);
        EXPECT(gbc.pc(), 0xa4b9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa4b7), 0xcb);
        EXPECT(gbc.readMem(0xa4b8), 0xc4);
        // CB C4 0197
        gbc.setState(0xad3f, 0x9d33, 0x1910, 0x5486, 0xe338, 0x4c97, 0x0, 0x0);
        gbc.writeMem(0xad3f, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x9d33);
        EXPECT(gbc.pc(), 0xad41);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xad3f), 0xcb);
        EXPECT(gbc.readMem(0xad40), 0xc4);
        // CB C4 0198
        gbc.setState(0x7f36, 0x3d31, 0x8eb0, 0x3d39, 0xb8b6, 0xa099, 0x1, 0x1);
        gbc.writeMem(0x7f36, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x3d31);
        EXPECT(gbc.pc(), 0x7f38);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C4 0199
        gbc.setState(0x9aef, 0xff76, 0xc250, 0x5331, 0x5963, 0xc2e7, 0x1, 0x1);
        gbc.writeMem(0x9aef, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xff76);
        EXPECT(gbc.pc(), 0x9af1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9aef), 0xcb);
        EXPECT(gbc.readMem(0x9af0), 0xc4);
        // CB C4 019A
        gbc.setState(0xfd0, 0x8f1f, 0x2520, 0x1f85, 0x1622, 0x1531, 0x1, 0x1);
        gbc.writeMem(0xfd0, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x8f1f);
        EXPECT(gbc.pc(), 0xfd2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C4 019B
        gbc.setState(0x7026, 0x730, 0xa260, 0x2ca5, 0xedc3, 0xee69, 0x1, 0x1);
        gbc.writeMem(0x7026, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x730);
        EXPECT(gbc.pc(), 0x7028);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C4 019C
        gbc.setState(0xd479, 0xea49, 0x9110, 0xd928, 0x9577, 0xe6a, 0x1, 0x1);
        gbc.writeMem(0xd479, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xea49);
        EXPECT(gbc.pc(), 0xd47b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd479), 0xcb);
        EXPECT(gbc.readMem(0xd47a), 0xc4);
        // CB C4 019D
        gbc.setState(0xb860, 0x56fc, 0x2770, 0xdea9, 0xe1ea, 0x4a1e, 0x1, 0x0);
        gbc.writeMem(0xb860, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x56fc);
        EXPECT(gbc.pc(), 0xb862);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb860), 0xcb);
        EXPECT(gbc.readMem(0xb861), 0xc4);
        // CB C4 019E
        gbc.setState(0xd7c4, 0x4a24, 0x5810, 0x412a, 0xc01a, 0x347d, 0x0, 0x1);
        gbc.writeMem(0xd7c4, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x4a24);
        EXPECT(gbc.pc(), 0xd7c6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd7c4), 0xcb);
        EXPECT(gbc.readMem(0xd7c5), 0xc4);
        // CB C4 019F
        gbc.setState(0x61e9, 0x99c2, 0xeee0, 0x73ac, 0xda0a, 0x2454, 0x0, 0x1);
        gbc.writeMem(0x61e9, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x99c2);
        EXPECT(gbc.pc(), 0x61eb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C4 01A0
        gbc.setState(0x3683, 0xde14, 0x8550, 0x8d8a, 0xd629, 0xb461, 0x0, 0x0);
        gbc.writeMem(0x3683, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0xde14);
        EXPECT(gbc.pc(), 0x3685);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C4 01A1
        gbc.setState(0x1846, 0x2c4a, 0x4000, 0xcf89, 0x1b04, 0xc9d4, 0x1, 0x0);
        gbc.writeMem(0x1846, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x2c4a);
        EXPECT(gbc.pc(), 0x1848);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C4 01A2
        gbc.setState(0x78b5, 0x1fc, 0xcc30, 0x9636, 0x5112, 0xb5ea, 0x1, 0x1);
        gbc.writeMem(0x78b5, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x1fc);
        EXPECT(gbc.pc(), 0x78b7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C4 01A3
        gbc.setState(0xd75a, 0xde84, 0xabc0, 0x7757, 0xaa2d, 0x32aa, 0x0, 0x0);
        gbc.writeMem(0xd75a, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0xde84);
        EXPECT(gbc.pc(), 0xd75c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd75a), 0xcb);
        EXPECT(gbc.readMem(0xd75b), 0xc4);
        // CB C4 01A4
        gbc.setState(0x8e0e, 0x58e8, 0x2f80, 0x44ee, 0xe090, 0x6f8e, 0x1, 0x1);
        gbc.writeMem(0x8e0e, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x58e8);
        EXPECT(gbc.pc(), 0x8e10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8e0e), 0xcb);
        EXPECT(gbc.readMem(0x8e0f), 0xc4);
        // CB C4 01A5
        gbc.setState(0x835, 0x9e94, 0x8db0, 0x930e, 0xb73f, 0xff31, 0x0, 0x0);
        gbc.writeMem(0x835, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x9e94);
        EXPECT(gbc.pc(), 0x837);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C4 01A6
        gbc.setState(0x811b, 0x8e4e, 0x22a0, 0x3cf1, 0xbc96, 0x82fb, 0x1, 0x1);
        gbc.writeMem(0x811b, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x8e4e);
        EXPECT(gbc.pc(), 0x811d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x811b), 0xcb);
        EXPECT(gbc.readMem(0x811c), 0xc4);
        // CB C4 01A7
        gbc.setState(0x652a, 0x55db, 0xc2c0, 0xacb5, 0x81e2, 0x7039, 0x1, 0x0);
        gbc.writeMem(0x652a, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x55db);
        EXPECT(gbc.pc(), 0x652c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C4 01A8
        gbc.setState(0x9b6, 0xa190, 0x9670, 0x12cd, 0x1df4, 0xd29c, 0x0, 0x1);
        gbc.writeMem(0x9b6, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0xa190);
        EXPECT(gbc.pc(), 0x9b8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C4 01A9
        gbc.setState(0x7526, 0x8a5d, 0x8d60, 0xfdaf, 0x6279, 0x752d, 0x0, 0x1);
        gbc.writeMem(0x7526, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x8a5d);
        EXPECT(gbc.pc(), 0x7528);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C4 01AA
        gbc.setState(0xa133, 0xc58b, 0xa650, 0xa414, 0x9b02, 0x57f1, 0x0, 0x1);
        gbc.writeMem(0xa133, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0xc58b);
        EXPECT(gbc.pc(), 0xa135);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa133), 0xcb);
        EXPECT(gbc.readMem(0xa134), 0xc4);
        // CB C4 01AB
        gbc.setState(0xfc7, 0xf3c3, 0xc450, 0xde3a, 0xdb4d, 0x6dcb, 0x0, 0x0);
        gbc.writeMem(0xfc7, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0xf3c3);
        EXPECT(gbc.pc(), 0xfc9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C4 01AC
        gbc.setState(0x4b1a, 0xbf41, 0xcd40, 0x70a9, 0x53b3, 0x80c1, 0x1, 0x1);
        gbc.writeMem(0x4b1a, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0xbf41);
        EXPECT(gbc.pc(), 0x4b1c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C4 01AD
        gbc.setState(0x67d9, 0xc07c, 0xe800, 0xe31a, 0x1eac, 0x5648, 0x1, 0x1);
        gbc.writeMem(0x67d9, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0xc07c);
        EXPECT(gbc.pc(), 0x67db);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C4 01AE
        gbc.setState(0xc370, 0x23c0, 0x49e0, 0x12f9, 0xaaf2, 0x6c48, 0x1, 0x1);
        gbc.writeMem(0xc370, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x23c0);
        EXPECT(gbc.pc(), 0xc372);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc370), 0xcb);
        EXPECT(gbc.readMem(0xc371), 0xc4);
        // CB C4 01AF
        gbc.setState(0x1f1b, 0xea96, 0x2fc0, 0xe1b4, 0x706b, 0x767c, 0x1, 0x1);
        gbc.writeMem(0x1f1b, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xea96);
        EXPECT(gbc.pc(), 0x1f1d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C4 01B0
        gbc.setState(0xe38a, 0x7f28, 0x52f0, 0x29d8, 0x95bd, 0x6b71, 0x1, 0x0);
        gbc.writeMem(0xe38a, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x7f28);
        EXPECT(gbc.pc(), 0xe38c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe38a), 0xcb);
        EXPECT(gbc.readMem(0xe38b), 0xc4);
        // CB C4 01B1
        gbc.setState(0x2790, 0xb56, 0x4870, 0xd928, 0xf84d, 0x94f8, 0x0, 0x0);
        gbc.writeMem(0x2790, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0xb56);
        EXPECT(gbc.pc(), 0x2792);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C4 01B2
        gbc.setState(0x5dab, 0x4d05, 0x4d30, 0x4e6e, 0x703b, 0xc45e, 0x1, 0x1);
        gbc.writeMem(0x5dab, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x4d05);
        EXPECT(gbc.pc(), 0x5dad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C4 01B3
        gbc.setState(0x7bdb, 0x8b7e, 0x1870, 0x5adf, 0x651d, 0x2b9, 0x0, 0x0);
        gbc.writeMem(0x7bdb, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x8b7e);
        EXPECT(gbc.pc(), 0x7bdd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C4 01B4
        gbc.setState(0xa31e, 0x236f, 0xa2b0, 0xe0dd, 0x3868, 0x7b7d, 0x0, 0x0);
        gbc.writeMem(0xa31e, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x236f);
        EXPECT(gbc.pc(), 0xa320);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa31e), 0xcb);
        EXPECT(gbc.readMem(0xa31f), 0xc4);
        // CB C4 01B5
        gbc.setState(0xdecb, 0xc92a, 0x31d0, 0x72d2, 0xc7a1, 0x8cb2, 0x0, 0x0);
        gbc.writeMem(0xdecb, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0xc92a);
        EXPECT(gbc.pc(), 0xdecd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdecb), 0xcb);
        EXPECT(gbc.readMem(0xdecc), 0xc4);
        // CB C4 01B6
        gbc.setState(0x4caf, 0x5bf0, 0xa230, 0x8335, 0xf301, 0x2daf, 0x1, 0x0);
        gbc.writeMem(0x4caf, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x5bf0);
        EXPECT(gbc.pc(), 0x4cb1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C4 01B7
        gbc.setState(0xecaf, 0x1c66, 0x8510, 0xcaa9, 0x7507, 0xf09c, 0x0, 0x0);
        gbc.writeMem(0xecaf, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x1c66);
        EXPECT(gbc.pc(), 0xecb1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xecaf), 0xcb);
        EXPECT(gbc.readMem(0xecb0), 0xc4);
        // CB C4 01B8
        gbc.setState(0x4dd5, 0xc31e, 0x12d0, 0xd495, 0x70a6, 0x8a65, 0x0, 0x0);
        gbc.writeMem(0x4dd5, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0xc31e);
        EXPECT(gbc.pc(), 0x4dd7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C4 01B9
        gbc.setState(0x266e, 0x5f63, 0x1630, 0xf7d5, 0x8c05, 0xb039, 0x1, 0x0);
        gbc.writeMem(0x266e, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x5f63);
        EXPECT(gbc.pc(), 0x2670);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C4 01BA
        gbc.setState(0x7c9b, 0x9f5d, 0x59e0, 0x6f7a, 0x66f1, 0xf0f8, 0x1, 0x0);
        gbc.writeMem(0x7c9b, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x9f5d);
        EXPECT(gbc.pc(), 0x7c9d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C4 01BB
        gbc.setState(0x1fd4, 0xb698, 0xbcc0, 0xf47d, 0xd44d, 0xb225, 0x0, 0x1);
        gbc.writeMem(0x1fd4, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0xb698);
        EXPECT(gbc.pc(), 0x1fd6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C4 01BC
        gbc.setState(0x60a2, 0xee1c, 0xa0f0, 0x67b3, 0x9921, 0x3d35, 0x0, 0x1);
        gbc.writeMem(0x60a2, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0xee1c);
        EXPECT(gbc.pc(), 0x60a4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C4 01BD
        gbc.setState(0xa210, 0xd202, 0x1660, 0x26de, 0x90eb, 0x50c4, 0x0, 0x0);
        gbc.writeMem(0xa210, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0xd202);
        EXPECT(gbc.pc(), 0xa212);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa210), 0xcb);
        EXPECT(gbc.readMem(0xa211), 0xc4);
        // CB C4 01BE
        gbc.setState(0x87f2, 0x743b, 0xc560, 0xc5dd, 0x6122, 0x8226, 0x1, 0x0);
        gbc.writeMem(0x87f2, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x743b);
        EXPECT(gbc.pc(), 0x87f4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x87f2), 0xcb);
        EXPECT(gbc.readMem(0x87f3), 0xc4);
        // CB C4 01BF
        gbc.setState(0x87fd, 0x6617, 0x5ae0, 0x8b66, 0x6164, 0xec37, 0x1, 0x0);
        gbc.writeMem(0x87fd, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x6617);
        EXPECT(gbc.pc(), 0x87ff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x87fd), 0xcb);
        EXPECT(gbc.readMem(0x87fe), 0xc4);
        // CB C4 01C0
        gbc.setState(0xd72a, 0xa287, 0x2760, 0x98e9, 0x3070, 0xae80, 0x1, 0x1);
        gbc.writeMem(0xd72a, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0xa287);
        EXPECT(gbc.pc(), 0xd72c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd72a), 0xcb);
        EXPECT(gbc.readMem(0xd72b), 0xc4);
        // CB C4 01C1
        gbc.setState(0x4ca7, 0x3e6, 0x26c0, 0xf94f, 0xd3ba, 0x8e3c, 0x1, 0x1);
        gbc.writeMem(0x4ca7, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x3e6);
        EXPECT(gbc.pc(), 0x4ca9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C4 01C2
        gbc.setState(0x346c, 0xb8f1, 0xc790, 0x282, 0x8460, 0x898e, 0x1, 0x1);
        gbc.writeMem(0x346c, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0xb8f1);
        EXPECT(gbc.pc(), 0x346e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C4 01C3
        gbc.setState(0x4a07, 0xd88a, 0x6470, 0x2ec2, 0x7120, 0x6174, 0x1, 0x1);
        gbc.writeMem(0x4a07, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xd88a);
        EXPECT(gbc.pc(), 0x4a09);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C4 01C4
        gbc.setState(0x5294, 0xab73, 0x8b70, 0x49ee, 0xb856, 0xa082, 0x0, 0x1);
        gbc.writeMem(0x5294, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0xab73);
        EXPECT(gbc.pc(), 0x5296);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C4 01C6
        gbc.setState(0x3f1e, 0x5213, 0x4170, 0xe564, 0x6726, 0xff6, 0x0, 0x0);
        gbc.writeMem(0x3f1e, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x5213);
        EXPECT(gbc.pc(), 0x3f20);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C4 01C7
        gbc.setState(0x2522, 0xf155, 0xe540, 0x1ee7, 0x3f1, 0xe71d, 0x0, 0x0);
        gbc.writeMem(0x2522, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0xf155);
        EXPECT(gbc.pc(), 0x2524);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C4 01C8
        gbc.setState(0x83f0, 0x715b, 0x7f80, 0xcb16, 0xb340, 0x9ec6, 0x1, 0x0);
        gbc.writeMem(0x83f0, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x715b);
        EXPECT(gbc.pc(), 0x83f2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x83f0), 0xcb);
        EXPECT(gbc.readMem(0x83f1), 0xc4);
        // CB C4 01C9
        gbc.setState(0x713e, 0x5f63, 0xb220, 0xd6c6, 0x458e, 0xce25, 0x1, 0x0);
        gbc.writeMem(0x713e, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x5f63);
        EXPECT(gbc.pc(), 0x7140);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C4 01CA
        gbc.setState(0x33aa, 0xf642, 0x48a0, 0x3736, 0xa006, 0x3206, 0x0, 0x0);
        gbc.writeMem(0x33aa, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0xf642);
        EXPECT(gbc.pc(), 0x33ac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C4 01CB
        gbc.setState(0x88fa, 0xfd08, 0x5ae0, 0x984, 0x7341, 0x7a07, 0x0, 0x1);
        gbc.writeMem(0x88fa, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xfd08);
        EXPECT(gbc.pc(), 0x88fc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x88fa), 0xcb);
        EXPECT(gbc.readMem(0x88fb), 0xc4);
        // CB C4 01CC
        gbc.setState(0x1033, 0x668a, 0xd1f0, 0x20ab, 0x1a93, 0xf52d, 0x1, 0x1);
        gbc.writeMem(0x1033, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x668a);
        EXPECT(gbc.pc(), 0x1035);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C4 01CD
        gbc.setState(0xb8a, 0x99aa, 0xff40, 0xb558, 0x218e, 0xc7, 0x0, 0x1);
        gbc.writeMem(0xb8a, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x99aa);
        EXPECT(gbc.pc(), 0xb8c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C4 01CE
        gbc.setState(0x51e9, 0x46ac, 0xcea0, 0x37f9, 0x8d6b, 0x582c, 0x0, 0x1);
        gbc.writeMem(0x51e9, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x46ac);
        EXPECT(gbc.pc(), 0x51eb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C4 01CF
        gbc.setState(0x386a, 0x6722, 0xbcc0, 0xae9b, 0x99c, 0x308b, 0x0, 0x1);
        gbc.writeMem(0x386a, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x6722);
        EXPECT(gbc.pc(), 0x386c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C4 01D0
        gbc.setState(0xcde0, 0xa208, 0x6100, 0xadbd, 0xd606, 0xca8f, 0x0, 0x0);
        gbc.writeMem(0xcde0, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xa208);
        EXPECT(gbc.pc(), 0xcde2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcde0), 0xcb);
        EXPECT(gbc.readMem(0xcde1), 0xc4);
        // CB C4 01D1
        gbc.setState(0x7b13, 0xb53e, 0xd0d0, 0x7466, 0xb4b7, 0xc5c, 0x0, 0x1);
        gbc.writeMem(0x7b13, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0xb53e);
        EXPECT(gbc.pc(), 0x7b15);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C4 01D2
        gbc.setState(0xda7, 0xdfa4, 0x4590, 0x7bff, 0x7d62, 0xf6d2, 0x0, 0x1);
        gbc.writeMem(0xda7, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0xdfa4);
        EXPECT(gbc.pc(), 0xda9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C4 01D3
        gbc.setState(0xda10, 0x3676, 0x8dd0, 0xf6e, 0x8f8d, 0xa95e, 0x0, 0x0);
        gbc.writeMem(0xda10, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x3676);
        EXPECT(gbc.pc(), 0xda12);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xda10), 0xcb);
        EXPECT(gbc.readMem(0xda11), 0xc4);
        // CB C4 01D4
        gbc.setState(0x6b4d, 0xa3cf, 0xee90, 0xae55, 0x735a, 0x13b3, 0x1, 0x0);
        gbc.writeMem(0x6b4d, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0xa3cf);
        EXPECT(gbc.pc(), 0x6b4f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C4 01D5
        gbc.setState(0x3d34, 0xc880, 0x3190, 0xa772, 0x481a, 0xaf2e, 0x0, 0x1);
        gbc.writeMem(0x3d34, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xc880);
        EXPECT(gbc.pc(), 0x3d36);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C4 01D6
        gbc.setState(0xccb, 0x9be6, 0x47f0, 0xe0c1, 0x78c2, 0x4435, 0x1, 0x0);
        gbc.writeMem(0xccb, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x9be6);
        EXPECT(gbc.pc(), 0xccd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C4 01D8
        gbc.setState(0xdac5, 0xc665, 0x7430, 0xc02e, 0xe2e2, 0xab48, 0x0, 0x1);
        gbc.writeMem(0xdac5, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0xc665);
        EXPECT(gbc.pc(), 0xdac7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdac5), 0xcb);
        EXPECT(gbc.readMem(0xdac6), 0xc4);
        // CB C4 01D9
        gbc.setState(0x754d, 0x3ee9, 0xf780, 0xfbed, 0xb095, 0x3dea, 0x1, 0x0);
        gbc.writeMem(0x754d, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x3ee9);
        EXPECT(gbc.pc(), 0x754f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C4 01DA
        gbc.setState(0xaed3, 0xdd6d, 0x8c40, 0x5077, 0x6e95, 0x1f9d, 0x1, 0x1);
        gbc.writeMem(0xaed3, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0xdd6d);
        EXPECT(gbc.pc(), 0xaed5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaed3), 0xcb);
        EXPECT(gbc.readMem(0xaed4), 0xc4);
        // CB C4 01DB
        gbc.setState(0xb199, 0x3bda, 0x4b80, 0x696b, 0xe6da, 0xe9b1, 0x1, 0x1);
        gbc.writeMem(0xb199, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x3bda);
        EXPECT(gbc.pc(), 0xb19b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb199), 0xcb);
        EXPECT(gbc.readMem(0xb19a), 0xc4);
        // CB C4 01DC
        gbc.setState(0x7aec, 0x780, 0x870, 0x5ce6, 0x479a, 0x2cb2, 0x0, 0x1);
        gbc.writeMem(0x7aec, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x780);
        EXPECT(gbc.pc(), 0x7aee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C4 01DD
        gbc.setState(0x16d3, 0xc5d5, 0xacf0, 0x7643, 0x7aea, 0x87f0, 0x1, 0x1);
        gbc.writeMem(0x16d3, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0xc5d5);
        EXPECT(gbc.pc(), 0x16d5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C4 01DE
        gbc.setState(0xa6c9, 0x1238, 0xff90, 0x3a9d, 0x6d10, 0xe2f4, 0x1, 0x1);
        gbc.writeMem(0xa6c9, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x1238);
        EXPECT(gbc.pc(), 0xa6cb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa6c9), 0xcb);
        EXPECT(gbc.readMem(0xa6ca), 0xc4);
        // CB C4 01DF
        gbc.setState(0x2f7c, 0x784, 0xfbf0, 0x6eea, 0xb876, 0xdf3a, 0x0, 0x0);
        gbc.writeMem(0x2f7c, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x784);
        EXPECT(gbc.pc(), 0x2f7e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C4 01E0
        gbc.setState(0xc8aa, 0x3031, 0x5dc0, 0x7f86, 0xa42d, 0xff84, 0x1, 0x0);
        gbc.writeMem(0xc8aa, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x3031);
        EXPECT(gbc.pc(), 0xc8ac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc8aa), 0xcb);
        EXPECT(gbc.readMem(0xc8ab), 0xc4);
        // CB C4 01E2
        gbc.setState(0x6041, 0x81b0, 0xc0a0, 0x6712, 0xda41, 0xd313, 0x1, 0x0);
        gbc.writeMem(0x6041, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x81b0);
        EXPECT(gbc.pc(), 0x6043);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C4 01E3
        gbc.setState(0x3888, 0x27cd, 0x9ef0, 0x6a45, 0x4e92, 0x1d2b, 0x0, 0x0);
        gbc.writeMem(0x3888, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x27cd);
        EXPECT(gbc.pc(), 0x388a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C4 01E4
        gbc.setState(0x4854, 0x3db2, 0xc650, 0xb90d, 0x845b, 0xd30d, 0x1, 0x1);
        gbc.writeMem(0x4854, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x3db2);
        EXPECT(gbc.pc(), 0x4856);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C4 01E5
        gbc.setState(0xb74b, 0xecf, 0xcfe0, 0xee90, 0xdf25, 0x8a75, 0x0, 0x0);
        gbc.writeMem(0xb74b, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xecf);
        EXPECT(gbc.pc(), 0xb74d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb74b), 0xcb);
        EXPECT(gbc.readMem(0xb74c), 0xc4);
        // CB C4 01E6
        gbc.setState(0x37f3, 0x9719, 0x66f0, 0x254d, 0xfd65, 0xfa42, 0x0, 0x1);
        gbc.writeMem(0x37f3, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x9719);
        EXPECT(gbc.pc(), 0x37f5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C4 01E8
        gbc.setState(0x8d39, 0x5cef, 0x20c0, 0xe835, 0xab5b, 0x1084, 0x0, 0x0);
        gbc.writeMem(0x8d39, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x5cef);
        EXPECT(gbc.pc(), 0x8d3b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d39), 0xcb);
        EXPECT(gbc.readMem(0x8d3a), 0xc4);
        // CB C4 01E9
        gbc.setState(0x4443, 0xabd7, 0xcb30, 0xc4e6, 0x4971, 0x79e9, 0x1, 0x0);
        gbc.writeMem(0x4443, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0xabd7);
        EXPECT(gbc.pc(), 0x4445);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C4 01EA
        gbc.setState(0xba91, 0xe434, 0x78a0, 0xdabd, 0x8a71, 0xfaa, 0x1, 0x1);
        gbc.writeMem(0xba91, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0xe434);
        EXPECT(gbc.pc(), 0xba93);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xba91), 0xcb);
        EXPECT(gbc.readMem(0xba92), 0xc4);
        // CB C4 01EB
        gbc.setState(0x842f, 0xd5ab, 0xe320, 0x985c, 0x8702, 0xf564, 0x1, 0x0);
        gbc.writeMem(0x842f, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0xd5ab);
        EXPECT(gbc.pc(), 0x8431);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x842f), 0xcb);
        EXPECT(gbc.readMem(0x8430), 0xc4);
        // CB C4 01EC
        gbc.setState(0xddc, 0xb4bd, 0x21c0, 0x4031, 0xaf0a, 0x117b, 0x1, 0x0);
        gbc.writeMem(0xddc, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0xb4bd);
        EXPECT(gbc.pc(), 0xdde);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C4 01ED
        gbc.setState(0xdad2, 0x8bcb, 0x8440, 0xbbd9, 0xc6fe, 0x76da, 0x1, 0x0);
        gbc.writeMem(0xdad2, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x8bcb);
        EXPECT(gbc.pc(), 0xdad4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdad2), 0xcb);
        EXPECT(gbc.readMem(0xdad3), 0xc4);
        // CB C4 01EE
        gbc.setState(0xd293, 0x871, 0xda80, 0xf907, 0x76b4, 0x269, 0x1, 0x0);
        gbc.writeMem(0xd293, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x871);
        EXPECT(gbc.pc(), 0xd295);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd293), 0xcb);
        EXPECT(gbc.readMem(0xd294), 0xc4);
        // CB C4 01EF
        gbc.setState(0x7b2, 0xa728, 0x3f20, 0xbe3, 0x4725, 0x7c73, 0x1, 0x0);
        gbc.writeMem(0x7b2, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0xa728);
        EXPECT(gbc.pc(), 0x7b4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C4 01F0
        gbc.setState(0x7f4, 0x3370, 0xc8c0, 0x807a, 0xc970, 0xfb90, 0x0, 0x0);
        gbc.writeMem(0x7f4, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x3370);
        EXPECT(gbc.pc(), 0x7f6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C4 01F1
        gbc.setState(0x55ed, 0x606b, 0x63a0, 0x9236, 0x234a, 0xe894, 0x0, 0x1);
        gbc.writeMem(0x55ed, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x606b);
        EXPECT(gbc.pc(), 0x55ef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C4 01F2
        gbc.setState(0xed44, 0xf94a, 0x84d0, 0xb79d, 0xace5, 0x1d63, 0x1, 0x0);
        gbc.writeMem(0xed44, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0xf94a);
        EXPECT(gbc.pc(), 0xed46);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xed44), 0xcb);
        EXPECT(gbc.readMem(0xed45), 0xc4);
        // CB C4 01F3
        gbc.setState(0x57c3, 0x663, 0xdca0, 0xa12a, 0xe09d, 0x2a39, 0x0, 0x0);
        gbc.writeMem(0x57c3, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x663);
        EXPECT(gbc.pc(), 0x57c5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C4 01F4
        gbc.setState(0x478c, 0x5adc, 0xb500, 0xd7b5, 0xf170, 0x9822, 0x1, 0x0);
        gbc.writeMem(0x478c, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x5adc);
        EXPECT(gbc.pc(), 0x478e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C4 01F5
        gbc.setState(0x5a7, 0x87e, 0xc870, 0x244a, 0x445f, 0x11ed, 0x0, 0x1);
        gbc.writeMem(0x5a7, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x87e);
        EXPECT(gbc.pc(), 0x5a9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C4 01F6
        gbc.setState(0xbcc5, 0x3414, 0x9810, 0x92dc, 0x5d6e, 0x5e90, 0x0, 0x1);
        gbc.writeMem(0xbcc5, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x3414);
        EXPECT(gbc.pc(), 0xbcc7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbcc5), 0xcb);
        EXPECT(gbc.readMem(0xbcc6), 0xc4);
        // CB C4 01F7
        gbc.setState(0x91c8, 0x298e, 0x2310, 0x1ff9, 0x4fae, 0x414c, 0x1, 0x0);
        gbc.writeMem(0x91c8, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x298e);
        EXPECT(gbc.pc(), 0x91ca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x91c8), 0xcb);
        EXPECT(gbc.readMem(0x91c9), 0xc4);
        // CB C4 01F8
        gbc.setState(0xca2c, 0x7856, 0xe3f0, 0xf5a6, 0xacf6, 0xc350, 0x1, 0x1);
        gbc.writeMem(0xca2c, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x7856);
        EXPECT(gbc.pc(), 0xca2e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xca2c), 0xcb);
        EXPECT(gbc.readMem(0xca2d), 0xc4);
        // CB C4 01F9
        gbc.setState(0x33a1, 0xc66, 0x8af0, 0xcf06, 0x1ade, 0x9bd4, 0x0, 0x1);
        gbc.writeMem(0x33a1, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xc66);
        EXPECT(gbc.pc(), 0x33a3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C4 01FA
        gbc.setState(0x9af1, 0x6168, 0x80a0, 0x6008, 0x4d8e, 0xa3dc, 0x1, 0x1);
        gbc.writeMem(0x9af1, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x6168);
        EXPECT(gbc.pc(), 0x9af3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9af1), 0xcb);
        EXPECT(gbc.readMem(0x9af2), 0xc4);
        // CB C4 01FB
        gbc.setState(0x9bc3, 0x552b, 0xf300, 0x3af9, 0x37fb, 0x1325, 0x0, 0x0);
        gbc.writeMem(0x9bc3, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x552b);
        EXPECT(gbc.pc(), 0x9bc5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9bc3), 0xcb);
        EXPECT(gbc.readMem(0x9bc4), 0xc4);
        // CB C4 01FC
        gbc.setState(0xcc35, 0xa437, 0xaa50, 0x572f, 0x8eec, 0x7888, 0x0, 0x0);
        gbc.writeMem(0xcc35, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0xa437);
        EXPECT(gbc.pc(), 0xcc37);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcc35), 0xcb);
        EXPECT(gbc.readMem(0xcc36), 0xc4);
        // CB C4 01FD
        gbc.setState(0x6cef, 0x7af0, 0x75a0, 0x566b, 0x8461, 0x47d, 0x1, 0x0);
        gbc.writeMem(0x6cef, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x7af0);
        EXPECT(gbc.pc(), 0x6cf1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C4 01FE
        gbc.setState(0x7c91, 0xc834, 0x6cb0, 0x8e85, 0x907a, 0x1c18, 0x1, 0x1);
        gbc.writeMem(0x7c91, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xc834);
        EXPECT(gbc.pc(), 0x7c93);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C4 01FF
        gbc.setState(0x57bf, 0x1277, 0x4c0, 0xe10e, 0xd7b6, 0xeb9a, 0x1, 0x0);
        gbc.writeMem(0x57bf, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x1277);
        EXPECT(gbc.pc(), 0x57c1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C4 0200
        gbc.setState(0xdf4b, 0xd1d0, 0xf660, 0xfc00, 0xd22, 0xee90, 0x0, 0x0);
        gbc.writeMem(0xdf4b, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0xd1d0);
        EXPECT(gbc.pc(), 0xdf4d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdf4b), 0xcb);
        EXPECT(gbc.readMem(0xdf4c), 0xc4);
        // CB C4 0201
        gbc.setState(0xa6ce, 0x6435, 0x60e0, 0xae0d, 0x9bac, 0xe88d, 0x1, 0x1);
        gbc.writeMem(0xa6ce, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x6435);
        EXPECT(gbc.pc(), 0xa6d0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa6ce), 0xcb);
        EXPECT(gbc.readMem(0xa6cf), 0xc4);
        // CB C4 0202
        gbc.setState(0x54f4, 0x5d97, 0xba50, 0xee5c, 0x5585, 0xce62, 0x1, 0x1);
        gbc.writeMem(0x54f4, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x5d97);
        EXPECT(gbc.pc(), 0x54f6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C4 0203
        gbc.setState(0x4f3c, 0x4068, 0x9900, 0x74e6, 0x8e51, 0xffac, 0x0, 0x1);
        gbc.writeMem(0x4f3c, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x4068);
        EXPECT(gbc.pc(), 0x4f3e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C4 0204
        gbc.setState(0xb13e, 0xec44, 0x1d70, 0x3b1a, 0x3810, 0x6d77, 0x1, 0x0);
        gbc.writeMem(0xb13e, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xec44);
        EXPECT(gbc.pc(), 0xb140);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb13e), 0xcb);
        EXPECT(gbc.readMem(0xb13f), 0xc4);
        // CB C4 0205
        gbc.setState(0xe26b, 0x9e70, 0x9e50, 0x554, 0xd51b, 0xd944, 0x1, 0x1);
        gbc.writeMem(0xe26b, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x9e70);
        EXPECT(gbc.pc(), 0xe26d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe26b), 0xcb);
        EXPECT(gbc.readMem(0xe26c), 0xc4);
        // CB C4 0207
        gbc.setState(0xc9c0, 0xdb37, 0xbb30, 0xb3e4, 0xaaf7, 0x8b85, 0x1, 0x1);
        gbc.writeMem(0xc9c0, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0xdb37);
        EXPECT(gbc.pc(), 0xc9c2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc9c0), 0xcb);
        EXPECT(gbc.readMem(0xc9c1), 0xc4);
        // CB C4 0208
        gbc.setState(0xb892, 0xe31, 0x2b30, 0xa9ef, 0xf61c, 0xd0f9, 0x0, 0x0);
        gbc.writeMem(0xb892, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xe31);
        EXPECT(gbc.pc(), 0xb894);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb892), 0xcb);
        EXPECT(gbc.readMem(0xb893), 0xc4);
        // CB C4 020A
        gbc.setState(0x85d5, 0xaa4, 0x6bb0, 0xec96, 0xb3f6, 0x451e, 0x0, 0x0);
        gbc.writeMem(0x85d5, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0xaa4);
        EXPECT(gbc.pc(), 0x85d7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x85d5), 0xcb);
        EXPECT(gbc.readMem(0x85d6), 0xc4);
        // CB C4 020B
        gbc.setState(0xcaa8, 0x6a5, 0x27d0, 0x5c88, 0x3d3, 0xd275, 0x1, 0x1);
        gbc.writeMem(0xcaa8, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x6a5);
        EXPECT(gbc.pc(), 0xcaaa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcaa8), 0xcb);
        EXPECT(gbc.readMem(0xcaa9), 0xc4);
        // CB C4 020C
        gbc.setState(0x7c8e, 0x466f, 0x2bd0, 0x4caf, 0x8e78, 0x9616, 0x0, 0x0);
        gbc.writeMem(0x7c8e, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x466f);
        EXPECT(gbc.pc(), 0x7c90);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C4 020D
        gbc.setState(0x6ab8, 0xc34f, 0xcd50, 0x735c, 0xf324, 0x4404, 0x0, 0x0);
        gbc.writeMem(0x6ab8, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0xc34f);
        EXPECT(gbc.pc(), 0x6aba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C4 020E
        gbc.setState(0xe47c, 0xbb18, 0x2570, 0x9132, 0x123b, 0x1e03, 0x1, 0x1);
        gbc.writeMem(0xe47c, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0xbb18);
        EXPECT(gbc.pc(), 0xe47e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe47c), 0xcb);
        EXPECT(gbc.readMem(0xe47d), 0xc4);
        // CB C4 020F
        gbc.setState(0xdfa0, 0x6f77, 0xc750, 0xcc9c, 0x394a, 0xed1b, 0x1, 0x0);
        gbc.writeMem(0xdfa0, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x6f77);
        EXPECT(gbc.pc(), 0xdfa2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdfa0), 0xcb);
        EXPECT(gbc.readMem(0xdfa1), 0xc4);
        // CB C4 0210
        gbc.setState(0xb330, 0x771, 0x7030, 0x2a44, 0xb3d1, 0x7df, 0x1, 0x0);
        gbc.writeMem(0xb330, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x771);
        EXPECT(gbc.pc(), 0xb332);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb330), 0xcb);
        EXPECT(gbc.readMem(0xb331), 0xc4);
        // CB C4 0211
        gbc.setState(0x1ed9, 0x3b7c, 0xad60, 0x37d0, 0x83d0, 0x91f, 0x0, 0x0);
        gbc.writeMem(0x1ed9, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x3b7c);
        EXPECT(gbc.pc(), 0x1edb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C4 0212
        gbc.setState(0x4a52, 0x5c9c, 0x890, 0x5896, 0xab58, 0xcbb0, 0x1, 0x1);
        gbc.writeMem(0x4a52, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x5c9c);
        EXPECT(gbc.pc(), 0x4a54);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C4 0213
        gbc.setState(0x2c98, 0xc883, 0x1580, 0x3db3, 0x36fa, 0xf59c, 0x1, 0x1);
        gbc.writeMem(0x2c98, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0xc883);
        EXPECT(gbc.pc(), 0x2c9a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C4 0214
        gbc.setState(0x5288, 0x2873, 0xc060, 0x1a67, 0xc3f2, 0x2be7, 0x0, 0x0);
        gbc.writeMem(0x5288, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x2873);
        EXPECT(gbc.pc(), 0x528a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C4 0215
        gbc.setState(0xd6a1, 0x9e52, 0xd560, 0xf6, 0x41a8, 0xdd15, 0x0, 0x1);
        gbc.writeMem(0xd6a1, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x9e52);
        EXPECT(gbc.pc(), 0xd6a3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd6a1), 0xcb);
        EXPECT(gbc.readMem(0xd6a2), 0xc4);
        // CB C4 0216
        gbc.setState(0x98bd, 0x676a, 0x4ff0, 0xb207, 0xd6a, 0xaf72, 0x0, 0x0);
        gbc.writeMem(0x98bd, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x676a);
        EXPECT(gbc.pc(), 0x98bf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x98bd), 0xcb);
        EXPECT(gbc.readMem(0x98be), 0xc4);
        // CB C4 0217
        gbc.setState(0x911e, 0xf490, 0xf930, 0x6aa7, 0xbd5, 0xdce4, 0x1, 0x0);
        gbc.writeMem(0x911e, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0xf490);
        EXPECT(gbc.pc(), 0x9120);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x911e), 0xcb);
        EXPECT(gbc.readMem(0x911f), 0xc4);
        // CB C4 0218
        gbc.setState(0x216d, 0xb19, 0xdd40, 0x1ec, 0x190f, 0xb331, 0x1, 0x0);
        gbc.writeMem(0x216d, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xb19);
        EXPECT(gbc.pc(), 0x216f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C4 021A
        gbc.setState(0xe301, 0xab13, 0xd2c0, 0xf181, 0xb7da, 0xa2da, 0x0, 0x0);
        gbc.writeMem(0xe301, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0xab13);
        EXPECT(gbc.pc(), 0xe303);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe301), 0xcb);
        EXPECT(gbc.readMem(0xe302), 0xc4);
        // CB C4 021B
        gbc.setState(0x49a, 0x9ae1, 0x3b40, 0xbc91, 0xd49e, 0xb791, 0x0, 0x0);
        gbc.writeMem(0x49a, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x9ae1);
        EXPECT(gbc.pc(), 0x49c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C4 021C
        gbc.setState(0x37da, 0x2fcd, 0x69e0, 0x5ad6, 0xbee8, 0xa055, 0x0, 0x0);
        gbc.writeMem(0x37da, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x2fcd);
        EXPECT(gbc.pc(), 0x37dc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C4 021D
        gbc.setState(0x5735, 0x9601, 0x6b40, 0xc5d7, 0x251c, 0xa3c6, 0x1, 0x1);
        gbc.writeMem(0x5735, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x9601);
        EXPECT(gbc.pc(), 0x5737);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C4 021E
        gbc.setState(0x5cb3, 0x1d6d, 0x82c0, 0x298c, 0xa900, 0x4315, 0x1, 0x0);
        gbc.writeMem(0x5cb3, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x1d6d);
        EXPECT(gbc.pc(), 0x5cb5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C4 021F
        gbc.setState(0x510b, 0xbbf1, 0x7920, 0xa7f, 0xcddc, 0x4b9e, 0x1, 0x1);
        gbc.writeMem(0x510b, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0xbbf1);
        EXPECT(gbc.pc(), 0x510d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C4 0220
        gbc.setState(0x2928, 0xb260, 0x160, 0xd180, 0x2631, 0xf7c8, 0x0, 0x1);
        gbc.writeMem(0x2928, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0xb260);
        EXPECT(gbc.pc(), 0x292a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C4 0221
        gbc.setState(0x265a, 0xeeaa, 0xbba0, 0x5aa3, 0xb14d, 0x5bb7, 0x1, 0x1);
        gbc.writeMem(0x265a, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0xeeaa);
        EXPECT(gbc.pc(), 0x265c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C4 0222
        gbc.setState(0x6f10, 0xf2b, 0x5a00, 0xf773, 0x7012, 0xfad5, 0x1, 0x1);
        gbc.writeMem(0x6f10, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0xf2b);
        EXPECT(gbc.pc(), 0x6f12);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C4 0223
        gbc.setState(0x3015, 0x57e8, 0xc290, 0x190f, 0x136f, 0x33b, 0x0, 0x0);
        gbc.writeMem(0x3015, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x57e8);
        EXPECT(gbc.pc(), 0x3017);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C4 0224
        gbc.setState(0x3eeb, 0x5cba, 0xfe80, 0x3689, 0xc324, 0x69f8, 0x1, 0x0);
        gbc.writeMem(0x3eeb, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x5cba);
        EXPECT(gbc.pc(), 0x3eed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C4 0226
        gbc.setState(0xbc58, 0x5cbf, 0x5000, 0xb5f1, 0x5c7d, 0xb432, 0x0, 0x1);
        gbc.writeMem(0xbc58, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x5cbf);
        EXPECT(gbc.pc(), 0xbc5a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbc58), 0xcb);
        EXPECT(gbc.readMem(0xbc59), 0xc4);
        // CB C4 0227
        gbc.setState(0x53b3, 0xe4d0, 0xa8d0, 0xa42c, 0xe83d, 0x462b, 0x0, 0x0);
        gbc.writeMem(0x53b3, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0xe4d0);
        EXPECT(gbc.pc(), 0x53b5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C4 0228
        gbc.setState(0x4436, 0xe5c2, 0x11b0, 0x190a, 0xd2fd, 0xe261, 0x0, 0x1);
        gbc.writeMem(0x4436, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0xe5c2);
        EXPECT(gbc.pc(), 0x4438);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C4 0229
        gbc.setState(0xab01, 0xbd2e, 0x5b40, 0x8804, 0x74e2, 0xfc54, 0x1, 0x0);
        gbc.writeMem(0xab01, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0xbd2e);
        EXPECT(gbc.pc(), 0xab03);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xab01), 0xcb);
        EXPECT(gbc.readMem(0xab02), 0xc4);
        // CB C4 022A
        gbc.setState(0x8d59, 0x73b1, 0xd4b0, 0x6bd6, 0xd2a3, 0x5558, 0x0, 0x1);
        gbc.writeMem(0x8d59, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x73b1);
        EXPECT(gbc.pc(), 0x8d5b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8d59), 0xcb);
        EXPECT(gbc.readMem(0x8d5a), 0xc4);
        // CB C4 022B
        gbc.setState(0x94aa, 0xdbd7, 0x2400, 0x1c7, 0xea71, 0xa2c9, 0x0, 0x0);
        gbc.writeMem(0x94aa, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0xdbd7);
        EXPECT(gbc.pc(), 0x94ac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x94aa), 0xcb);
        EXPECT(gbc.readMem(0x94ab), 0xc4);
        // CB C4 022D
        gbc.setState(0xa415, 0x4a88, 0xb110, 0x8ed3, 0x1306, 0xd9d0, 0x1, 0x0);
        gbc.writeMem(0xa415, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x4a88);
        EXPECT(gbc.pc(), 0xa417);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa415), 0xcb);
        EXPECT(gbc.readMem(0xa416), 0xc4);
        // CB C4 022E
        gbc.setState(0x6db3, 0xbad6, 0xcb60, 0x598a, 0xe389, 0x3283, 0x0, 0x0);
        gbc.writeMem(0x6db3, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0xbad6);
        EXPECT(gbc.pc(), 0x6db5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C4 022F
        gbc.setState(0x6b46, 0x6898, 0x9220, 0x43b5, 0x154e, 0x7b1, 0x0, 0x1);
        gbc.writeMem(0x6b46, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x6898);
        EXPECT(gbc.pc(), 0x6b48);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C4 0230
        gbc.setState(0x878b, 0x1d9, 0xf320, 0x3ec5, 0x8da3, 0x148b, 0x0, 0x1);
        gbc.writeMem(0x878b, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x1d9);
        EXPECT(gbc.pc(), 0x878d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x878b), 0xcb);
        EXPECT(gbc.readMem(0x878c), 0xc4);
        // CB C4 0231
        gbc.setState(0x8c1e, 0xebc, 0x2aa0, 0x9c73, 0x979a, 0xe7f7, 0x0, 0x1);
        gbc.writeMem(0x8c1e, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0xebc);
        EXPECT(gbc.pc(), 0x8c20);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c1e), 0xcb);
        EXPECT(gbc.readMem(0x8c1f), 0xc4);
        // CB C4 0232
        gbc.setState(0x8db2, 0x5f52, 0xe070, 0x83c0, 0xdbe5, 0xf0e0, 0x0, 0x0);
        gbc.writeMem(0x8db2, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x5f52);
        EXPECT(gbc.pc(), 0x8db4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8db2), 0xcb);
        EXPECT(gbc.readMem(0x8db3), 0xc4);
        // CB C4 0233
        gbc.setState(0xc2c1, 0xbf9b, 0xc4e0, 0x1162, 0x2623, 0xa902, 0x1, 0x1);
        gbc.writeMem(0xc2c1, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xbf9b);
        EXPECT(gbc.pc(), 0xc2c3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc2c1), 0xcb);
        EXPECT(gbc.readMem(0xc2c2), 0xc4);
        // CB C4 0234
        gbc.setState(0x2bc0, 0x2c15, 0xd8a0, 0x4755, 0xb0ce, 0xb4a5, 0x1, 0x1);
        gbc.writeMem(0x2bc0, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x2c15);
        EXPECT(gbc.pc(), 0x2bc2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C4 0235
        gbc.setState(0x17b2, 0xd11f, 0x1430, 0x9e1d, 0xdf9b, 0x46ae, 0x0, 0x0);
        gbc.writeMem(0x17b2, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0xd11f);
        EXPECT(gbc.pc(), 0x17b4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C4 0236
        gbc.setState(0xac0a, 0xe9b4, 0x8880, 0x18f7, 0x7a5e, 0xbb2c, 0x1, 0x0);
        gbc.writeMem(0xac0a, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0xe9b4);
        EXPECT(gbc.pc(), 0xac0c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xac0a), 0xcb);
        EXPECT(gbc.readMem(0xac0b), 0xc4);
        // CB C4 0237
        gbc.setState(0x11e9, 0xd36c, 0x23a0, 0xb819, 0x7261, 0xd57d, 0x1, 0x0);
        gbc.writeMem(0x11e9, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xd36c);
        EXPECT(gbc.pc(), 0x11eb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C4 0238
        gbc.setState(0xb73b, 0xd741, 0x6fd0, 0xb91b, 0xf186, 0x4905, 0x0, 0x0);
        gbc.writeMem(0xb73b, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0xd741);
        EXPECT(gbc.pc(), 0xb73d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb73b), 0xcb);
        EXPECT(gbc.readMem(0xb73c), 0xc4);
        // CB C4 0239
        gbc.setState(0xa690, 0x8220, 0xc720, 0xbec8, 0x70f0, 0xc80a, 0x0, 0x0);
        gbc.writeMem(0xa690, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x8220);
        EXPECT(gbc.pc(), 0xa692);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa690), 0xcb);
        EXPECT(gbc.readMem(0xa691), 0xc4);
        // CB C4 023A
        gbc.setState(0x2a09, 0xa9c0, 0xc990, 0xf20b, 0xbb69, 0x8793, 0x0, 0x0);
        gbc.writeMem(0x2a09, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0xa9c0);
        EXPECT(gbc.pc(), 0x2a0b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C4 023B
        gbc.setState(0x9d00, 0xdf13, 0x3ae0, 0x41e4, 0xa976, 0x753e, 0x0, 0x1);
        gbc.writeMem(0x9d00, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0xdf13);
        EXPECT(gbc.pc(), 0x9d02);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9d00), 0xcb);
        EXPECT(gbc.readMem(0x9d01), 0xc4);
        // CB C4 023C
        gbc.setState(0x5780, 0x15af, 0x8de0, 0x5cfd, 0x723, 0x88fc, 0x0, 0x1);
        gbc.writeMem(0x5780, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x15af);
        EXPECT(gbc.pc(), 0x5782);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C4 023D
        gbc.setState(0xd17c, 0x4e9f, 0xd2a0, 0xee91, 0x91ff, 0x51d4, 0x1, 0x1);
        gbc.writeMem(0xd17c, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x4e9f);
        EXPECT(gbc.pc(), 0xd17e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd17c), 0xcb);
        EXPECT(gbc.readMem(0xd17d), 0xc4);
        // CB C4 023F
        gbc.setState(0x1e7, 0x99a0, 0xc810, 0x4489, 0x7b15, 0xe4bf, 0x1, 0x1);
        gbc.writeMem(0x1e7, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x99a0);
        EXPECT(gbc.pc(), 0x1e9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C4 0240
        gbc.setState(0x27f, 0x20dc, 0x5f50, 0x5e31, 0x2e1f, 0x3c7e, 0x0, 0x1);
        gbc.writeMem(0x27f, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x20dc);
        EXPECT(gbc.pc(), 0x281);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C4 0241
        gbc.setState(0xf1e, 0x74e3, 0x3470, 0x134a, 0x1747, 0x7bed, 0x1, 0x1);
        gbc.writeMem(0xf1e, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x74e3);
        EXPECT(gbc.pc(), 0xf20);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C4 0242
        gbc.setState(0x6ec6, 0xbedf, 0x9fd0, 0xb9b9, 0x18be, 0x2243, 0x1, 0x1);
        gbc.writeMem(0x6ec6, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xbedf);
        EXPECT(gbc.pc(), 0x6ec8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C4 0243
        gbc.setState(0x4919, 0xd7dc, 0x9720, 0x6cb0, 0x9cce, 0x901b, 0x1, 0x0);
        gbc.writeMem(0x4919, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0xd7dc);
        EXPECT(gbc.pc(), 0x491b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C4 0245
        gbc.setState(0x5ae, 0xc6a4, 0xe1f0, 0x5324, 0xffd8, 0xad3e, 0x0, 0x1);
        gbc.writeMem(0x5ae, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0xc6a4);
        EXPECT(gbc.pc(), 0x5b0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C4 0246
        gbc.setState(0xe3dd, 0xec3, 0x75f0, 0x616b, 0xab7, 0xa69e, 0x0, 0x1);
        gbc.writeMem(0xe3dd, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0xec3);
        EXPECT(gbc.pc(), 0xe3df);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe3dd), 0xcb);
        EXPECT(gbc.readMem(0xe3de), 0xc4);
        // CB C4 0247
        gbc.setState(0x850, 0xe77e, 0x220, 0x61c1, 0xe7dc, 0x9000, 0x1, 0x1);
        gbc.writeMem(0x850, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0xe77e);
        EXPECT(gbc.pc(), 0x852);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C4 0249
        gbc.setState(0x320e, 0xe51a, 0x990, 0xd8b5, 0xafd4, 0x2e4d, 0x0, 0x0);
        gbc.writeMem(0x320e, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0xe51a);
        EXPECT(gbc.pc(), 0x3210);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C4 024A
        gbc.setState(0x4d50, 0x2f7a, 0x4490, 0x32fe, 0x5b9, 0x8549, 0x1, 0x0);
        gbc.writeMem(0x4d50, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x2f7a);
        EXPECT(gbc.pc(), 0x4d52);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C4 024B
        gbc.setState(0x8158, 0x956d, 0x5190, 0xe278, 0xd183, 0xb0a9, 0x1, 0x0);
        gbc.writeMem(0x8158, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x956d);
        EXPECT(gbc.pc(), 0x815a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8158), 0xcb);
        EXPECT(gbc.readMem(0x8159), 0xc4);
        // CB C4 024C
        gbc.setState(0x9a69, 0x4138, 0x4220, 0xc5aa, 0x6208, 0x1a09, 0x1, 0x0);
        gbc.writeMem(0x9a69, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x4138);
        EXPECT(gbc.pc(), 0x9a6b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9a69), 0xcb);
        EXPECT(gbc.readMem(0x9a6a), 0xc4);
        // CB C4 024D
        gbc.setState(0xd696, 0x59c1, 0xdc80, 0xe86c, 0xa953, 0xa7ef, 0x1, 0x0);
        gbc.writeMem(0xd696, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x59c1);
        EXPECT(gbc.pc(), 0xd698);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd696), 0xcb);
        EXPECT(gbc.readMem(0xd697), 0xc4);
        // CB C4 024E
        gbc.setState(0x5b92, 0x88a, 0x9ee0, 0x867f, 0x36c6, 0xce3b, 0x0, 0x0);
        gbc.writeMem(0x5b92, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x88a);
        EXPECT(gbc.pc(), 0x5b94);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C4 0250
        gbc.setState(0x9d08, 0xf46, 0x8420, 0x2d4f, 0xe6f0, 0xa25d, 0x1, 0x1);
        gbc.writeMem(0x9d08, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xf46);
        EXPECT(gbc.pc(), 0x9d0a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9d08), 0xcb);
        EXPECT(gbc.readMem(0x9d09), 0xc4);
        // CB C4 0251
        gbc.setState(0x1a6b, 0xfa3b, 0xbb90, 0x938, 0x35cd, 0x518f, 0x1, 0x1);
        gbc.writeMem(0x1a6b, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xfa3b);
        EXPECT(gbc.pc(), 0x1a6d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C4 0252
        gbc.setState(0xed0f, 0x188d, 0x6fd0, 0xc4e7, 0x409d, 0x38b, 0x0, 0x0);
        gbc.writeMem(0xed0f, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x188d);
        EXPECT(gbc.pc(), 0xed11);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xed0f), 0xcb);
        EXPECT(gbc.readMem(0xed10), 0xc4);
        // CB C4 0254
        gbc.setState(0x58d9, 0x758, 0x5760, 0x4e0d, 0x93d3, 0x47f8, 0x1, 0x1);
        gbc.writeMem(0x58d9, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x758);
        EXPECT(gbc.pc(), 0x58db);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C4 0255
        gbc.setState(0x5f2d, 0xa9b5, 0x34d0, 0x386, 0xf1e8, 0x7cb4, 0x1, 0x0);
        gbc.writeMem(0x5f2d, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xa9b5);
        EXPECT(gbc.pc(), 0x5f2f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C4 0256
        gbc.setState(0x83cd, 0xa1a2, 0x4f10, 0x4e44, 0xd03e, 0x9192, 0x1, 0x0);
        gbc.writeMem(0x83cd, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0xa1a2);
        EXPECT(gbc.pc(), 0x83cf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x83cd), 0xcb);
        EXPECT(gbc.readMem(0x83ce), 0xc4);
        // CB C4 0257
        gbc.setState(0x8758, 0xc7ed, 0xab60, 0xac5d, 0x8bb9, 0xc544, 0x1, 0x0);
        gbc.writeMem(0x8758, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xc7ed);
        EXPECT(gbc.pc(), 0x875a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8758), 0xcb);
        EXPECT(gbc.readMem(0x8759), 0xc4);
        // CB C4 0258
        gbc.setState(0x5561, 0xda4a, 0x8670, 0xe13b, 0x5c72, 0xccc3, 0x0, 0x0);
        gbc.writeMem(0x5561, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xda4a);
        EXPECT(gbc.pc(), 0x5563);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C4 0259
        gbc.setState(0xa13d, 0x36bd, 0x4210, 0x3511, 0x4f9c, 0x337e, 0x0, 0x1);
        gbc.writeMem(0xa13d, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x36bd);
        EXPECT(gbc.pc(), 0xa13f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa13d), 0xcb);
        EXPECT(gbc.readMem(0xa13e), 0xc4);
        // CB C4 025A
        gbc.setState(0x4d4e, 0xaba4, 0xade0, 0xf6bb, 0x7f82, 0x56a9, 0x1, 0x0);
        gbc.writeMem(0x4d4e, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0xaba4);
        EXPECT(gbc.pc(), 0x4d50);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C4 025B
        gbc.setState(0x88ba, 0xae1, 0x3960, 0xabb7, 0x7535, 0xc55a, 0x1, 0x1);
        gbc.writeMem(0x88ba, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0xae1);
        EXPECT(gbc.pc(), 0x88bc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x88ba), 0xcb);
        EXPECT(gbc.readMem(0x88bb), 0xc4);
        // CB C4 025C
        gbc.setState(0x57b7, 0xb80, 0x9820, 0x4e9c, 0x266, 0x5404, 0x0, 0x0);
        gbc.writeMem(0x57b7, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0xb80);
        EXPECT(gbc.pc(), 0x57b9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C4 025D
        gbc.setState(0xbe7, 0x94cb, 0x9170, 0x97e8, 0x278a, 0x90e6, 0x0, 0x1);
        gbc.writeMem(0xbe7, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x94cb);
        EXPECT(gbc.pc(), 0xbe9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C4 025E
        gbc.setState(0x8293, 0x945e, 0x5b70, 0x6d12, 0x31a6, 0x134c, 0x0, 0x0);
        gbc.writeMem(0x8293, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x945e);
        EXPECT(gbc.pc(), 0x8295);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8293), 0xcb);
        EXPECT(gbc.readMem(0x8294), 0xc4);
        // CB C4 0260
        gbc.setState(0x70b8, 0x3a9b, 0x2c50, 0x8309, 0x67c, 0x543c, 0x0, 0x0);
        gbc.writeMem(0x70b8, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x3a9b);
        EXPECT(gbc.pc(), 0x70ba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C4 0261
        gbc.setState(0x8706, 0xb7a2, 0x5740, 0x5ece, 0x352e, 0x8ef9, 0x0, 0x0);
        gbc.writeMem(0x8706, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xb7a2);
        EXPECT(gbc.pc(), 0x8708);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8706), 0xcb);
        EXPECT(gbc.readMem(0x8707), 0xc4);
        // CB C4 0262
        gbc.setState(0xee52, 0x39ef, 0x71f0, 0xc047, 0xfc2e, 0x7782, 0x1, 0x0);
        gbc.writeMem(0xee52, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x39ef);
        EXPECT(gbc.pc(), 0xee54);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xee52), 0xcb);
        EXPECT(gbc.readMem(0xee53), 0xc4);
        // CB C4 0263
        gbc.setState(0x739a, 0x42f0, 0x17f0, 0x10fd, 0xfa13, 0xc9ed, 0x1, 0x1);
        gbc.writeMem(0x739a, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x42f0);
        EXPECT(gbc.pc(), 0x739c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C4 0264
        gbc.setState(0x4a29, 0x6c07, 0x8c70, 0xdf56, 0x4e81, 0x1be1, 0x0, 0x1);
        gbc.writeMem(0x4a29, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x6c07);
        EXPECT(gbc.pc(), 0x4a2b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C4 0265
        gbc.setState(0x97c1, 0x334, 0xa980, 0x26d2, 0x1ce7, 0xc06f, 0x0, 0x0);
        gbc.writeMem(0x97c1, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x334);
        EXPECT(gbc.pc(), 0x97c3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x97c1), 0xcb);
        EXPECT(gbc.readMem(0x97c2), 0xc4);
        // CB C4 0267
        gbc.setState(0x79d7, 0xc0c5, 0x6160, 0xd806, 0x5416, 0xe974, 0x0, 0x0);
        gbc.writeMem(0x79d7, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xc0c5);
        EXPECT(gbc.pc(), 0x79d9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C4 0269
        gbc.setState(0x8576, 0x37a5, 0xc110, 0xe2fe, 0xf2d9, 0x8635, 0x0, 0x0);
        gbc.writeMem(0x8576, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x37a5);
        EXPECT(gbc.pc(), 0x8578);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8576), 0xcb);
        EXPECT(gbc.readMem(0x8577), 0xc4);
        // CB C4 026A
        gbc.setState(0x71db, 0xbc38, 0xd710, 0x55cd, 0xff, 0xa505, 0x1, 0x1);
        gbc.writeMem(0x71db, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0xbc38);
        EXPECT(gbc.pc(), 0x71dd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C4 026B
        gbc.setState(0xb6b4, 0xebbc, 0xa820, 0xa82c, 0xef1e, 0xe502, 0x0, 0x0);
        gbc.writeMem(0xb6b4, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xebbc);
        EXPECT(gbc.pc(), 0xb6b6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb6b4), 0xcb);
        EXPECT(gbc.readMem(0xb6b5), 0xc4);
        // CB C4 026C
        gbc.setState(0x924d, 0x6951, 0xb0a0, 0x659, 0x731a, 0xe48c, 0x1, 0x1);
        gbc.writeMem(0x924d, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x6951);
        EXPECT(gbc.pc(), 0x924f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x924d), 0xcb);
        EXPECT(gbc.readMem(0x924e), 0xc4);
        // CB C4 026D
        gbc.setState(0xb5f1, 0xe67e, 0x21c0, 0xf962, 0xe68e, 0xe11b, 0x0, 0x0);
        gbc.writeMem(0xb5f1, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0xe67e);
        EXPECT(gbc.pc(), 0xb5f3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb5f1), 0xcb);
        EXPECT(gbc.readMem(0xb5f2), 0xc4);
        // CB C4 026E
        gbc.setState(0x5e2a, 0x1562, 0x1730, 0xe985, 0xefb0, 0xfa93, 0x0, 0x1);
        gbc.writeMem(0x5e2a, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x1562);
        EXPECT(gbc.pc(), 0x5e2c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C4 026F
        gbc.setState(0x3a32, 0xbf6f, 0xc4c0, 0xb4c4, 0xc162, 0xd78d, 0x0, 0x0);
        gbc.writeMem(0x3a32, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0xbf6f);
        EXPECT(gbc.pc(), 0x3a34);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C4 0270
        gbc.setState(0x67db, 0xaf90, 0xc6d0, 0x211b, 0x1ef4, 0xc54a, 0x0, 0x0);
        gbc.writeMem(0x67db, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xaf90);
        EXPECT(gbc.pc(), 0x67dd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C4 0271
        gbc.setState(0x7592, 0x1753, 0x1260, 0x9914, 0x811f, 0xfa71, 0x1, 0x0);
        gbc.writeMem(0x7592, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x1753);
        EXPECT(gbc.pc(), 0x7594);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C4 0272
        gbc.setState(0x71d2, 0xcf6d, 0x3630, 0x36ae, 0xc6f5, 0x1912, 0x1, 0x0);
        gbc.writeMem(0x71d2, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0xcf6d);
        EXPECT(gbc.pc(), 0x71d4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C4 0273
        gbc.setState(0x6ee, 0xce30, 0xe270, 0x7714, 0x83ea, 0xe899, 0x1, 0x1);
        gbc.writeMem(0x6ee, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0xce30);
        EXPECT(gbc.pc(), 0x6f0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C4 0274
        gbc.setState(0x9d26, 0xc108, 0xa760, 0x2da2, 0xbf22, 0xa473, 0x0, 0x0);
        gbc.writeMem(0x9d26, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0xc108);
        EXPECT(gbc.pc(), 0x9d28);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9d26), 0xcb);
        EXPECT(gbc.readMem(0x9d27), 0xc4);
        // CB C4 0275
        gbc.setState(0x5a5f, 0x38e1, 0xf090, 0x362, 0xdfaa, 0x57c, 0x0, 0x1);
        gbc.writeMem(0x5a5f, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x38e1);
        EXPECT(gbc.pc(), 0x5a61);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C4 0276
        gbc.setState(0xbf13, 0xb2a, 0x6f30, 0xa099, 0xed38, 0x38b, 0x0, 0x0);
        gbc.writeMem(0xbf13, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0xb2a);
        EXPECT(gbc.pc(), 0xbf15);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbf13), 0xcb);
        EXPECT(gbc.readMem(0xbf14), 0xc4);
        // CB C4 0277
        gbc.setState(0x3479, 0x7a13, 0x5100, 0x92b3, 0x59a5, 0x555b, 0x0, 0x1);
        gbc.writeMem(0x3479, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x7a13);
        EXPECT(gbc.pc(), 0x347b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C4 0278
        gbc.setState(0x7d1d, 0x60bc, 0xb190, 0xd697, 0x30da, 0xd91e, 0x1, 0x1);
        gbc.writeMem(0x7d1d, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x60bc);
        EXPECT(gbc.pc(), 0x7d1f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C4 0279
        gbc.setState(0xa72e, 0xb949, 0xa080, 0x4bc6, 0x8f93, 0xbb43, 0x1, 0x1);
        gbc.writeMem(0xa72e, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xb949);
        EXPECT(gbc.pc(), 0xa730);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa72e), 0xcb);
        EXPECT(gbc.readMem(0xa72f), 0xc4);
        // CB C4 027A
        gbc.setState(0x50a7, 0x7f78, 0x86f0, 0x6ff9, 0x3d4c, 0xed6c, 0x1, 0x1);
        gbc.writeMem(0x50a7, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x7f78);
        EXPECT(gbc.pc(), 0x50a9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C4 027B
        gbc.setState(0x6c04, 0xf649, 0x870, 0xd258, 0xc23, 0xe1ec, 0x1, 0x0);
        gbc.writeMem(0x6c04, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0xf649);
        EXPECT(gbc.pc(), 0x6c06);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C4 027C
        gbc.setState(0xbe5e, 0x682c, 0x3a50, 0x7156, 0xc353, 0xc22c, 0x0, 0x1);
        gbc.writeMem(0xbe5e, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x682c);
        EXPECT(gbc.pc(), 0xbe60);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbe5e), 0xcb);
        EXPECT(gbc.readMem(0xbe5f), 0xc4);
        // CB C4 027D
        gbc.setState(0x986e, 0x1c6, 0xf760, 0xb742, 0xd1a9, 0x9928, 0x1, 0x1);
        gbc.writeMem(0x986e, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x1c6);
        EXPECT(gbc.pc(), 0x9870);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x986e), 0xcb);
        EXPECT(gbc.readMem(0x986f), 0xc4);
        // CB C4 027E
        gbc.setState(0x6757, 0xed76, 0x2f90, 0x8aac, 0xbd0f, 0xbb4b, 0x0, 0x0);
        gbc.writeMem(0x6757, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0xed76);
        EXPECT(gbc.pc(), 0x6759);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C4 027F
        gbc.setState(0x280f, 0x1d7e, 0xdde0, 0x5ad, 0x2c35, 0xe1ec, 0x0, 0x1);
        gbc.writeMem(0x280f, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x1d7e);
        EXPECT(gbc.pc(), 0x2811);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C4 0280
        gbc.setState(0x6023, 0x5e4a, 0xf6c0, 0x778c, 0x8f09, 0xd97, 0x0, 0x1);
        gbc.writeMem(0x6023, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x5e4a);
        EXPECT(gbc.pc(), 0x6025);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C4 0281
        gbc.setState(0x602b, 0x9644, 0xc920, 0xed20, 0x8ac6, 0x885, 0x1, 0x1);
        gbc.writeMem(0x602b, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x9644);
        EXPECT(gbc.pc(), 0x602d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C4 0282
        gbc.setState(0xaa6e, 0x97c2, 0x6b00, 0x866d, 0xa71, 0x6b91, 0x1, 0x0);
        gbc.writeMem(0xaa6e, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x97c2);
        EXPECT(gbc.pc(), 0xaa70);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaa6e), 0xcb);
        EXPECT(gbc.readMem(0xaa6f), 0xc4);
        // CB C4 0283
        gbc.setState(0xb918, 0x9268, 0x2720, 0x7aa7, 0xe984, 0x89c1, 0x0, 0x0);
        gbc.writeMem(0xb918, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x9268);
        EXPECT(gbc.pc(), 0xb91a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb918), 0xcb);
        EXPECT(gbc.readMem(0xb919), 0xc4);
        // CB C4 0284
        gbc.setState(0x7ef3, 0x2316, 0x4400, 0xc32e, 0x4fc1, 0x390b, 0x0, 0x0);
        gbc.writeMem(0x7ef3, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x2316);
        EXPECT(gbc.pc(), 0x7ef5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C4 0285
        gbc.setState(0xcc63, 0x1349, 0x2f50, 0xc48d, 0x9ca7, 0x10a9, 0x0, 0x1);
        gbc.writeMem(0xcc63, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x1349);
        EXPECT(gbc.pc(), 0xcc65);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcc63), 0xcb);
        EXPECT(gbc.readMem(0xcc64), 0xc4);
        // CB C4 0286
        gbc.setState(0xca94, 0x7dad, 0xee30, 0x2bb3, 0xb27b, 0x8b2d, 0x1, 0x0);
        gbc.writeMem(0xca94, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x7dad);
        EXPECT(gbc.pc(), 0xca96);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xca94), 0xcb);
        EXPECT(gbc.readMem(0xca95), 0xc4);
        // CB C4 0287
        gbc.setState(0x55d2, 0xe012, 0xf6d0, 0x2c0d, 0x6bd2, 0xf076, 0x1, 0x0);
        gbc.writeMem(0x55d2, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0xe012);
        EXPECT(gbc.pc(), 0x55d4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C4 0288
        gbc.setState(0x1152, 0xce57, 0x58f0, 0xa1ad, 0x7995, 0xe5d1, 0x0, 0x1);
        gbc.writeMem(0x1152, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0xce57);
        EXPECT(gbc.pc(), 0x1154);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C4 0289
        gbc.setState(0xcb72, 0x5c94, 0x7760, 0xe093, 0xcb4f, 0x7c44, 0x0, 0x1);
        gbc.writeMem(0xcb72, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x5c94);
        EXPECT(gbc.pc(), 0xcb74);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcb72), 0xcb);
        EXPECT(gbc.readMem(0xcb73), 0xc4);
        // CB C4 028A
        gbc.setState(0xcacb, 0xacca, 0xb3d0, 0x18b2, 0x6ee1, 0x5377, 0x1, 0x0);
        gbc.writeMem(0xcacb, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xacca);
        EXPECT(gbc.pc(), 0xcacd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcacb), 0xcb);
        EXPECT(gbc.readMem(0xcacc), 0xc4);
        // CB C4 028B
        gbc.setState(0x804c, 0xa169, 0x90, 0x7636, 0x7606, 0x27df, 0x0, 0x1);
        gbc.writeMem(0x804c, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0xa169);
        EXPECT(gbc.pc(), 0x804e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x804c), 0xcb);
        EXPECT(gbc.readMem(0x804d), 0xc4);
        // CB C4 028C
        gbc.setState(0x3195, 0x6dad, 0xa3b0, 0x6377, 0x2f69, 0xc728, 0x0, 0x0);
        gbc.writeMem(0x3195, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x6dad);
        EXPECT(gbc.pc(), 0x3197);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C4 028D
        gbc.setState(0xed32, 0x9be8, 0x5490, 0x2f94, 0xe79f, 0x894c, 0x1, 0x1);
        gbc.writeMem(0xed32, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x9be8);
        EXPECT(gbc.pc(), 0xed34);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xed32), 0xcb);
        EXPECT(gbc.readMem(0xed33), 0xc4);
        // CB C4 028E
        gbc.setState(0xa835, 0x207c, 0x2db0, 0xb3a0, 0xa242, 0x537d, 0x1, 0x1);
        gbc.writeMem(0xa835, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x207c);
        EXPECT(gbc.pc(), 0xa837);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa835), 0xcb);
        EXPECT(gbc.readMem(0xa836), 0xc4);
        // CB C4 0290
        gbc.setState(0xd1ca, 0x16c5, 0xd4b0, 0x2f69, 0xe5cc, 0x2e45, 0x1, 0x0);
        gbc.writeMem(0xd1ca, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x16c5);
        EXPECT(gbc.pc(), 0xd1cc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd1ca), 0xcb);
        EXPECT(gbc.readMem(0xd1cb), 0xc4);
        // CB C4 0292
        gbc.setState(0xaf65, 0xa797, 0x1990, 0x48f, 0x5eb2, 0x2e29, 0x1, 0x1);
        gbc.writeMem(0xaf65, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0xa797);
        EXPECT(gbc.pc(), 0xaf67);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaf65), 0xcb);
        EXPECT(gbc.readMem(0xaf66), 0xc4);
        // CB C4 0293
        gbc.setState(0x15d8, 0x9baf, 0xe0d0, 0x266e, 0x6f8, 0x5e26, 0x0, 0x1);
        gbc.writeMem(0x15d8, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x9baf);
        EXPECT(gbc.pc(), 0x15da);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C4 0294
        gbc.setState(0x306, 0x9b70, 0x2b50, 0xf99f, 0x47d5, 0x5db3, 0x1, 0x0);
        gbc.writeMem(0x306, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x9b70);
        EXPECT(gbc.pc(), 0x308);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C4 0295
        gbc.setState(0x7da9, 0xddc8, 0xbce0, 0x3d87, 0xc5b5, 0xd177, 0x0, 0x0);
        gbc.writeMem(0x7da9, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xddc8);
        EXPECT(gbc.pc(), 0x7dab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C4 0296
        gbc.setState(0x6f21, 0x9731, 0xded0, 0xbbc3, 0xf3de, 0x8730, 0x1, 0x0);
        gbc.writeMem(0x6f21, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x9731);
        EXPECT(gbc.pc(), 0x6f23);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C4 0298
        gbc.setState(0xcb89, 0x810a, 0xa2d0, 0x9a77, 0x61af, 0x6abf, 0x1, 0x0);
        gbc.writeMem(0xcb89, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x810a);
        EXPECT(gbc.pc(), 0xcb8b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcb89), 0xcb);
        EXPECT(gbc.readMem(0xcb8a), 0xc4);
        // CB C4 0299
        gbc.setState(0xba44, 0xbe54, 0x3a70, 0xf426, 0xe4a1, 0xf6b4, 0x1, 0x0);
        gbc.writeMem(0xba44, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xbe54);
        EXPECT(gbc.pc(), 0xba46);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xba44), 0xcb);
        EXPECT(gbc.readMem(0xba45), 0xc4);
        // CB C4 029A
        gbc.setState(0x8d36, 0xd88a, 0xf00, 0xd17b, 0xd04a, 0x5b8f, 0x0, 0x0);
        gbc.writeMem(0x8d36, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xd88a);
        EXPECT(gbc.pc(), 0x8d38);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d36), 0xcb);
        EXPECT(gbc.readMem(0x8d37), 0xc4);
        // CB C4 029B
        gbc.setState(0xc439, 0xafa3, 0x3df0, 0x92d4, 0x376f, 0x14a, 0x0, 0x1);
        gbc.writeMem(0xc439, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xafa3);
        EXPECT(gbc.pc(), 0xc43b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc439), 0xcb);
        EXPECT(gbc.readMem(0xc43a), 0xc4);
        // CB C4 029C
        gbc.setState(0x36f2, 0xd9ca, 0x1140, 0x4a55, 0x4a96, 0xed32, 0x0, 0x1);
        gbc.writeMem(0x36f2, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xd9ca);
        EXPECT(gbc.pc(), 0x36f4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C4 029D
        gbc.setState(0x4b20, 0xa35d, 0xbab0, 0x1af5, 0xf3bb, 0x942e, 0x0, 0x0);
        gbc.writeMem(0x4b20, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xa35d);
        EXPECT(gbc.pc(), 0x4b22);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C4 029F
        gbc.setState(0x3044, 0xbed6, 0x5b10, 0x132a, 0x8a10, 0x5c83, 0x0, 0x0);
        gbc.writeMem(0x3044, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0xbed6);
        EXPECT(gbc.pc(), 0x3046);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C4 02A0
        gbc.setState(0x7974, 0x5af2, 0x76c0, 0x45d7, 0x1a5c, 0xdf89, 0x1, 0x0);
        gbc.writeMem(0x7974, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x5af2);
        EXPECT(gbc.pc(), 0x7976);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C4 02A1
        gbc.setState(0x6d04, 0x90a3, 0xb1f0, 0x7abb, 0xabfe, 0x201, 0x1, 0x1);
        gbc.writeMem(0x6d04, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x90a3);
        EXPECT(gbc.pc(), 0x6d06);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C4 02A2
        gbc.setState(0x4380, 0x7833, 0xf6c0, 0x6050, 0x27d7, 0x55a5, 0x0, 0x0);
        gbc.writeMem(0x4380, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x7833);
        EXPECT(gbc.pc(), 0x4382);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C4 02A3
        gbc.setState(0x5c4a, 0xf2a6, 0x85b0, 0x5c8c, 0x764d, 0x738, 0x1, 0x0);
        gbc.writeMem(0x5c4a, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0xf2a6);
        EXPECT(gbc.pc(), 0x5c4c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C4 02A4
        gbc.setState(0x7b67, 0x713f, 0xaa60, 0x3eb6, 0x29d6, 0x523b, 0x1, 0x0);
        gbc.writeMem(0x7b67, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x713f);
        EXPECT(gbc.pc(), 0x7b69);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C4 02A5
        gbc.setState(0x5b34, 0x8bc7, 0x6020, 0x689c, 0x4a1c, 0x7828, 0x0, 0x1);
        gbc.writeMem(0x5b34, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x8bc7);
        EXPECT(gbc.pc(), 0x5b36);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C4 02A6
        gbc.setState(0x4, 0xc933, 0x2d20, 0xb0e0, 0x1171, 0x1f34, 0x0, 0x0);
        gbc.writeMem(0x4, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xc933);
        EXPECT(gbc.pc(), 0x6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C4 02A7
        gbc.setState(0x9b6f, 0x6212, 0x3b0, 0xc3fa, 0xd6cc, 0x8360, 0x1, 0x0);
        gbc.writeMem(0x9b6f, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x6212);
        EXPECT(gbc.pc(), 0x9b71);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9b6f), 0xcb);
        EXPECT(gbc.readMem(0x9b70), 0xc4);
        // CB C4 02A8
        gbc.setState(0x712f, 0x5038, 0x4cc0, 0x5588, 0xacbe, 0x908b, 0x1, 0x1);
        gbc.writeMem(0x712f, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x5038);
        EXPECT(gbc.pc(), 0x7131);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C4 02A9
        gbc.setState(0x17, 0xb66a, 0x8410, 0xb610, 0xa438, 0x8dbd, 0x1, 0x1);
        gbc.writeMem(0x17, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0xb66a);
        EXPECT(gbc.pc(), 0x19);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C4 02AA
        gbc.setState(0x5f0a, 0xa0, 0xe900, 0x73b5, 0x250e, 0x9066, 0x1, 0x0);
        gbc.writeMem(0x5f0a, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0xa0);
        EXPECT(gbc.pc(), 0x5f0c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C4 02AB
        gbc.setState(0x7109, 0xb3dc, 0x68f0, 0xfecc, 0x967a, 0x8eac, 0x0, 0x0);
        gbc.writeMem(0x7109, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0xb3dc);
        EXPECT(gbc.pc(), 0x710b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C4 02AC
        gbc.setState(0x84e1, 0xb2d7, 0x93c0, 0x6189, 0xb74c, 0xd46, 0x1, 0x1);
        gbc.writeMem(0x84e1, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0xb2d7);
        EXPECT(gbc.pc(), 0x84e3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x84e1), 0xcb);
        EXPECT(gbc.readMem(0x84e2), 0xc4);
        // CB C4 02AD
        gbc.setState(0x4371, 0xd220, 0x5860, 0x67ab, 0xe8f8, 0x1c8f, 0x0, 0x0);
        gbc.writeMem(0x4371, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xd220);
        EXPECT(gbc.pc(), 0x4373);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C4 02AE
        gbc.setState(0x972b, 0xc404, 0xf8e0, 0xf3a0, 0x9ec0, 0x9e2d, 0x0, 0x1);
        gbc.writeMem(0x972b, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0xc404);
        EXPECT(gbc.pc(), 0x972d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x972b), 0xcb);
        EXPECT(gbc.readMem(0x972c), 0xc4);
        // CB C4 02AF
        gbc.setState(0x4857, 0x8b91, 0x8a70, 0x7c2b, 0x171e, 0x5ba2, 0x1, 0x0);
        gbc.writeMem(0x4857, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x8b91);
        EXPECT(gbc.pc(), 0x4859);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C4 02B0
        gbc.setState(0x4aed, 0x512d, 0xfee0, 0xb517, 0x4f5f, 0xdc79, 0x1, 0x1);
        gbc.writeMem(0x4aed, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x512d);
        EXPECT(gbc.pc(), 0x4aef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C4 02B1
        gbc.setState(0x2a25, 0x719d, 0x4450, 0x35fb, 0xa5ed, 0x6690, 0x0, 0x1);
        gbc.writeMem(0x2a25, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x719d);
        EXPECT(gbc.pc(), 0x2a27);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C4 02B2
        gbc.setState(0x7f24, 0x9299, 0x6340, 0x36db, 0x94f4, 0xae76, 0x1, 0x1);
        gbc.writeMem(0x7f24, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x9299);
        EXPECT(gbc.pc(), 0x7f26);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C4 02B3
        gbc.setState(0xc2e1, 0xade5, 0x72c0, 0x8f2e, 0x50fc, 0x9722, 0x0, 0x1);
        gbc.writeMem(0xc2e1, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0xade5);
        EXPECT(gbc.pc(), 0xc2e3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc2e1), 0xcb);
        EXPECT(gbc.readMem(0xc2e2), 0xc4);
        // CB C4 02B4
        gbc.setState(0x51a8, 0x9b4b, 0x35a0, 0x63f6, 0xcc33, 0xb417, 0x0, 0x0);
        gbc.writeMem(0x51a8, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x9b4b);
        EXPECT(gbc.pc(), 0x51aa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C4 02B6
        gbc.setState(0xa553, 0x3b3b, 0xbe20, 0x9c8, 0xdcac, 0xc805, 0x1, 0x1);
        gbc.writeMem(0xa553, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x3b3b);
        EXPECT(gbc.pc(), 0xa555);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa553), 0xcb);
        EXPECT(gbc.readMem(0xa554), 0xc4);
        // CB C4 02B7
        gbc.setState(0x9929, 0xda38, 0xa6d0, 0x7efe, 0x5fce, 0xce88, 0x0, 0x1);
        gbc.writeMem(0x9929, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0xda38);
        EXPECT(gbc.pc(), 0x992b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9929), 0xcb);
        EXPECT(gbc.readMem(0x992a), 0xc4);
        // CB C4 02B8
        gbc.setState(0x5f9e, 0x84df, 0x94a0, 0xce4, 0x7800, 0x7a13, 0x1, 0x0);
        gbc.writeMem(0x5f9e, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x84df);
        EXPECT(gbc.pc(), 0x5fa0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C4 02B9
        gbc.setState(0x8d5a, 0x82c5, 0x7680, 0xd3f0, 0xc7ae, 0xcf9f, 0x0, 0x1);
        gbc.writeMem(0x8d5a, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x82c5);
        EXPECT(gbc.pc(), 0x8d5c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d5a), 0xcb);
        EXPECT(gbc.readMem(0x8d5b), 0xc4);
        // CB C4 02BA
        gbc.setState(0x30b6, 0x740e, 0xce00, 0xf8bc, 0x9d07, 0x2265, 0x1, 0x0);
        gbc.writeMem(0x30b6, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x740e);
        EXPECT(gbc.pc(), 0x30b8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C4 02BB
        gbc.setState(0x60ba, 0x41e8, 0xd090, 0x3ef2, 0x4b12, 0xa811, 0x0, 0x1);
        gbc.writeMem(0x60ba, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x41e8);
        EXPECT(gbc.pc(), 0x60bc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C4 02BC
        gbc.setState(0x5b9b, 0xd7e3, 0xed0, 0xc05b, 0x6cb9, 0xa89e, 0x1, 0x0);
        gbc.writeMem(0x5b9b, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0xd7e3);
        EXPECT(gbc.pc(), 0x5b9d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C4 02BE
        gbc.setState(0x8a8c, 0x7b80, 0xe710, 0x776b, 0x8d4d, 0x7172, 0x0, 0x0);
        gbc.writeMem(0x8a8c, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x7b80);
        EXPECT(gbc.pc(), 0x8a8e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8a8c), 0xcb);
        EXPECT(gbc.readMem(0x8a8d), 0xc4);
        // CB C4 02BF
        gbc.setState(0x246b, 0x898a, 0xb730, 0xe9cb, 0xb1c1, 0x84a2, 0x0, 0x0);
        gbc.writeMem(0x246b, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x898a);
        EXPECT(gbc.pc(), 0x246d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C4 02C0
        gbc.setState(0x6bf7, 0x480a, 0x75c0, 0xdd54, 0x6427, 0x25a2, 0x0, 0x0);
        gbc.writeMem(0x6bf7, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x480a);
        EXPECT(gbc.pc(), 0x6bf9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C4 02C1
        gbc.setState(0x8f98, 0xcdef, 0xcf40, 0x82a8, 0xc5b4, 0xcf8a, 0x0, 0x0);
        gbc.writeMem(0x8f98, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xcdef);
        EXPECT(gbc.pc(), 0x8f9a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8f98), 0xcb);
        EXPECT(gbc.readMem(0x8f99), 0xc4);
        // CB C4 02C2
        gbc.setState(0xcbd9, 0x5e98, 0xe4a0, 0x4c08, 0xfb60, 0xcceb, 0x1, 0x0);
        gbc.writeMem(0xcbd9, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x5e98);
        EXPECT(gbc.pc(), 0xcbdb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcbd9), 0xcb);
        EXPECT(gbc.readMem(0xcbda), 0xc4);
        // CB C4 02C3
        gbc.setState(0x54dc, 0x6eb0, 0x4410, 0x540f, 0xbb05, 0x9400, 0x1, 0x0);
        gbc.writeMem(0x54dc, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x6eb0);
        EXPECT(gbc.pc(), 0x54de);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C4 02C4
        gbc.setState(0x783c, 0x9a25, 0x8a20, 0xef22, 0x9014, 0x6d9a, 0x0, 0x1);
        gbc.writeMem(0x783c, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x9a25);
        EXPECT(gbc.pc(), 0x783e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C4 02C5
        gbc.setState(0x6607, 0xba33, 0x1140, 0xe189, 0xab1, 0x3a58, 0x0, 0x0);
        gbc.writeMem(0x6607, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0xba33);
        EXPECT(gbc.pc(), 0x6609);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C4 02C6
        gbc.setState(0x1091, 0x5550, 0x310, 0x7220, 0x376a, 0xffd8, 0x1, 0x1);
        gbc.writeMem(0x1091, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x5550);
        EXPECT(gbc.pc(), 0x1093);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C4 02C7
        gbc.setState(0x76a3, 0xd0ef, 0x1040, 0x5c31, 0xe9, 0x3786, 0x1, 0x1);
        gbc.writeMem(0x76a3, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0xd0ef);
        EXPECT(gbc.pc(), 0x76a5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C4 02C8
        gbc.setState(0x1c38, 0x3912, 0x26e0, 0xd6be, 0x61a0, 0x2845, 0x1, 0x1);
        gbc.writeMem(0x1c38, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x3912);
        EXPECT(gbc.pc(), 0x1c3a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C4 02C9
        gbc.setState(0x792e, 0xdcb5, 0xbaa0, 0x98da, 0x993a, 0xb4dc, 0x1, 0x0);
        gbc.writeMem(0x792e, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0xdcb5);
        EXPECT(gbc.pc(), 0x7930);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C4 02CA
        gbc.setState(0x2f14, 0x216d, 0x5840, 0xa3bb, 0xdea7, 0xd90d, 0x0, 0x0);
        gbc.writeMem(0x2f14, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x216d);
        EXPECT(gbc.pc(), 0x2f16);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C4 02CB
        gbc.setState(0x9184, 0xe321, 0x7710, 0x23b6, 0x2d7, 0x93c7, 0x1, 0x1);
        gbc.writeMem(0x9184, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0xe321);
        EXPECT(gbc.pc(), 0x9186);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9184), 0xcb);
        EXPECT(gbc.readMem(0x9185), 0xc4);
        // CB C4 02CC
        gbc.setState(0x9410, 0x6b26, 0xe960, 0x966a, 0x908, 0x4c22, 0x0, 0x0);
        gbc.writeMem(0x9410, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x6b26);
        EXPECT(gbc.pc(), 0x9412);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9410), 0xcb);
        EXPECT(gbc.readMem(0x9411), 0xc4);
        // CB C4 02CD
        gbc.setState(0x65c6, 0xfa20, 0xe660, 0xf00e, 0xb4d8, 0xfd91, 0x0, 0x0);
        gbc.writeMem(0x65c6, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0xfa20);
        EXPECT(gbc.pc(), 0x65c8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C4 02CE
        gbc.setState(0xcf9c, 0x665c, 0x47a0, 0x8cca, 0xd832, 0xc7c5, 0x1, 0x0);
        gbc.writeMem(0xcf9c, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x665c);
        EXPECT(gbc.pc(), 0xcf9e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcf9c), 0xcb);
        EXPECT(gbc.readMem(0xcf9d), 0xc4);
        // CB C4 02CF
        gbc.setState(0x4331, 0x7f65, 0xfed0, 0xf960, 0xa459, 0x838b, 0x0, 0x1);
        gbc.writeMem(0x4331, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x7f65);
        EXPECT(gbc.pc(), 0x4333);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C4 02D0
        gbc.setState(0x9cd5, 0xaf8, 0xd660, 0x3099, 0x83fc, 0xbb23, 0x1, 0x1);
        gbc.writeMem(0x9cd5, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0xaf8);
        EXPECT(gbc.pc(), 0x9cd7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9cd5), 0xcb);
        EXPECT(gbc.readMem(0x9cd6), 0xc4);
        // CB C4 02D1
        gbc.setState(0xcc69, 0xf366, 0x7210, 0xd25d, 0xf8cc, 0x60ee, 0x1, 0x0);
        gbc.writeMem(0xcc69, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0xf366);
        EXPECT(gbc.pc(), 0xcc6b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcc69), 0xcb);
        EXPECT(gbc.readMem(0xcc6a), 0xc4);
        // CB C4 02D2
        gbc.setState(0xd142, 0xd149, 0x1880, 0x3a06, 0x5170, 0x322c, 0x0, 0x1);
        gbc.writeMem(0xd142, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0xd149);
        EXPECT(gbc.pc(), 0xd144);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd142), 0xcb);
        EXPECT(gbc.readMem(0xd143), 0xc4);
        // CB C4 02D3
        gbc.setState(0x9a3a, 0x9918, 0xc630, 0x579c, 0xb226, 0xb73b, 0x1, 0x0);
        gbc.writeMem(0x9a3a, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x9918);
        EXPECT(gbc.pc(), 0x9a3c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9a3a), 0xcb);
        EXPECT(gbc.readMem(0x9a3b), 0xc4);
        // CB C4 02D4
        gbc.setState(0x17f0, 0x7bc9, 0x2000, 0xb382, 0x21e1, 0x3ccf, 0x1, 0x1);
        gbc.writeMem(0x17f0, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x7bc9);
        EXPECT(gbc.pc(), 0x17f2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C4 02D5
        gbc.setState(0xc9ae, 0x2749, 0xa470, 0x84d7, 0xa59d, 0xf4dc, 0x0, 0x1);
        gbc.writeMem(0xc9ae, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x2749);
        EXPECT(gbc.pc(), 0xc9b0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc9ae), 0xcb);
        EXPECT(gbc.readMem(0xc9af), 0xc4);
        // CB C4 02D6
        gbc.setState(0xee22, 0x6209, 0xed50, 0x364b, 0x65ec, 0x39b6, 0x1, 0x1);
        gbc.writeMem(0xee22, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x6209);
        EXPECT(gbc.pc(), 0xee24);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xee22), 0xcb);
        EXPECT(gbc.readMem(0xee23), 0xc4);
        // CB C4 02D7
        gbc.setState(0x7c94, 0x127c, 0x51a0, 0xc9e8, 0x4b6f, 0x8fc7, 0x1, 0x0);
        gbc.writeMem(0x7c94, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x127c);
        EXPECT(gbc.pc(), 0x7c96);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C4 02D8
        gbc.setState(0x9ea6, 0x3529, 0xc70, 0xf737, 0x51b5, 0x226, 0x1, 0x1);
        gbc.writeMem(0x9ea6, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x3529);
        EXPECT(gbc.pc(), 0x9ea8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9ea6), 0xcb);
        EXPECT(gbc.readMem(0x9ea7), 0xc4);
        // CB C4 02D9
        gbc.setState(0x30b0, 0x105, 0xb010, 0x9c23, 0x7267, 0x8559, 0x0, 0x0);
        gbc.writeMem(0x30b0, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x105);
        EXPECT(gbc.pc(), 0x30b2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C4 02DA
        gbc.setState(0x42a, 0x2f3a, 0x4680, 0xf5ba, 0xcfab, 0xfaaf, 0x1, 0x0);
        gbc.writeMem(0x42a, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x2f3a);
        EXPECT(gbc.pc(), 0x42c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C4 02DB
        gbc.setState(0xc128, 0x7082, 0x7a20, 0xea5, 0x6c12, 0xf0d, 0x0, 0x0);
        gbc.writeMem(0xc128, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x7082);
        EXPECT(gbc.pc(), 0xc12a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc128), 0xcb);
        EXPECT(gbc.readMem(0xc129), 0xc4);
        // CB C4 02DC
        gbc.setState(0xd194, 0x823, 0x44c0, 0x276e, 0x883f, 0xd93f, 0x0, 0x0);
        gbc.writeMem(0xd194, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x823);
        EXPECT(gbc.pc(), 0xd196);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd194), 0xcb);
        EXPECT(gbc.readMem(0xd195), 0xc4);
        // CB C4 02DD
        gbc.setState(0x6320, 0x930a, 0x5ef0, 0xcc21, 0xcf66, 0xeaac, 0x1, 0x1);
        gbc.writeMem(0x6320, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x930a);
        EXPECT(gbc.pc(), 0x6322);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C4 02DE
        gbc.setState(0xe71e, 0x31d7, 0xaee0, 0xe7b9, 0x567b, 0xf557, 0x1, 0x1);
        gbc.writeMem(0xe71e, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x31d7);
        EXPECT(gbc.pc(), 0xe720);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe71e), 0xcb);
        EXPECT(gbc.readMem(0xe71f), 0xc4);
        // CB C4 02DF
        gbc.setState(0x888a, 0x893, 0xc220, 0x2100, 0xa52d, 0x1848, 0x1, 0x0);
        gbc.writeMem(0x888a, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x893);
        EXPECT(gbc.pc(), 0x888c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x888a), 0xcb);
        EXPECT(gbc.readMem(0x888b), 0xc4);
        // CB C4 02E0
        gbc.setState(0xc6b8, 0x529e, 0x6210, 0x2913, 0x9669, 0x4713, 0x1, 0x0);
        gbc.writeMem(0xc6b8, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x529e);
        EXPECT(gbc.pc(), 0xc6ba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc6b8), 0xcb);
        EXPECT(gbc.readMem(0xc6b9), 0xc4);
        // CB C4 02E1
        gbc.setState(0x733a, 0xa15, 0x48e0, 0xff2, 0x2fa8, 0x488e, 0x0, 0x0);
        gbc.writeMem(0x733a, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0xa15);
        EXPECT(gbc.pc(), 0x733c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C4 02E2
        gbc.setState(0x66ca, 0xcb99, 0xec20, 0x9a6f, 0x830e, 0x81f, 0x0, 0x0);
        gbc.writeMem(0x66ca, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0xcb99);
        EXPECT(gbc.pc(), 0x66cc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C4 02E3
        gbc.setState(0x1bf9, 0x2223, 0x1a30, 0x723c, 0x5e90, 0x333c, 0x0, 0x1);
        gbc.writeMem(0x1bf9, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x2223);
        EXPECT(gbc.pc(), 0x1bfb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C4 02E4
        gbc.setState(0x34d6, 0xcf93, 0x4220, 0xa36c, 0x956f, 0xcccc, 0x0, 0x0);
        gbc.writeMem(0x34d6, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0xcf93);
        EXPECT(gbc.pc(), 0x34d8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C4 02E6
        gbc.setState(0x6af4, 0xde46, 0x360, 0xa0f2, 0x898d, 0xb231, 0x0, 0x0);
        gbc.writeMem(0x6af4, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xde46);
        EXPECT(gbc.pc(), 0x6af6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C4 02E7
        gbc.setState(0xc16a, 0x760, 0x1c20, 0xc7e0, 0x2b88, 0x39b7, 0x1, 0x1);
        gbc.writeMem(0xc16a, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x760);
        EXPECT(gbc.pc(), 0xc16c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc16a), 0xcb);
        EXPECT(gbc.readMem(0xc16b), 0xc4);
        // CB C4 02E8
        gbc.setState(0xb14, 0x5a02, 0x29c0, 0xa136, 0xdd37, 0x61e, 0x0, 0x1);
        gbc.writeMem(0xb14, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x5a02);
        EXPECT(gbc.pc(), 0xb16);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C4 02E9
        gbc.setState(0x592f, 0xb69e, 0xce10, 0x697e, 0x36d, 0x6e5f, 0x0, 0x1);
        gbc.writeMem(0x592f, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0xb69e);
        EXPECT(gbc.pc(), 0x5931);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C4 02EA
        gbc.setState(0xb904, 0x8786, 0x59b0, 0x744a, 0xbfb4, 0xacb, 0x0, 0x0);
        gbc.writeMem(0xb904, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x8786);
        EXPECT(gbc.pc(), 0xb906);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb904), 0xcb);
        EXPECT(gbc.readMem(0xb905), 0xc4);
        // CB C4 02EB
        gbc.setState(0x8edf, 0xdd11, 0xa2f0, 0xcac7, 0xed00, 0xf67, 0x1, 0x0);
        gbc.writeMem(0x8edf, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0xdd11);
        EXPECT(gbc.pc(), 0x8ee1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8edf), 0xcb);
        EXPECT(gbc.readMem(0x8ee0), 0xc4);
        // CB C4 02EC
        gbc.setState(0x5478, 0x9f19, 0x9640, 0x3f46, 0xc014, 0x37e8, 0x0, 0x0);
        gbc.writeMem(0x5478, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x9f19);
        EXPECT(gbc.pc(), 0x547a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C4 02ED
        gbc.setState(0x531, 0xd29d, 0x3400, 0x1087, 0x9849, 0xdcaa, 0x1, 0x0);
        gbc.writeMem(0x531, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0xd29d);
        EXPECT(gbc.pc(), 0x533);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C4 02EE
        gbc.setState(0xb309, 0x93c6, 0x3510, 0xf5f3, 0x9963, 0x8a7d, 0x1, 0x1);
        gbc.writeMem(0xb309, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x93c6);
        EXPECT(gbc.pc(), 0xb30b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb309), 0xcb);
        EXPECT(gbc.readMem(0xb30a), 0xc4);
        // CB C4 02EF
        gbc.setState(0x12be, 0x398b, 0x6620, 0x38ad, 0x4568, 0xb3e6, 0x1, 0x1);
        gbc.writeMem(0x12be, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x398b);
        EXPECT(gbc.pc(), 0x12c0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C4 02F0
        gbc.setState(0xdc89, 0x250f, 0xaed0, 0x6ca1, 0x731a, 0xe70, 0x0, 0x0);
        gbc.writeMem(0xdc89, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x250f);
        EXPECT(gbc.pc(), 0xdc8b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdc89), 0xcb);
        EXPECT(gbc.readMem(0xdc8a), 0xc4);
        // CB C4 02F1
        gbc.setState(0xc442, 0x4629, 0x6100, 0x6470, 0xa27a, 0x4e8e, 0x0, 0x1);
        gbc.writeMem(0xc442, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x4629);
        EXPECT(gbc.pc(), 0xc444);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc442), 0xcb);
        EXPECT(gbc.readMem(0xc443), 0xc4);
        // CB C4 02F2
        gbc.setState(0x1069, 0xff43, 0xc1c0, 0xe238, 0x1861, 0x6b9c, 0x1, 0x0);
        gbc.writeMem(0x1069, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0xff43);
        EXPECT(gbc.pc(), 0x106b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C4 02F3
        gbc.setState(0x570c, 0x6cbc, 0xdae0, 0x8e19, 0x3c70, 0x6ddc, 0x1, 0x1);
        gbc.writeMem(0x570c, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x6cbc);
        EXPECT(gbc.pc(), 0x570e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C4 02F4
        gbc.setState(0xe804, 0x692a, 0x3c50, 0x2f32, 0xc484, 0x9081, 0x1, 0x1);
        gbc.writeMem(0xe804, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x692a);
        EXPECT(gbc.pc(), 0xe806);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe804), 0xcb);
        EXPECT(gbc.readMem(0xe805), 0xc4);
        // CB C4 02F5
        gbc.setState(0xd033, 0x32f5, 0x34e0, 0x8bb6, 0xbdd0, 0x56ad, 0x1, 0x1);
        gbc.writeMem(0xd033, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x32f5);
        EXPECT(gbc.pc(), 0xd035);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd033), 0xcb);
        EXPECT(gbc.readMem(0xd034), 0xc4);
        // CB C4 02F6
        gbc.setState(0x80f1, 0xd8ac, 0x3b10, 0x6b18, 0xfb96, 0x9315, 0x0, 0x0);
        gbc.writeMem(0x80f1, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0xd8ac);
        EXPECT(gbc.pc(), 0x80f3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x80f1), 0xcb);
        EXPECT(gbc.readMem(0x80f2), 0xc4);
        // CB C4 02F7
        gbc.setState(0x8b38, 0x7ba7, 0xbe60, 0x3e82, 0x80c7, 0x69d, 0x1, 0x0);
        gbc.writeMem(0x8b38, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x7ba7);
        EXPECT(gbc.pc(), 0x8b3a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8b38), 0xcb);
        EXPECT(gbc.readMem(0x8b39), 0xc4);
        // CB C4 02F8
        gbc.setState(0x5a61, 0x957b, 0x8640, 0xc193, 0xae88, 0x4e17, 0x0, 0x1);
        gbc.writeMem(0x5a61, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x957b);
        EXPECT(gbc.pc(), 0x5a63);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C4 02F9
        gbc.setState(0x8975, 0xd89c, 0x2d90, 0x4df1, 0x174f, 0x14c2, 0x0, 0x0);
        gbc.writeMem(0x8975, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0xd89c);
        EXPECT(gbc.pc(), 0x8977);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8975), 0xcb);
        EXPECT(gbc.readMem(0x8976), 0xc4);
        // CB C4 02FA
        gbc.setState(0xdfb9, 0x6817, 0x62f0, 0x306d, 0xe6dd, 0x7b49, 0x0, 0x0);
        gbc.writeMem(0xdfb9, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x6817);
        EXPECT(gbc.pc(), 0xdfbb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdfb9), 0xcb);
        EXPECT(gbc.readMem(0xdfba), 0xc4);
        // CB C4 02FB
        gbc.setState(0x89cd, 0x7aff, 0xf1f0, 0xf3ca, 0xaeee, 0xf1cc, 0x1, 0x0);
        gbc.writeMem(0x89cd, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x7aff);
        EXPECT(gbc.pc(), 0x89cf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x89cd), 0xcb);
        EXPECT(gbc.readMem(0x89ce), 0xc4);
        // CB C4 02FC
        gbc.setState(0xa138, 0xbfe7, 0x2fa0, 0xf38f, 0x32d8, 0x6d3d, 0x1, 0x1);
        gbc.writeMem(0xa138, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0xbfe7);
        EXPECT(gbc.pc(), 0xa13a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa138), 0xcb);
        EXPECT(gbc.readMem(0xa139), 0xc4);
        // CB C4 02FD
        gbc.setState(0x9b43, 0x59cb, 0x63e0, 0x6077, 0xed0a, 0x338, 0x1, 0x1);
        gbc.writeMem(0x9b43, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x59cb);
        EXPECT(gbc.pc(), 0x9b45);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9b43), 0xcb);
        EXPECT(gbc.readMem(0x9b44), 0xc4);
        // CB C4 02FE
        gbc.setState(0x5eab, 0x7520, 0xe50, 0x520a, 0x35f2, 0x64e5, 0x1, 0x0);
        gbc.writeMem(0x5eab, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x7520);
        EXPECT(gbc.pc(), 0x5ead);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C4 02FF
        gbc.setState(0x518d, 0x6a32, 0xc4c0, 0xe1ba, 0xb93d, 0xf8c5, 0x0, 0x0);
        gbc.writeMem(0x518d, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x6a32);
        EXPECT(gbc.pc(), 0x518f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C4 0300
        gbc.setState(0xbc34, 0x9106, 0x5c90, 0xec04, 0x1ab9, 0x5169, 0x1, 0x1);
        gbc.writeMem(0xbc34, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x9106);
        EXPECT(gbc.pc(), 0xbc36);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbc34), 0xcb);
        EXPECT(gbc.readMem(0xbc35), 0xc4);
        // CB C4 0301
        gbc.setState(0x5a42, 0x1031, 0x81e0, 0x8cd7, 0x55ba, 0xad74, 0x0, 0x1);
        gbc.writeMem(0x5a42, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x1031);
        EXPECT(gbc.pc(), 0x5a44);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C4 0302
        gbc.setState(0x316, 0x3f9a, 0xd240, 0xa99a, 0x64a7, 0x7701, 0x1, 0x0);
        gbc.writeMem(0x316, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x3f9a);
        EXPECT(gbc.pc(), 0x318);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C4 0303
        gbc.setState(0x62b5, 0xedcc, 0x5620, 0x359, 0xc34e, 0x39bd, 0x1, 0x1);
        gbc.writeMem(0x62b5, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0xedcc);
        EXPECT(gbc.pc(), 0x62b7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C4 0304
        gbc.setState(0xd5ec, 0x47f2, 0xd2b0, 0xbcf3, 0x4c8c, 0x82d8, 0x0, 0x1);
        gbc.writeMem(0xd5ec, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x47f2);
        EXPECT(gbc.pc(), 0xd5ee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd5ec), 0xcb);
        EXPECT(gbc.readMem(0xd5ed), 0xc4);
        // CB C4 0305
        gbc.setState(0x721a, 0xe981, 0xdfd0, 0x8b97, 0x815, 0x1bc9, 0x0, 0x0);
        gbc.writeMem(0x721a, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0xe981);
        EXPECT(gbc.pc(), 0x721c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C4 0306
        gbc.setState(0x5289, 0xa2, 0x97f0, 0xb2e, 0xb065, 0x523, 0x1, 0x1);
        gbc.writeMem(0x5289, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0xa2);
        EXPECT(gbc.pc(), 0x528b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C4 0307
        gbc.setState(0x864e, 0xb6fe, 0x8ca0, 0xd85a, 0xfbdd, 0xf2ca, 0x0, 0x0);
        gbc.writeMem(0x864e, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0xb6fe);
        EXPECT(gbc.pc(), 0x8650);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x864e), 0xcb);
        EXPECT(gbc.readMem(0x864f), 0xc4);
        // CB C4 0308
        gbc.setState(0x7691, 0xa890, 0x2c40, 0xdf1f, 0xd25, 0xcb51, 0x1, 0x0);
        gbc.writeMem(0x7691, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xa890);
        EXPECT(gbc.pc(), 0x7693);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C4 0309
        gbc.setState(0x849e, 0xf434, 0xaff0, 0xd9b9, 0x8666, 0xa0be, 0x1, 0x0);
        gbc.writeMem(0x849e, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0xf434);
        EXPECT(gbc.pc(), 0x84a0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x849e), 0xcb);
        EXPECT(gbc.readMem(0x849f), 0xc4);
        // CB C4 030B
        gbc.setState(0x8d8f, 0x6d09, 0xa860, 0xace6, 0xceb5, 0xe4ed, 0x1, 0x1);
        gbc.writeMem(0x8d8f, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x6d09);
        EXPECT(gbc.pc(), 0x8d91);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d8f), 0xcb);
        EXPECT(gbc.readMem(0x8d90), 0xc4);
        // CB C4 030C
        gbc.setState(0xae06, 0xab86, 0x2840, 0x2100, 0x3363, 0x6048, 0x0, 0x1);
        gbc.writeMem(0xae06, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0xab86);
        EXPECT(gbc.pc(), 0xae08);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xae06), 0xcb);
        EXPECT(gbc.readMem(0xae07), 0xc4);
        // CB C4 030D
        gbc.setState(0xa4c2, 0xe7ad, 0xbcc0, 0xc43e, 0x116a, 0xc63, 0x0, 0x1);
        gbc.writeMem(0xa4c2, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0xe7ad);
        EXPECT(gbc.pc(), 0xa4c4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa4c2), 0xcb);
        EXPECT(gbc.readMem(0xa4c3), 0xc4);
        // CB C4 030E
        gbc.setState(0xb78f, 0xb0e4, 0x6d0, 0xa49b, 0x8a39, 0x5b90, 0x1, 0x1);
        gbc.writeMem(0xb78f, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0xb0e4);
        EXPECT(gbc.pc(), 0xb791);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb78f), 0xcb);
        EXPECT(gbc.readMem(0xb790), 0xc4);
        // CB C4 030F
        gbc.setState(0x319e, 0xe44b, 0x5ae0, 0x86c8, 0x4f6f, 0xb2d0, 0x1, 0x0);
        gbc.writeMem(0x319e, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0xe44b);
        EXPECT(gbc.pc(), 0x31a0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C4 0310
        gbc.setState(0xa00e, 0xe7f1, 0xe550, 0x6a37, 0xf0ab, 0x47ff, 0x0, 0x0);
        gbc.writeMem(0xa00e, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0xe7f1);
        EXPECT(gbc.pc(), 0xa010);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa00e), 0xcb);
        EXPECT(gbc.readMem(0xa00f), 0xc4);
        // CB C4 0311
        gbc.setState(0xe8db, 0x201d, 0xa340, 0xffbd, 0x2831, 0xca7a, 0x1, 0x1);
        gbc.writeMem(0xe8db, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x201d);
        EXPECT(gbc.pc(), 0xe8dd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe8db), 0xcb);
        EXPECT(gbc.readMem(0xe8dc), 0xc4);
        // CB C4 0312
        gbc.setState(0x66df, 0x3bb7, 0x6520, 0x7848, 0xb980, 0x5355, 0x1, 0x1);
        gbc.writeMem(0x66df, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x3bb7);
        EXPECT(gbc.pc(), 0x66e1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C4 0313
        gbc.setState(0x224a, 0x526b, 0x82f0, 0x859e, 0x6538, 0x2ef5, 0x0, 0x1);
        gbc.writeMem(0x224a, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x526b);
        EXPECT(gbc.pc(), 0x224c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C4 0314
        gbc.setState(0x2ad6, 0x1ed4, 0x8530, 0x1f26, 0x8ed8, 0xd40, 0x0, 0x0);
        gbc.writeMem(0x2ad6, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x1ed4);
        EXPECT(gbc.pc(), 0x2ad8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C4 0315
        gbc.setState(0x24cf, 0x8c2, 0x2e20, 0x5792, 0x546f, 0xe49f, 0x1, 0x0);
        gbc.writeMem(0x24cf, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x8c2);
        EXPECT(gbc.pc(), 0x24d1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C4 0316
        gbc.setState(0x22a, 0x61ee, 0x7ee0, 0xa90d, 0x5f96, 0xf1ba, 0x1, 0x1);
        gbc.writeMem(0x22a, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x61ee);
        EXPECT(gbc.pc(), 0x22c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C4 0317
        gbc.setState(0x95f0, 0xe5b2, 0x47c0, 0xeee5, 0xc609, 0xc34f, 0x0, 0x1);
        gbc.writeMem(0x95f0, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0xe5b2);
        EXPECT(gbc.pc(), 0x95f2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x95f0), 0xcb);
        EXPECT(gbc.readMem(0x95f1), 0xc4);
        // CB C4 0318
        gbc.setState(0x6f68, 0x5fec, 0x4450, 0xc6c2, 0x8523, 0xc878, 0x0, 0x0);
        gbc.writeMem(0x6f68, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x5fec);
        EXPECT(gbc.pc(), 0x6f6a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C4 0319
        gbc.setState(0xcaef, 0xbc81, 0x49e0, 0x2a3f, 0xe0f4, 0xff8b, 0x0, 0x0);
        gbc.writeMem(0xcaef, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0xbc81);
        EXPECT(gbc.pc(), 0xcaf1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcaef), 0xcb);
        EXPECT(gbc.readMem(0xcaf0), 0xc4);
        // CB C4 031A
        gbc.setState(0x4795, 0x152e, 0xa7d0, 0x56bd, 0xdf29, 0x7849, 0x0, 0x0);
        gbc.writeMem(0x4795, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x152e);
        EXPECT(gbc.pc(), 0x4797);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C4 031B
        gbc.setState(0xb19f, 0x7426, 0x31f0, 0x11fc, 0x59d8, 0x4fe7, 0x0, 0x0);
        gbc.writeMem(0xb19f, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x7426);
        EXPECT(gbc.pc(), 0xb1a1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb19f), 0xcb);
        EXPECT(gbc.readMem(0xb1a0), 0xc4);
        // CB C4 031C
        gbc.setState(0xe868, 0x3d74, 0xad70, 0x75fc, 0x70b0, 0xac48, 0x1, 0x1);
        gbc.writeMem(0xe868, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x3d74);
        EXPECT(gbc.pc(), 0xe86a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe868), 0xcb);
        EXPECT(gbc.readMem(0xe869), 0xc4);
        // CB C4 031D
        gbc.setState(0x5d82, 0x6ebc, 0x31f0, 0x418, 0x83f5, 0x5f, 0x0, 0x1);
        gbc.writeMem(0x5d82, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x6ebc);
        EXPECT(gbc.pc(), 0x5d84);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C4 031E
        gbc.setState(0xe85a, 0x3f63, 0x1b90, 0xe39f, 0xee22, 0x1cf0, 0x0, 0x0);
        gbc.writeMem(0xe85a, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x3f63);
        EXPECT(gbc.pc(), 0xe85c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe85a), 0xcb);
        EXPECT(gbc.readMem(0xe85b), 0xc4);
        // CB C4 031F
        gbc.setState(0x75df, 0xb78e, 0x8b00, 0xe7, 0x4b3e, 0x8e83, 0x1, 0x1);
        gbc.writeMem(0x75df, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0xb78e);
        EXPECT(gbc.pc(), 0x75e1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C4 0320
        gbc.setState(0x80cd, 0xcb49, 0x940, 0xec62, 0x5754, 0x9ee7, 0x0, 0x0);
        gbc.writeMem(0x80cd, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xcb49);
        EXPECT(gbc.pc(), 0x80cf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x80cd), 0xcb);
        EXPECT(gbc.readMem(0x80ce), 0xc4);
        // CB C4 0321
        gbc.setState(0x56, 0x7139, 0x43e0, 0x7b91, 0x6c01, 0xcb0f, 0x0, 0x1);
        gbc.writeMem(0x56, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x7139);
        EXPECT(gbc.pc(), 0x58);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C4 0322
        gbc.setState(0x1880, 0x6705, 0x5380, 0x2fb9, 0x65e7, 0x4f31, 0x0, 0x0);
        gbc.writeMem(0x1880, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x6705);
        EXPECT(gbc.pc(), 0x1882);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C4 0323
        gbc.setState(0x96c6, 0xdce, 0x1710, 0x8ee8, 0x9046, 0x988a, 0x0, 0x1);
        gbc.writeMem(0x96c6, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xdce);
        EXPECT(gbc.pc(), 0x96c8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x96c6), 0xcb);
        EXPECT(gbc.readMem(0x96c7), 0xc4);
        // CB C4 0324
        gbc.setState(0x2cb3, 0x74ee, 0x7e30, 0x5134, 0xbfc6, 0x65fa, 0x0, 0x1);
        gbc.writeMem(0x2cb3, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x74ee);
        EXPECT(gbc.pc(), 0x2cb5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C4 0325
        gbc.setState(0x758b, 0x41b9, 0x830, 0xc217, 0x7c0c, 0x7387, 0x0, 0x1);
        gbc.writeMem(0x758b, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x41b9);
        EXPECT(gbc.pc(), 0x758d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C4 0326
        gbc.setState(0x2d61, 0x43c9, 0x8fb0, 0xa374, 0xd216, 0xc69a, 0x1, 0x1);
        gbc.writeMem(0x2d61, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x43c9);
        EXPECT(gbc.pc(), 0x2d63);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C4 0327
        gbc.setState(0x8358, 0xb4b5, 0x42f0, 0xfb82, 0x66dd, 0xb008, 0x0, 0x1);
        gbc.writeMem(0x8358, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0xb4b5);
        EXPECT(gbc.pc(), 0x835a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8358), 0xcb);
        EXPECT(gbc.readMem(0x8359), 0xc4);
        // CB C4 0328
        gbc.setState(0x4526, 0xd3d3, 0xbc0, 0x6448, 0x1811, 0xcd4c, 0x1, 0x1);
        gbc.writeMem(0x4526, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0xd3d3);
        EXPECT(gbc.pc(), 0x4528);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C4 0329
        gbc.setState(0xbf69, 0x2351, 0x620, 0x9b30, 0xb5f7, 0x26f5, 0x0, 0x0);
        gbc.writeMem(0xbf69, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x2351);
        EXPECT(gbc.pc(), 0xbf6b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbf69), 0xcb);
        EXPECT(gbc.readMem(0xbf6a), 0xc4);
        // CB C4 032A
        gbc.setState(0x6125, 0x822a, 0x1c50, 0xaf35, 0xfd1, 0xdd56, 0x0, 0x0);
        gbc.writeMem(0x6125, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x822a);
        EXPECT(gbc.pc(), 0x6127);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C4 032B
        gbc.setState(0x8e13, 0xd572, 0xc060, 0xb078, 0x6a1, 0x47f4, 0x1, 0x1);
        gbc.writeMem(0x8e13, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0xd572);
        EXPECT(gbc.pc(), 0x8e15);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8e13), 0xcb);
        EXPECT(gbc.readMem(0x8e14), 0xc4);
        // CB C4 032C
        gbc.setState(0x9b8f, 0x3c7d, 0x9cc0, 0x270d, 0x6071, 0x1680, 0x0, 0x0);
        gbc.writeMem(0x9b8f, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x3c7d);
        EXPECT(gbc.pc(), 0x9b91);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9b8f), 0xcb);
        EXPECT(gbc.readMem(0x9b90), 0xc4);
        // CB C4 032D
        gbc.setState(0x108b, 0xaf49, 0xc060, 0xb6bc, 0xc2eb, 0xcb20, 0x1, 0x1);
        gbc.writeMem(0x108b, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0xaf49);
        EXPECT(gbc.pc(), 0x108d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C4 032E
        gbc.setState(0xad98, 0x3e2f, 0xc680, 0x7955, 0xe0c5, 0x8f8a, 0x1, 0x0);
        gbc.writeMem(0xad98, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x3e2f);
        EXPECT(gbc.pc(), 0xad9a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xad98), 0xcb);
        EXPECT(gbc.readMem(0xad99), 0xc4);
        // CB C4 032F
        gbc.setState(0xc0eb, 0x2f7f, 0x33d0, 0x9238, 0x84ce, 0xae1a, 0x0, 0x0);
        gbc.writeMem(0xc0eb, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x2f7f);
        EXPECT(gbc.pc(), 0xc0ed);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc0eb), 0xcb);
        EXPECT(gbc.readMem(0xc0ec), 0xc4);
        // CB C4 0330
        gbc.setState(0xcb0, 0x893f, 0x9a60, 0xfdd, 0x6e0e, 0xd228, 0x0, 0x0);
        gbc.writeMem(0xcb0, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x893f);
        EXPECT(gbc.pc(), 0xcb2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C4 0331
        gbc.setState(0x9778, 0xe1ca, 0xbe60, 0x7ba, 0x8e46, 0x9927, 0x1, 0x0);
        gbc.writeMem(0x9778, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0xe1ca);
        EXPECT(gbc.pc(), 0x977a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9778), 0xcb);
        EXPECT(gbc.readMem(0x9779), 0xc4);
        // CB C4 0333
        gbc.setState(0x76dc, 0x2197, 0x3ce0, 0x6604, 0xecb, 0xba4c, 0x0, 0x0);
        gbc.writeMem(0x76dc, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x2197);
        EXPECT(gbc.pc(), 0x76de);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C4 0335
        gbc.setState(0x61c0, 0x7572, 0x70c0, 0x1517, 0x9950, 0x2024, 0x1, 0x0);
        gbc.writeMem(0x61c0, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x7572);
        EXPECT(gbc.pc(), 0x61c2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C4 0336
        gbc.setState(0x49e, 0x73d9, 0xd1a0, 0x9d38, 0x97b3, 0x6117, 0x1, 0x0);
        gbc.writeMem(0x49e, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x73d9);
        EXPECT(gbc.pc(), 0x4a0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C4 0337
        gbc.setState(0x83fa, 0x6a2f, 0xf8c0, 0xb5ed, 0xe0d1, 0xa274, 0x0, 0x1);
        gbc.writeMem(0x83fa, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x6a2f);
        EXPECT(gbc.pc(), 0x83fc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x83fa), 0xcb);
        EXPECT(gbc.readMem(0x83fb), 0xc4);
        // CB C4 0338
        gbc.setState(0x2c5f, 0x167, 0x23e0, 0x6819, 0x6949, 0x517d, 0x1, 0x1);
        gbc.writeMem(0x2c5f, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x167);
        EXPECT(gbc.pc(), 0x2c61);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C4 0339
        gbc.setState(0xec5d, 0xd2fe, 0x1490, 0x12c0, 0x2adb, 0x1ed9, 0x0, 0x0);
        gbc.writeMem(0xec5d, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0xd2fe);
        EXPECT(gbc.pc(), 0xec5f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xec5d), 0xcb);
        EXPECT(gbc.readMem(0xec5e), 0xc4);
        // CB C4 033A
        gbc.setState(0x6a48, 0xadf5, 0x2280, 0x1c94, 0x48dd, 0xe325, 0x1, 0x1);
        gbc.writeMem(0x6a48, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0xadf5);
        EXPECT(gbc.pc(), 0x6a4a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C4 033B
        gbc.setState(0xc3a3, 0x3138, 0x70b0, 0x379f, 0x589f, 0xbeaf, 0x0, 0x1);
        gbc.writeMem(0xc3a3, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x3138);
        EXPECT(gbc.pc(), 0xc3a5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc3a3), 0xcb);
        EXPECT(gbc.readMem(0xc3a4), 0xc4);
        // CB C4 033C
        gbc.setState(0x747e, 0xf788, 0x4d00, 0x5e86, 0x6c0d, 0x75c7, 0x0, 0x0);
        gbc.writeMem(0x747e, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0xf788);
        EXPECT(gbc.pc(), 0x7480);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C4 033D
        gbc.setState(0x7228, 0x434d, 0xecc0, 0xbf11, 0xad22, 0xff77, 0x0, 0x0);
        gbc.writeMem(0x7228, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x434d);
        EXPECT(gbc.pc(), 0x722a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C4 033E
        gbc.setState(0x397d, 0x3fb6, 0xfd60, 0x987c, 0x6a24, 0xf4ee, 0x1, 0x0);
        gbc.writeMem(0x397d, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x3fb6);
        EXPECT(gbc.pc(), 0x397f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C4 033F
        gbc.setState(0x3b4, 0x243, 0x4350, 0x295, 0x686c, 0x9f83, 0x1, 0x0);
        gbc.writeMem(0x3b4, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x243);
        EXPECT(gbc.pc(), 0x3b6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C4 0341
        gbc.setState(0x6990, 0x1b84, 0xe320, 0xe3a7, 0x9649, 0x69ae, 0x1, 0x0);
        gbc.writeMem(0x6990, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x1b84);
        EXPECT(gbc.pc(), 0x6992);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C4 0342
        gbc.setState(0x59d1, 0x75ca, 0xfeb0, 0x2c6b, 0x3c45, 0x336c, 0x0, 0x0);
        gbc.writeMem(0x59d1, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x75ca);
        EXPECT(gbc.pc(), 0x59d3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C4 0343
        gbc.setState(0x4e7e, 0xbb3b, 0xa330, 0x7472, 0x28ca, 0x4389, 0x0, 0x1);
        gbc.writeMem(0x4e7e, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0xbb3b);
        EXPECT(gbc.pc(), 0x4e80);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C4 0344
        gbc.setState(0x2cc3, 0xab61, 0x82f0, 0x20be, 0x36da, 0xa960, 0x0, 0x0);
        gbc.writeMem(0x2cc3, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xab61);
        EXPECT(gbc.pc(), 0x2cc5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C4 0345
        gbc.setState(0x44c3, 0xbe46, 0x2e00, 0xa9a0, 0x5c3e, 0x501b, 0x0, 0x0);
        gbc.writeMem(0x44c3, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0xbe46);
        EXPECT(gbc.pc(), 0x44c5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C4 0347
        gbc.setState(0x57ef, 0xe2f2, 0xa880, 0xe3b8, 0xb9f1, 0x922e, 0x1, 0x1);
        gbc.writeMem(0x57ef, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xe2f2);
        EXPECT(gbc.pc(), 0x57f1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C4 0348
        gbc.setState(0x822b, 0x67a, 0x7f30, 0x5751, 0xce67, 0x6d8f, 0x1, 0x0);
        gbc.writeMem(0x822b, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x67a);
        EXPECT(gbc.pc(), 0x822d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x822b), 0xcb);
        EXPECT(gbc.readMem(0x822c), 0xc4);
        // CB C4 0349
        gbc.setState(0x44e3, 0x7ded, 0x30e0, 0x81ab, 0xf570, 0x87e4, 0x1, 0x1);
        gbc.writeMem(0x44e3, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x7ded);
        EXPECT(gbc.pc(), 0x44e5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C4 034A
        gbc.setState(0xe06b, 0xca61, 0x9a70, 0xfb6, 0x6753, 0x1fcb, 0x1, 0x1);
        gbc.writeMem(0xe06b, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0xca61);
        EXPECT(gbc.pc(), 0xe06d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe06b), 0xcb);
        EXPECT(gbc.readMem(0xe06c), 0xc4);
        // CB C4 034B
        gbc.setState(0xef6, 0xbb3, 0x2b60, 0xb5fb, 0x9e55, 0xd65f, 0x0, 0x0);
        gbc.writeMem(0xef6, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0xbb3);
        EXPECT(gbc.pc(), 0xef8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C4 034C
        gbc.setState(0x4aab, 0x4c9a, 0xba20, 0xa47a, 0x2de8, 0xdabe, 0x1, 0x1);
        gbc.writeMem(0x4aab, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x4c9a);
        EXPECT(gbc.pc(), 0x4aad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C4 034D
        gbc.setState(0x7e2f, 0x6bd3, 0x8c10, 0x7191, 0x80cb, 0x3d79, 0x0, 0x1);
        gbc.writeMem(0x7e2f, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x6bd3);
        EXPECT(gbc.pc(), 0x7e31);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C4 034E
        gbc.setState(0x6ed3, 0xf3e3, 0xb570, 0xfe52, 0x4ae0, 0x546a, 0x0, 0x0);
        gbc.writeMem(0x6ed3, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xf3e3);
        EXPECT(gbc.pc(), 0x6ed5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C4 034F
        gbc.setState(0x287a, 0xc350, 0xdbb0, 0xd5b9, 0xdfb0, 0x950e, 0x0, 0x0);
        gbc.writeMem(0x287a, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0xc350);
        EXPECT(gbc.pc(), 0x287c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C4 0350
        gbc.setState(0x6276, 0xdc72, 0x6070, 0x9d7c, 0x985f, 0x7477, 0x1, 0x1);
        gbc.writeMem(0x6276, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xdc72);
        EXPECT(gbc.pc(), 0x6278);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C4 0351
        gbc.setState(0x1557, 0xfe6a, 0xedc0, 0x8e10, 0xf570, 0x27ee, 0x1, 0x0);
        gbc.writeMem(0x1557, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0xfe6a);
        EXPECT(gbc.pc(), 0x1559);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C4 0352
        gbc.setState(0xd6b3, 0xcf24, 0x900, 0x395, 0x4e38, 0xc6ba, 0x0, 0x1);
        gbc.writeMem(0xd6b3, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0xcf24);
        EXPECT(gbc.pc(), 0xd6b5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd6b3), 0xcb);
        EXPECT(gbc.readMem(0xd6b4), 0xc4);
        // CB C4 0353
        gbc.setState(0xbc65, 0x19, 0x9cf0, 0xbf1, 0xd88f, 0xffd3, 0x0, 0x0);
        gbc.writeMem(0xbc65, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x19);
        EXPECT(gbc.pc(), 0xbc67);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbc65), 0xcb);
        EXPECT(gbc.readMem(0xbc66), 0xc4);
        // CB C4 0354
        gbc.setState(0xd181, 0xe6ea, 0xfcc0, 0x67a1, 0x728f, 0x2852, 0x0, 0x1);
        gbc.writeMem(0xd181, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0xe6ea);
        EXPECT(gbc.pc(), 0xd183);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd181), 0xcb);
        EXPECT(gbc.readMem(0xd182), 0xc4);
        // CB C4 0355
        gbc.setState(0x683c, 0xe96d, 0x5770, 0xce04, 0x6bf7, 0xcb65, 0x1, 0x0);
        gbc.writeMem(0x683c, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0xe96d);
        EXPECT(gbc.pc(), 0x683e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C4 0356
        gbc.setState(0xe832, 0xb573, 0x1850, 0x4b14, 0x2555, 0x7940, 0x0, 0x0);
        gbc.writeMem(0xe832, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0xb573);
        EXPECT(gbc.pc(), 0xe834);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe832), 0xcb);
        EXPECT(gbc.readMem(0xe833), 0xc4);
        // CB C4 0357
        gbc.setState(0x172f, 0x1aa7, 0xe560, 0xf85b, 0xf56e, 0xd0d8, 0x1, 0x1);
        gbc.writeMem(0x172f, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x1aa7);
        EXPECT(gbc.pc(), 0x1731);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C4 0358
        gbc.setState(0xcba1, 0x6ebd, 0x9f40, 0xf76c, 0x55ce, 0xb66d, 0x1, 0x1);
        gbc.writeMem(0xcba1, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x6ebd);
        EXPECT(gbc.pc(), 0xcba3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcba1), 0xcb);
        EXPECT(gbc.readMem(0xcba2), 0xc4);
        // CB C4 0359
        gbc.setState(0x5167, 0xf0c5, 0x30b0, 0x9fd1, 0x4563, 0x153c, 0x1, 0x1);
        gbc.writeMem(0x5167, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xf0c5);
        EXPECT(gbc.pc(), 0x5169);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C4 035A
        gbc.setState(0x97d5, 0xff11, 0xbbc0, 0x65d5, 0xa6ff, 0xfda1, 0x0, 0x1);
        gbc.writeMem(0x97d5, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0xff11);
        EXPECT(gbc.pc(), 0x97d7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x97d5), 0xcb);
        EXPECT(gbc.readMem(0x97d6), 0xc4);
        // CB C4 035B
        gbc.setState(0xcc8, 0xf0c4, 0x4e00, 0x28a0, 0x3ff, 0xe96, 0x1, 0x1);
        gbc.writeMem(0xcc8, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0xf0c4);
        EXPECT(gbc.pc(), 0xcca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C4 035C
        gbc.setState(0xb264, 0xd6c6, 0xa3d0, 0x5394, 0xa5aa, 0x8b78, 0x1, 0x0);
        gbc.writeMem(0xb264, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0xd6c6);
        EXPECT(gbc.pc(), 0xb266);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb264), 0xcb);
        EXPECT(gbc.readMem(0xb265), 0xc4);
        // CB C4 035D
        gbc.setState(0x87a5, 0xcede, 0x1090, 0x39f, 0xa277, 0x3cf8, 0x1, 0x0);
        gbc.writeMem(0x87a5, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0xcede);
        EXPECT(gbc.pc(), 0x87a7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x87a5), 0xcb);
        EXPECT(gbc.readMem(0x87a6), 0xc4);
        // CB C4 035E
        gbc.setState(0x3144, 0x24da, 0x7f70, 0x80ff, 0xc3b7, 0xd0b9, 0x1, 0x1);
        gbc.writeMem(0x3144, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x24da);
        EXPECT(gbc.pc(), 0x3146);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C4 035F
        gbc.setState(0xb721, 0xc806, 0xb630, 0xbb02, 0x62f2, 0x3200, 0x1, 0x0);
        gbc.writeMem(0xb721, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0xc806);
        EXPECT(gbc.pc(), 0xb723);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb721), 0xcb);
        EXPECT(gbc.readMem(0xb722), 0xc4);
        // CB C4 0360
        gbc.setState(0xdaca, 0xb096, 0x5ee0, 0x6bc2, 0xa060, 0x1eb2, 0x0, 0x1);
        gbc.writeMem(0xdaca, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0xb096);
        EXPECT(gbc.pc(), 0xdacc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdaca), 0xcb);
        EXPECT(gbc.readMem(0xdacb), 0xc4);
        // CB C4 0361
        gbc.setState(0x197, 0x611e, 0x5490, 0xd200, 0x781c, 0x519, 0x0, 0x0);
        gbc.writeMem(0x197, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x611e);
        EXPECT(gbc.pc(), 0x199);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C4 0362
        gbc.setState(0x8b2c, 0x37b9, 0xda40, 0x86c6, 0x2c3b, 0x8d4, 0x1, 0x1);
        gbc.writeMem(0x8b2c, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x37b9);
        EXPECT(gbc.pc(), 0x8b2e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8b2c), 0xcb);
        EXPECT(gbc.readMem(0x8b2d), 0xc4);
        // CB C4 0363
        gbc.setState(0x4300, 0xec98, 0x1690, 0x34c4, 0xdd00, 0xaa1d, 0x0, 0x1);
        gbc.writeMem(0x4300, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0xec98);
        EXPECT(gbc.pc(), 0x4302);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C4 0364
        gbc.setState(0x7b78, 0x8360, 0x38c0, 0x9e48, 0x373f, 0xb0dd, 0x1, 0x1);
        gbc.writeMem(0x7b78, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x8360);
        EXPECT(gbc.pc(), 0x7b7a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C4 0365
        gbc.setState(0x465a, 0xc856, 0xc220, 0x4899, 0x297a, 0xe7d2, 0x0, 0x1);
        gbc.writeMem(0x465a, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0xc856);
        EXPECT(gbc.pc(), 0x465c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C4 0366
        gbc.setState(0xdafb, 0x7c38, 0x8b0, 0xc37e, 0x1661, 0x9c30, 0x0, 0x0);
        gbc.writeMem(0xdafb, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x7c38);
        EXPECT(gbc.pc(), 0xdafd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdafb), 0xcb);
        EXPECT(gbc.readMem(0xdafc), 0xc4);
        // CB C4 0367
        gbc.setState(0x3f7a, 0x70b8, 0x6bd0, 0xada8, 0x8637, 0x3e06, 0x1, 0x1);
        gbc.writeMem(0x3f7a, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x70b8);
        EXPECT(gbc.pc(), 0x3f7c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C4 0368
        gbc.setState(0x312d, 0xf0e6, 0xe4c0, 0x2d1d, 0x9d12, 0x3fcf, 0x0, 0x0);
        gbc.writeMem(0x312d, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0xf0e6);
        EXPECT(gbc.pc(), 0x312f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C4 0369
        gbc.setState(0xe937, 0xae87, 0x11c0, 0x5216, 0xf1b9, 0x5994, 0x0, 0x0);
        gbc.writeMem(0xe937, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xae87);
        EXPECT(gbc.pc(), 0xe939);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe937), 0xcb);
        EXPECT(gbc.readMem(0xe938), 0xc4);
        // CB C4 036A
        gbc.setState(0xe0a, 0x416f, 0xed20, 0xc96, 0xc15e, 0xf58f, 0x1, 0x1);
        gbc.writeMem(0xe0a, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x416f);
        EXPECT(gbc.pc(), 0xe0c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C4 036B
        gbc.setState(0x94ba, 0xe59f, 0x57d0, 0x697b, 0x2358, 0x8, 0x0, 0x0);
        gbc.writeMem(0x94ba, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0xe59f);
        EXPECT(gbc.pc(), 0x94bc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x94ba), 0xcb);
        EXPECT(gbc.readMem(0x94bb), 0xc4);
        // CB C4 036C
        gbc.setState(0x6a1, 0xb27f, 0x9840, 0x7b39, 0x795e, 0x5a7c, 0x1, 0x0);
        gbc.writeMem(0x6a1, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xb27f);
        EXPECT(gbc.pc(), 0x6a3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C4 036D
        gbc.setState(0x63ac, 0x4ab2, 0x7ca0, 0xc42d, 0x1089, 0x903a, 0x1, 0x1);
        gbc.writeMem(0x63ac, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x4ab2);
        EXPECT(gbc.pc(), 0x63ae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C4 036E
        gbc.setState(0xe229, 0x4176, 0x4780, 0xf616, 0x480e, 0x3114, 0x1, 0x0);
        gbc.writeMem(0xe229, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x4176);
        EXPECT(gbc.pc(), 0xe22b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe229), 0xcb);
        EXPECT(gbc.readMem(0xe22a), 0xc4);
        // CB C4 036F
        gbc.setState(0xa769, 0x96bc, 0xcff0, 0x8722, 0xfa33, 0xda3b, 0x0, 0x0);
        gbc.writeMem(0xa769, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x96bc);
        EXPECT(gbc.pc(), 0xa76b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa769), 0xcb);
        EXPECT(gbc.readMem(0xa76a), 0xc4);
        // CB C4 0370
        gbc.setState(0x2ec5, 0x433, 0x96d0, 0x727f, 0x82cd, 0xe1dc, 0x0, 0x1);
        gbc.writeMem(0x2ec5, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x433);
        EXPECT(gbc.pc(), 0x2ec7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C4 0371
        gbc.setState(0x316d, 0x63c3, 0xae30, 0xd68, 0x5ed4, 0x91cb, 0x1, 0x1);
        gbc.writeMem(0x316d, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x63c3);
        EXPECT(gbc.pc(), 0x316f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C4 0372
        gbc.setState(0xe7aa, 0x677b, 0x67a0, 0xcab4, 0x3447, 0xa082, 0x0, 0x0);
        gbc.writeMem(0xe7aa, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x677b);
        EXPECT(gbc.pc(), 0xe7ac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe7aa), 0xcb);
        EXPECT(gbc.readMem(0xe7ab), 0xc4);
        // CB C4 0373
        gbc.setState(0xe578, 0xd060, 0xa960, 0xb46b, 0x3c56, 0x9acd, 0x0, 0x1);
        gbc.writeMem(0xe578, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0xd060);
        EXPECT(gbc.pc(), 0xe57a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe578), 0xcb);
        EXPECT(gbc.readMem(0xe579), 0xc4);
        // CB C4 0374
        gbc.setState(0xc2d7, 0xb561, 0x48d0, 0xbe13, 0x4965, 0x41b7, 0x1, 0x0);
        gbc.writeMem(0xc2d7, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0xb561);
        EXPECT(gbc.pc(), 0xc2d9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc2d7), 0xcb);
        EXPECT(gbc.readMem(0xc2d8), 0xc4);
        // CB C4 0376
        gbc.setState(0x7436, 0x1e73, 0x9d20, 0x83e1, 0x2fc8, 0xfead, 0x1, 0x0);
        gbc.writeMem(0x7436, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x1e73);
        EXPECT(gbc.pc(), 0x7438);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C4 0377
        gbc.setState(0x3d93, 0x9e18, 0x9d70, 0x1ae5, 0xb39b, 0x9657, 0x1, 0x1);
        gbc.writeMem(0x3d93, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x9e18);
        EXPECT(gbc.pc(), 0x3d95);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C4 0378
        gbc.setState(0xc523, 0x600e, 0xee20, 0x76ca, 0x5393, 0x108a, 0x0, 0x0);
        gbc.writeMem(0xc523, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x600e);
        EXPECT(gbc.pc(), 0xc525);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc523), 0xcb);
        EXPECT(gbc.readMem(0xc524), 0xc4);
        // CB C4 0379
        gbc.setState(0xb365, 0x5c13, 0xdf0, 0xd451, 0x2ff5, 0xb999, 0x0, 0x0);
        gbc.writeMem(0xb365, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x5c13);
        EXPECT(gbc.pc(), 0xb367);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb365), 0xcb);
        EXPECT(gbc.readMem(0xb366), 0xc4);
        // CB C4 037A
        gbc.setState(0x363f, 0xc234, 0x6d90, 0x37af, 0x1b69, 0x3479, 0x0, 0x0);
        gbc.writeMem(0x363f, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xc234);
        EXPECT(gbc.pc(), 0x3641);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C4 037B
        gbc.setState(0x2d54, 0xc5e1, 0x4670, 0xe2e6, 0xa2b0, 0x80aa, 0x0, 0x0);
        gbc.writeMem(0x2d54, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0xc5e1);
        EXPECT(gbc.pc(), 0x2d56);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C4 037C
        gbc.setState(0x7a5e, 0xc71e, 0xf1e0, 0xbc92, 0x3459, 0x3b4b, 0x0, 0x1);
        gbc.writeMem(0x7a5e, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0xc71e);
        EXPECT(gbc.pc(), 0x7a60);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C4 037D
        gbc.setState(0xf36, 0x2540, 0x8740, 0xf422, 0x2df6, 0xa476, 0x1, 0x1);
        gbc.writeMem(0xf36, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x2540);
        EXPECT(gbc.pc(), 0xf38);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C4 037E
        gbc.setState(0x9271, 0x2044, 0x18c0, 0x5049, 0x8937, 0x2e1b, 0x1, 0x0);
        gbc.writeMem(0x9271, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x2044);
        EXPECT(gbc.pc(), 0x9273);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9271), 0xcb);
        EXPECT(gbc.readMem(0x9272), 0xc4);
        // CB C4 037F
        gbc.setState(0x8947, 0xb18b, 0x6860, 0x2df1, 0xbc87, 0xb932, 0x1, 0x1);
        gbc.writeMem(0x8947, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xb18b);
        EXPECT(gbc.pc(), 0x8949);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8947), 0xcb);
        EXPECT(gbc.readMem(0x8948), 0xc4);
        // CB C4 0380
        gbc.setState(0xb37d, 0x3a16, 0xb8e0, 0xb397, 0xc376, 0xd568, 0x0, 0x1);
        gbc.writeMem(0xb37d, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x3a16);
        EXPECT(gbc.pc(), 0xb37f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb37d), 0xcb);
        EXPECT(gbc.readMem(0xb37e), 0xc4);
        // CB C4 0381
        gbc.setState(0x3760, 0x8de2, 0xf860, 0x8b61, 0xc292, 0xd46f, 0x0, 0x1);
        gbc.writeMem(0x3760, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x8de2);
        EXPECT(gbc.pc(), 0x3762);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C4 0382
        gbc.setState(0xa06, 0xa3e4, 0xca90, 0x407d, 0xe83c, 0x5c46, 0x0, 0x0);
        gbc.writeMem(0xa06, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0xa3e4);
        EXPECT(gbc.pc(), 0xa08);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C4 0383
        gbc.setState(0xb19e, 0x5c40, 0xc9e0, 0x542a, 0x4af, 0x17af, 0x1, 0x1);
        gbc.writeMem(0xb19e, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x5c40);
        EXPECT(gbc.pc(), 0xb1a0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb19e), 0xcb);
        EXPECT(gbc.readMem(0xb19f), 0xc4);
        // CB C4 0384
        gbc.setState(0xccd9, 0x6af6, 0x43e0, 0xb346, 0xbffd, 0xcac3, 0x1, 0x1);
        gbc.writeMem(0xccd9, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x6af6);
        EXPECT(gbc.pc(), 0xccdb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xccd9), 0xcb);
        EXPECT(gbc.readMem(0xccda), 0xc4);
        // CB C4 0385
        gbc.setState(0x55b2, 0x9152, 0xe550, 0xf8fc, 0x323a, 0xe73e, 0x0, 0x0);
        gbc.writeMem(0x55b2, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x9152);
        EXPECT(gbc.pc(), 0x55b4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C4 0386
        gbc.setState(0xb9ac, 0xd918, 0xcfd0, 0xa2b4, 0xce7a, 0x3a7f, 0x1, 0x1);
        gbc.writeMem(0xb9ac, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xd918);
        EXPECT(gbc.pc(), 0xb9ae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb9ac), 0xcb);
        EXPECT(gbc.readMem(0xb9ad), 0xc4);
        // CB C4 0387
        gbc.setState(0x117a, 0x12e7, 0x49d0, 0xefe4, 0xb4b0, 0x93f7, 0x1, 0x1);
        gbc.writeMem(0x117a, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x12e7);
        EXPECT(gbc.pc(), 0x117c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C4 0388
        gbc.setState(0xa3fd, 0x8e90, 0x5ce0, 0x52f0, 0x2486, 0x10e2, 0x1, 0x1);
        gbc.writeMem(0xa3fd, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x8e90);
        EXPECT(gbc.pc(), 0xa3ff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa3fd), 0xcb);
        EXPECT(gbc.readMem(0xa3fe), 0xc4);
        // CB C4 0389
        gbc.setState(0xeb95, 0xaac5, 0xb000, 0x4fd5, 0xc698, 0x7e7, 0x1, 0x1);
        gbc.writeMem(0xeb95, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xaac5);
        EXPECT(gbc.pc(), 0xeb97);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeb95), 0xcb);
        EXPECT(gbc.readMem(0xeb96), 0xc4);
        // CB C4 038A
        gbc.setState(0x3e9e, 0x74d2, 0x7200, 0x15a5, 0x385d, 0xcc74, 0x1, 0x0);
        gbc.writeMem(0x3e9e, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x74d2);
        EXPECT(gbc.pc(), 0x3ea0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C4 038B
        gbc.setState(0xa952, 0x3461, 0x9f80, 0x317e, 0x866c, 0x5286, 0x1, 0x0);
        gbc.writeMem(0xa952, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x3461);
        EXPECT(gbc.pc(), 0xa954);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa952), 0xcb);
        EXPECT(gbc.readMem(0xa953), 0xc4);
        // CB C4 038C
        gbc.setState(0x8d98, 0x6f2d, 0xd150, 0x31a1, 0x3979, 0xbd9, 0x0, 0x0);
        gbc.writeMem(0x8d98, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x6f2d);
        EXPECT(gbc.pc(), 0x8d9a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8d98), 0xcb);
        EXPECT(gbc.readMem(0x8d99), 0xc4);
        // CB C4 038D
        gbc.setState(0x3a5e, 0xc30d, 0xb560, 0x16dd, 0xb246, 0xe1f4, 0x1, 0x1);
        gbc.writeMem(0x3a5e, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0xc30d);
        EXPECT(gbc.pc(), 0x3a60);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C4 038E
        gbc.setState(0x5e7c, 0xd315, 0x4de0, 0xabe5, 0x302b, 0xb7f6, 0x1, 0x0);
        gbc.writeMem(0x5e7c, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0xd315);
        EXPECT(gbc.pc(), 0x5e7e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C4 038F
        gbc.setState(0xe419, 0x473b, 0xb9a0, 0xecd0, 0x6a53, 0xaa14, 0x1, 0x0);
        gbc.writeMem(0xe419, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x473b);
        EXPECT(gbc.pc(), 0xe41b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe419), 0xcb);
        EXPECT(gbc.readMem(0xe41a), 0xc4);
        // CB C4 0390
        gbc.setState(0xe80f, 0x647e, 0xecb0, 0xb375, 0x800, 0xc725, 0x0, 0x1);
        gbc.writeMem(0xe80f, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x647e);
        EXPECT(gbc.pc(), 0xe811);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe80f), 0xcb);
        EXPECT(gbc.readMem(0xe810), 0xc4);
        // CB C4 0391
        gbc.setState(0x36fe, 0x46c1, 0xa8f0, 0xa89c, 0x9dde, 0x8aaa, 0x1, 0x1);
        gbc.writeMem(0x36fe, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x46c1);
        EXPECT(gbc.pc(), 0x3700);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C4 0392
        gbc.setState(0x4fe8, 0x2e34, 0xf690, 0xb973, 0xac90, 0xaef4, 0x0, 0x1);
        gbc.writeMem(0x4fe8, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x2e34);
        EXPECT(gbc.pc(), 0x4fea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C4 0393
        gbc.setState(0x427, 0xae29, 0x7cc0, 0x5902, 0xe8f2, 0x3ea, 0x1, 0x1);
        gbc.writeMem(0x427, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0xae29);
        EXPECT(gbc.pc(), 0x429);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C4 0394
        gbc.setState(0x371, 0x96b1, 0x9ab0, 0xb3b0, 0x96cf, 0xbe91, 0x0, 0x0);
        gbc.writeMem(0x371, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x96b1);
        EXPECT(gbc.pc(), 0x373);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C4 0395
        gbc.setState(0xc0a9, 0xcb7e, 0x8280, 0xfb25, 0x80cd, 0x94bf, 0x1, 0x0);
        gbc.writeMem(0xc0a9, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0xcb7e);
        EXPECT(gbc.pc(), 0xc0ab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc0a9), 0xcb);
        EXPECT(gbc.readMem(0xc0aa), 0xc4);
        // CB C4 0397
        gbc.setState(0x4418, 0xa032, 0x7b40, 0xfdd3, 0xc2f9, 0xc176, 0x1, 0x0);
        gbc.writeMem(0x4418, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0xa032);
        EXPECT(gbc.pc(), 0x441a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C4 0398
        gbc.setState(0x6628, 0x7f18, 0xe4b0, 0x8334, 0xf6f2, 0x3ba3, 0x0, 0x0);
        gbc.writeMem(0x6628, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x7f18);
        EXPECT(gbc.pc(), 0x662a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C4 0399
        gbc.setState(0xd76d, 0xa2d4, 0xb040, 0x5c2a, 0xaa4b, 0xe267, 0x0, 0x1);
        gbc.writeMem(0xd76d, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0xa2d4);
        EXPECT(gbc.pc(), 0xd76f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd76d), 0xcb);
        EXPECT(gbc.readMem(0xd76e), 0xc4);
        // CB C4 039A
        gbc.setState(0x24a0, 0x15fb, 0x61e0, 0x8666, 0xe01b, 0xb899, 0x0, 0x1);
        gbc.writeMem(0x24a0, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x15fb);
        EXPECT(gbc.pc(), 0x24a2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C4 039B
        gbc.setState(0xe0bf, 0xfb31, 0x68f0, 0x2a1d, 0x3424, 0xd97, 0x1, 0x1);
        gbc.writeMem(0xe0bf, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0xfb31);
        EXPECT(gbc.pc(), 0xe0c1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe0bf), 0xcb);
        EXPECT(gbc.readMem(0xe0c0), 0xc4);
        // CB C4 039C
        gbc.setState(0x3ac5, 0xcf05, 0x4390, 0x3d87, 0x61a4, 0xf14b, 0x0, 0x1);
        gbc.writeMem(0x3ac5, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0xcf05);
        EXPECT(gbc.pc(), 0x3ac7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C4 039D
        gbc.setState(0xbfd0, 0xb9d9, 0x39b0, 0x8aaa, 0x48be, 0xc327, 0x0, 0x0);
        gbc.writeMem(0xbfd0, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0xb9d9);
        EXPECT(gbc.pc(), 0xbfd2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbfd0), 0xcb);
        EXPECT(gbc.readMem(0xbfd1), 0xc4);
        // CB C4 039E
        gbc.setState(0xedee, 0xf2bc, 0x1ec0, 0x1a81, 0x38fd, 0xd5f, 0x1, 0x0);
        gbc.writeMem(0xedee, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0xf2bc);
        EXPECT(gbc.pc(), 0xedf0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xedee), 0xcb);
        EXPECT(gbc.readMem(0xedef), 0xc4);
        // CB C4 039F
        gbc.setState(0x91db, 0xb114, 0xbc20, 0xd334, 0xf13e, 0x14d2, 0x0, 0x1);
        gbc.writeMem(0x91db, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0xb114);
        EXPECT(gbc.pc(), 0x91dd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x91db), 0xcb);
        EXPECT(gbc.readMem(0x91dc), 0xc4);
        // CB C4 03A0
        gbc.setState(0x5580, 0x70a4, 0xb0a0, 0xc358, 0x26db, 0x20f, 0x1, 0x1);
        gbc.writeMem(0x5580, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x70a4);
        EXPECT(gbc.pc(), 0x5582);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C4 03A1
        gbc.setState(0xbd90, 0x4fc3, 0x89b0, 0x4c0, 0x759a, 0x9370, 0x1, 0x0);
        gbc.writeMem(0xbd90, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x4fc3);
        EXPECT(gbc.pc(), 0xbd92);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbd90), 0xcb);
        EXPECT(gbc.readMem(0xbd91), 0xc4);
        // CB C4 03A2
        gbc.setState(0xdf97, 0x8ec2, 0x4f10, 0xd2ff, 0x1827, 0xf502, 0x0, 0x1);
        gbc.writeMem(0xdf97, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x8ec2);
        EXPECT(gbc.pc(), 0xdf99);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdf97), 0xcb);
        EXPECT(gbc.readMem(0xdf98), 0xc4);
        // CB C4 03A3
        gbc.setState(0xa230, 0xfa25, 0xf0, 0x564d, 0xe7d9, 0x1ed6, 0x0, 0x0);
        gbc.writeMem(0xa230, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0xfa25);
        EXPECT(gbc.pc(), 0xa232);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa230), 0xcb);
        EXPECT(gbc.readMem(0xa231), 0xc4);
        // CB C4 03A4
        gbc.setState(0x9c97, 0xabea, 0x6d40, 0x62df, 0x908b, 0xc690, 0x0, 0x0);
        gbc.writeMem(0x9c97, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0xabea);
        EXPECT(gbc.pc(), 0x9c99);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9c97), 0xcb);
        EXPECT(gbc.readMem(0x9c98), 0xc4);
        // CB C4 03A5
        gbc.setState(0x41a1, 0x7ab1, 0xf230, 0x3a47, 0x6891, 0x8293, 0x0, 0x1);
        gbc.writeMem(0x41a1, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x7ab1);
        EXPECT(gbc.pc(), 0x41a3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C4 03A6
        gbc.setState(0x54bc, 0xdc67, 0x2c80, 0x9e21, 0x30de, 0xbf9, 0x0, 0x1);
        gbc.writeMem(0x54bc, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xdc67);
        EXPECT(gbc.pc(), 0x54be);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C4 03A7
        gbc.setState(0x2ffb, 0x1e3d, 0x1e10, 0xa61f, 0x767d, 0xfff3, 0x1, 0x1);
        gbc.writeMem(0x2ffb, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x1e3d);
        EXPECT(gbc.pc(), 0x2ffd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C4 03A8
        gbc.setState(0x518, 0x5c2d, 0xf840, 0x7112, 0xa240, 0xe1cf, 0x0, 0x1);
        gbc.writeMem(0x518, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x5c2d);
        EXPECT(gbc.pc(), 0x51a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C4 03A9
        gbc.setState(0x87c5, 0xbf70, 0x66c0, 0xf872, 0xd534, 0xb49f, 0x0, 0x1);
        gbc.writeMem(0x87c5, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0xbf70);
        EXPECT(gbc.pc(), 0x87c7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x87c5), 0xcb);
        EXPECT(gbc.readMem(0x87c6), 0xc4);
        // CB C4 03AA
        gbc.setState(0xb001, 0xd436, 0xc0, 0xf192, 0x793b, 0x6854, 0x1, 0x0);
        gbc.writeMem(0xb001, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0xd436);
        EXPECT(gbc.pc(), 0xb003);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb001), 0xcb);
        EXPECT(gbc.readMem(0xb002), 0xc4);
        // CB C4 03AC
        gbc.setState(0x6e2c, 0xc09f, 0x31d0, 0x558b, 0x7db6, 0xe4b7, 0x1, 0x1);
        gbc.writeMem(0x6e2c, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0xc09f);
        EXPECT(gbc.pc(), 0x6e2e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C4 03AD
        gbc.setState(0xb272, 0xed46, 0xfa00, 0x200f, 0x96ad, 0xa8cc, 0x1, 0x0);
        gbc.writeMem(0xb272, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0xed46);
        EXPECT(gbc.pc(), 0xb274);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb272), 0xcb);
        EXPECT(gbc.readMem(0xb273), 0xc4);
        // CB C4 03AE
        gbc.setState(0x52eb, 0xb570, 0x6490, 0x9b8d, 0xfe31, 0x81dd, 0x0, 0x0);
        gbc.writeMem(0x52eb, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0xb570);
        EXPECT(gbc.pc(), 0x52ed);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C4 03AF
        gbc.setState(0x212a, 0x4430, 0x6800, 0xdb07, 0x7bbb, 0x2f6a, 0x1, 0x1);
        gbc.writeMem(0x212a, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x4430);
        EXPECT(gbc.pc(), 0x212c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C4 03B0
        gbc.setState(0xa49d, 0x8897, 0x14f0, 0xcbec, 0x1150, 0xc341, 0x0, 0x0);
        gbc.writeMem(0xa49d, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x8897);
        EXPECT(gbc.pc(), 0xa49f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa49d), 0xcb);
        EXPECT(gbc.readMem(0xa49e), 0xc4);
        // CB C4 03B1
        gbc.setState(0xadb7, 0x2de1, 0x48b0, 0xa81e, 0x53a3, 0xe39c, 0x1, 0x0);
        gbc.writeMem(0xadb7, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x2de1);
        EXPECT(gbc.pc(), 0xadb9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xadb7), 0xcb);
        EXPECT(gbc.readMem(0xadb8), 0xc4);
        // CB C4 03B2
        gbc.setState(0x942e, 0x247c, 0x1f40, 0xda98, 0xe635, 0x4eaf, 0x1, 0x0);
        gbc.writeMem(0x942e, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x247c);
        EXPECT(gbc.pc(), 0x9430);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x942e), 0xcb);
        EXPECT(gbc.readMem(0x942f), 0xc4);
        // CB C4 03B3
        gbc.setState(0x46f7, 0x1d3d, 0x3700, 0x242a, 0xb04f, 0x5d9, 0x1, 0x0);
        gbc.writeMem(0x46f7, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x1d3d);
        EXPECT(gbc.pc(), 0x46f9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C4 03B4
        gbc.setState(0x5b4d, 0xf645, 0x8a20, 0x4096, 0x832a, 0x2fbd, 0x0, 0x1);
        gbc.writeMem(0x5b4d, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0xf645);
        EXPECT(gbc.pc(), 0x5b4f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C4 03B5
        gbc.setState(0x6986, 0x8c98, 0x4d70, 0x8afd, 0xf51a, 0xaf23, 0x0, 0x0);
        gbc.writeMem(0x6986, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x8c98);
        EXPECT(gbc.pc(), 0x6988);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C4 03B6
        gbc.setState(0x5f99, 0x4cf0, 0x3720, 0x5ece, 0xf978, 0x3c7d, 0x1, 0x0);
        gbc.writeMem(0x5f99, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x4cf0);
        EXPECT(gbc.pc(), 0x5f9b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C4 03B7
        gbc.setState(0x4638, 0x3a28, 0xbc40, 0xa2f3, 0xebec, 0xaa4f, 0x1, 0x0);
        gbc.writeMem(0x4638, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x3a28);
        EXPECT(gbc.pc(), 0x463a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C4 03B8
        gbc.setState(0x8cbe, 0x9e1e, 0x8e70, 0x4f1c, 0xb180, 0xdd29, 0x0, 0x0);
        gbc.writeMem(0x8cbe, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x9e1e);
        EXPECT(gbc.pc(), 0x8cc0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8cbe), 0xcb);
        EXPECT(gbc.readMem(0x8cbf), 0xc4);
        // CB C4 03B9
        gbc.setState(0x4ffa, 0xe17c, 0xa1d0, 0x8f7a, 0xeea8, 0x63c9, 0x1, 0x1);
        gbc.writeMem(0x4ffa, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0xe17c);
        EXPECT(gbc.pc(), 0x4ffc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C4 03BA
        gbc.setState(0xdf03, 0x8fab, 0x8a0, 0xf7c7, 0x891c, 0xb4df, 0x1, 0x1);
        gbc.writeMem(0xdf03, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x8fab);
        EXPECT(gbc.pc(), 0xdf05);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdf03), 0xcb);
        EXPECT(gbc.readMem(0xdf04), 0xc4);
        // CB C4 03BC
        gbc.setState(0xc407, 0x1c5a, 0xdc10, 0x386a, 0x2cfc, 0x4dfa, 0x0, 0x1);
        gbc.writeMem(0xc407, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x1c5a);
        EXPECT(gbc.pc(), 0xc409);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc407), 0xcb);
        EXPECT(gbc.readMem(0xc408), 0xc4);
        // CB C4 03BD
        gbc.setState(0x226e, 0x5107, 0x4450, 0x90e7, 0xb6c4, 0x51fd, 0x0, 0x0);
        gbc.writeMem(0x226e, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x5107);
        EXPECT(gbc.pc(), 0x2270);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C4 03BE
        gbc.setState(0xd23a, 0xe69e, 0xf4d0, 0x9f0d, 0x9ff1, 0xe770, 0x1, 0x0);
        gbc.writeMem(0xd23a, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0xe69e);
        EXPECT(gbc.pc(), 0xd23c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd23a), 0xcb);
        EXPECT(gbc.readMem(0xd23b), 0xc4);
        // CB C4 03BF
        gbc.setState(0x9308, 0x93f2, 0x4280, 0x4a8d, 0x12bd, 0x83e1, 0x1, 0x0);
        gbc.writeMem(0x9308, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x93f2);
        EXPECT(gbc.pc(), 0x930a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9308), 0xcb);
        EXPECT(gbc.readMem(0x9309), 0xc4);
        // CB C4 03C0
        gbc.setState(0x5509, 0xabb3, 0xe600, 0x33f2, 0xd741, 0x69c9, 0x1, 0x0);
        gbc.writeMem(0x5509, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0xabb3);
        EXPECT(gbc.pc(), 0x550b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C4 03C1
        gbc.setState(0x97a3, 0x972f, 0xa0, 0xad6a, 0x7e2b, 0x4622, 0x1, 0x0);
        gbc.writeMem(0x97a3, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x972f);
        EXPECT(gbc.pc(), 0x97a5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x97a3), 0xcb);
        EXPECT(gbc.readMem(0x97a4), 0xc4);
        // CB C4 03C2
        gbc.setState(0x2a9e, 0xa9a9, 0xeb40, 0x9ec, 0x51d6, 0x27d4, 0x1, 0x0);
        gbc.writeMem(0x2a9e, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xa9a9);
        EXPECT(gbc.pc(), 0x2aa0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C4 03C3
        gbc.setState(0x8280, 0xe65a, 0x9fc0, 0xe21, 0xdc47, 0x4afd, 0x0, 0x1);
        gbc.writeMem(0x8280, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xe65a);
        EXPECT(gbc.pc(), 0x8282);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8280), 0xcb);
        EXPECT(gbc.readMem(0x8281), 0xc4);
        // CB C4 03C4
        gbc.setState(0x8983, 0x8cfd, 0x17e0, 0x4612, 0xb691, 0x8eae, 0x1, 0x1);
        gbc.writeMem(0x8983, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x8cfd);
        EXPECT(gbc.pc(), 0x8985);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8983), 0xcb);
        EXPECT(gbc.readMem(0x8984), 0xc4);
        // CB C4 03C5
        gbc.setState(0xb619, 0xe0d, 0x90c0, 0xae1a, 0x4d74, 0xcade, 0x0, 0x1);
        gbc.writeMem(0xb619, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0xe0d);
        EXPECT(gbc.pc(), 0xb61b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb619), 0xcb);
        EXPECT(gbc.readMem(0xb61a), 0xc4);
        // CB C4 03C6
        gbc.setState(0x313c, 0xdaf5, 0xff90, 0x7aaf, 0xe8f9, 0xafe1, 0x1, 0x0);
        gbc.writeMem(0x313c, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xdaf5);
        EXPECT(gbc.pc(), 0x313e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C4 03C7
        gbc.setState(0x44c4, 0x69c4, 0x4190, 0x2cc1, 0x5c4c, 0x2d2d, 0x1, 0x0);
        gbc.writeMem(0x44c4, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x69c4);
        EXPECT(gbc.pc(), 0x44c6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C4 03C8
        gbc.setState(0xd659, 0xfb6b, 0xa990, 0x7e60, 0x8ff0, 0xe9e0, 0x1, 0x0);
        gbc.writeMem(0xd659, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0xfb6b);
        EXPECT(gbc.pc(), 0xd65b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd659), 0xcb);
        EXPECT(gbc.readMem(0xd65a), 0xc4);
        // CB C4 03C9
        gbc.setState(0xafd5, 0xf726, 0xefc0, 0x9d83, 0xe5de, 0x5084, 0x0, 0x1);
        gbc.writeMem(0xafd5, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0xf726);
        EXPECT(gbc.pc(), 0xafd7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xafd5), 0xcb);
        EXPECT(gbc.readMem(0xafd6), 0xc4);
        // CB C4 03CA
        gbc.setState(0xe5a8, 0xff6c, 0xb410, 0x48a1, 0xe484, 0x518b, 0x1, 0x0);
        gbc.writeMem(0xe5a8, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0xff6c);
        EXPECT(gbc.pc(), 0xe5aa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe5a8), 0xcb);
        EXPECT(gbc.readMem(0xe5a9), 0xc4);
        // CB C4 03CB
        gbc.setState(0x1df6, 0xefba, 0x5800, 0xf3fb, 0x1a90, 0x498c, 0x0, 0x0);
        gbc.writeMem(0x1df6, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0xefba);
        EXPECT(gbc.pc(), 0x1df8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C4 03CC
        gbc.setState(0x7eaa, 0x8117, 0x27f0, 0x34dd, 0xba1, 0x3840, 0x1, 0x1);
        gbc.writeMem(0x7eaa, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x8117);
        EXPECT(gbc.pc(), 0x7eac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C4 03CD
        gbc.setState(0xc3f4, 0x341, 0x8210, 0x3f3, 0xc88a, 0x26a1, 0x0, 0x0);
        gbc.writeMem(0xc3f4, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x341);
        EXPECT(gbc.pc(), 0xc3f6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc3f4), 0xcb);
        EXPECT(gbc.readMem(0xc3f5), 0xc4);
        // CB C4 03CE
        gbc.setState(0x6d6e, 0xb1a1, 0x6520, 0x2853, 0xf316, 0xc709, 0x0, 0x1);
        gbc.writeMem(0x6d6e, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0xb1a1);
        EXPECT(gbc.pc(), 0x6d70);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C4 03CF
        gbc.setState(0xecaa, 0xc5ee, 0xe0, 0xdde9, 0xd16a, 0xbd92, 0x1, 0x0);
        gbc.writeMem(0xecaa, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0xc5ee);
        EXPECT(gbc.pc(), 0xecac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xecaa), 0xcb);
        EXPECT(gbc.readMem(0xecab), 0xc4);
        // CB C4 03D0
        gbc.setState(0x17e8, 0x55ac, 0x1fc0, 0x7b9a, 0xcd52, 0x8851, 0x0, 0x1);
        gbc.writeMem(0x17e8, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x55ac);
        EXPECT(gbc.pc(), 0x17ea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C4 03D1
        gbc.setState(0xc89d, 0xb1f9, 0x1c90, 0xbdc, 0x1868, 0xe47, 0x0, 0x1);
        gbc.writeMem(0xc89d, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0xb1f9);
        EXPECT(gbc.pc(), 0xc89f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc89d), 0xcb);
        EXPECT(gbc.readMem(0xc89e), 0xc4);
        // CB C4 03D2
        gbc.setState(0xa9f4, 0xc0f1, 0xd060, 0xc77f, 0x5ee7, 0xfffb, 0x1, 0x1);
        gbc.writeMem(0xa9f4, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0xc0f1);
        EXPECT(gbc.pc(), 0xa9f6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa9f4), 0xcb);
        EXPECT(gbc.readMem(0xa9f5), 0xc4);
        // CB C4 03D3
        gbc.setState(0x5cd2, 0x40bf, 0xe560, 0x671a, 0x3622, 0x1d4d, 0x1, 0x1);
        gbc.writeMem(0x5cd2, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x40bf);
        EXPECT(gbc.pc(), 0x5cd4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C4 03D4
        gbc.setState(0x528d, 0x64ed, 0xbc70, 0x10d7, 0x3210, 0xb2d4, 0x0, 0x1);
        gbc.writeMem(0x528d, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x64ed);
        EXPECT(gbc.pc(), 0x528f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C4 03D5
        gbc.setState(0x957d, 0x8519, 0xa7f0, 0x8c98, 0x460d, 0x54ed, 0x0, 0x1);
        gbc.writeMem(0x957d, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x8519);
        EXPECT(gbc.pc(), 0x957f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x957d), 0xcb);
        EXPECT(gbc.readMem(0x957e), 0xc4);
        // CB C4 03D6
        gbc.setState(0xb94c, 0x226b, 0xfdf0, 0xb5c, 0x33b1, 0x839c, 0x0, 0x0);
        gbc.writeMem(0xb94c, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x226b);
        EXPECT(gbc.pc(), 0xb94e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb94c), 0xcb);
        EXPECT(gbc.readMem(0xb94d), 0xc4);
        // CB C4 03D7
        gbc.setState(0x96c0, 0xd4ca, 0x23b0, 0x51c3, 0x44df, 0xd474, 0x0, 0x1);
        gbc.writeMem(0x96c0, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xd4ca);
        EXPECT(gbc.pc(), 0x96c2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x96c0), 0xcb);
        EXPECT(gbc.readMem(0x96c1), 0xc4);
        // CB C4 03D8
        gbc.setState(0x8553, 0xc663, 0x32c0, 0x62b9, 0x361b, 0x86be, 0x1, 0x0);
        gbc.writeMem(0x8553, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0xc663);
        EXPECT(gbc.pc(), 0x8555);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8553), 0xcb);
        EXPECT(gbc.readMem(0x8554), 0xc4);
        // CB C4 03D9
        gbc.setState(0x6fbf, 0xb6e3, 0x42b0, 0x1858, 0x9089, 0xba65, 0x1, 0x1);
        gbc.writeMem(0x6fbf, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0xb6e3);
        EXPECT(gbc.pc(), 0x6fc1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C4 03DA
        gbc.setState(0x667d, 0x38d7, 0x39d0, 0xb8af, 0x1275, 0x605d, 0x0, 0x0);
        gbc.writeMem(0x667d, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x38d7);
        EXPECT(gbc.pc(), 0x667f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C4 03DB
        gbc.setState(0x311, 0xcadc, 0x1110, 0x2f0d, 0xf4eb, 0x21fe, 0x0, 0x0);
        gbc.writeMem(0x311, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0xcadc);
        EXPECT(gbc.pc(), 0x313);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C4 03DC
        gbc.setState(0x4623, 0x5c89, 0x4970, 0x2592, 0x92be, 0xad92, 0x1, 0x0);
        gbc.writeMem(0x4623, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x5c89);
        EXPECT(gbc.pc(), 0x4625);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C4 03DD
        gbc.setState(0xbdbb, 0x474b, 0x7240, 0xe7bf, 0xb923, 0xecf2, 0x1, 0x0);
        gbc.writeMem(0xbdbb, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x474b);
        EXPECT(gbc.pc(), 0xbdbd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbdbb), 0xcb);
        EXPECT(gbc.readMem(0xbdbc), 0xc4);
        // CB C4 03DE
        gbc.setState(0x68d9, 0x6677, 0x74a0, 0x709a, 0x2bc6, 0x8f37, 0x1, 0x0);
        gbc.writeMem(0x68d9, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x6677);
        EXPECT(gbc.pc(), 0x68db);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C4 03DF
        gbc.setState(0x9181, 0xbac2, 0x1cd0, 0x4729, 0x1d13, 0xed0e, 0x1, 0x1);
        gbc.writeMem(0x9181, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0xbac2);
        EXPECT(gbc.pc(), 0x9183);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9181), 0xcb);
        EXPECT(gbc.readMem(0x9182), 0xc4);
        // CB C4 03E1
        gbc.setState(0x44d8, 0x9a65, 0x1060, 0x44c2, 0x296c, 0xe9c2, 0x1, 0x1);
        gbc.writeMem(0x44d8, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x9a65);
        EXPECT(gbc.pc(), 0x44da);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C4 03E3
        gbc.setState(0x4d3, 0x7332, 0x5ad0, 0x2665, 0xa6f8, 0x3172, 0x1, 0x0);
        gbc.writeMem(0x4d3, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x7332);
        EXPECT(gbc.pc(), 0x4d5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C4 03E4
        gbc.setState(0xc997, 0x8032, 0xdf50, 0x8c2c, 0x28c8, 0x17f3, 0x1, 0x1);
        gbc.writeMem(0xc997, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x8032);
        EXPECT(gbc.pc(), 0xc999);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc997), 0xcb);
        EXPECT(gbc.readMem(0xc998), 0xc4);
        // CB C4 03E5
        gbc.setState(0xe474, 0xac2d, 0x4210, 0xa7ac, 0x1ed1, 0xdbd0, 0x1, 0x1);
        gbc.writeMem(0xe474, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0xac2d);
        EXPECT(gbc.pc(), 0xe476);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe474), 0xcb);
        EXPECT(gbc.readMem(0xe475), 0xc4);
        // CB C4 03E6
        gbc.setState(0x6b7c, 0x3736, 0x6ff0, 0xcdcd, 0x85f, 0x858e, 0x1, 0x1);
        gbc.writeMem(0x6b7c, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x3736);
        EXPECT(gbc.pc(), 0x6b7e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C4 03E7
        gbc.setState(0x7983, 0xe4ff, 0xd340, 0x9913, 0x8a2d, 0xfbe0, 0x1, 0x0);
        gbc.writeMem(0x7983, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0xe4ff);
        EXPECT(gbc.pc(), 0x7985);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
    }
