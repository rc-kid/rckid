    TEST(gbcemu, opcode_cb_c4) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB C4 0000
        gbc.setState(0xa020, 0xfee4, 0xf50, 0xf0c0, 0xd783, 0xad97, 0x1, 0x0);
        gbc.writeMem(0xa020, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xfee4, gbc.sp());
        EXPECT(0xa022, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa020));
        EXPECT(0xc4, gbc.readMem(0xa021));
        // CB C4 0001
        gbc.setState(0x9a34, 0x666b, 0x65f0, 0x480d, 0xbe21, 0xb3cb, 0x1, 0x0);
        gbc.writeMem(0x9a34, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x666b, gbc.sp());
        EXPECT(0x9a36, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a34));
        EXPECT(0xc4, gbc.readMem(0x9a35));
        // CB C4 0002
        gbc.setState(0x8a08, 0x6e83, 0xa3f0, 0xeeab, 0x1a7b, 0xfa5b, 0x1, 0x1);
        gbc.writeMem(0x8a08, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x6e83, gbc.sp());
        EXPECT(0x8a0a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a08));
        EXPECT(0xc4, gbc.readMem(0x8a09));
        // CB C4 0003
        gbc.setState(0xb80, 0xd294, 0xcd0, 0xf3a0, 0x9164, 0x367, 0x0, 0x0);
        gbc.writeMem(0xb80, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xd294, gbc.sp());
        EXPECT(0xb82, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C4 0004
        gbc.setState(0x6850, 0xa0a5, 0x8e10, 0x359a, 0xca5a, 0x7f6f, 0x0, 0x1);
        gbc.writeMem(0x6850, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xa0a5, gbc.sp());
        EXPECT(0x6852, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C4 0005
        gbc.setState(0x3041, 0x76e9, 0x9860, 0x2818, 0xcdef, 0x50d9, 0x1, 0x1);
        gbc.writeMem(0x3041, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x76e9, gbc.sp());
        EXPECT(0x3043, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C4 0006
        gbc.setState(0xa7f4, 0x2dcf, 0xfd60, 0xf658, 0x4ad4, 0x8165, 0x1, 0x1);
        gbc.writeMem(0xa7f4, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x2dcf, gbc.sp());
        EXPECT(0xa7f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa7f4));
        EXPECT(0xc4, gbc.readMem(0xa7f5));
        // CB C4 0007
        gbc.setState(0xeeee, 0xbb05, 0x74d0, 0x94c3, 0x383c, 0x3d43, 0x1, 0x0);
        gbc.writeMem(0xeeee, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xbb05, gbc.sp());
        EXPECT(0xeef0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeeee));
        EXPECT(0xc4, gbc.readMem(0xeeef));
        // CB C4 0008
        gbc.setState(0xd44f, 0x3033, 0xa860, 0x840b, 0x2e46, 0xf90b, 0x0, 0x0);
        gbc.writeMem(0xd44f, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x3033, gbc.sp());
        EXPECT(0xd451, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd44f));
        EXPECT(0xc4, gbc.readMem(0xd450));
        // CB C4 0009
        gbc.setState(0xb65a, 0xfb08, 0x1620, 0xfb41, 0xd26e, 0xd027, 0x0, 0x0);
        gbc.writeMem(0xb65a, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xfb08, gbc.sp());
        EXPECT(0xb65c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb65a));
        EXPECT(0xc4, gbc.readMem(0xb65b));
        // CB C4 000A
        gbc.setState(0x6f57, 0xde08, 0x1410, 0xaf59, 0xe0e2, 0x9056, 0x1, 0x0);
        gbc.writeMem(0x6f57, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xde08, gbc.sp());
        EXPECT(0x6f59, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C4 000B
        gbc.setState(0x68bc, 0x3c8b, 0x1110, 0x766d, 0x519f, 0x94c6, 0x0, 0x0);
        gbc.writeMem(0x68bc, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x3c8b, gbc.sp());
        EXPECT(0x68be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C4 000C
        gbc.setState(0x3a03, 0xf203, 0x8060, 0x197b, 0xee49, 0xfcba, 0x1, 0x1);
        gbc.writeMem(0x3a03, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xf203, gbc.sp());
        EXPECT(0x3a05, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C4 000D
        gbc.setState(0xc5cf, 0x3e0d, 0xca0, 0x8f1e, 0x11f8, 0x25cb, 0x1, 0x1);
        gbc.writeMem(0xc5cf, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x3e0d, gbc.sp());
        EXPECT(0xc5d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc5cf));
        EXPECT(0xc4, gbc.readMem(0xc5d0));
        // CB C4 000E
        gbc.setState(0x2a54, 0xab64, 0xee10, 0x96c2, 0xfcd, 0x4d22, 0x0, 0x1);
        gbc.writeMem(0x2a54, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xab64, gbc.sp());
        EXPECT(0x2a56, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C4 000F
        gbc.setState(0xe569, 0x7e73, 0xb360, 0x5756, 0x2ae8, 0x994e, 0x0, 0x0);
        gbc.writeMem(0xe569, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x7e73, gbc.sp());
        EXPECT(0xe56b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe569));
        EXPECT(0xc4, gbc.readMem(0xe56a));
        // CB C4 0010
        gbc.setState(0x5cc6, 0xb762, 0x7bb0, 0x3f64, 0xe0b5, 0xa77f, 0x1, 0x0);
        gbc.writeMem(0x5cc6, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xb762, gbc.sp());
        EXPECT(0x5cc8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C4 0011
        gbc.setState(0xb11c, 0xd514, 0xaa0, 0xbb28, 0xc6c3, 0xdd14, 0x0, 0x0);
        gbc.writeMem(0xb11c, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xd514, gbc.sp());
        EXPECT(0xb11e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb11c));
        EXPECT(0xc4, gbc.readMem(0xb11d));
        // CB C4 0012
        gbc.setState(0xd6ea, 0xfcfd, 0xcc80, 0xb7e, 0xa977, 0x9d68, 0x0, 0x0);
        gbc.writeMem(0xd6ea, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xfcfd, gbc.sp());
        EXPECT(0xd6ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd6ea));
        EXPECT(0xc4, gbc.readMem(0xd6eb));
        // CB C4 0013
        gbc.setState(0x4d08, 0x9958, 0xc4a0, 0xb7f5, 0xbaf0, 0xa152, 0x1, 0x0);
        gbc.writeMem(0x4d08, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x9958, gbc.sp());
        EXPECT(0x4d0a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C4 0014
        gbc.setState(0x17ff, 0x5f30, 0xd7d0, 0xc6d, 0xaa92, 0xe0ac, 0x0, 0x0);
        gbc.writeMem(0x17ff, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x5f30, gbc.sp());
        EXPECT(0x1801, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C4 0015
        gbc.setState(0x8d44, 0xb49f, 0x70, 0xe994, 0x5280, 0x1c76, 0x1, 0x0);
        gbc.writeMem(0x8d44, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xb49f, gbc.sp());
        EXPECT(0x8d46, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d44));
        EXPECT(0xc4, gbc.readMem(0x8d45));
        // CB C4 0016
        gbc.setState(0xae0d, 0xb10d, 0x4340, 0xa69, 0x6f0b, 0x9cfa, 0x1, 0x1);
        gbc.writeMem(0xae0d, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xb10d, gbc.sp());
        EXPECT(0xae0f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae0d));
        EXPECT(0xc4, gbc.readMem(0xae0e));
        // CB C4 0017
        gbc.setState(0xefa4, 0x8104, 0x1170, 0x49a6, 0x472b, 0xfc07, 0x0, 0x1);
        gbc.writeMem(0xefa4, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x8104, gbc.sp());
        EXPECT(0xefa6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xefa4));
        EXPECT(0xc4, gbc.readMem(0xefa5));
        // CB C4 0019
        gbc.setState(0xd1b3, 0xa78b, 0x3db0, 0x3908, 0x154f, 0xc65a, 0x0, 0x1);
        gbc.writeMem(0xd1b3, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xa78b, gbc.sp());
        EXPECT(0xd1b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd1b3));
        EXPECT(0xc4, gbc.readMem(0xd1b4));
        // CB C4 001A
        gbc.setState(0xa7df, 0x78fb, 0x8f60, 0xb5cd, 0x732b, 0xfe0a, 0x0, 0x1);
        gbc.writeMem(0xa7df, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x78fb, gbc.sp());
        EXPECT(0xa7e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa7df));
        EXPECT(0xc4, gbc.readMem(0xa7e0));
        // CB C4 001B
        gbc.setState(0x1a9b, 0x7e33, 0xf930, 0x423d, 0x8a60, 0x3213, 0x0, 0x1);
        gbc.writeMem(0x1a9b, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x7e33, gbc.sp());
        EXPECT(0x1a9d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C4 001C
        gbc.setState(0xde8d, 0xfe00, 0x64b0, 0x13aa, 0x294d, 0xa6d4, 0x0, 0x1);
        gbc.writeMem(0xde8d, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xfe00, gbc.sp());
        EXPECT(0xde8f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde8d));
        EXPECT(0xc4, gbc.readMem(0xde8e));
        // CB C4 001E
        gbc.setState(0x71d9, 0x8863, 0xf860, 0x33d7, 0xc3fa, 0xe1fa, 0x1, 0x1);
        gbc.writeMem(0x71d9, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x8863, gbc.sp());
        EXPECT(0x71db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C4 001F
        gbc.setState(0x24b8, 0x5caa, 0xf9e0, 0x85c6, 0x543e, 0xb255, 0x1, 0x1);
        gbc.writeMem(0x24b8, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x5caa, gbc.sp());
        EXPECT(0x24ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C4 0020
        gbc.setState(0x9386, 0x946b, 0x4770, 0xc18a, 0x75a8, 0xd18d, 0x0, 0x1);
        gbc.writeMem(0x9386, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x946b, gbc.sp());
        EXPECT(0x9388, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9386));
        EXPECT(0xc4, gbc.readMem(0x9387));
        // CB C4 0021
        gbc.setState(0x4761, 0x82b5, 0xf190, 0xfc7f, 0x9a57, 0x7c5c, 0x1, 0x1);
        gbc.writeMem(0x4761, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x82b5, gbc.sp());
        EXPECT(0x4763, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C4 0022
        gbc.setState(0x6c97, 0xc1d1, 0xdc70, 0xd00c, 0x5897, 0x1af3, 0x0, 0x0);
        gbc.writeMem(0x6c97, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xc1d1, gbc.sp());
        EXPECT(0x6c99, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C4 0024
        gbc.setState(0x2d6f, 0xb5a7, 0x2f00, 0x73cb, 0xf86b, 0x1315, 0x1, 0x0);
        gbc.writeMem(0x2d6f, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xb5a7, gbc.sp());
        EXPECT(0x2d71, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C4 0025
        gbc.setState(0x9afa, 0x8314, 0x1cd0, 0x9bb8, 0xa78f, 0xfe07, 0x0, 0x0);
        gbc.writeMem(0x9afa, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x8314, gbc.sp());
        EXPECT(0x9afc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9afa));
        EXPECT(0xc4, gbc.readMem(0x9afb));
        // CB C4 0026
        gbc.setState(0x31f6, 0x30d4, 0x7b70, 0x5060, 0x2c4a, 0x9bd3, 0x1, 0x1);
        gbc.writeMem(0x31f6, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x30d4, gbc.sp());
        EXPECT(0x31f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C4 0027
        gbc.setState(0xd171, 0x3c46, 0x76d0, 0x38f9, 0xa533, 0xad3b, 0x0, 0x1);
        gbc.writeMem(0xd171, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x3c46, gbc.sp());
        EXPECT(0xd173, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd171));
        EXPECT(0xc4, gbc.readMem(0xd172));
        // CB C4 0028
        gbc.setState(0xc18e, 0x62a9, 0x52b0, 0x7bc, 0x1107, 0x4bce, 0x0, 0x1);
        gbc.writeMem(0xc18e, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x62a9, gbc.sp());
        EXPECT(0xc190, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc18e));
        EXPECT(0xc4, gbc.readMem(0xc18f));
        // CB C4 0029
        gbc.setState(0xd2c, 0xa839, 0x5600, 0x4b6, 0xb6aa, 0x9d1f, 0x1, 0x0);
        gbc.writeMem(0xd2c, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xa839, gbc.sp());
        EXPECT(0xd2e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C4 002A
        gbc.setState(0xea07, 0x5350, 0x6f90, 0xef07, 0xd015, 0xe859, 0x1, 0x1);
        gbc.writeMem(0xea07, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x5350, gbc.sp());
        EXPECT(0xea09, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea07));
        EXPECT(0xc4, gbc.readMem(0xea08));
        // CB C4 002B
        gbc.setState(0x1cfc, 0x2b8, 0xdc70, 0xb79f, 0xfb9a, 0xefdd, 0x0, 0x1);
        gbc.writeMem(0x1cfc, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x2b8, gbc.sp());
        EXPECT(0x1cfe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C4 002C
        gbc.setState(0xb0fa, 0xbd3, 0xafe0, 0xffd6, 0xc989, 0xee1c, 0x0, 0x1);
        gbc.writeMem(0xb0fa, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xbd3, gbc.sp());
        EXPECT(0xb0fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb0fa));
        EXPECT(0xc4, gbc.readMem(0xb0fb));
        // CB C4 002D
        gbc.setState(0x1475, 0x3d43, 0x6d00, 0x1e8f, 0x51b3, 0xb99e, 0x0, 0x0);
        gbc.writeMem(0x1475, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x3d43, gbc.sp());
        EXPECT(0x1477, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C4 002E
        gbc.setState(0xcbf0, 0x73b5, 0x980, 0x420f, 0x826b, 0x4883, 0x1, 0x1);
        gbc.writeMem(0xcbf0, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x73b5, gbc.sp());
        EXPECT(0xcbf2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcbf0));
        EXPECT(0xc4, gbc.readMem(0xcbf1));
        // CB C4 002F
        gbc.setState(0xb7b7, 0x9f16, 0x7f30, 0xc339, 0xdbf, 0xf2bd, 0x0, 0x1);
        gbc.writeMem(0xb7b7, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x9f16, gbc.sp());
        EXPECT(0xb7b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb7b7));
        EXPECT(0xc4, gbc.readMem(0xb7b8));
        // CB C4 0030
        gbc.setState(0xbfe0, 0xc09d, 0x6090, 0x6d1d, 0x26c0, 0x78ed, 0x1, 0x1);
        gbc.writeMem(0xbfe0, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xc09d, gbc.sp());
        EXPECT(0xbfe2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbfe0));
        EXPECT(0xc4, gbc.readMem(0xbfe1));
        // CB C4 0031
        gbc.setState(0xd272, 0x8658, 0xef50, 0x31a7, 0xe725, 0xc759, 0x0, 0x1);
        gbc.writeMem(0xd272, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x8658, gbc.sp());
        EXPECT(0xd274, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd272));
        EXPECT(0xc4, gbc.readMem(0xd273));
        // CB C4 0032
        gbc.setState(0x7d9a, 0x4164, 0x6fe0, 0x602f, 0x785d, 0x67a1, 0x0, 0x0);
        gbc.writeMem(0x7d9a, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x4164, gbc.sp());
        EXPECT(0x7d9c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C4 0033
        gbc.setState(0x3947, 0x48d7, 0xe8f0, 0xcedf, 0xc8f5, 0x5b74, 0x0, 0x0);
        gbc.writeMem(0x3947, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x48d7, gbc.sp());
        EXPECT(0x3949, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C4 0034
        gbc.setState(0xb94f, 0x71b7, 0xf590, 0x8d56, 0xcfc3, 0x5aca, 0x0, 0x0);
        gbc.writeMem(0xb94f, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x71b7, gbc.sp());
        EXPECT(0xb951, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb94f));
        EXPECT(0xc4, gbc.readMem(0xb950));
        // CB C4 0035
        gbc.setState(0x3d88, 0x2ba7, 0xa460, 0x67e2, 0x1691, 0x31e6, 0x0, 0x0);
        gbc.writeMem(0x3d88, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x2ba7, gbc.sp());
        EXPECT(0x3d8a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C4 0036
        gbc.setState(0x6540, 0x1caf, 0x9380, 0x2745, 0x100e, 0x6c5e, 0x0, 0x0);
        gbc.writeMem(0x6540, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x1caf, gbc.sp());
        EXPECT(0x6542, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C4 0037
        gbc.setState(0x9f74, 0xc28b, 0x5360, 0x4282, 0x71ca, 0x1f0d, 0x1, 0x0);
        gbc.writeMem(0x9f74, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xc28b, gbc.sp());
        EXPECT(0x9f76, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f74));
        EXPECT(0xc4, gbc.readMem(0x9f75));
        // CB C4 0038
        gbc.setState(0x31b8, 0x7a52, 0x9340, 0xa200, 0x15ed, 0x5296, 0x1, 0x1);
        gbc.writeMem(0x31b8, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x7a52, gbc.sp());
        EXPECT(0x31ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C4 0039
        gbc.setState(0x118, 0xaf05, 0x5ad0, 0x78ff, 0x8aee, 0x7635, 0x0, 0x0);
        gbc.writeMem(0x118, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xaf05, gbc.sp());
        EXPECT(0x11a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C4 003A
        gbc.setState(0xb216, 0x6998, 0x4cf0, 0x7373, 0x61d1, 0xbf4, 0x1, 0x1);
        gbc.writeMem(0xb216, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x6998, gbc.sp());
        EXPECT(0xb218, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb216));
        EXPECT(0xc4, gbc.readMem(0xb217));
        // CB C4 003B
        gbc.setState(0xc61d, 0xe2eb, 0xcbb0, 0x3999, 0x225c, 0x6e85, 0x0, 0x1);
        gbc.writeMem(0xc61d, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xe2eb, gbc.sp());
        EXPECT(0xc61f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc61d));
        EXPECT(0xc4, gbc.readMem(0xc61e));
        // CB C4 003C
        gbc.setState(0x8be4, 0xd5d5, 0x8280, 0x4d3e, 0x37a1, 0x6a7a, 0x1, 0x0);
        gbc.writeMem(0x8be4, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xd5d5, gbc.sp());
        EXPECT(0x8be6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8be4));
        EXPECT(0xc4, gbc.readMem(0x8be5));
        // CB C4 003D
        gbc.setState(0x847c, 0x12de, 0x69a0, 0x5d21, 0xef2, 0x1340, 0x0, 0x1);
        gbc.writeMem(0x847c, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x12de, gbc.sp());
        EXPECT(0x847e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x847c));
        EXPECT(0xc4, gbc.readMem(0x847d));
        // CB C4 003E
        gbc.setState(0x5bab, 0x6694, 0x1ae0, 0xfc31, 0x8043, 0x658d, 0x0, 0x0);
        gbc.writeMem(0x5bab, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x6694, gbc.sp());
        EXPECT(0x5bad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C4 003F
        gbc.setState(0xb20c, 0x7b3c, 0xe9a0, 0xff8e, 0x77e6, 0x82d8, 0x0, 0x1);
        gbc.writeMem(0xb20c, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x7b3c, gbc.sp());
        EXPECT(0xb20e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb20c));
        EXPECT(0xc4, gbc.readMem(0xb20d));
        // CB C4 0040
        gbc.setState(0x3af8, 0x98ef, 0x4510, 0x4c56, 0x1858, 0x83f6, 0x1, 0x1);
        gbc.writeMem(0x3af8, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x98ef, gbc.sp());
        EXPECT(0x3afa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C4 0041
        gbc.setState(0x5b62, 0xeecf, 0x6530, 0xea80, 0xc74e, 0xf3d0, 0x0, 0x0);
        gbc.writeMem(0x5b62, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xeecf, gbc.sp());
        EXPECT(0x5b64, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C4 0042
        gbc.setState(0x8fd5, 0xbebe, 0x5e80, 0xf186, 0x447d, 0x914b, 0x1, 0x0);
        gbc.writeMem(0x8fd5, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xbebe, gbc.sp());
        EXPECT(0x8fd7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8fd5));
        EXPECT(0xc4, gbc.readMem(0x8fd6));
        // CB C4 0043
        gbc.setState(0xe51, 0x9cf7, 0xe70, 0x758, 0xad43, 0x4989, 0x1, 0x0);
        gbc.writeMem(0xe51, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x9cf7, gbc.sp());
        EXPECT(0xe53, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C4 0044
        gbc.setState(0xd445, 0xb0f3, 0x5e50, 0xd1ce, 0x2d9a, 0xb113, 0x0, 0x1);
        gbc.writeMem(0xd445, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xb0f3, gbc.sp());
        EXPECT(0xd447, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd445));
        EXPECT(0xc4, gbc.readMem(0xd446));
        // CB C4 0045
        gbc.setState(0xd3ce, 0xf1a5, 0xb3f0, 0x45ed, 0xf7b5, 0x9101, 0x0, 0x1);
        gbc.writeMem(0xd3ce, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xf1a5, gbc.sp());
        EXPECT(0xd3d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd3ce));
        EXPECT(0xc4, gbc.readMem(0xd3cf));
        // CB C4 0046
        gbc.setState(0xb26e, 0x385d, 0x2df0, 0xba75, 0xabbb, 0x5558, 0x1, 0x0);
        gbc.writeMem(0xb26e, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x385d, gbc.sp());
        EXPECT(0xb270, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb26e));
        EXPECT(0xc4, gbc.readMem(0xb26f));
        // CB C4 0047
        gbc.setState(0xb118, 0xb829, 0x2da0, 0xc88d, 0x5145, 0x8378, 0x1, 0x1);
        gbc.writeMem(0xb118, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xb829, gbc.sp());
        EXPECT(0xb11a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb118));
        EXPECT(0xc4, gbc.readMem(0xb119));
        // CB C4 0048
        gbc.setState(0xc570, 0x9d94, 0x3a00, 0x490c, 0x6555, 0x6ae5, 0x0, 0x1);
        gbc.writeMem(0xc570, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x9d94, gbc.sp());
        EXPECT(0xc572, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc570));
        EXPECT(0xc4, gbc.readMem(0xc571));
        // CB C4 0049
        gbc.setState(0x887, 0x69c6, 0x6d50, 0xb446, 0x266f, 0x9846, 0x0, 0x1);
        gbc.writeMem(0x887, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x69c6, gbc.sp());
        EXPECT(0x889, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C4 004A
        gbc.setState(0x789c, 0x8c3, 0x5900, 0xf38c, 0xd798, 0x293a, 0x1, 0x0);
        gbc.writeMem(0x789c, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x8c3, gbc.sp());
        EXPECT(0x789e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C4 004B
        gbc.setState(0x5ffa, 0xd127, 0x9580, 0x43d0, 0xcb9, 0xdb4a, 0x0, 0x1);
        gbc.writeMem(0x5ffa, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xd127, gbc.sp());
        EXPECT(0x5ffc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C4 004C
        gbc.setState(0x4aa, 0x95c7, 0x4790, 0x3b04, 0xe398, 0x3136, 0x1, 0x0);
        gbc.writeMem(0x4aa, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x95c7, gbc.sp());
        EXPECT(0x4ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C4 004D
        gbc.setState(0x8430, 0x993c, 0xb100, 0x8e15, 0xbf7d, 0x846f, 0x1, 0x1);
        gbc.writeMem(0x8430, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x993c, gbc.sp());
        EXPECT(0x8432, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8430));
        EXPECT(0xc4, gbc.readMem(0x8431));
        // CB C4 004E
        gbc.setState(0x84f3, 0xb71e, 0xf020, 0xe732, 0x484a, 0x7fba, 0x1, 0x0);
        gbc.writeMem(0x84f3, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xb71e, gbc.sp());
        EXPECT(0x84f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x84f3));
        EXPECT(0xc4, gbc.readMem(0x84f4));
        // CB C4 004F
        gbc.setState(0x1eb3, 0x3f12, 0xdbe0, 0xf14a, 0x5e23, 0xb7f2, 0x1, 0x0);
        gbc.writeMem(0x1eb3, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x3f12, gbc.sp());
        EXPECT(0x1eb5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C4 0050
        gbc.setState(0x965e, 0xb359, 0x1450, 0x8cac, 0xa7b0, 0x8dc5, 0x1, 0x1);
        gbc.writeMem(0x965e, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xb359, gbc.sp());
        EXPECT(0x9660, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x965e));
        EXPECT(0xc4, gbc.readMem(0x965f));
        // CB C4 0051
        gbc.setState(0x10d7, 0x49a3, 0xd8f0, 0xd8eb, 0x8ca7, 0x99e1, 0x1, 0x1);
        gbc.writeMem(0x10d7, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x49a3, gbc.sp());
        EXPECT(0x10d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C4 0052
        gbc.setState(0x2738, 0x7d5b, 0x5240, 0x67ee, 0x9a60, 0x4824, 0x1, 0x1);
        gbc.writeMem(0x2738, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x7d5b, gbc.sp());
        EXPECT(0x273a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C4 0053
        gbc.setState(0xd44, 0x330b, 0xd20, 0x49b7, 0x2d40, 0xd52b, 0x0, 0x0);
        gbc.writeMem(0xd44, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x330b, gbc.sp());
        EXPECT(0xd46, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C4 0054
        gbc.setState(0xe056, 0x1339, 0x2810, 0x38cb, 0xaca6, 0x85e0, 0x1, 0x1);
        gbc.writeMem(0xe056, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x1339, gbc.sp());
        EXPECT(0xe058, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe056));
        EXPECT(0xc4, gbc.readMem(0xe057));
        // CB C4 0055
        gbc.setState(0xe704, 0xfc15, 0xc030, 0xc42b, 0x3cb2, 0xd291, 0x0, 0x0);
        gbc.writeMem(0xe704, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xfc15, gbc.sp());
        EXPECT(0xe706, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe704));
        EXPECT(0xc4, gbc.readMem(0xe705));
        // CB C4 0056
        gbc.setState(0xc4b6, 0xd559, 0xbe40, 0x7136, 0xf127, 0x23c5, 0x0, 0x1);
        gbc.writeMem(0xc4b6, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xd559, gbc.sp());
        EXPECT(0xc4b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc4b6));
        EXPECT(0xc4, gbc.readMem(0xc4b7));
        // CB C4 0057
        gbc.setState(0x9461, 0xcac3, 0x6040, 0xabcb, 0x92d3, 0xc9b5, 0x0, 0x1);
        gbc.writeMem(0x9461, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xcac3, gbc.sp());
        EXPECT(0x9463, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9461));
        EXPECT(0xc4, gbc.readMem(0x9462));
        // CB C4 0058
        gbc.setState(0x558a, 0x9e32, 0xeff0, 0x1248, 0x46fc, 0xeeed, 0x1, 0x1);
        gbc.writeMem(0x558a, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x9e32, gbc.sp());
        EXPECT(0x558c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C4 0059
        gbc.setState(0x6df3, 0xc108, 0xf140, 0x7f12, 0xb159, 0x1119, 0x1, 0x0);
        gbc.writeMem(0x6df3, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xc108, gbc.sp());
        EXPECT(0x6df5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C4 005A
        gbc.setState(0xced1, 0x5818, 0xa950, 0x3535, 0x1bfc, 0xbf0d, 0x0, 0x1);
        gbc.writeMem(0xced1, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x5818, gbc.sp());
        EXPECT(0xced3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xced1));
        EXPECT(0xc4, gbc.readMem(0xced2));
        // CB C4 005B
        gbc.setState(0x389d, 0xca8e, 0xb740, 0x7a80, 0x666d, 0x25a9, 0x1, 0x0);
        gbc.writeMem(0x389d, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xca8e, gbc.sp());
        EXPECT(0x389f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C4 005C
        gbc.setState(0x7180, 0xc304, 0xa490, 0xa63e, 0x5af, 0x7d3a, 0x0, 0x0);
        gbc.writeMem(0x7180, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xc304, gbc.sp());
        EXPECT(0x7182, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C4 005D
        gbc.setState(0x5afc, 0x2d34, 0x260, 0xbfb, 0xb6ae, 0x33fb, 0x1, 0x1);
        gbc.writeMem(0x5afc, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x2d34, gbc.sp());
        EXPECT(0x5afe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C4 005E
        gbc.setState(0x8ed9, 0x6e5c, 0xe3b0, 0xa568, 0x75cb, 0x12f4, 0x0, 0x1);
        gbc.writeMem(0x8ed9, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x6e5c, gbc.sp());
        EXPECT(0x8edb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ed9));
        EXPECT(0xc4, gbc.readMem(0x8eda));
        // CB C4 005F
        gbc.setState(0x7646, 0x1cd3, 0x7130, 0x9231, 0x46a4, 0x1540, 0x0, 0x1);
        gbc.writeMem(0x7646, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x1cd3, gbc.sp());
        EXPECT(0x7648, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C4 0060
        gbc.setState(0x751, 0xb93b, 0x6ab0, 0xc9e5, 0xce5c, 0xd962, 0x0, 0x1);
        gbc.writeMem(0x751, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xb93b, gbc.sp());
        EXPECT(0x753, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C4 0061
        gbc.setState(0xb717, 0xdff5, 0x31c0, 0x1050, 0xe538, 0xbbe7, 0x1, 0x1);
        gbc.writeMem(0xb717, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xdff5, gbc.sp());
        EXPECT(0xb719, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb717));
        EXPECT(0xc4, gbc.readMem(0xb718));
        // CB C4 0062
        gbc.setState(0x3c4a, 0xc7a7, 0xfc70, 0x721, 0x5dfe, 0x4e4b, 0x1, 0x1);
        gbc.writeMem(0x3c4a, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xc7a7, gbc.sp());
        EXPECT(0x3c4c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C4 0064
        gbc.setState(0x210d, 0xdd8a, 0xce10, 0xdbf, 0x97c, 0xa819, 0x0, 0x0);
        gbc.writeMem(0x210d, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xdd8a, gbc.sp());
        EXPECT(0x210f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C4 0066
        gbc.setState(0x2d30, 0xaaac, 0x5d0, 0xb05f, 0x3061, 0x93aa, 0x1, 0x1);
        gbc.writeMem(0x2d30, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xaaac, gbc.sp());
        EXPECT(0x2d32, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C4 0067
        gbc.setState(0xb23, 0x620d, 0xccc0, 0xbae7, 0x3179, 0x3dac, 0x1, 0x1);
        gbc.writeMem(0xb23, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x620d, gbc.sp());
        EXPECT(0xb25, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C4 0068
        gbc.setState(0x1289, 0xfaa7, 0xf2c0, 0xf35c, 0x9e1e, 0x620, 0x1, 0x1);
        gbc.writeMem(0x1289, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xfaa7, gbc.sp());
        EXPECT(0x128b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C4 0069
        gbc.setState(0x106e, 0x8c2a, 0x4740, 0x7798, 0x4719, 0x2abc, 0x1, 0x0);
        gbc.writeMem(0x106e, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x8c2a, gbc.sp());
        EXPECT(0x1070, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C4 006A
        gbc.setState(0x1cf8, 0x9ba1, 0x62c0, 0xe289, 0x42e6, 0x6481, 0x0, 0x0);
        gbc.writeMem(0x1cf8, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x9ba1, gbc.sp());
        EXPECT(0x1cfa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C4 006B
        gbc.setState(0x39fa, 0x6fbb, 0x270, 0xc72f, 0x4370, 0x1816, 0x0, 0x0);
        gbc.writeMem(0x39fa, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x6fbb, gbc.sp());
        EXPECT(0x39fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C4 006C
        gbc.setState(0x4dbf, 0x1ed7, 0xf3f0, 0xda38, 0x3b7d, 0xccf4, 0x1, 0x0);
        gbc.writeMem(0x4dbf, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x1ed7, gbc.sp());
        EXPECT(0x4dc1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C4 006D
        gbc.setState(0xbb32, 0xa60d, 0x1b10, 0xbb9c, 0xa541, 0xe0d4, 0x1, 0x1);
        gbc.writeMem(0xbb32, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xa60d, gbc.sp());
        EXPECT(0xbb34, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb32));
        EXPECT(0xc4, gbc.readMem(0xbb33));
        // CB C4 006E
        gbc.setState(0xe859, 0x2082, 0xce60, 0x2f71, 0x3123, 0x449e, 0x1, 0x0);
        gbc.writeMem(0xe859, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x2082, gbc.sp());
        EXPECT(0xe85b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe859));
        EXPECT(0xc4, gbc.readMem(0xe85a));
        // CB C4 006F
        gbc.setState(0x31d0, 0xf8ee, 0x2840, 0x2804, 0xafae, 0xa2d9, 0x0, 0x0);
        gbc.writeMem(0x31d0, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xf8ee, gbc.sp());
        EXPECT(0x31d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C4 0070
        gbc.setState(0x8e26, 0x2a22, 0x8390, 0xc22d, 0xa636, 0x3bd9, 0x1, 0x1);
        gbc.writeMem(0x8e26, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x2a22, gbc.sp());
        EXPECT(0x8e28, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e26));
        EXPECT(0xc4, gbc.readMem(0x8e27));
        // CB C4 0071
        gbc.setState(0x107b, 0x9132, 0x4fb0, 0x91e2, 0x7714, 0xa2b1, 0x0, 0x1);
        gbc.writeMem(0x107b, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x9132, gbc.sp());
        EXPECT(0x107d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C4 0072
        gbc.setState(0x59e4, 0x2ea2, 0xe240, 0x6170, 0xa4cb, 0x1103, 0x1, 0x0);
        gbc.writeMem(0x59e4, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x2ea2, gbc.sp());
        EXPECT(0x59e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C4 0073
        gbc.setState(0x35c8, 0x3c64, 0x93e0, 0xac57, 0x3b84, 0xbc25, 0x0, 0x1);
        gbc.writeMem(0x35c8, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x3c64, gbc.sp());
        EXPECT(0x35ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C4 0074
        gbc.setState(0x7060, 0xeff4, 0xd2e0, 0x2c5, 0x1519, 0x13ce, 0x1, 0x1);
        gbc.writeMem(0x7060, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xeff4, gbc.sp());
        EXPECT(0x7062, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C4 0075
        gbc.setState(0x9381, 0x17ce, 0xd940, 0xb8da, 0xc7bc, 0xa047, 0x1, 0x1);
        gbc.writeMem(0x9381, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x17ce, gbc.sp());
        EXPECT(0x9383, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9381));
        EXPECT(0xc4, gbc.readMem(0x9382));
        // CB C4 0076
        gbc.setState(0x1ddc, 0x591b, 0xf490, 0xf200, 0xcefe, 0xd8c6, 0x0, 0x0);
        gbc.writeMem(0x1ddc, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x591b, gbc.sp());
        EXPECT(0x1dde, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C4 0077
        gbc.setState(0x89f, 0x1bb0, 0xeaa0, 0xae3a, 0xfdbf, 0xbd29, 0x1, 0x1);
        gbc.writeMem(0x89f, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x1bb0, gbc.sp());
        EXPECT(0x8a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C4 0078
        gbc.setState(0xd01b, 0xe73a, 0x5da0, 0xf0a8, 0xdbbe, 0x9351, 0x0, 0x0);
        gbc.writeMem(0xd01b, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xe73a, gbc.sp());
        EXPECT(0xd01d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd01b));
        EXPECT(0xc4, gbc.readMem(0xd01c));
        // CB C4 0079
        gbc.setState(0x22cb, 0xc2da, 0x6900, 0xd20b, 0x73cb, 0x6105, 0x0, 0x1);
        gbc.writeMem(0x22cb, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xc2da, gbc.sp());
        EXPECT(0x22cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C4 007A
        gbc.setState(0xdfa1, 0xdd67, 0x86c0, 0x24ce, 0xfd67, 0x5789, 0x1, 0x1);
        gbc.writeMem(0xdfa1, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xdd67, gbc.sp());
        EXPECT(0xdfa3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdfa1));
        EXPECT(0xc4, gbc.readMem(0xdfa2));
        // CB C4 007B
        gbc.setState(0x744a, 0xd794, 0x4d30, 0x3c9d, 0x1e4, 0xd0b1, 0x1, 0x0);
        gbc.writeMem(0x744a, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xd794, gbc.sp());
        EXPECT(0x744c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C4 007C
        gbc.setState(0x9549, 0x3145, 0xc960, 0x1ee0, 0x76e9, 0xcbfb, 0x0, 0x0);
        gbc.writeMem(0x9549, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x3145, gbc.sp());
        EXPECT(0x954b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9549));
        EXPECT(0xc4, gbc.readMem(0x954a));
        // CB C4 007D
        gbc.setState(0x7aca, 0xd183, 0x980, 0xc5c2, 0xc4e9, 0xafc5, 0x0, 0x0);
        gbc.writeMem(0x7aca, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xd183, gbc.sp());
        EXPECT(0x7acc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C4 007E
        gbc.setState(0x8b99, 0xbd0d, 0xbfa0, 0xc218, 0xc4, 0x3f3, 0x1, 0x1);
        gbc.writeMem(0x8b99, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xbd0d, gbc.sp());
        EXPECT(0x8b9b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b99));
        EXPECT(0xc4, gbc.readMem(0x8b9a));
        // CB C4 007F
        gbc.setState(0x9443, 0x17e4, 0xff70, 0xc3e3, 0x8b45, 0x1ecd, 0x0, 0x0);
        gbc.writeMem(0x9443, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x17e4, gbc.sp());
        EXPECT(0x9445, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9443));
        EXPECT(0xc4, gbc.readMem(0x9444));
        // CB C4 0080
        gbc.setState(0x1076, 0x888b, 0xe600, 0xc492, 0x1e39, 0x8ef0, 0x0, 0x0);
        gbc.writeMem(0x1076, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x888b, gbc.sp());
        EXPECT(0x1078, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C4 0082
        gbc.setState(0xeedc, 0x806b, 0x85c0, 0xfa0c, 0xd18c, 0x5bcc, 0x0, 0x1);
        gbc.writeMem(0xeedc, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x806b, gbc.sp());
        EXPECT(0xeede, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeedc));
        EXPECT(0xc4, gbc.readMem(0xeedd));
        // CB C4 0083
        gbc.setState(0x26bb, 0xbf31, 0xd070, 0xe460, 0x11a1, 0x8cab, 0x0, 0x1);
        gbc.writeMem(0x26bb, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xbf31, gbc.sp());
        EXPECT(0x26bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C4 0084
        gbc.setState(0x8234, 0x5fd7, 0xd160, 0x7a22, 0x4b6d, 0x8c57, 0x1, 0x0);
        gbc.writeMem(0x8234, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x5fd7, gbc.sp());
        EXPECT(0x8236, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8234));
        EXPECT(0xc4, gbc.readMem(0x8235));
        // CB C4 0085
        gbc.setState(0xa16e, 0x5a3d, 0xebe0, 0xd2b, 0x7385, 0x1d0d, 0x0, 0x1);
        gbc.writeMem(0xa16e, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x5a3d, gbc.sp());
        EXPECT(0xa170, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa16e));
        EXPECT(0xc4, gbc.readMem(0xa16f));
        // CB C4 0086
        gbc.setState(0xaca0, 0xe64f, 0xcf70, 0xb25b, 0x1c22, 0x8717, 0x1, 0x1);
        gbc.writeMem(0xaca0, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xe64f, gbc.sp());
        EXPECT(0xaca2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaca0));
        EXPECT(0xc4, gbc.readMem(0xaca1));
        // CB C4 0087
        gbc.setState(0x8f1c, 0xef01, 0x580, 0x33dd, 0x8b98, 0xb23, 0x1, 0x0);
        gbc.writeMem(0x8f1c, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xef01, gbc.sp());
        EXPECT(0x8f1e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f1c));
        EXPECT(0xc4, gbc.readMem(0x8f1d));
        // CB C4 0088
        gbc.setState(0x2778, 0xe42c, 0xd930, 0xa731, 0xea11, 0xe7dc, 0x0, 0x1);
        gbc.writeMem(0x2778, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xe42c, gbc.sp());
        EXPECT(0x277a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C4 0089
        gbc.setState(0x1ad, 0x5058, 0x2660, 0xf517, 0x75de, 0x43fd, 0x0, 0x0);
        gbc.writeMem(0x1ad, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x5058, gbc.sp());
        EXPECT(0x1af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C4 008A
        gbc.setState(0xb594, 0x47a1, 0x9180, 0xaace, 0xef3d, 0x912f, 0x1, 0x0);
        gbc.writeMem(0xb594, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x47a1, gbc.sp());
        EXPECT(0xb596, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb594));
        EXPECT(0xc4, gbc.readMem(0xb595));
        // CB C4 008B
        gbc.setState(0x966f, 0x91bf, 0x4920, 0xbe89, 0xd320, 0x3530, 0x0, 0x0);
        gbc.writeMem(0x966f, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x91bf, gbc.sp());
        EXPECT(0x9671, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x966f));
        EXPECT(0xc4, gbc.readMem(0x9670));
        // CB C4 008C
        gbc.setState(0x87c3, 0xca09, 0xb120, 0x4cf0, 0x45ff, 0xd0ab, 0x1, 0x1);
        gbc.writeMem(0x87c3, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xca09, gbc.sp());
        EXPECT(0x87c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x87c3));
        EXPECT(0xc4, gbc.readMem(0x87c4));
        // CB C4 008D
        gbc.setState(0xc533, 0xddb6, 0x86b0, 0x5624, 0xc7f5, 0x667c, 0x1, 0x1);
        gbc.writeMem(0xc533, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xddb6, gbc.sp());
        EXPECT(0xc535, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc533));
        EXPECT(0xc4, gbc.readMem(0xc534));
        // CB C4 008E
        gbc.setState(0xd899, 0xfed6, 0xfff0, 0x6196, 0x54de, 0xa517, 0x1, 0x0);
        gbc.writeMem(0xd899, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xfed6, gbc.sp());
        EXPECT(0xd89b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd899));
        EXPECT(0xc4, gbc.readMem(0xd89a));
        // CB C4 008F
        gbc.setState(0x879a, 0x659f, 0xe9c0, 0x4e22, 0xd8e8, 0x155b, 0x1, 0x0);
        gbc.writeMem(0x879a, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x659f, gbc.sp());
        EXPECT(0x879c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x879a));
        EXPECT(0xc4, gbc.readMem(0x879b));
        // CB C4 0090
        gbc.setState(0xcadf, 0xd769, 0xc510, 0xf09c, 0x42b2, 0xeb34, 0x0, 0x0);
        gbc.writeMem(0xcadf, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xd769, gbc.sp());
        EXPECT(0xcae1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcadf));
        EXPECT(0xc4, gbc.readMem(0xcae0));
        // CB C4 0091
        gbc.setState(0xc9b6, 0x81d0, 0x4500, 0x5b5e, 0xcd66, 0xcc27, 0x1, 0x1);
        gbc.writeMem(0xc9b6, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x81d0, gbc.sp());
        EXPECT(0xc9b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc9b6));
        EXPECT(0xc4, gbc.readMem(0xc9b7));
        // CB C4 0092
        gbc.setState(0x60c7, 0x3b7, 0x6de0, 0x6c4a, 0xfa51, 0xa264, 0x1, 0x1);
        gbc.writeMem(0x60c7, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x3b7, gbc.sp());
        EXPECT(0x60c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C4 0093
        gbc.setState(0x5085, 0x500e, 0xf200, 0x870b, 0x698e, 0x79fe, 0x1, 0x0);
        gbc.writeMem(0x5085, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x500e, gbc.sp());
        EXPECT(0x5087, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C4 0094
        gbc.setState(0x116e, 0xdc4, 0x2570, 0xe118, 0xdac0, 0x2190, 0x0, 0x0);
        gbc.writeMem(0x116e, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xdc4, gbc.sp());
        EXPECT(0x1170, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C4 0095
        gbc.setState(0xbe78, 0x5bd8, 0xc2a0, 0xb0d4, 0x1513, 0xbf1f, 0x1, 0x1);
        gbc.writeMem(0xbe78, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x5bd8, gbc.sp());
        EXPECT(0xbe7a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe78));
        EXPECT(0xc4, gbc.readMem(0xbe79));
        // CB C4 0096
        gbc.setState(0xee64, 0x7629, 0x86d0, 0xa0ef, 0xc59d, 0x74ef, 0x1, 0x1);
        gbc.writeMem(0xee64, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x7629, gbc.sp());
        EXPECT(0xee66, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee64));
        EXPECT(0xc4, gbc.readMem(0xee65));
        // CB C4 0097
        gbc.setState(0x23da, 0xbb4f, 0xf830, 0x5706, 0x40e9, 0x5e1, 0x0, 0x0);
        gbc.writeMem(0x23da, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xbb4f, gbc.sp());
        EXPECT(0x23dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C4 0098
        gbc.setState(0x36d0, 0x89f6, 0x5370, 0xe86d, 0xb0e3, 0xb361, 0x1, 0x1);
        gbc.writeMem(0x36d0, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x89f6, gbc.sp());
        EXPECT(0x36d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C4 0099
        gbc.setState(0x298f, 0x151d, 0xb220, 0xe5de, 0xa13c, 0xbfee, 0x0, 0x1);
        gbc.writeMem(0x298f, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x151d, gbc.sp());
        EXPECT(0x2991, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C4 009A
        gbc.setState(0xed56, 0x9980, 0x1b30, 0x787a, 0xcbfc, 0x1ecf, 0x0, 0x1);
        gbc.writeMem(0xed56, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x9980, gbc.sp());
        EXPECT(0xed58, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed56));
        EXPECT(0xc4, gbc.readMem(0xed57));
        // CB C4 009C
        gbc.setState(0x81a2, 0xf702, 0x220, 0x812, 0x6f93, 0x1098, 0x1, 0x1);
        gbc.writeMem(0x81a2, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xf702, gbc.sp());
        EXPECT(0x81a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x81a2));
        EXPECT(0xc4, gbc.readMem(0x81a3));
        // CB C4 009D
        gbc.setState(0xe49b, 0x3c45, 0xdef0, 0x7fd4, 0x4da0, 0x6c54, 0x1, 0x0);
        gbc.writeMem(0xe49b, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x3c45, gbc.sp());
        EXPECT(0xe49d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe49b));
        EXPECT(0xc4, gbc.readMem(0xe49c));
        // CB C4 009E
        gbc.setState(0xb394, 0xdd17, 0x6aa0, 0xdbc9, 0x4828, 0x3fd, 0x1, 0x0);
        gbc.writeMem(0xb394, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xdd17, gbc.sp());
        EXPECT(0xb396, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb394));
        EXPECT(0xc4, gbc.readMem(0xb395));
        // CB C4 009F
        gbc.setState(0xb203, 0x5a2d, 0x3a60, 0xdba7, 0x5d1d, 0xa9c6, 0x0, 0x0);
        gbc.writeMem(0xb203, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x5a2d, gbc.sp());
        EXPECT(0xb205, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb203));
        EXPECT(0xc4, gbc.readMem(0xb204));
        // CB C4 00A1
        gbc.setState(0x88d9, 0xd5e2, 0xa4b0, 0xa786, 0x65fb, 0x4c64, 0x1, 0x1);
        gbc.writeMem(0x88d9, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xd5e2, gbc.sp());
        EXPECT(0x88db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x88d9));
        EXPECT(0xc4, gbc.readMem(0x88da));
        // CB C4 00A2
        gbc.setState(0xc0f0, 0xb4fb, 0xc1f0, 0x8d80, 0x8ec, 0x1134, 0x0, 0x0);
        gbc.writeMem(0xc0f0, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xb4fb, gbc.sp());
        EXPECT(0xc0f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc0f0));
        EXPECT(0xc4, gbc.readMem(0xc0f1));
        // CB C4 00A3
        gbc.setState(0x4624, 0x5253, 0xad0, 0xed50, 0xe9be, 0x9c4c, 0x0, 0x1);
        gbc.writeMem(0x4624, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x5253, gbc.sp());
        EXPECT(0x4626, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C4 00A4
        gbc.setState(0x41b9, 0x6430, 0xd210, 0xd40c, 0xcb74, 0xbd10, 0x0, 0x1);
        gbc.writeMem(0x41b9, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x6430, gbc.sp());
        EXPECT(0x41bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C4 00A5
        gbc.setState(0x85fe, 0xe713, 0xa9f0, 0xbc9e, 0xcd30, 0xe4e3, 0x1, 0x0);
        gbc.writeMem(0x85fe, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xe713, gbc.sp());
        EXPECT(0x8600, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x85fe));
        EXPECT(0xc4, gbc.readMem(0x85ff));
        // CB C4 00A6
        gbc.setState(0x8052, 0x2028, 0x30a0, 0x73f5, 0x2f7b, 0xf58c, 0x1, 0x1);
        gbc.writeMem(0x8052, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x2028, gbc.sp());
        EXPECT(0x8054, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8052));
        EXPECT(0xc4, gbc.readMem(0x8053));
        // CB C4 00A7
        gbc.setState(0x4801, 0x31c6, 0x2800, 0x1b7e, 0x933d, 0x1d5c, 0x0, 0x1);
        gbc.writeMem(0x4801, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x31c6, gbc.sp());
        EXPECT(0x4803, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C4 00A8
        gbc.setState(0x5d96, 0x20a3, 0xa1d0, 0x9022, 0xf7d4, 0x3e64, 0x1, 0x1);
        gbc.writeMem(0x5d96, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x20a3, gbc.sp());
        EXPECT(0x5d98, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C4 00A9
        gbc.setState(0x2f4c, 0x18ef, 0x4320, 0xe149, 0x7fb3, 0xe498, 0x1, 0x1);
        gbc.writeMem(0x2f4c, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x18ef, gbc.sp());
        EXPECT(0x2f4e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C4 00AB
        gbc.setState(0x6cc, 0xdf61, 0xfbb0, 0x6c16, 0xf92a, 0xd19, 0x1, 0x0);
        gbc.writeMem(0x6cc, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xdf61, gbc.sp());
        EXPECT(0x6ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C4 00AC
        gbc.setState(0x3dec, 0xbef9, 0x5ed0, 0x64a, 0xb859, 0xdf25, 0x0, 0x0);
        gbc.writeMem(0x3dec, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xbef9, gbc.sp());
        EXPECT(0x3dee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C4 00AD
        gbc.setState(0x81ed, 0xe485, 0xa0b0, 0x826c, 0xbf42, 0xf4f8, 0x1, 0x1);
        gbc.writeMem(0x81ed, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xe485, gbc.sp());
        EXPECT(0x81ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x81ed));
        EXPECT(0xc4, gbc.readMem(0x81ee));
        // CB C4 00AE
        gbc.setState(0xc91, 0xdb40, 0x3f70, 0xdf07, 0xb8b5, 0x5c12, 0x0, 0x1);
        gbc.writeMem(0xc91, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xdb40, gbc.sp());
        EXPECT(0xc93, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C4 00AF
        gbc.setState(0xdfc3, 0x29b3, 0x880, 0x5b28, 0xeb3, 0xac7f, 0x1, 0x0);
        gbc.writeMem(0xdfc3, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x29b3, gbc.sp());
        EXPECT(0xdfc5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdfc3));
        EXPECT(0xc4, gbc.readMem(0xdfc4));
        // CB C4 00B0
        gbc.setState(0x52b3, 0x2263, 0x1cf0, 0xae7a, 0x9e4e, 0xfe8e, 0x0, 0x1);
        gbc.writeMem(0x52b3, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x2263, gbc.sp());
        EXPECT(0x52b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C4 00B1
        gbc.setState(0x8670, 0xc925, 0x1aa0, 0x8d5a, 0x82cc, 0x2c29, 0x0, 0x0);
        gbc.writeMem(0x8670, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xc925, gbc.sp());
        EXPECT(0x8672, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8670));
        EXPECT(0xc4, gbc.readMem(0x8671));
        // CB C4 00B2
        gbc.setState(0xd9d2, 0xeb60, 0x2ee0, 0xd450, 0xb329, 0x94c3, 0x0, 0x0);
        gbc.writeMem(0xd9d2, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xeb60, gbc.sp());
        EXPECT(0xd9d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd9d2));
        EXPECT(0xc4, gbc.readMem(0xd9d3));
        // CB C4 00B3
        gbc.setState(0xbd37, 0x37be, 0xad30, 0xbac0, 0xb87d, 0x331c, 0x0, 0x0);
        gbc.writeMem(0xbd37, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x37be, gbc.sp());
        EXPECT(0xbd39, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd37));
        EXPECT(0xc4, gbc.readMem(0xbd38));
        // CB C4 00B4
        gbc.setState(0xd440, 0xf15d, 0xb250, 0x944, 0x52a9, 0xcdc0, 0x0, 0x0);
        gbc.writeMem(0xd440, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xf15d, gbc.sp());
        EXPECT(0xd442, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd440));
        EXPECT(0xc4, gbc.readMem(0xd441));
        // CB C4 00B5
        gbc.setState(0xc93d, 0x6d84, 0x7510, 0xf44d, 0x459d, 0xea12, 0x0, 0x0);
        gbc.writeMem(0xc93d, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x6d84, gbc.sp());
        EXPECT(0xc93f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc93d));
        EXPECT(0xc4, gbc.readMem(0xc93e));
        // CB C4 00B7
        gbc.setState(0xdfb9, 0xae30, 0x2630, 0x823a, 0x99b0, 0x5e8e, 0x1, 0x0);
        gbc.writeMem(0xdfb9, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xae30, gbc.sp());
        EXPECT(0xdfbb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdfb9));
        EXPECT(0xc4, gbc.readMem(0xdfba));
        // CB C4 00B9
        gbc.setState(0x8135, 0xf43b, 0xe570, 0x9c2e, 0x26fa, 0x171b, 0x0, 0x0);
        gbc.writeMem(0x8135, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xf43b, gbc.sp());
        EXPECT(0x8137, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8135));
        EXPECT(0xc4, gbc.readMem(0x8136));
        // CB C4 00BA
        gbc.setState(0x7e6, 0x5be, 0x5c00, 0x4ba7, 0x730c, 0x35fd, 0x0, 0x1);
        gbc.writeMem(0x7e6, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x5be, gbc.sp());
        EXPECT(0x7e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C4 00BB
        gbc.setState(0x7ca8, 0x87a5, 0x9620, 0xf992, 0xe7a8, 0xfc31, 0x0, 0x0);
        gbc.writeMem(0x7ca8, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x87a5, gbc.sp());
        EXPECT(0x7caa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C4 00BD
        gbc.setState(0x9285, 0x3d9, 0xc0c0, 0x61a0, 0x6aa8, 0x9b74, 0x0, 0x0);
        gbc.writeMem(0x9285, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x3d9, gbc.sp());
        EXPECT(0x9287, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9285));
        EXPECT(0xc4, gbc.readMem(0x9286));
        // CB C4 00BE
        gbc.setState(0x4323, 0xca59, 0x1ba0, 0x34df, 0xc8d9, 0x7761, 0x1, 0x0);
        gbc.writeMem(0x4323, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xca59, gbc.sp());
        EXPECT(0x4325, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C4 00BF
        gbc.setState(0x75c6, 0x4cb5, 0xcbc0, 0xa77b, 0xc63, 0x9c8f, 0x1, 0x0);
        gbc.writeMem(0x75c6, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x4cb5, gbc.sp());
        EXPECT(0x75c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C4 00C0
        gbc.setState(0xd12f, 0xf7f2, 0xedf0, 0x9a1e, 0xd05e, 0x6497, 0x0, 0x0);
        gbc.writeMem(0xd12f, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xf7f2, gbc.sp());
        EXPECT(0xd131, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd12f));
        EXPECT(0xc4, gbc.readMem(0xd130));
        // CB C4 00C1
        gbc.setState(0x1f63, 0x74d5, 0x8c50, 0xbabd, 0xfddd, 0xf4d7, 0x0, 0x1);
        gbc.writeMem(0x1f63, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x74d5, gbc.sp());
        EXPECT(0x1f65, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C4 00C2
        gbc.setState(0x543b, 0xd435, 0xf30, 0x97c5, 0xd2e5, 0x37d3, 0x0, 0x1);
        gbc.writeMem(0x543b, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xd435, gbc.sp());
        EXPECT(0x543d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C4 00C3
        gbc.setState(0xe1b, 0x9533, 0xdee0, 0xf1c, 0x2c2d, 0xd87d, 0x0, 0x0);
        gbc.writeMem(0xe1b, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x9533, gbc.sp());
        EXPECT(0xe1d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C4 00C4
        gbc.setState(0x56ad, 0xa3d5, 0xe9f0, 0xc10f, 0x4856, 0xb16e, 0x0, 0x1);
        gbc.writeMem(0x56ad, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xa3d5, gbc.sp());
        EXPECT(0x56af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C4 00C5
        gbc.setState(0xdb48, 0x26e8, 0x5a00, 0x6b3a, 0x576f, 0x356, 0x1, 0x0);
        gbc.writeMem(0xdb48, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x26e8, gbc.sp());
        EXPECT(0xdb4a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb48));
        EXPECT(0xc4, gbc.readMem(0xdb49));
        // CB C4 00C6
        gbc.setState(0x81cc, 0x9872, 0xe390, 0x4a90, 0xcd74, 0x2894, 0x0, 0x1);
        gbc.writeMem(0x81cc, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x9872, gbc.sp());
        EXPECT(0x81ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x81cc));
        EXPECT(0xc4, gbc.readMem(0x81cd));
        // CB C4 00C7
        gbc.setState(0xb276, 0x29fa, 0x4140, 0x5b8d, 0x2dc9, 0x8d96, 0x1, 0x1);
        gbc.writeMem(0xb276, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x29fa, gbc.sp());
        EXPECT(0xb278, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb276));
        EXPECT(0xc4, gbc.readMem(0xb277));
        // CB C4 00C8
        gbc.setState(0xc282, 0x3003, 0x2d20, 0x26ee, 0x993f, 0x3d53, 0x1, 0x0);
        gbc.writeMem(0xc282, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x3003, gbc.sp());
        EXPECT(0xc284, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc282));
        EXPECT(0xc4, gbc.readMem(0xc283));
        // CB C4 00C9
        gbc.setState(0xb7f7, 0xe469, 0xe9c0, 0xd47, 0x9b07, 0x135c, 0x1, 0x0);
        gbc.writeMem(0xb7f7, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xe469, gbc.sp());
        EXPECT(0xb7f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb7f7));
        EXPECT(0xc4, gbc.readMem(0xb7f8));
        // CB C4 00CA
        gbc.setState(0x400e, 0x1270, 0x3050, 0xd25a, 0x8a7c, 0x9d3d, 0x0, 0x0);
        gbc.writeMem(0x400e, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x1270, gbc.sp());
        EXPECT(0x4010, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C4 00CB
        gbc.setState(0x137e, 0xa9a7, 0x41a0, 0x64de, 0xab80, 0x60b8, 0x0, 0x1);
        gbc.writeMem(0x137e, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xa9a7, gbc.sp());
        EXPECT(0x1380, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C4 00CC
        gbc.setState(0x5779, 0x584e, 0xf930, 0xdf51, 0xdfbc, 0x9b47, 0x1, 0x0);
        gbc.writeMem(0x5779, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x584e, gbc.sp());
        EXPECT(0x577b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C4 00CD
        gbc.setState(0x5550, 0xe3f7, 0x1ba0, 0xa800, 0xa54b, 0xaad8, 0x1, 0x1);
        gbc.writeMem(0x5550, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xe3f7, gbc.sp());
        EXPECT(0x5552, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C4 00CE
        gbc.setState(0x9350, 0xc634, 0xc520, 0x753e, 0xab5, 0x2ca3, 0x0, 0x1);
        gbc.writeMem(0x9350, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xc634, gbc.sp());
        EXPECT(0x9352, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9350));
        EXPECT(0xc4, gbc.readMem(0x9351));
        // CB C4 00CF
        gbc.setState(0xdb27, 0x3cdc, 0xae30, 0x508f, 0x6bd6, 0xd5e5, 0x0, 0x1);
        gbc.writeMem(0xdb27, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x3cdc, gbc.sp());
        EXPECT(0xdb29, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb27));
        EXPECT(0xc4, gbc.readMem(0xdb28));
        // CB C4 00D0
        gbc.setState(0xa91e, 0x76a2, 0xb140, 0xf778, 0x9099, 0xc8fa, 0x1, 0x0);
        gbc.writeMem(0xa91e, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x76a2, gbc.sp());
        EXPECT(0xa920, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa91e));
        EXPECT(0xc4, gbc.readMem(0xa91f));
        // CB C4 00D1
        gbc.setState(0x30fc, 0x4295, 0xfac0, 0xd59c, 0x296, 0xf6e1, 0x0, 0x0);
        gbc.writeMem(0x30fc, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x4295, gbc.sp());
        EXPECT(0x30fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C4 00D2
        gbc.setState(0x4dce, 0x3c4b, 0xe50, 0x92dd, 0xfb75, 0xb503, 0x1, 0x1);
        gbc.writeMem(0x4dce, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x3c4b, gbc.sp());
        EXPECT(0x4dd0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C4 00D4
        gbc.setState(0x77b7, 0xb0d1, 0x8bb0, 0xc504, 0x91e0, 0x2863, 0x1, 0x0);
        gbc.writeMem(0x77b7, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xb0d1, gbc.sp());
        EXPECT(0x77b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C4 00D5
        gbc.setState(0xc947, 0x20ba, 0xc850, 0xe6ac, 0x517b, 0x1e3a, 0x0, 0x0);
        gbc.writeMem(0xc947, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x20ba, gbc.sp());
        EXPECT(0xc949, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc947));
        EXPECT(0xc4, gbc.readMem(0xc948));
        // CB C4 00D6
        gbc.setState(0x2e88, 0x567, 0x3760, 0x5b94, 0x592f, 0x6ed8, 0x0, 0x1);
        gbc.writeMem(0x2e88, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x567, gbc.sp());
        EXPECT(0x2e8a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C4 00D7
        gbc.setState(0xe6b2, 0x1951, 0x78f0, 0xaaed, 0xb773, 0xe4d9, 0x0, 0x1);
        gbc.writeMem(0xe6b2, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x1951, gbc.sp());
        EXPECT(0xe6b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe6b2));
        EXPECT(0xc4, gbc.readMem(0xe6b3));
        // CB C4 00D8
        gbc.setState(0x4717, 0x5548, 0xd9f0, 0x182d, 0x8138, 0xaaa6, 0x0, 0x0);
        gbc.writeMem(0x4717, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x5548, gbc.sp());
        EXPECT(0x4719, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C4 00D9
        gbc.setState(0x4899, 0xdf04, 0xa6d0, 0xfc4b, 0x47fa, 0x84b1, 0x0, 0x0);
        gbc.writeMem(0x4899, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xdf04, gbc.sp());
        EXPECT(0x489b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C4 00DA
        gbc.setState(0x205b, 0x4c91, 0x3cc0, 0x80a5, 0x3bf8, 0x29de, 0x1, 0x1);
        gbc.writeMem(0x205b, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x4c91, gbc.sp());
        EXPECT(0x205d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C4 00DB
        gbc.setState(0x96e9, 0xe4e2, 0xa690, 0x9cb7, 0x8eb4, 0xe41a, 0x0, 0x1);
        gbc.writeMem(0x96e9, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xe4e2, gbc.sp());
        EXPECT(0x96eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x96e9));
        EXPECT(0xc4, gbc.readMem(0x96ea));
        // CB C4 00DC
        gbc.setState(0xc5d5, 0x3b5f, 0x3010, 0x71c9, 0xec4a, 0x25a9, 0x1, 0x0);
        gbc.writeMem(0xc5d5, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x3b5f, gbc.sp());
        EXPECT(0xc5d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc5d5));
        EXPECT(0xc4, gbc.readMem(0xc5d6));
        // CB C4 00DD
        gbc.setState(0xd6bb, 0xeeea, 0xdc40, 0xe7db, 0x2290, 0xf364, 0x1, 0x1);
        gbc.writeMem(0xd6bb, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xeeea, gbc.sp());
        EXPECT(0xd6bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd6bb));
        EXPECT(0xc4, gbc.readMem(0xd6bc));
        // CB C4 00DE
        gbc.setState(0xc25e, 0xb3bd, 0xf2f0, 0x2a9a, 0x32aa, 0x1ab4, 0x1, 0x1);
        gbc.writeMem(0xc25e, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xb3bd, gbc.sp());
        EXPECT(0xc260, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc25e));
        EXPECT(0xc4, gbc.readMem(0xc25f));
        // CB C4 00DF
        gbc.setState(0x5fd6, 0xf950, 0x56b0, 0xdad3, 0x4904, 0x5593, 0x0, 0x1);
        gbc.writeMem(0x5fd6, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xf950, gbc.sp());
        EXPECT(0x5fd8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C4 00E0
        gbc.setState(0xea29, 0x7440, 0x950, 0xa6eb, 0xfe6d, 0xc84c, 0x1, 0x0);
        gbc.writeMem(0xea29, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x7440, gbc.sp());
        EXPECT(0xea2b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea29));
        EXPECT(0xc4, gbc.readMem(0xea2a));
        // CB C4 00E1
        gbc.setState(0x52aa, 0x91dc, 0xb3d0, 0x5aac, 0xc4ba, 0xf682, 0x1, 0x0);
        gbc.writeMem(0x52aa, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x91dc, gbc.sp());
        EXPECT(0x52ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C4 00E2
        gbc.setState(0x37a8, 0xd5e, 0x3b20, 0x2a87, 0x5687, 0x57ff, 0x1, 0x1);
        gbc.writeMem(0x37a8, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xd5e, gbc.sp());
        EXPECT(0x37aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C4 00E3
        gbc.setState(0x6c0e, 0xdc49, 0x61e0, 0xd92d, 0x49b8, 0xe656, 0x0, 0x0);
        gbc.writeMem(0x6c0e, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xdc49, gbc.sp());
        EXPECT(0x6c10, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C4 00E4
        gbc.setState(0x3711, 0x1cb9, 0x2d0, 0x3b6, 0x3a76, 0x4d02, 0x0, 0x0);
        gbc.writeMem(0x3711, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x1cb9, gbc.sp());
        EXPECT(0x3713, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C4 00E5
        gbc.setState(0x1904, 0x5921, 0x190, 0x35bd, 0x6de6, 0xbe43, 0x1, 0x0);
        gbc.writeMem(0x1904, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x5921, gbc.sp());
        EXPECT(0x1906, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C4 00E6
        gbc.setState(0xcbe1, 0x1a87, 0x6aa0, 0xb86d, 0x4c3, 0x34ab, 0x1, 0x1);
        gbc.writeMem(0xcbe1, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x1a87, gbc.sp());
        EXPECT(0xcbe3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcbe1));
        EXPECT(0xc4, gbc.readMem(0xcbe2));
        // CB C4 00E7
        gbc.setState(0x3ddc, 0xab1f, 0x9260, 0x4d24, 0xfad6, 0x66b0, 0x0, 0x1);
        gbc.writeMem(0x3ddc, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xab1f, gbc.sp());
        EXPECT(0x3dde, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C4 00E8
        gbc.setState(0x1462, 0x4674, 0x69e0, 0x590, 0x4ecb, 0xf362, 0x1, 0x0);
        gbc.writeMem(0x1462, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x4674, gbc.sp());
        EXPECT(0x1464, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C4 00E9
        gbc.setState(0x1266, 0x62a4, 0x60b0, 0xbdb3, 0xa41c, 0xa7b3, 0x1, 0x1);
        gbc.writeMem(0x1266, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x62a4, gbc.sp());
        EXPECT(0x1268, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C4 00EA
        gbc.setState(0x2690, 0x72dc, 0x62d0, 0xb62c, 0x218f, 0xc95e, 0x0, 0x1);
        gbc.writeMem(0x2690, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x72dc, gbc.sp());
        EXPECT(0x2692, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C4 00EB
        gbc.setState(0xeded, 0x55c0, 0x6720, 0x26fa, 0x62d6, 0xc61b, 0x1, 0x1);
        gbc.writeMem(0xeded, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x55c0, gbc.sp());
        EXPECT(0xedef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeded));
        EXPECT(0xc4, gbc.readMem(0xedee));
        // CB C4 00EC
        gbc.setState(0xc250, 0x46e0, 0x2ed0, 0xa98, 0x102b, 0xacf9, 0x1, 0x1);
        gbc.writeMem(0xc250, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x46e0, gbc.sp());
        EXPECT(0xc252, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc250));
        EXPECT(0xc4, gbc.readMem(0xc251));
        // CB C4 00ED
        gbc.setState(0x1aac, 0xe3bc, 0x6740, 0xa819, 0x2713, 0xa325, 0x0, 0x1);
        gbc.writeMem(0x1aac, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xe3bc, gbc.sp());
        EXPECT(0x1aae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C4 00EE
        gbc.setState(0x780b, 0x13e6, 0x2d0, 0xdc85, 0x5b28, 0x17c2, 0x0, 0x0);
        gbc.writeMem(0x780b, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x13e6, gbc.sp());
        EXPECT(0x780d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C4 00EF
        gbc.setState(0xdb05, 0xfcb4, 0x2050, 0x755c, 0x91cf, 0x7948, 0x1, 0x1);
        gbc.writeMem(0xdb05, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xfcb4, gbc.sp());
        EXPECT(0xdb07, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb05));
        EXPECT(0xc4, gbc.readMem(0xdb06));
        // CB C4 00F0
        gbc.setState(0x6088, 0x282e, 0xe570, 0xdab1, 0xa989, 0x2788, 0x1, 0x0);
        gbc.writeMem(0x6088, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x282e, gbc.sp());
        EXPECT(0x608a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C4 00F1
        gbc.setState(0x8dc1, 0xbf73, 0x59d0, 0x2811, 0xd44d, 0xe428, 0x1, 0x1);
        gbc.writeMem(0x8dc1, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xbf73, gbc.sp());
        EXPECT(0x8dc3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8dc1));
        EXPECT(0xc4, gbc.readMem(0x8dc2));
        // CB C4 00F2
        gbc.setState(0xd128, 0x6b0d, 0x6490, 0x848, 0xa4a3, 0xe513, 0x1, 0x0);
        gbc.writeMem(0xd128, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x6b0d, gbc.sp());
        EXPECT(0xd12a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd128));
        EXPECT(0xc4, gbc.readMem(0xd129));
        // CB C4 00F3
        gbc.setState(0x1e72, 0x4c84, 0x9cd0, 0x281a, 0x132c, 0xe3bf, 0x1, 0x1);
        gbc.writeMem(0x1e72, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x4c84, gbc.sp());
        EXPECT(0x1e74, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C4 00F4
        gbc.setState(0x395e, 0x66a2, 0x1b40, 0x6426, 0x6c66, 0x2c5c, 0x1, 0x1);
        gbc.writeMem(0x395e, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x66a2, gbc.sp());
        EXPECT(0x3960, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C4 00F5
        gbc.setState(0x3c2f, 0xbb7f, 0x65f0, 0xbe86, 0xf723, 0x26, 0x1, 0x1);
        gbc.writeMem(0x3c2f, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xbb7f, gbc.sp());
        EXPECT(0x3c31, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C4 00F6
        gbc.setState(0x7165, 0xa12d, 0x90d0, 0xf917, 0x8eab, 0xe261, 0x1, 0x1);
        gbc.writeMem(0x7165, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xa12d, gbc.sp());
        EXPECT(0x7167, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C4 00F7
        gbc.setState(0xa8c5, 0x6978, 0xc710, 0xdf5c, 0x9f, 0xa55e, 0x0, 0x0);
        gbc.writeMem(0xa8c5, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x6978, gbc.sp());
        EXPECT(0xa8c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa8c5));
        EXPECT(0xc4, gbc.readMem(0xa8c6));
        // CB C4 00F8
        gbc.setState(0xb489, 0x2513, 0xea70, 0x2010, 0xcf46, 0xb531, 0x0, 0x1);
        gbc.writeMem(0xb489, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x2513, gbc.sp());
        EXPECT(0xb48b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb489));
        EXPECT(0xc4, gbc.readMem(0xb48a));
        // CB C4 00F9
        gbc.setState(0xe0c0, 0xab9f, 0xf4f0, 0x9705, 0x791d, 0x165c, 0x0, 0x1);
        gbc.writeMem(0xe0c0, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xab9f, gbc.sp());
        EXPECT(0xe0c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe0c0));
        EXPECT(0xc4, gbc.readMem(0xe0c1));
        // CB C4 00FA
        gbc.setState(0x7ea9, 0x5ae6, 0x2a20, 0x64bb, 0x46a2, 0x759a, 0x1, 0x1);
        gbc.writeMem(0x7ea9, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x5ae6, gbc.sp());
        EXPECT(0x7eab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C4 00FB
        gbc.setState(0x9357, 0xf760, 0x6030, 0x9c13, 0xd7a8, 0x937e, 0x0, 0x0);
        gbc.writeMem(0x9357, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xf760, gbc.sp());
        EXPECT(0x9359, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9357));
        EXPECT(0xc4, gbc.readMem(0x9358));
        // CB C4 00FC
        gbc.setState(0x158a, 0xb06f, 0xc4e0, 0xa222, 0xe402, 0xf97d, 0x1, 0x0);
        gbc.writeMem(0x158a, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xb06f, gbc.sp());
        EXPECT(0x158c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C4 00FD
        gbc.setState(0x294d, 0x74a6, 0x8d90, 0x80c9, 0x847a, 0x37c6, 0x0, 0x0);
        gbc.writeMem(0x294d, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x74a6, gbc.sp());
        EXPECT(0x294f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C4 00FF
        gbc.setState(0xcce1, 0x2c83, 0xf820, 0xd398, 0xf1b4, 0x7463, 0x1, 0x0);
        gbc.writeMem(0xcce1, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x2c83, gbc.sp());
        EXPECT(0xcce3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcce1));
        EXPECT(0xc4, gbc.readMem(0xcce2));
        // CB C4 0100
        gbc.setState(0xe19f, 0x4f5a, 0x7390, 0x1c92, 0xcfba, 0xcaf4, 0x1, 0x0);
        gbc.writeMem(0xe19f, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x4f5a, gbc.sp());
        EXPECT(0xe1a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe19f));
        EXPECT(0xc4, gbc.readMem(0xe1a0));
        // CB C4 0101
        gbc.setState(0x6c04, 0x35ce, 0x40d0, 0x63c1, 0x6daa, 0x3275, 0x0, 0x1);
        gbc.writeMem(0x6c04, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x35ce, gbc.sp());
        EXPECT(0x6c06, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C4 0102
        gbc.setState(0xe699, 0x535c, 0x6300, 0x74c2, 0x4b97, 0x107f, 0x1, 0x1);
        gbc.writeMem(0xe699, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x535c, gbc.sp());
        EXPECT(0xe69b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe699));
        EXPECT(0xc4, gbc.readMem(0xe69a));
        // CB C4 0103
        gbc.setState(0xa64c, 0x159f, 0xc450, 0xe2eb, 0x7d67, 0x1b7a, 0x0, 0x1);
        gbc.writeMem(0xa64c, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x159f, gbc.sp());
        EXPECT(0xa64e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa64c));
        EXPECT(0xc4, gbc.readMem(0xa64d));
        // CB C4 0104
        gbc.setState(0x15b7, 0x82d1, 0xb5b0, 0xfe56, 0x1a37, 0x36b7, 0x1, 0x0);
        gbc.writeMem(0x15b7, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x82d1, gbc.sp());
        EXPECT(0x15b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C4 0105
        gbc.setState(0xcdb, 0xf983, 0x6460, 0xfe61, 0xfee8, 0xf586, 0x0, 0x1);
        gbc.writeMem(0xcdb, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xf983, gbc.sp());
        EXPECT(0xcdd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C4 0106
        gbc.setState(0x205a, 0xb82e, 0x1040, 0xd9df, 0xe505, 0x3296, 0x1, 0x1);
        gbc.writeMem(0x205a, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xb82e, gbc.sp());
        EXPECT(0x205c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C4 0107
        gbc.setState(0x8870, 0xce07, 0xab40, 0x3979, 0xeee9, 0xfb79, 0x1, 0x1);
        gbc.writeMem(0x8870, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xce07, gbc.sp());
        EXPECT(0x8872, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8870));
        EXPECT(0xc4, gbc.readMem(0x8871));
        // CB C4 0108
        gbc.setState(0x84ca, 0xb39, 0x8000, 0x825d, 0x9b1d, 0x6eb8, 0x0, 0x1);
        gbc.writeMem(0x84ca, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xb39, gbc.sp());
        EXPECT(0x84cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x84ca));
        EXPECT(0xc4, gbc.readMem(0x84cb));
        // CB C4 0109
        gbc.setState(0x5206, 0xd2ac, 0x6250, 0xac14, 0x8246, 0x2354, 0x0, 0x1);
        gbc.writeMem(0x5206, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xd2ac, gbc.sp());
        EXPECT(0x5208, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C4 010A
        gbc.setState(0x7c65, 0x6ae7, 0xec00, 0x4321, 0xdb29, 0xbdad, 0x0, 0x1);
        gbc.writeMem(0x7c65, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x6ae7, gbc.sp());
        EXPECT(0x7c67, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C4 010B
        gbc.setState(0xe530, 0xaf2e, 0x4950, 0x473, 0xde07, 0x3b09, 0x0, 0x1);
        gbc.writeMem(0xe530, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xaf2e, gbc.sp());
        EXPECT(0xe532, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe530));
        EXPECT(0xc4, gbc.readMem(0xe531));
        // CB C4 010C
        gbc.setState(0xb5c4, 0xe968, 0x7eb0, 0xb8dd, 0x631e, 0xe3b5, 0x0, 0x0);
        gbc.writeMem(0xb5c4, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xe968, gbc.sp());
        EXPECT(0xb5c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb5c4));
        EXPECT(0xc4, gbc.readMem(0xb5c5));
        // CB C4 010D
        gbc.setState(0x77a1, 0xa572, 0x5060, 0x4516, 0xc8d8, 0x4b82, 0x0, 0x1);
        gbc.writeMem(0x77a1, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xa572, gbc.sp());
        EXPECT(0x77a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C4 010E
        gbc.setState(0xa30c, 0x791, 0x9610, 0xf48f, 0x9005, 0x297f, 0x0, 0x1);
        gbc.writeMem(0xa30c, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x791, gbc.sp());
        EXPECT(0xa30e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa30c));
        EXPECT(0xc4, gbc.readMem(0xa30d));
        // CB C4 010F
        gbc.setState(0xbb5f, 0x9371, 0xf940, 0x80b2, 0x5176, 0xd96a, 0x0, 0x0);
        gbc.writeMem(0xbb5f, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x9371, gbc.sp());
        EXPECT(0xbb61, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb5f));
        EXPECT(0xc4, gbc.readMem(0xbb60));
        // CB C4 0110
        gbc.setState(0xa9bc, 0x14d, 0xc980, 0xe661, 0x3d97, 0xbd3d, 0x1, 0x1);
        gbc.writeMem(0xa9bc, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x14d, gbc.sp());
        EXPECT(0xa9be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa9bc));
        EXPECT(0xc4, gbc.readMem(0xa9bd));
        // CB C4 0111
        gbc.setState(0x68bc, 0xc390, 0x4650, 0x3940, 0xc0d4, 0xf014, 0x1, 0x0);
        gbc.writeMem(0x68bc, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xc390, gbc.sp());
        EXPECT(0x68be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C4 0112
        gbc.setState(0x983b, 0xe4f9, 0x76b0, 0xb73b, 0x7a62, 0x7e77, 0x0, 0x0);
        gbc.writeMem(0x983b, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xe4f9, gbc.sp());
        EXPECT(0x983d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x983b));
        EXPECT(0xc4, gbc.readMem(0x983c));
        // CB C4 0113
        gbc.setState(0x46d0, 0x5df8, 0xea70, 0x63ba, 0x8066, 0x2580, 0x1, 0x0);
        gbc.writeMem(0x46d0, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x5df8, gbc.sp());
        EXPECT(0x46d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C4 0114
        gbc.setState(0xa357, 0x11a2, 0xb180, 0x153a, 0xf586, 0xd1a2, 0x0, 0x0);
        gbc.writeMem(0xa357, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x11a2, gbc.sp());
        EXPECT(0xa359, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa357));
        EXPECT(0xc4, gbc.readMem(0xa358));
        // CB C4 0115
        gbc.setState(0xb6ff, 0x8395, 0xa340, 0x590d, 0x271c, 0xed91, 0x0, 0x1);
        gbc.writeMem(0xb6ff, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x8395, gbc.sp());
        EXPECT(0xb701, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb6ff));
        EXPECT(0xc4, gbc.readMem(0xb700));
        // CB C4 0116
        gbc.setState(0xdc69, 0x9c28, 0xda10, 0xe660, 0x336f, 0x2341, 0x0, 0x0);
        gbc.writeMem(0xdc69, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x9c28, gbc.sp());
        EXPECT(0xdc6b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc69));
        EXPECT(0xc4, gbc.readMem(0xdc6a));
        // CB C4 0117
        gbc.setState(0xb64a, 0x6472, 0x9f40, 0x5dd9, 0xe11b, 0x3a6a, 0x0, 0x1);
        gbc.writeMem(0xb64a, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x6472, gbc.sp());
        EXPECT(0xb64c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb64a));
        EXPECT(0xc4, gbc.readMem(0xb64b));
        // CB C4 0119
        gbc.setState(0x5d1e, 0x9531, 0xcb60, 0x3613, 0x2a25, 0xff9, 0x0, 0x0);
        gbc.writeMem(0x5d1e, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x9531, gbc.sp());
        EXPECT(0x5d20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C4 011A
        gbc.setState(0x930b, 0xb57d, 0x62a0, 0xba07, 0x285b, 0x3ee5, 0x0, 0x0);
        gbc.writeMem(0x930b, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xb57d, gbc.sp());
        EXPECT(0x930d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x930b));
        EXPECT(0xc4, gbc.readMem(0x930c));
        // CB C4 011B
        gbc.setState(0xe6b5, 0x9265, 0x5180, 0x20d5, 0xc633, 0x6bb0, 0x0, 0x1);
        gbc.writeMem(0xe6b5, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x9265, gbc.sp());
        EXPECT(0xe6b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe6b5));
        EXPECT(0xc4, gbc.readMem(0xe6b6));
        // CB C4 011C
        gbc.setState(0x14cd, 0xceeb, 0x8c70, 0x573c, 0xc5b, 0x99b9, 0x0, 0x1);
        gbc.writeMem(0x14cd, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xceeb, gbc.sp());
        EXPECT(0x14cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C4 011D
        gbc.setState(0x95c9, 0x1d43, 0xaa80, 0x739c, 0x4b61, 0x497f, 0x1, 0x1);
        gbc.writeMem(0x95c9, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x1d43, gbc.sp());
        EXPECT(0x95cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x95c9));
        EXPECT(0xc4, gbc.readMem(0x95ca));
        // CB C4 011E
        gbc.setState(0x99ee, 0x4280, 0xc40, 0xb481, 0x6e2e, 0x5de9, 0x0, 0x0);
        gbc.writeMem(0x99ee, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x4280, gbc.sp());
        EXPECT(0x99f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x99ee));
        EXPECT(0xc4, gbc.readMem(0x99ef));
        // CB C4 011F
        gbc.setState(0xa702, 0x37c5, 0xcb60, 0xc007, 0x2c9d, 0x2235, 0x0, 0x1);
        gbc.writeMem(0xa702, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x37c5, gbc.sp());
        EXPECT(0xa704, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa702));
        EXPECT(0xc4, gbc.readMem(0xa703));
        // CB C4 0120
        gbc.setState(0x8c47, 0x2fc5, 0x2200, 0xfa8d, 0xc55, 0xa25c, 0x0, 0x1);
        gbc.writeMem(0x8c47, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x2fc5, gbc.sp());
        EXPECT(0x8c49, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c47));
        EXPECT(0xc4, gbc.readMem(0x8c48));
        // CB C4 0121
        gbc.setState(0xca83, 0x881d, 0xb60, 0x3da6, 0xd7ee, 0x33ff, 0x1, 0x0);
        gbc.writeMem(0xca83, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x881d, gbc.sp());
        EXPECT(0xca85, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca83));
        EXPECT(0xc4, gbc.readMem(0xca84));
        // CB C4 0122
        gbc.setState(0xd681, 0x8fa9, 0x4c60, 0xb486, 0x8423, 0x5a3e, 0x1, 0x1);
        gbc.writeMem(0xd681, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x8fa9, gbc.sp());
        EXPECT(0xd683, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd681));
        EXPECT(0xc4, gbc.readMem(0xd682));
        // CB C4 0123
        gbc.setState(0xd153, 0x9475, 0x8a60, 0xbc73, 0x101c, 0xbc1, 0x1, 0x0);
        gbc.writeMem(0xd153, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x9475, gbc.sp());
        EXPECT(0xd155, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd153));
        EXPECT(0xc4, gbc.readMem(0xd154));
        // CB C4 0124
        gbc.setState(0xa2dc, 0x9e55, 0xfbc0, 0xc8a4, 0x6387, 0xa74a, 0x1, 0x1);
        gbc.writeMem(0xa2dc, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x9e55, gbc.sp());
        EXPECT(0xa2de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa2dc));
        EXPECT(0xc4, gbc.readMem(0xa2dd));
        // CB C4 0125
        gbc.setState(0x9d91, 0x6b3f, 0xe740, 0x8424, 0xe380, 0x343e, 0x1, 0x0);
        gbc.writeMem(0x9d91, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x6b3f, gbc.sp());
        EXPECT(0x9d93, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d91));
        EXPECT(0xc4, gbc.readMem(0x9d92));
        // CB C4 0126
        gbc.setState(0x2456, 0x5770, 0x9480, 0xf384, 0xb1a9, 0xed11, 0x0, 0x0);
        gbc.writeMem(0x2456, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x5770, gbc.sp());
        EXPECT(0x2458, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C4 0127
        gbc.setState(0xed49, 0xac39, 0x2d50, 0x2949, 0x2c1a, 0xde12, 0x0, 0x0);
        gbc.writeMem(0xed49, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xac39, gbc.sp());
        EXPECT(0xed4b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed49));
        EXPECT(0xc4, gbc.readMem(0xed4a));
        // CB C4 0128
        gbc.setState(0x5788, 0x3228, 0x99c0, 0x2294, 0x36aa, 0xa7fa, 0x1, 0x0);
        gbc.writeMem(0x5788, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x3228, gbc.sp());
        EXPECT(0x578a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C4 0129
        gbc.setState(0xa303, 0x7d18, 0xf470, 0x9449, 0xa3aa, 0x9ae8, 0x0, 0x0);
        gbc.writeMem(0xa303, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x7d18, gbc.sp());
        EXPECT(0xa305, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa303));
        EXPECT(0xc4, gbc.readMem(0xa304));
        // CB C4 012A
        gbc.setState(0x188e, 0x6a5a, 0x8670, 0x8acf, 0xd4e0, 0x4e76, 0x1, 0x0);
        gbc.writeMem(0x188e, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x6a5a, gbc.sp());
        EXPECT(0x1890, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C4 012B
        gbc.setState(0xa464, 0x7936, 0x7280, 0x1484, 0xb274, 0x7e77, 0x1, 0x0);
        gbc.writeMem(0xa464, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x7936, gbc.sp());
        EXPECT(0xa466, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa464));
        EXPECT(0xc4, gbc.readMem(0xa465));
        // CB C4 012C
        gbc.setState(0x2dc8, 0x92d7, 0xe010, 0x7f0f, 0x5f29, 0xf8f, 0x1, 0x0);
        gbc.writeMem(0x2dc8, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x92d7, gbc.sp());
        EXPECT(0x2dca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C4 012D
        gbc.setState(0xdf1f, 0xb966, 0xee00, 0x5cae, 0x53a1, 0x47c4, 0x0, 0x0);
        gbc.writeMem(0xdf1f, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xb966, gbc.sp());
        EXPECT(0xdf21, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf1f));
        EXPECT(0xc4, gbc.readMem(0xdf20));
        // CB C4 012E
        gbc.setState(0x6c51, 0xf602, 0x2d20, 0x505f, 0xdb5c, 0xac9, 0x1, 0x0);
        gbc.writeMem(0x6c51, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xf602, gbc.sp());
        EXPECT(0x6c53, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C4 012F
        gbc.setState(0x3ca3, 0xd41a, 0x7880, 0xbb4c, 0xe866, 0x8476, 0x1, 0x0);
        gbc.writeMem(0x3ca3, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xd41a, gbc.sp());
        EXPECT(0x3ca5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C4 0130
        gbc.setState(0xa0f8, 0x1051, 0xf050, 0xb6f6, 0xb8b2, 0xa870, 0x1, 0x0);
        gbc.writeMem(0xa0f8, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x1051, gbc.sp());
        EXPECT(0xa0fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa0f8));
        EXPECT(0xc4, gbc.readMem(0xa0f9));
        // CB C4 0131
        gbc.setState(0xed44, 0x64e9, 0x3e0, 0xc3a, 0xf803, 0x1918, 0x0, 0x0);
        gbc.writeMem(0xed44, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x64e9, gbc.sp());
        EXPECT(0xed46, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed44));
        EXPECT(0xc4, gbc.readMem(0xed45));
        // CB C4 0132
        gbc.setState(0x93e4, 0xec0, 0x8ab0, 0x63e9, 0x3d0d, 0xd959, 0x1, 0x0);
        gbc.writeMem(0x93e4, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xec0, gbc.sp());
        EXPECT(0x93e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x93e4));
        EXPECT(0xc4, gbc.readMem(0x93e5));
        // CB C4 0133
        gbc.setState(0x5544, 0xb107, 0x3ab0, 0xad18, 0x2d67, 0xbceb, 0x0, 0x0);
        gbc.writeMem(0x5544, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xb107, gbc.sp());
        EXPECT(0x5546, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C4 0134
        gbc.setState(0x7b72, 0x816a, 0x2ef0, 0x1a70, 0x321a, 0xdd5c, 0x1, 0x0);
        gbc.writeMem(0x7b72, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x816a, gbc.sp());
        EXPECT(0x7b74, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C4 0135
        gbc.setState(0xeedb, 0x4878, 0x7300, 0x54de, 0xdc93, 0xb8d3, 0x1, 0x1);
        gbc.writeMem(0xeedb, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x4878, gbc.sp());
        EXPECT(0xeedd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeedb));
        EXPECT(0xc4, gbc.readMem(0xeedc));
        // CB C4 0136
        gbc.setState(0xb4, 0x47d0, 0x5190, 0x2e41, 0xde84, 0x993d, 0x0, 0x1);
        gbc.writeMem(0xb4, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x47d0, gbc.sp());
        EXPECT(0xb6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C4 0137
        gbc.setState(0x8ec6, 0x7669, 0xbfc0, 0x7dcb, 0xcbaa, 0x364f, 0x1, 0x0);
        gbc.writeMem(0x8ec6, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x7669, gbc.sp());
        EXPECT(0x8ec8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ec6));
        EXPECT(0xc4, gbc.readMem(0x8ec7));
        // CB C4 0138
        gbc.setState(0xb9a9, 0x4819, 0x1d10, 0xf761, 0xe83b, 0x1cb3, 0x1, 0x1);
        gbc.writeMem(0xb9a9, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x4819, gbc.sp());
        EXPECT(0xb9ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb9a9));
        EXPECT(0xc4, gbc.readMem(0xb9aa));
        // CB C4 0139
        gbc.setState(0xe57, 0xb2ee, 0x89e0, 0xc57e, 0xb269, 0x78a0, 0x1, 0x1);
        gbc.writeMem(0xe57, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xb2ee, gbc.sp());
        EXPECT(0xe59, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C4 013A
        gbc.setState(0x9e0b, 0xc72, 0x4500, 0x4dbf, 0x33c4, 0x9101, 0x1, 0x1);
        gbc.writeMem(0x9e0b, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xc72, gbc.sp());
        EXPECT(0x9e0d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e0b));
        EXPECT(0xc4, gbc.readMem(0x9e0c));
        // CB C4 013B
        gbc.setState(0x44a1, 0x81ca, 0x260, 0x5957, 0x1544, 0x47b9, 0x1, 0x1);
        gbc.writeMem(0x44a1, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x81ca, gbc.sp());
        EXPECT(0x44a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C4 013C
        gbc.setState(0x9a1, 0x6ca5, 0x3220, 0x26a7, 0x61f9, 0xebcb, 0x0, 0x0);
        gbc.writeMem(0x9a1, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x6ca5, gbc.sp());
        EXPECT(0x9a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C4 013D
        gbc.setState(0x7ebd, 0xf18a, 0x79b0, 0x4315, 0xe27, 0xa6d2, 0x0, 0x0);
        gbc.writeMem(0x7ebd, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xf18a, gbc.sp());
        EXPECT(0x7ebf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C4 013E
        gbc.setState(0xc082, 0x335e, 0x9340, 0xf42a, 0x8c8a, 0xb6e3, 0x0, 0x0);
        gbc.writeMem(0xc082, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x335e, gbc.sp());
        EXPECT(0xc084, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc082));
        EXPECT(0xc4, gbc.readMem(0xc083));
        // CB C4 013F
        gbc.setState(0xc9a1, 0x73b8, 0x6190, 0xafab, 0x48b8, 0xd9ef, 0x0, 0x1);
        gbc.writeMem(0xc9a1, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x73b8, gbc.sp());
        EXPECT(0xc9a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc9a1));
        EXPECT(0xc4, gbc.readMem(0xc9a2));
        // CB C4 0140
        gbc.setState(0x3968, 0x7eaa, 0x6670, 0x943c, 0xab2f, 0x415c, 0x1, 0x0);
        gbc.writeMem(0x3968, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x7eaa, gbc.sp());
        EXPECT(0x396a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C4 0141
        gbc.setState(0x3a5a, 0x9d43, 0xce0, 0x8f6, 0x268d, 0x8382, 0x0, 0x0);
        gbc.writeMem(0x3a5a, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x9d43, gbc.sp());
        EXPECT(0x3a5c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C4 0142
        gbc.setState(0x7696, 0x173e, 0xfb60, 0xfcbe, 0xe33d, 0xb873, 0x0, 0x0);
        gbc.writeMem(0x7696, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x173e, gbc.sp());
        EXPECT(0x7698, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C4 0144
        gbc.setState(0xcec9, 0x6d56, 0xb5c0, 0xb78e, 0x33c7, 0x3a72, 0x0, 0x1);
        gbc.writeMem(0xcec9, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x6d56, gbc.sp());
        EXPECT(0xcecb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcec9));
        EXPECT(0xc4, gbc.readMem(0xceca));
        // CB C4 0145
        gbc.setState(0x299c, 0xc657, 0x5140, 0xb9c0, 0xd0e3, 0x91ba, 0x1, 0x0);
        gbc.writeMem(0x299c, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xc657, gbc.sp());
        EXPECT(0x299e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C4 0146
        gbc.setState(0x53cb, 0x3500, 0xacc0, 0x7d0c, 0x655e, 0x1ea, 0x1, 0x1);
        gbc.writeMem(0x53cb, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x3500, gbc.sp());
        EXPECT(0x53cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C4 0147
        gbc.setState(0x96df, 0xc7fc, 0xbbd0, 0x3389, 0x59e1, 0x6fe2, 0x0, 0x0);
        gbc.writeMem(0x96df, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xc7fc, gbc.sp());
        EXPECT(0x96e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x96df));
        EXPECT(0xc4, gbc.readMem(0x96e0));
        // CB C4 0148
        gbc.setState(0xb128, 0x7640, 0x8a00, 0x9449, 0xccdf, 0xd96f, 0x1, 0x1);
        gbc.writeMem(0xb128, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x7640, gbc.sp());
        EXPECT(0xb12a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb128));
        EXPECT(0xc4, gbc.readMem(0xb129));
        // CB C4 0149
        gbc.setState(0x822a, 0xc749, 0x5e20, 0x7d7a, 0x3411, 0x8bf1, 0x1, 0x0);
        gbc.writeMem(0x822a, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xc749, gbc.sp());
        EXPECT(0x822c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x822a));
        EXPECT(0xc4, gbc.readMem(0x822b));
        // CB C4 014A
        gbc.setState(0x5d8d, 0x55fd, 0xad00, 0x2f52, 0x4139, 0x9d52, 0x1, 0x0);
        gbc.writeMem(0x5d8d, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x55fd, gbc.sp());
        EXPECT(0x5d8f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C4 014B
        gbc.setState(0x3c3c, 0x20b0, 0xf300, 0xdd7, 0xf296, 0xc7e8, 0x1, 0x1);
        gbc.writeMem(0x3c3c, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x20b0, gbc.sp());
        EXPECT(0x3c3e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C4 014C
        gbc.setState(0x18c, 0xecb1, 0x7f30, 0xdfce, 0x12ed, 0x8695, 0x0, 0x0);
        gbc.writeMem(0x18c, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xecb1, gbc.sp());
        EXPECT(0x18e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C4 014D
        gbc.setState(0x6c3a, 0x1c04, 0xc4b0, 0x9e19, 0x578b, 0x4579, 0x1, 0x1);
        gbc.writeMem(0x6c3a, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x1c04, gbc.sp());
        EXPECT(0x6c3c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C4 014E
        gbc.setState(0x85ae, 0xc0c0, 0xc5d0, 0x5be1, 0x6bba, 0xa2d9, 0x0, 0x0);
        gbc.writeMem(0x85ae, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xc0c0, gbc.sp());
        EXPECT(0x85b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x85ae));
        EXPECT(0xc4, gbc.readMem(0x85af));
        // CB C4 014F
        gbc.setState(0x4abf, 0xc840, 0xe870, 0x9740, 0xc199, 0x1bc9, 0x0, 0x0);
        gbc.writeMem(0x4abf, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xc840, gbc.sp());
        EXPECT(0x4ac1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C4 0150
        gbc.setState(0xb11a, 0x8c96, 0x4e30, 0x5487, 0xcf21, 0x68c0, 0x0, 0x0);
        gbc.writeMem(0xb11a, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x8c96, gbc.sp());
        EXPECT(0xb11c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb11a));
        EXPECT(0xc4, gbc.readMem(0xb11b));
        // CB C4 0151
        gbc.setState(0x5888, 0x259c, 0xa3a0, 0x2453, 0x972a, 0xf3c9, 0x1, 0x0);
        gbc.writeMem(0x5888, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x259c, gbc.sp());
        EXPECT(0x588a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C4 0152
        gbc.setState(0x31e7, 0x96fe, 0xf6c0, 0xb868, 0xc873, 0xdd5d, 0x0, 0x1);
        gbc.writeMem(0x31e7, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x96fe, gbc.sp());
        EXPECT(0x31e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C4 0153
        gbc.setState(0xce73, 0x6083, 0xd600, 0x715a, 0x35d6, 0xc595, 0x0, 0x1);
        gbc.writeMem(0xce73, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x6083, gbc.sp());
        EXPECT(0xce75, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce73));
        EXPECT(0xc4, gbc.readMem(0xce74));
        // CB C4 0154
        gbc.setState(0x79d6, 0xbe13, 0x6810, 0xa6a8, 0xfc45, 0xe57d, 0x0, 0x0);
        gbc.writeMem(0x79d6, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xbe13, gbc.sp());
        EXPECT(0x79d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C4 0155
        gbc.setState(0xb9c0, 0xcd9d, 0xe060, 0x53a3, 0x14bc, 0x8e18, 0x0, 0x0);
        gbc.writeMem(0xb9c0, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xcd9d, gbc.sp());
        EXPECT(0xb9c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb9c0));
        EXPECT(0xc4, gbc.readMem(0xb9c1));
        // CB C4 0156
        gbc.setState(0x581c, 0x66e1, 0xde90, 0xa7f0, 0xc2f0, 0x3886, 0x1, 0x0);
        gbc.writeMem(0x581c, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x66e1, gbc.sp());
        EXPECT(0x581e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C4 0157
        gbc.setState(0xeb1c, 0x4da5, 0x1db0, 0xaa72, 0xe891, 0x1225, 0x1, 0x0);
        gbc.writeMem(0xeb1c, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x4da5, gbc.sp());
        EXPECT(0xeb1e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb1c));
        EXPECT(0xc4, gbc.readMem(0xeb1d));
        // CB C4 0158
        gbc.setState(0xf00, 0x5c14, 0xb750, 0xc1ff, 0xbdd1, 0xfa0b, 0x0, 0x0);
        gbc.writeMem(0xf00, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x5c14, gbc.sp());
        EXPECT(0xf02, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C4 0159
        gbc.setState(0x15da, 0xa52, 0xdde0, 0xb003, 0x7741, 0x9c99, 0x1, 0x0);
        gbc.writeMem(0x15da, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xa52, gbc.sp());
        EXPECT(0x15dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C4 015A
        gbc.setState(0xa948, 0x507a, 0xf5e0, 0xd145, 0xcd3f, 0x3c92, 0x1, 0x0);
        gbc.writeMem(0xa948, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x507a, gbc.sp());
        EXPECT(0xa94a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa948));
        EXPECT(0xc4, gbc.readMem(0xa949));
        // CB C4 015B
        gbc.setState(0x1f82, 0xea29, 0x6d40, 0xb50c, 0x7f17, 0xb782, 0x0, 0x1);
        gbc.writeMem(0x1f82, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xea29, gbc.sp());
        EXPECT(0x1f84, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C4 015C
        gbc.setState(0xe978, 0x90ae, 0x5f0, 0x4431, 0x2367, 0x354e, 0x1, 0x0);
        gbc.writeMem(0xe978, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x90ae, gbc.sp());
        EXPECT(0xe97a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe978));
        EXPECT(0xc4, gbc.readMem(0xe979));
        // CB C4 015D
        gbc.setState(0xc6, 0xb7d2, 0x5d20, 0xc97, 0x708f, 0x97e4, 0x0, 0x1);
        gbc.writeMem(0xc6, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xb7d2, gbc.sp());
        EXPECT(0xc8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C4 015E
        gbc.setState(0xe575, 0x3801, 0x30, 0xee41, 0xed4, 0x5baa, 0x1, 0x0);
        gbc.writeMem(0xe575, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x3801, gbc.sp());
        EXPECT(0xe577, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe575));
        EXPECT(0xc4, gbc.readMem(0xe576));
        // CB C4 015F
        gbc.setState(0xbce7, 0x30e, 0xcd10, 0x35a3, 0x5150, 0xea87, 0x0, 0x0);
        gbc.writeMem(0xbce7, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x30e, gbc.sp());
        EXPECT(0xbce9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbce7));
        EXPECT(0xc4, gbc.readMem(0xbce8));
        // CB C4 0161
        gbc.setState(0x6460, 0x770f, 0x1f50, 0x7423, 0x93a7, 0x7677, 0x0, 0x1);
        gbc.writeMem(0x6460, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x770f, gbc.sp());
        EXPECT(0x6462, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C4 0162
        gbc.setState(0x6f05, 0x6c28, 0x83f0, 0x8a2c, 0x9d61, 0xff61, 0x0, 0x0);
        gbc.writeMem(0x6f05, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x6c28, gbc.sp());
        EXPECT(0x6f07, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C4 0163
        gbc.setState(0xda0e, 0xc714, 0x1c50, 0x6535, 0x82ea, 0x8a31, 0x1, 0x1);
        gbc.writeMem(0xda0e, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xc714, gbc.sp());
        EXPECT(0xda10, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda0e));
        EXPECT(0xc4, gbc.readMem(0xda0f));
        // CB C4 0164
        gbc.setState(0x51d8, 0xa274, 0x12b0, 0x6654, 0x3f93, 0x2b39, 0x1, 0x0);
        gbc.writeMem(0x51d8, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xa274, gbc.sp());
        EXPECT(0x51da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C4 0165
        gbc.setState(0xa7c6, 0x9792, 0x55b0, 0xccf8, 0x9e93, 0xa8e6, 0x0, 0x1);
        gbc.writeMem(0xa7c6, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x9792, gbc.sp());
        EXPECT(0xa7c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa7c6));
        EXPECT(0xc4, gbc.readMem(0xa7c7));
        // CB C4 0166
        gbc.setState(0xa85d, 0xf74, 0xe760, 0xa796, 0x95a3, 0x52be, 0x0, 0x0);
        gbc.writeMem(0xa85d, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xf74, gbc.sp());
        EXPECT(0xa85f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa85d));
        EXPECT(0xc4, gbc.readMem(0xa85e));
        // CB C4 0167
        gbc.setState(0x4791, 0x8f4e, 0x44e0, 0xcd54, 0x550a, 0x5f34, 0x1, 0x0);
        gbc.writeMem(0x4791, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x8f4e, gbc.sp());
        EXPECT(0x4793, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C4 0169
        gbc.setState(0x5a7f, 0xd3bc, 0xff60, 0x9a51, 0xfee7, 0x24bf, 0x0, 0x0);
        gbc.writeMem(0x5a7f, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xd3bc, gbc.sp());
        EXPECT(0x5a81, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C4 016A
        gbc.setState(0xd6f3, 0xa924, 0x2500, 0x2d37, 0xc495, 0x1999, 0x0, 0x0);
        gbc.writeMem(0xd6f3, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xa924, gbc.sp());
        EXPECT(0xd6f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd6f3));
        EXPECT(0xc4, gbc.readMem(0xd6f4));
        // CB C4 016B
        gbc.setState(0x3d5, 0xfcd8, 0x3500, 0x6f0c, 0xc561, 0x68e2, 0x1, 0x1);
        gbc.writeMem(0x3d5, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xfcd8, gbc.sp());
        EXPECT(0x3d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C4 016C
        gbc.setState(0xad13, 0xc36f, 0xe270, 0x461f, 0xdf16, 0x71a3, 0x1, 0x1);
        gbc.writeMem(0xad13, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xc36f, gbc.sp());
        EXPECT(0xad15, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad13));
        EXPECT(0xc4, gbc.readMem(0xad14));
        // CB C4 016D
        gbc.setState(0xd9da, 0x11ec, 0x4c00, 0x8b4d, 0xd518, 0x2190, 0x0, 0x1);
        gbc.writeMem(0xd9da, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x11ec, gbc.sp());
        EXPECT(0xd9dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd9da));
        EXPECT(0xc4, gbc.readMem(0xd9db));
        // CB C4 016E
        gbc.setState(0x55f4, 0x6a7a, 0xfc70, 0xe69a, 0x618e, 0x2eed, 0x0, 0x1);
        gbc.writeMem(0x55f4, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x6a7a, gbc.sp());
        EXPECT(0x55f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C4 016F
        gbc.setState(0x5399, 0xc78b, 0x9e70, 0x35c3, 0xe06c, 0x9d10, 0x0, 0x0);
        gbc.writeMem(0x5399, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xc78b, gbc.sp());
        EXPECT(0x539b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C4 0171
        gbc.setState(0x65fa, 0xa6f7, 0x1070, 0x60ce, 0xf230, 0xd02, 0x0, 0x0);
        gbc.writeMem(0x65fa, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xa6f7, gbc.sp());
        EXPECT(0x65fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C4 0172
        gbc.setState(0xeba0, 0x87b1, 0x6930, 0x2fdc, 0xa697, 0xde0, 0x1, 0x0);
        gbc.writeMem(0xeba0, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x87b1, gbc.sp());
        EXPECT(0xeba2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeba0));
        EXPECT(0xc4, gbc.readMem(0xeba1));
        // CB C4 0173
        gbc.setState(0x52f, 0xf42c, 0xe990, 0xe9f8, 0x85cf, 0x962a, 0x0, 0x1);
        gbc.writeMem(0x52f, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xf42c, gbc.sp());
        EXPECT(0x531, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C4 0174
        gbc.setState(0x8891, 0x109e, 0x230, 0xa4a6, 0xf60f, 0x8365, 0x1, 0x0);
        gbc.writeMem(0x8891, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x109e, gbc.sp());
        EXPECT(0x8893, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8891));
        EXPECT(0xc4, gbc.readMem(0x8892));
        // CB C4 0175
        gbc.setState(0x24c2, 0x17df, 0x150, 0x71e5, 0x7bb5, 0x37cb, 0x0, 0x1);
        gbc.writeMem(0x24c2, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x17df, gbc.sp());
        EXPECT(0x24c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C4 0176
        gbc.setState(0x80a3, 0x644c, 0x3b90, 0xedc8, 0xa604, 0x6c4f, 0x1, 0x1);
        gbc.writeMem(0x80a3, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x644c, gbc.sp());
        EXPECT(0x80a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x80a3));
        EXPECT(0xc4, gbc.readMem(0x80a4));
        // CB C4 0177
        gbc.setState(0x7800, 0xe636, 0x5ac0, 0xd0ab, 0x3975, 0xcfeb, 0x1, 0x1);
        gbc.writeMem(0x7800, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xe636, gbc.sp());
        EXPECT(0x7802, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C4 0178
        gbc.setState(0x71ce, 0x9bbb, 0x44e0, 0x6aff, 0xa7ca, 0x19d5, 0x0, 0x0);
        gbc.writeMem(0x71ce, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x9bbb, gbc.sp());
        EXPECT(0x71d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C4 0179
        gbc.setState(0x254, 0x524a, 0x1d0, 0x6a67, 0xd42e, 0x9828, 0x1, 0x0);
        gbc.writeMem(0x254, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x524a, gbc.sp());
        EXPECT(0x256, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C4 017A
        gbc.setState(0x53af, 0xfb70, 0x8450, 0x91a7, 0xf38b, 0x4b22, 0x0, 0x1);
        gbc.writeMem(0x53af, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xfb70, gbc.sp());
        EXPECT(0x53b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C4 017B
        gbc.setState(0x2662, 0xf952, 0x41b0, 0xf1b2, 0x3af3, 0x932a, 0x0, 0x0);
        gbc.writeMem(0x2662, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xf952, gbc.sp());
        EXPECT(0x2664, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C4 017C
        gbc.setState(0xbb38, 0x2aff, 0xb510, 0xb83a, 0xe2b0, 0x3030, 0x1, 0x1);
        gbc.writeMem(0xbb38, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x2aff, gbc.sp());
        EXPECT(0xbb3a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb38));
        EXPECT(0xc4, gbc.readMem(0xbb39));
        // CB C4 017D
        gbc.setState(0x6184, 0x12a5, 0xfe40, 0x9912, 0xb0af, 0x3b44, 0x0, 0x0);
        gbc.writeMem(0x6184, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x12a5, gbc.sp());
        EXPECT(0x6186, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C4 017E
        gbc.setState(0x77f3, 0x4011, 0x10b0, 0xd3e0, 0xc13d, 0x807c, 0x1, 0x0);
        gbc.writeMem(0x77f3, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x4011, gbc.sp());
        EXPECT(0x77f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C4 017F
        gbc.setState(0x244a, 0x30d7, 0xc6a0, 0x4539, 0x872d, 0x9bc1, 0x0, 0x1);
        gbc.writeMem(0x244a, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x30d7, gbc.sp());
        EXPECT(0x244c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C4 0180
        gbc.setState(0x344a, 0x6b2e, 0x1640, 0x8a49, 0x8493, 0xd20d, 0x1, 0x0);
        gbc.writeMem(0x344a, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x6b2e, gbc.sp());
        EXPECT(0x344c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C4 0182
        gbc.setState(0x69b4, 0x720, 0x2570, 0x102f, 0x1fdd, 0x2cbb, 0x1, 0x1);
        gbc.writeMem(0x69b4, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x720, gbc.sp());
        EXPECT(0x69b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C4 0183
        gbc.setState(0xd0ad, 0x5a2, 0x6390, 0xa6d9, 0xeeb1, 0xa8ae, 0x0, 0x0);
        gbc.writeMem(0xd0ad, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x5a2, gbc.sp());
        EXPECT(0xd0af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd0ad));
        EXPECT(0xc4, gbc.readMem(0xd0ae));
        // CB C4 0184
        gbc.setState(0x5790, 0x4e13, 0xb020, 0x5aff, 0x255a, 0xf88f, 0x1, 0x1);
        gbc.writeMem(0x5790, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x4e13, gbc.sp());
        EXPECT(0x5792, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C4 0185
        gbc.setState(0xd6d7, 0x56f1, 0x1c70, 0x7875, 0xe55c, 0xe950, 0x1, 0x1);
        gbc.writeMem(0xd6d7, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x56f1, gbc.sp());
        EXPECT(0xd6d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd6d7));
        EXPECT(0xc4, gbc.readMem(0xd6d8));
        // CB C4 0186
        gbc.setState(0x6f1f, 0xb783, 0x9c00, 0x6ffb, 0xace7, 0x4d5f, 0x0, 0x1);
        gbc.writeMem(0x6f1f, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xb783, gbc.sp());
        EXPECT(0x6f21, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C4 0187
        gbc.setState(0x8fcc, 0xa8d9, 0x2d50, 0x3b78, 0xcae0, 0xc674, 0x0, 0x0);
        gbc.writeMem(0x8fcc, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xa8d9, gbc.sp());
        EXPECT(0x8fce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8fcc));
        EXPECT(0xc4, gbc.readMem(0x8fcd));
        // CB C4 0188
        gbc.setState(0x7ca6, 0xfe23, 0xf5e0, 0x7ffe, 0xbbd1, 0xfaab, 0x0, 0x1);
        gbc.writeMem(0x7ca6, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xfe23, gbc.sp());
        EXPECT(0x7ca8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C4 0189
        gbc.setState(0xd579, 0x83d3, 0x1440, 0x6420, 0x1cd3, 0x35a, 0x0, 0x1);
        gbc.writeMem(0xd579, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x83d3, gbc.sp());
        EXPECT(0xd57b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd579));
        EXPECT(0xc4, gbc.readMem(0xd57a));
        // CB C4 018A
        gbc.setState(0x96, 0xbd6f, 0x5870, 0x6015, 0x55cd, 0xd77d, 0x1, 0x1);
        gbc.writeMem(0x96, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xbd6f, gbc.sp());
        EXPECT(0x98, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C4 018B
        gbc.setState(0x26d9, 0xadb8, 0x1720, 0xaf9e, 0xfb94, 0xc6f, 0x1, 0x1);
        gbc.writeMem(0x26d9, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xadb8, gbc.sp());
        EXPECT(0x26db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C4 018D
        gbc.setState(0x5b8d, 0x7adf, 0x4050, 0xdb04, 0x6c1e, 0x9015, 0x0, 0x1);
        gbc.writeMem(0x5b8d, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x7adf, gbc.sp());
        EXPECT(0x5b8f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C4 018E
        gbc.setState(0x5f8, 0x961f, 0x1120, 0x5db4, 0xe22e, 0x5277, 0x0, 0x0);
        gbc.writeMem(0x5f8, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x961f, gbc.sp());
        EXPECT(0x5fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C4 018F
        gbc.setState(0xe570, 0x8a2c, 0x73b0, 0xa640, 0x7486, 0xe89f, 0x0, 0x1);
        gbc.writeMem(0xe570, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x8a2c, gbc.sp());
        EXPECT(0xe572, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe570));
        EXPECT(0xc4, gbc.readMem(0xe571));
        // CB C4 0190
        gbc.setState(0x7d5d, 0x5dfd, 0xceb0, 0xe50e, 0x55e9, 0xb8f6, 0x0, 0x0);
        gbc.writeMem(0x7d5d, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x5dfd, gbc.sp());
        EXPECT(0x7d5f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C4 0192
        gbc.setState(0xa054, 0x22d, 0x3350, 0xd6f7, 0x7f3a, 0xdb31, 0x1, 0x1);
        gbc.writeMem(0xa054, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x22d, gbc.sp());
        EXPECT(0xa056, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa054));
        EXPECT(0xc4, gbc.readMem(0xa055));
        // CB C4 0193
        gbc.setState(0xbdb6, 0x8cb9, 0x74d0, 0x5c29, 0x10d1, 0xcc0, 0x0, 0x1);
        gbc.writeMem(0xbdb6, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x8cb9, gbc.sp());
        EXPECT(0xbdb8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbdb6));
        EXPECT(0xc4, gbc.readMem(0xbdb7));
        // CB C4 0194
        gbc.setState(0xa4b7, 0x4245, 0x11d0, 0xa9d2, 0x8e73, 0xaf03, 0x0, 0x1);
        gbc.writeMem(0xa4b7, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x4245, gbc.sp());
        EXPECT(0xa4b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa4b7));
        EXPECT(0xc4, gbc.readMem(0xa4b8));
        // CB C4 0197
        gbc.setState(0xad3f, 0x9d33, 0x1910, 0x5486, 0xe338, 0x4c97, 0x0, 0x0);
        gbc.writeMem(0xad3f, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x9d33, gbc.sp());
        EXPECT(0xad41, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad3f));
        EXPECT(0xc4, gbc.readMem(0xad40));
        // CB C4 0198
        gbc.setState(0x7f36, 0x3d31, 0x8eb0, 0x3d39, 0xb8b6, 0xa099, 0x1, 0x1);
        gbc.writeMem(0x7f36, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x3d31, gbc.sp());
        EXPECT(0x7f38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C4 0199
        gbc.setState(0x9aef, 0xff76, 0xc250, 0x5331, 0x5963, 0xc2e7, 0x1, 0x1);
        gbc.writeMem(0x9aef, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xff76, gbc.sp());
        EXPECT(0x9af1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9aef));
        EXPECT(0xc4, gbc.readMem(0x9af0));
        // CB C4 019A
        gbc.setState(0xfd0, 0x8f1f, 0x2520, 0x1f85, 0x1622, 0x1531, 0x1, 0x1);
        gbc.writeMem(0xfd0, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x8f1f, gbc.sp());
        EXPECT(0xfd2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C4 019B
        gbc.setState(0x7026, 0x730, 0xa260, 0x2ca5, 0xedc3, 0xee69, 0x1, 0x1);
        gbc.writeMem(0x7026, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x730, gbc.sp());
        EXPECT(0x7028, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C4 019C
        gbc.setState(0xd479, 0xea49, 0x9110, 0xd928, 0x9577, 0xe6a, 0x1, 0x1);
        gbc.writeMem(0xd479, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xea49, gbc.sp());
        EXPECT(0xd47b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd479));
        EXPECT(0xc4, gbc.readMem(0xd47a));
        // CB C4 019D
        gbc.setState(0xb860, 0x56fc, 0x2770, 0xdea9, 0xe1ea, 0x4a1e, 0x1, 0x0);
        gbc.writeMem(0xb860, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x56fc, gbc.sp());
        EXPECT(0xb862, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb860));
        EXPECT(0xc4, gbc.readMem(0xb861));
        // CB C4 019E
        gbc.setState(0xd7c4, 0x4a24, 0x5810, 0x412a, 0xc01a, 0x347d, 0x0, 0x1);
        gbc.writeMem(0xd7c4, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x4a24, gbc.sp());
        EXPECT(0xd7c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd7c4));
        EXPECT(0xc4, gbc.readMem(0xd7c5));
        // CB C4 019F
        gbc.setState(0x61e9, 0x99c2, 0xeee0, 0x73ac, 0xda0a, 0x2454, 0x0, 0x1);
        gbc.writeMem(0x61e9, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x99c2, gbc.sp());
        EXPECT(0x61eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C4 01A0
        gbc.setState(0x3683, 0xde14, 0x8550, 0x8d8a, 0xd629, 0xb461, 0x0, 0x0);
        gbc.writeMem(0x3683, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xde14, gbc.sp());
        EXPECT(0x3685, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C4 01A1
        gbc.setState(0x1846, 0x2c4a, 0x4000, 0xcf89, 0x1b04, 0xc9d4, 0x1, 0x0);
        gbc.writeMem(0x1846, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x2c4a, gbc.sp());
        EXPECT(0x1848, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C4 01A2
        gbc.setState(0x78b5, 0x1fc, 0xcc30, 0x9636, 0x5112, 0xb5ea, 0x1, 0x1);
        gbc.writeMem(0x78b5, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x1fc, gbc.sp());
        EXPECT(0x78b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C4 01A3
        gbc.setState(0xd75a, 0xde84, 0xabc0, 0x7757, 0xaa2d, 0x32aa, 0x0, 0x0);
        gbc.writeMem(0xd75a, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xde84, gbc.sp());
        EXPECT(0xd75c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd75a));
        EXPECT(0xc4, gbc.readMem(0xd75b));
        // CB C4 01A4
        gbc.setState(0x8e0e, 0x58e8, 0x2f80, 0x44ee, 0xe090, 0x6f8e, 0x1, 0x1);
        gbc.writeMem(0x8e0e, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x58e8, gbc.sp());
        EXPECT(0x8e10, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e0e));
        EXPECT(0xc4, gbc.readMem(0x8e0f));
        // CB C4 01A5
        gbc.setState(0x835, 0x9e94, 0x8db0, 0x930e, 0xb73f, 0xff31, 0x0, 0x0);
        gbc.writeMem(0x835, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x9e94, gbc.sp());
        EXPECT(0x837, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C4 01A6
        gbc.setState(0x811b, 0x8e4e, 0x22a0, 0x3cf1, 0xbc96, 0x82fb, 0x1, 0x1);
        gbc.writeMem(0x811b, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x8e4e, gbc.sp());
        EXPECT(0x811d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x811b));
        EXPECT(0xc4, gbc.readMem(0x811c));
        // CB C4 01A7
        gbc.setState(0x652a, 0x55db, 0xc2c0, 0xacb5, 0x81e2, 0x7039, 0x1, 0x0);
        gbc.writeMem(0x652a, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x55db, gbc.sp());
        EXPECT(0x652c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C4 01A8
        gbc.setState(0x9b6, 0xa190, 0x9670, 0x12cd, 0x1df4, 0xd29c, 0x0, 0x1);
        gbc.writeMem(0x9b6, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xa190, gbc.sp());
        EXPECT(0x9b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C4 01A9
        gbc.setState(0x7526, 0x8a5d, 0x8d60, 0xfdaf, 0x6279, 0x752d, 0x0, 0x1);
        gbc.writeMem(0x7526, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x8a5d, gbc.sp());
        EXPECT(0x7528, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C4 01AA
        gbc.setState(0xa133, 0xc58b, 0xa650, 0xa414, 0x9b02, 0x57f1, 0x0, 0x1);
        gbc.writeMem(0xa133, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xc58b, gbc.sp());
        EXPECT(0xa135, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa133));
        EXPECT(0xc4, gbc.readMem(0xa134));
        // CB C4 01AB
        gbc.setState(0xfc7, 0xf3c3, 0xc450, 0xde3a, 0xdb4d, 0x6dcb, 0x0, 0x0);
        gbc.writeMem(0xfc7, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xf3c3, gbc.sp());
        EXPECT(0xfc9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C4 01AC
        gbc.setState(0x4b1a, 0xbf41, 0xcd40, 0x70a9, 0x53b3, 0x80c1, 0x1, 0x1);
        gbc.writeMem(0x4b1a, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xbf41, gbc.sp());
        EXPECT(0x4b1c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C4 01AD
        gbc.setState(0x67d9, 0xc07c, 0xe800, 0xe31a, 0x1eac, 0x5648, 0x1, 0x1);
        gbc.writeMem(0x67d9, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xc07c, gbc.sp());
        EXPECT(0x67db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C4 01AE
        gbc.setState(0xc370, 0x23c0, 0x49e0, 0x12f9, 0xaaf2, 0x6c48, 0x1, 0x1);
        gbc.writeMem(0xc370, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x23c0, gbc.sp());
        EXPECT(0xc372, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc370));
        EXPECT(0xc4, gbc.readMem(0xc371));
        // CB C4 01AF
        gbc.setState(0x1f1b, 0xea96, 0x2fc0, 0xe1b4, 0x706b, 0x767c, 0x1, 0x1);
        gbc.writeMem(0x1f1b, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xea96, gbc.sp());
        EXPECT(0x1f1d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C4 01B0
        gbc.setState(0xe38a, 0x7f28, 0x52f0, 0x29d8, 0x95bd, 0x6b71, 0x1, 0x0);
        gbc.writeMem(0xe38a, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x7f28, gbc.sp());
        EXPECT(0xe38c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe38a));
        EXPECT(0xc4, gbc.readMem(0xe38b));
        // CB C4 01B1
        gbc.setState(0x2790, 0xb56, 0x4870, 0xd928, 0xf84d, 0x94f8, 0x0, 0x0);
        gbc.writeMem(0x2790, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xb56, gbc.sp());
        EXPECT(0x2792, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C4 01B2
        gbc.setState(0x5dab, 0x4d05, 0x4d30, 0x4e6e, 0x703b, 0xc45e, 0x1, 0x1);
        gbc.writeMem(0x5dab, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x4d05, gbc.sp());
        EXPECT(0x5dad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C4 01B3
        gbc.setState(0x7bdb, 0x8b7e, 0x1870, 0x5adf, 0x651d, 0x2b9, 0x0, 0x0);
        gbc.writeMem(0x7bdb, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x8b7e, gbc.sp());
        EXPECT(0x7bdd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C4 01B4
        gbc.setState(0xa31e, 0x236f, 0xa2b0, 0xe0dd, 0x3868, 0x7b7d, 0x0, 0x0);
        gbc.writeMem(0xa31e, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x236f, gbc.sp());
        EXPECT(0xa320, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa31e));
        EXPECT(0xc4, gbc.readMem(0xa31f));
        // CB C4 01B5
        gbc.setState(0xdecb, 0xc92a, 0x31d0, 0x72d2, 0xc7a1, 0x8cb2, 0x0, 0x0);
        gbc.writeMem(0xdecb, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xc92a, gbc.sp());
        EXPECT(0xdecd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdecb));
        EXPECT(0xc4, gbc.readMem(0xdecc));
        // CB C4 01B6
        gbc.setState(0x4caf, 0x5bf0, 0xa230, 0x8335, 0xf301, 0x2daf, 0x1, 0x0);
        gbc.writeMem(0x4caf, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x5bf0, gbc.sp());
        EXPECT(0x4cb1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C4 01B7
        gbc.setState(0xecaf, 0x1c66, 0x8510, 0xcaa9, 0x7507, 0xf09c, 0x0, 0x0);
        gbc.writeMem(0xecaf, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x1c66, gbc.sp());
        EXPECT(0xecb1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xecaf));
        EXPECT(0xc4, gbc.readMem(0xecb0));
        // CB C4 01B8
        gbc.setState(0x4dd5, 0xc31e, 0x12d0, 0xd495, 0x70a6, 0x8a65, 0x0, 0x0);
        gbc.writeMem(0x4dd5, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xc31e, gbc.sp());
        EXPECT(0x4dd7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C4 01B9
        gbc.setState(0x266e, 0x5f63, 0x1630, 0xf7d5, 0x8c05, 0xb039, 0x1, 0x0);
        gbc.writeMem(0x266e, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x5f63, gbc.sp());
        EXPECT(0x2670, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C4 01BA
        gbc.setState(0x7c9b, 0x9f5d, 0x59e0, 0x6f7a, 0x66f1, 0xf0f8, 0x1, 0x0);
        gbc.writeMem(0x7c9b, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x9f5d, gbc.sp());
        EXPECT(0x7c9d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C4 01BB
        gbc.setState(0x1fd4, 0xb698, 0xbcc0, 0xf47d, 0xd44d, 0xb225, 0x0, 0x1);
        gbc.writeMem(0x1fd4, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xb698, gbc.sp());
        EXPECT(0x1fd6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C4 01BC
        gbc.setState(0x60a2, 0xee1c, 0xa0f0, 0x67b3, 0x9921, 0x3d35, 0x0, 0x1);
        gbc.writeMem(0x60a2, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xee1c, gbc.sp());
        EXPECT(0x60a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C4 01BD
        gbc.setState(0xa210, 0xd202, 0x1660, 0x26de, 0x90eb, 0x50c4, 0x0, 0x0);
        gbc.writeMem(0xa210, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xd202, gbc.sp());
        EXPECT(0xa212, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa210));
        EXPECT(0xc4, gbc.readMem(0xa211));
        // CB C4 01BE
        gbc.setState(0x87f2, 0x743b, 0xc560, 0xc5dd, 0x6122, 0x8226, 0x1, 0x0);
        gbc.writeMem(0x87f2, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x743b, gbc.sp());
        EXPECT(0x87f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x87f2));
        EXPECT(0xc4, gbc.readMem(0x87f3));
        // CB C4 01BF
        gbc.setState(0x87fd, 0x6617, 0x5ae0, 0x8b66, 0x6164, 0xec37, 0x1, 0x0);
        gbc.writeMem(0x87fd, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x6617, gbc.sp());
        EXPECT(0x87ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x87fd));
        EXPECT(0xc4, gbc.readMem(0x87fe));
        // CB C4 01C0
        gbc.setState(0xd72a, 0xa287, 0x2760, 0x98e9, 0x3070, 0xae80, 0x1, 0x1);
        gbc.writeMem(0xd72a, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xa287, gbc.sp());
        EXPECT(0xd72c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd72a));
        EXPECT(0xc4, gbc.readMem(0xd72b));
        // CB C4 01C1
        gbc.setState(0x4ca7, 0x3e6, 0x26c0, 0xf94f, 0xd3ba, 0x8e3c, 0x1, 0x1);
        gbc.writeMem(0x4ca7, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x3e6, gbc.sp());
        EXPECT(0x4ca9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C4 01C2
        gbc.setState(0x346c, 0xb8f1, 0xc790, 0x282, 0x8460, 0x898e, 0x1, 0x1);
        gbc.writeMem(0x346c, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xb8f1, gbc.sp());
        EXPECT(0x346e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C4 01C3
        gbc.setState(0x4a07, 0xd88a, 0x6470, 0x2ec2, 0x7120, 0x6174, 0x1, 0x1);
        gbc.writeMem(0x4a07, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xd88a, gbc.sp());
        EXPECT(0x4a09, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C4 01C4
        gbc.setState(0x5294, 0xab73, 0x8b70, 0x49ee, 0xb856, 0xa082, 0x0, 0x1);
        gbc.writeMem(0x5294, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xab73, gbc.sp());
        EXPECT(0x5296, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C4 01C6
        gbc.setState(0x3f1e, 0x5213, 0x4170, 0xe564, 0x6726, 0xff6, 0x0, 0x0);
        gbc.writeMem(0x3f1e, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x5213, gbc.sp());
        EXPECT(0x3f20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C4 01C7
        gbc.setState(0x2522, 0xf155, 0xe540, 0x1ee7, 0x3f1, 0xe71d, 0x0, 0x0);
        gbc.writeMem(0x2522, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xf155, gbc.sp());
        EXPECT(0x2524, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C4 01C8
        gbc.setState(0x83f0, 0x715b, 0x7f80, 0xcb16, 0xb340, 0x9ec6, 0x1, 0x0);
        gbc.writeMem(0x83f0, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x715b, gbc.sp());
        EXPECT(0x83f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x83f0));
        EXPECT(0xc4, gbc.readMem(0x83f1));
        // CB C4 01C9
        gbc.setState(0x713e, 0x5f63, 0xb220, 0xd6c6, 0x458e, 0xce25, 0x1, 0x0);
        gbc.writeMem(0x713e, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x5f63, gbc.sp());
        EXPECT(0x7140, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C4 01CA
        gbc.setState(0x33aa, 0xf642, 0x48a0, 0x3736, 0xa006, 0x3206, 0x0, 0x0);
        gbc.writeMem(0x33aa, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xf642, gbc.sp());
        EXPECT(0x33ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C4 01CB
        gbc.setState(0x88fa, 0xfd08, 0x5ae0, 0x984, 0x7341, 0x7a07, 0x0, 0x1);
        gbc.writeMem(0x88fa, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xfd08, gbc.sp());
        EXPECT(0x88fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x88fa));
        EXPECT(0xc4, gbc.readMem(0x88fb));
        // CB C4 01CC
        gbc.setState(0x1033, 0x668a, 0xd1f0, 0x20ab, 0x1a93, 0xf52d, 0x1, 0x1);
        gbc.writeMem(0x1033, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x668a, gbc.sp());
        EXPECT(0x1035, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C4 01CD
        gbc.setState(0xb8a, 0x99aa, 0xff40, 0xb558, 0x218e, 0xc7, 0x0, 0x1);
        gbc.writeMem(0xb8a, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x99aa, gbc.sp());
        EXPECT(0xb8c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C4 01CE
        gbc.setState(0x51e9, 0x46ac, 0xcea0, 0x37f9, 0x8d6b, 0x582c, 0x0, 0x1);
        gbc.writeMem(0x51e9, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x46ac, gbc.sp());
        EXPECT(0x51eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C4 01CF
        gbc.setState(0x386a, 0x6722, 0xbcc0, 0xae9b, 0x99c, 0x308b, 0x0, 0x1);
        gbc.writeMem(0x386a, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x6722, gbc.sp());
        EXPECT(0x386c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C4 01D0
        gbc.setState(0xcde0, 0xa208, 0x6100, 0xadbd, 0xd606, 0xca8f, 0x0, 0x0);
        gbc.writeMem(0xcde0, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xa208, gbc.sp());
        EXPECT(0xcde2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcde0));
        EXPECT(0xc4, gbc.readMem(0xcde1));
        // CB C4 01D1
        gbc.setState(0x7b13, 0xb53e, 0xd0d0, 0x7466, 0xb4b7, 0xc5c, 0x0, 0x1);
        gbc.writeMem(0x7b13, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xb53e, gbc.sp());
        EXPECT(0x7b15, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C4 01D2
        gbc.setState(0xda7, 0xdfa4, 0x4590, 0x7bff, 0x7d62, 0xf6d2, 0x0, 0x1);
        gbc.writeMem(0xda7, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xdfa4, gbc.sp());
        EXPECT(0xda9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C4 01D3
        gbc.setState(0xda10, 0x3676, 0x8dd0, 0xf6e, 0x8f8d, 0xa95e, 0x0, 0x0);
        gbc.writeMem(0xda10, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x3676, gbc.sp());
        EXPECT(0xda12, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda10));
        EXPECT(0xc4, gbc.readMem(0xda11));
        // CB C4 01D4
        gbc.setState(0x6b4d, 0xa3cf, 0xee90, 0xae55, 0x735a, 0x13b3, 0x1, 0x0);
        gbc.writeMem(0x6b4d, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xa3cf, gbc.sp());
        EXPECT(0x6b4f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C4 01D5
        gbc.setState(0x3d34, 0xc880, 0x3190, 0xa772, 0x481a, 0xaf2e, 0x0, 0x1);
        gbc.writeMem(0x3d34, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xc880, gbc.sp());
        EXPECT(0x3d36, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C4 01D6
        gbc.setState(0xccb, 0x9be6, 0x47f0, 0xe0c1, 0x78c2, 0x4435, 0x1, 0x0);
        gbc.writeMem(0xccb, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x9be6, gbc.sp());
        EXPECT(0xccd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C4 01D8
        gbc.setState(0xdac5, 0xc665, 0x7430, 0xc02e, 0xe2e2, 0xab48, 0x0, 0x1);
        gbc.writeMem(0xdac5, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xc665, gbc.sp());
        EXPECT(0xdac7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdac5));
        EXPECT(0xc4, gbc.readMem(0xdac6));
        // CB C4 01D9
        gbc.setState(0x754d, 0x3ee9, 0xf780, 0xfbed, 0xb095, 0x3dea, 0x1, 0x0);
        gbc.writeMem(0x754d, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x3ee9, gbc.sp());
        EXPECT(0x754f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C4 01DA
        gbc.setState(0xaed3, 0xdd6d, 0x8c40, 0x5077, 0x6e95, 0x1f9d, 0x1, 0x1);
        gbc.writeMem(0xaed3, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xdd6d, gbc.sp());
        EXPECT(0xaed5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaed3));
        EXPECT(0xc4, gbc.readMem(0xaed4));
        // CB C4 01DB
        gbc.setState(0xb199, 0x3bda, 0x4b80, 0x696b, 0xe6da, 0xe9b1, 0x1, 0x1);
        gbc.writeMem(0xb199, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x3bda, gbc.sp());
        EXPECT(0xb19b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb199));
        EXPECT(0xc4, gbc.readMem(0xb19a));
        // CB C4 01DC
        gbc.setState(0x7aec, 0x780, 0x870, 0x5ce6, 0x479a, 0x2cb2, 0x0, 0x1);
        gbc.writeMem(0x7aec, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x780, gbc.sp());
        EXPECT(0x7aee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C4 01DD
        gbc.setState(0x16d3, 0xc5d5, 0xacf0, 0x7643, 0x7aea, 0x87f0, 0x1, 0x1);
        gbc.writeMem(0x16d3, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xc5d5, gbc.sp());
        EXPECT(0x16d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C4 01DE
        gbc.setState(0xa6c9, 0x1238, 0xff90, 0x3a9d, 0x6d10, 0xe2f4, 0x1, 0x1);
        gbc.writeMem(0xa6c9, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x1238, gbc.sp());
        EXPECT(0xa6cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa6c9));
        EXPECT(0xc4, gbc.readMem(0xa6ca));
        // CB C4 01DF
        gbc.setState(0x2f7c, 0x784, 0xfbf0, 0x6eea, 0xb876, 0xdf3a, 0x0, 0x0);
        gbc.writeMem(0x2f7c, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x784, gbc.sp());
        EXPECT(0x2f7e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C4 01E0
        gbc.setState(0xc8aa, 0x3031, 0x5dc0, 0x7f86, 0xa42d, 0xff84, 0x1, 0x0);
        gbc.writeMem(0xc8aa, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x3031, gbc.sp());
        EXPECT(0xc8ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc8aa));
        EXPECT(0xc4, gbc.readMem(0xc8ab));
        // CB C4 01E2
        gbc.setState(0x6041, 0x81b0, 0xc0a0, 0x6712, 0xda41, 0xd313, 0x1, 0x0);
        gbc.writeMem(0x6041, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x81b0, gbc.sp());
        EXPECT(0x6043, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C4 01E3
        gbc.setState(0x3888, 0x27cd, 0x9ef0, 0x6a45, 0x4e92, 0x1d2b, 0x0, 0x0);
        gbc.writeMem(0x3888, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x27cd, gbc.sp());
        EXPECT(0x388a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C4 01E4
        gbc.setState(0x4854, 0x3db2, 0xc650, 0xb90d, 0x845b, 0xd30d, 0x1, 0x1);
        gbc.writeMem(0x4854, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x3db2, gbc.sp());
        EXPECT(0x4856, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C4 01E5
        gbc.setState(0xb74b, 0xecf, 0xcfe0, 0xee90, 0xdf25, 0x8a75, 0x0, 0x0);
        gbc.writeMem(0xb74b, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xecf, gbc.sp());
        EXPECT(0xb74d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb74b));
        EXPECT(0xc4, gbc.readMem(0xb74c));
        // CB C4 01E6
        gbc.setState(0x37f3, 0x9719, 0x66f0, 0x254d, 0xfd65, 0xfa42, 0x0, 0x1);
        gbc.writeMem(0x37f3, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x9719, gbc.sp());
        EXPECT(0x37f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C4 01E8
        gbc.setState(0x8d39, 0x5cef, 0x20c0, 0xe835, 0xab5b, 0x1084, 0x0, 0x0);
        gbc.writeMem(0x8d39, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x5cef, gbc.sp());
        EXPECT(0x8d3b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d39));
        EXPECT(0xc4, gbc.readMem(0x8d3a));
        // CB C4 01E9
        gbc.setState(0x4443, 0xabd7, 0xcb30, 0xc4e6, 0x4971, 0x79e9, 0x1, 0x0);
        gbc.writeMem(0x4443, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xabd7, gbc.sp());
        EXPECT(0x4445, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C4 01EA
        gbc.setState(0xba91, 0xe434, 0x78a0, 0xdabd, 0x8a71, 0xfaa, 0x1, 0x1);
        gbc.writeMem(0xba91, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xe434, gbc.sp());
        EXPECT(0xba93, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba91));
        EXPECT(0xc4, gbc.readMem(0xba92));
        // CB C4 01EB
        gbc.setState(0x842f, 0xd5ab, 0xe320, 0x985c, 0x8702, 0xf564, 0x1, 0x0);
        gbc.writeMem(0x842f, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xd5ab, gbc.sp());
        EXPECT(0x8431, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x842f));
        EXPECT(0xc4, gbc.readMem(0x8430));
        // CB C4 01EC
        gbc.setState(0xddc, 0xb4bd, 0x21c0, 0x4031, 0xaf0a, 0x117b, 0x1, 0x0);
        gbc.writeMem(0xddc, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xb4bd, gbc.sp());
        EXPECT(0xdde, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C4 01ED
        gbc.setState(0xdad2, 0x8bcb, 0x8440, 0xbbd9, 0xc6fe, 0x76da, 0x1, 0x0);
        gbc.writeMem(0xdad2, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x8bcb, gbc.sp());
        EXPECT(0xdad4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdad2));
        EXPECT(0xc4, gbc.readMem(0xdad3));
        // CB C4 01EE
        gbc.setState(0xd293, 0x871, 0xda80, 0xf907, 0x76b4, 0x269, 0x1, 0x0);
        gbc.writeMem(0xd293, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x871, gbc.sp());
        EXPECT(0xd295, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd293));
        EXPECT(0xc4, gbc.readMem(0xd294));
        // CB C4 01EF
        gbc.setState(0x7b2, 0xa728, 0x3f20, 0xbe3, 0x4725, 0x7c73, 0x1, 0x0);
        gbc.writeMem(0x7b2, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xa728, gbc.sp());
        EXPECT(0x7b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C4 01F0
        gbc.setState(0x7f4, 0x3370, 0xc8c0, 0x807a, 0xc970, 0xfb90, 0x0, 0x0);
        gbc.writeMem(0x7f4, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x3370, gbc.sp());
        EXPECT(0x7f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C4 01F1
        gbc.setState(0x55ed, 0x606b, 0x63a0, 0x9236, 0x234a, 0xe894, 0x0, 0x1);
        gbc.writeMem(0x55ed, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x606b, gbc.sp());
        EXPECT(0x55ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C4 01F2
        gbc.setState(0xed44, 0xf94a, 0x84d0, 0xb79d, 0xace5, 0x1d63, 0x1, 0x0);
        gbc.writeMem(0xed44, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xf94a, gbc.sp());
        EXPECT(0xed46, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed44));
        EXPECT(0xc4, gbc.readMem(0xed45));
        // CB C4 01F3
        gbc.setState(0x57c3, 0x663, 0xdca0, 0xa12a, 0xe09d, 0x2a39, 0x0, 0x0);
        gbc.writeMem(0x57c3, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x663, gbc.sp());
        EXPECT(0x57c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C4 01F4
        gbc.setState(0x478c, 0x5adc, 0xb500, 0xd7b5, 0xf170, 0x9822, 0x1, 0x0);
        gbc.writeMem(0x478c, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x5adc, gbc.sp());
        EXPECT(0x478e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C4 01F5
        gbc.setState(0x5a7, 0x87e, 0xc870, 0x244a, 0x445f, 0x11ed, 0x0, 0x1);
        gbc.writeMem(0x5a7, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x87e, gbc.sp());
        EXPECT(0x5a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C4 01F6
        gbc.setState(0xbcc5, 0x3414, 0x9810, 0x92dc, 0x5d6e, 0x5e90, 0x0, 0x1);
        gbc.writeMem(0xbcc5, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x3414, gbc.sp());
        EXPECT(0xbcc7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbcc5));
        EXPECT(0xc4, gbc.readMem(0xbcc6));
        // CB C4 01F7
        gbc.setState(0x91c8, 0x298e, 0x2310, 0x1ff9, 0x4fae, 0x414c, 0x1, 0x0);
        gbc.writeMem(0x91c8, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x298e, gbc.sp());
        EXPECT(0x91ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x91c8));
        EXPECT(0xc4, gbc.readMem(0x91c9));
        // CB C4 01F8
        gbc.setState(0xca2c, 0x7856, 0xe3f0, 0xf5a6, 0xacf6, 0xc350, 0x1, 0x1);
        gbc.writeMem(0xca2c, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x7856, gbc.sp());
        EXPECT(0xca2e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca2c));
        EXPECT(0xc4, gbc.readMem(0xca2d));
        // CB C4 01F9
        gbc.setState(0x33a1, 0xc66, 0x8af0, 0xcf06, 0x1ade, 0x9bd4, 0x0, 0x1);
        gbc.writeMem(0x33a1, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xc66, gbc.sp());
        EXPECT(0x33a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C4 01FA
        gbc.setState(0x9af1, 0x6168, 0x80a0, 0x6008, 0x4d8e, 0xa3dc, 0x1, 0x1);
        gbc.writeMem(0x9af1, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x6168, gbc.sp());
        EXPECT(0x9af3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9af1));
        EXPECT(0xc4, gbc.readMem(0x9af2));
        // CB C4 01FB
        gbc.setState(0x9bc3, 0x552b, 0xf300, 0x3af9, 0x37fb, 0x1325, 0x0, 0x0);
        gbc.writeMem(0x9bc3, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x552b, gbc.sp());
        EXPECT(0x9bc5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9bc3));
        EXPECT(0xc4, gbc.readMem(0x9bc4));
        // CB C4 01FC
        gbc.setState(0xcc35, 0xa437, 0xaa50, 0x572f, 0x8eec, 0x7888, 0x0, 0x0);
        gbc.writeMem(0xcc35, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xa437, gbc.sp());
        EXPECT(0xcc37, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc35));
        EXPECT(0xc4, gbc.readMem(0xcc36));
        // CB C4 01FD
        gbc.setState(0x6cef, 0x7af0, 0x75a0, 0x566b, 0x8461, 0x47d, 0x1, 0x0);
        gbc.writeMem(0x6cef, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x7af0, gbc.sp());
        EXPECT(0x6cf1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C4 01FE
        gbc.setState(0x7c91, 0xc834, 0x6cb0, 0x8e85, 0x907a, 0x1c18, 0x1, 0x1);
        gbc.writeMem(0x7c91, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xc834, gbc.sp());
        EXPECT(0x7c93, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C4 01FF
        gbc.setState(0x57bf, 0x1277, 0x4c0, 0xe10e, 0xd7b6, 0xeb9a, 0x1, 0x0);
        gbc.writeMem(0x57bf, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x1277, gbc.sp());
        EXPECT(0x57c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C4 0200
        gbc.setState(0xdf4b, 0xd1d0, 0xf660, 0xfc00, 0xd22, 0xee90, 0x0, 0x0);
        gbc.writeMem(0xdf4b, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xd1d0, gbc.sp());
        EXPECT(0xdf4d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf4b));
        EXPECT(0xc4, gbc.readMem(0xdf4c));
        // CB C4 0201
        gbc.setState(0xa6ce, 0x6435, 0x60e0, 0xae0d, 0x9bac, 0xe88d, 0x1, 0x1);
        gbc.writeMem(0xa6ce, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x6435, gbc.sp());
        EXPECT(0xa6d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa6ce));
        EXPECT(0xc4, gbc.readMem(0xa6cf));
        // CB C4 0202
        gbc.setState(0x54f4, 0x5d97, 0xba50, 0xee5c, 0x5585, 0xce62, 0x1, 0x1);
        gbc.writeMem(0x54f4, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x5d97, gbc.sp());
        EXPECT(0x54f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C4 0203
        gbc.setState(0x4f3c, 0x4068, 0x9900, 0x74e6, 0x8e51, 0xffac, 0x0, 0x1);
        gbc.writeMem(0x4f3c, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x4068, gbc.sp());
        EXPECT(0x4f3e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C4 0204
        gbc.setState(0xb13e, 0xec44, 0x1d70, 0x3b1a, 0x3810, 0x6d77, 0x1, 0x0);
        gbc.writeMem(0xb13e, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xec44, gbc.sp());
        EXPECT(0xb140, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb13e));
        EXPECT(0xc4, gbc.readMem(0xb13f));
        // CB C4 0205
        gbc.setState(0xe26b, 0x9e70, 0x9e50, 0x554, 0xd51b, 0xd944, 0x1, 0x1);
        gbc.writeMem(0xe26b, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x9e70, gbc.sp());
        EXPECT(0xe26d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe26b));
        EXPECT(0xc4, gbc.readMem(0xe26c));
        // CB C4 0207
        gbc.setState(0xc9c0, 0xdb37, 0xbb30, 0xb3e4, 0xaaf7, 0x8b85, 0x1, 0x1);
        gbc.writeMem(0xc9c0, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xdb37, gbc.sp());
        EXPECT(0xc9c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc9c0));
        EXPECT(0xc4, gbc.readMem(0xc9c1));
        // CB C4 0208
        gbc.setState(0xb892, 0xe31, 0x2b30, 0xa9ef, 0xf61c, 0xd0f9, 0x0, 0x0);
        gbc.writeMem(0xb892, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xe31, gbc.sp());
        EXPECT(0xb894, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb892));
        EXPECT(0xc4, gbc.readMem(0xb893));
        // CB C4 020A
        gbc.setState(0x85d5, 0xaa4, 0x6bb0, 0xec96, 0xb3f6, 0x451e, 0x0, 0x0);
        gbc.writeMem(0x85d5, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xaa4, gbc.sp());
        EXPECT(0x85d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x85d5));
        EXPECT(0xc4, gbc.readMem(0x85d6));
        // CB C4 020B
        gbc.setState(0xcaa8, 0x6a5, 0x27d0, 0x5c88, 0x3d3, 0xd275, 0x1, 0x1);
        gbc.writeMem(0xcaa8, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x6a5, gbc.sp());
        EXPECT(0xcaaa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcaa8));
        EXPECT(0xc4, gbc.readMem(0xcaa9));
        // CB C4 020C
        gbc.setState(0x7c8e, 0x466f, 0x2bd0, 0x4caf, 0x8e78, 0x9616, 0x0, 0x0);
        gbc.writeMem(0x7c8e, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x466f, gbc.sp());
        EXPECT(0x7c90, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C4 020D
        gbc.setState(0x6ab8, 0xc34f, 0xcd50, 0x735c, 0xf324, 0x4404, 0x0, 0x0);
        gbc.writeMem(0x6ab8, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xc34f, gbc.sp());
        EXPECT(0x6aba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C4 020E
        gbc.setState(0xe47c, 0xbb18, 0x2570, 0x9132, 0x123b, 0x1e03, 0x1, 0x1);
        gbc.writeMem(0xe47c, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xbb18, gbc.sp());
        EXPECT(0xe47e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe47c));
        EXPECT(0xc4, gbc.readMem(0xe47d));
        // CB C4 020F
        gbc.setState(0xdfa0, 0x6f77, 0xc750, 0xcc9c, 0x394a, 0xed1b, 0x1, 0x0);
        gbc.writeMem(0xdfa0, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x6f77, gbc.sp());
        EXPECT(0xdfa2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdfa0));
        EXPECT(0xc4, gbc.readMem(0xdfa1));
        // CB C4 0210
        gbc.setState(0xb330, 0x771, 0x7030, 0x2a44, 0xb3d1, 0x7df, 0x1, 0x0);
        gbc.writeMem(0xb330, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x771, gbc.sp());
        EXPECT(0xb332, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb330));
        EXPECT(0xc4, gbc.readMem(0xb331));
        // CB C4 0211
        gbc.setState(0x1ed9, 0x3b7c, 0xad60, 0x37d0, 0x83d0, 0x91f, 0x0, 0x0);
        gbc.writeMem(0x1ed9, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x3b7c, gbc.sp());
        EXPECT(0x1edb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C4 0212
        gbc.setState(0x4a52, 0x5c9c, 0x890, 0x5896, 0xab58, 0xcbb0, 0x1, 0x1);
        gbc.writeMem(0x4a52, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x5c9c, gbc.sp());
        EXPECT(0x4a54, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C4 0213
        gbc.setState(0x2c98, 0xc883, 0x1580, 0x3db3, 0x36fa, 0xf59c, 0x1, 0x1);
        gbc.writeMem(0x2c98, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xc883, gbc.sp());
        EXPECT(0x2c9a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C4 0214
        gbc.setState(0x5288, 0x2873, 0xc060, 0x1a67, 0xc3f2, 0x2be7, 0x0, 0x0);
        gbc.writeMem(0x5288, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x2873, gbc.sp());
        EXPECT(0x528a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C4 0215
        gbc.setState(0xd6a1, 0x9e52, 0xd560, 0xf6, 0x41a8, 0xdd15, 0x0, 0x1);
        gbc.writeMem(0xd6a1, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x9e52, gbc.sp());
        EXPECT(0xd6a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd6a1));
        EXPECT(0xc4, gbc.readMem(0xd6a2));
        // CB C4 0216
        gbc.setState(0x98bd, 0x676a, 0x4ff0, 0xb207, 0xd6a, 0xaf72, 0x0, 0x0);
        gbc.writeMem(0x98bd, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x676a, gbc.sp());
        EXPECT(0x98bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x98bd));
        EXPECT(0xc4, gbc.readMem(0x98be));
        // CB C4 0217
        gbc.setState(0x911e, 0xf490, 0xf930, 0x6aa7, 0xbd5, 0xdce4, 0x1, 0x0);
        gbc.writeMem(0x911e, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xf490, gbc.sp());
        EXPECT(0x9120, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x911e));
        EXPECT(0xc4, gbc.readMem(0x911f));
        // CB C4 0218
        gbc.setState(0x216d, 0xb19, 0xdd40, 0x1ec, 0x190f, 0xb331, 0x1, 0x0);
        gbc.writeMem(0x216d, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xb19, gbc.sp());
        EXPECT(0x216f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C4 021A
        gbc.setState(0xe301, 0xab13, 0xd2c0, 0xf181, 0xb7da, 0xa2da, 0x0, 0x0);
        gbc.writeMem(0xe301, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xab13, gbc.sp());
        EXPECT(0xe303, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe301));
        EXPECT(0xc4, gbc.readMem(0xe302));
        // CB C4 021B
        gbc.setState(0x49a, 0x9ae1, 0x3b40, 0xbc91, 0xd49e, 0xb791, 0x0, 0x0);
        gbc.writeMem(0x49a, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x9ae1, gbc.sp());
        EXPECT(0x49c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C4 021C
        gbc.setState(0x37da, 0x2fcd, 0x69e0, 0x5ad6, 0xbee8, 0xa055, 0x0, 0x0);
        gbc.writeMem(0x37da, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x2fcd, gbc.sp());
        EXPECT(0x37dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C4 021D
        gbc.setState(0x5735, 0x9601, 0x6b40, 0xc5d7, 0x251c, 0xa3c6, 0x1, 0x1);
        gbc.writeMem(0x5735, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x9601, gbc.sp());
        EXPECT(0x5737, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C4 021E
        gbc.setState(0x5cb3, 0x1d6d, 0x82c0, 0x298c, 0xa900, 0x4315, 0x1, 0x0);
        gbc.writeMem(0x5cb3, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x1d6d, gbc.sp());
        EXPECT(0x5cb5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C4 021F
        gbc.setState(0x510b, 0xbbf1, 0x7920, 0xa7f, 0xcddc, 0x4b9e, 0x1, 0x1);
        gbc.writeMem(0x510b, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xbbf1, gbc.sp());
        EXPECT(0x510d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C4 0220
        gbc.setState(0x2928, 0xb260, 0x160, 0xd180, 0x2631, 0xf7c8, 0x0, 0x1);
        gbc.writeMem(0x2928, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xb260, gbc.sp());
        EXPECT(0x292a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C4 0221
        gbc.setState(0x265a, 0xeeaa, 0xbba0, 0x5aa3, 0xb14d, 0x5bb7, 0x1, 0x1);
        gbc.writeMem(0x265a, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xeeaa, gbc.sp());
        EXPECT(0x265c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C4 0222
        gbc.setState(0x6f10, 0xf2b, 0x5a00, 0xf773, 0x7012, 0xfad5, 0x1, 0x1);
        gbc.writeMem(0x6f10, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xf2b, gbc.sp());
        EXPECT(0x6f12, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C4 0223
        gbc.setState(0x3015, 0x57e8, 0xc290, 0x190f, 0x136f, 0x33b, 0x0, 0x0);
        gbc.writeMem(0x3015, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x57e8, gbc.sp());
        EXPECT(0x3017, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C4 0224
        gbc.setState(0x3eeb, 0x5cba, 0xfe80, 0x3689, 0xc324, 0x69f8, 0x1, 0x0);
        gbc.writeMem(0x3eeb, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x5cba, gbc.sp());
        EXPECT(0x3eed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C4 0226
        gbc.setState(0xbc58, 0x5cbf, 0x5000, 0xb5f1, 0x5c7d, 0xb432, 0x0, 0x1);
        gbc.writeMem(0xbc58, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x5cbf, gbc.sp());
        EXPECT(0xbc5a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc58));
        EXPECT(0xc4, gbc.readMem(0xbc59));
        // CB C4 0227
        gbc.setState(0x53b3, 0xe4d0, 0xa8d0, 0xa42c, 0xe83d, 0x462b, 0x0, 0x0);
        gbc.writeMem(0x53b3, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xe4d0, gbc.sp());
        EXPECT(0x53b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C4 0228
        gbc.setState(0x4436, 0xe5c2, 0x11b0, 0x190a, 0xd2fd, 0xe261, 0x0, 0x1);
        gbc.writeMem(0x4436, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xe5c2, gbc.sp());
        EXPECT(0x4438, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C4 0229
        gbc.setState(0xab01, 0xbd2e, 0x5b40, 0x8804, 0x74e2, 0xfc54, 0x1, 0x0);
        gbc.writeMem(0xab01, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xbd2e, gbc.sp());
        EXPECT(0xab03, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab01));
        EXPECT(0xc4, gbc.readMem(0xab02));
        // CB C4 022A
        gbc.setState(0x8d59, 0x73b1, 0xd4b0, 0x6bd6, 0xd2a3, 0x5558, 0x0, 0x1);
        gbc.writeMem(0x8d59, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x73b1, gbc.sp());
        EXPECT(0x8d5b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d59));
        EXPECT(0xc4, gbc.readMem(0x8d5a));
        // CB C4 022B
        gbc.setState(0x94aa, 0xdbd7, 0x2400, 0x1c7, 0xea71, 0xa2c9, 0x0, 0x0);
        gbc.writeMem(0x94aa, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xdbd7, gbc.sp());
        EXPECT(0x94ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x94aa));
        EXPECT(0xc4, gbc.readMem(0x94ab));
        // CB C4 022D
        gbc.setState(0xa415, 0x4a88, 0xb110, 0x8ed3, 0x1306, 0xd9d0, 0x1, 0x0);
        gbc.writeMem(0xa415, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x4a88, gbc.sp());
        EXPECT(0xa417, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa415));
        EXPECT(0xc4, gbc.readMem(0xa416));
        // CB C4 022E
        gbc.setState(0x6db3, 0xbad6, 0xcb60, 0x598a, 0xe389, 0x3283, 0x0, 0x0);
        gbc.writeMem(0x6db3, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xbad6, gbc.sp());
        EXPECT(0x6db5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C4 022F
        gbc.setState(0x6b46, 0x6898, 0x9220, 0x43b5, 0x154e, 0x7b1, 0x0, 0x1);
        gbc.writeMem(0x6b46, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x6898, gbc.sp());
        EXPECT(0x6b48, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C4 0230
        gbc.setState(0x878b, 0x1d9, 0xf320, 0x3ec5, 0x8da3, 0x148b, 0x0, 0x1);
        gbc.writeMem(0x878b, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x1d9, gbc.sp());
        EXPECT(0x878d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x878b));
        EXPECT(0xc4, gbc.readMem(0x878c));
        // CB C4 0231
        gbc.setState(0x8c1e, 0xebc, 0x2aa0, 0x9c73, 0x979a, 0xe7f7, 0x0, 0x1);
        gbc.writeMem(0x8c1e, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xebc, gbc.sp());
        EXPECT(0x8c20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c1e));
        EXPECT(0xc4, gbc.readMem(0x8c1f));
        // CB C4 0232
        gbc.setState(0x8db2, 0x5f52, 0xe070, 0x83c0, 0xdbe5, 0xf0e0, 0x0, 0x0);
        gbc.writeMem(0x8db2, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x5f52, gbc.sp());
        EXPECT(0x8db4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8db2));
        EXPECT(0xc4, gbc.readMem(0x8db3));
        // CB C4 0233
        gbc.setState(0xc2c1, 0xbf9b, 0xc4e0, 0x1162, 0x2623, 0xa902, 0x1, 0x1);
        gbc.writeMem(0xc2c1, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xbf9b, gbc.sp());
        EXPECT(0xc2c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc2c1));
        EXPECT(0xc4, gbc.readMem(0xc2c2));
        // CB C4 0234
        gbc.setState(0x2bc0, 0x2c15, 0xd8a0, 0x4755, 0xb0ce, 0xb4a5, 0x1, 0x1);
        gbc.writeMem(0x2bc0, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x2c15, gbc.sp());
        EXPECT(0x2bc2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C4 0235
        gbc.setState(0x17b2, 0xd11f, 0x1430, 0x9e1d, 0xdf9b, 0x46ae, 0x0, 0x0);
        gbc.writeMem(0x17b2, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xd11f, gbc.sp());
        EXPECT(0x17b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C4 0236
        gbc.setState(0xac0a, 0xe9b4, 0x8880, 0x18f7, 0x7a5e, 0xbb2c, 0x1, 0x0);
        gbc.writeMem(0xac0a, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xe9b4, gbc.sp());
        EXPECT(0xac0c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac0a));
        EXPECT(0xc4, gbc.readMem(0xac0b));
        // CB C4 0237
        gbc.setState(0x11e9, 0xd36c, 0x23a0, 0xb819, 0x7261, 0xd57d, 0x1, 0x0);
        gbc.writeMem(0x11e9, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xd36c, gbc.sp());
        EXPECT(0x11eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C4 0238
        gbc.setState(0xb73b, 0xd741, 0x6fd0, 0xb91b, 0xf186, 0x4905, 0x0, 0x0);
        gbc.writeMem(0xb73b, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xd741, gbc.sp());
        EXPECT(0xb73d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb73b));
        EXPECT(0xc4, gbc.readMem(0xb73c));
        // CB C4 0239
        gbc.setState(0xa690, 0x8220, 0xc720, 0xbec8, 0x70f0, 0xc80a, 0x0, 0x0);
        gbc.writeMem(0xa690, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x8220, gbc.sp());
        EXPECT(0xa692, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa690));
        EXPECT(0xc4, gbc.readMem(0xa691));
        // CB C4 023A
        gbc.setState(0x2a09, 0xa9c0, 0xc990, 0xf20b, 0xbb69, 0x8793, 0x0, 0x0);
        gbc.writeMem(0x2a09, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xa9c0, gbc.sp());
        EXPECT(0x2a0b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C4 023B
        gbc.setState(0x9d00, 0xdf13, 0x3ae0, 0x41e4, 0xa976, 0x753e, 0x0, 0x1);
        gbc.writeMem(0x9d00, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xdf13, gbc.sp());
        EXPECT(0x9d02, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d00));
        EXPECT(0xc4, gbc.readMem(0x9d01));
        // CB C4 023C
        gbc.setState(0x5780, 0x15af, 0x8de0, 0x5cfd, 0x723, 0x88fc, 0x0, 0x1);
        gbc.writeMem(0x5780, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x15af, gbc.sp());
        EXPECT(0x5782, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C4 023D
        gbc.setState(0xd17c, 0x4e9f, 0xd2a0, 0xee91, 0x91ff, 0x51d4, 0x1, 0x1);
        gbc.writeMem(0xd17c, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x4e9f, gbc.sp());
        EXPECT(0xd17e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd17c));
        EXPECT(0xc4, gbc.readMem(0xd17d));
        // CB C4 023F
        gbc.setState(0x1e7, 0x99a0, 0xc810, 0x4489, 0x7b15, 0xe4bf, 0x1, 0x1);
        gbc.writeMem(0x1e7, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x99a0, gbc.sp());
        EXPECT(0x1e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C4 0240
        gbc.setState(0x27f, 0x20dc, 0x5f50, 0x5e31, 0x2e1f, 0x3c7e, 0x0, 0x1);
        gbc.writeMem(0x27f, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x20dc, gbc.sp());
        EXPECT(0x281, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C4 0241
        gbc.setState(0xf1e, 0x74e3, 0x3470, 0x134a, 0x1747, 0x7bed, 0x1, 0x1);
        gbc.writeMem(0xf1e, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x74e3, gbc.sp());
        EXPECT(0xf20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C4 0242
        gbc.setState(0x6ec6, 0xbedf, 0x9fd0, 0xb9b9, 0x18be, 0x2243, 0x1, 0x1);
        gbc.writeMem(0x6ec6, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xbedf, gbc.sp());
        EXPECT(0x6ec8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C4 0243
        gbc.setState(0x4919, 0xd7dc, 0x9720, 0x6cb0, 0x9cce, 0x901b, 0x1, 0x0);
        gbc.writeMem(0x4919, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xd7dc, gbc.sp());
        EXPECT(0x491b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C4 0245
        gbc.setState(0x5ae, 0xc6a4, 0xe1f0, 0x5324, 0xffd8, 0xad3e, 0x0, 0x1);
        gbc.writeMem(0x5ae, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xc6a4, gbc.sp());
        EXPECT(0x5b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C4 0246
        gbc.setState(0xe3dd, 0xec3, 0x75f0, 0x616b, 0xab7, 0xa69e, 0x0, 0x1);
        gbc.writeMem(0xe3dd, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xec3, gbc.sp());
        EXPECT(0xe3df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe3dd));
        EXPECT(0xc4, gbc.readMem(0xe3de));
        // CB C4 0247
        gbc.setState(0x850, 0xe77e, 0x220, 0x61c1, 0xe7dc, 0x9000, 0x1, 0x1);
        gbc.writeMem(0x850, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xe77e, gbc.sp());
        EXPECT(0x852, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C4 0249
        gbc.setState(0x320e, 0xe51a, 0x990, 0xd8b5, 0xafd4, 0x2e4d, 0x0, 0x0);
        gbc.writeMem(0x320e, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xe51a, gbc.sp());
        EXPECT(0x3210, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C4 024A
        gbc.setState(0x4d50, 0x2f7a, 0x4490, 0x32fe, 0x5b9, 0x8549, 0x1, 0x0);
        gbc.writeMem(0x4d50, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x2f7a, gbc.sp());
        EXPECT(0x4d52, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C4 024B
        gbc.setState(0x8158, 0x956d, 0x5190, 0xe278, 0xd183, 0xb0a9, 0x1, 0x0);
        gbc.writeMem(0x8158, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x956d, gbc.sp());
        EXPECT(0x815a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8158));
        EXPECT(0xc4, gbc.readMem(0x8159));
        // CB C4 024C
        gbc.setState(0x9a69, 0x4138, 0x4220, 0xc5aa, 0x6208, 0x1a09, 0x1, 0x0);
        gbc.writeMem(0x9a69, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x4138, gbc.sp());
        EXPECT(0x9a6b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a69));
        EXPECT(0xc4, gbc.readMem(0x9a6a));
        // CB C4 024D
        gbc.setState(0xd696, 0x59c1, 0xdc80, 0xe86c, 0xa953, 0xa7ef, 0x1, 0x0);
        gbc.writeMem(0xd696, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x59c1, gbc.sp());
        EXPECT(0xd698, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd696));
        EXPECT(0xc4, gbc.readMem(0xd697));
        // CB C4 024E
        gbc.setState(0x5b92, 0x88a, 0x9ee0, 0x867f, 0x36c6, 0xce3b, 0x0, 0x0);
        gbc.writeMem(0x5b92, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x88a, gbc.sp());
        EXPECT(0x5b94, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C4 0250
        gbc.setState(0x9d08, 0xf46, 0x8420, 0x2d4f, 0xe6f0, 0xa25d, 0x1, 0x1);
        gbc.writeMem(0x9d08, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xf46, gbc.sp());
        EXPECT(0x9d0a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d08));
        EXPECT(0xc4, gbc.readMem(0x9d09));
        // CB C4 0251
        gbc.setState(0x1a6b, 0xfa3b, 0xbb90, 0x938, 0x35cd, 0x518f, 0x1, 0x1);
        gbc.writeMem(0x1a6b, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xfa3b, gbc.sp());
        EXPECT(0x1a6d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C4 0252
        gbc.setState(0xed0f, 0x188d, 0x6fd0, 0xc4e7, 0x409d, 0x38b, 0x0, 0x0);
        gbc.writeMem(0xed0f, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x188d, gbc.sp());
        EXPECT(0xed11, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed0f));
        EXPECT(0xc4, gbc.readMem(0xed10));
        // CB C4 0254
        gbc.setState(0x58d9, 0x758, 0x5760, 0x4e0d, 0x93d3, 0x47f8, 0x1, 0x1);
        gbc.writeMem(0x58d9, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x758, gbc.sp());
        EXPECT(0x58db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C4 0255
        gbc.setState(0x5f2d, 0xa9b5, 0x34d0, 0x386, 0xf1e8, 0x7cb4, 0x1, 0x0);
        gbc.writeMem(0x5f2d, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xa9b5, gbc.sp());
        EXPECT(0x5f2f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C4 0256
        gbc.setState(0x83cd, 0xa1a2, 0x4f10, 0x4e44, 0xd03e, 0x9192, 0x1, 0x0);
        gbc.writeMem(0x83cd, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xa1a2, gbc.sp());
        EXPECT(0x83cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x83cd));
        EXPECT(0xc4, gbc.readMem(0x83ce));
        // CB C4 0257
        gbc.setState(0x8758, 0xc7ed, 0xab60, 0xac5d, 0x8bb9, 0xc544, 0x1, 0x0);
        gbc.writeMem(0x8758, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xc7ed, gbc.sp());
        EXPECT(0x875a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8758));
        EXPECT(0xc4, gbc.readMem(0x8759));
        // CB C4 0258
        gbc.setState(0x5561, 0xda4a, 0x8670, 0xe13b, 0x5c72, 0xccc3, 0x0, 0x0);
        gbc.writeMem(0x5561, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xda4a, gbc.sp());
        EXPECT(0x5563, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C4 0259
        gbc.setState(0xa13d, 0x36bd, 0x4210, 0x3511, 0x4f9c, 0x337e, 0x0, 0x1);
        gbc.writeMem(0xa13d, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x36bd, gbc.sp());
        EXPECT(0xa13f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa13d));
        EXPECT(0xc4, gbc.readMem(0xa13e));
        // CB C4 025A
        gbc.setState(0x4d4e, 0xaba4, 0xade0, 0xf6bb, 0x7f82, 0x56a9, 0x1, 0x0);
        gbc.writeMem(0x4d4e, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xaba4, gbc.sp());
        EXPECT(0x4d50, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C4 025B
        gbc.setState(0x88ba, 0xae1, 0x3960, 0xabb7, 0x7535, 0xc55a, 0x1, 0x1);
        gbc.writeMem(0x88ba, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xae1, gbc.sp());
        EXPECT(0x88bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x88ba));
        EXPECT(0xc4, gbc.readMem(0x88bb));
        // CB C4 025C
        gbc.setState(0x57b7, 0xb80, 0x9820, 0x4e9c, 0x266, 0x5404, 0x0, 0x0);
        gbc.writeMem(0x57b7, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xb80, gbc.sp());
        EXPECT(0x57b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C4 025D
        gbc.setState(0xbe7, 0x94cb, 0x9170, 0x97e8, 0x278a, 0x90e6, 0x0, 0x1);
        gbc.writeMem(0xbe7, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x94cb, gbc.sp());
        EXPECT(0xbe9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C4 025E
        gbc.setState(0x8293, 0x945e, 0x5b70, 0x6d12, 0x31a6, 0x134c, 0x0, 0x0);
        gbc.writeMem(0x8293, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x945e, gbc.sp());
        EXPECT(0x8295, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8293));
        EXPECT(0xc4, gbc.readMem(0x8294));
        // CB C4 0260
        gbc.setState(0x70b8, 0x3a9b, 0x2c50, 0x8309, 0x67c, 0x543c, 0x0, 0x0);
        gbc.writeMem(0x70b8, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x3a9b, gbc.sp());
        EXPECT(0x70ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C4 0261
        gbc.setState(0x8706, 0xb7a2, 0x5740, 0x5ece, 0x352e, 0x8ef9, 0x0, 0x0);
        gbc.writeMem(0x8706, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xb7a2, gbc.sp());
        EXPECT(0x8708, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8706));
        EXPECT(0xc4, gbc.readMem(0x8707));
        // CB C4 0262
        gbc.setState(0xee52, 0x39ef, 0x71f0, 0xc047, 0xfc2e, 0x7782, 0x1, 0x0);
        gbc.writeMem(0xee52, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x39ef, gbc.sp());
        EXPECT(0xee54, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee52));
        EXPECT(0xc4, gbc.readMem(0xee53));
        // CB C4 0263
        gbc.setState(0x739a, 0x42f0, 0x17f0, 0x10fd, 0xfa13, 0xc9ed, 0x1, 0x1);
        gbc.writeMem(0x739a, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x42f0, gbc.sp());
        EXPECT(0x739c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C4 0264
        gbc.setState(0x4a29, 0x6c07, 0x8c70, 0xdf56, 0x4e81, 0x1be1, 0x0, 0x1);
        gbc.writeMem(0x4a29, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x6c07, gbc.sp());
        EXPECT(0x4a2b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C4 0265
        gbc.setState(0x97c1, 0x334, 0xa980, 0x26d2, 0x1ce7, 0xc06f, 0x0, 0x0);
        gbc.writeMem(0x97c1, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x334, gbc.sp());
        EXPECT(0x97c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x97c1));
        EXPECT(0xc4, gbc.readMem(0x97c2));
        // CB C4 0267
        gbc.setState(0x79d7, 0xc0c5, 0x6160, 0xd806, 0x5416, 0xe974, 0x0, 0x0);
        gbc.writeMem(0x79d7, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xc0c5, gbc.sp());
        EXPECT(0x79d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C4 0269
        gbc.setState(0x8576, 0x37a5, 0xc110, 0xe2fe, 0xf2d9, 0x8635, 0x0, 0x0);
        gbc.writeMem(0x8576, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x37a5, gbc.sp());
        EXPECT(0x8578, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8576));
        EXPECT(0xc4, gbc.readMem(0x8577));
        // CB C4 026A
        gbc.setState(0x71db, 0xbc38, 0xd710, 0x55cd, 0xff, 0xa505, 0x1, 0x1);
        gbc.writeMem(0x71db, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xbc38, gbc.sp());
        EXPECT(0x71dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C4 026B
        gbc.setState(0xb6b4, 0xebbc, 0xa820, 0xa82c, 0xef1e, 0xe502, 0x0, 0x0);
        gbc.writeMem(0xb6b4, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xebbc, gbc.sp());
        EXPECT(0xb6b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb6b4));
        EXPECT(0xc4, gbc.readMem(0xb6b5));
        // CB C4 026C
        gbc.setState(0x924d, 0x6951, 0xb0a0, 0x659, 0x731a, 0xe48c, 0x1, 0x1);
        gbc.writeMem(0x924d, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x6951, gbc.sp());
        EXPECT(0x924f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x924d));
        EXPECT(0xc4, gbc.readMem(0x924e));
        // CB C4 026D
        gbc.setState(0xb5f1, 0xe67e, 0x21c0, 0xf962, 0xe68e, 0xe11b, 0x0, 0x0);
        gbc.writeMem(0xb5f1, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xe67e, gbc.sp());
        EXPECT(0xb5f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb5f1));
        EXPECT(0xc4, gbc.readMem(0xb5f2));
        // CB C4 026E
        gbc.setState(0x5e2a, 0x1562, 0x1730, 0xe985, 0xefb0, 0xfa93, 0x0, 0x1);
        gbc.writeMem(0x5e2a, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x1562, gbc.sp());
        EXPECT(0x5e2c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C4 026F
        gbc.setState(0x3a32, 0xbf6f, 0xc4c0, 0xb4c4, 0xc162, 0xd78d, 0x0, 0x0);
        gbc.writeMem(0x3a32, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xbf6f, gbc.sp());
        EXPECT(0x3a34, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C4 0270
        gbc.setState(0x67db, 0xaf90, 0xc6d0, 0x211b, 0x1ef4, 0xc54a, 0x0, 0x0);
        gbc.writeMem(0x67db, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xaf90, gbc.sp());
        EXPECT(0x67dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C4 0271
        gbc.setState(0x7592, 0x1753, 0x1260, 0x9914, 0x811f, 0xfa71, 0x1, 0x0);
        gbc.writeMem(0x7592, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x1753, gbc.sp());
        EXPECT(0x7594, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C4 0272
        gbc.setState(0x71d2, 0xcf6d, 0x3630, 0x36ae, 0xc6f5, 0x1912, 0x1, 0x0);
        gbc.writeMem(0x71d2, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xcf6d, gbc.sp());
        EXPECT(0x71d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C4 0273
        gbc.setState(0x6ee, 0xce30, 0xe270, 0x7714, 0x83ea, 0xe899, 0x1, 0x1);
        gbc.writeMem(0x6ee, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xce30, gbc.sp());
        EXPECT(0x6f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C4 0274
        gbc.setState(0x9d26, 0xc108, 0xa760, 0x2da2, 0xbf22, 0xa473, 0x0, 0x0);
        gbc.writeMem(0x9d26, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xc108, gbc.sp());
        EXPECT(0x9d28, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d26));
        EXPECT(0xc4, gbc.readMem(0x9d27));
        // CB C4 0275
        gbc.setState(0x5a5f, 0x38e1, 0xf090, 0x362, 0xdfaa, 0x57c, 0x0, 0x1);
        gbc.writeMem(0x5a5f, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x38e1, gbc.sp());
        EXPECT(0x5a61, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C4 0276
        gbc.setState(0xbf13, 0xb2a, 0x6f30, 0xa099, 0xed38, 0x38b, 0x0, 0x0);
        gbc.writeMem(0xbf13, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xb2a, gbc.sp());
        EXPECT(0xbf15, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf13));
        EXPECT(0xc4, gbc.readMem(0xbf14));
        // CB C4 0277
        gbc.setState(0x3479, 0x7a13, 0x5100, 0x92b3, 0x59a5, 0x555b, 0x0, 0x1);
        gbc.writeMem(0x3479, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x7a13, gbc.sp());
        EXPECT(0x347b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C4 0278
        gbc.setState(0x7d1d, 0x60bc, 0xb190, 0xd697, 0x30da, 0xd91e, 0x1, 0x1);
        gbc.writeMem(0x7d1d, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x60bc, gbc.sp());
        EXPECT(0x7d1f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C4 0279
        gbc.setState(0xa72e, 0xb949, 0xa080, 0x4bc6, 0x8f93, 0xbb43, 0x1, 0x1);
        gbc.writeMem(0xa72e, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xb949, gbc.sp());
        EXPECT(0xa730, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa72e));
        EXPECT(0xc4, gbc.readMem(0xa72f));
        // CB C4 027A
        gbc.setState(0x50a7, 0x7f78, 0x86f0, 0x6ff9, 0x3d4c, 0xed6c, 0x1, 0x1);
        gbc.writeMem(0x50a7, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x7f78, gbc.sp());
        EXPECT(0x50a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C4 027B
        gbc.setState(0x6c04, 0xf649, 0x870, 0xd258, 0xc23, 0xe1ec, 0x1, 0x0);
        gbc.writeMem(0x6c04, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xf649, gbc.sp());
        EXPECT(0x6c06, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C4 027C
        gbc.setState(0xbe5e, 0x682c, 0x3a50, 0x7156, 0xc353, 0xc22c, 0x0, 0x1);
        gbc.writeMem(0xbe5e, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x682c, gbc.sp());
        EXPECT(0xbe60, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe5e));
        EXPECT(0xc4, gbc.readMem(0xbe5f));
        // CB C4 027D
        gbc.setState(0x986e, 0x1c6, 0xf760, 0xb742, 0xd1a9, 0x9928, 0x1, 0x1);
        gbc.writeMem(0x986e, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x1c6, gbc.sp());
        EXPECT(0x9870, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x986e));
        EXPECT(0xc4, gbc.readMem(0x986f));
        // CB C4 027E
        gbc.setState(0x6757, 0xed76, 0x2f90, 0x8aac, 0xbd0f, 0xbb4b, 0x0, 0x0);
        gbc.writeMem(0x6757, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xed76, gbc.sp());
        EXPECT(0x6759, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C4 027F
        gbc.setState(0x280f, 0x1d7e, 0xdde0, 0x5ad, 0x2c35, 0xe1ec, 0x0, 0x1);
        gbc.writeMem(0x280f, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x1d7e, gbc.sp());
        EXPECT(0x2811, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C4 0280
        gbc.setState(0x6023, 0x5e4a, 0xf6c0, 0x778c, 0x8f09, 0xd97, 0x0, 0x1);
        gbc.writeMem(0x6023, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x5e4a, gbc.sp());
        EXPECT(0x6025, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C4 0281
        gbc.setState(0x602b, 0x9644, 0xc920, 0xed20, 0x8ac6, 0x885, 0x1, 0x1);
        gbc.writeMem(0x602b, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x9644, gbc.sp());
        EXPECT(0x602d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C4 0282
        gbc.setState(0xaa6e, 0x97c2, 0x6b00, 0x866d, 0xa71, 0x6b91, 0x1, 0x0);
        gbc.writeMem(0xaa6e, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x97c2, gbc.sp());
        EXPECT(0xaa70, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa6e));
        EXPECT(0xc4, gbc.readMem(0xaa6f));
        // CB C4 0283
        gbc.setState(0xb918, 0x9268, 0x2720, 0x7aa7, 0xe984, 0x89c1, 0x0, 0x0);
        gbc.writeMem(0xb918, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x9268, gbc.sp());
        EXPECT(0xb91a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb918));
        EXPECT(0xc4, gbc.readMem(0xb919));
        // CB C4 0284
        gbc.setState(0x7ef3, 0x2316, 0x4400, 0xc32e, 0x4fc1, 0x390b, 0x0, 0x0);
        gbc.writeMem(0x7ef3, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x2316, gbc.sp());
        EXPECT(0x7ef5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C4 0285
        gbc.setState(0xcc63, 0x1349, 0x2f50, 0xc48d, 0x9ca7, 0x10a9, 0x0, 0x1);
        gbc.writeMem(0xcc63, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x1349, gbc.sp());
        EXPECT(0xcc65, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc63));
        EXPECT(0xc4, gbc.readMem(0xcc64));
        // CB C4 0286
        gbc.setState(0xca94, 0x7dad, 0xee30, 0x2bb3, 0xb27b, 0x8b2d, 0x1, 0x0);
        gbc.writeMem(0xca94, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x7dad, gbc.sp());
        EXPECT(0xca96, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca94));
        EXPECT(0xc4, gbc.readMem(0xca95));
        // CB C4 0287
        gbc.setState(0x55d2, 0xe012, 0xf6d0, 0x2c0d, 0x6bd2, 0xf076, 0x1, 0x0);
        gbc.writeMem(0x55d2, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xe012, gbc.sp());
        EXPECT(0x55d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C4 0288
        gbc.setState(0x1152, 0xce57, 0x58f0, 0xa1ad, 0x7995, 0xe5d1, 0x0, 0x1);
        gbc.writeMem(0x1152, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xce57, gbc.sp());
        EXPECT(0x1154, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C4 0289
        gbc.setState(0xcb72, 0x5c94, 0x7760, 0xe093, 0xcb4f, 0x7c44, 0x0, 0x1);
        gbc.writeMem(0xcb72, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x5c94, gbc.sp());
        EXPECT(0xcb74, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb72));
        EXPECT(0xc4, gbc.readMem(0xcb73));
        // CB C4 028A
        gbc.setState(0xcacb, 0xacca, 0xb3d0, 0x18b2, 0x6ee1, 0x5377, 0x1, 0x0);
        gbc.writeMem(0xcacb, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xacca, gbc.sp());
        EXPECT(0xcacd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcacb));
        EXPECT(0xc4, gbc.readMem(0xcacc));
        // CB C4 028B
        gbc.setState(0x804c, 0xa169, 0x90, 0x7636, 0x7606, 0x27df, 0x0, 0x1);
        gbc.writeMem(0x804c, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xa169, gbc.sp());
        EXPECT(0x804e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x804c));
        EXPECT(0xc4, gbc.readMem(0x804d));
        // CB C4 028C
        gbc.setState(0x3195, 0x6dad, 0xa3b0, 0x6377, 0x2f69, 0xc728, 0x0, 0x0);
        gbc.writeMem(0x3195, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x6dad, gbc.sp());
        EXPECT(0x3197, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C4 028D
        gbc.setState(0xed32, 0x9be8, 0x5490, 0x2f94, 0xe79f, 0x894c, 0x1, 0x1);
        gbc.writeMem(0xed32, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x9be8, gbc.sp());
        EXPECT(0xed34, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed32));
        EXPECT(0xc4, gbc.readMem(0xed33));
        // CB C4 028E
        gbc.setState(0xa835, 0x207c, 0x2db0, 0xb3a0, 0xa242, 0x537d, 0x1, 0x1);
        gbc.writeMem(0xa835, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x207c, gbc.sp());
        EXPECT(0xa837, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa835));
        EXPECT(0xc4, gbc.readMem(0xa836));
        // CB C4 0290
        gbc.setState(0xd1ca, 0x16c5, 0xd4b0, 0x2f69, 0xe5cc, 0x2e45, 0x1, 0x0);
        gbc.writeMem(0xd1ca, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x16c5, gbc.sp());
        EXPECT(0xd1cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd1ca));
        EXPECT(0xc4, gbc.readMem(0xd1cb));
        // CB C4 0292
        gbc.setState(0xaf65, 0xa797, 0x1990, 0x48f, 0x5eb2, 0x2e29, 0x1, 0x1);
        gbc.writeMem(0xaf65, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xa797, gbc.sp());
        EXPECT(0xaf67, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf65));
        EXPECT(0xc4, gbc.readMem(0xaf66));
        // CB C4 0293
        gbc.setState(0x15d8, 0x9baf, 0xe0d0, 0x266e, 0x6f8, 0x5e26, 0x0, 0x1);
        gbc.writeMem(0x15d8, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x9baf, gbc.sp());
        EXPECT(0x15da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C4 0294
        gbc.setState(0x306, 0x9b70, 0x2b50, 0xf99f, 0x47d5, 0x5db3, 0x1, 0x0);
        gbc.writeMem(0x306, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x9b70, gbc.sp());
        EXPECT(0x308, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C4 0295
        gbc.setState(0x7da9, 0xddc8, 0xbce0, 0x3d87, 0xc5b5, 0xd177, 0x0, 0x0);
        gbc.writeMem(0x7da9, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xddc8, gbc.sp());
        EXPECT(0x7dab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C4 0296
        gbc.setState(0x6f21, 0x9731, 0xded0, 0xbbc3, 0xf3de, 0x8730, 0x1, 0x0);
        gbc.writeMem(0x6f21, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x9731, gbc.sp());
        EXPECT(0x6f23, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C4 0298
        gbc.setState(0xcb89, 0x810a, 0xa2d0, 0x9a77, 0x61af, 0x6abf, 0x1, 0x0);
        gbc.writeMem(0xcb89, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x810a, gbc.sp());
        EXPECT(0xcb8b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb89));
        EXPECT(0xc4, gbc.readMem(0xcb8a));
        // CB C4 0299
        gbc.setState(0xba44, 0xbe54, 0x3a70, 0xf426, 0xe4a1, 0xf6b4, 0x1, 0x0);
        gbc.writeMem(0xba44, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xbe54, gbc.sp());
        EXPECT(0xba46, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba44));
        EXPECT(0xc4, gbc.readMem(0xba45));
        // CB C4 029A
        gbc.setState(0x8d36, 0xd88a, 0xf00, 0xd17b, 0xd04a, 0x5b8f, 0x0, 0x0);
        gbc.writeMem(0x8d36, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xd88a, gbc.sp());
        EXPECT(0x8d38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d36));
        EXPECT(0xc4, gbc.readMem(0x8d37));
        // CB C4 029B
        gbc.setState(0xc439, 0xafa3, 0x3df0, 0x92d4, 0x376f, 0x14a, 0x0, 0x1);
        gbc.writeMem(0xc439, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xafa3, gbc.sp());
        EXPECT(0xc43b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc439));
        EXPECT(0xc4, gbc.readMem(0xc43a));
        // CB C4 029C
        gbc.setState(0x36f2, 0xd9ca, 0x1140, 0x4a55, 0x4a96, 0xed32, 0x0, 0x1);
        gbc.writeMem(0x36f2, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xd9ca, gbc.sp());
        EXPECT(0x36f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C4 029D
        gbc.setState(0x4b20, 0xa35d, 0xbab0, 0x1af5, 0xf3bb, 0x942e, 0x0, 0x0);
        gbc.writeMem(0x4b20, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xa35d, gbc.sp());
        EXPECT(0x4b22, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C4 029F
        gbc.setState(0x3044, 0xbed6, 0x5b10, 0x132a, 0x8a10, 0x5c83, 0x0, 0x0);
        gbc.writeMem(0x3044, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xbed6, gbc.sp());
        EXPECT(0x3046, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C4 02A0
        gbc.setState(0x7974, 0x5af2, 0x76c0, 0x45d7, 0x1a5c, 0xdf89, 0x1, 0x0);
        gbc.writeMem(0x7974, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x5af2, gbc.sp());
        EXPECT(0x7976, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C4 02A1
        gbc.setState(0x6d04, 0x90a3, 0xb1f0, 0x7abb, 0xabfe, 0x201, 0x1, 0x1);
        gbc.writeMem(0x6d04, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x90a3, gbc.sp());
        EXPECT(0x6d06, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C4 02A2
        gbc.setState(0x4380, 0x7833, 0xf6c0, 0x6050, 0x27d7, 0x55a5, 0x0, 0x0);
        gbc.writeMem(0x4380, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x7833, gbc.sp());
        EXPECT(0x4382, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C4 02A3
        gbc.setState(0x5c4a, 0xf2a6, 0x85b0, 0x5c8c, 0x764d, 0x738, 0x1, 0x0);
        gbc.writeMem(0x5c4a, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xf2a6, gbc.sp());
        EXPECT(0x5c4c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C4 02A4
        gbc.setState(0x7b67, 0x713f, 0xaa60, 0x3eb6, 0x29d6, 0x523b, 0x1, 0x0);
        gbc.writeMem(0x7b67, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x713f, gbc.sp());
        EXPECT(0x7b69, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C4 02A5
        gbc.setState(0x5b34, 0x8bc7, 0x6020, 0x689c, 0x4a1c, 0x7828, 0x0, 0x1);
        gbc.writeMem(0x5b34, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x8bc7, gbc.sp());
        EXPECT(0x5b36, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C4 02A6
        gbc.setState(0x4, 0xc933, 0x2d20, 0xb0e0, 0x1171, 0x1f34, 0x0, 0x0);
        gbc.writeMem(0x4, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xc933, gbc.sp());
        EXPECT(0x6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C4 02A7
        gbc.setState(0x9b6f, 0x6212, 0x3b0, 0xc3fa, 0xd6cc, 0x8360, 0x1, 0x0);
        gbc.writeMem(0x9b6f, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x6212, gbc.sp());
        EXPECT(0x9b71, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b6f));
        EXPECT(0xc4, gbc.readMem(0x9b70));
        // CB C4 02A8
        gbc.setState(0x712f, 0x5038, 0x4cc0, 0x5588, 0xacbe, 0x908b, 0x1, 0x1);
        gbc.writeMem(0x712f, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x5038, gbc.sp());
        EXPECT(0x7131, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C4 02A9
        gbc.setState(0x17, 0xb66a, 0x8410, 0xb610, 0xa438, 0x8dbd, 0x1, 0x1);
        gbc.writeMem(0x17, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xb66a, gbc.sp());
        EXPECT(0x19, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C4 02AA
        gbc.setState(0x5f0a, 0xa0, 0xe900, 0x73b5, 0x250e, 0x9066, 0x1, 0x0);
        gbc.writeMem(0x5f0a, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xa0, gbc.sp());
        EXPECT(0x5f0c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C4 02AB
        gbc.setState(0x7109, 0xb3dc, 0x68f0, 0xfecc, 0x967a, 0x8eac, 0x0, 0x0);
        gbc.writeMem(0x7109, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xb3dc, gbc.sp());
        EXPECT(0x710b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C4 02AC
        gbc.setState(0x84e1, 0xb2d7, 0x93c0, 0x6189, 0xb74c, 0xd46, 0x1, 0x1);
        gbc.writeMem(0x84e1, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xb2d7, gbc.sp());
        EXPECT(0x84e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x84e1));
        EXPECT(0xc4, gbc.readMem(0x84e2));
        // CB C4 02AD
        gbc.setState(0x4371, 0xd220, 0x5860, 0x67ab, 0xe8f8, 0x1c8f, 0x0, 0x0);
        gbc.writeMem(0x4371, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xd220, gbc.sp());
        EXPECT(0x4373, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C4 02AE
        gbc.setState(0x972b, 0xc404, 0xf8e0, 0xf3a0, 0x9ec0, 0x9e2d, 0x0, 0x1);
        gbc.writeMem(0x972b, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xc404, gbc.sp());
        EXPECT(0x972d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x972b));
        EXPECT(0xc4, gbc.readMem(0x972c));
        // CB C4 02AF
        gbc.setState(0x4857, 0x8b91, 0x8a70, 0x7c2b, 0x171e, 0x5ba2, 0x1, 0x0);
        gbc.writeMem(0x4857, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x8b91, gbc.sp());
        EXPECT(0x4859, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C4 02B0
        gbc.setState(0x4aed, 0x512d, 0xfee0, 0xb517, 0x4f5f, 0xdc79, 0x1, 0x1);
        gbc.writeMem(0x4aed, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x512d, gbc.sp());
        EXPECT(0x4aef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C4 02B1
        gbc.setState(0x2a25, 0x719d, 0x4450, 0x35fb, 0xa5ed, 0x6690, 0x0, 0x1);
        gbc.writeMem(0x2a25, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x719d, gbc.sp());
        EXPECT(0x2a27, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C4 02B2
        gbc.setState(0x7f24, 0x9299, 0x6340, 0x36db, 0x94f4, 0xae76, 0x1, 0x1);
        gbc.writeMem(0x7f24, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x9299, gbc.sp());
        EXPECT(0x7f26, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C4 02B3
        gbc.setState(0xc2e1, 0xade5, 0x72c0, 0x8f2e, 0x50fc, 0x9722, 0x0, 0x1);
        gbc.writeMem(0xc2e1, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xade5, gbc.sp());
        EXPECT(0xc2e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc2e1));
        EXPECT(0xc4, gbc.readMem(0xc2e2));
        // CB C4 02B4
        gbc.setState(0x51a8, 0x9b4b, 0x35a0, 0x63f6, 0xcc33, 0xb417, 0x0, 0x0);
        gbc.writeMem(0x51a8, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x9b4b, gbc.sp());
        EXPECT(0x51aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C4 02B6
        gbc.setState(0xa553, 0x3b3b, 0xbe20, 0x9c8, 0xdcac, 0xc805, 0x1, 0x1);
        gbc.writeMem(0xa553, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x3b3b, gbc.sp());
        EXPECT(0xa555, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa553));
        EXPECT(0xc4, gbc.readMem(0xa554));
        // CB C4 02B7
        gbc.setState(0x9929, 0xda38, 0xa6d0, 0x7efe, 0x5fce, 0xce88, 0x0, 0x1);
        gbc.writeMem(0x9929, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xda38, gbc.sp());
        EXPECT(0x992b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9929));
        EXPECT(0xc4, gbc.readMem(0x992a));
        // CB C4 02B8
        gbc.setState(0x5f9e, 0x84df, 0x94a0, 0xce4, 0x7800, 0x7a13, 0x1, 0x0);
        gbc.writeMem(0x5f9e, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x84df, gbc.sp());
        EXPECT(0x5fa0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C4 02B9
        gbc.setState(0x8d5a, 0x82c5, 0x7680, 0xd3f0, 0xc7ae, 0xcf9f, 0x0, 0x1);
        gbc.writeMem(0x8d5a, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x82c5, gbc.sp());
        EXPECT(0x8d5c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d5a));
        EXPECT(0xc4, gbc.readMem(0x8d5b));
        // CB C4 02BA
        gbc.setState(0x30b6, 0x740e, 0xce00, 0xf8bc, 0x9d07, 0x2265, 0x1, 0x0);
        gbc.writeMem(0x30b6, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x740e, gbc.sp());
        EXPECT(0x30b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C4 02BB
        gbc.setState(0x60ba, 0x41e8, 0xd090, 0x3ef2, 0x4b12, 0xa811, 0x0, 0x1);
        gbc.writeMem(0x60ba, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x41e8, gbc.sp());
        EXPECT(0x60bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C4 02BC
        gbc.setState(0x5b9b, 0xd7e3, 0xed0, 0xc05b, 0x6cb9, 0xa89e, 0x1, 0x0);
        gbc.writeMem(0x5b9b, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xd7e3, gbc.sp());
        EXPECT(0x5b9d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C4 02BE
        gbc.setState(0x8a8c, 0x7b80, 0xe710, 0x776b, 0x8d4d, 0x7172, 0x0, 0x0);
        gbc.writeMem(0x8a8c, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x7b80, gbc.sp());
        EXPECT(0x8a8e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a8c));
        EXPECT(0xc4, gbc.readMem(0x8a8d));
        // CB C4 02BF
        gbc.setState(0x246b, 0x898a, 0xb730, 0xe9cb, 0xb1c1, 0x84a2, 0x0, 0x0);
        gbc.writeMem(0x246b, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x898a, gbc.sp());
        EXPECT(0x246d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C4 02C0
        gbc.setState(0x6bf7, 0x480a, 0x75c0, 0xdd54, 0x6427, 0x25a2, 0x0, 0x0);
        gbc.writeMem(0x6bf7, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x480a, gbc.sp());
        EXPECT(0x6bf9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C4 02C1
        gbc.setState(0x8f98, 0xcdef, 0xcf40, 0x82a8, 0xc5b4, 0xcf8a, 0x0, 0x0);
        gbc.writeMem(0x8f98, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xcdef, gbc.sp());
        EXPECT(0x8f9a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f98));
        EXPECT(0xc4, gbc.readMem(0x8f99));
        // CB C4 02C2
        gbc.setState(0xcbd9, 0x5e98, 0xe4a0, 0x4c08, 0xfb60, 0xcceb, 0x1, 0x0);
        gbc.writeMem(0xcbd9, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x5e98, gbc.sp());
        EXPECT(0xcbdb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcbd9));
        EXPECT(0xc4, gbc.readMem(0xcbda));
        // CB C4 02C3
        gbc.setState(0x54dc, 0x6eb0, 0x4410, 0x540f, 0xbb05, 0x9400, 0x1, 0x0);
        gbc.writeMem(0x54dc, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x6eb0, gbc.sp());
        EXPECT(0x54de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C4 02C4
        gbc.setState(0x783c, 0x9a25, 0x8a20, 0xef22, 0x9014, 0x6d9a, 0x0, 0x1);
        gbc.writeMem(0x783c, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x9a25, gbc.sp());
        EXPECT(0x783e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C4 02C5
        gbc.setState(0x6607, 0xba33, 0x1140, 0xe189, 0xab1, 0x3a58, 0x0, 0x0);
        gbc.writeMem(0x6607, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xba33, gbc.sp());
        EXPECT(0x6609, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C4 02C6
        gbc.setState(0x1091, 0x5550, 0x310, 0x7220, 0x376a, 0xffd8, 0x1, 0x1);
        gbc.writeMem(0x1091, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x5550, gbc.sp());
        EXPECT(0x1093, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C4 02C7
        gbc.setState(0x76a3, 0xd0ef, 0x1040, 0x5c31, 0xe9, 0x3786, 0x1, 0x1);
        gbc.writeMem(0x76a3, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xd0ef, gbc.sp());
        EXPECT(0x76a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C4 02C8
        gbc.setState(0x1c38, 0x3912, 0x26e0, 0xd6be, 0x61a0, 0x2845, 0x1, 0x1);
        gbc.writeMem(0x1c38, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x3912, gbc.sp());
        EXPECT(0x1c3a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C4 02C9
        gbc.setState(0x792e, 0xdcb5, 0xbaa0, 0x98da, 0x993a, 0xb4dc, 0x1, 0x0);
        gbc.writeMem(0x792e, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xdcb5, gbc.sp());
        EXPECT(0x7930, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C4 02CA
        gbc.setState(0x2f14, 0x216d, 0x5840, 0xa3bb, 0xdea7, 0xd90d, 0x0, 0x0);
        gbc.writeMem(0x2f14, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x216d, gbc.sp());
        EXPECT(0x2f16, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C4 02CB
        gbc.setState(0x9184, 0xe321, 0x7710, 0x23b6, 0x2d7, 0x93c7, 0x1, 0x1);
        gbc.writeMem(0x9184, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xe321, gbc.sp());
        EXPECT(0x9186, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9184));
        EXPECT(0xc4, gbc.readMem(0x9185));
        // CB C4 02CC
        gbc.setState(0x9410, 0x6b26, 0xe960, 0x966a, 0x908, 0x4c22, 0x0, 0x0);
        gbc.writeMem(0x9410, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x6b26, gbc.sp());
        EXPECT(0x9412, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9410));
        EXPECT(0xc4, gbc.readMem(0x9411));
        // CB C4 02CD
        gbc.setState(0x65c6, 0xfa20, 0xe660, 0xf00e, 0xb4d8, 0xfd91, 0x0, 0x0);
        gbc.writeMem(0x65c6, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xfa20, gbc.sp());
        EXPECT(0x65c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C4 02CE
        gbc.setState(0xcf9c, 0x665c, 0x47a0, 0x8cca, 0xd832, 0xc7c5, 0x1, 0x0);
        gbc.writeMem(0xcf9c, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x665c, gbc.sp());
        EXPECT(0xcf9e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf9c));
        EXPECT(0xc4, gbc.readMem(0xcf9d));
        // CB C4 02CF
        gbc.setState(0x4331, 0x7f65, 0xfed0, 0xf960, 0xa459, 0x838b, 0x0, 0x1);
        gbc.writeMem(0x4331, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x7f65, gbc.sp());
        EXPECT(0x4333, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C4 02D0
        gbc.setState(0x9cd5, 0xaf8, 0xd660, 0x3099, 0x83fc, 0xbb23, 0x1, 0x1);
        gbc.writeMem(0x9cd5, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xaf8, gbc.sp());
        EXPECT(0x9cd7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9cd5));
        EXPECT(0xc4, gbc.readMem(0x9cd6));
        // CB C4 02D1
        gbc.setState(0xcc69, 0xf366, 0x7210, 0xd25d, 0xf8cc, 0x60ee, 0x1, 0x0);
        gbc.writeMem(0xcc69, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xf366, gbc.sp());
        EXPECT(0xcc6b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc69));
        EXPECT(0xc4, gbc.readMem(0xcc6a));
        // CB C4 02D2
        gbc.setState(0xd142, 0xd149, 0x1880, 0x3a06, 0x5170, 0x322c, 0x0, 0x1);
        gbc.writeMem(0xd142, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xd149, gbc.sp());
        EXPECT(0xd144, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd142));
        EXPECT(0xc4, gbc.readMem(0xd143));
        // CB C4 02D3
        gbc.setState(0x9a3a, 0x9918, 0xc630, 0x579c, 0xb226, 0xb73b, 0x1, 0x0);
        gbc.writeMem(0x9a3a, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x9918, gbc.sp());
        EXPECT(0x9a3c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a3a));
        EXPECT(0xc4, gbc.readMem(0x9a3b));
        // CB C4 02D4
        gbc.setState(0x17f0, 0x7bc9, 0x2000, 0xb382, 0x21e1, 0x3ccf, 0x1, 0x1);
        gbc.writeMem(0x17f0, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x7bc9, gbc.sp());
        EXPECT(0x17f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C4 02D5
        gbc.setState(0xc9ae, 0x2749, 0xa470, 0x84d7, 0xa59d, 0xf4dc, 0x0, 0x1);
        gbc.writeMem(0xc9ae, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x2749, gbc.sp());
        EXPECT(0xc9b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc9ae));
        EXPECT(0xc4, gbc.readMem(0xc9af));
        // CB C4 02D6
        gbc.setState(0xee22, 0x6209, 0xed50, 0x364b, 0x65ec, 0x39b6, 0x1, 0x1);
        gbc.writeMem(0xee22, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x6209, gbc.sp());
        EXPECT(0xee24, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee22));
        EXPECT(0xc4, gbc.readMem(0xee23));
        // CB C4 02D7
        gbc.setState(0x7c94, 0x127c, 0x51a0, 0xc9e8, 0x4b6f, 0x8fc7, 0x1, 0x0);
        gbc.writeMem(0x7c94, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x127c, gbc.sp());
        EXPECT(0x7c96, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C4 02D8
        gbc.setState(0x9ea6, 0x3529, 0xc70, 0xf737, 0x51b5, 0x226, 0x1, 0x1);
        gbc.writeMem(0x9ea6, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x3529, gbc.sp());
        EXPECT(0x9ea8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ea6));
        EXPECT(0xc4, gbc.readMem(0x9ea7));
        // CB C4 02D9
        gbc.setState(0x30b0, 0x105, 0xb010, 0x9c23, 0x7267, 0x8559, 0x0, 0x0);
        gbc.writeMem(0x30b0, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x105, gbc.sp());
        EXPECT(0x30b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C4 02DA
        gbc.setState(0x42a, 0x2f3a, 0x4680, 0xf5ba, 0xcfab, 0xfaaf, 0x1, 0x0);
        gbc.writeMem(0x42a, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x2f3a, gbc.sp());
        EXPECT(0x42c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C4 02DB
        gbc.setState(0xc128, 0x7082, 0x7a20, 0xea5, 0x6c12, 0xf0d, 0x0, 0x0);
        gbc.writeMem(0xc128, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x7082, gbc.sp());
        EXPECT(0xc12a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc128));
        EXPECT(0xc4, gbc.readMem(0xc129));
        // CB C4 02DC
        gbc.setState(0xd194, 0x823, 0x44c0, 0x276e, 0x883f, 0xd93f, 0x0, 0x0);
        gbc.writeMem(0xd194, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x823, gbc.sp());
        EXPECT(0xd196, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd194));
        EXPECT(0xc4, gbc.readMem(0xd195));
        // CB C4 02DD
        gbc.setState(0x6320, 0x930a, 0x5ef0, 0xcc21, 0xcf66, 0xeaac, 0x1, 0x1);
        gbc.writeMem(0x6320, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x930a, gbc.sp());
        EXPECT(0x6322, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C4 02DE
        gbc.setState(0xe71e, 0x31d7, 0xaee0, 0xe7b9, 0x567b, 0xf557, 0x1, 0x1);
        gbc.writeMem(0xe71e, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x31d7, gbc.sp());
        EXPECT(0xe720, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe71e));
        EXPECT(0xc4, gbc.readMem(0xe71f));
        // CB C4 02DF
        gbc.setState(0x888a, 0x893, 0xc220, 0x2100, 0xa52d, 0x1848, 0x1, 0x0);
        gbc.writeMem(0x888a, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x893, gbc.sp());
        EXPECT(0x888c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x888a));
        EXPECT(0xc4, gbc.readMem(0x888b));
        // CB C4 02E0
        gbc.setState(0xc6b8, 0x529e, 0x6210, 0x2913, 0x9669, 0x4713, 0x1, 0x0);
        gbc.writeMem(0xc6b8, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x529e, gbc.sp());
        EXPECT(0xc6ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc6b8));
        EXPECT(0xc4, gbc.readMem(0xc6b9));
        // CB C4 02E1
        gbc.setState(0x733a, 0xa15, 0x48e0, 0xff2, 0x2fa8, 0x488e, 0x0, 0x0);
        gbc.writeMem(0x733a, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xa15, gbc.sp());
        EXPECT(0x733c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C4 02E2
        gbc.setState(0x66ca, 0xcb99, 0xec20, 0x9a6f, 0x830e, 0x81f, 0x0, 0x0);
        gbc.writeMem(0x66ca, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xcb99, gbc.sp());
        EXPECT(0x66cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C4 02E3
        gbc.setState(0x1bf9, 0x2223, 0x1a30, 0x723c, 0x5e90, 0x333c, 0x0, 0x1);
        gbc.writeMem(0x1bf9, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x2223, gbc.sp());
        EXPECT(0x1bfb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C4 02E4
        gbc.setState(0x34d6, 0xcf93, 0x4220, 0xa36c, 0x956f, 0xcccc, 0x0, 0x0);
        gbc.writeMem(0x34d6, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xcf93, gbc.sp());
        EXPECT(0x34d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C4 02E6
        gbc.setState(0x6af4, 0xde46, 0x360, 0xa0f2, 0x898d, 0xb231, 0x0, 0x0);
        gbc.writeMem(0x6af4, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xde46, gbc.sp());
        EXPECT(0x6af6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C4 02E7
        gbc.setState(0xc16a, 0x760, 0x1c20, 0xc7e0, 0x2b88, 0x39b7, 0x1, 0x1);
        gbc.writeMem(0xc16a, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x760, gbc.sp());
        EXPECT(0xc16c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc16a));
        EXPECT(0xc4, gbc.readMem(0xc16b));
        // CB C4 02E8
        gbc.setState(0xb14, 0x5a02, 0x29c0, 0xa136, 0xdd37, 0x61e, 0x0, 0x1);
        gbc.writeMem(0xb14, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x5a02, gbc.sp());
        EXPECT(0xb16, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C4 02E9
        gbc.setState(0x592f, 0xb69e, 0xce10, 0x697e, 0x36d, 0x6e5f, 0x0, 0x1);
        gbc.writeMem(0x592f, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xb69e, gbc.sp());
        EXPECT(0x5931, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C4 02EA
        gbc.setState(0xb904, 0x8786, 0x59b0, 0x744a, 0xbfb4, 0xacb, 0x0, 0x0);
        gbc.writeMem(0xb904, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x8786, gbc.sp());
        EXPECT(0xb906, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb904));
        EXPECT(0xc4, gbc.readMem(0xb905));
        // CB C4 02EB
        gbc.setState(0x8edf, 0xdd11, 0xa2f0, 0xcac7, 0xed00, 0xf67, 0x1, 0x0);
        gbc.writeMem(0x8edf, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xdd11, gbc.sp());
        EXPECT(0x8ee1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8edf));
        EXPECT(0xc4, gbc.readMem(0x8ee0));
        // CB C4 02EC
        gbc.setState(0x5478, 0x9f19, 0x9640, 0x3f46, 0xc014, 0x37e8, 0x0, 0x0);
        gbc.writeMem(0x5478, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x9f19, gbc.sp());
        EXPECT(0x547a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C4 02ED
        gbc.setState(0x531, 0xd29d, 0x3400, 0x1087, 0x9849, 0xdcaa, 0x1, 0x0);
        gbc.writeMem(0x531, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xd29d, gbc.sp());
        EXPECT(0x533, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C4 02EE
        gbc.setState(0xb309, 0x93c6, 0x3510, 0xf5f3, 0x9963, 0x8a7d, 0x1, 0x1);
        gbc.writeMem(0xb309, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x93c6, gbc.sp());
        EXPECT(0xb30b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb309));
        EXPECT(0xc4, gbc.readMem(0xb30a));
        // CB C4 02EF
        gbc.setState(0x12be, 0x398b, 0x6620, 0x38ad, 0x4568, 0xb3e6, 0x1, 0x1);
        gbc.writeMem(0x12be, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x398b, gbc.sp());
        EXPECT(0x12c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C4 02F0
        gbc.setState(0xdc89, 0x250f, 0xaed0, 0x6ca1, 0x731a, 0xe70, 0x0, 0x0);
        gbc.writeMem(0xdc89, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x250f, gbc.sp());
        EXPECT(0xdc8b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc89));
        EXPECT(0xc4, gbc.readMem(0xdc8a));
        // CB C4 02F1
        gbc.setState(0xc442, 0x4629, 0x6100, 0x6470, 0xa27a, 0x4e8e, 0x0, 0x1);
        gbc.writeMem(0xc442, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x4629, gbc.sp());
        EXPECT(0xc444, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc442));
        EXPECT(0xc4, gbc.readMem(0xc443));
        // CB C4 02F2
        gbc.setState(0x1069, 0xff43, 0xc1c0, 0xe238, 0x1861, 0x6b9c, 0x1, 0x0);
        gbc.writeMem(0x1069, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xff43, gbc.sp());
        EXPECT(0x106b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C4 02F3
        gbc.setState(0x570c, 0x6cbc, 0xdae0, 0x8e19, 0x3c70, 0x6ddc, 0x1, 0x1);
        gbc.writeMem(0x570c, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x6cbc, gbc.sp());
        EXPECT(0x570e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C4 02F4
        gbc.setState(0xe804, 0x692a, 0x3c50, 0x2f32, 0xc484, 0x9081, 0x1, 0x1);
        gbc.writeMem(0xe804, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x692a, gbc.sp());
        EXPECT(0xe806, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe804));
        EXPECT(0xc4, gbc.readMem(0xe805));
        // CB C4 02F5
        gbc.setState(0xd033, 0x32f5, 0x34e0, 0x8bb6, 0xbdd0, 0x56ad, 0x1, 0x1);
        gbc.writeMem(0xd033, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x32f5, gbc.sp());
        EXPECT(0xd035, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd033));
        EXPECT(0xc4, gbc.readMem(0xd034));
        // CB C4 02F6
        gbc.setState(0x80f1, 0xd8ac, 0x3b10, 0x6b18, 0xfb96, 0x9315, 0x0, 0x0);
        gbc.writeMem(0x80f1, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xd8ac, gbc.sp());
        EXPECT(0x80f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x80f1));
        EXPECT(0xc4, gbc.readMem(0x80f2));
        // CB C4 02F7
        gbc.setState(0x8b38, 0x7ba7, 0xbe60, 0x3e82, 0x80c7, 0x69d, 0x1, 0x0);
        gbc.writeMem(0x8b38, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x7ba7, gbc.sp());
        EXPECT(0x8b3a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b38));
        EXPECT(0xc4, gbc.readMem(0x8b39));
        // CB C4 02F8
        gbc.setState(0x5a61, 0x957b, 0x8640, 0xc193, 0xae88, 0x4e17, 0x0, 0x1);
        gbc.writeMem(0x5a61, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x957b, gbc.sp());
        EXPECT(0x5a63, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C4 02F9
        gbc.setState(0x8975, 0xd89c, 0x2d90, 0x4df1, 0x174f, 0x14c2, 0x0, 0x0);
        gbc.writeMem(0x8975, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xd89c, gbc.sp());
        EXPECT(0x8977, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8975));
        EXPECT(0xc4, gbc.readMem(0x8976));
        // CB C4 02FA
        gbc.setState(0xdfb9, 0x6817, 0x62f0, 0x306d, 0xe6dd, 0x7b49, 0x0, 0x0);
        gbc.writeMem(0xdfb9, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x6817, gbc.sp());
        EXPECT(0xdfbb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdfb9));
        EXPECT(0xc4, gbc.readMem(0xdfba));
        // CB C4 02FB
        gbc.setState(0x89cd, 0x7aff, 0xf1f0, 0xf3ca, 0xaeee, 0xf1cc, 0x1, 0x0);
        gbc.writeMem(0x89cd, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x7aff, gbc.sp());
        EXPECT(0x89cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x89cd));
        EXPECT(0xc4, gbc.readMem(0x89ce));
        // CB C4 02FC
        gbc.setState(0xa138, 0xbfe7, 0x2fa0, 0xf38f, 0x32d8, 0x6d3d, 0x1, 0x1);
        gbc.writeMem(0xa138, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xbfe7, gbc.sp());
        EXPECT(0xa13a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa138));
        EXPECT(0xc4, gbc.readMem(0xa139));
        // CB C4 02FD
        gbc.setState(0x9b43, 0x59cb, 0x63e0, 0x6077, 0xed0a, 0x338, 0x1, 0x1);
        gbc.writeMem(0x9b43, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x59cb, gbc.sp());
        EXPECT(0x9b45, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b43));
        EXPECT(0xc4, gbc.readMem(0x9b44));
        // CB C4 02FE
        gbc.setState(0x5eab, 0x7520, 0xe50, 0x520a, 0x35f2, 0x64e5, 0x1, 0x0);
        gbc.writeMem(0x5eab, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x7520, gbc.sp());
        EXPECT(0x5ead, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C4 02FF
        gbc.setState(0x518d, 0x6a32, 0xc4c0, 0xe1ba, 0xb93d, 0xf8c5, 0x0, 0x0);
        gbc.writeMem(0x518d, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x6a32, gbc.sp());
        EXPECT(0x518f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C4 0300
        gbc.setState(0xbc34, 0x9106, 0x5c90, 0xec04, 0x1ab9, 0x5169, 0x1, 0x1);
        gbc.writeMem(0xbc34, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x9106, gbc.sp());
        EXPECT(0xbc36, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc34));
        EXPECT(0xc4, gbc.readMem(0xbc35));
        // CB C4 0301
        gbc.setState(0x5a42, 0x1031, 0x81e0, 0x8cd7, 0x55ba, 0xad74, 0x0, 0x1);
        gbc.writeMem(0x5a42, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x1031, gbc.sp());
        EXPECT(0x5a44, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C4 0302
        gbc.setState(0x316, 0x3f9a, 0xd240, 0xa99a, 0x64a7, 0x7701, 0x1, 0x0);
        gbc.writeMem(0x316, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x3f9a, gbc.sp());
        EXPECT(0x318, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C4 0303
        gbc.setState(0x62b5, 0xedcc, 0x5620, 0x359, 0xc34e, 0x39bd, 0x1, 0x1);
        gbc.writeMem(0x62b5, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xedcc, gbc.sp());
        EXPECT(0x62b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C4 0304
        gbc.setState(0xd5ec, 0x47f2, 0xd2b0, 0xbcf3, 0x4c8c, 0x82d8, 0x0, 0x1);
        gbc.writeMem(0xd5ec, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x47f2, gbc.sp());
        EXPECT(0xd5ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd5ec));
        EXPECT(0xc4, gbc.readMem(0xd5ed));
        // CB C4 0305
        gbc.setState(0x721a, 0xe981, 0xdfd0, 0x8b97, 0x815, 0x1bc9, 0x0, 0x0);
        gbc.writeMem(0x721a, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xe981, gbc.sp());
        EXPECT(0x721c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C4 0306
        gbc.setState(0x5289, 0xa2, 0x97f0, 0xb2e, 0xb065, 0x523, 0x1, 0x1);
        gbc.writeMem(0x5289, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xa2, gbc.sp());
        EXPECT(0x528b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C4 0307
        gbc.setState(0x864e, 0xb6fe, 0x8ca0, 0xd85a, 0xfbdd, 0xf2ca, 0x0, 0x0);
        gbc.writeMem(0x864e, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xb6fe, gbc.sp());
        EXPECT(0x8650, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x864e));
        EXPECT(0xc4, gbc.readMem(0x864f));
        // CB C4 0308
        gbc.setState(0x7691, 0xa890, 0x2c40, 0xdf1f, 0xd25, 0xcb51, 0x1, 0x0);
        gbc.writeMem(0x7691, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xa890, gbc.sp());
        EXPECT(0x7693, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C4 0309
        gbc.setState(0x849e, 0xf434, 0xaff0, 0xd9b9, 0x8666, 0xa0be, 0x1, 0x0);
        gbc.writeMem(0x849e, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xf434, gbc.sp());
        EXPECT(0x84a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x849e));
        EXPECT(0xc4, gbc.readMem(0x849f));
        // CB C4 030B
        gbc.setState(0x8d8f, 0x6d09, 0xa860, 0xace6, 0xceb5, 0xe4ed, 0x1, 0x1);
        gbc.writeMem(0x8d8f, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x6d09, gbc.sp());
        EXPECT(0x8d91, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d8f));
        EXPECT(0xc4, gbc.readMem(0x8d90));
        // CB C4 030C
        gbc.setState(0xae06, 0xab86, 0x2840, 0x2100, 0x3363, 0x6048, 0x0, 0x1);
        gbc.writeMem(0xae06, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xab86, gbc.sp());
        EXPECT(0xae08, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae06));
        EXPECT(0xc4, gbc.readMem(0xae07));
        // CB C4 030D
        gbc.setState(0xa4c2, 0xe7ad, 0xbcc0, 0xc43e, 0x116a, 0xc63, 0x0, 0x1);
        gbc.writeMem(0xa4c2, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xe7ad, gbc.sp());
        EXPECT(0xa4c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa4c2));
        EXPECT(0xc4, gbc.readMem(0xa4c3));
        // CB C4 030E
        gbc.setState(0xb78f, 0xb0e4, 0x6d0, 0xa49b, 0x8a39, 0x5b90, 0x1, 0x1);
        gbc.writeMem(0xb78f, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xb0e4, gbc.sp());
        EXPECT(0xb791, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb78f));
        EXPECT(0xc4, gbc.readMem(0xb790));
        // CB C4 030F
        gbc.setState(0x319e, 0xe44b, 0x5ae0, 0x86c8, 0x4f6f, 0xb2d0, 0x1, 0x0);
        gbc.writeMem(0x319e, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xe44b, gbc.sp());
        EXPECT(0x31a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C4 0310
        gbc.setState(0xa00e, 0xe7f1, 0xe550, 0x6a37, 0xf0ab, 0x47ff, 0x0, 0x0);
        gbc.writeMem(0xa00e, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xe7f1, gbc.sp());
        EXPECT(0xa010, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa00e));
        EXPECT(0xc4, gbc.readMem(0xa00f));
        // CB C4 0311
        gbc.setState(0xe8db, 0x201d, 0xa340, 0xffbd, 0x2831, 0xca7a, 0x1, 0x1);
        gbc.writeMem(0xe8db, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x201d, gbc.sp());
        EXPECT(0xe8dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe8db));
        EXPECT(0xc4, gbc.readMem(0xe8dc));
        // CB C4 0312
        gbc.setState(0x66df, 0x3bb7, 0x6520, 0x7848, 0xb980, 0x5355, 0x1, 0x1);
        gbc.writeMem(0x66df, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x3bb7, gbc.sp());
        EXPECT(0x66e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C4 0313
        gbc.setState(0x224a, 0x526b, 0x82f0, 0x859e, 0x6538, 0x2ef5, 0x0, 0x1);
        gbc.writeMem(0x224a, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x526b, gbc.sp());
        EXPECT(0x224c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C4 0314
        gbc.setState(0x2ad6, 0x1ed4, 0x8530, 0x1f26, 0x8ed8, 0xd40, 0x0, 0x0);
        gbc.writeMem(0x2ad6, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x1ed4, gbc.sp());
        EXPECT(0x2ad8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C4 0315
        gbc.setState(0x24cf, 0x8c2, 0x2e20, 0x5792, 0x546f, 0xe49f, 0x1, 0x0);
        gbc.writeMem(0x24cf, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x8c2, gbc.sp());
        EXPECT(0x24d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C4 0316
        gbc.setState(0x22a, 0x61ee, 0x7ee0, 0xa90d, 0x5f96, 0xf1ba, 0x1, 0x1);
        gbc.writeMem(0x22a, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x61ee, gbc.sp());
        EXPECT(0x22c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C4 0317
        gbc.setState(0x95f0, 0xe5b2, 0x47c0, 0xeee5, 0xc609, 0xc34f, 0x0, 0x1);
        gbc.writeMem(0x95f0, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xe5b2, gbc.sp());
        EXPECT(0x95f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x95f0));
        EXPECT(0xc4, gbc.readMem(0x95f1));
        // CB C4 0318
        gbc.setState(0x6f68, 0x5fec, 0x4450, 0xc6c2, 0x8523, 0xc878, 0x0, 0x0);
        gbc.writeMem(0x6f68, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x5fec, gbc.sp());
        EXPECT(0x6f6a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C4 0319
        gbc.setState(0xcaef, 0xbc81, 0x49e0, 0x2a3f, 0xe0f4, 0xff8b, 0x0, 0x0);
        gbc.writeMem(0xcaef, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xbc81, gbc.sp());
        EXPECT(0xcaf1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcaef));
        EXPECT(0xc4, gbc.readMem(0xcaf0));
        // CB C4 031A
        gbc.setState(0x4795, 0x152e, 0xa7d0, 0x56bd, 0xdf29, 0x7849, 0x0, 0x0);
        gbc.writeMem(0x4795, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x152e, gbc.sp());
        EXPECT(0x4797, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C4 031B
        gbc.setState(0xb19f, 0x7426, 0x31f0, 0x11fc, 0x59d8, 0x4fe7, 0x0, 0x0);
        gbc.writeMem(0xb19f, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x7426, gbc.sp());
        EXPECT(0xb1a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb19f));
        EXPECT(0xc4, gbc.readMem(0xb1a0));
        // CB C4 031C
        gbc.setState(0xe868, 0x3d74, 0xad70, 0x75fc, 0x70b0, 0xac48, 0x1, 0x1);
        gbc.writeMem(0xe868, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x3d74, gbc.sp());
        EXPECT(0xe86a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe868));
        EXPECT(0xc4, gbc.readMem(0xe869));
        // CB C4 031D
        gbc.setState(0x5d82, 0x6ebc, 0x31f0, 0x418, 0x83f5, 0x5f, 0x0, 0x1);
        gbc.writeMem(0x5d82, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x6ebc, gbc.sp());
        EXPECT(0x5d84, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C4 031E
        gbc.setState(0xe85a, 0x3f63, 0x1b90, 0xe39f, 0xee22, 0x1cf0, 0x0, 0x0);
        gbc.writeMem(0xe85a, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x3f63, gbc.sp());
        EXPECT(0xe85c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe85a));
        EXPECT(0xc4, gbc.readMem(0xe85b));
        // CB C4 031F
        gbc.setState(0x75df, 0xb78e, 0x8b00, 0xe7, 0x4b3e, 0x8e83, 0x1, 0x1);
        gbc.writeMem(0x75df, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xb78e, gbc.sp());
        EXPECT(0x75e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C4 0320
        gbc.setState(0x80cd, 0xcb49, 0x940, 0xec62, 0x5754, 0x9ee7, 0x0, 0x0);
        gbc.writeMem(0x80cd, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xcb49, gbc.sp());
        EXPECT(0x80cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x80cd));
        EXPECT(0xc4, gbc.readMem(0x80ce));
        // CB C4 0321
        gbc.setState(0x56, 0x7139, 0x43e0, 0x7b91, 0x6c01, 0xcb0f, 0x0, 0x1);
        gbc.writeMem(0x56, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x7139, gbc.sp());
        EXPECT(0x58, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C4 0322
        gbc.setState(0x1880, 0x6705, 0x5380, 0x2fb9, 0x65e7, 0x4f31, 0x0, 0x0);
        gbc.writeMem(0x1880, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x6705, gbc.sp());
        EXPECT(0x1882, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C4 0323
        gbc.setState(0x96c6, 0xdce, 0x1710, 0x8ee8, 0x9046, 0x988a, 0x0, 0x1);
        gbc.writeMem(0x96c6, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xdce, gbc.sp());
        EXPECT(0x96c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x96c6));
        EXPECT(0xc4, gbc.readMem(0x96c7));
        // CB C4 0324
        gbc.setState(0x2cb3, 0x74ee, 0x7e30, 0x5134, 0xbfc6, 0x65fa, 0x0, 0x1);
        gbc.writeMem(0x2cb3, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x74ee, gbc.sp());
        EXPECT(0x2cb5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C4 0325
        gbc.setState(0x758b, 0x41b9, 0x830, 0xc217, 0x7c0c, 0x7387, 0x0, 0x1);
        gbc.writeMem(0x758b, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x41b9, gbc.sp());
        EXPECT(0x758d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C4 0326
        gbc.setState(0x2d61, 0x43c9, 0x8fb0, 0xa374, 0xd216, 0xc69a, 0x1, 0x1);
        gbc.writeMem(0x2d61, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x43c9, gbc.sp());
        EXPECT(0x2d63, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C4 0327
        gbc.setState(0x8358, 0xb4b5, 0x42f0, 0xfb82, 0x66dd, 0xb008, 0x0, 0x1);
        gbc.writeMem(0x8358, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xb4b5, gbc.sp());
        EXPECT(0x835a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8358));
        EXPECT(0xc4, gbc.readMem(0x8359));
        // CB C4 0328
        gbc.setState(0x4526, 0xd3d3, 0xbc0, 0x6448, 0x1811, 0xcd4c, 0x1, 0x1);
        gbc.writeMem(0x4526, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xd3d3, gbc.sp());
        EXPECT(0x4528, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C4 0329
        gbc.setState(0xbf69, 0x2351, 0x620, 0x9b30, 0xb5f7, 0x26f5, 0x0, 0x0);
        gbc.writeMem(0xbf69, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x2351, gbc.sp());
        EXPECT(0xbf6b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf69));
        EXPECT(0xc4, gbc.readMem(0xbf6a));
        // CB C4 032A
        gbc.setState(0x6125, 0x822a, 0x1c50, 0xaf35, 0xfd1, 0xdd56, 0x0, 0x0);
        gbc.writeMem(0x6125, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x822a, gbc.sp());
        EXPECT(0x6127, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C4 032B
        gbc.setState(0x8e13, 0xd572, 0xc060, 0xb078, 0x6a1, 0x47f4, 0x1, 0x1);
        gbc.writeMem(0x8e13, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xd572, gbc.sp());
        EXPECT(0x8e15, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e13));
        EXPECT(0xc4, gbc.readMem(0x8e14));
        // CB C4 032C
        gbc.setState(0x9b8f, 0x3c7d, 0x9cc0, 0x270d, 0x6071, 0x1680, 0x0, 0x0);
        gbc.writeMem(0x9b8f, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x3c7d, gbc.sp());
        EXPECT(0x9b91, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b8f));
        EXPECT(0xc4, gbc.readMem(0x9b90));
        // CB C4 032D
        gbc.setState(0x108b, 0xaf49, 0xc060, 0xb6bc, 0xc2eb, 0xcb20, 0x1, 0x1);
        gbc.writeMem(0x108b, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xaf49, gbc.sp());
        EXPECT(0x108d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C4 032E
        gbc.setState(0xad98, 0x3e2f, 0xc680, 0x7955, 0xe0c5, 0x8f8a, 0x1, 0x0);
        gbc.writeMem(0xad98, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x3e2f, gbc.sp());
        EXPECT(0xad9a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad98));
        EXPECT(0xc4, gbc.readMem(0xad99));
        // CB C4 032F
        gbc.setState(0xc0eb, 0x2f7f, 0x33d0, 0x9238, 0x84ce, 0xae1a, 0x0, 0x0);
        gbc.writeMem(0xc0eb, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x2f7f, gbc.sp());
        EXPECT(0xc0ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc0eb));
        EXPECT(0xc4, gbc.readMem(0xc0ec));
        // CB C4 0330
        gbc.setState(0xcb0, 0x893f, 0x9a60, 0xfdd, 0x6e0e, 0xd228, 0x0, 0x0);
        gbc.writeMem(0xcb0, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x893f, gbc.sp());
        EXPECT(0xcb2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C4 0331
        gbc.setState(0x9778, 0xe1ca, 0xbe60, 0x7ba, 0x8e46, 0x9927, 0x1, 0x0);
        gbc.writeMem(0x9778, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xe1ca, gbc.sp());
        EXPECT(0x977a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9778));
        EXPECT(0xc4, gbc.readMem(0x9779));
        // CB C4 0333
        gbc.setState(0x76dc, 0x2197, 0x3ce0, 0x6604, 0xecb, 0xba4c, 0x0, 0x0);
        gbc.writeMem(0x76dc, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x2197, gbc.sp());
        EXPECT(0x76de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C4 0335
        gbc.setState(0x61c0, 0x7572, 0x70c0, 0x1517, 0x9950, 0x2024, 0x1, 0x0);
        gbc.writeMem(0x61c0, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x7572, gbc.sp());
        EXPECT(0x61c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C4 0336
        gbc.setState(0x49e, 0x73d9, 0xd1a0, 0x9d38, 0x97b3, 0x6117, 0x1, 0x0);
        gbc.writeMem(0x49e, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x73d9, gbc.sp());
        EXPECT(0x4a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C4 0337
        gbc.setState(0x83fa, 0x6a2f, 0xf8c0, 0xb5ed, 0xe0d1, 0xa274, 0x0, 0x1);
        gbc.writeMem(0x83fa, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x6a2f, gbc.sp());
        EXPECT(0x83fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x83fa));
        EXPECT(0xc4, gbc.readMem(0x83fb));
        // CB C4 0338
        gbc.setState(0x2c5f, 0x167, 0x23e0, 0x6819, 0x6949, 0x517d, 0x1, 0x1);
        gbc.writeMem(0x2c5f, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x167, gbc.sp());
        EXPECT(0x2c61, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C4 0339
        gbc.setState(0xec5d, 0xd2fe, 0x1490, 0x12c0, 0x2adb, 0x1ed9, 0x0, 0x0);
        gbc.writeMem(0xec5d, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xd2fe, gbc.sp());
        EXPECT(0xec5f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec5d));
        EXPECT(0xc4, gbc.readMem(0xec5e));
        // CB C4 033A
        gbc.setState(0x6a48, 0xadf5, 0x2280, 0x1c94, 0x48dd, 0xe325, 0x1, 0x1);
        gbc.writeMem(0x6a48, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xadf5, gbc.sp());
        EXPECT(0x6a4a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C4 033B
        gbc.setState(0xc3a3, 0x3138, 0x70b0, 0x379f, 0x589f, 0xbeaf, 0x0, 0x1);
        gbc.writeMem(0xc3a3, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x3138, gbc.sp());
        EXPECT(0xc3a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc3a3));
        EXPECT(0xc4, gbc.readMem(0xc3a4));
        // CB C4 033C
        gbc.setState(0x747e, 0xf788, 0x4d00, 0x5e86, 0x6c0d, 0x75c7, 0x0, 0x0);
        gbc.writeMem(0x747e, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xf788, gbc.sp());
        EXPECT(0x7480, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C4 033D
        gbc.setState(0x7228, 0x434d, 0xecc0, 0xbf11, 0xad22, 0xff77, 0x0, 0x0);
        gbc.writeMem(0x7228, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x434d, gbc.sp());
        EXPECT(0x722a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C4 033E
        gbc.setState(0x397d, 0x3fb6, 0xfd60, 0x987c, 0x6a24, 0xf4ee, 0x1, 0x0);
        gbc.writeMem(0x397d, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x3fb6, gbc.sp());
        EXPECT(0x397f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C4 033F
        gbc.setState(0x3b4, 0x243, 0x4350, 0x295, 0x686c, 0x9f83, 0x1, 0x0);
        gbc.writeMem(0x3b4, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x243, gbc.sp());
        EXPECT(0x3b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C4 0341
        gbc.setState(0x6990, 0x1b84, 0xe320, 0xe3a7, 0x9649, 0x69ae, 0x1, 0x0);
        gbc.writeMem(0x6990, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x1b84, gbc.sp());
        EXPECT(0x6992, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C4 0342
        gbc.setState(0x59d1, 0x75ca, 0xfeb0, 0x2c6b, 0x3c45, 0x336c, 0x0, 0x0);
        gbc.writeMem(0x59d1, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x75ca, gbc.sp());
        EXPECT(0x59d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C4 0343
        gbc.setState(0x4e7e, 0xbb3b, 0xa330, 0x7472, 0x28ca, 0x4389, 0x0, 0x1);
        gbc.writeMem(0x4e7e, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xbb3b, gbc.sp());
        EXPECT(0x4e80, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C4 0344
        gbc.setState(0x2cc3, 0xab61, 0x82f0, 0x20be, 0x36da, 0xa960, 0x0, 0x0);
        gbc.writeMem(0x2cc3, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xab61, gbc.sp());
        EXPECT(0x2cc5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C4 0345
        gbc.setState(0x44c3, 0xbe46, 0x2e00, 0xa9a0, 0x5c3e, 0x501b, 0x0, 0x0);
        gbc.writeMem(0x44c3, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xbe46, gbc.sp());
        EXPECT(0x44c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C4 0347
        gbc.setState(0x57ef, 0xe2f2, 0xa880, 0xe3b8, 0xb9f1, 0x922e, 0x1, 0x1);
        gbc.writeMem(0x57ef, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xe2f2, gbc.sp());
        EXPECT(0x57f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C4 0348
        gbc.setState(0x822b, 0x67a, 0x7f30, 0x5751, 0xce67, 0x6d8f, 0x1, 0x0);
        gbc.writeMem(0x822b, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x67a, gbc.sp());
        EXPECT(0x822d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x822b));
        EXPECT(0xc4, gbc.readMem(0x822c));
        // CB C4 0349
        gbc.setState(0x44e3, 0x7ded, 0x30e0, 0x81ab, 0xf570, 0x87e4, 0x1, 0x1);
        gbc.writeMem(0x44e3, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x7ded, gbc.sp());
        EXPECT(0x44e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C4 034A
        gbc.setState(0xe06b, 0xca61, 0x9a70, 0xfb6, 0x6753, 0x1fcb, 0x1, 0x1);
        gbc.writeMem(0xe06b, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xca61, gbc.sp());
        EXPECT(0xe06d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe06b));
        EXPECT(0xc4, gbc.readMem(0xe06c));
        // CB C4 034B
        gbc.setState(0xef6, 0xbb3, 0x2b60, 0xb5fb, 0x9e55, 0xd65f, 0x0, 0x0);
        gbc.writeMem(0xef6, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xbb3, gbc.sp());
        EXPECT(0xef8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C4 034C
        gbc.setState(0x4aab, 0x4c9a, 0xba20, 0xa47a, 0x2de8, 0xdabe, 0x1, 0x1);
        gbc.writeMem(0x4aab, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x4c9a, gbc.sp());
        EXPECT(0x4aad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C4 034D
        gbc.setState(0x7e2f, 0x6bd3, 0x8c10, 0x7191, 0x80cb, 0x3d79, 0x0, 0x1);
        gbc.writeMem(0x7e2f, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x6bd3, gbc.sp());
        EXPECT(0x7e31, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C4 034E
        gbc.setState(0x6ed3, 0xf3e3, 0xb570, 0xfe52, 0x4ae0, 0x546a, 0x0, 0x0);
        gbc.writeMem(0x6ed3, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xf3e3, gbc.sp());
        EXPECT(0x6ed5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C4 034F
        gbc.setState(0x287a, 0xc350, 0xdbb0, 0xd5b9, 0xdfb0, 0x950e, 0x0, 0x0);
        gbc.writeMem(0x287a, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xc350, gbc.sp());
        EXPECT(0x287c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C4 0350
        gbc.setState(0x6276, 0xdc72, 0x6070, 0x9d7c, 0x985f, 0x7477, 0x1, 0x1);
        gbc.writeMem(0x6276, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xdc72, gbc.sp());
        EXPECT(0x6278, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C4 0351
        gbc.setState(0x1557, 0xfe6a, 0xedc0, 0x8e10, 0xf570, 0x27ee, 0x1, 0x0);
        gbc.writeMem(0x1557, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xfe6a, gbc.sp());
        EXPECT(0x1559, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C4 0352
        gbc.setState(0xd6b3, 0xcf24, 0x900, 0x395, 0x4e38, 0xc6ba, 0x0, 0x1);
        gbc.writeMem(0xd6b3, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xcf24, gbc.sp());
        EXPECT(0xd6b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd6b3));
        EXPECT(0xc4, gbc.readMem(0xd6b4));
        // CB C4 0353
        gbc.setState(0xbc65, 0x19, 0x9cf0, 0xbf1, 0xd88f, 0xffd3, 0x0, 0x0);
        gbc.writeMem(0xbc65, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x19, gbc.sp());
        EXPECT(0xbc67, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc65));
        EXPECT(0xc4, gbc.readMem(0xbc66));
        // CB C4 0354
        gbc.setState(0xd181, 0xe6ea, 0xfcc0, 0x67a1, 0x728f, 0x2852, 0x0, 0x1);
        gbc.writeMem(0xd181, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xe6ea, gbc.sp());
        EXPECT(0xd183, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd181));
        EXPECT(0xc4, gbc.readMem(0xd182));
        // CB C4 0355
        gbc.setState(0x683c, 0xe96d, 0x5770, 0xce04, 0x6bf7, 0xcb65, 0x1, 0x0);
        gbc.writeMem(0x683c, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xe96d, gbc.sp());
        EXPECT(0x683e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C4 0356
        gbc.setState(0xe832, 0xb573, 0x1850, 0x4b14, 0x2555, 0x7940, 0x0, 0x0);
        gbc.writeMem(0xe832, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xb573, gbc.sp());
        EXPECT(0xe834, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe832));
        EXPECT(0xc4, gbc.readMem(0xe833));
        // CB C4 0357
        gbc.setState(0x172f, 0x1aa7, 0xe560, 0xf85b, 0xf56e, 0xd0d8, 0x1, 0x1);
        gbc.writeMem(0x172f, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x1aa7, gbc.sp());
        EXPECT(0x1731, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C4 0358
        gbc.setState(0xcba1, 0x6ebd, 0x9f40, 0xf76c, 0x55ce, 0xb66d, 0x1, 0x1);
        gbc.writeMem(0xcba1, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x6ebd, gbc.sp());
        EXPECT(0xcba3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcba1));
        EXPECT(0xc4, gbc.readMem(0xcba2));
        // CB C4 0359
        gbc.setState(0x5167, 0xf0c5, 0x30b0, 0x9fd1, 0x4563, 0x153c, 0x1, 0x1);
        gbc.writeMem(0x5167, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xf0c5, gbc.sp());
        EXPECT(0x5169, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C4 035A
        gbc.setState(0x97d5, 0xff11, 0xbbc0, 0x65d5, 0xa6ff, 0xfda1, 0x0, 0x1);
        gbc.writeMem(0x97d5, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xff11, gbc.sp());
        EXPECT(0x97d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x97d5));
        EXPECT(0xc4, gbc.readMem(0x97d6));
        // CB C4 035B
        gbc.setState(0xcc8, 0xf0c4, 0x4e00, 0x28a0, 0x3ff, 0xe96, 0x1, 0x1);
        gbc.writeMem(0xcc8, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xf0c4, gbc.sp());
        EXPECT(0xcca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C4 035C
        gbc.setState(0xb264, 0xd6c6, 0xa3d0, 0x5394, 0xa5aa, 0x8b78, 0x1, 0x0);
        gbc.writeMem(0xb264, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xd6c6, gbc.sp());
        EXPECT(0xb266, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb264));
        EXPECT(0xc4, gbc.readMem(0xb265));
        // CB C4 035D
        gbc.setState(0x87a5, 0xcede, 0x1090, 0x39f, 0xa277, 0x3cf8, 0x1, 0x0);
        gbc.writeMem(0x87a5, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xcede, gbc.sp());
        EXPECT(0x87a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x87a5));
        EXPECT(0xc4, gbc.readMem(0x87a6));
        // CB C4 035E
        gbc.setState(0x3144, 0x24da, 0x7f70, 0x80ff, 0xc3b7, 0xd0b9, 0x1, 0x1);
        gbc.writeMem(0x3144, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x24da, gbc.sp());
        EXPECT(0x3146, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C4 035F
        gbc.setState(0xb721, 0xc806, 0xb630, 0xbb02, 0x62f2, 0x3200, 0x1, 0x0);
        gbc.writeMem(0xb721, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xc806, gbc.sp());
        EXPECT(0xb723, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb721));
        EXPECT(0xc4, gbc.readMem(0xb722));
        // CB C4 0360
        gbc.setState(0xdaca, 0xb096, 0x5ee0, 0x6bc2, 0xa060, 0x1eb2, 0x0, 0x1);
        gbc.writeMem(0xdaca, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xb096, gbc.sp());
        EXPECT(0xdacc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdaca));
        EXPECT(0xc4, gbc.readMem(0xdacb));
        // CB C4 0361
        gbc.setState(0x197, 0x611e, 0x5490, 0xd200, 0x781c, 0x519, 0x0, 0x0);
        gbc.writeMem(0x197, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x611e, gbc.sp());
        EXPECT(0x199, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C4 0362
        gbc.setState(0x8b2c, 0x37b9, 0xda40, 0x86c6, 0x2c3b, 0x8d4, 0x1, 0x1);
        gbc.writeMem(0x8b2c, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x37b9, gbc.sp());
        EXPECT(0x8b2e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b2c));
        EXPECT(0xc4, gbc.readMem(0x8b2d));
        // CB C4 0363
        gbc.setState(0x4300, 0xec98, 0x1690, 0x34c4, 0xdd00, 0xaa1d, 0x0, 0x1);
        gbc.writeMem(0x4300, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xec98, gbc.sp());
        EXPECT(0x4302, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C4 0364
        gbc.setState(0x7b78, 0x8360, 0x38c0, 0x9e48, 0x373f, 0xb0dd, 0x1, 0x1);
        gbc.writeMem(0x7b78, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x8360, gbc.sp());
        EXPECT(0x7b7a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C4 0365
        gbc.setState(0x465a, 0xc856, 0xc220, 0x4899, 0x297a, 0xe7d2, 0x0, 0x1);
        gbc.writeMem(0x465a, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xc856, gbc.sp());
        EXPECT(0x465c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C4 0366
        gbc.setState(0xdafb, 0x7c38, 0x8b0, 0xc37e, 0x1661, 0x9c30, 0x0, 0x0);
        gbc.writeMem(0xdafb, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x7c38, gbc.sp());
        EXPECT(0xdafd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdafb));
        EXPECT(0xc4, gbc.readMem(0xdafc));
        // CB C4 0367
        gbc.setState(0x3f7a, 0x70b8, 0x6bd0, 0xada8, 0x8637, 0x3e06, 0x1, 0x1);
        gbc.writeMem(0x3f7a, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x70b8, gbc.sp());
        EXPECT(0x3f7c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C4 0368
        gbc.setState(0x312d, 0xf0e6, 0xe4c0, 0x2d1d, 0x9d12, 0x3fcf, 0x0, 0x0);
        gbc.writeMem(0x312d, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xf0e6, gbc.sp());
        EXPECT(0x312f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C4 0369
        gbc.setState(0xe937, 0xae87, 0x11c0, 0x5216, 0xf1b9, 0x5994, 0x0, 0x0);
        gbc.writeMem(0xe937, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xae87, gbc.sp());
        EXPECT(0xe939, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe937));
        EXPECT(0xc4, gbc.readMem(0xe938));
        // CB C4 036A
        gbc.setState(0xe0a, 0x416f, 0xed20, 0xc96, 0xc15e, 0xf58f, 0x1, 0x1);
        gbc.writeMem(0xe0a, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x416f, gbc.sp());
        EXPECT(0xe0c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C4 036B
        gbc.setState(0x94ba, 0xe59f, 0x57d0, 0x697b, 0x2358, 0x8, 0x0, 0x0);
        gbc.writeMem(0x94ba, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xe59f, gbc.sp());
        EXPECT(0x94bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x94ba));
        EXPECT(0xc4, gbc.readMem(0x94bb));
        // CB C4 036C
        gbc.setState(0x6a1, 0xb27f, 0x9840, 0x7b39, 0x795e, 0x5a7c, 0x1, 0x0);
        gbc.writeMem(0x6a1, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xb27f, gbc.sp());
        EXPECT(0x6a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C4 036D
        gbc.setState(0x63ac, 0x4ab2, 0x7ca0, 0xc42d, 0x1089, 0x903a, 0x1, 0x1);
        gbc.writeMem(0x63ac, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x4ab2, gbc.sp());
        EXPECT(0x63ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C4 036E
        gbc.setState(0xe229, 0x4176, 0x4780, 0xf616, 0x480e, 0x3114, 0x1, 0x0);
        gbc.writeMem(0xe229, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x4176, gbc.sp());
        EXPECT(0xe22b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe229));
        EXPECT(0xc4, gbc.readMem(0xe22a));
        // CB C4 036F
        gbc.setState(0xa769, 0x96bc, 0xcff0, 0x8722, 0xfa33, 0xda3b, 0x0, 0x0);
        gbc.writeMem(0xa769, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x96bc, gbc.sp());
        EXPECT(0xa76b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa769));
        EXPECT(0xc4, gbc.readMem(0xa76a));
        // CB C4 0370
        gbc.setState(0x2ec5, 0x433, 0x96d0, 0x727f, 0x82cd, 0xe1dc, 0x0, 0x1);
        gbc.writeMem(0x2ec5, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x433, gbc.sp());
        EXPECT(0x2ec7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C4 0371
        gbc.setState(0x316d, 0x63c3, 0xae30, 0xd68, 0x5ed4, 0x91cb, 0x1, 0x1);
        gbc.writeMem(0x316d, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x63c3, gbc.sp());
        EXPECT(0x316f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C4 0372
        gbc.setState(0xe7aa, 0x677b, 0x67a0, 0xcab4, 0x3447, 0xa082, 0x0, 0x0);
        gbc.writeMem(0xe7aa, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x677b, gbc.sp());
        EXPECT(0xe7ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe7aa));
        EXPECT(0xc4, gbc.readMem(0xe7ab));
        // CB C4 0373
        gbc.setState(0xe578, 0xd060, 0xa960, 0xb46b, 0x3c56, 0x9acd, 0x0, 0x1);
        gbc.writeMem(0xe578, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xd060, gbc.sp());
        EXPECT(0xe57a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe578));
        EXPECT(0xc4, gbc.readMem(0xe579));
        // CB C4 0374
        gbc.setState(0xc2d7, 0xb561, 0x48d0, 0xbe13, 0x4965, 0x41b7, 0x1, 0x0);
        gbc.writeMem(0xc2d7, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xb561, gbc.sp());
        EXPECT(0xc2d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc2d7));
        EXPECT(0xc4, gbc.readMem(0xc2d8));
        // CB C4 0376
        gbc.setState(0x7436, 0x1e73, 0x9d20, 0x83e1, 0x2fc8, 0xfead, 0x1, 0x0);
        gbc.writeMem(0x7436, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x1e73, gbc.sp());
        EXPECT(0x7438, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C4 0377
        gbc.setState(0x3d93, 0x9e18, 0x9d70, 0x1ae5, 0xb39b, 0x9657, 0x1, 0x1);
        gbc.writeMem(0x3d93, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x9e18, gbc.sp());
        EXPECT(0x3d95, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C4 0378
        gbc.setState(0xc523, 0x600e, 0xee20, 0x76ca, 0x5393, 0x108a, 0x0, 0x0);
        gbc.writeMem(0xc523, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x600e, gbc.sp());
        EXPECT(0xc525, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc523));
        EXPECT(0xc4, gbc.readMem(0xc524));
        // CB C4 0379
        gbc.setState(0xb365, 0x5c13, 0xdf0, 0xd451, 0x2ff5, 0xb999, 0x0, 0x0);
        gbc.writeMem(0xb365, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x5c13, gbc.sp());
        EXPECT(0xb367, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb365));
        EXPECT(0xc4, gbc.readMem(0xb366));
        // CB C4 037A
        gbc.setState(0x363f, 0xc234, 0x6d90, 0x37af, 0x1b69, 0x3479, 0x0, 0x0);
        gbc.writeMem(0x363f, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xc234, gbc.sp());
        EXPECT(0x3641, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C4 037B
        gbc.setState(0x2d54, 0xc5e1, 0x4670, 0xe2e6, 0xa2b0, 0x80aa, 0x0, 0x0);
        gbc.writeMem(0x2d54, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xc5e1, gbc.sp());
        EXPECT(0x2d56, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C4 037C
        gbc.setState(0x7a5e, 0xc71e, 0xf1e0, 0xbc92, 0x3459, 0x3b4b, 0x0, 0x1);
        gbc.writeMem(0x7a5e, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xc71e, gbc.sp());
        EXPECT(0x7a60, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C4 037D
        gbc.setState(0xf36, 0x2540, 0x8740, 0xf422, 0x2df6, 0xa476, 0x1, 0x1);
        gbc.writeMem(0xf36, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x2540, gbc.sp());
        EXPECT(0xf38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C4 037E
        gbc.setState(0x9271, 0x2044, 0x18c0, 0x5049, 0x8937, 0x2e1b, 0x1, 0x0);
        gbc.writeMem(0x9271, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x2044, gbc.sp());
        EXPECT(0x9273, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9271));
        EXPECT(0xc4, gbc.readMem(0x9272));
        // CB C4 037F
        gbc.setState(0x8947, 0xb18b, 0x6860, 0x2df1, 0xbc87, 0xb932, 0x1, 0x1);
        gbc.writeMem(0x8947, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xb18b, gbc.sp());
        EXPECT(0x8949, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8947));
        EXPECT(0xc4, gbc.readMem(0x8948));
        // CB C4 0380
        gbc.setState(0xb37d, 0x3a16, 0xb8e0, 0xb397, 0xc376, 0xd568, 0x0, 0x1);
        gbc.writeMem(0xb37d, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x3a16, gbc.sp());
        EXPECT(0xb37f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb37d));
        EXPECT(0xc4, gbc.readMem(0xb37e));
        // CB C4 0381
        gbc.setState(0x3760, 0x8de2, 0xf860, 0x8b61, 0xc292, 0xd46f, 0x0, 0x1);
        gbc.writeMem(0x3760, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x8de2, gbc.sp());
        EXPECT(0x3762, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C4 0382
        gbc.setState(0xa06, 0xa3e4, 0xca90, 0x407d, 0xe83c, 0x5c46, 0x0, 0x0);
        gbc.writeMem(0xa06, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xa3e4, gbc.sp());
        EXPECT(0xa08, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C4 0383
        gbc.setState(0xb19e, 0x5c40, 0xc9e0, 0x542a, 0x4af, 0x17af, 0x1, 0x1);
        gbc.writeMem(0xb19e, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x5c40, gbc.sp());
        EXPECT(0xb1a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb19e));
        EXPECT(0xc4, gbc.readMem(0xb19f));
        // CB C4 0384
        gbc.setState(0xccd9, 0x6af6, 0x43e0, 0xb346, 0xbffd, 0xcac3, 0x1, 0x1);
        gbc.writeMem(0xccd9, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x6af6, gbc.sp());
        EXPECT(0xccdb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xccd9));
        EXPECT(0xc4, gbc.readMem(0xccda));
        // CB C4 0385
        gbc.setState(0x55b2, 0x9152, 0xe550, 0xf8fc, 0x323a, 0xe73e, 0x0, 0x0);
        gbc.writeMem(0x55b2, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x9152, gbc.sp());
        EXPECT(0x55b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C4 0386
        gbc.setState(0xb9ac, 0xd918, 0xcfd0, 0xa2b4, 0xce7a, 0x3a7f, 0x1, 0x1);
        gbc.writeMem(0xb9ac, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xd918, gbc.sp());
        EXPECT(0xb9ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb9ac));
        EXPECT(0xc4, gbc.readMem(0xb9ad));
        // CB C4 0387
        gbc.setState(0x117a, 0x12e7, 0x49d0, 0xefe4, 0xb4b0, 0x93f7, 0x1, 0x1);
        gbc.writeMem(0x117a, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x12e7, gbc.sp());
        EXPECT(0x117c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C4 0388
        gbc.setState(0xa3fd, 0x8e90, 0x5ce0, 0x52f0, 0x2486, 0x10e2, 0x1, 0x1);
        gbc.writeMem(0xa3fd, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x8e90, gbc.sp());
        EXPECT(0xa3ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa3fd));
        EXPECT(0xc4, gbc.readMem(0xa3fe));
        // CB C4 0389
        gbc.setState(0xeb95, 0xaac5, 0xb000, 0x4fd5, 0xc698, 0x7e7, 0x1, 0x1);
        gbc.writeMem(0xeb95, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xaac5, gbc.sp());
        EXPECT(0xeb97, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb95));
        EXPECT(0xc4, gbc.readMem(0xeb96));
        // CB C4 038A
        gbc.setState(0x3e9e, 0x74d2, 0x7200, 0x15a5, 0x385d, 0xcc74, 0x1, 0x0);
        gbc.writeMem(0x3e9e, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x74d2, gbc.sp());
        EXPECT(0x3ea0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C4 038B
        gbc.setState(0xa952, 0x3461, 0x9f80, 0x317e, 0x866c, 0x5286, 0x1, 0x0);
        gbc.writeMem(0xa952, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x3461, gbc.sp());
        EXPECT(0xa954, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa952));
        EXPECT(0xc4, gbc.readMem(0xa953));
        // CB C4 038C
        gbc.setState(0x8d98, 0x6f2d, 0xd150, 0x31a1, 0x3979, 0xbd9, 0x0, 0x0);
        gbc.writeMem(0x8d98, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x6f2d, gbc.sp());
        EXPECT(0x8d9a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d98));
        EXPECT(0xc4, gbc.readMem(0x8d99));
        // CB C4 038D
        gbc.setState(0x3a5e, 0xc30d, 0xb560, 0x16dd, 0xb246, 0xe1f4, 0x1, 0x1);
        gbc.writeMem(0x3a5e, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xc30d, gbc.sp());
        EXPECT(0x3a60, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C4 038E
        gbc.setState(0x5e7c, 0xd315, 0x4de0, 0xabe5, 0x302b, 0xb7f6, 0x1, 0x0);
        gbc.writeMem(0x5e7c, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xd315, gbc.sp());
        EXPECT(0x5e7e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C4 038F
        gbc.setState(0xe419, 0x473b, 0xb9a0, 0xecd0, 0x6a53, 0xaa14, 0x1, 0x0);
        gbc.writeMem(0xe419, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x473b, gbc.sp());
        EXPECT(0xe41b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe419));
        EXPECT(0xc4, gbc.readMem(0xe41a));
        // CB C4 0390
        gbc.setState(0xe80f, 0x647e, 0xecb0, 0xb375, 0x800, 0xc725, 0x0, 0x1);
        gbc.writeMem(0xe80f, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x647e, gbc.sp());
        EXPECT(0xe811, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe80f));
        EXPECT(0xc4, gbc.readMem(0xe810));
        // CB C4 0391
        gbc.setState(0x36fe, 0x46c1, 0xa8f0, 0xa89c, 0x9dde, 0x8aaa, 0x1, 0x1);
        gbc.writeMem(0x36fe, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x46c1, gbc.sp());
        EXPECT(0x3700, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C4 0392
        gbc.setState(0x4fe8, 0x2e34, 0xf690, 0xb973, 0xac90, 0xaef4, 0x0, 0x1);
        gbc.writeMem(0x4fe8, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x2e34, gbc.sp());
        EXPECT(0x4fea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C4 0393
        gbc.setState(0x427, 0xae29, 0x7cc0, 0x5902, 0xe8f2, 0x3ea, 0x1, 0x1);
        gbc.writeMem(0x427, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xae29, gbc.sp());
        EXPECT(0x429, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C4 0394
        gbc.setState(0x371, 0x96b1, 0x9ab0, 0xb3b0, 0x96cf, 0xbe91, 0x0, 0x0);
        gbc.writeMem(0x371, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x96b1, gbc.sp());
        EXPECT(0x373, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C4 0395
        gbc.setState(0xc0a9, 0xcb7e, 0x8280, 0xfb25, 0x80cd, 0x94bf, 0x1, 0x0);
        gbc.writeMem(0xc0a9, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xcb7e, gbc.sp());
        EXPECT(0xc0ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc0a9));
        EXPECT(0xc4, gbc.readMem(0xc0aa));
        // CB C4 0397
        gbc.setState(0x4418, 0xa032, 0x7b40, 0xfdd3, 0xc2f9, 0xc176, 0x1, 0x0);
        gbc.writeMem(0x4418, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xa032, gbc.sp());
        EXPECT(0x441a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C4 0398
        gbc.setState(0x6628, 0x7f18, 0xe4b0, 0x8334, 0xf6f2, 0x3ba3, 0x0, 0x0);
        gbc.writeMem(0x6628, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x7f18, gbc.sp());
        EXPECT(0x662a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C4 0399
        gbc.setState(0xd76d, 0xa2d4, 0xb040, 0x5c2a, 0xaa4b, 0xe267, 0x0, 0x1);
        gbc.writeMem(0xd76d, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xa2d4, gbc.sp());
        EXPECT(0xd76f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd76d));
        EXPECT(0xc4, gbc.readMem(0xd76e));
        // CB C4 039A
        gbc.setState(0x24a0, 0x15fb, 0x61e0, 0x8666, 0xe01b, 0xb899, 0x0, 0x1);
        gbc.writeMem(0x24a0, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x15fb, gbc.sp());
        EXPECT(0x24a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C4 039B
        gbc.setState(0xe0bf, 0xfb31, 0x68f0, 0x2a1d, 0x3424, 0xd97, 0x1, 0x1);
        gbc.writeMem(0xe0bf, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xfb31, gbc.sp());
        EXPECT(0xe0c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe0bf));
        EXPECT(0xc4, gbc.readMem(0xe0c0));
        // CB C4 039C
        gbc.setState(0x3ac5, 0xcf05, 0x4390, 0x3d87, 0x61a4, 0xf14b, 0x0, 0x1);
        gbc.writeMem(0x3ac5, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xcf05, gbc.sp());
        EXPECT(0x3ac7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C4 039D
        gbc.setState(0xbfd0, 0xb9d9, 0x39b0, 0x8aaa, 0x48be, 0xc327, 0x0, 0x0);
        gbc.writeMem(0xbfd0, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xb9d9, gbc.sp());
        EXPECT(0xbfd2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbfd0));
        EXPECT(0xc4, gbc.readMem(0xbfd1));
        // CB C4 039E
        gbc.setState(0xedee, 0xf2bc, 0x1ec0, 0x1a81, 0x38fd, 0xd5f, 0x1, 0x0);
        gbc.writeMem(0xedee, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xf2bc, gbc.sp());
        EXPECT(0xedf0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xedee));
        EXPECT(0xc4, gbc.readMem(0xedef));
        // CB C4 039F
        gbc.setState(0x91db, 0xb114, 0xbc20, 0xd334, 0xf13e, 0x14d2, 0x0, 0x1);
        gbc.writeMem(0x91db, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xb114, gbc.sp());
        EXPECT(0x91dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x91db));
        EXPECT(0xc4, gbc.readMem(0x91dc));
        // CB C4 03A0
        gbc.setState(0x5580, 0x70a4, 0xb0a0, 0xc358, 0x26db, 0x20f, 0x1, 0x1);
        gbc.writeMem(0x5580, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x70a4, gbc.sp());
        EXPECT(0x5582, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C4 03A1
        gbc.setState(0xbd90, 0x4fc3, 0x89b0, 0x4c0, 0x759a, 0x9370, 0x1, 0x0);
        gbc.writeMem(0xbd90, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x4fc3, gbc.sp());
        EXPECT(0xbd92, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd90));
        EXPECT(0xc4, gbc.readMem(0xbd91));
        // CB C4 03A2
        gbc.setState(0xdf97, 0x8ec2, 0x4f10, 0xd2ff, 0x1827, 0xf502, 0x0, 0x1);
        gbc.writeMem(0xdf97, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x8ec2, gbc.sp());
        EXPECT(0xdf99, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf97));
        EXPECT(0xc4, gbc.readMem(0xdf98));
        // CB C4 03A3
        gbc.setState(0xa230, 0xfa25, 0xf0, 0x564d, 0xe7d9, 0x1ed6, 0x0, 0x0);
        gbc.writeMem(0xa230, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xfa25, gbc.sp());
        EXPECT(0xa232, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa230));
        EXPECT(0xc4, gbc.readMem(0xa231));
        // CB C4 03A4
        gbc.setState(0x9c97, 0xabea, 0x6d40, 0x62df, 0x908b, 0xc690, 0x0, 0x0);
        gbc.writeMem(0x9c97, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xabea, gbc.sp());
        EXPECT(0x9c99, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c97));
        EXPECT(0xc4, gbc.readMem(0x9c98));
        // CB C4 03A5
        gbc.setState(0x41a1, 0x7ab1, 0xf230, 0x3a47, 0x6891, 0x8293, 0x0, 0x1);
        gbc.writeMem(0x41a1, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x7ab1, gbc.sp());
        EXPECT(0x41a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C4 03A6
        gbc.setState(0x54bc, 0xdc67, 0x2c80, 0x9e21, 0x30de, 0xbf9, 0x0, 0x1);
        gbc.writeMem(0x54bc, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xdc67, gbc.sp());
        EXPECT(0x54be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C4 03A7
        gbc.setState(0x2ffb, 0x1e3d, 0x1e10, 0xa61f, 0x767d, 0xfff3, 0x1, 0x1);
        gbc.writeMem(0x2ffb, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x1e3d, gbc.sp());
        EXPECT(0x2ffd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C4 03A8
        gbc.setState(0x518, 0x5c2d, 0xf840, 0x7112, 0xa240, 0xe1cf, 0x0, 0x1);
        gbc.writeMem(0x518, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x5c2d, gbc.sp());
        EXPECT(0x51a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C4 03A9
        gbc.setState(0x87c5, 0xbf70, 0x66c0, 0xf872, 0xd534, 0xb49f, 0x0, 0x1);
        gbc.writeMem(0x87c5, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xbf70, gbc.sp());
        EXPECT(0x87c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x87c5));
        EXPECT(0xc4, gbc.readMem(0x87c6));
        // CB C4 03AA
        gbc.setState(0xb001, 0xd436, 0xc0, 0xf192, 0x793b, 0x6854, 0x1, 0x0);
        gbc.writeMem(0xb001, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xd436, gbc.sp());
        EXPECT(0xb003, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb001));
        EXPECT(0xc4, gbc.readMem(0xb002));
        // CB C4 03AC
        gbc.setState(0x6e2c, 0xc09f, 0x31d0, 0x558b, 0x7db6, 0xe4b7, 0x1, 0x1);
        gbc.writeMem(0x6e2c, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xc09f, gbc.sp());
        EXPECT(0x6e2e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C4 03AD
        gbc.setState(0xb272, 0xed46, 0xfa00, 0x200f, 0x96ad, 0xa8cc, 0x1, 0x0);
        gbc.writeMem(0xb272, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xed46, gbc.sp());
        EXPECT(0xb274, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb272));
        EXPECT(0xc4, gbc.readMem(0xb273));
        // CB C4 03AE
        gbc.setState(0x52eb, 0xb570, 0x6490, 0x9b8d, 0xfe31, 0x81dd, 0x0, 0x0);
        gbc.writeMem(0x52eb, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xb570, gbc.sp());
        EXPECT(0x52ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C4 03AF
        gbc.setState(0x212a, 0x4430, 0x6800, 0xdb07, 0x7bbb, 0x2f6a, 0x1, 0x1);
        gbc.writeMem(0x212a, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x4430, gbc.sp());
        EXPECT(0x212c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C4 03B0
        gbc.setState(0xa49d, 0x8897, 0x14f0, 0xcbec, 0x1150, 0xc341, 0x0, 0x0);
        gbc.writeMem(0xa49d, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x8897, gbc.sp());
        EXPECT(0xa49f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa49d));
        EXPECT(0xc4, gbc.readMem(0xa49e));
        // CB C4 03B1
        gbc.setState(0xadb7, 0x2de1, 0x48b0, 0xa81e, 0x53a3, 0xe39c, 0x1, 0x0);
        gbc.writeMem(0xadb7, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x2de1, gbc.sp());
        EXPECT(0xadb9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xadb7));
        EXPECT(0xc4, gbc.readMem(0xadb8));
        // CB C4 03B2
        gbc.setState(0x942e, 0x247c, 0x1f40, 0xda98, 0xe635, 0x4eaf, 0x1, 0x0);
        gbc.writeMem(0x942e, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x247c, gbc.sp());
        EXPECT(0x9430, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x942e));
        EXPECT(0xc4, gbc.readMem(0x942f));
        // CB C4 03B3
        gbc.setState(0x46f7, 0x1d3d, 0x3700, 0x242a, 0xb04f, 0x5d9, 0x1, 0x0);
        gbc.writeMem(0x46f7, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x1d3d, gbc.sp());
        EXPECT(0x46f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C4 03B4
        gbc.setState(0x5b4d, 0xf645, 0x8a20, 0x4096, 0x832a, 0x2fbd, 0x0, 0x1);
        gbc.writeMem(0x5b4d, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xf645, gbc.sp());
        EXPECT(0x5b4f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C4 03B5
        gbc.setState(0x6986, 0x8c98, 0x4d70, 0x8afd, 0xf51a, 0xaf23, 0x0, 0x0);
        gbc.writeMem(0x6986, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x8c98, gbc.sp());
        EXPECT(0x6988, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C4 03B6
        gbc.setState(0x5f99, 0x4cf0, 0x3720, 0x5ece, 0xf978, 0x3c7d, 0x1, 0x0);
        gbc.writeMem(0x5f99, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x4cf0, gbc.sp());
        EXPECT(0x5f9b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C4 03B7
        gbc.setState(0x4638, 0x3a28, 0xbc40, 0xa2f3, 0xebec, 0xaa4f, 0x1, 0x0);
        gbc.writeMem(0x4638, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x3a28, gbc.sp());
        EXPECT(0x463a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C4 03B8
        gbc.setState(0x8cbe, 0x9e1e, 0x8e70, 0x4f1c, 0xb180, 0xdd29, 0x0, 0x0);
        gbc.writeMem(0x8cbe, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x9e1e, gbc.sp());
        EXPECT(0x8cc0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8cbe));
        EXPECT(0xc4, gbc.readMem(0x8cbf));
        // CB C4 03B9
        gbc.setState(0x4ffa, 0xe17c, 0xa1d0, 0x8f7a, 0xeea8, 0x63c9, 0x1, 0x1);
        gbc.writeMem(0x4ffa, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xe17c, gbc.sp());
        EXPECT(0x4ffc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C4 03BA
        gbc.setState(0xdf03, 0x8fab, 0x8a0, 0xf7c7, 0x891c, 0xb4df, 0x1, 0x1);
        gbc.writeMem(0xdf03, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x8fab, gbc.sp());
        EXPECT(0xdf05, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf03));
        EXPECT(0xc4, gbc.readMem(0xdf04));
        // CB C4 03BC
        gbc.setState(0xc407, 0x1c5a, 0xdc10, 0x386a, 0x2cfc, 0x4dfa, 0x0, 0x1);
        gbc.writeMem(0xc407, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x1c5a, gbc.sp());
        EXPECT(0xc409, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc407));
        EXPECT(0xc4, gbc.readMem(0xc408));
        // CB C4 03BD
        gbc.setState(0x226e, 0x5107, 0x4450, 0x90e7, 0xb6c4, 0x51fd, 0x0, 0x0);
        gbc.writeMem(0x226e, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x5107, gbc.sp());
        EXPECT(0x2270, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C4 03BE
        gbc.setState(0xd23a, 0xe69e, 0xf4d0, 0x9f0d, 0x9ff1, 0xe770, 0x1, 0x0);
        gbc.writeMem(0xd23a, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xe69e, gbc.sp());
        EXPECT(0xd23c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd23a));
        EXPECT(0xc4, gbc.readMem(0xd23b));
        // CB C4 03BF
        gbc.setState(0x9308, 0x93f2, 0x4280, 0x4a8d, 0x12bd, 0x83e1, 0x1, 0x0);
        gbc.writeMem(0x9308, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x93f2, gbc.sp());
        EXPECT(0x930a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9308));
        EXPECT(0xc4, gbc.readMem(0x9309));
        // CB C4 03C0
        gbc.setState(0x5509, 0xabb3, 0xe600, 0x33f2, 0xd741, 0x69c9, 0x1, 0x0);
        gbc.writeMem(0x5509, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xabb3, gbc.sp());
        EXPECT(0x550b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C4 03C1
        gbc.setState(0x97a3, 0x972f, 0xa0, 0xad6a, 0x7e2b, 0x4622, 0x1, 0x0);
        gbc.writeMem(0x97a3, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x972f, gbc.sp());
        EXPECT(0x97a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x97a3));
        EXPECT(0xc4, gbc.readMem(0x97a4));
        // CB C4 03C2
        gbc.setState(0x2a9e, 0xa9a9, 0xeb40, 0x9ec, 0x51d6, 0x27d4, 0x1, 0x0);
        gbc.writeMem(0x2a9e, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xa9a9, gbc.sp());
        EXPECT(0x2aa0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C4 03C3
        gbc.setState(0x8280, 0xe65a, 0x9fc0, 0xe21, 0xdc47, 0x4afd, 0x0, 0x1);
        gbc.writeMem(0x8280, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xe65a, gbc.sp());
        EXPECT(0x8282, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8280));
        EXPECT(0xc4, gbc.readMem(0x8281));
        // CB C4 03C4
        gbc.setState(0x8983, 0x8cfd, 0x17e0, 0x4612, 0xb691, 0x8eae, 0x1, 0x1);
        gbc.writeMem(0x8983, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x8cfd, gbc.sp());
        EXPECT(0x8985, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8983));
        EXPECT(0xc4, gbc.readMem(0x8984));
        // CB C4 03C5
        gbc.setState(0xb619, 0xe0d, 0x90c0, 0xae1a, 0x4d74, 0xcade, 0x0, 0x1);
        gbc.writeMem(0xb619, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xe0d, gbc.sp());
        EXPECT(0xb61b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb619));
        EXPECT(0xc4, gbc.readMem(0xb61a));
        // CB C4 03C6
        gbc.setState(0x313c, 0xdaf5, 0xff90, 0x7aaf, 0xe8f9, 0xafe1, 0x1, 0x0);
        gbc.writeMem(0x313c, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xdaf5, gbc.sp());
        EXPECT(0x313e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C4 03C7
        gbc.setState(0x44c4, 0x69c4, 0x4190, 0x2cc1, 0x5c4c, 0x2d2d, 0x1, 0x0);
        gbc.writeMem(0x44c4, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x69c4, gbc.sp());
        EXPECT(0x44c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C4 03C8
        gbc.setState(0xd659, 0xfb6b, 0xa990, 0x7e60, 0x8ff0, 0xe9e0, 0x1, 0x0);
        gbc.writeMem(0xd659, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xfb6b, gbc.sp());
        EXPECT(0xd65b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd659));
        EXPECT(0xc4, gbc.readMem(0xd65a));
        // CB C4 03C9
        gbc.setState(0xafd5, 0xf726, 0xefc0, 0x9d83, 0xe5de, 0x5084, 0x0, 0x1);
        gbc.writeMem(0xafd5, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xf726, gbc.sp());
        EXPECT(0xafd7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xafd5));
        EXPECT(0xc4, gbc.readMem(0xafd6));
        // CB C4 03CA
        gbc.setState(0xe5a8, 0xff6c, 0xb410, 0x48a1, 0xe484, 0x518b, 0x1, 0x0);
        gbc.writeMem(0xe5a8, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xff6c, gbc.sp());
        EXPECT(0xe5aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe5a8));
        EXPECT(0xc4, gbc.readMem(0xe5a9));
        // CB C4 03CB
        gbc.setState(0x1df6, 0xefba, 0x5800, 0xf3fb, 0x1a90, 0x498c, 0x0, 0x0);
        gbc.writeMem(0x1df6, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xefba, gbc.sp());
        EXPECT(0x1df8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C4 03CC
        gbc.setState(0x7eaa, 0x8117, 0x27f0, 0x34dd, 0xba1, 0x3840, 0x1, 0x1);
        gbc.writeMem(0x7eaa, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x8117, gbc.sp());
        EXPECT(0x7eac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C4 03CD
        gbc.setState(0xc3f4, 0x341, 0x8210, 0x3f3, 0xc88a, 0x26a1, 0x0, 0x0);
        gbc.writeMem(0xc3f4, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x341, gbc.sp());
        EXPECT(0xc3f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc3f4));
        EXPECT(0xc4, gbc.readMem(0xc3f5));
        // CB C4 03CE
        gbc.setState(0x6d6e, 0xb1a1, 0x6520, 0x2853, 0xf316, 0xc709, 0x0, 0x1);
        gbc.writeMem(0x6d6e, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xb1a1, gbc.sp());
        EXPECT(0x6d70, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C4 03CF
        gbc.setState(0xecaa, 0xc5ee, 0xe0, 0xdde9, 0xd16a, 0xbd92, 0x1, 0x0);
        gbc.writeMem(0xecaa, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xc5ee, gbc.sp());
        EXPECT(0xecac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xecaa));
        EXPECT(0xc4, gbc.readMem(0xecab));
        // CB C4 03D0
        gbc.setState(0x17e8, 0x55ac, 0x1fc0, 0x7b9a, 0xcd52, 0x8851, 0x0, 0x1);
        gbc.writeMem(0x17e8, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x55ac, gbc.sp());
        EXPECT(0x17ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C4 03D1
        gbc.setState(0xc89d, 0xb1f9, 0x1c90, 0xbdc, 0x1868, 0xe47, 0x0, 0x1);
        gbc.writeMem(0xc89d, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xb1f9, gbc.sp());
        EXPECT(0xc89f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc89d));
        EXPECT(0xc4, gbc.readMem(0xc89e));
        // CB C4 03D2
        gbc.setState(0xa9f4, 0xc0f1, 0xd060, 0xc77f, 0x5ee7, 0xfffb, 0x1, 0x1);
        gbc.writeMem(0xa9f4, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xc0f1, gbc.sp());
        EXPECT(0xa9f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa9f4));
        EXPECT(0xc4, gbc.readMem(0xa9f5));
        // CB C4 03D3
        gbc.setState(0x5cd2, 0x40bf, 0xe560, 0x671a, 0x3622, 0x1d4d, 0x1, 0x1);
        gbc.writeMem(0x5cd2, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x40bf, gbc.sp());
        EXPECT(0x5cd4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C4 03D4
        gbc.setState(0x528d, 0x64ed, 0xbc70, 0x10d7, 0x3210, 0xb2d4, 0x0, 0x1);
        gbc.writeMem(0x528d, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x64ed, gbc.sp());
        EXPECT(0x528f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C4 03D5
        gbc.setState(0x957d, 0x8519, 0xa7f0, 0x8c98, 0x460d, 0x54ed, 0x0, 0x1);
        gbc.writeMem(0x957d, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x8519, gbc.sp());
        EXPECT(0x957f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x957d));
        EXPECT(0xc4, gbc.readMem(0x957e));
        // CB C4 03D6
        gbc.setState(0xb94c, 0x226b, 0xfdf0, 0xb5c, 0x33b1, 0x839c, 0x0, 0x0);
        gbc.writeMem(0xb94c, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x226b, gbc.sp());
        EXPECT(0xb94e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb94c));
        EXPECT(0xc4, gbc.readMem(0xb94d));
        // CB C4 03D7
        gbc.setState(0x96c0, 0xd4ca, 0x23b0, 0x51c3, 0x44df, 0xd474, 0x0, 0x1);
        gbc.writeMem(0x96c0, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xd4ca, gbc.sp());
        EXPECT(0x96c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x96c0));
        EXPECT(0xc4, gbc.readMem(0x96c1));
        // CB C4 03D8
        gbc.setState(0x8553, 0xc663, 0x32c0, 0x62b9, 0x361b, 0x86be, 0x1, 0x0);
        gbc.writeMem(0x8553, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xc663, gbc.sp());
        EXPECT(0x8555, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8553));
        EXPECT(0xc4, gbc.readMem(0x8554));
        // CB C4 03D9
        gbc.setState(0x6fbf, 0xb6e3, 0x42b0, 0x1858, 0x9089, 0xba65, 0x1, 0x1);
        gbc.writeMem(0x6fbf, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xb6e3, gbc.sp());
        EXPECT(0x6fc1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C4 03DA
        gbc.setState(0x667d, 0x38d7, 0x39d0, 0xb8af, 0x1275, 0x605d, 0x0, 0x0);
        gbc.writeMem(0x667d, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x38d7, gbc.sp());
        EXPECT(0x667f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C4 03DB
        gbc.setState(0x311, 0xcadc, 0x1110, 0x2f0d, 0xf4eb, 0x21fe, 0x0, 0x0);
        gbc.writeMem(0x311, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xcadc, gbc.sp());
        EXPECT(0x313, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C4 03DC
        gbc.setState(0x4623, 0x5c89, 0x4970, 0x2592, 0x92be, 0xad92, 0x1, 0x0);
        gbc.writeMem(0x4623, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x5c89, gbc.sp());
        EXPECT(0x4625, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C4 03DD
        gbc.setState(0xbdbb, 0x474b, 0x7240, 0xe7bf, 0xb923, 0xecf2, 0x1, 0x0);
        gbc.writeMem(0xbdbb, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x474b, gbc.sp());
        EXPECT(0xbdbd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbdbb));
        EXPECT(0xc4, gbc.readMem(0xbdbc));
        // CB C4 03DE
        gbc.setState(0x68d9, 0x6677, 0x74a0, 0x709a, 0x2bc6, 0x8f37, 0x1, 0x0);
        gbc.writeMem(0x68d9, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x6677, gbc.sp());
        EXPECT(0x68db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C4 03DF
        gbc.setState(0x9181, 0xbac2, 0x1cd0, 0x4729, 0x1d13, 0xed0e, 0x1, 0x1);
        gbc.writeMem(0x9181, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xbac2, gbc.sp());
        EXPECT(0x9183, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9181));
        EXPECT(0xc4, gbc.readMem(0x9182));
        // CB C4 03E1
        gbc.setState(0x44d8, 0x9a65, 0x1060, 0x44c2, 0x296c, 0xe9c2, 0x1, 0x1);
        gbc.writeMem(0x44d8, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x9a65, gbc.sp());
        EXPECT(0x44da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C4 03E3
        gbc.setState(0x4d3, 0x7332, 0x5ad0, 0x2665, 0xa6f8, 0x3172, 0x1, 0x0);
        gbc.writeMem(0x4d3, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x7332, gbc.sp());
        EXPECT(0x4d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C4 03E4
        gbc.setState(0xc997, 0x8032, 0xdf50, 0x8c2c, 0x28c8, 0x17f3, 0x1, 0x1);
        gbc.writeMem(0xc997, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x8032, gbc.sp());
        EXPECT(0xc999, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc997));
        EXPECT(0xc4, gbc.readMem(0xc998));
        // CB C4 03E5
        gbc.setState(0xe474, 0xac2d, 0x4210, 0xa7ac, 0x1ed1, 0xdbd0, 0x1, 0x1);
        gbc.writeMem(0xe474, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xac2d, gbc.sp());
        EXPECT(0xe476, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe474));
        EXPECT(0xc4, gbc.readMem(0xe475));
        // CB C4 03E6
        gbc.setState(0x6b7c, 0x3736, 0x6ff0, 0xcdcd, 0x85f, 0x858e, 0x1, 0x1);
        gbc.writeMem(0x6b7c, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x3736, gbc.sp());
        EXPECT(0x6b7e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C4 03E7
        gbc.setState(0x7983, 0xe4ff, 0xd340, 0x9913, 0x8a2d, 0xfbe0, 0x1, 0x0);
        gbc.writeMem(0x7983, { 0xcb, 0xc4 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xe4ff, gbc.sp());
        EXPECT(0x7985, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
    }
