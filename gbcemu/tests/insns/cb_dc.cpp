#include "../gbctests_insns.h"
#if (defined GBCEMU_INSNS_TESTS_ALL) || (defined GBCEMU_INSNS_TESTS_cb_dc)
#include "../gbctests.h"

namespace rckid::gbcemu {

    TEST(gbcemu, opcode_cb_dc) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB DC 0000
        gbc.setState(0x1c1d, 0x73b1, 0x8d80, 0x9fbe, 0xd5f6, 0x2598, 0x0, 0x1);
        gbc.writeMem(0x1c1d, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x73b1);
        EXPECT(gbc.pc(), 0x1c1f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DC 0001
        gbc.setState(0xbffc, 0xabf, 0xa50, 0xc479, 0x4d74, 0x25d0, 0x0, 0x0);
        gbc.writeMem(0xbffc, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0xabf);
        EXPECT(gbc.pc(), 0xbffe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbffc), 0xcb);
        EXPECT(gbc.readMem(0xbffd), 0xdc);
        // CB DC 0002
        gbc.setState(0xe3ba, 0x5307, 0x9a20, 0x5b8, 0xae6, 0xa6fe, 0x1, 0x0);
        gbc.writeMem(0xe3ba, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x5307);
        EXPECT(gbc.pc(), 0xe3bc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe3ba), 0xcb);
        EXPECT(gbc.readMem(0xe3bb), 0xdc);
        // CB DC 0003
        gbc.setState(0xed68, 0x4689, 0x1bb0, 0x6373, 0xe1d1, 0x87a1, 0x1, 0x0);
        gbc.writeMem(0xed68, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x4689);
        EXPECT(gbc.pc(), 0xed6a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xed68), 0xcb);
        EXPECT(gbc.readMem(0xed69), 0xdc);
        // CB DC 0004
        gbc.setState(0x7b4f, 0x7f1e, 0x9d80, 0x8326, 0x419f, 0x933a, 0x0, 0x1);
        gbc.writeMem(0x7b4f, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x7f1e);
        EXPECT(gbc.pc(), 0x7b51);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DC 0005
        gbc.setState(0xb92b, 0xccad, 0xf060, 0x47d5, 0xdc70, 0xaff6, 0x0, 0x1);
        gbc.writeMem(0xb92b, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0xccad);
        EXPECT(gbc.pc(), 0xb92d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb92b), 0xcb);
        EXPECT(gbc.readMem(0xb92c), 0xdc);
        // CB DC 0006
        gbc.setState(0x8d51, 0x10e0, 0xdd10, 0xf7f6, 0x7095, 0xe534, 0x0, 0x1);
        gbc.writeMem(0x8d51, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x10e0);
        EXPECT(gbc.pc(), 0x8d53);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8d51), 0xcb);
        EXPECT(gbc.readMem(0x8d52), 0xdc);
        // CB DC 0007
        gbc.setState(0xe171, 0xd012, 0xc3a0, 0x97cd, 0xfc9e, 0x3fb5, 0x0, 0x0);
        gbc.writeMem(0xe171, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0xd012);
        EXPECT(gbc.pc(), 0xe173);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe171), 0xcb);
        EXPECT(gbc.readMem(0xe172), 0xdc);
        // CB DC 0008
        gbc.setState(0xea53, 0x60ef, 0x9af0, 0x26ac, 0xd97c, 0xb30a, 0x1, 0x0);
        gbc.writeMem(0xea53, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x60ef);
        EXPECT(gbc.pc(), 0xea55);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xea53), 0xcb);
        EXPECT(gbc.readMem(0xea54), 0xdc);
        // CB DC 0009
        gbc.setState(0xee5e, 0xdb9b, 0x7f80, 0xf0cf, 0x172a, 0xd8da, 0x1, 0x1);
        gbc.writeMem(0xee5e, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0xdb9b);
        EXPECT(gbc.pc(), 0xee60);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xee5e), 0xcb);
        EXPECT(gbc.readMem(0xee5f), 0xdc);
        // CB DC 000A
        gbc.setState(0xba90, 0xb939, 0xeb40, 0x37fc, 0x4178, 0x811b, 0x0, 0x0);
        gbc.writeMem(0xba90, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0xb939);
        EXPECT(gbc.pc(), 0xba92);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xba90), 0xcb);
        EXPECT(gbc.readMem(0xba91), 0xdc);
        // CB DC 000B
        gbc.setState(0x1b71, 0xb4ff, 0x5170, 0x5b2e, 0x5a9a, 0x395b, 0x1, 0x0);
        gbc.writeMem(0x1b71, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0xb4ff);
        EXPECT(gbc.pc(), 0x1b73);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DC 000D
        gbc.setState(0x650a, 0x4030, 0x7b40, 0xb475, 0xe475, 0xde6e, 0x1, 0x1);
        gbc.writeMem(0x650a, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x4030);
        EXPECT(gbc.pc(), 0x650c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DC 000E
        gbc.setState(0x42a4, 0xa73f, 0xf250, 0x20a2, 0x47f7, 0xf733, 0x1, 0x1);
        gbc.writeMem(0x42a4, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0xa73f);
        EXPECT(gbc.pc(), 0x42a6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DC 000F
        gbc.setState(0xda49, 0x2cff, 0xe840, 0xc193, 0xc8b, 0xdd1a, 0x1, 0x0);
        gbc.writeMem(0xda49, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x2cff);
        EXPECT(gbc.pc(), 0xda4b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xda49), 0xcb);
        EXPECT(gbc.readMem(0xda4a), 0xdc);
        // CB DC 0010
        gbc.setState(0x9dcc, 0x7d85, 0x4760, 0x9b03, 0x21ea, 0xf6a3, 0x0, 0x0);
        gbc.writeMem(0x9dcc, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x7d85);
        EXPECT(gbc.pc(), 0x9dce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9dcc), 0xcb);
        EXPECT(gbc.readMem(0x9dcd), 0xdc);
        // CB DC 0011
        gbc.setState(0x17d2, 0x8e6a, 0x9e60, 0x58e9, 0xf67, 0x8229, 0x0, 0x1);
        gbc.writeMem(0x17d2, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x8e6a);
        EXPECT(gbc.pc(), 0x17d4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DC 0012
        gbc.setState(0xe9c3, 0xc52c, 0x13c0, 0xd40d, 0x375d, 0x8457, 0x0, 0x1);
        gbc.writeMem(0xe9c3, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0xc52c);
        EXPECT(gbc.pc(), 0xe9c5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe9c3), 0xcb);
        EXPECT(gbc.readMem(0xe9c4), 0xdc);
        // CB DC 0013
        gbc.setState(0xaf34, 0x8cc, 0xd6e0, 0x36aa, 0x4c6c, 0xa435, 0x1, 0x1);
        gbc.writeMem(0xaf34, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x8cc);
        EXPECT(gbc.pc(), 0xaf36);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaf34), 0xcb);
        EXPECT(gbc.readMem(0xaf35), 0xdc);
        // CB DC 0014
        gbc.setState(0xc681, 0xbcac, 0x95f0, 0x9eeb, 0xb22e, 0x7a7e, 0x0, 0x1);
        gbc.writeMem(0xc681, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0xbcac);
        EXPECT(gbc.pc(), 0xc683);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc681), 0xcb);
        EXPECT(gbc.readMem(0xc682), 0xdc);
        // CB DC 0016
        gbc.setState(0xe2c, 0xc02b, 0x1960, 0xe1bb, 0xed8, 0x18b1, 0x0, 0x0);
        gbc.writeMem(0xe2c, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0xc02b);
        EXPECT(gbc.pc(), 0xe2e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DC 0017
        gbc.setState(0x6fe8, 0x97fe, 0xc500, 0xc38c, 0xf722, 0x3236, 0x0, 0x1);
        gbc.writeMem(0x6fe8, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x97fe);
        EXPECT(gbc.pc(), 0x6fea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DC 0018
        gbc.setState(0x438, 0x1b35, 0x8130, 0xc870, 0x77b3, 0xcae4, 0x1, 0x0);
        gbc.writeMem(0x438, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x1b35);
        EXPECT(gbc.pc(), 0x43a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DC 0019
        gbc.setState(0x2d15, 0x3a07, 0x8950, 0xe80a, 0xcd64, 0xe02, 0x0, 0x0);
        gbc.writeMem(0x2d15, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x3a07);
        EXPECT(gbc.pc(), 0x2d17);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DC 001A
        gbc.setState(0x52a1, 0x8350, 0x7c00, 0x2f59, 0x5a83, 0xbf64, 0x0, 0x0);
        gbc.writeMem(0x52a1, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x8350);
        EXPECT(gbc.pc(), 0x52a3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DC 001B
        gbc.setState(0xa53c, 0xb383, 0x10a0, 0x151b, 0xd14a, 0x64f2, 0x0, 0x0);
        gbc.writeMem(0xa53c, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0xb383);
        EXPECT(gbc.pc(), 0xa53e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa53c), 0xcb);
        EXPECT(gbc.readMem(0xa53d), 0xdc);
        // CB DC 001C
        gbc.setState(0xb823, 0x22a1, 0xfa40, 0xba98, 0x1f80, 0xc332, 0x1, 0x0);
        gbc.writeMem(0xb823, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x22a1);
        EXPECT(gbc.pc(), 0xb825);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb823), 0xcb);
        EXPECT(gbc.readMem(0xb824), 0xdc);
        // CB DC 001D
        gbc.setState(0x6d7e, 0x282c, 0xaae0, 0x30ff, 0x9d52, 0x8978, 0x0, 0x0);
        gbc.writeMem(0x6d7e, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x282c);
        EXPECT(gbc.pc(), 0x6d80);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DC 001E
        gbc.setState(0xaa3b, 0xeec6, 0x8150, 0x54, 0x9130, 0xde8f, 0x1, 0x0);
        gbc.writeMem(0xaa3b, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xeec6);
        EXPECT(gbc.pc(), 0xaa3d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaa3b), 0xcb);
        EXPECT(gbc.readMem(0xaa3c), 0xdc);
        // CB DC 001F
        gbc.setState(0x7489, 0xafe6, 0x1ee0, 0x9279, 0x9dfc, 0x16c5, 0x0, 0x0);
        gbc.writeMem(0x7489, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0xafe6);
        EXPECT(gbc.pc(), 0x748b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DC 0021
        gbc.setState(0x6a71, 0x304d, 0xbb80, 0x74de, 0x561f, 0x82d2, 0x0, 0x1);
        gbc.writeMem(0x6a71, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x304d);
        EXPECT(gbc.pc(), 0x6a73);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DC 0023
        gbc.setState(0x8aec, 0xf281, 0x5d60, 0x13c5, 0xa471, 0x4077, 0x0, 0x0);
        gbc.writeMem(0x8aec, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xf281);
        EXPECT(gbc.pc(), 0x8aee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8aec), 0xcb);
        EXPECT(gbc.readMem(0x8aed), 0xdc);
        // CB DC 0024
        gbc.setState(0xb683, 0x54fe, 0xeb30, 0x84e4, 0x9ed3, 0xfe2f, 0x0, 0x1);
        gbc.writeMem(0xb683, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x54fe);
        EXPECT(gbc.pc(), 0xb685);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb683), 0xcb);
        EXPECT(gbc.readMem(0xb684), 0xdc);
        // CB DC 0025
        gbc.setState(0x53bc, 0x5a3, 0xb0f0, 0x1cc1, 0x256e, 0x5d, 0x0, 0x0);
        gbc.writeMem(0x53bc, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x5a3);
        EXPECT(gbc.pc(), 0x53be);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DC 0026
        gbc.setState(0x210a, 0xfa06, 0xbd80, 0xda86, 0x6c27, 0xdf2c, 0x1, 0x1);
        gbc.writeMem(0x210a, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0xfa06);
        EXPECT(gbc.pc(), 0x210c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DC 0027
        gbc.setState(0xb215, 0xec53, 0xf0, 0xcaad, 0xf4b2, 0xa2ea, 0x0, 0x1);
        gbc.writeMem(0xb215, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0xec53);
        EXPECT(gbc.pc(), 0xb217);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb215), 0xcb);
        EXPECT(gbc.readMem(0xb216), 0xdc);
        // CB DC 0028
        gbc.setState(0xa5a5, 0x65e1, 0x20f0, 0x4708, 0x7a34, 0xf1bc, 0x1, 0x1);
        gbc.writeMem(0xa5a5, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x65e1);
        EXPECT(gbc.pc(), 0xa5a7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa5a5), 0xcb);
        EXPECT(gbc.readMem(0xa5a6), 0xdc);
        // CB DC 0029
        gbc.setState(0x535a, 0x8e23, 0x1260, 0xaa1c, 0x220f, 0x1805, 0x0, 0x1);
        gbc.writeMem(0x535a, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x8e23);
        EXPECT(gbc.pc(), 0x535c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DC 002A
        gbc.setState(0xd8c4, 0x119f, 0x4b70, 0xefa8, 0xd998, 0xbf58, 0x1, 0x0);
        gbc.writeMem(0xd8c4, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x119f);
        EXPECT(gbc.pc(), 0xd8c6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd8c4), 0xcb);
        EXPECT(gbc.readMem(0xd8c5), 0xdc);
        // CB DC 002B
        gbc.setState(0xcc50, 0x6b45, 0x5e80, 0x9352, 0x6fb5, 0x5c7a, 0x0, 0x0);
        gbc.writeMem(0xcc50, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x6b45);
        EXPECT(gbc.pc(), 0xcc52);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcc50), 0xcb);
        EXPECT(gbc.readMem(0xcc51), 0xdc);
        // CB DC 002C
        gbc.setState(0xc76d, 0xf0d5, 0x63f0, 0xebee, 0x6121, 0xc14d, 0x0, 0x0);
        gbc.writeMem(0xc76d, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0xf0d5);
        EXPECT(gbc.pc(), 0xc76f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc76d), 0xcb);
        EXPECT(gbc.readMem(0xc76e), 0xdc);
        // CB DC 002D
        gbc.setState(0xe7b, 0xe00a, 0xee80, 0xbfe0, 0xabfd, 0x827b, 0x0, 0x1);
        gbc.writeMem(0xe7b, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0xe00a);
        EXPECT(gbc.pc(), 0xe7d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DC 002E
        gbc.setState(0xa82a, 0x2182, 0x9d10, 0x7b7c, 0xe4a2, 0xda0c, 0x1, 0x1);
        gbc.writeMem(0xa82a, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x2182);
        EXPECT(gbc.pc(), 0xa82c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa82a), 0xcb);
        EXPECT(gbc.readMem(0xa82b), 0xdc);
        // CB DC 002F
        gbc.setState(0xd84f, 0xc4, 0xe950, 0xf11, 0x2e92, 0x5ada, 0x1, 0x0);
        gbc.writeMem(0xd84f, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0xc4);
        EXPECT(gbc.pc(), 0xd851);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd84f), 0xcb);
        EXPECT(gbc.readMem(0xd850), 0xdc);
        // CB DC 0030
        gbc.setState(0xe75b, 0xeaac, 0x2e10, 0x2275, 0x60, 0x1090, 0x0, 0x1);
        gbc.writeMem(0xe75b, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0xeaac);
        EXPECT(gbc.pc(), 0xe75d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe75b), 0xcb);
        EXPECT(gbc.readMem(0xe75c), 0xdc);
        // CB DC 0031
        gbc.setState(0xc8c9, 0x3b35, 0x91f0, 0xf3f2, 0x2e13, 0xd537, 0x1, 0x0);
        gbc.writeMem(0xc8c9, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x3b35);
        EXPECT(gbc.pc(), 0xc8cb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc8c9), 0xcb);
        EXPECT(gbc.readMem(0xc8ca), 0xdc);
        // CB DC 0032
        gbc.setState(0xa7c5, 0x5392, 0x5400, 0x2e7, 0xd353, 0x4edb, 0x1, 0x1);
        gbc.writeMem(0xa7c5, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x5392);
        EXPECT(gbc.pc(), 0xa7c7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa7c5), 0xcb);
        EXPECT(gbc.readMem(0xa7c6), 0xdc);
        // CB DC 0033
        gbc.setState(0xaf93, 0xa148, 0xda60, 0x4c0b, 0xecbe, 0x7687, 0x0, 0x1);
        gbc.writeMem(0xaf93, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xa148);
        EXPECT(gbc.pc(), 0xaf95);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaf93), 0xcb);
        EXPECT(gbc.readMem(0xaf94), 0xdc);
        // CB DC 0034
        gbc.setState(0xc680, 0x7244, 0x2ef0, 0x54eb, 0x6db2, 0xcceb, 0x0, 0x1);
        gbc.writeMem(0xc680, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x7244);
        EXPECT(gbc.pc(), 0xc682);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc680), 0xcb);
        EXPECT(gbc.readMem(0xc681), 0xdc);
        // CB DC 0035
        gbc.setState(0xc16d, 0x9cb1, 0x6fa0, 0xe90, 0x3d3, 0xff3f, 0x0, 0x0);
        gbc.writeMem(0xc16d, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x9cb1);
        EXPECT(gbc.pc(), 0xc16f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc16d), 0xcb);
        EXPECT(gbc.readMem(0xc16e), 0xdc);
        // CB DC 0036
        gbc.setState(0xb63, 0x3005, 0x5190, 0x9912, 0x4b5a, 0x66b4, 0x0, 0x0);
        gbc.writeMem(0xb63, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x3005);
        EXPECT(gbc.pc(), 0xb65);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DC 0037
        gbc.setState(0x6e05, 0xfafc, 0x9830, 0xfd83, 0xed21, 0x2a9f, 0x0, 0x1);
        gbc.writeMem(0x6e05, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0xfafc);
        EXPECT(gbc.pc(), 0x6e07);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DC 0038
        gbc.setState(0x612c, 0xd60d, 0x5950, 0x6116, 0xfbf2, 0x7101, 0x1, 0x1);
        gbc.writeMem(0x612c, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0xd60d);
        EXPECT(gbc.pc(), 0x612e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DC 0039
        gbc.setState(0xede4, 0xab96, 0x1ab0, 0xf73a, 0x6d2, 0xcd7a, 0x0, 0x0);
        gbc.writeMem(0xede4, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xab96);
        EXPECT(gbc.pc(), 0xede6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xede4), 0xcb);
        EXPECT(gbc.readMem(0xede5), 0xdc);
        // CB DC 003A
        gbc.setState(0xfbd, 0x2453, 0xe970, 0x8020, 0x3103, 0x4b9d, 0x0, 0x0);
        gbc.writeMem(0xfbd, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x2453);
        EXPECT(gbc.pc(), 0xfbf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DC 003B
        gbc.setState(0xb876, 0x3fa8, 0x89d0, 0xd7c3, 0xcfb5, 0xf5d5, 0x0, 0x1);
        gbc.writeMem(0xb876, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x3fa8);
        EXPECT(gbc.pc(), 0xb878);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb876), 0xcb);
        EXPECT(gbc.readMem(0xb877), 0xdc);
        // CB DC 003C
        gbc.setState(0xe37a, 0x85d1, 0x74b0, 0x5d0, 0x350b, 0xd429, 0x1, 0x0);
        gbc.writeMem(0xe37a, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x85d1);
        EXPECT(gbc.pc(), 0xe37c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe37a), 0xcb);
        EXPECT(gbc.readMem(0xe37b), 0xdc);
        // CB DC 003D
        gbc.setState(0x68be, 0xdbbd, 0xc430, 0xe89, 0x1071, 0x684c, 0x1, 0x0);
        gbc.writeMem(0x68be, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0xdbbd);
        EXPECT(gbc.pc(), 0x68c0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DC 003E
        gbc.setState(0x7b3a, 0xadef, 0x2a50, 0x817e, 0xd150, 0xdc9, 0x0, 0x0);
        gbc.writeMem(0x7b3a, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0xadef);
        EXPECT(gbc.pc(), 0x7b3c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DC 003F
        gbc.setState(0x3de6, 0x9fb7, 0xf470, 0x1e9, 0x46ec, 0x4a61, 0x1, 0x1);
        gbc.writeMem(0x3de6, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x9fb7);
        EXPECT(gbc.pc(), 0x3de8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DC 0040
        gbc.setState(0x9913, 0xa54f, 0x7be0, 0xf31a, 0x80f3, 0x9344, 0x0, 0x1);
        gbc.writeMem(0x9913, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xa54f);
        EXPECT(gbc.pc(), 0x9915);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9913), 0xcb);
        EXPECT(gbc.readMem(0x9914), 0xdc);
        // CB DC 0041
        gbc.setState(0x8bf5, 0xc104, 0xe270, 0x96f4, 0x44ad, 0x1e59, 0x1, 0x0);
        gbc.writeMem(0x8bf5, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0xc104);
        EXPECT(gbc.pc(), 0x8bf7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8bf5), 0xcb);
        EXPECT(gbc.readMem(0x8bf6), 0xdc);
        // CB DC 0042
        gbc.setState(0x816a, 0xa44, 0xb90, 0xc1b9, 0xd29e, 0x43f0, 0x0, 0x1);
        gbc.writeMem(0x816a, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0xa44);
        EXPECT(gbc.pc(), 0x816c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x816a), 0xcb);
        EXPECT(gbc.readMem(0x816b), 0xdc);
        // CB DC 0043
        gbc.setState(0x105f, 0x57e1, 0xb490, 0x3136, 0xba94, 0x2d07, 0x1, 0x0);
        gbc.writeMem(0x105f, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x57e1);
        EXPECT(gbc.pc(), 0x1061);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DC 0044
        gbc.setState(0xdf18, 0xa092, 0xc670, 0x5aeb, 0xc697, 0x8c33, 0x1, 0x1);
        gbc.writeMem(0xdf18, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0xa092);
        EXPECT(gbc.pc(), 0xdf1a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdf18), 0xcb);
        EXPECT(gbc.readMem(0xdf19), 0xdc);
        // CB DC 0045
        gbc.setState(0xc4a5, 0x34a5, 0xfa90, 0xe94e, 0x2ec2, 0xc420, 0x0, 0x0);
        gbc.writeMem(0xc4a5, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x34a5);
        EXPECT(gbc.pc(), 0xc4a7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc4a5), 0xcb);
        EXPECT(gbc.readMem(0xc4a6), 0xdc);
        // CB DC 0046
        gbc.setState(0xc687, 0xd001, 0xaba0, 0xb014, 0x6ee5, 0x1d93, 0x1, 0x1);
        gbc.writeMem(0xc687, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0xd001);
        EXPECT(gbc.pc(), 0xc689);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc687), 0xcb);
        EXPECT(gbc.readMem(0xc688), 0xdc);
        // CB DC 0047
        gbc.setState(0x4841, 0x6e45, 0x7780, 0x95da, 0x1ff1, 0x9b37, 0x0, 0x1);
        gbc.writeMem(0x4841, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x6e45);
        EXPECT(gbc.pc(), 0x4843);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DC 0048
        gbc.setState(0xb680, 0x75e, 0xd3f0, 0x3c55, 0xc757, 0x6653, 0x1, 0x1);
        gbc.writeMem(0xb680, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x75e);
        EXPECT(gbc.pc(), 0xb682);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb680), 0xcb);
        EXPECT(gbc.readMem(0xb681), 0xdc);
        // CB DC 0049
        gbc.setState(0x9ff4, 0xbd4, 0x5200, 0x21f2, 0x25c3, 0xe720, 0x1, 0x0);
        gbc.writeMem(0x9ff4, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0xbd4);
        EXPECT(gbc.pc(), 0x9ff6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9ff4), 0xcb);
        EXPECT(gbc.readMem(0x9ff5), 0xdc);
        // CB DC 004A
        gbc.setState(0xda59, 0x21c4, 0x8b0, 0xd0ce, 0x868c, 0x3ace, 0x1, 0x1);
        gbc.writeMem(0xda59, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x21c4);
        EXPECT(gbc.pc(), 0xda5b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xda59), 0xcb);
        EXPECT(gbc.readMem(0xda5a), 0xdc);
        // CB DC 004B
        gbc.setState(0xefd1, 0x9c8, 0xbed0, 0x7eca, 0x635a, 0x6c38, 0x1, 0x1);
        gbc.writeMem(0xefd1, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x9c8);
        EXPECT(gbc.pc(), 0xefd3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xefd1), 0xcb);
        EXPECT(gbc.readMem(0xefd2), 0xdc);
        // CB DC 004C
        gbc.setState(0x6878, 0x1a00, 0xda60, 0x785b, 0xbce5, 0xa536, 0x0, 0x0);
        gbc.writeMem(0x6878, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x1a00);
        EXPECT(gbc.pc(), 0x687a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DC 004D
        gbc.setState(0x4628, 0x3fa5, 0xfbd0, 0x4790, 0x2d2, 0x5301, 0x1, 0x0);
        gbc.writeMem(0x4628, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x3fa5);
        EXPECT(gbc.pc(), 0x462a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DC 0050
        gbc.setState(0x56ba, 0xe961, 0x5780, 0x2eb5, 0x38b2, 0x5e70, 0x0, 0x0);
        gbc.writeMem(0x56ba, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0xe961);
        EXPECT(gbc.pc(), 0x56bc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DC 0051
        gbc.setState(0x6611, 0x7266, 0x9ab0, 0x64e, 0x16f, 0x138c, 0x1, 0x1);
        gbc.writeMem(0x6611, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x7266);
        EXPECT(gbc.pc(), 0x6613);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DC 0052
        gbc.setState(0x433b, 0x5cbb, 0xdf70, 0x8efd, 0x271a, 0xe309, 0x1, 0x1);
        gbc.writeMem(0x433b, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x5cbb);
        EXPECT(gbc.pc(), 0x433d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DC 0053
        gbc.setState(0x5756, 0x3f87, 0xff40, 0xc5a4, 0x2e6b, 0xe125, 0x0, 0x0);
        gbc.writeMem(0x5756, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x3f87);
        EXPECT(gbc.pc(), 0x5758);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DC 0054
        gbc.setState(0x2abf, 0x4785, 0x4f40, 0x466f, 0xf165, 0x6d55, 0x1, 0x1);
        gbc.writeMem(0x2abf, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x4785);
        EXPECT(gbc.pc(), 0x2ac1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DC 0055
        gbc.setState(0x26d2, 0xfc21, 0xc990, 0x1830, 0x36ee, 0xb26a, 0x0, 0x0);
        gbc.writeMem(0x26d2, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xfc21);
        EXPECT(gbc.pc(), 0x26d4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DC 0056
        gbc.setState(0x3364, 0x9bdb, 0xc4b0, 0x8ad2, 0xdb92, 0x42fb, 0x1, 0x0);
        gbc.writeMem(0x3364, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x9bdb);
        EXPECT(gbc.pc(), 0x3366);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DC 0057
        gbc.setState(0xa15a, 0xac10, 0x2690, 0xacd7, 0x641, 0x10b1, 0x1, 0x1);
        gbc.writeMem(0xa15a, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0xac10);
        EXPECT(gbc.pc(), 0xa15c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa15a), 0xcb);
        EXPECT(gbc.readMem(0xa15b), 0xdc);
        // CB DC 0059
        gbc.setState(0xa2d, 0x3bd6, 0xbe70, 0xdda4, 0x7c63, 0xda17, 0x0, 0x1);
        gbc.writeMem(0xa2d, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x3bd6);
        EXPECT(gbc.pc(), 0xa2f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DC 005A
        gbc.setState(0x1629, 0x253e, 0x9530, 0xc7f4, 0x69ef, 0xe95f, 0x1, 0x1);
        gbc.writeMem(0x1629, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x253e);
        EXPECT(gbc.pc(), 0x162b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DC 005C
        gbc.setState(0xc1c1, 0xbbd4, 0x45e0, 0xf237, 0x8e2d, 0xdb01, 0x1, 0x1);
        gbc.writeMem(0xc1c1, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0xbbd4);
        EXPECT(gbc.pc(), 0xc1c3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc1c1), 0xcb);
        EXPECT(gbc.readMem(0xc1c2), 0xdc);
        // CB DC 005D
        gbc.setState(0x8823, 0x1c35, 0xe840, 0x5d57, 0xf09a, 0x4ac9, 0x0, 0x0);
        gbc.writeMem(0x8823, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x1c35);
        EXPECT(gbc.pc(), 0x8825);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8823), 0xcb);
        EXPECT(gbc.readMem(0x8824), 0xdc);
        // CB DC 005E
        gbc.setState(0x359d, 0xe0fa, 0xc3e0, 0x509, 0xa0a4, 0x6896, 0x0, 0x0);
        gbc.writeMem(0x359d, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0xe0fa);
        EXPECT(gbc.pc(), 0x359f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DC 005F
        gbc.setState(0x2b14, 0xbcdb, 0x89a0, 0xeb1a, 0x10e6, 0x9791, 0x1, 0x1);
        gbc.writeMem(0x2b14, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0xbcdb);
        EXPECT(gbc.pc(), 0x2b16);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DC 0060
        gbc.setState(0x64b6, 0xcb22, 0x1130, 0x551d, 0x63df, 0xc558, 0x1, 0x0);
        gbc.writeMem(0x64b6, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0xcb22);
        EXPECT(gbc.pc(), 0x64b8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DC 0061
        gbc.setState(0x462b, 0x66a6, 0x5470, 0x3f92, 0x7c9b, 0xc053, 0x0, 0x0);
        gbc.writeMem(0x462b, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x66a6);
        EXPECT(gbc.pc(), 0x462d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DC 0062
        gbc.setState(0x9cb4, 0xe8e9, 0x8f20, 0x6252, 0x5970, 0xb7de, 0x1, 0x0);
        gbc.writeMem(0x9cb4, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0xe8e9);
        EXPECT(gbc.pc(), 0x9cb6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9cb4), 0xcb);
        EXPECT(gbc.readMem(0x9cb5), 0xdc);
        // CB DC 0063
        gbc.setState(0x7952, 0x7e1d, 0xca10, 0x6d9, 0x718c, 0xc91a, 0x1, 0x1);
        gbc.writeMem(0x7952, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x7e1d);
        EXPECT(gbc.pc(), 0x7954);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DC 0065
        gbc.setState(0x5479, 0x30a5, 0xdbd0, 0xb7a9, 0x1c31, 0xbdef, 0x0, 0x1);
        gbc.writeMem(0x5479, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x30a5);
        EXPECT(gbc.pc(), 0x547b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DC 0066
        gbc.setState(0x8852, 0xbfac, 0xb0e0, 0x3689, 0xf571, 0xbd74, 0x1, 0x0);
        gbc.writeMem(0x8852, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xbfac);
        EXPECT(gbc.pc(), 0x8854);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8852), 0xcb);
        EXPECT(gbc.readMem(0x8853), 0xdc);
        // CB DC 0067
        gbc.setState(0xca93, 0xcb33, 0xb3d0, 0x9282, 0x9cbe, 0x89a2, 0x1, 0x1);
        gbc.writeMem(0xca93, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0xcb33);
        EXPECT(gbc.pc(), 0xca95);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xca93), 0xcb);
        EXPECT(gbc.readMem(0xca94), 0xdc);
        // CB DC 0068
        gbc.setState(0xc54, 0x55ef, 0x9960, 0x1a4e, 0x5282, 0xed4e, 0x0, 0x0);
        gbc.writeMem(0xc54, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x55ef);
        EXPECT(gbc.pc(), 0xc56);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DC 0069
        gbc.setState(0xb3c, 0xc435, 0x9c30, 0x93b0, 0xcce1, 0xf08f, 0x1, 0x1);
        gbc.writeMem(0xb3c, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xc435);
        EXPECT(gbc.pc(), 0xb3e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DC 006B
        gbc.setState(0x1bbc, 0x4940, 0xa270, 0xe309, 0xefc, 0x38cf, 0x1, 0x0);
        gbc.writeMem(0x1bbc, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x4940);
        EXPECT(gbc.pc(), 0x1bbe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DC 006C
        gbc.setState(0x4d62, 0x68e2, 0x6f90, 0xa60b, 0x8d43, 0x2e15, 0x1, 0x0);
        gbc.writeMem(0x4d62, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x68e2);
        EXPECT(gbc.pc(), 0x4d64);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DC 006D
        gbc.setState(0x2413, 0xad54, 0x5e00, 0x14b2, 0xb869, 0xd7ce, 0x1, 0x1);
        gbc.writeMem(0x2413, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0xad54);
        EXPECT(gbc.pc(), 0x2415);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DC 006E
        gbc.setState(0x18ab, 0x766e, 0x7800, 0xe974, 0xfae1, 0x975, 0x1, 0x0);
        gbc.writeMem(0x18ab, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x766e);
        EXPECT(gbc.pc(), 0x18ad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DC 006F
        gbc.setState(0xb056, 0xc6c, 0xdde0, 0xf3a5, 0x1d19, 0x7a90, 0x1, 0x1);
        gbc.writeMem(0xb056, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0xc6c);
        EXPECT(gbc.pc(), 0xb058);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb056), 0xcb);
        EXPECT(gbc.readMem(0xb057), 0xdc);
        // CB DC 0071
        gbc.setState(0xd88, 0x441e, 0x4470, 0x6ce2, 0x27e8, 0x9c1c, 0x1, 0x1);
        gbc.writeMem(0xd88, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x441e);
        EXPECT(gbc.pc(), 0xd8a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DC 0072
        gbc.setState(0x959a, 0xa0a9, 0x45f0, 0x95e0, 0x3cf4, 0xbf48, 0x0, 0x1);
        gbc.writeMem(0x959a, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0xa0a9);
        EXPECT(gbc.pc(), 0x959c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x959a), 0xcb);
        EXPECT(gbc.readMem(0x959b), 0xdc);
        // CB DC 0073
        gbc.setState(0xeea6, 0x94c2, 0xf550, 0x9a0b, 0xc698, 0xae96, 0x0, 0x0);
        gbc.writeMem(0xeea6, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x94c2);
        EXPECT(gbc.pc(), 0xeea8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeea6), 0xcb);
        EXPECT(gbc.readMem(0xeea7), 0xdc);
        // CB DC 0074
        gbc.setState(0x7f97, 0x57ee, 0xf8d0, 0x650c, 0x10aa, 0x3e02, 0x1, 0x1);
        gbc.writeMem(0x7f97, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x57ee);
        EXPECT(gbc.pc(), 0x7f99);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DC 0075
        gbc.setState(0x11ba, 0xfa, 0xb620, 0x92e7, 0x8d91, 0xc9be, 0x1, 0x0);
        gbc.writeMem(0x11ba, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0xfa);
        EXPECT(gbc.pc(), 0x11bc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DC 0076
        gbc.setState(0x281f, 0x4496, 0x9000, 0x32f2, 0xaa16, 0xb2c6, 0x0, 0x1);
        gbc.writeMem(0x281f, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x4496);
        EXPECT(gbc.pc(), 0x2821);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DC 0077
        gbc.setState(0x800d, 0x6dba, 0xebc0, 0x74c2, 0x4fc0, 0x1ca5, 0x1, 0x0);
        gbc.writeMem(0x800d, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x6dba);
        EXPECT(gbc.pc(), 0x800f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x800d), 0xcb);
        EXPECT(gbc.readMem(0x800e), 0xdc);
        // CB DC 0078
        gbc.setState(0xcd3f, 0x9083, 0x1e80, 0x93ea, 0x9136, 0x6af9, 0x1, 0x1);
        gbc.writeMem(0xcd3f, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x9083);
        EXPECT(gbc.pc(), 0xcd41);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcd3f), 0xcb);
        EXPECT(gbc.readMem(0xcd40), 0xdc);
        // CB DC 0079
        gbc.setState(0x9f1, 0x735a, 0x8530, 0x3fe9, 0xff55, 0x14ab, 0x0, 0x0);
        gbc.writeMem(0x9f1, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x735a);
        EXPECT(gbc.pc(), 0x9f3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DC 007A
        gbc.setState(0x79dd, 0x35d6, 0x30a0, 0xb3c, 0xec86, 0x2864, 0x0, 0x1);
        gbc.writeMem(0x79dd, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x35d6);
        EXPECT(gbc.pc(), 0x79df);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DC 007B
        gbc.setState(0x8bbc, 0x76a2, 0x8a60, 0x6f1a, 0xdb99, 0x1277, 0x1, 0x1);
        gbc.writeMem(0x8bbc, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x76a2);
        EXPECT(gbc.pc(), 0x8bbe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8bbc), 0xcb);
        EXPECT(gbc.readMem(0x8bbd), 0xdc);
        // CB DC 007C
        gbc.setState(0xece8, 0x1680, 0x15a0, 0x2b36, 0xfcf, 0x9ebd, 0x0, 0x0);
        gbc.writeMem(0xece8, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x1680);
        EXPECT(gbc.pc(), 0xecea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xece8), 0xcb);
        EXPECT(gbc.readMem(0xece9), 0xdc);
        // CB DC 007D
        gbc.setState(0x3551, 0x9cbb, 0x1060, 0x3034, 0xe5d9, 0xe835, 0x1, 0x1);
        gbc.writeMem(0x3551, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x9cbb);
        EXPECT(gbc.pc(), 0x3553);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DC 007E
        gbc.setState(0x195, 0x39ad, 0x40f0, 0x5d53, 0x259a, 0x4480, 0x0, 0x0);
        gbc.writeMem(0x195, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x39ad);
        EXPECT(gbc.pc(), 0x197);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DC 007F
        gbc.setState(0x53a9, 0x1dd, 0x5990, 0xa303, 0x2416, 0xb80f, 0x0, 0x0);
        gbc.writeMem(0x53a9, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x1dd);
        EXPECT(gbc.pc(), 0x53ab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DC 0080
        gbc.setState(0xeefa, 0x535c, 0x88d0, 0x3304, 0xda3, 0xd313, 0x1, 0x0);
        gbc.writeMem(0xeefa, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x535c);
        EXPECT(gbc.pc(), 0xeefc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeefa), 0xcb);
        EXPECT(gbc.readMem(0xeefb), 0xdc);
        // CB DC 0081
        gbc.setState(0x1bec, 0x28b, 0xbf0, 0x2c8, 0xa4b5, 0xfe9e, 0x0, 0x1);
        gbc.writeMem(0x1bec, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x28b);
        EXPECT(gbc.pc(), 0x1bee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DC 0082
        gbc.setState(0x374e, 0xd9ed, 0xb650, 0x218a, 0xae85, 0xbdb8, 0x0, 0x1);
        gbc.writeMem(0x374e, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0xd9ed);
        EXPECT(gbc.pc(), 0x3750);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DC 0083
        gbc.setState(0x7669, 0x7af0, 0x96d0, 0x3930, 0x8ec3, 0xc9de, 0x0, 0x0);
        gbc.writeMem(0x7669, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x7af0);
        EXPECT(gbc.pc(), 0x766b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DC 0084
        gbc.setState(0x17b5, 0xdb2a, 0xe5c0, 0x1da2, 0x2ad, 0xa69c, 0x0, 0x0);
        gbc.writeMem(0x17b5, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0xdb2a);
        EXPECT(gbc.pc(), 0x17b7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DC 0085
        gbc.setState(0x98dd, 0xbbbc, 0x92d0, 0xd301, 0xc07a, 0xfdaf, 0x1, 0x1);
        gbc.writeMem(0x98dd, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0xbbbc);
        EXPECT(gbc.pc(), 0x98df);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x98dd), 0xcb);
        EXPECT(gbc.readMem(0x98de), 0xdc);
        // CB DC 0086
        gbc.setState(0xb73b, 0x2ea7, 0x8a80, 0x3fc4, 0x2117, 0x5356, 0x1, 0x1);
        gbc.writeMem(0xb73b, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x2ea7);
        EXPECT(gbc.pc(), 0xb73d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb73b), 0xcb);
        EXPECT(gbc.readMem(0xb73c), 0xdc);
        // CB DC 0087
        gbc.setState(0xad79, 0x54fa, 0x9400, 0x9572, 0x1645, 0x2fd7, 0x0, 0x1);
        gbc.writeMem(0xad79, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x54fa);
        EXPECT(gbc.pc(), 0xad7b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xad79), 0xcb);
        EXPECT(gbc.readMem(0xad7a), 0xdc);
        // CB DC 0088
        gbc.setState(0x77f, 0x3ed2, 0x7cf0, 0x4b49, 0x2ba6, 0xcf23, 0x1, 0x1);
        gbc.writeMem(0x77f, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x3ed2);
        EXPECT(gbc.pc(), 0x781);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DC 0089
        gbc.setState(0x8690, 0x3950, 0x5ac0, 0x5dfd, 0xc1fb, 0x7062, 0x0, 0x1);
        gbc.writeMem(0x8690, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x3950);
        EXPECT(gbc.pc(), 0x8692);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8690), 0xcb);
        EXPECT(gbc.readMem(0x8691), 0xdc);
        // CB DC 008A
        gbc.setState(0x6141, 0xa5b0, 0xf670, 0x8968, 0xcf47, 0x71c2, 0x1, 0x1);
        gbc.writeMem(0x6141, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0xa5b0);
        EXPECT(gbc.pc(), 0x6143);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DC 008B
        gbc.setState(0x5d13, 0xa88, 0x8ca0, 0x69c, 0x910b, 0x2c83, 0x1, 0x0);
        gbc.writeMem(0x5d13, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0xa88);
        EXPECT(gbc.pc(), 0x5d15);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DC 008C
        gbc.setState(0x65ef, 0xb818, 0x28d0, 0xa0c4, 0x8952, 0x92e5, 0x0, 0x0);
        gbc.writeMem(0x65ef, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xb818);
        EXPECT(gbc.pc(), 0x65f1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DC 008D
        gbc.setState(0xec40, 0xf6c1, 0xc9a0, 0x8402, 0x8827, 0xcbce, 0x1, 0x1);
        gbc.writeMem(0xec40, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0xf6c1);
        EXPECT(gbc.pc(), 0xec42);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xec40), 0xcb);
        EXPECT(gbc.readMem(0xec41), 0xdc);
        // CB DC 008E
        gbc.setState(0x7448, 0x290e, 0x8df0, 0x2db7, 0xc76d, 0xb1ef, 0x0, 0x0);
        gbc.writeMem(0x7448, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x290e);
        EXPECT(gbc.pc(), 0x744a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DC 008F
        gbc.setState(0xa31a, 0x3776, 0xe180, 0x9085, 0xf588, 0x38e7, 0x1, 0x1);
        gbc.writeMem(0xa31a, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x3776);
        EXPECT(gbc.pc(), 0xa31c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa31a), 0xcb);
        EXPECT(gbc.readMem(0xa31b), 0xdc);
        // CB DC 0090
        gbc.setState(0x270d, 0x8d41, 0x1e0, 0xde21, 0x32d1, 0x8469, 0x1, 0x0);
        gbc.writeMem(0x270d, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x8d41);
        EXPECT(gbc.pc(), 0x270f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DC 0091
        gbc.setState(0x76eb, 0xbf8b, 0x3330, 0x46a1, 0xe27f, 0xb12e, 0x0, 0x0);
        gbc.writeMem(0x76eb, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xbf8b);
        EXPECT(gbc.pc(), 0x76ed);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DC 0092
        gbc.setState(0x95e2, 0x845b, 0xe150, 0x907d, 0x4f4d, 0x75ac, 0x0, 0x0);
        gbc.writeMem(0x95e2, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x845b);
        EXPECT(gbc.pc(), 0x95e4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x95e2), 0xcb);
        EXPECT(gbc.readMem(0x95e3), 0xdc);
        // CB DC 0093
        gbc.setState(0xc3c3, 0x1c58, 0x85d0, 0xcd5, 0xe04b, 0x26db, 0x1, 0x0);
        gbc.writeMem(0xc3c3, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x1c58);
        EXPECT(gbc.pc(), 0xc3c5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc3c3), 0xcb);
        EXPECT(gbc.readMem(0xc3c4), 0xdc);
        // CB DC 0094
        gbc.setState(0x1450, 0xe7d0, 0x35b0, 0x5615, 0x5634, 0xcbfd, 0x1, 0x1);
        gbc.writeMem(0x1450, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xe7d0);
        EXPECT(gbc.pc(), 0x1452);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DC 0095
        gbc.setState(0x314c, 0xeb29, 0x4830, 0xbb5a, 0x5ad5, 0xbf3d, 0x0, 0x1);
        gbc.writeMem(0x314c, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0xeb29);
        EXPECT(gbc.pc(), 0x314e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DC 0096
        gbc.setState(0x3ba4, 0x627d, 0xf420, 0x7b0e, 0x34b9, 0xdc01, 0x0, 0x1);
        gbc.writeMem(0x3ba4, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x627d);
        EXPECT(gbc.pc(), 0x3ba6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DC 0097
        gbc.setState(0xe20c, 0xd211, 0x6760, 0xfb8d, 0x581a, 0x2038, 0x1, 0x0);
        gbc.writeMem(0xe20c, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0xd211);
        EXPECT(gbc.pc(), 0xe20e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe20c), 0xcb);
        EXPECT(gbc.readMem(0xe20d), 0xdc);
        // CB DC 0098
        gbc.setState(0xde7d, 0x9886, 0xb630, 0x6333, 0xd4c3, 0xe9a6, 0x1, 0x1);
        gbc.writeMem(0xde7d, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x9886);
        EXPECT(gbc.pc(), 0xde7f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xde7d), 0xcb);
        EXPECT(gbc.readMem(0xde7e), 0xdc);
        // CB DC 0099
        gbc.setState(0xe903, 0x2d2c, 0xa000, 0x1147, 0xb8e2, 0x804c, 0x1, 0x0);
        gbc.writeMem(0xe903, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x2d2c);
        EXPECT(gbc.pc(), 0xe905);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe903), 0xcb);
        EXPECT(gbc.readMem(0xe904), 0xdc);
        // CB DC 009A
        gbc.setState(0x2e2e, 0xb7bc, 0x38d0, 0x343d, 0x5049, 0x9b, 0x0, 0x1);
        gbc.writeMem(0x2e2e, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0xb7bc);
        EXPECT(gbc.pc(), 0x2e30);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DC 009B
        gbc.setState(0x71c9, 0x585b, 0xb770, 0xdf7e, 0x99cb, 0x568a, 0x1, 0x0);
        gbc.writeMem(0x71c9, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x585b);
        EXPECT(gbc.pc(), 0x71cb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DC 009C
        gbc.setState(0xebc0, 0xbc16, 0xfb50, 0xab75, 0x858b, 0x7589, 0x1, 0x1);
        gbc.writeMem(0xebc0, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0xbc16);
        EXPECT(gbc.pc(), 0xebc2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xebc0), 0xcb);
        EXPECT(gbc.readMem(0xebc1), 0xdc);
        // CB DC 009D
        gbc.setState(0xa821, 0xf4ca, 0x2860, 0xc9fd, 0xab02, 0x4cb2, 0x1, 0x0);
        gbc.writeMem(0xa821, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0xf4ca);
        EXPECT(gbc.pc(), 0xa823);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa821), 0xcb);
        EXPECT(gbc.readMem(0xa822), 0xdc);
        // CB DC 009E
        gbc.setState(0xbbc3, 0xde07, 0x7ad0, 0xec6e, 0x13f8, 0x4575, 0x1, 0x1);
        gbc.writeMem(0xbbc3, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xde07);
        EXPECT(gbc.pc(), 0xbbc5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbbc3), 0xcb);
        EXPECT(gbc.readMem(0xbbc4), 0xdc);
        // CB DC 009F
        gbc.setState(0x4bbd, 0x27c1, 0xbae0, 0x7035, 0x249d, 0x77a2, 0x1, 0x0);
        gbc.writeMem(0x4bbd, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x27c1);
        EXPECT(gbc.pc(), 0x4bbf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DC 00A0
        gbc.setState(0x49c, 0xd8a5, 0xf9a0, 0x1231, 0xcddc, 0xe3b4, 0x1, 0x0);
        gbc.writeMem(0x49c, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xd8a5);
        EXPECT(gbc.pc(), 0x49e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DC 00A1
        gbc.setState(0x411e, 0x2f7c, 0x14b0, 0xa10c, 0x84a3, 0x1672, 0x0, 0x1);
        gbc.writeMem(0x411e, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x2f7c);
        EXPECT(gbc.pc(), 0x4120);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DC 00A2
        gbc.setState(0x8178, 0xa621, 0x5ec0, 0xa6f8, 0x9136, 0x6f85, 0x1, 0x0);
        gbc.writeMem(0x8178, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0xa621);
        EXPECT(gbc.pc(), 0x817a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8178), 0xcb);
        EXPECT(gbc.readMem(0x8179), 0xdc);
        // CB DC 00A3
        gbc.setState(0x4b4e, 0x28c7, 0xf60, 0x9a57, 0x9646, 0x21e7, 0x1, 0x1);
        gbc.writeMem(0x4b4e, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x28c7);
        EXPECT(gbc.pc(), 0x4b50);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DC 00A4
        gbc.setState(0xd211, 0x4dbb, 0x2010, 0x6e04, 0xc082, 0xc525, 0x0, 0x1);
        gbc.writeMem(0xd211, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x4dbb);
        EXPECT(gbc.pc(), 0xd213);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd211), 0xcb);
        EXPECT(gbc.readMem(0xd212), 0xdc);
        // CB DC 00A5
        gbc.setState(0x328a, 0xb621, 0x6810, 0xeff9, 0x367f, 0x3601, 0x0, 0x1);
        gbc.writeMem(0x328a, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0xb621);
        EXPECT(gbc.pc(), 0x328c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DC 00A6
        gbc.setState(0xb6fc, 0x3d3f, 0xbb40, 0x826f, 0x10d8, 0xb397, 0x0, 0x0);
        gbc.writeMem(0xb6fc, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x3d3f);
        EXPECT(gbc.pc(), 0xb6fe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb6fc), 0xcb);
        EXPECT(gbc.readMem(0xb6fd), 0xdc);
        // CB DC 00A7
        gbc.setState(0x2e2f, 0x60ed, 0x1bb0, 0x34fe, 0x4cf4, 0x7046, 0x0, 0x1);
        gbc.writeMem(0x2e2f, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x60ed);
        EXPECT(gbc.pc(), 0x2e31);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DC 00A8
        gbc.setState(0xc58d, 0x1076, 0xa880, 0xa7de, 0xd92b, 0x2e74, 0x1, 0x0);
        gbc.writeMem(0xc58d, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x1076);
        EXPECT(gbc.pc(), 0xc58f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc58d), 0xcb);
        EXPECT(gbc.readMem(0xc58e), 0xdc);
        // CB DC 00A9
        gbc.setState(0x15d3, 0xd0c9, 0x2690, 0x8df9, 0x3113, 0xe698, 0x1, 0x0);
        gbc.writeMem(0x15d3, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xd0c9);
        EXPECT(gbc.pc(), 0x15d5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DC 00AA
        gbc.setState(0x14e4, 0xc4d3, 0xa2a0, 0x7e3e, 0x3d35, 0xaed7, 0x0, 0x1);
        gbc.writeMem(0x14e4, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0xc4d3);
        EXPECT(gbc.pc(), 0x14e6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DC 00AB
        gbc.setState(0x20eb, 0xe030, 0xe830, 0xfbcd, 0x9ee1, 0x98ba, 0x1, 0x0);
        gbc.writeMem(0x20eb, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0xe030);
        EXPECT(gbc.pc(), 0x20ed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DC 00AC
        gbc.setState(0xb775, 0x809b, 0x8e90, 0x82e9, 0x353e, 0x528a, 0x0, 0x0);
        gbc.writeMem(0xb775, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x809b);
        EXPECT(gbc.pc(), 0xb777);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb775), 0xcb);
        EXPECT(gbc.readMem(0xb776), 0xdc);
        // CB DC 00AD
        gbc.setState(0xb551, 0x582c, 0x7760, 0xa583, 0x8ea8, 0x2fb8, 0x1, 0x1);
        gbc.writeMem(0xb551, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x582c);
        EXPECT(gbc.pc(), 0xb553);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb551), 0xcb);
        EXPECT(gbc.readMem(0xb552), 0xdc);
        // CB DC 00AE
        gbc.setState(0xc121, 0xf848, 0xaa40, 0x6cf5, 0xd938, 0x86ae, 0x0, 0x0);
        gbc.writeMem(0xc121, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0xf848);
        EXPECT(gbc.pc(), 0xc123);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc121), 0xcb);
        EXPECT(gbc.readMem(0xc122), 0xdc);
        // CB DC 00AF
        gbc.setState(0xe49, 0xa985, 0x87e0, 0xd01e, 0x44a, 0xb559, 0x0, 0x0);
        gbc.writeMem(0xe49, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0xa985);
        EXPECT(gbc.pc(), 0xe4b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DC 00B0
        gbc.setState(0x2116, 0x9190, 0x6dc0, 0xddc0, 0x3c48, 0xb454, 0x1, 0x0);
        gbc.writeMem(0x2116, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x9190);
        EXPECT(gbc.pc(), 0x2118);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DC 00B1
        gbc.setState(0xaa76, 0x8f97, 0x8ef0, 0xc269, 0x2bb8, 0xe073, 0x0, 0x0);
        gbc.writeMem(0xaa76, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x8f97);
        EXPECT(gbc.pc(), 0xaa78);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaa76), 0xcb);
        EXPECT(gbc.readMem(0xaa77), 0xdc);
        // CB DC 00B2
        gbc.setState(0xa258, 0xb936, 0xea00, 0x86e9, 0x7921, 0xf6b3, 0x1, 0x0);
        gbc.writeMem(0xa258, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0xb936);
        EXPECT(gbc.pc(), 0xa25a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa258), 0xcb);
        EXPECT(gbc.readMem(0xa259), 0xdc);
        // CB DC 00B4
        gbc.setState(0x2f06, 0x3a23, 0x5fb0, 0x595c, 0x835f, 0x2921, 0x0, 0x0);
        gbc.writeMem(0x2f06, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x3a23);
        EXPECT(gbc.pc(), 0x2f08);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DC 00B5
        gbc.setState(0x262b, 0x9ffe, 0xdcc0, 0x25fd, 0x4898, 0x1657, 0x0, 0x1);
        gbc.writeMem(0x262b, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x9ffe);
        EXPECT(gbc.pc(), 0x262d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DC 00B6
        gbc.setState(0xdacf, 0x6898, 0x7bc0, 0xb46a, 0x4116, 0xcf76, 0x1, 0x0);
        gbc.writeMem(0xdacf, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x6898);
        EXPECT(gbc.pc(), 0xdad1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdacf), 0xcb);
        EXPECT(gbc.readMem(0xdad0), 0xdc);
        // CB DC 00B7
        gbc.setState(0xb304, 0x7ff7, 0x4940, 0xbb37, 0x7c46, 0x88e3, 0x1, 0x0);
        gbc.writeMem(0xb304, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x7ff7);
        EXPECT(gbc.pc(), 0xb306);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb304), 0xcb);
        EXPECT(gbc.readMem(0xb305), 0xdc);
        // CB DC 00B8
        gbc.setState(0xb280, 0xc54e, 0xf830, 0x5964, 0x9993, 0x1022, 0x1, 0x1);
        gbc.writeMem(0xb280, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0xc54e);
        EXPECT(gbc.pc(), 0xb282);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb280), 0xcb);
        EXPECT(gbc.readMem(0xb281), 0xdc);
        // CB DC 00B9
        gbc.setState(0xa526, 0xbeef, 0xe7b0, 0xc131, 0xc4bd, 0xf17f, 0x1, 0x1);
        gbc.writeMem(0xa526, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xbeef);
        EXPECT(gbc.pc(), 0xa528);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa526), 0xcb);
        EXPECT(gbc.readMem(0xa527), 0xdc);
        // CB DC 00BA
        gbc.setState(0x69e4, 0x450a, 0x3350, 0xd81b, 0x45bf, 0xe1d6, 0x1, 0x0);
        gbc.writeMem(0x69e4, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x450a);
        EXPECT(gbc.pc(), 0x69e6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DC 00BB
        gbc.setState(0x3f7d, 0x4ff9, 0x8030, 0x106b, 0x1605, 0xd2cc, 0x1, 0x0);
        gbc.writeMem(0x3f7d, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x4ff9);
        EXPECT(gbc.pc(), 0x3f7f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DC 00BC
        gbc.setState(0x67b, 0x7001, 0xad90, 0x3b7a, 0xee7c, 0xa901, 0x1, 0x1);
        gbc.writeMem(0x67b, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x7001);
        EXPECT(gbc.pc(), 0x67d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DC 00BD
        gbc.setState(0x5296, 0x3d65, 0xab60, 0x4454, 0xfa18, 0x6d09, 0x1, 0x1);
        gbc.writeMem(0x5296, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x3d65);
        EXPECT(gbc.pc(), 0x5298);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DC 00BE
        gbc.setState(0x7b08, 0x499d, 0xa090, 0xd5cc, 0x5c6f, 0x8fb4, 0x0, 0x1);
        gbc.writeMem(0x7b08, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x499d);
        EXPECT(gbc.pc(), 0x7b0a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DC 00BF
        gbc.setState(0xbb75, 0xbbf9, 0x6ae0, 0x338d, 0x6088, 0x6c1b, 0x1, 0x1);
        gbc.writeMem(0xbb75, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0xbbf9);
        EXPECT(gbc.pc(), 0xbb77);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbb75), 0xcb);
        EXPECT(gbc.readMem(0xbb76), 0xdc);
        // CB DC 00C0
        gbc.setState(0x4ded, 0x60a3, 0x80a0, 0x44f0, 0x9703, 0x8b40, 0x0, 0x1);
        gbc.writeMem(0x4ded, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x60a3);
        EXPECT(gbc.pc(), 0x4def);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DC 00C1
        gbc.setState(0x6387, 0x9b20, 0x3420, 0xa704, 0x2533, 0x86a0, 0x1, 0x0);
        gbc.writeMem(0x6387, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x9b20);
        EXPECT(gbc.pc(), 0x6389);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DC 00C2
        gbc.setState(0x495e, 0xec83, 0x22d0, 0x4558, 0x62d7, 0x57b0, 0x0, 0x1);
        gbc.writeMem(0x495e, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xec83);
        EXPECT(gbc.pc(), 0x4960);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DC 00C3
        gbc.setState(0xb9de, 0x3c76, 0x2c20, 0xb2a6, 0x662, 0x8353, 0x1, 0x0);
        gbc.writeMem(0xb9de, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x3c76);
        EXPECT(gbc.pc(), 0xb9e0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb9de), 0xcb);
        EXPECT(gbc.readMem(0xb9df), 0xdc);
        // CB DC 00C4
        gbc.setState(0x5f55, 0x71fb, 0x8510, 0x868e, 0x16bd, 0x4ab5, 0x0, 0x1);
        gbc.writeMem(0x5f55, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x71fb);
        EXPECT(gbc.pc(), 0x5f57);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DC 00C5
        gbc.setState(0x6be2, 0xfa8a, 0x1320, 0x3d38, 0x24d4, 0x92d6, 0x0, 0x0);
        gbc.writeMem(0x6be2, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0xfa8a);
        EXPECT(gbc.pc(), 0x6be4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DC 00C6
        gbc.setState(0x9926, 0x945e, 0x72d0, 0x9270, 0xc945, 0x1ce3, 0x1, 0x0);
        gbc.writeMem(0x9926, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x945e);
        EXPECT(gbc.pc(), 0x9928);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9926), 0xcb);
        EXPECT(gbc.readMem(0x9927), 0xdc);
        // CB DC 00C7
        gbc.setState(0xb3ad, 0xe333, 0xeba0, 0xbd7c, 0xb580, 0x6be5, 0x1, 0x1);
        gbc.writeMem(0xb3ad, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xe333);
        EXPECT(gbc.pc(), 0xb3af);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb3ad), 0xcb);
        EXPECT(gbc.readMem(0xb3ae), 0xdc);
        // CB DC 00C9
        gbc.setState(0x1358, 0x15cf, 0x7020, 0xb2cc, 0xb91, 0x9bc2, 0x0, 0x1);
        gbc.writeMem(0x1358, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x15cf);
        EXPECT(gbc.pc(), 0x135a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DC 00CA
        gbc.setState(0x652b, 0xe102, 0x61a0, 0x3294, 0x6dc5, 0x4d0a, 0x1, 0x1);
        gbc.writeMem(0x652b, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0xe102);
        EXPECT(gbc.pc(), 0x652d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DC 00CB
        gbc.setState(0x170f, 0x1d2b, 0x47e0, 0x7173, 0x549d, 0x8f10, 0x0, 0x1);
        gbc.writeMem(0x170f, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x1d2b);
        EXPECT(gbc.pc(), 0x1711);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DC 00CC
        gbc.setState(0xd03c, 0xb4f2, 0x7dc0, 0xa4ea, 0x5f9f, 0x81f, 0x0, 0x1);
        gbc.writeMem(0xd03c, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0xb4f2);
        EXPECT(gbc.pc(), 0xd03e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd03c), 0xcb);
        EXPECT(gbc.readMem(0xd03d), 0xdc);
        // CB DC 00CD
        gbc.setState(0x1013, 0xa0a, 0x53b0, 0x4cfd, 0x680e, 0xc837, 0x0, 0x0);
        gbc.writeMem(0x1013, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0xa0a);
        EXPECT(gbc.pc(), 0x1015);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DC 00CE
        gbc.setState(0xa42f, 0x934e, 0xd1a0, 0x5432, 0xb9a8, 0x557d, 0x0, 0x0);
        gbc.writeMem(0xa42f, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x934e);
        EXPECT(gbc.pc(), 0xa431);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa42f), 0xcb);
        EXPECT(gbc.readMem(0xa430), 0xdc);
        // CB DC 00CF
        gbc.setState(0x61ec, 0x18b2, 0x6710, 0x58a7, 0x64aa, 0xf270, 0x1, 0x1);
        gbc.writeMem(0x61ec, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x18b2);
        EXPECT(gbc.pc(), 0x61ee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DC 00D0
        gbc.setState(0x4d37, 0x2cd0, 0x3250, 0x867, 0x4f30, 0xcc21, 0x0, 0x0);
        gbc.writeMem(0x4d37, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x2cd0);
        EXPECT(gbc.pc(), 0x4d39);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DC 00D1
        gbc.setState(0xb5a6, 0xadb6, 0x8620, 0x6aa3, 0xeed2, 0x6fe8, 0x0, 0x0);
        gbc.writeMem(0xb5a6, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0xadb6);
        EXPECT(gbc.pc(), 0xb5a8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb5a6), 0xcb);
        EXPECT(gbc.readMem(0xb5a7), 0xdc);
        // CB DC 00D2
        gbc.setState(0x7668, 0xb6e3, 0x5730, 0xba82, 0x8587, 0x21b9, 0x0, 0x0);
        gbc.writeMem(0x7668, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0xb6e3);
        EXPECT(gbc.pc(), 0x766a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DC 00D3
        gbc.setState(0x4f2a, 0x8f96, 0xe270, 0x78cc, 0x421f, 0xe328, 0x0, 0x0);
        gbc.writeMem(0x4f2a, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x8f96);
        EXPECT(gbc.pc(), 0x4f2c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DC 00D4
        gbc.setState(0xcd03, 0x9702, 0xb5c0, 0x1e64, 0x5d4d, 0x5afe, 0x1, 0x1);
        gbc.writeMem(0xcd03, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x9702);
        EXPECT(gbc.pc(), 0xcd05);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcd03), 0xcb);
        EXPECT(gbc.readMem(0xcd04), 0xdc);
        // CB DC 00D5
        gbc.setState(0x4da2, 0xca9f, 0x5c50, 0x658c, 0xc8cd, 0xb630, 0x1, 0x1);
        gbc.writeMem(0x4da2, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0xca9f);
        EXPECT(gbc.pc(), 0x4da4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DC 00D6
        gbc.setState(0x9245, 0x4da9, 0xcd80, 0xf8a0, 0x20cf, 0x1096, 0x1, 0x0);
        gbc.writeMem(0x9245, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x4da9);
        EXPECT(gbc.pc(), 0x9247);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9245), 0xcb);
        EXPECT(gbc.readMem(0x9246), 0xdc);
        // CB DC 00D7
        gbc.setState(0xcc49, 0x10b0, 0x9d50, 0x866c, 0x3e09, 0x3cf, 0x1, 0x0);
        gbc.writeMem(0xcc49, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x10b0);
        EXPECT(gbc.pc(), 0xcc4b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcc49), 0xcb);
        EXPECT(gbc.readMem(0xcc4a), 0xdc);
        // CB DC 00D8
        gbc.setState(0x2f37, 0x222, 0xa1c0, 0x93d5, 0xf4b, 0x6f67, 0x1, 0x1);
        gbc.writeMem(0x2f37, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x222);
        EXPECT(gbc.pc(), 0x2f39);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DC 00D9
        gbc.setState(0x7f16, 0x8811, 0x87e0, 0x62e2, 0xa70c, 0xbaf5, 0x0, 0x0);
        gbc.writeMem(0x7f16, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x8811);
        EXPECT(gbc.pc(), 0x7f18);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DC 00DA
        gbc.setState(0x439, 0xf571, 0xb810, 0x7c1a, 0xe1ab, 0xf510, 0x1, 0x1);
        gbc.writeMem(0x439, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xf571);
        EXPECT(gbc.pc(), 0x43b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DC 00DC
        gbc.setState(0x9af6, 0x57aa, 0x4b0, 0x6e30, 0x210e, 0x7fc6, 0x1, 0x0);
        gbc.writeMem(0x9af6, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x57aa);
        EXPECT(gbc.pc(), 0x9af8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9af6), 0xcb);
        EXPECT(gbc.readMem(0x9af7), 0xdc);
        // CB DC 00DD
        gbc.setState(0x4d1, 0x23d4, 0x3740, 0xb39d, 0xc192, 0x4a5e, 0x0, 0x1);
        gbc.writeMem(0x4d1, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x23d4);
        EXPECT(gbc.pc(), 0x4d3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DC 00DE
        gbc.setState(0xd273, 0xe42, 0x7810, 0x5240, 0xcdf6, 0x53f8, 0x0, 0x0);
        gbc.writeMem(0xd273, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0xe42);
        EXPECT(gbc.pc(), 0xd275);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd273), 0xcb);
        EXPECT(gbc.readMem(0xd274), 0xdc);
        // CB DC 00DF
        gbc.setState(0xdb52, 0xc274, 0xd700, 0x73f6, 0x56a8, 0x7357, 0x0, 0x1);
        gbc.writeMem(0xdb52, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0xc274);
        EXPECT(gbc.pc(), 0xdb54);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdb52), 0xcb);
        EXPECT(gbc.readMem(0xdb53), 0xdc);
        // CB DC 00E0
        gbc.setState(0x23fe, 0xef87, 0x720, 0x695d, 0xb4b9, 0xd8a4, 0x1, 0x0);
        gbc.writeMem(0x23fe, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0xef87);
        EXPECT(gbc.pc(), 0x2400);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DC 00E1
        gbc.setState(0xe57, 0x23de, 0x490, 0x9fa1, 0x5035, 0xb649, 0x1, 0x1);
        gbc.writeMem(0xe57, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x23de);
        EXPECT(gbc.pc(), 0xe59);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DC 00E2
        gbc.setState(0x8edd, 0xe7ef, 0x2690, 0x853, 0xf343, 0xdaff, 0x0, 0x1);
        gbc.writeMem(0x8edd, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0xe7ef);
        EXPECT(gbc.pc(), 0x8edf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8edd), 0xcb);
        EXPECT(gbc.readMem(0x8ede), 0xdc);
        // CB DC 00E3
        gbc.setState(0xd724, 0x422f, 0xc4f0, 0xca54, 0xd695, 0xa07d, 0x1, 0x1);
        gbc.writeMem(0xd724, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x422f);
        EXPECT(gbc.pc(), 0xd726);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd724), 0xcb);
        EXPECT(gbc.readMem(0xd725), 0xdc);
        // CB DC 00E4
        gbc.setState(0x253d, 0x5a17, 0xca00, 0xe51c, 0x885d, 0xfd28, 0x1, 0x0);
        gbc.writeMem(0x253d, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x5a17);
        EXPECT(gbc.pc(), 0x253f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DC 00E5
        gbc.setState(0x807f, 0xf4eb, 0x4900, 0xcfc3, 0xee2d, 0xf6e0, 0x0, 0x0);
        gbc.writeMem(0x807f, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0xf4eb);
        EXPECT(gbc.pc(), 0x8081);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x807f), 0xcb);
        EXPECT(gbc.readMem(0x8080), 0xdc);
        // CB DC 00E6
        gbc.setState(0xb774, 0x57d, 0xfa00, 0x289f, 0xcb21, 0x6f87, 0x1, 0x1);
        gbc.writeMem(0xb774, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x57d);
        EXPECT(gbc.pc(), 0xb776);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb774), 0xcb);
        EXPECT(gbc.readMem(0xb775), 0xdc);
        // CB DC 00E7
        gbc.setState(0xa226, 0xf6ee, 0x8240, 0x8982, 0xb1e1, 0xe1e3, 0x1, 0x0);
        gbc.writeMem(0xa226, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xf6ee);
        EXPECT(gbc.pc(), 0xa228);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa226), 0xcb);
        EXPECT(gbc.readMem(0xa227), 0xdc);
        // CB DC 00E8
        gbc.setState(0xc570, 0x2417, 0xf7f0, 0x1bc9, 0x7973, 0x9404, 0x1, 0x1);
        gbc.writeMem(0xc570, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x2417);
        EXPECT(gbc.pc(), 0xc572);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc570), 0xcb);
        EXPECT(gbc.readMem(0xc571), 0xdc);
        // CB DC 00EA
        gbc.setState(0x1f4a, 0x3b80, 0xddd0, 0xe5d9, 0x740e, 0xa45f, 0x1, 0x0);
        gbc.writeMem(0x1f4a, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x3b80);
        EXPECT(gbc.pc(), 0x1f4c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DC 00EB
        gbc.setState(0x1012, 0x7f75, 0xc580, 0x9ada, 0xf081, 0x756a, 0x0, 0x1);
        gbc.writeMem(0x1012, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x7f75);
        EXPECT(gbc.pc(), 0x1014);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DC 00EC
        gbc.setState(0x9f8f, 0x5b01, 0xfc20, 0xd5db, 0x52a0, 0x1c33, 0x1, 0x0);
        gbc.writeMem(0x9f8f, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x5b01);
        EXPECT(gbc.pc(), 0x9f91);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9f8f), 0xcb);
        EXPECT(gbc.readMem(0x9f90), 0xdc);
        // CB DC 00ED
        gbc.setState(0xcbc0, 0xfb79, 0x31c0, 0x54b, 0xce6f, 0x4a04, 0x1, 0x1);
        gbc.writeMem(0xcbc0, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0xfb79);
        EXPECT(gbc.pc(), 0xcbc2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcbc0), 0xcb);
        EXPECT(gbc.readMem(0xcbc1), 0xdc);
        // CB DC 00EE
        gbc.setState(0x583e, 0x7d49, 0xe840, 0xd0e1, 0xc886, 0xbfa2, 0x0, 0x1);
        gbc.writeMem(0x583e, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x7d49);
        EXPECT(gbc.pc(), 0x5840);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DC 00EF
        gbc.setState(0x2144, 0xf3a1, 0xa9a0, 0xca20, 0x85ea, 0x181a, 0x0, 0x1);
        gbc.writeMem(0x2144, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0xf3a1);
        EXPECT(gbc.pc(), 0x2146);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DC 00F0
        gbc.setState(0x259d, 0xee20, 0xceb0, 0xc259, 0x348, 0xfe98, 0x1, 0x0);
        gbc.writeMem(0x259d, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xee20);
        EXPECT(gbc.pc(), 0x259f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DC 00F1
        gbc.setState(0x166d, 0x5d77, 0x5980, 0xcaab, 0xee9f, 0xbd6f, 0x1, 0x0);
        gbc.writeMem(0x166d, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x5d77);
        EXPECT(gbc.pc(), 0x166f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DC 00F2
        gbc.setState(0x9bd, 0x445e, 0x2800, 0x6fa1, 0xcd38, 0xd71b, 0x1, 0x1);
        gbc.writeMem(0x9bd, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x445e);
        EXPECT(gbc.pc(), 0x9bf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DC 00F3
        gbc.setState(0x3a35, 0xc374, 0x93c0, 0x6695, 0xe098, 0x433, 0x0, 0x1);
        gbc.writeMem(0x3a35, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0xc374);
        EXPECT(gbc.pc(), 0x3a37);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DC 00F4
        gbc.setState(0x8a92, 0xf02a, 0x1170, 0xf9bf, 0xdee6, 0x7f02, 0x0, 0x1);
        gbc.writeMem(0x8a92, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xf02a);
        EXPECT(gbc.pc(), 0x8a94);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8a92), 0xcb);
        EXPECT(gbc.readMem(0x8a93), 0xdc);
        // CB DC 00F6
        gbc.setState(0x73c, 0x5b31, 0xe670, 0x7da, 0x8322, 0x75b, 0x1, 0x0);
        gbc.writeMem(0x73c, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x5b31);
        EXPECT(gbc.pc(), 0x73e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DC 00F7
        gbc.setState(0xb6f4, 0x329f, 0xa730, 0x1af9, 0x3a69, 0xdd3d, 0x0, 0x1);
        gbc.writeMem(0xb6f4, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x329f);
        EXPECT(gbc.pc(), 0xb6f6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb6f4), 0xcb);
        EXPECT(gbc.readMem(0xb6f5), 0xdc);
        // CB DC 00F8
        gbc.setState(0x8ee3, 0x2e4b, 0x8300, 0x794c, 0xaec0, 0x651c, 0x1, 0x1);
        gbc.writeMem(0x8ee3, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x2e4b);
        EXPECT(gbc.pc(), 0x8ee5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ee3), 0xcb);
        EXPECT(gbc.readMem(0x8ee4), 0xdc);
        // CB DC 00F9
        gbc.setState(0xbcee, 0x384c, 0x6540, 0xa5c5, 0x658e, 0xa8e4, 0x1, 0x1);
        gbc.writeMem(0xbcee, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x384c);
        EXPECT(gbc.pc(), 0xbcf0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbcee), 0xcb);
        EXPECT(gbc.readMem(0xbcef), 0xdc);
        // CB DC 00FA
        gbc.setState(0x70d9, 0x85de, 0x1d0, 0x56f1, 0xac1a, 0xf891, 0x1, 0x0);
        gbc.writeMem(0x70d9, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x85de);
        EXPECT(gbc.pc(), 0x70db);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DC 00FB
        gbc.setState(0xbc31, 0x5fdf, 0xa6a0, 0x82e0, 0xf028, 0x2ddb, 0x0, 0x1);
        gbc.writeMem(0xbc31, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x5fdf);
        EXPECT(gbc.pc(), 0xbc33);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbc31), 0xcb);
        EXPECT(gbc.readMem(0xbc32), 0xdc);
        // CB DC 00FC
        gbc.setState(0xa114, 0x1b8c, 0x8d30, 0xd02f, 0x93c4, 0xeea9, 0x0, 0x1);
        gbc.writeMem(0xa114, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x1b8c);
        EXPECT(gbc.pc(), 0xa116);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa114), 0xcb);
        EXPECT(gbc.readMem(0xa115), 0xdc);
        // CB DC 00FD
        gbc.setState(0x6703, 0x512c, 0x2dd0, 0xbb5c, 0xaa1b, 0xb166, 0x1, 0x0);
        gbc.writeMem(0x6703, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x512c);
        EXPECT(gbc.pc(), 0x6705);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DC 00FF
        gbc.setState(0x240e, 0xf85e, 0x5c00, 0x5f93, 0xcbcb, 0x473d, 0x1, 0x1);
        gbc.writeMem(0x240e, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0xf85e);
        EXPECT(gbc.pc(), 0x2410);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DC 0100
        gbc.setState(0xa6f4, 0xd9f7, 0xf3d0, 0xaa30, 0xc500, 0x9752, 0x0, 0x1);
        gbc.writeMem(0xa6f4, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0xd9f7);
        EXPECT(gbc.pc(), 0xa6f6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa6f4), 0xcb);
        EXPECT(gbc.readMem(0xa6f5), 0xdc);
        // CB DC 0101
        gbc.setState(0xb929, 0x8286, 0x7190, 0x62f0, 0x2f3b, 0xcf14, 0x0, 0x1);
        gbc.writeMem(0xb929, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x8286);
        EXPECT(gbc.pc(), 0xb92b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb929), 0xcb);
        EXPECT(gbc.readMem(0xb92a), 0xdc);
        // CB DC 0102
        gbc.setState(0x7125, 0x826d, 0x7480, 0xf129, 0x4f0c, 0x59e9, 0x0, 0x1);
        gbc.writeMem(0x7125, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x826d);
        EXPECT(gbc.pc(), 0x7127);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DC 0103
        gbc.setState(0xcc3f, 0x3934, 0x5f10, 0x49bd, 0x2f33, 0xb75b, 0x1, 0x0);
        gbc.writeMem(0xcc3f, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x3934);
        EXPECT(gbc.pc(), 0xcc41);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcc3f), 0xcb);
        EXPECT(gbc.readMem(0xcc40), 0xdc);
        // CB DC 0104
        gbc.setState(0x9679, 0xc34a, 0x6d30, 0xd009, 0x974e, 0xa800, 0x0, 0x1);
        gbc.writeMem(0x9679, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0xc34a);
        EXPECT(gbc.pc(), 0x967b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9679), 0xcb);
        EXPECT(gbc.readMem(0x967a), 0xdc);
        // CB DC 0105
        gbc.setState(0x8c8a, 0x9aa9, 0xeb50, 0x86e8, 0x69d7, 0x380, 0x1, 0x0);
        gbc.writeMem(0x8c8a, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x9aa9);
        EXPECT(gbc.pc(), 0x8c8c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8c8a), 0xcb);
        EXPECT(gbc.readMem(0x8c8b), 0xdc);
        // CB DC 0106
        gbc.setState(0xc904, 0xfd28, 0xaa80, 0xadf0, 0xd85, 0x22c1, 0x1, 0x0);
        gbc.writeMem(0xc904, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0xfd28);
        EXPECT(gbc.pc(), 0xc906);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc904), 0xcb);
        EXPECT(gbc.readMem(0xc905), 0xdc);
        // CB DC 0107
        gbc.setState(0xb88c, 0x68ac, 0x7950, 0x86ae, 0x877c, 0xd827, 0x0, 0x0);
        gbc.writeMem(0xb88c, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x68ac);
        EXPECT(gbc.pc(), 0xb88e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb88c), 0xcb);
        EXPECT(gbc.readMem(0xb88d), 0xdc);
        // CB DC 0108
        gbc.setState(0x4d88, 0x42b6, 0x4870, 0x55e9, 0xc3fd, 0xf3e0, 0x0, 0x1);
        gbc.writeMem(0x4d88, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x42b6);
        EXPECT(gbc.pc(), 0x4d8a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DC 0109
        gbc.setState(0xbba1, 0xddbc, 0x7520, 0x7ae7, 0x43b7, 0x78c5, 0x0, 0x1);
        gbc.writeMem(0xbba1, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0xddbc);
        EXPECT(gbc.pc(), 0xbba3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbba1), 0xcb);
        EXPECT(gbc.readMem(0xbba2), 0xdc);
        // CB DC 010A
        gbc.setState(0xdada, 0x36a0, 0x7110, 0x6272, 0xf80f, 0x6197, 0x0, 0x0);
        gbc.writeMem(0xdada, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x36a0);
        EXPECT(gbc.pc(), 0xdadc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdada), 0xcb);
        EXPECT(gbc.readMem(0xdadb), 0xdc);
        // CB DC 010C
        gbc.setState(0x7909, 0x4f35, 0xaa80, 0xef5e, 0xfce1, 0xcd9f, 0x0, 0x1);
        gbc.writeMem(0x7909, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x4f35);
        EXPECT(gbc.pc(), 0x790b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DC 010D
        gbc.setState(0xa505, 0x8a23, 0x29c0, 0x873f, 0xfd35, 0x58fc, 0x1, 0x1);
        gbc.writeMem(0xa505, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x8a23);
        EXPECT(gbc.pc(), 0xa507);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa505), 0xcb);
        EXPECT(gbc.readMem(0xa506), 0xdc);
        // CB DC 010F
        gbc.setState(0x17dd, 0x9373, 0x7630, 0x9512, 0xc2fb, 0x57ad, 0x0, 0x0);
        gbc.writeMem(0x17dd, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x9373);
        EXPECT(gbc.pc(), 0x17df);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DC 0110
        gbc.setState(0x6ca8, 0x1212, 0x5e30, 0x3715, 0x6e73, 0x419e, 0x1, 0x0);
        gbc.writeMem(0x6ca8, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x1212);
        EXPECT(gbc.pc(), 0x6caa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DC 0111
        gbc.setState(0xa749, 0x7147, 0x9ba0, 0xd871, 0x9566, 0xa19e, 0x1, 0x1);
        gbc.writeMem(0xa749, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x7147);
        EXPECT(gbc.pc(), 0xa74b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa749), 0xcb);
        EXPECT(gbc.readMem(0xa74a), 0xdc);
        // CB DC 0112
        gbc.setState(0xa49, 0x2328, 0xfcf0, 0xf9d, 0x10ff, 0xbf30, 0x1, 0x1);
        gbc.writeMem(0xa49, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x2328);
        EXPECT(gbc.pc(), 0xa4b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DC 0113
        gbc.setState(0xef32, 0x2e07, 0xa1c0, 0x7c35, 0x8b8c, 0xde95, 0x0, 0x0);
        gbc.writeMem(0xef32, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x2e07);
        EXPECT(gbc.pc(), 0xef34);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xef32), 0xcb);
        EXPECT(gbc.readMem(0xef33), 0xdc);
        // CB DC 0114
        gbc.setState(0x6d7c, 0xba6c, 0xca0, 0x4a89, 0xe7ce, 0xb7f7, 0x0, 0x0);
        gbc.writeMem(0x6d7c, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0xba6c);
        EXPECT(gbc.pc(), 0x6d7e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DC 0115
        gbc.setState(0x54c7, 0x27a0, 0x7410, 0xea40, 0x93d5, 0xbf30, 0x0, 0x0);
        gbc.writeMem(0x54c7, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x27a0);
        EXPECT(gbc.pc(), 0x54c9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DC 0116
        gbc.setState(0xa165, 0x8d3e, 0xcdf0, 0xfa71, 0x298d, 0x866e, 0x0, 0x1);
        gbc.writeMem(0xa165, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x8d3e);
        EXPECT(gbc.pc(), 0xa167);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa165), 0xcb);
        EXPECT(gbc.readMem(0xa166), 0xdc);
        // CB DC 0117
        gbc.setState(0xb1e4, 0xbede, 0xd760, 0x3ec8, 0xd85f, 0xbff8, 0x0, 0x1);
        gbc.writeMem(0xb1e4, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0xbede);
        EXPECT(gbc.pc(), 0xb1e6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb1e4), 0xcb);
        EXPECT(gbc.readMem(0xb1e5), 0xdc);
        // CB DC 0118
        gbc.setState(0xdc60, 0xa14, 0x5140, 0xe2b0, 0xe442, 0xbef1, 0x0, 0x1);
        gbc.writeMem(0xdc60, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0xa14);
        EXPECT(gbc.pc(), 0xdc62);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdc60), 0xcb);
        EXPECT(gbc.readMem(0xdc61), 0xdc);
        // CB DC 0119
        gbc.setState(0xe81d, 0x8ae6, 0x63e0, 0x8264, 0xa173, 0xda19, 0x1, 0x0);
        gbc.writeMem(0xe81d, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x8ae6);
        EXPECT(gbc.pc(), 0xe81f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe81d), 0xcb);
        EXPECT(gbc.readMem(0xe81e), 0xdc);
        // CB DC 011B
        gbc.setState(0xd5ba, 0x11d7, 0xd890, 0xf3dd, 0x7656, 0xb811, 0x0, 0x0);
        gbc.writeMem(0xd5ba, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x11d7);
        EXPECT(gbc.pc(), 0xd5bc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd5ba), 0xcb);
        EXPECT(gbc.readMem(0xd5bb), 0xdc);
        // CB DC 011C
        gbc.setState(0xe917, 0xd4d, 0x10e0, 0xf978, 0x6252, 0xae, 0x0, 0x0);
        gbc.writeMem(0xe917, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0xd4d);
        EXPECT(gbc.pc(), 0xe919);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe917), 0xcb);
        EXPECT(gbc.readMem(0xe918), 0xdc);
        // CB DC 011D
        gbc.setState(0xb361, 0x23cb, 0xdd90, 0xdd4d, 0x7677, 0x6792, 0x1, 0x0);
        gbc.writeMem(0xb361, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x23cb);
        EXPECT(gbc.pc(), 0xb363);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb361), 0xcb);
        EXPECT(gbc.readMem(0xb362), 0xdc);
        // CB DC 011F
        gbc.setState(0x601f, 0xf65, 0x1fc0, 0xc7d, 0xa74d, 0xa5df, 0x1, 0x1);
        gbc.writeMem(0x601f, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0xf65);
        EXPECT(gbc.pc(), 0x6021);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DC 0120
        gbc.setState(0xca32, 0xe267, 0xd740, 0x2416, 0x322f, 0x5943, 0x0, 0x1);
        gbc.writeMem(0xca32, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xe267);
        EXPECT(gbc.pc(), 0xca34);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xca32), 0xcb);
        EXPECT(gbc.readMem(0xca33), 0xdc);
        // CB DC 0121
        gbc.setState(0x6a96, 0xee26, 0x71e0, 0x8d43, 0x2e3c, 0xc48d, 0x0, 0x1);
        gbc.writeMem(0x6a96, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0xee26);
        EXPECT(gbc.pc(), 0x6a98);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DC 0122
        gbc.setState(0x4195, 0x854d, 0x5b60, 0xa116, 0x33e8, 0x8b54, 0x0, 0x0);
        gbc.writeMem(0x4195, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x854d);
        EXPECT(gbc.pc(), 0x4197);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DC 0123
        gbc.setState(0x621d, 0x5dc, 0x5130, 0x30ff, 0x8337, 0xce18, 0x0, 0x0);
        gbc.writeMem(0x621d, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x5dc);
        EXPECT(gbc.pc(), 0x621f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DC 0124
        gbc.setState(0x265d, 0xf650, 0x950, 0x4552, 0xfeaf, 0x4b63, 0x1, 0x1);
        gbc.writeMem(0x265d, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0xf650);
        EXPECT(gbc.pc(), 0x265f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DC 0125
        gbc.setState(0x3913, 0xc27b, 0x2320, 0xee91, 0x2935, 0x2527, 0x0, 0x0);
        gbc.writeMem(0x3913, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0xc27b);
        EXPECT(gbc.pc(), 0x3915);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DC 0126
        gbc.setState(0x8040, 0xfefb, 0xf6f0, 0xe269, 0xf36f, 0xe0ea, 0x0, 0x1);
        gbc.writeMem(0x8040, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0xfefb);
        EXPECT(gbc.pc(), 0x8042);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8040), 0xcb);
        EXPECT(gbc.readMem(0x8041), 0xdc);
        // CB DC 0127
        gbc.setState(0x704a, 0xbc3b, 0xff10, 0xfb0e, 0x5283, 0x8469, 0x1, 0x0);
        gbc.writeMem(0x704a, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0xbc3b);
        EXPECT(gbc.pc(), 0x704c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DC 0129
        gbc.setState(0xc6ac, 0xee17, 0x4f10, 0x36df, 0x7c13, 0xf08f, 0x0, 0x0);
        gbc.writeMem(0xc6ac, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xee17);
        EXPECT(gbc.pc(), 0xc6ae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc6ac), 0xcb);
        EXPECT(gbc.readMem(0xc6ad), 0xdc);
        // CB DC 012A
        gbc.setState(0x9800, 0x6b43, 0x7290, 0xb4c9, 0xc5bb, 0x12ef, 0x1, 0x0);
        gbc.writeMem(0x9800, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x6b43);
        EXPECT(gbc.pc(), 0x9802);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9800), 0xcb);
        EXPECT(gbc.readMem(0x9801), 0xdc);
        // CB DC 012B
        gbc.setState(0xc674, 0x2d5d, 0x6210, 0xabb5, 0x7693, 0xc265, 0x1, 0x1);
        gbc.writeMem(0xc674, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x2d5d);
        EXPECT(gbc.pc(), 0xc676);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc674), 0xcb);
        EXPECT(gbc.readMem(0xc675), 0xdc);
        // CB DC 012C
        gbc.setState(0xa248, 0xde4b, 0xd1f0, 0x8ff7, 0xa09, 0x2121, 0x0, 0x0);
        gbc.writeMem(0xa248, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0xde4b);
        EXPECT(gbc.pc(), 0xa24a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa248), 0xcb);
        EXPECT(gbc.readMem(0xa249), 0xdc);
        // CB DC 012D
        gbc.setState(0x865e, 0x29ed, 0x4d70, 0x8bc1, 0x3e85, 0xa029, 0x1, 0x1);
        gbc.writeMem(0x865e, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x29ed);
        EXPECT(gbc.pc(), 0x8660);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x865e), 0xcb);
        EXPECT(gbc.readMem(0x865f), 0xdc);
        // CB DC 012E
        gbc.setState(0xc2f3, 0x2453, 0xcb40, 0x4452, 0x5e7b, 0x15f8, 0x1, 0x0);
        gbc.writeMem(0xc2f3, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x2453);
        EXPECT(gbc.pc(), 0xc2f5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc2f3), 0xcb);
        EXPECT(gbc.readMem(0xc2f4), 0xdc);
        // CB DC 012F
        gbc.setState(0x5bd8, 0xf63, 0xcbe0, 0xc3ad, 0x9abd, 0xa87b, 0x1, 0x0);
        gbc.writeMem(0x5bd8, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0xf63);
        EXPECT(gbc.pc(), 0x5bda);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DC 0130
        gbc.setState(0x904d, 0x701a, 0x4f60, 0x3c2, 0x9717, 0xcb1a, 0x1, 0x1);
        gbc.writeMem(0x904d, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x701a);
        EXPECT(gbc.pc(), 0x904f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x904d), 0xcb);
        EXPECT(gbc.readMem(0x904e), 0xdc);
        // CB DC 0131
        gbc.setState(0x3a09, 0x9761, 0x7db0, 0x9444, 0x9c6a, 0x3a7d, 0x0, 0x0);
        gbc.writeMem(0x3a09, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x9761);
        EXPECT(gbc.pc(), 0x3a0b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DC 0133
        gbc.setState(0x4656, 0xd5db, 0xb200, 0x8c22, 0xc1dd, 0x712d, 0x1, 0x1);
        gbc.writeMem(0x4656, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0xd5db);
        EXPECT(gbc.pc(), 0x4658);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DC 0134
        gbc.setState(0x5d80, 0xc8aa, 0x99c0, 0xf939, 0x786c, 0x6317, 0x0, 0x0);
        gbc.writeMem(0x5d80, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0xc8aa);
        EXPECT(gbc.pc(), 0x5d82);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DC 0136
        gbc.setState(0x86a, 0x618d, 0x410, 0x551b, 0xece9, 0xe30d, 0x1, 0x0);
        gbc.writeMem(0x86a, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x618d);
        EXPECT(gbc.pc(), 0x86c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DC 0137
        gbc.setState(0x2158, 0xd36f, 0xe7d0, 0x63a2, 0x1128, 0x359a, 0x1, 0x1);
        gbc.writeMem(0x2158, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0xd36f);
        EXPECT(gbc.pc(), 0x215a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DC 0138
        gbc.setState(0x30ab, 0xb946, 0x5650, 0xacaa, 0xb414, 0x7e6e, 0x1, 0x1);
        gbc.writeMem(0x30ab, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xb946);
        EXPECT(gbc.pc(), 0x30ad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DC 0139
        gbc.setState(0x8b6d, 0xfb94, 0xaaf0, 0x10e4, 0x198e, 0x1c2, 0x0, 0x0);
        gbc.writeMem(0x8b6d, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0xfb94);
        EXPECT(gbc.pc(), 0x8b6f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b6d), 0xcb);
        EXPECT(gbc.readMem(0x8b6e), 0xdc);
        // CB DC 013B
        gbc.setState(0x1a4c, 0x2ff3, 0x36b0, 0xca1a, 0x9f45, 0x5223, 0x1, 0x1);
        gbc.writeMem(0x1a4c, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x2ff3);
        EXPECT(gbc.pc(), 0x1a4e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DC 013C
        gbc.setState(0x8d8a, 0x318e, 0x4570, 0x938f, 0x4831, 0xd6cb, 0x1, 0x0);
        gbc.writeMem(0x8d8a, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x318e);
        EXPECT(gbc.pc(), 0x8d8c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8d8a), 0xcb);
        EXPECT(gbc.readMem(0x8d8b), 0xdc);
        // CB DC 013D
        gbc.setState(0x2ea9, 0x8e76, 0xff20, 0xf5bf, 0x9d3c, 0x6eba, 0x0, 0x1);
        gbc.writeMem(0x2ea9, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x8e76);
        EXPECT(gbc.pc(), 0x2eab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DC 013E
        gbc.setState(0xbc2d, 0x94ae, 0xeda0, 0xd692, 0x95aa, 0xd5fb, 0x1, 0x1);
        gbc.writeMem(0xbc2d, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x94ae);
        EXPECT(gbc.pc(), 0xbc2f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbc2d), 0xcb);
        EXPECT(gbc.readMem(0xbc2e), 0xdc);
        // CB DC 013F
        gbc.setState(0x7df3, 0x54a8, 0x7380, 0xdfd0, 0x935a, 0x9c04, 0x1, 0x0);
        gbc.writeMem(0x7df3, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x54a8);
        EXPECT(gbc.pc(), 0x7df5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DC 0140
        gbc.setState(0x73a5, 0x5127, 0x6010, 0x6201, 0xc576, 0x4a15, 0x0, 0x1);
        gbc.writeMem(0x73a5, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x5127);
        EXPECT(gbc.pc(), 0x73a7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DC 0141
        gbc.setState(0x5653, 0x4fe0, 0x8850, 0xed70, 0x385, 0x489d, 0x1, 0x0);
        gbc.writeMem(0x5653, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x4fe0);
        EXPECT(gbc.pc(), 0x5655);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DC 0142
        gbc.setState(0x8e12, 0xbee9, 0xe320, 0x763, 0x95d8, 0xb250, 0x0, 0x0);
        gbc.writeMem(0x8e12, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0xbee9);
        EXPECT(gbc.pc(), 0x8e14);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8e12), 0xcb);
        EXPECT(gbc.readMem(0x8e13), 0xdc);
        // CB DC 0143
        gbc.setState(0xbfcd, 0xfede, 0x5830, 0x2204, 0x3f2d, 0xa005, 0x0, 0x1);
        gbc.writeMem(0xbfcd, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0xfede);
        EXPECT(gbc.pc(), 0xbfcf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbfcd), 0xcb);
        EXPECT(gbc.readMem(0xbfce), 0xdc);
        // CB DC 0145
        gbc.setState(0x3f90, 0xe1d, 0xaeb0, 0x86ad, 0x6fe4, 0x5300, 0x1, 0x0);
        gbc.writeMem(0x3f90, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0xe1d);
        EXPECT(gbc.pc(), 0x3f92);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DC 0146
        gbc.setState(0xb1a2, 0xda9a, 0xdf00, 0xca26, 0x270f, 0xfcc4, 0x0, 0x0);
        gbc.writeMem(0xb1a2, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0xda9a);
        EXPECT(gbc.pc(), 0xb1a4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb1a2), 0xcb);
        EXPECT(gbc.readMem(0xb1a3), 0xdc);
        // CB DC 0147
        gbc.setState(0x9937, 0x8277, 0xd20, 0x1be8, 0x9007, 0x8b8e, 0x0, 0x1);
        gbc.writeMem(0x9937, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x8277);
        EXPECT(gbc.pc(), 0x9939);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9937), 0xcb);
        EXPECT(gbc.readMem(0x9938), 0xdc);
        // CB DC 0148
        gbc.setState(0x2559, 0xe1a6, 0xe780, 0xbfe8, 0xa9ee, 0xc12a, 0x1, 0x1);
        gbc.writeMem(0x2559, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xe1a6);
        EXPECT(gbc.pc(), 0x255b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DC 0149
        gbc.setState(0x2970, 0xafec, 0xa4a0, 0xb9fc, 0x2451, 0x4b43, 0x0, 0x1);
        gbc.writeMem(0x2970, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xafec);
        EXPECT(gbc.pc(), 0x2972);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DC 014A
        gbc.setState(0xa0af, 0x9cfe, 0x1540, 0x8d66, 0x5344, 0xf48e, 0x0, 0x1);
        gbc.writeMem(0xa0af, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x9cfe);
        EXPECT(gbc.pc(), 0xa0b1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa0af), 0xcb);
        EXPECT(gbc.readMem(0xa0b0), 0xdc);
        // CB DC 014B
        gbc.setState(0xb6bf, 0x5f04, 0x6a60, 0xdec, 0xdccb, 0x5126, 0x0, 0x0);
        gbc.writeMem(0xb6bf, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x5f04);
        EXPECT(gbc.pc(), 0xb6c1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb6bf), 0xcb);
        EXPECT(gbc.readMem(0xb6c0), 0xdc);
        // CB DC 014C
        gbc.setState(0x9c2e, 0x334c, 0x1520, 0xe51, 0xfc28, 0x9b2, 0x0, 0x1);
        gbc.writeMem(0x9c2e, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x334c);
        EXPECT(gbc.pc(), 0x9c30);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9c2e), 0xcb);
        EXPECT(gbc.readMem(0x9c2f), 0xdc);
        // CB DC 014D
        gbc.setState(0x96a0, 0x2148, 0x7160, 0x8646, 0xd1fc, 0x93c, 0x0, 0x0);
        gbc.writeMem(0x96a0, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x2148);
        EXPECT(gbc.pc(), 0x96a2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x96a0), 0xcb);
        EXPECT(gbc.readMem(0x96a1), 0xdc);
        // CB DC 014E
        gbc.setState(0x562, 0xcd64, 0xa780, 0x43d6, 0x70aa, 0x1b85, 0x1, 0x0);
        gbc.writeMem(0x562, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0xcd64);
        EXPECT(gbc.pc(), 0x564);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DC 014F
        gbc.setState(0x3974, 0xf93c, 0xeda0, 0xe4be, 0xea2d, 0x68e0, 0x0, 0x0);
        gbc.writeMem(0x3974, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0xf93c);
        EXPECT(gbc.pc(), 0x3976);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DC 0150
        gbc.setState(0x56ec, 0x89e8, 0xa810, 0xe950, 0x38cf, 0xebeb, 0x0, 0x0);
        gbc.writeMem(0x56ec, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x89e8);
        EXPECT(gbc.pc(), 0x56ee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DC 0151
        gbc.setState(0xb036, 0x7121, 0x6550, 0xf60a, 0xf527, 0xa722, 0x1, 0x0);
        gbc.writeMem(0xb036, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x7121);
        EXPECT(gbc.pc(), 0xb038);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb036), 0xcb);
        EXPECT(gbc.readMem(0xb037), 0xdc);
        // CB DC 0152
        gbc.setState(0x8b32, 0xa3d1, 0xcfb0, 0xeb9d, 0x569a, 0x74ba, 0x0, 0x0);
        gbc.writeMem(0x8b32, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0xa3d1);
        EXPECT(gbc.pc(), 0x8b34);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b32), 0xcb);
        EXPECT(gbc.readMem(0x8b33), 0xdc);
        // CB DC 0153
        gbc.setState(0xe355, 0x59e6, 0x9630, 0x12ac, 0xe676, 0x847e, 0x1, 0x0);
        gbc.writeMem(0xe355, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x59e6);
        EXPECT(gbc.pc(), 0xe357);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe355), 0xcb);
        EXPECT(gbc.readMem(0xe356), 0xdc);
        // CB DC 0154
        gbc.setState(0x30f7, 0x2fdd, 0xf0f0, 0x74d2, 0x9104, 0x8130, 0x0, 0x0);
        gbc.writeMem(0x30f7, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x2fdd);
        EXPECT(gbc.pc(), 0x30f9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DC 0155
        gbc.setState(0x7371, 0x3088, 0xb280, 0xab29, 0x7711, 0x5c66, 0x0, 0x1);
        gbc.writeMem(0x7371, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x3088);
        EXPECT(gbc.pc(), 0x7373);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DC 0156
        gbc.setState(0x56e2, 0x6cec, 0x4980, 0x392c, 0x37ee, 0x485c, 0x1, 0x0);
        gbc.writeMem(0x56e2, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x6cec);
        EXPECT(gbc.pc(), 0x56e4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DC 0157
        gbc.setState(0xeab, 0x3bc3, 0x7ba0, 0xa06f, 0x750c, 0x9710, 0x1, 0x0);
        gbc.writeMem(0xeab, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x3bc3);
        EXPECT(gbc.pc(), 0xead);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DC 0158
        gbc.setState(0xd321, 0x61ed, 0x7d0, 0xf75d, 0xedc2, 0xa180, 0x1, 0x1);
        gbc.writeMem(0xd321, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x61ed);
        EXPECT(gbc.pc(), 0xd323);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd321), 0xcb);
        EXPECT(gbc.readMem(0xd322), 0xdc);
        // CB DC 0159
        gbc.setState(0x9499, 0x4048, 0x9f70, 0x88ec, 0x24ab, 0x484d, 0x0, 0x0);
        gbc.writeMem(0x9499, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x4048);
        EXPECT(gbc.pc(), 0x949b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9499), 0xcb);
        EXPECT(gbc.readMem(0x949a), 0xdc);
        // CB DC 015A
        gbc.setState(0x7fef, 0xf8ed, 0xf100, 0xad22, 0xea83, 0x4dc9, 0x0, 0x1);
        gbc.writeMem(0x7fef, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0xf8ed);
        EXPECT(gbc.pc(), 0x7ff1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DC 015B
        gbc.setState(0x8562, 0x3548, 0x69d0, 0x73bc, 0xe753, 0xd11b, 0x1, 0x0);
        gbc.writeMem(0x8562, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x3548);
        EXPECT(gbc.pc(), 0x8564);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8562), 0xcb);
        EXPECT(gbc.readMem(0x8563), 0xdc);
        // CB DC 015C
        gbc.setState(0x9b46, 0x377e, 0xee10, 0xe385, 0x8c24, 0x5d04, 0x0, 0x0);
        gbc.writeMem(0x9b46, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x377e);
        EXPECT(gbc.pc(), 0x9b48);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9b46), 0xcb);
        EXPECT(gbc.readMem(0x9b47), 0xdc);
        // CB DC 015D
        gbc.setState(0xb45e, 0xf9b3, 0x8150, 0x7ef3, 0x95ea, 0xe3a0, 0x1, 0x1);
        gbc.writeMem(0xb45e, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xf9b3);
        EXPECT(gbc.pc(), 0xb460);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb45e), 0xcb);
        EXPECT(gbc.readMem(0xb45f), 0xdc);
        // CB DC 015E
        gbc.setState(0xba98, 0xfbfa, 0x4420, 0x6f84, 0x9bfe, 0x96bf, 0x0, 0x1);
        gbc.writeMem(0xba98, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0xfbfa);
        EXPECT(gbc.pc(), 0xba9a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xba98), 0xcb);
        EXPECT(gbc.readMem(0xba99), 0xdc);
        // CB DC 015F
        gbc.setState(0xe854, 0x5039, 0x1080, 0x206a, 0x2820, 0xace8, 0x0, 0x1);
        gbc.writeMem(0xe854, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x5039);
        EXPECT(gbc.pc(), 0xe856);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe854), 0xcb);
        EXPECT(gbc.readMem(0xe855), 0xdc);
        // CB DC 0160
        gbc.setState(0x1398, 0x6883, 0x6060, 0x8c3d, 0x4ab0, 0x4751, 0x1, 0x1);
        gbc.writeMem(0x1398, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x6883);
        EXPECT(gbc.pc(), 0x139a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DC 0161
        gbc.setState(0xd32b, 0x24f1, 0xbc20, 0x1093, 0x7199, 0x5ef3, 0x0, 0x1);
        gbc.writeMem(0xd32b, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x24f1);
        EXPECT(gbc.pc(), 0xd32d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd32b), 0xcb);
        EXPECT(gbc.readMem(0xd32c), 0xdc);
        // CB DC 0162
        gbc.setState(0xec9f, 0x7044, 0xd20, 0xa8ae, 0x366e, 0xc20, 0x1, 0x0);
        gbc.writeMem(0xec9f, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x7044);
        EXPECT(gbc.pc(), 0xeca1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xec9f), 0xcb);
        EXPECT(gbc.readMem(0xeca0), 0xdc);
        // CB DC 0163
        gbc.setState(0xe71b, 0x19cb, 0x98e0, 0xddcc, 0x6dc8, 0xb840, 0x0, 0x0);
        gbc.writeMem(0xe71b, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x19cb);
        EXPECT(gbc.pc(), 0xe71d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe71b), 0xcb);
        EXPECT(gbc.readMem(0xe71c), 0xdc);
        // CB DC 0164
        gbc.setState(0x90d4, 0x6529, 0xec50, 0x28a2, 0xd3da, 0x9dd2, 0x1, 0x1);
        gbc.writeMem(0x90d4, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x6529);
        EXPECT(gbc.pc(), 0x90d6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x90d4), 0xcb);
        EXPECT(gbc.readMem(0x90d5), 0xdc);
        // CB DC 0165
        gbc.setState(0x6940, 0x5dc6, 0xb500, 0xcd4e, 0x4f62, 0x9582, 0x1, 0x0);
        gbc.writeMem(0x6940, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x5dc6);
        EXPECT(gbc.pc(), 0x6942);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DC 0166
        gbc.setState(0x6b7e, 0x5dac, 0x1d0, 0x3c, 0x22ea, 0xa526, 0x1, 0x0);
        gbc.writeMem(0x6b7e, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x5dac);
        EXPECT(gbc.pc(), 0x6b80);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DC 0167
        gbc.setState(0xe006, 0xc9ca, 0x8fc0, 0x6899, 0xa55a, 0x343d, 0x1, 0x1);
        gbc.writeMem(0xe006, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0xc9ca);
        EXPECT(gbc.pc(), 0xe008);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe006), 0xcb);
        EXPECT(gbc.readMem(0xe007), 0xdc);
        // CB DC 0168
        gbc.setState(0x8c79, 0x4d88, 0x5550, 0x9e24, 0xda0a, 0xe421, 0x1, 0x1);
        gbc.writeMem(0x8c79, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x4d88);
        EXPECT(gbc.pc(), 0x8c7b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8c79), 0xcb);
        EXPECT(gbc.readMem(0x8c7a), 0xdc);
        // CB DC 0169
        gbc.setState(0x70b3, 0xd377, 0xb020, 0xc6bd, 0x8ce1, 0x1e31, 0x0, 0x1);
        gbc.writeMem(0x70b3, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xd377);
        EXPECT(gbc.pc(), 0x70b5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DC 016B
        gbc.setState(0xb21b, 0x53a6, 0x180, 0xaf85, 0xc3ba, 0x549e, 0x1, 0x0);
        gbc.writeMem(0xb21b, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x53a6);
        EXPECT(gbc.pc(), 0xb21d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb21b), 0xcb);
        EXPECT(gbc.readMem(0xb21c), 0xdc);
        // CB DC 016C
        gbc.setState(0x13d9, 0xf566, 0xba50, 0x756b, 0xf25f, 0xf372, 0x0, 0x1);
        gbc.writeMem(0x13d9, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0xf566);
        EXPECT(gbc.pc(), 0x13db);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DC 016E
        gbc.setState(0x6d20, 0x176b, 0x9eb0, 0xd9c0, 0xc170, 0x1c86, 0x0, 0x1);
        gbc.writeMem(0x6d20, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x176b);
        EXPECT(gbc.pc(), 0x6d22);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DC 016F
        gbc.setState(0x4d02, 0x1a92, 0x79a0, 0xf5b3, 0xee40, 0x6861, 0x1, 0x1);
        gbc.writeMem(0x4d02, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x1a92);
        EXPECT(gbc.pc(), 0x4d04);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DC 0170
        gbc.setState(0x146b, 0x6a3f, 0x8a80, 0x2aeb, 0x3747, 0xb2ae, 0x0, 0x0);
        gbc.writeMem(0x146b, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x6a3f);
        EXPECT(gbc.pc(), 0x146d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DC 0171
        gbc.setState(0x1932, 0x97e9, 0x61b0, 0x630e, 0xdd79, 0xdc2f, 0x1, 0x0);
        gbc.writeMem(0x1932, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x97e9);
        EXPECT(gbc.pc(), 0x1934);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DC 0172
        gbc.setState(0x4cf0, 0xf8bb, 0x9ff0, 0x35fc, 0x13b4, 0x2cd7, 0x1, 0x0);
        gbc.writeMem(0x4cf0, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0xf8bb);
        EXPECT(gbc.pc(), 0x4cf2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DC 0173
        gbc.setState(0x979c, 0x4a90, 0x7e0, 0x38d7, 0x99, 0xfdca, 0x0, 0x0);
        gbc.writeMem(0x979c, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x4a90);
        EXPECT(gbc.pc(), 0x979e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x979c), 0xcb);
        EXPECT(gbc.readMem(0x979d), 0xdc);
        // CB DC 0174
        gbc.setState(0xc07a, 0xe01, 0x9770, 0x7e6a, 0xbfc0, 0x1b01, 0x1, 0x1);
        gbc.writeMem(0xc07a, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0xe01);
        EXPECT(gbc.pc(), 0xc07c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc07a), 0xcb);
        EXPECT(gbc.readMem(0xc07b), 0xdc);
        // CB DC 0176
        gbc.setState(0x4603, 0x30b5, 0x7910, 0xe07f, 0xe7c5, 0x3b3a, 0x1, 0x1);
        gbc.writeMem(0x4603, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x30b5);
        EXPECT(gbc.pc(), 0x4605);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DC 0177
        gbc.setState(0x54c2, 0x9c6, 0xecd0, 0x97a6, 0x98ba, 0xd32e, 0x1, 0x1);
        gbc.writeMem(0x54c2, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x9c6);
        EXPECT(gbc.pc(), 0x54c4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DC 0178
        gbc.setState(0x9d85, 0x35d2, 0xe520, 0xe119, 0x809c, 0xa6f8, 0x0, 0x0);
        gbc.writeMem(0x9d85, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x35d2);
        EXPECT(gbc.pc(), 0x9d87);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9d85), 0xcb);
        EXPECT(gbc.readMem(0x9d86), 0xdc);
        // CB DC 0179
        gbc.setState(0xa79b, 0xcf18, 0x1d20, 0x9bae, 0xd112, 0xcd0a, 0x0, 0x1);
        gbc.writeMem(0xa79b, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0xcf18);
        EXPECT(gbc.pc(), 0xa79d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa79b), 0xcb);
        EXPECT(gbc.readMem(0xa79c), 0xdc);
        // CB DC 017A
        gbc.setState(0x4777, 0x5877, 0xc750, 0x43a4, 0x2170, 0x7f33, 0x0, 0x0);
        gbc.writeMem(0x4777, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x5877);
        EXPECT(gbc.pc(), 0x4779);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DC 017B
        gbc.setState(0xe83e, 0x8efd, 0x5e70, 0xae06, 0xdedc, 0x5364, 0x0, 0x0);
        gbc.writeMem(0xe83e, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x8efd);
        EXPECT(gbc.pc(), 0xe840);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe83e), 0xcb);
        EXPECT(gbc.readMem(0xe83f), 0xdc);
        // CB DC 017C
        gbc.setState(0x3b8e, 0x7995, 0xc920, 0xf869, 0xee68, 0x1810, 0x0, 0x1);
        gbc.writeMem(0x3b8e, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x7995);
        EXPECT(gbc.pc(), 0x3b90);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DC 017D
        gbc.setState(0xebd8, 0x9b08, 0xfe60, 0x6cc6, 0xc13e, 0xa900, 0x0, 0x0);
        gbc.writeMem(0xebd8, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x9b08);
        EXPECT(gbc.pc(), 0xebda);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xebd8), 0xcb);
        EXPECT(gbc.readMem(0xebd9), 0xdc);
        // CB DC 017E
        gbc.setState(0x7565, 0xeaef, 0x3f70, 0xe557, 0xb57d, 0x9b38, 0x1, 0x1);
        gbc.writeMem(0x7565, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0xeaef);
        EXPECT(gbc.pc(), 0x7567);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DC 017F
        gbc.setState(0xdf23, 0x3f5c, 0xa4e0, 0x7438, 0x5b64, 0xb548, 0x0, 0x0);
        gbc.writeMem(0xdf23, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x3f5c);
        EXPECT(gbc.pc(), 0xdf25);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdf23), 0xcb);
        EXPECT(gbc.readMem(0xdf24), 0xdc);
        // CB DC 0180
        gbc.setState(0x2f39, 0x2bf9, 0xcf0, 0xc934, 0xd74d, 0xb5a0, 0x0, 0x0);
        gbc.writeMem(0x2f39, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x2bf9);
        EXPECT(gbc.pc(), 0x2f3b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DC 0181
        gbc.setState(0x209e, 0x42f0, 0x2a20, 0x1ac8, 0x87cd, 0x5465, 0x0, 0x0);
        gbc.writeMem(0x209e, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x42f0);
        EXPECT(gbc.pc(), 0x20a0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DC 0182
        gbc.setState(0x7859, 0xd92e, 0x2610, 0x3aea, 0x8e13, 0x2203, 0x0, 0x1);
        gbc.writeMem(0x7859, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0xd92e);
        EXPECT(gbc.pc(), 0x785b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DC 0184
        gbc.setState(0x91e9, 0xcad5, 0xd50, 0x3e06, 0xa642, 0xb936, 0x0, 0x0);
        gbc.writeMem(0x91e9, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0xcad5);
        EXPECT(gbc.pc(), 0x91eb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x91e9), 0xcb);
        EXPECT(gbc.readMem(0x91ea), 0xdc);
        // CB DC 0185
        gbc.setState(0x598c, 0x2cc6, 0x4f0, 0x3c14, 0x4030, 0x7813, 0x0, 0x1);
        gbc.writeMem(0x598c, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x2cc6);
        EXPECT(gbc.pc(), 0x598e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DC 0186
        gbc.setState(0x9c36, 0xafb6, 0x210, 0x5a67, 0x7cb9, 0x1c68, 0x1, 0x1);
        gbc.writeMem(0x9c36, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0xafb6);
        EXPECT(gbc.pc(), 0x9c38);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9c36), 0xcb);
        EXPECT(gbc.readMem(0x9c37), 0xdc);
        // CB DC 0187
        gbc.setState(0x29f5, 0xd51e, 0x7cb0, 0x173, 0x11d5, 0x1725, 0x1, 0x0);
        gbc.writeMem(0x29f5, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0xd51e);
        EXPECT(gbc.pc(), 0x29f7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DC 0188
        gbc.setState(0x94c6, 0x7ad, 0x70d0, 0xa844, 0x667c, 0x712, 0x1, 0x1);
        gbc.writeMem(0x94c6, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x7ad);
        EXPECT(gbc.pc(), 0x94c8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x94c6), 0xcb);
        EXPECT(gbc.readMem(0x94c7), 0xdc);
        // CB DC 0189
        gbc.setState(0xdf32, 0xcfe4, 0x7530, 0x41d9, 0xc153, 0x30d2, 0x1, 0x0);
        gbc.writeMem(0xdf32, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0xcfe4);
        EXPECT(gbc.pc(), 0xdf34);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdf32), 0xcb);
        EXPECT(gbc.readMem(0xdf33), 0xdc);
        // CB DC 018A
        gbc.setState(0x6c8c, 0x54c, 0xbc90, 0xd49c, 0x64a0, 0x9ed1, 0x1, 0x0);
        gbc.writeMem(0x6c8c, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x54c);
        EXPECT(gbc.pc(), 0x6c8e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DC 018B
        gbc.setState(0x9c98, 0x19e0, 0xe910, 0xcb3a, 0x743c, 0xfaa6, 0x0, 0x1);
        gbc.writeMem(0x9c98, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x19e0);
        EXPECT(gbc.pc(), 0x9c9a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9c98), 0xcb);
        EXPECT(gbc.readMem(0x9c99), 0xdc);
        // CB DC 018C
        gbc.setState(0x63c, 0xfce5, 0xf6f0, 0x9c85, 0xf9a3, 0x91f7, 0x1, 0x0);
        gbc.writeMem(0x63c, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0xfce5);
        EXPECT(gbc.pc(), 0x63e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DC 018D
        gbc.setState(0x16ea, 0xe07, 0xa2b0, 0xb2e1, 0x1a28, 0x3328, 0x0, 0x0);
        gbc.writeMem(0x16ea, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xe07);
        EXPECT(gbc.pc(), 0x16ec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DC 018E
        gbc.setState(0xdbda, 0x2422, 0x1260, 0x3872, 0x2e49, 0x4ff6, 0x1, 0x1);
        gbc.writeMem(0xdbda, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x2422);
        EXPECT(gbc.pc(), 0xdbdc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdbda), 0xcb);
        EXPECT(gbc.readMem(0xdbdb), 0xdc);
        // CB DC 018F
        gbc.setState(0x5e5a, 0xfc28, 0x5f80, 0x97f3, 0x9202, 0x5806, 0x1, 0x1);
        gbc.writeMem(0x5e5a, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0xfc28);
        EXPECT(gbc.pc(), 0x5e5c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DC 0190
        gbc.setState(0x4d3d, 0x709a, 0x59d0, 0x2025, 0xa353, 0xacc9, 0x0, 0x0);
        gbc.writeMem(0x4d3d, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x709a);
        EXPECT(gbc.pc(), 0x4d3f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DC 0191
        gbc.setState(0xa684, 0x2aff, 0x80e0, 0x44dc, 0xe373, 0xe6be, 0x0, 0x0);
        gbc.writeMem(0xa684, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x2aff);
        EXPECT(gbc.pc(), 0xa686);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa684), 0xcb);
        EXPECT(gbc.readMem(0xa685), 0xdc);
        // CB DC 0192
        gbc.setState(0x242b, 0x8914, 0xb750, 0x53c, 0x2600, 0xe2f6, 0x0, 0x0);
        gbc.writeMem(0x242b, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x8914);
        EXPECT(gbc.pc(), 0x242d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DC 0193
        gbc.setState(0x5008, 0x57e2, 0x1b50, 0xfa1a, 0x4b91, 0xa22e, 0x0, 0x1);
        gbc.writeMem(0x5008, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x57e2);
        EXPECT(gbc.pc(), 0x500a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DC 0194
        gbc.setState(0x8cc8, 0xbfd1, 0x93d0, 0xf8bc, 0xbf00, 0x8a28, 0x0, 0x1);
        gbc.writeMem(0x8cc8, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xbfd1);
        EXPECT(gbc.pc(), 0x8cca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8cc8), 0xcb);
        EXPECT(gbc.readMem(0x8cc9), 0xdc);
        // CB DC 0195
        gbc.setState(0x7400, 0x8206, 0xf1e0, 0x5e0b, 0xb622, 0x2157, 0x0, 0x0);
        gbc.writeMem(0x7400, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x8206);
        EXPECT(gbc.pc(), 0x7402);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DC 0196
        gbc.setState(0xd482, 0xef38, 0xb230, 0x1939, 0xaf3d, 0xe34, 0x0, 0x1);
        gbc.writeMem(0xd482, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xef38);
        EXPECT(gbc.pc(), 0xd484);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd482), 0xcb);
        EXPECT(gbc.readMem(0xd483), 0xdc);
        // CB DC 0197
        gbc.setState(0xa87f, 0xd3ef, 0x8ea0, 0x14f2, 0x3488, 0x3670, 0x1, 0x1);
        gbc.writeMem(0xa87f, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0xd3ef);
        EXPECT(gbc.pc(), 0xa881);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa87f), 0xcb);
        EXPECT(gbc.readMem(0xa880), 0xdc);
        // CB DC 0199
        gbc.setState(0x1ba1, 0xc6c5, 0xe730, 0xc1ce, 0xe5b2, 0xde86, 0x0, 0x1);
        gbc.writeMem(0x1ba1, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0xc6c5);
        EXPECT(gbc.pc(), 0x1ba3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DC 019A
        gbc.setState(0xaa15, 0x8a7, 0xfa10, 0xf51e, 0xa62, 0x9600, 0x1, 0x1);
        gbc.writeMem(0xaa15, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x8a7);
        EXPECT(gbc.pc(), 0xaa17);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaa15), 0xcb);
        EXPECT(gbc.readMem(0xaa16), 0xdc);
        // CB DC 019B
        gbc.setState(0xe74d, 0x6843, 0x94b0, 0xdac4, 0x907e, 0x4350, 0x0, 0x1);
        gbc.writeMem(0xe74d, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x6843);
        EXPECT(gbc.pc(), 0xe74f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe74d), 0xcb);
        EXPECT(gbc.readMem(0xe74e), 0xdc);
        // CB DC 019C
        gbc.setState(0xab2b, 0xf4e3, 0x1b60, 0x2027, 0x6570, 0x51f5, 0x0, 0x0);
        gbc.writeMem(0xab2b, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0xf4e3);
        EXPECT(gbc.pc(), 0xab2d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xab2b), 0xcb);
        EXPECT(gbc.readMem(0xab2c), 0xdc);
        // CB DC 019D
        gbc.setState(0x794b, 0xa522, 0x9a50, 0xf57b, 0xdc06, 0x577a, 0x1, 0x0);
        gbc.writeMem(0x794b, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xa522);
        EXPECT(gbc.pc(), 0x794d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DC 019E
        gbc.setState(0x8ae7, 0xcb72, 0x13b0, 0xcc5c, 0x4aba, 0x36a5, 0x0, 0x1);
        gbc.writeMem(0x8ae7, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xcb72);
        EXPECT(gbc.pc(), 0x8ae9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8ae7), 0xcb);
        EXPECT(gbc.readMem(0x8ae8), 0xdc);
        // CB DC 019F
        gbc.setState(0x5f18, 0x34d6, 0x3800, 0xf98f, 0x67ab, 0x3faa, 0x1, 0x0);
        gbc.writeMem(0x5f18, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x34d6);
        EXPECT(gbc.pc(), 0x5f1a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DC 01A0
        gbc.setState(0xbcb8, 0x87fd, 0x1090, 0xbbed, 0xef52, 0xacea, 0x0, 0x0);
        gbc.writeMem(0xbcb8, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x87fd);
        EXPECT(gbc.pc(), 0xbcba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbcb8), 0xcb);
        EXPECT(gbc.readMem(0xbcb9), 0xdc);
        // CB DC 01A1
        gbc.setState(0x3173, 0x3512, 0xdff0, 0x1ea7, 0xab62, 0xb78e, 0x0, 0x0);
        gbc.writeMem(0x3173, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x3512);
        EXPECT(gbc.pc(), 0x3175);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DC 01A2
        gbc.setState(0x8d17, 0xba27, 0xb9e0, 0x25e9, 0x53e0, 0x470e, 0x1, 0x1);
        gbc.writeMem(0x8d17, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0xba27);
        EXPECT(gbc.pc(), 0x8d19);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d17), 0xcb);
        EXPECT(gbc.readMem(0x8d18), 0xdc);
        // CB DC 01A3
        gbc.setState(0xb9ac, 0xbcb5, 0xa230, 0x2b68, 0x7d5a, 0x2c74, 0x1, 0x1);
        gbc.writeMem(0xb9ac, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xbcb5);
        EXPECT(gbc.pc(), 0xb9ae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb9ac), 0xcb);
        EXPECT(gbc.readMem(0xb9ad), 0xdc);
        // CB DC 01A4
        gbc.setState(0x110, 0xbecd, 0xc60, 0x547b, 0x3e76, 0x18a7, 0x0, 0x1);
        gbc.writeMem(0x110, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xbecd);
        EXPECT(gbc.pc(), 0x112);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DC 01A5
        gbc.setState(0x7885, 0xbfdf, 0x47d0, 0x1e0b, 0x4d9c, 0xfe05, 0x1, 0x0);
        gbc.writeMem(0x7885, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0xbfdf);
        EXPECT(gbc.pc(), 0x7887);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DC 01A6
        gbc.setState(0xddd8, 0x5eee, 0x50, 0xa453, 0x911b, 0x6987, 0x0, 0x0);
        gbc.writeMem(0xddd8, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x5eee);
        EXPECT(gbc.pc(), 0xddda);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xddd8), 0xcb);
        EXPECT(gbc.readMem(0xddd9), 0xdc);
        // CB DC 01A7
        gbc.setState(0xace1, 0x51b3, 0xdb0, 0x72ef, 0xf785, 0x68bb, 0x1, 0x1);
        gbc.writeMem(0xace1, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x51b3);
        EXPECT(gbc.pc(), 0xace3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xace1), 0xcb);
        EXPECT(gbc.readMem(0xace2), 0xdc);
        // CB DC 01A8
        gbc.setState(0x21f4, 0xae6, 0xff10, 0x65e, 0x631e, 0x5582, 0x1, 0x0);
        gbc.writeMem(0x21f4, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0xae6);
        EXPECT(gbc.pc(), 0x21f6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DC 01A9
        gbc.setState(0x5b2f, 0x7e7a, 0xe520, 0xda8b, 0x57d1, 0x49b0, 0x1, 0x0);
        gbc.writeMem(0x5b2f, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x7e7a);
        EXPECT(gbc.pc(), 0x5b31);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DC 01AA
        gbc.setState(0x3bb9, 0x728e, 0x3e20, 0xde89, 0x1e18, 0x87b3, 0x1, 0x1);
        gbc.writeMem(0x3bb9, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x728e);
        EXPECT(gbc.pc(), 0x3bbb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DC 01AC
        gbc.setState(0x77b4, 0xd091, 0x46e0, 0x4426, 0x22f8, 0xa3ec, 0x0, 0x0);
        gbc.writeMem(0x77b4, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0xd091);
        EXPECT(gbc.pc(), 0x77b6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DC 01AD
        gbc.setState(0xad49, 0xceae, 0x69c0, 0x9ff1, 0x5324, 0xb8ac, 0x0, 0x1);
        gbc.writeMem(0xad49, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0xceae);
        EXPECT(gbc.pc(), 0xad4b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xad49), 0xcb);
        EXPECT(gbc.readMem(0xad4a), 0xdc);
        // CB DC 01AE
        gbc.setState(0x8aa9, 0x233d, 0xde00, 0x514e, 0x18e0, 0xb2c2, 0x0, 0x1);
        gbc.writeMem(0x8aa9, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x233d);
        EXPECT(gbc.pc(), 0x8aab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8aa9), 0xcb);
        EXPECT(gbc.readMem(0x8aaa), 0xdc);
        // CB DC 01AF
        gbc.setState(0xe06d, 0xf880, 0xe240, 0xcb79, 0x2d2e, 0xf1f5, 0x0, 0x1);
        gbc.writeMem(0xe06d, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0xf880);
        EXPECT(gbc.pc(), 0xe06f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe06d), 0xcb);
        EXPECT(gbc.readMem(0xe06e), 0xdc);
        // CB DC 01B0
        gbc.setState(0x648, 0x397b, 0xc1e0, 0x2d9e, 0x58d, 0x5d14, 0x1, 0x0);
        gbc.writeMem(0x648, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x397b);
        EXPECT(gbc.pc(), 0x64a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DC 01B1
        gbc.setState(0xe30d, 0x2d9c, 0x1000, 0x4eee, 0x7e87, 0xcb47, 0x1, 0x0);
        gbc.writeMem(0xe30d, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x2d9c);
        EXPECT(gbc.pc(), 0xe30f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe30d), 0xcb);
        EXPECT(gbc.readMem(0xe30e), 0xdc);
        // CB DC 01B2
        gbc.setState(0x879f, 0x4f03, 0x8dc0, 0x2dd2, 0xbc80, 0x371, 0x1, 0x1);
        gbc.writeMem(0x879f, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x4f03);
        EXPECT(gbc.pc(), 0x87a1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x879f), 0xcb);
        EXPECT(gbc.readMem(0x87a0), 0xdc);
        // CB DC 01B3
        gbc.setState(0x87dd, 0xfa3b, 0x42d0, 0x9d4c, 0x3c9f, 0xbca2, 0x1, 0x0);
        gbc.writeMem(0x87dd, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0xfa3b);
        EXPECT(gbc.pc(), 0x87df);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x87dd), 0xcb);
        EXPECT(gbc.readMem(0x87de), 0xdc);
        // CB DC 01B4
        gbc.setState(0xaa3a, 0x8707, 0x3f80, 0x4ddb, 0xe073, 0x880f, 0x0, 0x1);
        gbc.writeMem(0xaa3a, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x8707);
        EXPECT(gbc.pc(), 0xaa3c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaa3a), 0xcb);
        EXPECT(gbc.readMem(0xaa3b), 0xdc);
        // CB DC 01B5
        gbc.setState(0x26bb, 0xde97, 0x1580, 0x6705, 0x370c, 0x2c9b, 0x0, 0x1);
        gbc.writeMem(0x26bb, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0xde97);
        EXPECT(gbc.pc(), 0x26bd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DC 01B6
        gbc.setState(0xae48, 0x24cb, 0xc120, 0xa502, 0x8222, 0x8c94, 0x0, 0x1);
        gbc.writeMem(0xae48, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x24cb);
        EXPECT(gbc.pc(), 0xae4a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xae48), 0xcb);
        EXPECT(gbc.readMem(0xae49), 0xdc);
        // CB DC 01B7
        gbc.setState(0x6097, 0x4bee, 0xdc70, 0xfd1d, 0xb472, 0xe94b, 0x0, 0x1);
        gbc.writeMem(0x6097, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x4bee);
        EXPECT(gbc.pc(), 0x6099);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DC 01B8
        gbc.setState(0x6319, 0x888e, 0xed40, 0xc2c8, 0x20cf, 0x974b, 0x0, 0x0);
        gbc.writeMem(0x6319, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x888e);
        EXPECT(gbc.pc(), 0x631b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DC 01B9
        gbc.setState(0xe850, 0x8e06, 0xa9d0, 0x6b54, 0x4dbd, 0x7a90, 0x1, 0x1);
        gbc.writeMem(0xe850, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x8e06);
        EXPECT(gbc.pc(), 0xe852);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe850), 0xcb);
        EXPECT(gbc.readMem(0xe851), 0xdc);
        // CB DC 01BA
        gbc.setState(0x8fee, 0x82e0, 0x9be0, 0xd8ca, 0x88a4, 0x8068, 0x1, 0x0);
        gbc.writeMem(0x8fee, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x82e0);
        EXPECT(gbc.pc(), 0x8ff0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8fee), 0xcb);
        EXPECT(gbc.readMem(0x8fef), 0xdc);
        // CB DC 01BB
        gbc.setState(0x1359, 0x9a6b, 0xced0, 0x3bb0, 0xdcd8, 0xf52d, 0x1, 0x1);
        gbc.writeMem(0x1359, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x9a6b);
        EXPECT(gbc.pc(), 0x135b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DC 01BC
        gbc.setState(0x7224, 0xe51e, 0xf180, 0xac49, 0x59be, 0xe336, 0x0, 0x1);
        gbc.writeMem(0x7224, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0xe51e);
        EXPECT(gbc.pc(), 0x7226);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DC 01BD
        gbc.setState(0x2a0e, 0x3f23, 0xfbd0, 0x2bd8, 0xe007, 0x6597, 0x1, 0x1);
        gbc.writeMem(0x2a0e, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x3f23);
        EXPECT(gbc.pc(), 0x2a10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DC 01BE
        gbc.setState(0x4ada, 0x876d, 0x5eb0, 0x20dc, 0xdd1c, 0x2ace, 0x1, 0x0);
        gbc.writeMem(0x4ada, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x876d);
        EXPECT(gbc.pc(), 0x4adc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DC 01C0
        gbc.setState(0x4eb4, 0xf0d2, 0xae10, 0xdd2d, 0x2, 0x1944, 0x0, 0x1);
        gbc.writeMem(0x4eb4, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xf0d2);
        EXPECT(gbc.pc(), 0x4eb6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DC 01C1
        gbc.setState(0xd079, 0x7345, 0x63f0, 0x20b0, 0x6268, 0xdf41, 0x1, 0x0);
        gbc.writeMem(0xd079, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x7345);
        EXPECT(gbc.pc(), 0xd07b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd079), 0xcb);
        EXPECT(gbc.readMem(0xd07a), 0xdc);
        // CB DC 01C2
        gbc.setState(0x80a1, 0x6833, 0x6ce0, 0x176f, 0xe79f, 0xde59, 0x0, 0x1);
        gbc.writeMem(0x80a1, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x6833);
        EXPECT(gbc.pc(), 0x80a3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x80a1), 0xcb);
        EXPECT(gbc.readMem(0x80a2), 0xdc);
        // CB DC 01C3
        gbc.setState(0x39a4, 0xd6d1, 0xcd00, 0x92ce, 0x9b96, 0xdae, 0x0, 0x0);
        gbc.writeMem(0x39a4, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0xd6d1);
        EXPECT(gbc.pc(), 0x39a6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DC 01C4
        gbc.setState(0x86fa, 0x420d, 0x8b30, 0x823e, 0x4b52, 0xe1b3, 0x0, 0x1);
        gbc.writeMem(0x86fa, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x420d);
        EXPECT(gbc.pc(), 0x86fc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x86fa), 0xcb);
        EXPECT(gbc.readMem(0x86fb), 0xdc);
        // CB DC 01C5
        gbc.setState(0x19e5, 0x6973, 0xe4e0, 0xcb47, 0x683, 0xd489, 0x1, 0x1);
        gbc.writeMem(0x19e5, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x6973);
        EXPECT(gbc.pc(), 0x19e7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DC 01C6
        gbc.setState(0x344a, 0x7476, 0x3870, 0xf7c0, 0xc0d, 0xdd7d, 0x0, 0x1);
        gbc.writeMem(0x344a, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x7476);
        EXPECT(gbc.pc(), 0x344c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DC 01C7
        gbc.setState(0x9b0f, 0xdd52, 0xd7e0, 0x1d47, 0x40bd, 0x373d, 0x1, 0x1);
        gbc.writeMem(0x9b0f, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0xdd52);
        EXPECT(gbc.pc(), 0x9b11);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9b0f), 0xcb);
        EXPECT(gbc.readMem(0x9b10), 0xdc);
        // CB DC 01C8
        gbc.setState(0x42c1, 0xafff, 0x5720, 0x4437, 0x1583, 0xd657, 0x1, 0x0);
        gbc.writeMem(0x42c1, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0xafff);
        EXPECT(gbc.pc(), 0x42c3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DC 01C9
        gbc.setState(0x9d33, 0x8aec, 0xf380, 0x523d, 0x6615, 0xe7cd, 0x1, 0x0);
        gbc.writeMem(0x9d33, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x8aec);
        EXPECT(gbc.pc(), 0x9d35);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9d33), 0xcb);
        EXPECT(gbc.readMem(0x9d34), 0xdc);
        // CB DC 01CA
        gbc.setState(0x7e5b, 0x136f, 0x4450, 0x5b9f, 0x4a21, 0x8b1e, 0x1, 0x1);
        gbc.writeMem(0x7e5b, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x136f);
        EXPECT(gbc.pc(), 0x7e5d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DC 01CB
        gbc.setState(0x58b4, 0xe986, 0x48b0, 0x1a41, 0x8fbc, 0x62f4, 0x0, 0x0);
        gbc.writeMem(0x58b4, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0xe986);
        EXPECT(gbc.pc(), 0x58b6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DC 01CC
        gbc.setState(0x369f, 0x161a, 0x5440, 0xe7fe, 0x1afe, 0xe56b, 0x1, 0x1);
        gbc.writeMem(0x369f, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x161a);
        EXPECT(gbc.pc(), 0x36a1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DC 01CD
        gbc.setState(0x47cb, 0x1efe, 0x720, 0xd376, 0xe58f, 0x6790, 0x1, 0x0);
        gbc.writeMem(0x47cb, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x1efe);
        EXPECT(gbc.pc(), 0x47cd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DC 01CE
        gbc.setState(0xebcd, 0x13c3, 0x1870, 0x895c, 0x9e82, 0x1233, 0x1, 0x1);
        gbc.writeMem(0xebcd, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x13c3);
        EXPECT(gbc.pc(), 0xebcf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xebcd), 0xcb);
        EXPECT(gbc.readMem(0xebce), 0xdc);
        // CB DC 01CF
        gbc.setState(0xd2da, 0xec87, 0x4a90, 0x8070, 0xcb5d, 0xdb28, 0x0, 0x1);
        gbc.writeMem(0xd2da, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xec87);
        EXPECT(gbc.pc(), 0xd2dc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd2da), 0xcb);
        EXPECT(gbc.readMem(0xd2db), 0xdc);
        // CB DC 01D0
        gbc.setState(0x97ca, 0x1fc8, 0xa790, 0x5574, 0x913b, 0x389d, 0x1, 0x0);
        gbc.writeMem(0x97ca, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x1fc8);
        EXPECT(gbc.pc(), 0x97cc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x97ca), 0xcb);
        EXPECT(gbc.readMem(0x97cb), 0xdc);
        // CB DC 01D1
        gbc.setState(0xaa9, 0x4322, 0x67c0, 0xb747, 0x78fb, 0x56cb, 0x0, 0x0);
        gbc.writeMem(0xaa9, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x4322);
        EXPECT(gbc.pc(), 0xaab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DC 01D2
        gbc.setState(0xcf51, 0x899b, 0xd4d0, 0x7a71, 0x8394, 0x4a10, 0x1, 0x1);
        gbc.writeMem(0xcf51, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x899b);
        EXPECT(gbc.pc(), 0xcf53);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcf51), 0xcb);
        EXPECT(gbc.readMem(0xcf52), 0xdc);
        // CB DC 01D3
        gbc.setState(0x4165, 0x5b2f, 0x8620, 0xc473, 0x6472, 0xbedc, 0x0, 0x1);
        gbc.writeMem(0x4165, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x5b2f);
        EXPECT(gbc.pc(), 0x4167);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DC 01D4
        gbc.setState(0x44c, 0x6e5a, 0x9ff0, 0x8ad5, 0xc3d0, 0x38d6, 0x1, 0x0);
        gbc.writeMem(0x44c, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x6e5a);
        EXPECT(gbc.pc(), 0x44e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DC 01D5
        gbc.setState(0x824, 0xa15c, 0xd4c0, 0x9e0e, 0xaa74, 0xb735, 0x1, 0x1);
        gbc.writeMem(0x824, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0xa15c);
        EXPECT(gbc.pc(), 0x826);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DC 01D7
        gbc.setState(0xe55e, 0x6e4c, 0xa4f0, 0x4f14, 0xfde4, 0xe89c, 0x0, 0x0);
        gbc.writeMem(0xe55e, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x6e4c);
        EXPECT(gbc.pc(), 0xe560);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe55e), 0xcb);
        EXPECT(gbc.readMem(0xe55f), 0xdc);
        // CB DC 01D8
        gbc.setState(0x5177, 0xcbad, 0xac40, 0x423d, 0x7071, 0x6c47, 0x0, 0x0);
        gbc.writeMem(0x5177, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0xcbad);
        EXPECT(gbc.pc(), 0x5179);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DC 01D9
        gbc.setState(0xbca9, 0x2fff, 0x4b60, 0xc822, 0xa3f5, 0x113, 0x0, 0x1);
        gbc.writeMem(0xbca9, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x2fff);
        EXPECT(gbc.pc(), 0xbcab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbca9), 0xcb);
        EXPECT(gbc.readMem(0xbcaa), 0xdc);
        // CB DC 01DA
        gbc.setState(0x55e9, 0x5afc, 0x8ff0, 0x964a, 0x1374, 0x3f1f, 0x1, 0x1);
        gbc.writeMem(0x55e9, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x5afc);
        EXPECT(gbc.pc(), 0x55eb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DC 01DB
        gbc.setState(0x1afa, 0x22e0, 0x7ab0, 0xf27d, 0xca0a, 0x65bd, 0x1, 0x0);
        gbc.writeMem(0x1afa, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x22e0);
        EXPECT(gbc.pc(), 0x1afc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DC 01DC
        gbc.setState(0xce20, 0x9b6e, 0x3dc0, 0x70c, 0x5498, 0x2559, 0x0, 0x0);
        gbc.writeMem(0xce20, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x9b6e);
        EXPECT(gbc.pc(), 0xce22);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xce20), 0xcb);
        EXPECT(gbc.readMem(0xce21), 0xdc);
        // CB DC 01DD
        gbc.setState(0x4f3a, 0x49e7, 0x7e40, 0x17a6, 0x192f, 0xb7c8, 0x1, 0x0);
        gbc.writeMem(0x4f3a, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x49e7);
        EXPECT(gbc.pc(), 0x4f3c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DC 01DE
        gbc.setState(0x828c, 0xcb86, 0xf310, 0xd1a0, 0xbb4e, 0xb2f, 0x0, 0x1);
        gbc.writeMem(0x828c, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xcb86);
        EXPECT(gbc.pc(), 0x828e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x828c), 0xcb);
        EXPECT(gbc.readMem(0x828d), 0xdc);
        // CB DC 01DF
        gbc.setState(0x5092, 0x85b4, 0x6590, 0x3a59, 0xe53a, 0xaa10, 0x1, 0x0);
        gbc.writeMem(0x5092, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x85b4);
        EXPECT(gbc.pc(), 0x5094);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DC 01E0
        gbc.setState(0x2e89, 0x4a09, 0x8570, 0x9a92, 0xd876, 0x5e4b, 0x1, 0x1);
        gbc.writeMem(0x2e89, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x4a09);
        EXPECT(gbc.pc(), 0x2e8b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DC 01E1
        gbc.setState(0x6e2e, 0x896e, 0x6090, 0x966d, 0x602f, 0xaacc, 0x1, 0x1);
        gbc.writeMem(0x6e2e, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x896e);
        EXPECT(gbc.pc(), 0x6e30);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DC 01E2
        gbc.setState(0x3f4c, 0x6b69, 0x9e50, 0x55f4, 0x2c76, 0xb8bf, 0x0, 0x1);
        gbc.writeMem(0x3f4c, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x6b69);
        EXPECT(gbc.pc(), 0x3f4e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DC 01E3
        gbc.setState(0x9a6e, 0x45ad, 0x2480, 0x22a6, 0xe8e, 0x5fbd, 0x0, 0x0);
        gbc.writeMem(0x9a6e, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x45ad);
        EXPECT(gbc.pc(), 0x9a70);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9a6e), 0xcb);
        EXPECT(gbc.readMem(0x9a6f), 0xdc);
        // CB DC 01E4
        gbc.setState(0x2927, 0xffe0, 0x40, 0x4647, 0x86b8, 0x4efe, 0x0, 0x0);
        gbc.writeMem(0x2927, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0xffe0);
        EXPECT(gbc.pc(), 0x2929);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DC 01E6
        gbc.setState(0xb951, 0x167d, 0xd790, 0xd3f2, 0x325e, 0x7cdf, 0x0, 0x1);
        gbc.writeMem(0xb951, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x167d);
        EXPECT(gbc.pc(), 0xb953);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb951), 0xcb);
        EXPECT(gbc.readMem(0xb952), 0xdc);
        // CB DC 01E7
        gbc.setState(0x9eae, 0x2d79, 0xae50, 0x43e6, 0xa621, 0x819a, 0x1, 0x0);
        gbc.writeMem(0x9eae, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x2d79);
        EXPECT(gbc.pc(), 0x9eb0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9eae), 0xcb);
        EXPECT(gbc.readMem(0x9eaf), 0xdc);
        // CB DC 01E8
        gbc.setState(0x15fd, 0xb419, 0xff70, 0xa7be, 0x7b99, 0x6c5, 0x1, 0x0);
        gbc.writeMem(0x15fd, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0xb419);
        EXPECT(gbc.pc(), 0x15ff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DC 01E9
        gbc.setState(0xa0ae, 0x5117, 0xc1e0, 0xd99f, 0x11c3, 0x34d5, 0x1, 0x1);
        gbc.writeMem(0xa0ae, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x5117);
        EXPECT(gbc.pc(), 0xa0b0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa0ae), 0xcb);
        EXPECT(gbc.readMem(0xa0af), 0xdc);
        // CB DC 01EA
        gbc.setState(0x29c, 0xde50, 0x8890, 0x83d, 0x5631, 0x8407, 0x1, 0x1);
        gbc.writeMem(0x29c, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xde50);
        EXPECT(gbc.pc(), 0x29e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DC 01EB
        gbc.setState(0x442a, 0x69ea, 0xe9c0, 0x17f5, 0xa047, 0x787f, 0x1, 0x0);
        gbc.writeMem(0x442a, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x69ea);
        EXPECT(gbc.pc(), 0x442c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DC 01EC
        gbc.setState(0x5a0a, 0x7894, 0xe7a0, 0xd6e6, 0x3549, 0x1b68, 0x1, 0x1);
        gbc.writeMem(0x5a0a, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x7894);
        EXPECT(gbc.pc(), 0x5a0c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DC 01ED
        gbc.setState(0x4b71, 0x71fe, 0xf5b0, 0x1ec6, 0xd91e, 0x726a, 0x0, 0x1);
        gbc.writeMem(0x4b71, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x71fe);
        EXPECT(gbc.pc(), 0x4b73);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DC 01EE
        gbc.setState(0x3313, 0x7128, 0xfd60, 0x72ed, 0x692d, 0x71ab, 0x0, 0x1);
        gbc.writeMem(0x3313, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x7128);
        EXPECT(gbc.pc(), 0x3315);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DC 01EF
        gbc.setState(0x7cfe, 0x29fe, 0x8390, 0xc669, 0xf829, 0x3e03, 0x0, 0x1);
        gbc.writeMem(0x7cfe, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x29fe);
        EXPECT(gbc.pc(), 0x7d00);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DC 01F0
        gbc.setState(0x7fd1, 0xc76d, 0xb240, 0xcae1, 0xc4dd, 0x9a73, 0x0, 0x1);
        gbc.writeMem(0x7fd1, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0xc76d);
        EXPECT(gbc.pc(), 0x7fd3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DC 01F1
        gbc.setState(0xee0f, 0xdd7e, 0x1830, 0x6926, 0x36dd, 0xcd94, 0x0, 0x0);
        gbc.writeMem(0xee0f, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xdd7e);
        EXPECT(gbc.pc(), 0xee11);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xee0f), 0xcb);
        EXPECT(gbc.readMem(0xee10), 0xdc);
        // CB DC 01F2
        gbc.setState(0x583d, 0x9ed, 0xe320, 0xc511, 0x2871, 0x9bc4, 0x1, 0x0);
        gbc.writeMem(0x583d, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x9ed);
        EXPECT(gbc.pc(), 0x583f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DC 01F3
        gbc.setState(0x2278, 0x1fd9, 0x4fb0, 0x7e0b, 0x90c8, 0xdb30, 0x0, 0x0);
        gbc.writeMem(0x2278, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x1fd9);
        EXPECT(gbc.pc(), 0x227a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DC 01F4
        gbc.setState(0xa9a7, 0x18b1, 0x4a10, 0xd372, 0xfa2c, 0xe7a0, 0x0, 0x1);
        gbc.writeMem(0xa9a7, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x18b1);
        EXPECT(gbc.pc(), 0xa9a9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa9a7), 0xcb);
        EXPECT(gbc.readMem(0xa9a8), 0xdc);
        // CB DC 01F5
        gbc.setState(0x275f, 0x7ab5, 0xcc40, 0xc359, 0xd398, 0x3ef6, 0x1, 0x1);
        gbc.writeMem(0x275f, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x7ab5);
        EXPECT(gbc.pc(), 0x2761);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DC 01F6
        gbc.setState(0x50af, 0x3eb8, 0x61d0, 0xd237, 0x79eb, 0x488, 0x0, 0x1);
        gbc.writeMem(0x50af, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x3eb8);
        EXPECT(gbc.pc(), 0x50b1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DC 01F7
        gbc.setState(0x1781, 0xb9b3, 0x38d0, 0xcda0, 0x80ef, 0xfb16, 0x0, 0x0);
        gbc.writeMem(0x1781, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xb9b3);
        EXPECT(gbc.pc(), 0x1783);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DC 01F9
        gbc.setState(0x2ba0, 0x9f5e, 0x2350, 0x954, 0x3622, 0x888e, 0x0, 0x1);
        gbc.writeMem(0x2ba0, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x9f5e);
        EXPECT(gbc.pc(), 0x2ba2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DC 01FA
        gbc.setState(0x76a5, 0x7f87, 0x1dd0, 0xac5a, 0x5bc9, 0x5bd5, 0x0, 0x0);
        gbc.writeMem(0x76a5, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x7f87);
        EXPECT(gbc.pc(), 0x76a7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DC 01FB
        gbc.setState(0x93e7, 0x43eb, 0xbbe0, 0xeda6, 0x4c5b, 0x3c6e, 0x1, 0x0);
        gbc.writeMem(0x93e7, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x43eb);
        EXPECT(gbc.pc(), 0x93e9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x93e7), 0xcb);
        EXPECT(gbc.readMem(0x93e8), 0xdc);
        // CB DC 01FC
        gbc.setState(0x7a87, 0x9162, 0xa3d0, 0xcea9, 0x3460, 0xef81, 0x0, 0x0);
        gbc.writeMem(0x7a87, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x9162);
        EXPECT(gbc.pc(), 0x7a89);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DC 01FD
        gbc.setState(0x2568, 0x6a7b, 0x3d50, 0xbb4c, 0x37aa, 0x2cbf, 0x0, 0x1);
        gbc.writeMem(0x2568, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x6a7b);
        EXPECT(gbc.pc(), 0x256a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DC 01FE
        gbc.setState(0x1499, 0x697c, 0x33c0, 0xef1e, 0xde04, 0x5e8b, 0x0, 0x1);
        gbc.writeMem(0x1499, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x697c);
        EXPECT(gbc.pc(), 0x149b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DC 0200
        gbc.setState(0xda34, 0xc789, 0x1a20, 0x93, 0x71c5, 0x349, 0x1, 0x1);
        gbc.writeMem(0xda34, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xc789);
        EXPECT(gbc.pc(), 0xda36);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xda34), 0xcb);
        EXPECT(gbc.readMem(0xda35), 0xdc);
        // CB DC 0201
        gbc.setState(0x5cdd, 0xd041, 0xdbe0, 0x27bf, 0x8d17, 0xb00e, 0x1, 0x0);
        gbc.writeMem(0x5cdd, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0xd041);
        EXPECT(gbc.pc(), 0x5cdf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DC 0202
        gbc.setState(0x9f05, 0x23c5, 0x9a10, 0x82ac, 0xa618, 0x3f40, 0x1, 0x1);
        gbc.writeMem(0x9f05, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x23c5);
        EXPECT(gbc.pc(), 0x9f07);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9f05), 0xcb);
        EXPECT(gbc.readMem(0x9f06), 0xdc);
        // CB DC 0203
        gbc.setState(0x770b, 0x6fa2, 0x2e60, 0x6a1, 0xc402, 0x3d26, 0x0, 0x1);
        gbc.writeMem(0x770b, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x6fa2);
        EXPECT(gbc.pc(), 0x770d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DC 0204
        gbc.setState(0x1228, 0xaa07, 0xe0c0, 0x8ef0, 0x833, 0x78eb, 0x0, 0x0);
        gbc.writeMem(0x1228, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0xaa07);
        EXPECT(gbc.pc(), 0x122a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DC 0205
        gbc.setState(0x6913, 0xf7ff, 0x40e0, 0x9f4c, 0x3699, 0x283e, 0x0, 0x1);
        gbc.writeMem(0x6913, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0xf7ff);
        EXPECT(gbc.pc(), 0x6915);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DC 0206
        gbc.setState(0x9505, 0x5e92, 0x6090, 0xf18a, 0x6202, 0xa58, 0x1, 0x1);
        gbc.writeMem(0x9505, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x5e92);
        EXPECT(gbc.pc(), 0x9507);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9505), 0xcb);
        EXPECT(gbc.readMem(0x9506), 0xdc);
        // CB DC 0207
        gbc.setState(0x941a, 0x5e86, 0x5a90, 0x11ed, 0x1f92, 0xa7, 0x0, 0x0);
        gbc.writeMem(0x941a, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x5e86);
        EXPECT(gbc.pc(), 0x941c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x941a), 0xcb);
        EXPECT(gbc.readMem(0x941b), 0xdc);
        // CB DC 0208
        gbc.setState(0xba55, 0xbc99, 0x76a0, 0x2ac0, 0xc172, 0x24f9, 0x0, 0x1);
        gbc.writeMem(0xba55, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xbc99);
        EXPECT(gbc.pc(), 0xba57);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xba55), 0xcb);
        EXPECT(gbc.readMem(0xba56), 0xdc);
        // CB DC 0209
        gbc.setState(0x3f69, 0x8a9f, 0xc6b0, 0x7187, 0x7b54, 0x204a, 0x0, 0x1);
        gbc.writeMem(0x3f69, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x8a9f);
        EXPECT(gbc.pc(), 0x3f6b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DC 020A
        gbc.setState(0xb02d, 0x24dc, 0x1f80, 0xdd1a, 0xe538, 0xf7d4, 0x1, 0x0);
        gbc.writeMem(0xb02d, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x24dc);
        EXPECT(gbc.pc(), 0xb02f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb02d), 0xcb);
        EXPECT(gbc.readMem(0xb02e), 0xdc);
        // CB DC 020B
        gbc.setState(0x1429, 0x1bfb, 0x2050, 0x553d, 0xd091, 0xffba, 0x1, 0x0);
        gbc.writeMem(0x1429, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x1bfb);
        EXPECT(gbc.pc(), 0x142b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DC 020C
        gbc.setState(0x12c5, 0xe3fc, 0x7670, 0x20cd, 0x5e3f, 0xc638, 0x1, 0x0);
        gbc.writeMem(0x12c5, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0xe3fc);
        EXPECT(gbc.pc(), 0x12c7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DC 020D
        gbc.setState(0xe251, 0xfd71, 0x5520, 0xcbc7, 0x7eef, 0x499f, 0x0, 0x0);
        gbc.writeMem(0xe251, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0xfd71);
        EXPECT(gbc.pc(), 0xe253);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe251), 0xcb);
        EXPECT(gbc.readMem(0xe252), 0xdc);
        // CB DC 020E
        gbc.setState(0xb001, 0xfde5, 0x49f0, 0x8f1b, 0x1fce, 0x2b70, 0x1, 0x1);
        gbc.writeMem(0xb001, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0xfde5);
        EXPECT(gbc.pc(), 0xb003);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb001), 0xcb);
        EXPECT(gbc.readMem(0xb002), 0xdc);
        // CB DC 020F
        gbc.setState(0x2d51, 0xf691, 0x4610, 0x137e, 0x3c4b, 0x339, 0x1, 0x1);
        gbc.writeMem(0x2d51, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0xf691);
        EXPECT(gbc.pc(), 0x2d53);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DC 0210
        gbc.setState(0x2124, 0xbdaa, 0xc160, 0x2a5a, 0xe0d2, 0x8f02, 0x0, 0x0);
        gbc.writeMem(0x2124, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xbdaa);
        EXPECT(gbc.pc(), 0x2126);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DC 0211
        gbc.setState(0xd09b, 0xcbc4, 0xb540, 0xd6aa, 0xd10c, 0xcb80, 0x1, 0x1);
        gbc.writeMem(0xd09b, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0xcbc4);
        EXPECT(gbc.pc(), 0xd09d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd09b), 0xcb);
        EXPECT(gbc.readMem(0xd09c), 0xdc);
        // CB DC 0212
        gbc.setState(0x437c, 0x13bd, 0xa100, 0xa9b3, 0xed64, 0x1e55, 0x0, 0x1);
        gbc.writeMem(0x437c, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x13bd);
        EXPECT(gbc.pc(), 0x437e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DC 0213
        gbc.setState(0x13c6, 0xa719, 0x7b10, 0x2537, 0x3662, 0x7463, 0x1, 0x0);
        gbc.writeMem(0x13c6, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0xa719);
        EXPECT(gbc.pc(), 0x13c8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DC 0214
        gbc.setState(0x9c73, 0xc844, 0xf2a0, 0x5cd6, 0x1435, 0x2285, 0x0, 0x1);
        gbc.writeMem(0x9c73, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0xc844);
        EXPECT(gbc.pc(), 0x9c75);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9c73), 0xcb);
        EXPECT(gbc.readMem(0x9c74), 0xdc);
        // CB DC 0215
        gbc.setState(0x10d2, 0x92a0, 0xc650, 0x3564, 0x6f4b, 0x299d, 0x1, 0x1);
        gbc.writeMem(0x10d2, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x92a0);
        EXPECT(gbc.pc(), 0x10d4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DC 0216
        gbc.setState(0x8102, 0xbb50, 0x5d90, 0x3800, 0x9c09, 0xff80, 0x1, 0x1);
        gbc.writeMem(0x8102, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0xbb50);
        EXPECT(gbc.pc(), 0x8104);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8102), 0xcb);
        EXPECT(gbc.readMem(0x8103), 0xdc);
        // CB DC 0217
        gbc.setState(0x5448, 0xffb0, 0x5ba0, 0xfff0, 0x34b4, 0x80d7, 0x0, 0x0);
        gbc.writeMem(0x5448, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0xffb0);
        EXPECT(gbc.pc(), 0x544a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DC 0218
        gbc.setState(0xe059, 0x50f2, 0xea00, 0xb81b, 0x3ad9, 0xc477, 0x1, 0x1);
        gbc.writeMem(0xe059, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x50f2);
        EXPECT(gbc.pc(), 0xe05b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe059), 0xcb);
        EXPECT(gbc.readMem(0xe05a), 0xdc);
        // CB DC 0219
        gbc.setState(0xc8dd, 0xf368, 0x49c0, 0xf82c, 0x201, 0x84ea, 0x0, 0x0);
        gbc.writeMem(0xc8dd, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0xf368);
        EXPECT(gbc.pc(), 0xc8df);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc8dd), 0xcb);
        EXPECT(gbc.readMem(0xc8de), 0xdc);
        // CB DC 021A
        gbc.setState(0xca7c, 0x682c, 0x5870, 0xb58a, 0x79c4, 0x2ee3, 0x0, 0x0);
        gbc.writeMem(0xca7c, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x682c);
        EXPECT(gbc.pc(), 0xca7e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xca7c), 0xcb);
        EXPECT(gbc.readMem(0xca7d), 0xdc);
        // CB DC 021B
        gbc.setState(0x7821, 0xa6ac, 0xdbd0, 0x3abf, 0xe513, 0x9b75, 0x0, 0x0);
        gbc.writeMem(0x7821, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xa6ac);
        EXPECT(gbc.pc(), 0x7823);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DC 021C
        gbc.setState(0xb257, 0x6b91, 0xa880, 0xf343, 0xf8fe, 0xefb8, 0x0, 0x1);
        gbc.writeMem(0xb257, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x6b91);
        EXPECT(gbc.pc(), 0xb259);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb257), 0xcb);
        EXPECT(gbc.readMem(0xb258), 0xdc);
        // CB DC 021D
        gbc.setState(0x7b52, 0x1316, 0xcd90, 0xc692, 0x87d4, 0x9780, 0x1, 0x0);
        gbc.writeMem(0x7b52, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x1316);
        EXPECT(gbc.pc(), 0x7b54);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DC 021E
        gbc.setState(0x17c4, 0x3628, 0x750, 0x11aa, 0xa06a, 0xf2bd, 0x0, 0x0);
        gbc.writeMem(0x17c4, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x3628);
        EXPECT(gbc.pc(), 0x17c6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DC 021F
        gbc.setState(0x7324, 0xa139, 0x3a70, 0x85d3, 0xb95c, 0x8211, 0x1, 0x1);
        gbc.writeMem(0x7324, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0xa139);
        EXPECT(gbc.pc(), 0x7326);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DC 0220
        gbc.setState(0x55b7, 0xf05e, 0x8080, 0xdaf2, 0xa29e, 0x4691, 0x1, 0x0);
        gbc.writeMem(0x55b7, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0xf05e);
        EXPECT(gbc.pc(), 0x55b9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DC 0221
        gbc.setState(0xde83, 0x3702, 0xaec0, 0x3a71, 0x5bc9, 0xa019, 0x1, 0x1);
        gbc.writeMem(0xde83, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x3702);
        EXPECT(gbc.pc(), 0xde85);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xde83), 0xcb);
        EXPECT(gbc.readMem(0xde84), 0xdc);
        // CB DC 0222
        gbc.setState(0x5d51, 0x8af, 0x3910, 0xba0b, 0x409, 0xa5b, 0x1, 0x1);
        gbc.writeMem(0x5d51, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x8af);
        EXPECT(gbc.pc(), 0x5d53);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DC 0224
        gbc.setState(0xdb15, 0xdf0, 0x7410, 0x3a8e, 0x573f, 0x16d9, 0x1, 0x1);
        gbc.writeMem(0xdb15, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0xdf0);
        EXPECT(gbc.pc(), 0xdb17);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdb15), 0xcb);
        EXPECT(gbc.readMem(0xdb16), 0xdc);
        // CB DC 0225
        gbc.setState(0xe2ac, 0x1b14, 0xa9b0, 0xcf27, 0xd194, 0x9435, 0x1, 0x0);
        gbc.writeMem(0xe2ac, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x1b14);
        EXPECT(gbc.pc(), 0xe2ae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe2ac), 0xcb);
        EXPECT(gbc.readMem(0xe2ad), 0xdc);
        // CB DC 0226
        gbc.setState(0x3aea, 0xe1c2, 0x380, 0x9c41, 0x8f2d, 0x9885, 0x1, 0x1);
        gbc.writeMem(0x3aea, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0xe1c2);
        EXPECT(gbc.pc(), 0x3aec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DC 0227
        gbc.setState(0xae5b, 0xe542, 0x5e70, 0x2687, 0x1b35, 0xf927, 0x0, 0x1);
        gbc.writeMem(0xae5b, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0xe542);
        EXPECT(gbc.pc(), 0xae5d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xae5b), 0xcb);
        EXPECT(gbc.readMem(0xae5c), 0xdc);
        // CB DC 0228
        gbc.setState(0xb36e, 0x6b50, 0x9d10, 0x651, 0x38d5, 0x45c2, 0x1, 0x1);
        gbc.writeMem(0xb36e, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x6b50);
        EXPECT(gbc.pc(), 0xb370);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb36e), 0xcb);
        EXPECT(gbc.readMem(0xb36f), 0xdc);
        // CB DC 0229
        gbc.setState(0x47b, 0x6e6d, 0x24b0, 0x24cf, 0x2d1d, 0x55fc, 0x1, 0x1);
        gbc.writeMem(0x47b, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x6e6d);
        EXPECT(gbc.pc(), 0x47d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DC 022A
        gbc.setState(0x5ef0, 0x5ef8, 0x870, 0x64d1, 0x2463, 0x318c, 0x1, 0x0);
        gbc.writeMem(0x5ef0, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x5ef8);
        EXPECT(gbc.pc(), 0x5ef2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DC 022B
        gbc.setState(0x4d, 0x949d, 0x1c00, 0xbc0e, 0x7399, 0x7caa, 0x0, 0x1);
        gbc.writeMem(0x4d, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x949d);
        EXPECT(gbc.pc(), 0x4f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DC 022C
        gbc.setState(0xec73, 0xed63, 0x6f90, 0x30, 0xd40a, 0x950, 0x1, 0x0);
        gbc.writeMem(0xec73, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0xed63);
        EXPECT(gbc.pc(), 0xec75);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xec73), 0xcb);
        EXPECT(gbc.readMem(0xec74), 0xdc);
        // CB DC 022D
        gbc.setState(0xd991, 0xa664, 0x95d0, 0xffbb, 0x4aae, 0xa2ff, 0x0, 0x1);
        gbc.writeMem(0xd991, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0xa664);
        EXPECT(gbc.pc(), 0xd993);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd991), 0xcb);
        EXPECT(gbc.readMem(0xd992), 0xdc);
        // CB DC 022E
        gbc.setState(0x7e4f, 0xd55f, 0x7b60, 0x5022, 0xe3c2, 0xec01, 0x1, 0x1);
        gbc.writeMem(0x7e4f, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0xd55f);
        EXPECT(gbc.pc(), 0x7e51);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DC 022F
        gbc.setState(0x86ef, 0xefd3, 0xc330, 0xefbd, 0xbc7e, 0x400c, 0x1, 0x1);
        gbc.writeMem(0x86ef, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xefd3);
        EXPECT(gbc.pc(), 0x86f1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x86ef), 0xcb);
        EXPECT(gbc.readMem(0x86f0), 0xdc);
        // CB DC 0230
        gbc.setState(0x6c6, 0xe7ac, 0x3fd0, 0x16a8, 0x8b7d, 0x7288, 0x1, 0x0);
        gbc.writeMem(0x6c6, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0xe7ac);
        EXPECT(gbc.pc(), 0x6c8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DC 0231
        gbc.setState(0xa628, 0x70c6, 0x2a70, 0x12ee, 0xff7a, 0xc892, 0x0, 0x0);
        gbc.writeMem(0xa628, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x70c6);
        EXPECT(gbc.pc(), 0xa62a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa628), 0xcb);
        EXPECT(gbc.readMem(0xa629), 0xdc);
        // CB DC 0232
        gbc.setState(0x67fd, 0xb817, 0xd280, 0xc139, 0x41ee, 0x9952, 0x0, 0x0);
        gbc.writeMem(0x67fd, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0xb817);
        EXPECT(gbc.pc(), 0x67ff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DC 0233
        gbc.setState(0x2d50, 0xf1bd, 0xefa0, 0xcc6, 0x113, 0x5c77, 0x0, 0x0);
        gbc.writeMem(0x2d50, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xf1bd);
        EXPECT(gbc.pc(), 0x2d52);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DC 0234
        gbc.setState(0x9e5c, 0x8787, 0x82c0, 0x2a45, 0xbdde, 0x3ca7, 0x1, 0x0);
        gbc.writeMem(0x9e5c, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x8787);
        EXPECT(gbc.pc(), 0x9e5e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9e5c), 0xcb);
        EXPECT(gbc.readMem(0x9e5d), 0xdc);
        // CB DC 0235
        gbc.setState(0x3cf3, 0x99fa, 0x5ca0, 0xc80e, 0x9cef, 0xa02a, 0x0, 0x0);
        gbc.writeMem(0x3cf3, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x99fa);
        EXPECT(gbc.pc(), 0x3cf5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DC 0236
        gbc.setState(0x5988, 0x8c96, 0x6770, 0x8575, 0x2df2, 0x48c2, 0x0, 0x0);
        gbc.writeMem(0x5988, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x8c96);
        EXPECT(gbc.pc(), 0x598a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DC 0237
        gbc.setState(0xe5f7, 0xabb2, 0xf4d0, 0xe4e0, 0x9936, 0x89c7, 0x0, 0x1);
        gbc.writeMem(0xe5f7, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0xabb2);
        EXPECT(gbc.pc(), 0xe5f9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe5f7), 0xcb);
        EXPECT(gbc.readMem(0xe5f8), 0xdc);
        // CB DC 0238
        gbc.setState(0x93b1, 0x66f4, 0x1600, 0xdd31, 0xe2ea, 0x1ee8, 0x1, 0x0);
        gbc.writeMem(0x93b1, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x66f4);
        EXPECT(gbc.pc(), 0x93b3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x93b1), 0xcb);
        EXPECT(gbc.readMem(0x93b2), 0xdc);
        // CB DC 0239
        gbc.setState(0xe476, 0x8b02, 0x2e0, 0x8cd7, 0x37ec, 0xdb51, 0x0, 0x0);
        gbc.writeMem(0xe476, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x8b02);
        EXPECT(gbc.pc(), 0xe478);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe476), 0xcb);
        EXPECT(gbc.readMem(0xe477), 0xdc);
        // CB DC 023A
        gbc.setState(0xc7f4, 0xc672, 0x5aa0, 0x812c, 0x5a8a, 0x962f, 0x1, 0x0);
        gbc.writeMem(0xc7f4, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xc672);
        EXPECT(gbc.pc(), 0xc7f6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc7f4), 0xcb);
        EXPECT(gbc.readMem(0xc7f5), 0xdc);
        // CB DC 023B
        gbc.setState(0x1d04, 0xe848, 0x9ab0, 0xbfaa, 0x1731, 0x3b6c, 0x0, 0x0);
        gbc.writeMem(0x1d04, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xe848);
        EXPECT(gbc.pc(), 0x1d06);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DC 023C
        gbc.setState(0x959e, 0x62dd, 0xa360, 0xfcf3, 0x987c, 0x3ac5, 0x1, 0x0);
        gbc.writeMem(0x959e, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x62dd);
        EXPECT(gbc.pc(), 0x95a0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x959e), 0xcb);
        EXPECT(gbc.readMem(0x959f), 0xdc);
        // CB DC 023D
        gbc.setState(0x723, 0xf4c4, 0x1e90, 0xe4f0, 0xedd9, 0x8f0c, 0x1, 0x1);
        gbc.writeMem(0x723, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xf4c4);
        EXPECT(gbc.pc(), 0x725);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DC 023E
        gbc.setState(0x357b, 0xbdbe, 0xc240, 0x1e5, 0x22b3, 0x48f3, 0x0, 0x0);
        gbc.writeMem(0x357b, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0xbdbe);
        EXPECT(gbc.pc(), 0x357d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DC 023F
        gbc.setState(0xa7aa, 0x656a, 0x3a50, 0xab22, 0x8778, 0xac12, 0x0, 0x1);
        gbc.writeMem(0xa7aa, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x656a);
        EXPECT(gbc.pc(), 0xa7ac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa7aa), 0xcb);
        EXPECT(gbc.readMem(0xa7ab), 0xdc);
        // CB DC 0240
        gbc.setState(0x6399, 0xfe2a, 0x5ee0, 0x4f35, 0x6d4c, 0xd71, 0x1, 0x0);
        gbc.writeMem(0x6399, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xfe2a);
        EXPECT(gbc.pc(), 0x639b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DC 0241
        gbc.setState(0x6c5e, 0x22d7, 0xcff0, 0x492a, 0x34a9, 0x95d1, 0x1, 0x0);
        gbc.writeMem(0x6c5e, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x22d7);
        EXPECT(gbc.pc(), 0x6c60);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DC 0242
        gbc.setState(0x31a9, 0xa298, 0x72e0, 0xd253, 0x2cd5, 0x506a, 0x0, 0x0);
        gbc.writeMem(0x31a9, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xa298);
        EXPECT(gbc.pc(), 0x31ab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DC 0243
        gbc.setState(0x9e85, 0x86d1, 0x1160, 0x7a53, 0x7683, 0x2707, 0x1, 0x0);
        gbc.writeMem(0x9e85, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x86d1);
        EXPECT(gbc.pc(), 0x9e87);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9e85), 0xcb);
        EXPECT(gbc.readMem(0x9e86), 0xdc);
        // CB DC 0244
        gbc.setState(0x816f, 0x5a10, 0xa010, 0x5f2f, 0xa892, 0x1dae, 0x0, 0x1);
        gbc.writeMem(0x816f, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x5a10);
        EXPECT(gbc.pc(), 0x8171);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x816f), 0xcb);
        EXPECT(gbc.readMem(0x8170), 0xdc);
        // CB DC 0245
        gbc.setState(0x1ae8, 0x780d, 0x82a0, 0x973c, 0xe4e5, 0xbe57, 0x1, 0x1);
        gbc.writeMem(0x1ae8, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x780d);
        EXPECT(gbc.pc(), 0x1aea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DC 0246
        gbc.setState(0xa943, 0x4abc, 0xa380, 0x3e06, 0x7070, 0xe179, 0x1, 0x1);
        gbc.writeMem(0xa943, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x4abc);
        EXPECT(gbc.pc(), 0xa945);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa943), 0xcb);
        EXPECT(gbc.readMem(0xa944), 0xdc);
        // CB DC 0247
        gbc.setState(0x96dc, 0x2a20, 0x1480, 0xbc50, 0x774, 0x3aa6, 0x0, 0x1);
        gbc.writeMem(0x96dc, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x2a20);
        EXPECT(gbc.pc(), 0x96de);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x96dc), 0xcb);
        EXPECT(gbc.readMem(0x96dd), 0xdc);
        // CB DC 0248
        gbc.setState(0x4058, 0x950e, 0x4940, 0x6fbb, 0x2a00, 0xd787, 0x1, 0x0);
        gbc.writeMem(0x4058, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x950e);
        EXPECT(gbc.pc(), 0x405a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DC 0249
        gbc.setState(0xe960, 0x7bf0, 0x16d0, 0x15e9, 0x9c6a, 0x9be3, 0x0, 0x0);
        gbc.writeMem(0xe960, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x7bf0);
        EXPECT(gbc.pc(), 0xe962);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe960), 0xcb);
        EXPECT(gbc.readMem(0xe961), 0xdc);
        // CB DC 024A
        gbc.setState(0xdd19, 0x7b05, 0x75c0, 0xd8ba, 0x6aea, 0x2629, 0x0, 0x0);
        gbc.writeMem(0xdd19, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x7b05);
        EXPECT(gbc.pc(), 0xdd1b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdd19), 0xcb);
        EXPECT(gbc.readMem(0xdd1a), 0xdc);
        // CB DC 024B
        gbc.setState(0xe0a9, 0x5bc3, 0x63b0, 0xeb00, 0x35d2, 0xff82, 0x0, 0x0);
        gbc.writeMem(0xe0a9, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x5bc3);
        EXPECT(gbc.pc(), 0xe0ab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe0a9), 0xcb);
        EXPECT(gbc.readMem(0xe0aa), 0xdc);
        // CB DC 024C
        gbc.setState(0x1096, 0x3c3d, 0xfc10, 0x1b4c, 0x45e4, 0xa4c2, 0x0, 0x0);
        gbc.writeMem(0x1096, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x3c3d);
        EXPECT(gbc.pc(), 0x1098);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DC 024D
        gbc.setState(0xb971, 0x95ab, 0xdf40, 0x90c2, 0x6945, 0xb86f, 0x0, 0x1);
        gbc.writeMem(0xb971, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x95ab);
        EXPECT(gbc.pc(), 0xb973);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb971), 0xcb);
        EXPECT(gbc.readMem(0xb972), 0xdc);
        // CB DC 024F
        gbc.setState(0x8310, 0xc87e, 0xd050, 0x1511, 0xa4ac, 0x12eb, 0x1, 0x0);
        gbc.writeMem(0x8310, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0xc87e);
        EXPECT(gbc.pc(), 0x8312);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8310), 0xcb);
        EXPECT(gbc.readMem(0x8311), 0xdc);
        // CB DC 0250
        gbc.setState(0x707c, 0xbcd1, 0xd870, 0xd8e6, 0xa4be, 0x1f47, 0x0, 0x0);
        gbc.writeMem(0x707c, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0xbcd1);
        EXPECT(gbc.pc(), 0x707e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DC 0251
        gbc.setState(0x5825, 0x6979, 0x5ed0, 0x82a5, 0x7e01, 0xa625, 0x0, 0x1);
        gbc.writeMem(0x5825, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x6979);
        EXPECT(gbc.pc(), 0x5827);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DC 0252
        gbc.setState(0x118a, 0x8d36, 0x8540, 0x352c, 0xaa0a, 0x54a6, 0x1, 0x1);
        gbc.writeMem(0x118a, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x8d36);
        EXPECT(gbc.pc(), 0x118c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DC 0253
        gbc.setState(0xa953, 0x4029, 0xeda0, 0x4b8a, 0xb59b, 0x898a, 0x1, 0x1);
        gbc.writeMem(0xa953, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x4029);
        EXPECT(gbc.pc(), 0xa955);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa953), 0xcb);
        EXPECT(gbc.readMem(0xa954), 0xdc);
        // CB DC 0254
        gbc.setState(0xa5f7, 0xc6b5, 0x75f0, 0xac14, 0x7e0d, 0xe275, 0x1, 0x1);
        gbc.writeMem(0xa5f7, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xc6b5);
        EXPECT(gbc.pc(), 0xa5f9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa5f7), 0xcb);
        EXPECT(gbc.readMem(0xa5f8), 0xdc);
        // CB DC 0255
        gbc.setState(0xe771, 0x9957, 0x9f0, 0x7bb5, 0x7b, 0xed42, 0x1, 0x1);
        gbc.writeMem(0xe771, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x9957);
        EXPECT(gbc.pc(), 0xe773);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe771), 0xcb);
        EXPECT(gbc.readMem(0xe772), 0xdc);
        // CB DC 0256
        gbc.setState(0x34d0, 0x4360, 0x21d0, 0x3676, 0x7603, 0x464d, 0x1, 0x0);
        gbc.writeMem(0x34d0, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x4360);
        EXPECT(gbc.pc(), 0x34d2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DC 0257
        gbc.setState(0x58eb, 0xe8c3, 0xa9e0, 0x7ab0, 0xa1df, 0x1daa, 0x1, 0x0);
        gbc.writeMem(0x58eb, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0xe8c3);
        EXPECT(gbc.pc(), 0x58ed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DC 0258
        gbc.setState(0x365, 0xa604, 0x6f20, 0x74f6, 0xc04e, 0xfef1, 0x1, 0x0);
        gbc.writeMem(0x365, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0xa604);
        EXPECT(gbc.pc(), 0x367);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DC 0259
        gbc.setState(0x7953, 0x412a, 0xcf30, 0x2de6, 0x354e, 0xec90, 0x0, 0x0);
        gbc.writeMem(0x7953, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x412a);
        EXPECT(gbc.pc(), 0x7955);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DC 025B
        gbc.setState(0xd2f9, 0x1ddd, 0x20a0, 0xf2f0, 0x1a8e, 0x12e4, 0x0, 0x0);
        gbc.writeMem(0xd2f9, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x1ddd);
        EXPECT(gbc.pc(), 0xd2fb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd2f9), 0xcb);
        EXPECT(gbc.readMem(0xd2fa), 0xdc);
        // CB DC 025C
        gbc.setState(0xc79c, 0x2702, 0x6f40, 0xa87b, 0x3a6a, 0x4f79, 0x0, 0x0);
        gbc.writeMem(0xc79c, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x2702);
        EXPECT(gbc.pc(), 0xc79e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc79c), 0xcb);
        EXPECT(gbc.readMem(0xc79d), 0xdc);
        // CB DC 025D
        gbc.setState(0xa016, 0x932a, 0xf050, 0x9c5f, 0x8162, 0x10a3, 0x1, 0x1);
        gbc.writeMem(0xa016, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x932a);
        EXPECT(gbc.pc(), 0xa018);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa016), 0xcb);
        EXPECT(gbc.readMem(0xa017), 0xdc);
        // CB DC 025E
        gbc.setState(0x2e8b, 0xa673, 0xef20, 0xd1d, 0x315, 0xe570, 0x0, 0x0);
        gbc.writeMem(0x2e8b, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0xa673);
        EXPECT(gbc.pc(), 0x2e8d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DC 025F
        gbc.setState(0x61d5, 0x11cb, 0x1cf0, 0x9e8d, 0x45f8, 0xc9f7, 0x1, 0x1);
        gbc.writeMem(0x61d5, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x11cb);
        EXPECT(gbc.pc(), 0x61d7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DC 0260
        gbc.setState(0xead6, 0xba43, 0xc3c0, 0xaa9f, 0x8aac, 0x896b, 0x0, 0x1);
        gbc.writeMem(0xead6, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0xba43);
        EXPECT(gbc.pc(), 0xead8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xead6), 0xcb);
        EXPECT(gbc.readMem(0xead7), 0xdc);
        // CB DC 0261
        gbc.setState(0xaf2, 0x53d2, 0x6a00, 0x40a5, 0x25b5, 0x4621, 0x0, 0x0);
        gbc.writeMem(0xaf2, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x53d2);
        EXPECT(gbc.pc(), 0xaf4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DC 0262
        gbc.setState(0xa322, 0x4d0, 0x1360, 0x7551, 0x3ba8, 0x315e, 0x1, 0x1);
        gbc.writeMem(0xa322, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x4d0);
        EXPECT(gbc.pc(), 0xa324);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa322), 0xcb);
        EXPECT(gbc.readMem(0xa323), 0xdc);
        // CB DC 0263
        gbc.setState(0x650d, 0x2a2, 0xd420, 0x1ecf, 0xf592, 0xe64c, 0x1, 0x0);
        gbc.writeMem(0x650d, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x2a2);
        EXPECT(gbc.pc(), 0x650f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DC 0264
        gbc.setState(0xbcaf, 0xcd78, 0x36d0, 0x174c, 0xf76b, 0xb640, 0x0, 0x0);
        gbc.writeMem(0xbcaf, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0xcd78);
        EXPECT(gbc.pc(), 0xbcb1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbcaf), 0xcb);
        EXPECT(gbc.readMem(0xbcb0), 0xdc);
        // CB DC 0265
        gbc.setState(0xe436, 0x3cf4, 0x1bf0, 0x7d18, 0x2e46, 0x600d, 0x0, 0x1);
        gbc.writeMem(0xe436, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x3cf4);
        EXPECT(gbc.pc(), 0xe438);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe436), 0xcb);
        EXPECT(gbc.readMem(0xe437), 0xdc);
        // CB DC 0266
        gbc.setState(0x26b8, 0xf175, 0x9dc0, 0x3e3f, 0x2c27, 0xd59a, 0x0, 0x0);
        gbc.writeMem(0x26b8, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0xf175);
        EXPECT(gbc.pc(), 0x26ba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DC 0267
        gbc.setState(0xb3f, 0x558d, 0xbb90, 0xae4d, 0x1242, 0x3628, 0x1, 0x0);
        gbc.writeMem(0xb3f, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x558d);
        EXPECT(gbc.pc(), 0xb41);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DC 0268
        gbc.setState(0xb24f, 0x9815, 0xd870, 0x8005, 0xd688, 0xdb12, 0x1, 0x0);
        gbc.writeMem(0xb24f, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x9815);
        EXPECT(gbc.pc(), 0xb251);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb24f), 0xcb);
        EXPECT(gbc.readMem(0xb250), 0xdc);
        // CB DC 0269
        gbc.setState(0x8076, 0x21d2, 0x3f0, 0xf4b2, 0xe53b, 0x2b8e, 0x1, 0x0);
        gbc.writeMem(0x8076, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x21d2);
        EXPECT(gbc.pc(), 0x8078);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8076), 0xcb);
        EXPECT(gbc.readMem(0x8077), 0xdc);
        // CB DC 026A
        gbc.setState(0xc106, 0xedbe, 0x2130, 0xb999, 0xe89f, 0xb732, 0x0, 0x0);
        gbc.writeMem(0xc106, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xedbe);
        EXPECT(gbc.pc(), 0xc108);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc106), 0xcb);
        EXPECT(gbc.readMem(0xc107), 0xdc);
        // CB DC 026C
        gbc.setState(0x8ae0, 0x9c04, 0x6d80, 0x3333, 0x43be, 0xc0d5, 0x0, 0x0);
        gbc.writeMem(0x8ae0, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x9c04);
        EXPECT(gbc.pc(), 0x8ae2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ae0), 0xcb);
        EXPECT(gbc.readMem(0x8ae1), 0xdc);
        // CB DC 026D
        gbc.setState(0x61ad, 0xbc8a, 0x2ef0, 0xb4a8, 0xd68a, 0xb888, 0x0, 0x1);
        gbc.writeMem(0x61ad, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0xbc8a);
        EXPECT(gbc.pc(), 0x61af);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DC 026E
        gbc.setState(0x5bba, 0xe2e0, 0xfa10, 0x5c2e, 0x884a, 0xb212, 0x1, 0x0);
        gbc.writeMem(0x5bba, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0xe2e0);
        EXPECT(gbc.pc(), 0x5bbc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DC 026F
        gbc.setState(0x151e, 0x2071, 0x50c0, 0xc11, 0x43f, 0xb93e, 0x0, 0x1);
        gbc.writeMem(0x151e, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x2071);
        EXPECT(gbc.pc(), 0x1520);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DC 0270
        gbc.setState(0xa658, 0xbffc, 0x3940, 0xcf30, 0x50e0, 0x4d6a, 0x1, 0x0);
        gbc.writeMem(0xa658, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xbffc);
        EXPECT(gbc.pc(), 0xa65a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa658), 0xcb);
        EXPECT(gbc.readMem(0xa659), 0xdc);
        // CB DC 0271
        gbc.setState(0xbcde, 0x45a1, 0x2640, 0x694b, 0xd97f, 0x2b04, 0x1, 0x1);
        gbc.writeMem(0xbcde, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x45a1);
        EXPECT(gbc.pc(), 0xbce0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbcde), 0xcb);
        EXPECT(gbc.readMem(0xbcdf), 0xdc);
        // CB DC 0272
        gbc.setState(0x3950, 0xa796, 0x2810, 0xa295, 0x395a, 0x33, 0x0, 0x0);
        gbc.writeMem(0x3950, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0xa796);
        EXPECT(gbc.pc(), 0x3952);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DC 0273
        gbc.setState(0xcd13, 0xb0cb, 0x5c00, 0x20dc, 0x829, 0xdabe, 0x1, 0x1);
        gbc.writeMem(0xcd13, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0xb0cb);
        EXPECT(gbc.pc(), 0xcd15);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcd13), 0xcb);
        EXPECT(gbc.readMem(0xcd14), 0xdc);
        // CB DC 0274
        gbc.setState(0x7138, 0xa88e, 0xce70, 0xd81, 0xd123, 0x5abd, 0x1, 0x0);
        gbc.writeMem(0x7138, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0xa88e);
        EXPECT(gbc.pc(), 0x713a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DC 0275
        gbc.setState(0x9f56, 0x4fe6, 0x5a50, 0x4dc3, 0x885f, 0x73b3, 0x1, 0x0);
        gbc.writeMem(0x9f56, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x4fe6);
        EXPECT(gbc.pc(), 0x9f58);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9f56), 0xcb);
        EXPECT(gbc.readMem(0x9f57), 0xdc);
        // CB DC 0276
        gbc.setState(0x189b, 0x5a0b, 0x74e0, 0x92f1, 0x3371, 0x78f9, 0x0, 0x1);
        gbc.writeMem(0x189b, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x5a0b);
        EXPECT(gbc.pc(), 0x189d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DC 0277
        gbc.setState(0x8047, 0xabf8, 0x95d0, 0xf784, 0xb93c, 0xce0b, 0x0, 0x1);
        gbc.writeMem(0x8047, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0xabf8);
        EXPECT(gbc.pc(), 0x8049);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8047), 0xcb);
        EXPECT(gbc.readMem(0x8048), 0xdc);
        // CB DC 0278
        gbc.setState(0xbd4f, 0x749b, 0x6b60, 0xcc61, 0xc096, 0xc74b, 0x1, 0x0);
        gbc.writeMem(0xbd4f, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x749b);
        EXPECT(gbc.pc(), 0xbd51);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbd4f), 0xcb);
        EXPECT(gbc.readMem(0xbd50), 0xdc);
        // CB DC 0279
        gbc.setState(0x88ab, 0x4fed, 0x9fc0, 0x1196, 0xc131, 0x871, 0x1, 0x1);
        gbc.writeMem(0x88ab, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x4fed);
        EXPECT(gbc.pc(), 0x88ad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x88ab), 0xcb);
        EXPECT(gbc.readMem(0x88ac), 0xdc);
        // CB DC 027A
        gbc.setState(0xe6d1, 0xeff9, 0x9ef0, 0xf8a0, 0xbc34, 0xbff2, 0x0, 0x0);
        gbc.writeMem(0xe6d1, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0xeff9);
        EXPECT(gbc.pc(), 0xe6d3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe6d1), 0xcb);
        EXPECT(gbc.readMem(0xe6d2), 0xdc);
        // CB DC 027B
        gbc.setState(0x77b1, 0xe527, 0x2ad0, 0x58cd, 0x2272, 0xbba4, 0x1, 0x0);
        gbc.writeMem(0x77b1, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0xe527);
        EXPECT(gbc.pc(), 0x77b3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DC 027C
        gbc.setState(0xe102, 0x19fa, 0xde90, 0xa328, 0xdc96, 0xc182, 0x0, 0x0);
        gbc.writeMem(0xe102, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x19fa);
        EXPECT(gbc.pc(), 0xe104);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe102), 0xcb);
        EXPECT(gbc.readMem(0xe103), 0xdc);
        // CB DC 027D
        gbc.setState(0x3f9c, 0x451d, 0xe760, 0xf52f, 0xf073, 0xf141, 0x1, 0x1);
        gbc.writeMem(0x3f9c, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x451d);
        EXPECT(gbc.pc(), 0x3f9e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DC 027E
        gbc.setState(0xacd4, 0xefe0, 0xbc40, 0x961, 0x95e8, 0x6525, 0x1, 0x0);
        gbc.writeMem(0xacd4, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0xefe0);
        EXPECT(gbc.pc(), 0xacd6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xacd4), 0xcb);
        EXPECT(gbc.readMem(0xacd5), 0xdc);
        // CB DC 027F
        gbc.setState(0x6478, 0xe2ae, 0xffd0, 0x6662, 0x3ed, 0x691c, 0x0, 0x0);
        gbc.writeMem(0x6478, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0xe2ae);
        EXPECT(gbc.pc(), 0x647a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DC 0280
        gbc.setState(0x2313, 0xc624, 0xf440, 0x4123, 0x7073, 0x94d9, 0x1, 0x0);
        gbc.writeMem(0x2313, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0xc624);
        EXPECT(gbc.pc(), 0x2315);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DC 0281
        gbc.setState(0x7bc2, 0x2cda, 0x7ad0, 0x6c1f, 0x8853, 0x682a, 0x1, 0x0);
        gbc.writeMem(0x7bc2, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x2cda);
        EXPECT(gbc.pc(), 0x7bc4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DC 0282
        gbc.setState(0x3fb8, 0xdf2c, 0x6100, 0xd14c, 0x477c, 0x162, 0x0, 0x1);
        gbc.writeMem(0x3fb8, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xdf2c);
        EXPECT(gbc.pc(), 0x3fba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DC 0283
        gbc.setState(0x1069, 0xfc65, 0x58a0, 0x5373, 0x323e, 0x6ec9, 0x0, 0x1);
        gbc.writeMem(0x1069, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0xfc65);
        EXPECT(gbc.pc(), 0x106b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DC 0284
        gbc.setState(0xc68e, 0x951c, 0xaa90, 0x9b41, 0x2230, 0x9167, 0x0, 0x0);
        gbc.writeMem(0xc68e, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x951c);
        EXPECT(gbc.pc(), 0xc690);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc68e), 0xcb);
        EXPECT(gbc.readMem(0xc68f), 0xdc);
        // CB DC 0285
        gbc.setState(0xb36e, 0xddba, 0xced0, 0xfa1e, 0xb316, 0x86ab, 0x0, 0x1);
        gbc.writeMem(0xb36e, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xddba);
        EXPECT(gbc.pc(), 0xb370);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb36e), 0xcb);
        EXPECT(gbc.readMem(0xb36f), 0xdc);
        // CB DC 0286
        gbc.setState(0xe76e, 0xfaf5, 0x6ec0, 0xacf0, 0x55d2, 0x282c, 0x0, 0x1);
        gbc.writeMem(0xe76e, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0xfaf5);
        EXPECT(gbc.pc(), 0xe770);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe76e), 0xcb);
        EXPECT(gbc.readMem(0xe76f), 0xdc);
        // CB DC 0287
        gbc.setState(0x4a00, 0x7e07, 0x9c10, 0xb21, 0x565a, 0xdbb5, 0x0, 0x0);
        gbc.writeMem(0x4a00, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x7e07);
        EXPECT(gbc.pc(), 0x4a02);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DC 0288
        gbc.setState(0x9c62, 0x5253, 0x6120, 0x8b4f, 0xc193, 0x2dfd, 0x1, 0x1);
        gbc.writeMem(0x9c62, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x5253);
        EXPECT(gbc.pc(), 0x9c64);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9c62), 0xcb);
        EXPECT(gbc.readMem(0x9c63), 0xdc);
        // CB DC 0289
        gbc.setState(0x418b, 0x1eba, 0x7530, 0x4e, 0x4016, 0x8df3, 0x1, 0x1);
        gbc.writeMem(0x418b, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x1eba);
        EXPECT(gbc.pc(), 0x418d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DC 028B
        gbc.setState(0x51e4, 0x99cf, 0xe980, 0x4500, 0x48d8, 0xf811, 0x1, 0x1);
        gbc.writeMem(0x51e4, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x99cf);
        EXPECT(gbc.pc(), 0x51e6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DC 028C
        gbc.setState(0x5e3d, 0xff85, 0xadf0, 0xf43, 0xb3fc, 0xcb5e, 0x0, 0x0);
        gbc.writeMem(0x5e3d, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0xff85);
        EXPECT(gbc.pc(), 0x5e3f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DC 028D
        gbc.setState(0x429b, 0x7d55, 0x1f30, 0xc9fa, 0xf12d, 0x4bd4, 0x0, 0x0);
        gbc.writeMem(0x429b, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x7d55);
        EXPECT(gbc.pc(), 0x429d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DC 028E
        gbc.setState(0xdc94, 0xc0d2, 0x96e0, 0xb545, 0xcc2c, 0x93b9, 0x1, 0x1);
        gbc.writeMem(0xdc94, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0xc0d2);
        EXPECT(gbc.pc(), 0xdc96);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdc94), 0xcb);
        EXPECT(gbc.readMem(0xdc95), 0xdc);
        // CB DC 028F
        gbc.setState(0x4479, 0xd910, 0xfbe0, 0xbc0c, 0xd061, 0xa605, 0x0, 0x0);
        gbc.writeMem(0x4479, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0xd910);
        EXPECT(gbc.pc(), 0x447b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DC 0291
        gbc.setState(0x99e, 0xc339, 0xc390, 0x3672, 0xd474, 0x7fe6, 0x0, 0x1);
        gbc.writeMem(0x99e, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xc339);
        EXPECT(gbc.pc(), 0x9a0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DC 0292
        gbc.setState(0x3c85, 0x4311, 0x1c00, 0xcc59, 0xb48b, 0x1e85, 0x1, 0x0);
        gbc.writeMem(0x3c85, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x4311);
        EXPECT(gbc.pc(), 0x3c87);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DC 0294
        gbc.setState(0xe2bb, 0x968f, 0xa9c0, 0xeb79, 0xdc22, 0x1349, 0x1, 0x1);
        gbc.writeMem(0xe2bb, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x968f);
        EXPECT(gbc.pc(), 0xe2bd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe2bb), 0xcb);
        EXPECT(gbc.readMem(0xe2bc), 0xdc);
        // CB DC 0295
        gbc.setState(0xaf6a, 0x8f3, 0x7ce0, 0xa02, 0x3548, 0x3908, 0x0, 0x1);
        gbc.writeMem(0xaf6a, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x8f3);
        EXPECT(gbc.pc(), 0xaf6c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaf6a), 0xcb);
        EXPECT(gbc.readMem(0xaf6b), 0xdc);
        // CB DC 0296
        gbc.setState(0x7d7e, 0x6e6e, 0x4320, 0xa10f, 0x98ca, 0xafc, 0x0, 0x1);
        gbc.writeMem(0x7d7e, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x6e6e);
        EXPECT(gbc.pc(), 0x7d80);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DC 0297
        gbc.setState(0x5695, 0x5557, 0x18b0, 0xe2e6, 0xa8ac, 0x29e7, 0x0, 0x0);
        gbc.writeMem(0x5695, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x5557);
        EXPECT(gbc.pc(), 0x5697);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DC 0298
        gbc.setState(0x2b80, 0x2be7, 0x3b0, 0x3300, 0xc0d2, 0x24e4, 0x1, 0x0);
        gbc.writeMem(0x2b80, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x2be7);
        EXPECT(gbc.pc(), 0x2b82);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DC 0299
        gbc.setState(0x2956, 0x59e, 0x1300, 0x2a6, 0xb355, 0x6cf9, 0x1, 0x1);
        gbc.writeMem(0x2956, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x59e);
        EXPECT(gbc.pc(), 0x2958);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DC 029A
        gbc.setState(0x2a2, 0x81ec, 0xd920, 0x189b, 0x8f4c, 0xd6c1, 0x1, 0x1);
        gbc.writeMem(0x2a2, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x81ec);
        EXPECT(gbc.pc(), 0x2a4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DC 029B
        gbc.setState(0x807e, 0x768e, 0x9360, 0x62cb, 0x477a, 0x4851, 0x1, 0x0);
        gbc.writeMem(0x807e, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x768e);
        EXPECT(gbc.pc(), 0x8080);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x807e), 0xcb);
        EXPECT(gbc.readMem(0x807f), 0xdc);
        // CB DC 029C
        gbc.setState(0xa5d9, 0xa679, 0x2cf0, 0xabc, 0xf268, 0x9a3f, 0x0, 0x0);
        gbc.writeMem(0xa5d9, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xa679);
        EXPECT(gbc.pc(), 0xa5db);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa5d9), 0xcb);
        EXPECT(gbc.readMem(0xa5da), 0xdc);
        // CB DC 029D
        gbc.setState(0x6cbe, 0xace6, 0xc740, 0x5eba, 0x354d, 0xdc2, 0x0, 0x1);
        gbc.writeMem(0x6cbe, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0xace6);
        EXPECT(gbc.pc(), 0x6cc0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DC 029E
        gbc.setState(0xef61, 0xca15, 0xd7c0, 0x59ff, 0x8c52, 0xf6b2, 0x0, 0x1);
        gbc.writeMem(0xef61, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0xca15);
        EXPECT(gbc.pc(), 0xef63);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xef61), 0xcb);
        EXPECT(gbc.readMem(0xef62), 0xdc);
        // CB DC 029F
        gbc.setState(0xacc4, 0x7622, 0x66d0, 0x8d20, 0x38fa, 0x5e3f, 0x1, 0x0);
        gbc.writeMem(0xacc4, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x7622);
        EXPECT(gbc.pc(), 0xacc6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xacc4), 0xcb);
        EXPECT(gbc.readMem(0xacc5), 0xdc);
        // CB DC 02A0
        gbc.setState(0x1897, 0x4bc7, 0x91e0, 0xaeca, 0x3fed, 0x88cb, 0x1, 0x1);
        gbc.writeMem(0x1897, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x4bc7);
        EXPECT(gbc.pc(), 0x1899);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DC 02A1
        gbc.setState(0xcf14, 0x5b5, 0x61e0, 0x56ae, 0x8f4a, 0xe3e7, 0x1, 0x1);
        gbc.writeMem(0xcf14, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x5b5);
        EXPECT(gbc.pc(), 0xcf16);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcf14), 0xcb);
        EXPECT(gbc.readMem(0xcf15), 0xdc);
        // CB DC 02A2
        gbc.setState(0x2d88, 0xe53e, 0x8e0, 0x102e, 0x3cae, 0x975a, 0x1, 0x0);
        gbc.writeMem(0x2d88, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0xe53e);
        EXPECT(gbc.pc(), 0x2d8a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DC 02A3
        gbc.setState(0x283e, 0xb6bd, 0x2dc0, 0xf354, 0x6851, 0x5638, 0x1, 0x1);
        gbc.writeMem(0x283e, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0xb6bd);
        EXPECT(gbc.pc(), 0x2840);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DC 02A4
        gbc.setState(0x2e56, 0x9ece, 0x92e0, 0xfd0c, 0xfd9d, 0xcff9, 0x1, 0x0);
        gbc.writeMem(0x2e56, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x9ece);
        EXPECT(gbc.pc(), 0x2e58);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DC 02A5
        gbc.setState(0x1115, 0xe099, 0x5d90, 0x7001, 0x6858, 0x22dc, 0x1, 0x1);
        gbc.writeMem(0x1115, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0xe099);
        EXPECT(gbc.pc(), 0x1117);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DC 02A6
        gbc.setState(0x669b, 0x29eb, 0x1d10, 0xb081, 0xf97e, 0x74cd, 0x1, 0x0);
        gbc.writeMem(0x669b, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x29eb);
        EXPECT(gbc.pc(), 0x669d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DC 02A7
        gbc.setState(0xa0d4, 0x7b0f, 0xd7c0, 0xb6f9, 0x7daf, 0xc454, 0x0, 0x0);
        gbc.writeMem(0xa0d4, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x7b0f);
        EXPECT(gbc.pc(), 0xa0d6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa0d4), 0xcb);
        EXPECT(gbc.readMem(0xa0d5), 0xdc);
        // CB DC 02A8
        gbc.setState(0x74de, 0x752b, 0xecf0, 0x33a7, 0x2e91, 0x68e4, 0x0, 0x0);
        gbc.writeMem(0x74de, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x752b);
        EXPECT(gbc.pc(), 0x74e0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DC 02A9
        gbc.setState(0x6b1e, 0x5e99, 0xe1b0, 0xd67e, 0x705a, 0x1a31, 0x0, 0x1);
        gbc.writeMem(0x6b1e, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x5e99);
        EXPECT(gbc.pc(), 0x6b20);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DC 02AA
        gbc.setState(0xf64, 0x4887, 0x7ad0, 0x1ee8, 0x42cf, 0xbf30, 0x0, 0x0);
        gbc.writeMem(0xf64, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x4887);
        EXPECT(gbc.pc(), 0xf66);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DC 02AB
        gbc.setState(0x86c6, 0xcedd, 0x9230, 0x5cea, 0xa953, 0xd0e1, 0x1, 0x1);
        gbc.writeMem(0x86c6, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xcedd);
        EXPECT(gbc.pc(), 0x86c8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x86c6), 0xcb);
        EXPECT(gbc.readMem(0x86c7), 0xdc);
        // CB DC 02AC
        gbc.setState(0x51fb, 0xbead, 0x200, 0x9a01, 0x1bfb, 0x9fcc, 0x0, 0x1);
        gbc.writeMem(0x51fb, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0xbead);
        EXPECT(gbc.pc(), 0x51fd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DC 02AE
        gbc.setState(0x51ce, 0xeea1, 0xa860, 0x7a64, 0xc918, 0x94a1, 0x1, 0x1);
        gbc.writeMem(0x51ce, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0xeea1);
        EXPECT(gbc.pc(), 0x51d0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DC 02AF
        gbc.setState(0xd158, 0xdc52, 0xc6e0, 0x5259, 0xc34c, 0x1d08, 0x1, 0x0);
        gbc.writeMem(0xd158, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0xdc52);
        EXPECT(gbc.pc(), 0xd15a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd158), 0xcb);
        EXPECT(gbc.readMem(0xd159), 0xdc);
        // CB DC 02B0
        gbc.setState(0x303f, 0xe939, 0xdfd0, 0xe6b2, 0x805a, 0xe2c0, 0x1, 0x1);
        gbc.writeMem(0x303f, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0xe939);
        EXPECT(gbc.pc(), 0x3041);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DC 02B1
        gbc.setState(0xe095, 0x7744, 0xca10, 0xdcf7, 0x46d1, 0x272b, 0x0, 0x1);
        gbc.writeMem(0xe095, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x7744);
        EXPECT(gbc.pc(), 0xe097);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe095), 0xcb);
        EXPECT(gbc.readMem(0xe096), 0xdc);
        // CB DC 02B2
        gbc.setState(0xbd08, 0x5e78, 0xe3b0, 0xed29, 0xdb96, 0x7e5c, 0x1, 0x1);
        gbc.writeMem(0xbd08, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x5e78);
        EXPECT(gbc.pc(), 0xbd0a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbd08), 0xcb);
        EXPECT(gbc.readMem(0xbd09), 0xdc);
        // CB DC 02B3
        gbc.setState(0xb5e9, 0x3714, 0xd980, 0xba1a, 0xb991, 0xe2d9, 0x1, 0x1);
        gbc.writeMem(0xb5e9, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x3714);
        EXPECT(gbc.pc(), 0xb5eb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb5e9), 0xcb);
        EXPECT(gbc.readMem(0xb5ea), 0xdc);
        // CB DC 02B4
        gbc.setState(0x5217, 0x93ba, 0x50, 0x3b3d, 0x13f4, 0x6159, 0x1, 0x1);
        gbc.writeMem(0x5217, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x93ba);
        EXPECT(gbc.pc(), 0x5219);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DC 02B5
        gbc.setState(0x23b5, 0x1127, 0x7e0, 0x789b, 0xa09d, 0x402a, 0x1, 0x0);
        gbc.writeMem(0x23b5, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x1127);
        EXPECT(gbc.pc(), 0x23b7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DC 02B6
        gbc.setState(0xc826, 0xf5e4, 0x5960, 0xaa98, 0x130e, 0x67fb, 0x1, 0x0);
        gbc.writeMem(0xc826, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0xf5e4);
        EXPECT(gbc.pc(), 0xc828);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc826), 0xcb);
        EXPECT(gbc.readMem(0xc827), 0xdc);
        // CB DC 02B7
        gbc.setState(0xac07, 0x4d28, 0x7e90, 0x21b9, 0xb10d, 0xbd51, 0x1, 0x1);
        gbc.writeMem(0xac07, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x4d28);
        EXPECT(gbc.pc(), 0xac09);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xac07), 0xcb);
        EXPECT(gbc.readMem(0xac08), 0xdc);
        // CB DC 02B8
        gbc.setState(0xd25d, 0x4655, 0x9360, 0x6f33, 0xf51a, 0xad21, 0x1, 0x0);
        gbc.writeMem(0xd25d, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x4655);
        EXPECT(gbc.pc(), 0xd25f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd25d), 0xcb);
        EXPECT(gbc.readMem(0xd25e), 0xdc);
        // CB DC 02B9
        gbc.setState(0x4be1, 0xc6aa, 0x5ea0, 0x4ab2, 0xcc01, 0x6ee9, 0x0, 0x0);
        gbc.writeMem(0x4be1, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0xc6aa);
        EXPECT(gbc.pc(), 0x4be3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DC 02BA
        gbc.setState(0xa15f, 0xe8ca, 0x6b20, 0xede4, 0xbcc0, 0x28bf, 0x0, 0x0);
        gbc.writeMem(0xa15f, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0xe8ca);
        EXPECT(gbc.pc(), 0xa161);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa15f), 0xcb);
        EXPECT(gbc.readMem(0xa160), 0xdc);
        // CB DC 02BB
        gbc.setState(0xb2d2, 0xf188, 0xb110, 0xdae3, 0x94f, 0x4edd, 0x1, 0x0);
        gbc.writeMem(0xb2d2, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0xf188);
        EXPECT(gbc.pc(), 0xb2d4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb2d2), 0xcb);
        EXPECT(gbc.readMem(0xb2d3), 0xdc);
        // CB DC 02BC
        gbc.setState(0x2ae3, 0x626e, 0x7ff0, 0xdcb5, 0xb483, 0x39b3, 0x1, 0x1);
        gbc.writeMem(0x2ae3, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x626e);
        EXPECT(gbc.pc(), 0x2ae5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DC 02BD
        gbc.setState(0x453b, 0xe07e, 0xfbd0, 0xa40b, 0x885, 0x57e8, 0x1, 0x1);
        gbc.writeMem(0x453b, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0xe07e);
        EXPECT(gbc.pc(), 0x453d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DC 02BE
        gbc.setState(0x4b3e, 0x782a, 0x78b0, 0xc0da, 0x19a3, 0xbfb9, 0x0, 0x0);
        gbc.writeMem(0x4b3e, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x782a);
        EXPECT(gbc.pc(), 0x4b40);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DC 02BF
        gbc.setState(0x1acb, 0xc943, 0x1680, 0x752a, 0x5c16, 0x482f, 0x0, 0x1);
        gbc.writeMem(0x1acb, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xc943);
        EXPECT(gbc.pc(), 0x1acd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DC 02C0
        gbc.setState(0x790, 0x42d5, 0xe8d0, 0x4f2f, 0x2a6d, 0x5546, 0x0, 0x0);
        gbc.writeMem(0x790, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x42d5);
        EXPECT(gbc.pc(), 0x792);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DC 02C2
        gbc.setState(0xa15d, 0xd179, 0xb120, 0x32c7, 0x26b6, 0x9c5b, 0x0, 0x1);
        gbc.writeMem(0xa15d, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0xd179);
        EXPECT(gbc.pc(), 0xa15f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa15d), 0xcb);
        EXPECT(gbc.readMem(0xa15e), 0xdc);
        // CB DC 02C3
        gbc.setState(0x6ea0, 0xced8, 0x77e0, 0x6c52, 0x4ba8, 0xa40f, 0x1, 0x0);
        gbc.writeMem(0x6ea0, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0xced8);
        EXPECT(gbc.pc(), 0x6ea2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DC 02C4
        gbc.setState(0xd247, 0x5361, 0xa4c0, 0x1539, 0x3479, 0x4572, 0x0, 0x0);
        gbc.writeMem(0xd247, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x5361);
        EXPECT(gbc.pc(), 0xd249);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd247), 0xcb);
        EXPECT(gbc.readMem(0xd248), 0xdc);
        // CB DC 02C5
        gbc.setState(0xeb98, 0x836d, 0xcfc0, 0xa807, 0xa381, 0x5385, 0x1, 0x1);
        gbc.writeMem(0xeb98, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x836d);
        EXPECT(gbc.pc(), 0xeb9a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeb98), 0xcb);
        EXPECT(gbc.readMem(0xeb99), 0xdc);
        // CB DC 02C6
        gbc.setState(0xd4f9, 0x111, 0xa100, 0x5fb2, 0xc199, 0x9dae, 0x1, 0x1);
        gbc.writeMem(0xd4f9, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x111);
        EXPECT(gbc.pc(), 0xd4fb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd4f9), 0xcb);
        EXPECT(gbc.readMem(0xd4fa), 0xdc);
        // CB DC 02C7
        gbc.setState(0xd963, 0x7391, 0x9a20, 0xe385, 0xe24f, 0xd4f5, 0x0, 0x1);
        gbc.writeMem(0xd963, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x7391);
        EXPECT(gbc.pc(), 0xd965);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd963), 0xcb);
        EXPECT(gbc.readMem(0xd964), 0xdc);
        // CB DC 02C8
        gbc.setState(0xb1dc, 0x4c83, 0x56e0, 0x1fcd, 0xd55b, 0x33b1, 0x0, 0x1);
        gbc.writeMem(0xb1dc, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x4c83);
        EXPECT(gbc.pc(), 0xb1de);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb1dc), 0xcb);
        EXPECT(gbc.readMem(0xb1dd), 0xdc);
        // CB DC 02C9
        gbc.setState(0x3a02, 0x49fa, 0x77a0, 0x1648, 0x4c64, 0x2564, 0x0, 0x0);
        gbc.writeMem(0x3a02, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x49fa);
        EXPECT(gbc.pc(), 0x3a04);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DC 02CA
        gbc.setState(0xa1ba, 0xb43f, 0xae20, 0x61c4, 0x8753, 0x788f, 0x0, 0x0);
        gbc.writeMem(0xa1ba, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xb43f);
        EXPECT(gbc.pc(), 0xa1bc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa1ba), 0xcb);
        EXPECT(gbc.readMem(0xa1bb), 0xdc);
        // CB DC 02CB
        gbc.setState(0x3a1, 0xe60e, 0xbf10, 0x6378, 0x6fd1, 0x153, 0x1, 0x1);
        gbc.writeMem(0x3a1, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0xe60e);
        EXPECT(gbc.pc(), 0x3a3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DC 02CC
        gbc.setState(0x7d0b, 0x7123, 0x7e20, 0x9cd9, 0x103c, 0x6b72, 0x1, 0x0);
        gbc.writeMem(0x7d0b, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x7123);
        EXPECT(gbc.pc(), 0x7d0d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DC 02CD
        gbc.setState(0x71db, 0x24a6, 0x9e30, 0x4095, 0x5013, 0x904d, 0x0, 0x0);
        gbc.writeMem(0x71db, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x24a6);
        EXPECT(gbc.pc(), 0x71dd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DC 02CE
        gbc.setState(0x45b2, 0xeaa0, 0x91f0, 0x5f8b, 0x47a9, 0x1508, 0x1, 0x0);
        gbc.writeMem(0x45b2, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0xeaa0);
        EXPECT(gbc.pc(), 0x45b4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DC 02CF
        gbc.setState(0x8fb2, 0xb0fd, 0x720, 0xb590, 0x9f33, 0xba86, 0x0, 0x0);
        gbc.writeMem(0x8fb2, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0xb0fd);
        EXPECT(gbc.pc(), 0x8fb4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8fb2), 0xcb);
        EXPECT(gbc.readMem(0x8fb3), 0xdc);
        // CB DC 02D0
        gbc.setState(0xad3d, 0x2248, 0xcdb0, 0x5450, 0xd2d7, 0x54d3, 0x1, 0x0);
        gbc.writeMem(0xad3d, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x2248);
        EXPECT(gbc.pc(), 0xad3f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xad3d), 0xcb);
        EXPECT(gbc.readMem(0xad3e), 0xdc);
        // CB DC 02D1
        gbc.setState(0x7c39, 0x12f7, 0xe980, 0xfe02, 0x217c, 0xd287, 0x1, 0x1);
        gbc.writeMem(0x7c39, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x12f7);
        EXPECT(gbc.pc(), 0x7c3b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DC 02D2
        gbc.setState(0xb062, 0x9114, 0xb7a0, 0x8f12, 0xaa55, 0x17a0, 0x1, 0x0);
        gbc.writeMem(0xb062, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x9114);
        EXPECT(gbc.pc(), 0xb064);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb062), 0xcb);
        EXPECT(gbc.readMem(0xb063), 0xdc);
        // CB DC 02D3
        gbc.setState(0x5f20, 0x2ce0, 0x30d0, 0x25cb, 0xe1bb, 0x27f3, 0x0, 0x1);
        gbc.writeMem(0x5f20, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x2ce0);
        EXPECT(gbc.pc(), 0x5f22);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DC 02D4
        gbc.setState(0x2469, 0x695c, 0x6360, 0xcf09, 0x9a9b, 0x36ce, 0x1, 0x1);
        gbc.writeMem(0x2469, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x695c);
        EXPECT(gbc.pc(), 0x246b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DC 02D5
        gbc.setState(0xd75, 0x5e1d, 0xdaa0, 0xd9b8, 0x8604, 0xdb5, 0x1, 0x0);
        gbc.writeMem(0xd75, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x5e1d);
        EXPECT(gbc.pc(), 0xd77);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DC 02D6
        gbc.setState(0xe9e5, 0xd770, 0xf0b0, 0x74b6, 0x877f, 0xadbd, 0x0, 0x1);
        gbc.writeMem(0xe9e5, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0xd770);
        EXPECT(gbc.pc(), 0xe9e7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe9e5), 0xcb);
        EXPECT(gbc.readMem(0xe9e6), 0xdc);
        // CB DC 02D7
        gbc.setState(0x817e, 0xfcfd, 0x9b0, 0xcda5, 0x5e2d, 0x5763, 0x0, 0x1);
        gbc.writeMem(0x817e, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0xfcfd);
        EXPECT(gbc.pc(), 0x8180);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x817e), 0xcb);
        EXPECT(gbc.readMem(0x817f), 0xdc);
        // CB DC 02D8
        gbc.setState(0x1b4f, 0x8136, 0xada0, 0xdda9, 0x711b, 0x620d, 0x1, 0x0);
        gbc.writeMem(0x1b4f, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x8136);
        EXPECT(gbc.pc(), 0x1b51);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DC 02DA
        gbc.setState(0xb453, 0x5c0c, 0xa9b0, 0x5b9e, 0x2301, 0x670, 0x1, 0x1);
        gbc.writeMem(0xb453, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x5c0c);
        EXPECT(gbc.pc(), 0xb455);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb453), 0xcb);
        EXPECT(gbc.readMem(0xb454), 0xdc);
        // CB DC 02DB
        gbc.setState(0x8911, 0x4e53, 0x1da0, 0xed81, 0xefb5, 0xcbd9, 0x1, 0x0);
        gbc.writeMem(0x8911, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x4e53);
        EXPECT(gbc.pc(), 0x8913);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8911), 0xcb);
        EXPECT(gbc.readMem(0x8912), 0xdc);
        // CB DC 02DC
        gbc.setState(0xcb9d, 0xaac9, 0x6ce0, 0xacdd, 0x508a, 0xca77, 0x1, 0x1);
        gbc.writeMem(0xcb9d, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xaac9);
        EXPECT(gbc.pc(), 0xcb9f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcb9d), 0xcb);
        EXPECT(gbc.readMem(0xcb9e), 0xdc);
        // CB DC 02DD
        gbc.setState(0x500c, 0x6a3, 0xfea0, 0x6bb3, 0x58a2, 0x9432, 0x0, 0x0);
        gbc.writeMem(0x500c, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x6a3);
        EXPECT(gbc.pc(), 0x500e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DC 02DE
        gbc.setState(0xd750, 0x6ef8, 0xdb90, 0xcbc2, 0xedfa, 0xe50e, 0x1, 0x1);
        gbc.writeMem(0xd750, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x6ef8);
        EXPECT(gbc.pc(), 0xd752);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd750), 0xcb);
        EXPECT(gbc.readMem(0xd751), 0xdc);
        // CB DC 02DF
        gbc.setState(0xec45, 0xa6e9, 0x1e90, 0x11e5, 0x87d7, 0x74f5, 0x0, 0x0);
        gbc.writeMem(0xec45, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0xa6e9);
        EXPECT(gbc.pc(), 0xec47);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xec45), 0xcb);
        EXPECT(gbc.readMem(0xec46), 0xdc);
        // CB DC 02E0
        gbc.setState(0x1687, 0x1c8d, 0x46f0, 0xfb8, 0xe832, 0x7c7e, 0x0, 0x0);
        gbc.writeMem(0x1687, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x1c8d);
        EXPECT(gbc.pc(), 0x1689);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DC 02E1
        gbc.setState(0xd9af, 0x7888, 0x56f0, 0x47bf, 0x1a36, 0x71fc, 0x1, 0x1);
        gbc.writeMem(0xd9af, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x7888);
        EXPECT(gbc.pc(), 0xd9b1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd9af), 0xcb);
        EXPECT(gbc.readMem(0xd9b0), 0xdc);
        // CB DC 02E2
        gbc.setState(0x51a8, 0xcfe0, 0x9200, 0xecf7, 0x4b6f, 0xad3a, 0x0, 0x1);
        gbc.writeMem(0x51a8, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0xcfe0);
        EXPECT(gbc.pc(), 0x51aa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DC 02E3
        gbc.setState(0xabc3, 0x564d, 0xca50, 0x2b42, 0xed60, 0x1ea1, 0x1, 0x0);
        gbc.writeMem(0xabc3, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x564d);
        EXPECT(gbc.pc(), 0xabc5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xabc3), 0xcb);
        EXPECT(gbc.readMem(0xabc4), 0xdc);
        // CB DC 02E4
        gbc.setState(0x6e7d, 0xb416, 0xf690, 0x360a, 0xbcb3, 0xd, 0x1, 0x0);
        gbc.writeMem(0x6e7d, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0xb416);
        EXPECT(gbc.pc(), 0x6e7f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DC 02E5
        gbc.setState(0xed27, 0x1eb4, 0xbfc0, 0xa975, 0xec94, 0x8495, 0x1, 0x1);
        gbc.writeMem(0xed27, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x1eb4);
        EXPECT(gbc.pc(), 0xed29);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xed27), 0xcb);
        EXPECT(gbc.readMem(0xed28), 0xdc);
        // CB DC 02E6
        gbc.setState(0x5e1d, 0x72b2, 0xc520, 0x273c, 0x6768, 0xf825, 0x1, 0x0);
        gbc.writeMem(0x5e1d, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x72b2);
        EXPECT(gbc.pc(), 0x5e1f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DC 02E8
        gbc.setState(0x4ac2, 0x467, 0xa30, 0xf292, 0x71d1, 0x9215, 0x0, 0x0);
        gbc.writeMem(0x4ac2, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x467);
        EXPECT(gbc.pc(), 0x4ac4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DC 02E9
        gbc.setState(0x5492, 0x799e, 0xb130, 0xa58f, 0xbe93, 0x35ae, 0x0, 0x0);
        gbc.writeMem(0x5492, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x799e);
        EXPECT(gbc.pc(), 0x5494);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DC 02EA
        gbc.setState(0x2ec1, 0xe93e, 0x2040, 0x238f, 0xa63e, 0xd94c, 0x1, 0x0);
        gbc.writeMem(0x2ec1, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0xe93e);
        EXPECT(gbc.pc(), 0x2ec3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DC 02EB
        gbc.setState(0x81a0, 0xc17, 0xd600, 0xd53d, 0x4bcb, 0xe7ae, 0x1, 0x1);
        gbc.writeMem(0x81a0, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0xc17);
        EXPECT(gbc.pc(), 0x81a2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x81a0), 0xcb);
        EXPECT(gbc.readMem(0x81a1), 0xdc);
        // CB DC 02EC
        gbc.setState(0xb63c, 0xe950, 0x3400, 0xaaa5, 0x3b47, 0x26b7, 0x0, 0x0);
        gbc.writeMem(0xb63c, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0xe950);
        EXPECT(gbc.pc(), 0xb63e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb63c), 0xcb);
        EXPECT(gbc.readMem(0xb63d), 0xdc);
        // CB DC 02ED
        gbc.setState(0x5758, 0x3508, 0x290, 0xdf70, 0xc886, 0x533a, 0x0, 0x1);
        gbc.writeMem(0x5758, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x3508);
        EXPECT(gbc.pc(), 0x575a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DC 02EE
        gbc.setState(0x6c83, 0xd116, 0xaa0, 0xde8, 0x38c6, 0x5606, 0x0, 0x1);
        gbc.writeMem(0x6c83, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0xd116);
        EXPECT(gbc.pc(), 0x6c85);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DC 02EF
        gbc.setState(0x8937, 0x6780, 0xfcc0, 0x49eb, 0x1e41, 0x1047, 0x0, 0x1);
        gbc.writeMem(0x8937, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x6780);
        EXPECT(gbc.pc(), 0x8939);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8937), 0xcb);
        EXPECT(gbc.readMem(0x8938), 0xdc);
        // CB DC 02F0
        gbc.setState(0xab00, 0xba82, 0xc430, 0xd1f7, 0x70dd, 0x2545, 0x0, 0x0);
        gbc.writeMem(0xab00, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0xba82);
        EXPECT(gbc.pc(), 0xab02);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xab00), 0xcb);
        EXPECT(gbc.readMem(0xab01), 0xdc);
        // CB DC 02F1
        gbc.setState(0x7dea, 0x7d71, 0x1780, 0x1d60, 0xe113, 0xab62, 0x1, 0x1);
        gbc.writeMem(0x7dea, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x7d71);
        EXPECT(gbc.pc(), 0x7dec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DC 02F2
        gbc.setState(0xd9ee, 0x2693, 0xf350, 0x2607, 0x4702, 0xd6d0, 0x1, 0x0);
        gbc.writeMem(0xd9ee, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x2693);
        EXPECT(gbc.pc(), 0xd9f0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd9ee), 0xcb);
        EXPECT(gbc.readMem(0xd9ef), 0xdc);
        // CB DC 02F3
        gbc.setState(0xdb14, 0x4f1, 0x7cc0, 0xc6c4, 0xab9, 0x3cb7, 0x1, 0x0);
        gbc.writeMem(0xdb14, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x4f1);
        EXPECT(gbc.pc(), 0xdb16);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdb14), 0xcb);
        EXPECT(gbc.readMem(0xdb15), 0xdc);
        // CB DC 02F4
        gbc.setState(0x6558, 0xbf6a, 0xa200, 0xd6b5, 0xcc3c, 0xccb0, 0x1, 0x0);
        gbc.writeMem(0x6558, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xbf6a);
        EXPECT(gbc.pc(), 0x655a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DC 02F5
        gbc.setState(0x8e0c, 0x4e28, 0xf3a0, 0x205, 0x2dcb, 0x8105, 0x0, 0x0);
        gbc.writeMem(0x8e0c, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x4e28);
        EXPECT(gbc.pc(), 0x8e0e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8e0c), 0xcb);
        EXPECT(gbc.readMem(0x8e0d), 0xdc);
        // CB DC 02F6
        gbc.setState(0xcb3d, 0xa78b, 0xad90, 0x543b, 0x4f29, 0xe434, 0x1, 0x0);
        gbc.writeMem(0xcb3d, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xa78b);
        EXPECT(gbc.pc(), 0xcb3f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcb3d), 0xcb);
        EXPECT(gbc.readMem(0xcb3e), 0xdc);
        // CB DC 02F7
        gbc.setState(0x5fb, 0xb244, 0xdd40, 0xcdfc, 0x540b, 0x82e1, 0x1, 0x0);
        gbc.writeMem(0x5fb, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xb244);
        EXPECT(gbc.pc(), 0x5fd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DC 02F8
        gbc.setState(0xdef4, 0xa44b, 0xbfc0, 0x232, 0x3ad, 0x111f, 0x1, 0x0);
        gbc.writeMem(0xdef4, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0xa44b);
        EXPECT(gbc.pc(), 0xdef6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdef4), 0xcb);
        EXPECT(gbc.readMem(0xdef5), 0xdc);
        // CB DC 02F9
        gbc.setState(0x6249, 0x10b4, 0x6ad0, 0x3297, 0xf717, 0xf9c9, 0x1, 0x0);
        gbc.writeMem(0x6249, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x10b4);
        EXPECT(gbc.pc(), 0x624b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DC 02FA
        gbc.setState(0xa5d0, 0xd8f5, 0x8360, 0x1e9a, 0x8761, 0x1f56, 0x0, 0x1);
        gbc.writeMem(0xa5d0, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0xd8f5);
        EXPECT(gbc.pc(), 0xa5d2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa5d0), 0xcb);
        EXPECT(gbc.readMem(0xa5d1), 0xdc);
        // CB DC 02FB
        gbc.setState(0x8bfb, 0x75f2, 0x10d0, 0x8f06, 0x727c, 0x1822, 0x0, 0x0);
        gbc.writeMem(0x8bfb, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x75f2);
        EXPECT(gbc.pc(), 0x8bfd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8bfb), 0xcb);
        EXPECT(gbc.readMem(0x8bfc), 0xdc);
        // CB DC 02FC
        gbc.setState(0xeabb, 0xe3ae, 0x47b0, 0x6006, 0x16bd, 0x890b, 0x0, 0x0);
        gbc.writeMem(0xeabb, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0xe3ae);
        EXPECT(gbc.pc(), 0xeabd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeabb), 0xcb);
        EXPECT(gbc.readMem(0xeabc), 0xdc);
        // CB DC 02FD
        gbc.setState(0xcb4, 0xcd66, 0xfae0, 0x9c25, 0xe6e5, 0x6632, 0x0, 0x1);
        gbc.writeMem(0xcb4, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xcd66);
        EXPECT(gbc.pc(), 0xcb6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DC 02FE
        gbc.setState(0x7aff, 0x7b20, 0x7fb0, 0xeb3, 0xa102, 0x31cc, 0x1, 0x1);
        gbc.writeMem(0x7aff, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x7b20);
        EXPECT(gbc.pc(), 0x7b01);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DC 0300
        gbc.setState(0x65b9, 0x61c0, 0xedb0, 0x4b59, 0xcabe, 0xebe2, 0x0, 0x1);
        gbc.writeMem(0x65b9, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x61c0);
        EXPECT(gbc.pc(), 0x65bb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DC 0301
        gbc.setState(0x983e, 0x8760, 0xb7b0, 0xbe3f, 0x88ce, 0x3280, 0x1, 0x1);
        gbc.writeMem(0x983e, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x8760);
        EXPECT(gbc.pc(), 0x9840);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x983e), 0xcb);
        EXPECT(gbc.readMem(0x983f), 0xdc);
        // CB DC 0302
        gbc.setState(0x5dbd, 0x6c0f, 0x76e0, 0x521b, 0xc303, 0x5a87, 0x1, 0x1);
        gbc.writeMem(0x5dbd, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x6c0f);
        EXPECT(gbc.pc(), 0x5dbf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DC 0303
        gbc.setState(0xa44b, 0xa974, 0x4010, 0x7f6a, 0xad9c, 0x41f4, 0x0, 0x1);
        gbc.writeMem(0xa44b, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0xa974);
        EXPECT(gbc.pc(), 0xa44d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa44b), 0xcb);
        EXPECT(gbc.readMem(0xa44c), 0xdc);
        // CB DC 0304
        gbc.setState(0x4a76, 0xc3c8, 0x6c40, 0xc19e, 0xc41d, 0x68bf, 0x0, 0x1);
        gbc.writeMem(0x4a76, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0xc3c8);
        EXPECT(gbc.pc(), 0x4a78);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DC 0305
        gbc.setState(0x3e6a, 0x7a31, 0x98a0, 0x3e3b, 0xc858, 0xb18b, 0x1, 0x0);
        gbc.writeMem(0x3e6a, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x7a31);
        EXPECT(gbc.pc(), 0x3e6c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DC 0306
        gbc.setState(0xad02, 0x1497, 0xad90, 0xff71, 0x6fb9, 0x7692, 0x0, 0x0);
        gbc.writeMem(0xad02, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x1497);
        EXPECT(gbc.pc(), 0xad04);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xad02), 0xcb);
        EXPECT(gbc.readMem(0xad03), 0xdc);
        // CB DC 0307
        gbc.setState(0xa50e, 0xd440, 0x8960, 0xa9f8, 0x8455, 0x2b2, 0x1, 0x1);
        gbc.writeMem(0xa50e, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0xd440);
        EXPECT(gbc.pc(), 0xa510);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa50e), 0xcb);
        EXPECT(gbc.readMem(0xa50f), 0xdc);
        // CB DC 0308
        gbc.setState(0x1330, 0x8516, 0x2cf0, 0x42c, 0xa185, 0x6f66, 0x0, 0x0);
        gbc.writeMem(0x1330, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x8516);
        EXPECT(gbc.pc(), 0x1332);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DC 0309
        gbc.setState(0x91a2, 0xa564, 0xbca0, 0x28b8, 0x905f, 0x896, 0x1, 0x0);
        gbc.writeMem(0x91a2, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0xa564);
        EXPECT(gbc.pc(), 0x91a4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x91a2), 0xcb);
        EXPECT(gbc.readMem(0x91a3), 0xdc);
        // CB DC 030A
        gbc.setState(0x4253, 0xeda6, 0x25c0, 0xe4fa, 0xee38, 0xdc54, 0x0, 0x0);
        gbc.writeMem(0x4253, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0xeda6);
        EXPECT(gbc.pc(), 0x4255);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DC 030B
        gbc.setState(0x9c05, 0x970a, 0x5c90, 0xe82f, 0x480c, 0xfee7, 0x1, 0x0);
        gbc.writeMem(0x9c05, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x970a);
        EXPECT(gbc.pc(), 0x9c07);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9c05), 0xcb);
        EXPECT(gbc.readMem(0x9c06), 0xdc);
        // CB DC 030C
        gbc.setState(0xa83f, 0xff3e, 0xa440, 0x9341, 0x1613, 0x700a, 0x1, 0x0);
        gbc.writeMem(0xa83f, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0xff3e);
        EXPECT(gbc.pc(), 0xa841);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa83f), 0xcb);
        EXPECT(gbc.readMem(0xa840), 0xdc);
        // CB DC 030D
        gbc.setState(0xe8e8, 0xa5cc, 0xfd90, 0x6009, 0x9ac1, 0x8ea1, 0x1, 0x0);
        gbc.writeMem(0xe8e8, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0xa5cc);
        EXPECT(gbc.pc(), 0xe8ea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe8e8), 0xcb);
        EXPECT(gbc.readMem(0xe8e9), 0xdc);
        // CB DC 030E
        gbc.setState(0x46e7, 0xba17, 0x95e0, 0x9280, 0xbb66, 0x9a16, 0x1, 0x0);
        gbc.writeMem(0x46e7, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xba17);
        EXPECT(gbc.pc(), 0x46e9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DC 030F
        gbc.setState(0xa10c, 0xd8a7, 0x7010, 0xbd14, 0x992d, 0xd52d, 0x0, 0x1);
        gbc.writeMem(0xa10c, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0xd8a7);
        EXPECT(gbc.pc(), 0xa10e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa10c), 0xcb);
        EXPECT(gbc.readMem(0xa10d), 0xdc);
        // CB DC 0310
        gbc.setState(0x9e05, 0x3779, 0x4ee0, 0x7698, 0x6c40, 0xa297, 0x0, 0x0);
        gbc.writeMem(0x9e05, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x3779);
        EXPECT(gbc.pc(), 0x9e07);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9e05), 0xcb);
        EXPECT(gbc.readMem(0x9e06), 0xdc);
        // CB DC 0311
        gbc.setState(0x1f24, 0x8900, 0xf860, 0xa761, 0x4646, 0x2381, 0x0, 0x1);
        gbc.writeMem(0x1f24, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x8900);
        EXPECT(gbc.pc(), 0x1f26);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DC 0312
        gbc.setState(0x5d42, 0x84ab, 0xa400, 0xc356, 0xb0fd, 0x6cbb, 0x1, 0x1);
        gbc.writeMem(0x5d42, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x84ab);
        EXPECT(gbc.pc(), 0x5d44);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DC 0313
        gbc.setState(0xd09a, 0x1f7a, 0xdde0, 0xe53b, 0xd5a7, 0x9e32, 0x0, 0x0);
        gbc.writeMem(0xd09a, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x1f7a);
        EXPECT(gbc.pc(), 0xd09c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd09a), 0xcb);
        EXPECT(gbc.readMem(0xd09b), 0xdc);
        // CB DC 0314
        gbc.setState(0xdff8, 0x1473, 0xe150, 0xf62d, 0xc22f, 0x4fec, 0x1, 0x1);
        gbc.writeMem(0xdff8, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x1473);
        EXPECT(gbc.pc(), 0xdffa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdff8), 0xcb);
        EXPECT(gbc.readMem(0xdff9), 0xdc);
        // CB DC 0315
        gbc.setState(0xc0b8, 0xace, 0xf8a0, 0x72dd, 0x269f, 0xa757, 0x0, 0x0);
        gbc.writeMem(0xc0b8, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0xace);
        EXPECT(gbc.pc(), 0xc0ba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc0b8), 0xcb);
        EXPECT(gbc.readMem(0xc0b9), 0xdc);
        // CB DC 0316
        gbc.setState(0x2811, 0x596c, 0x5cc0, 0x73f9, 0xf14b, 0xa049, 0x1, 0x0);
        gbc.writeMem(0x2811, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x596c);
        EXPECT(gbc.pc(), 0x2813);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DC 0317
        gbc.setState(0xea8f, 0x8c15, 0xefa0, 0xc3ca, 0x7d16, 0x385f, 0x0, 0x1);
        gbc.writeMem(0xea8f, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x8c15);
        EXPECT(gbc.pc(), 0xea91);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xea8f), 0xcb);
        EXPECT(gbc.readMem(0xea90), 0xdc);
        // CB DC 0318
        gbc.setState(0x1b41, 0x5b6, 0x1d10, 0x3f49, 0x4ac2, 0x4216, 0x0, 0x1);
        gbc.writeMem(0x1b41, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x5b6);
        EXPECT(gbc.pc(), 0x1b43);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DC 031A
        gbc.setState(0x36ce, 0xed86, 0x1ae0, 0x5565, 0x794, 0xbe0e, 0x1, 0x1);
        gbc.writeMem(0x36ce, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0xed86);
        EXPECT(gbc.pc(), 0x36d0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DC 031B
        gbc.setState(0x4615, 0x43af, 0x1730, 0xd979, 0xd54c, 0xd172, 0x0, 0x0);
        gbc.writeMem(0x4615, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x43af);
        EXPECT(gbc.pc(), 0x4617);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DC 031C
        gbc.setState(0xedfa, 0x620b, 0x2cd0, 0x7e61, 0x2e, 0xb38b, 0x1, 0x0);
        gbc.writeMem(0xedfa, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x620b);
        EXPECT(gbc.pc(), 0xedfc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xedfa), 0xcb);
        EXPECT(gbc.readMem(0xedfb), 0xdc);
        // CB DC 031D
        gbc.setState(0x4bb0, 0x5a65, 0x8a70, 0xbd1, 0x1c7b, 0x5d65, 0x0, 0x0);
        gbc.writeMem(0x4bb0, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x5a65);
        EXPECT(gbc.pc(), 0x4bb2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DC 031E
        gbc.setState(0x700c, 0xfc28, 0x4d20, 0xabdb, 0xbb97, 0xc572, 0x1, 0x0);
        gbc.writeMem(0x700c, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0xfc28);
        EXPECT(gbc.pc(), 0x700e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DC 031F
        gbc.setState(0xb2da, 0x58dc, 0x90, 0xd988, 0x38e1, 0x2913, 0x1, 0x1);
        gbc.writeMem(0xb2da, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x58dc);
        EXPECT(gbc.pc(), 0xb2dc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb2da), 0xcb);
        EXPECT(gbc.readMem(0xb2db), 0xdc);
        // CB DC 0322
        gbc.setState(0x3013, 0x940e, 0x1b0, 0x156, 0xeda3, 0xf001, 0x0, 0x1);
        gbc.writeMem(0x3013, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x940e);
        EXPECT(gbc.pc(), 0x3015);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DC 0323
        gbc.setState(0xdb72, 0x38bc, 0x4510, 0x9ce9, 0xa739, 0xd9a8, 0x1, 0x1);
        gbc.writeMem(0xdb72, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x38bc);
        EXPECT(gbc.pc(), 0xdb74);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdb72), 0xcb);
        EXPECT(gbc.readMem(0xdb73), 0xdc);
        // CB DC 0324
        gbc.setState(0x6548, 0x6b7c, 0x3ff0, 0x8359, 0x768d, 0xc150, 0x0, 0x1);
        gbc.writeMem(0x6548, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x6b7c);
        EXPECT(gbc.pc(), 0x654a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DC 0327
        gbc.setState(0xba3b, 0x3d75, 0xb850, 0xe15e, 0x9c1f, 0x7451, 0x0, 0x0);
        gbc.writeMem(0xba3b, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x3d75);
        EXPECT(gbc.pc(), 0xba3d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xba3b), 0xcb);
        EXPECT(gbc.readMem(0xba3c), 0xdc);
        // CB DC 0328
        gbc.setState(0x9ae0, 0xe16d, 0xf4b0, 0x5a38, 0x1cea, 0x6270, 0x0, 0x0);
        gbc.writeMem(0x9ae0, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0xe16d);
        EXPECT(gbc.pc(), 0x9ae2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9ae0), 0xcb);
        EXPECT(gbc.readMem(0x9ae1), 0xdc);
        // CB DC 0329
        gbc.setState(0xe8a0, 0x6846, 0x8480, 0x1d07, 0x9e08, 0x4049, 0x0, 0x0);
        gbc.writeMem(0xe8a0, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x6846);
        EXPECT(gbc.pc(), 0xe8a2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe8a0), 0xcb);
        EXPECT(gbc.readMem(0xe8a1), 0xdc);
        // CB DC 032B
        gbc.setState(0xd235, 0x41b2, 0x2740, 0xbc77, 0x9bfd, 0xb40e, 0x0, 0x1);
        gbc.writeMem(0xd235, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x41b2);
        EXPECT(gbc.pc(), 0xd237);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd235), 0xcb);
        EXPECT(gbc.readMem(0xd236), 0xdc);
        // CB DC 032C
        gbc.setState(0x2d51, 0x57d3, 0x7de0, 0xcc5a, 0x3a30, 0x54a5, 0x1, 0x0);
        gbc.writeMem(0x2d51, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x57d3);
        EXPECT(gbc.pc(), 0x2d53);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DC 032D
        gbc.setState(0x5c50, 0x8c27, 0x4ad0, 0x1fca, 0x8c1a, 0xb06a, 0x0, 0x1);
        gbc.writeMem(0x5c50, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x8c27);
        EXPECT(gbc.pc(), 0x5c52);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DC 032E
        gbc.setState(0x38d, 0x10a3, 0x2710, 0x6250, 0x2019, 0x9cce, 0x0, 0x1);
        gbc.writeMem(0x38d, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x10a3);
        EXPECT(gbc.pc(), 0x38f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DC 032F
        gbc.setState(0xceeb, 0xa492, 0x1f30, 0x1852, 0xbdaf, 0xab3e, 0x1, 0x1);
        gbc.writeMem(0xceeb, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0xa492);
        EXPECT(gbc.pc(), 0xceed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xceeb), 0xcb);
        EXPECT(gbc.readMem(0xceec), 0xdc);
        // CB DC 0330
        gbc.setState(0x972b, 0x4c06, 0xdb0, 0x7841, 0xe386, 0x784b, 0x0, 0x1);
        gbc.writeMem(0x972b, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x4c06);
        EXPECT(gbc.pc(), 0x972d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x972b), 0xcb);
        EXPECT(gbc.readMem(0x972c), 0xdc);
        // CB DC 0331
        gbc.setState(0xd24f, 0xe34c, 0x44f0, 0x42ff, 0x6def, 0x2a7e, 0x0, 0x1);
        gbc.writeMem(0xd24f, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0xe34c);
        EXPECT(gbc.pc(), 0xd251);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd24f), 0xcb);
        EXPECT(gbc.readMem(0xd250), 0xdc);
        // CB DC 0332
        gbc.setState(0xcce4, 0xe634, 0xa6a0, 0x6f04, 0xc11e, 0x6c40, 0x0, 0x0);
        gbc.writeMem(0xcce4, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0xe634);
        EXPECT(gbc.pc(), 0xcce6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcce4), 0xcb);
        EXPECT(gbc.readMem(0xcce5), 0xdc);
        // CB DC 0333
        gbc.setState(0x5c19, 0xb646, 0xbc90, 0xfee5, 0x271f, 0xf9c7, 0x1, 0x0);
        gbc.writeMem(0x5c19, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0xb646);
        EXPECT(gbc.pc(), 0x5c1b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DC 0334
        gbc.setState(0x58cd, 0x6c02, 0xaa90, 0x7b7b, 0xa3b0, 0xbefe, 0x1, 0x1);
        gbc.writeMem(0x58cd, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x6c02);
        EXPECT(gbc.pc(), 0x58cf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DC 0335
        gbc.setState(0x5dad, 0x1ab3, 0xe3e0, 0x543e, 0x36d3, 0x9805, 0x1, 0x0);
        gbc.writeMem(0x5dad, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x1ab3);
        EXPECT(gbc.pc(), 0x5daf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DC 0336
        gbc.setState(0xa224, 0xd787, 0x800, 0xc32e, 0x4e15, 0x8cb1, 0x0, 0x0);
        gbc.writeMem(0xa224, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0xd787);
        EXPECT(gbc.pc(), 0xa226);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa224), 0xcb);
        EXPECT(gbc.readMem(0xa225), 0xdc);
        // CB DC 0338
        gbc.setState(0x57d9, 0xce31, 0x26b0, 0xe4e7, 0x68c4, 0x2670, 0x1, 0x0);
        gbc.writeMem(0x57d9, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0xce31);
        EXPECT(gbc.pc(), 0x57db);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DC 0339
        gbc.setState(0x9ebe, 0xe231, 0x1c60, 0x89ea, 0x2428, 0xc21c, 0x0, 0x0);
        gbc.writeMem(0x9ebe, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0xe231);
        EXPECT(gbc.pc(), 0x9ec0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9ebe), 0xcb);
        EXPECT(gbc.readMem(0x9ebf), 0xdc);
        // CB DC 033B
        gbc.setState(0x6455, 0x6a48, 0x1030, 0xb678, 0x6eb, 0x865a, 0x0, 0x0);
        gbc.writeMem(0x6455, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x6a48);
        EXPECT(gbc.pc(), 0x6457);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DC 033C
        gbc.setState(0x3596, 0x9ac3, 0xd940, 0xe5d3, 0x7c02, 0x65d5, 0x1, 0x1);
        gbc.writeMem(0x3596, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x9ac3);
        EXPECT(gbc.pc(), 0x3598);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DC 033D
        gbc.setState(0x40a6, 0x883a, 0x3120, 0x3bc3, 0x8f12, 0x8885, 0x1, 0x1);
        gbc.writeMem(0x40a6, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x883a);
        EXPECT(gbc.pc(), 0x40a8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DC 033E
        gbc.setState(0x52b2, 0x395e, 0x6650, 0xb804, 0xd7ab, 0xffa0, 0x0, 0x0);
        gbc.writeMem(0x52b2, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x395e);
        EXPECT(gbc.pc(), 0x52b4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DC 033F
        gbc.setState(0x3992, 0xf158, 0xab00, 0x90bc, 0x9354, 0x2517, 0x1, 0x1);
        gbc.writeMem(0x3992, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0xf158);
        EXPECT(gbc.pc(), 0x3994);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DC 0340
        gbc.setState(0xef6, 0x5fa6, 0x7790, 0xcfd2, 0x5fbf, 0x90e1, 0x1, 0x0);
        gbc.writeMem(0xef6, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x5fa6);
        EXPECT(gbc.pc(), 0xef8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DC 0341
        gbc.setState(0x198d, 0xbec0, 0xbbc0, 0xa186, 0x6d2, 0xb4b0, 0x0, 0x0);
        gbc.writeMem(0x198d, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xbec0);
        EXPECT(gbc.pc(), 0x198f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DC 0342
        gbc.setState(0x9d6e, 0x8e64, 0xca80, 0xe94, 0x63bf, 0xb446, 0x0, 0x0);
        gbc.writeMem(0x9d6e, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x8e64);
        EXPECT(gbc.pc(), 0x9d70);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9d6e), 0xcb);
        EXPECT(gbc.readMem(0x9d6f), 0xdc);
        // CB DC 0343
        gbc.setState(0x9113, 0x94a2, 0x8f30, 0x7cff, 0x6697, 0x2537, 0x1, 0x1);
        gbc.writeMem(0x9113, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x94a2);
        EXPECT(gbc.pc(), 0x9115);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9113), 0xcb);
        EXPECT(gbc.readMem(0x9114), 0xdc);
        // CB DC 0344
        gbc.setState(0xdc37, 0xc9d0, 0x87f0, 0x5098, 0x152f, 0x3912, 0x1, 0x0);
        gbc.writeMem(0xdc37, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0xc9d0);
        EXPECT(gbc.pc(), 0xdc39);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdc37), 0xcb);
        EXPECT(gbc.readMem(0xdc38), 0xdc);
        // CB DC 0345
        gbc.setState(0x4504, 0x4ed5, 0x50b0, 0x15bb, 0x4f3f, 0x2637, 0x1, 0x1);
        gbc.writeMem(0x4504, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x4ed5);
        EXPECT(gbc.pc(), 0x4506);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DC 0346
        gbc.setState(0x70e4, 0xacab, 0xf520, 0xb43a, 0x716, 0x9675, 0x0, 0x1);
        gbc.writeMem(0x70e4, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xacab);
        EXPECT(gbc.pc(), 0x70e6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DC 0347
        gbc.setState(0x504e, 0x9fc8, 0xcac0, 0x3c28, 0x3ad7, 0xa017, 0x0, 0x0);
        gbc.writeMem(0x504e, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x9fc8);
        EXPECT(gbc.pc(), 0x5050);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DC 0348
        gbc.setState(0xe53d, 0x5cc4, 0xecf0, 0xcca6, 0xcea5, 0x7fa6, 0x0, 0x1);
        gbc.writeMem(0xe53d, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x5cc4);
        EXPECT(gbc.pc(), 0xe53f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe53d), 0xcb);
        EXPECT(gbc.readMem(0xe53e), 0xdc);
        // CB DC 0349
        gbc.setState(0x3eb4, 0xf0af, 0x7090, 0xa58a, 0x90eb, 0xf738, 0x1, 0x0);
        gbc.writeMem(0x3eb4, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0xf0af);
        EXPECT(gbc.pc(), 0x3eb6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DC 034A
        gbc.setState(0x55c7, 0xbc1a, 0xe1c0, 0x78fd, 0x9199, 0xfebb, 0x1, 0x1);
        gbc.writeMem(0x55c7, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0xbc1a);
        EXPECT(gbc.pc(), 0x55c9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DC 034B
        gbc.setState(0xb7ab, 0x7f63, 0xd720, 0xe575, 0xd029, 0x2cf7, 0x0, 0x0);
        gbc.writeMem(0xb7ab, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x7f63);
        EXPECT(gbc.pc(), 0xb7ad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb7ab), 0xcb);
        EXPECT(gbc.readMem(0xb7ac), 0xdc);
        // CB DC 034C
        gbc.setState(0xbba, 0xa940, 0x5830, 0x680, 0xc4c1, 0xed48, 0x1, 0x0);
        gbc.writeMem(0xbba, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0xa940);
        EXPECT(gbc.pc(), 0xbbc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DC 034D
        gbc.setState(0xab9f, 0x7e5f, 0x4360, 0xdd0f, 0x7f38, 0xb0dd, 0x0, 0x0);
        gbc.writeMem(0xab9f, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x7e5f);
        EXPECT(gbc.pc(), 0xaba1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xab9f), 0xcb);
        EXPECT(gbc.readMem(0xaba0), 0xdc);
        // CB DC 034E
        gbc.setState(0x75d7, 0xe738, 0x4960, 0x4a2, 0x93da, 0xc564, 0x1, 0x1);
        gbc.writeMem(0x75d7, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0xe738);
        EXPECT(gbc.pc(), 0x75d9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DC 0350
        gbc.setState(0x480b, 0x292a, 0xae0, 0xd4b, 0x8322, 0xf86c, 0x1, 0x0);
        gbc.writeMem(0x480b, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x292a);
        EXPECT(gbc.pc(), 0x480d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DC 0351
        gbc.setState(0x64af, 0xc6e0, 0x6c0, 0x2970, 0xca74, 0xfef2, 0x0, 0x1);
        gbc.writeMem(0x64af, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0xc6e0);
        EXPECT(gbc.pc(), 0x64b1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DC 0352
        gbc.setState(0x954, 0x1a82, 0x96f0, 0xd3e6, 0x2696, 0x35ac, 0x0, 0x1);
        gbc.writeMem(0x954, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x1a82);
        EXPECT(gbc.pc(), 0x956);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DC 0353
        gbc.setState(0x4fb3, 0x2777, 0xe0, 0x8f5e, 0xb26e, 0x8169, 0x0, 0x0);
        gbc.writeMem(0x4fb3, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x2777);
        EXPECT(gbc.pc(), 0x4fb5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DC 0355
        gbc.setState(0xdd31, 0x7af6, 0x9120, 0xeed2, 0x38d, 0x7a80, 0x1, 0x0);
        gbc.writeMem(0xdd31, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x7af6);
        EXPECT(gbc.pc(), 0xdd33);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdd31), 0xcb);
        EXPECT(gbc.readMem(0xdd32), 0xdc);
        // CB DC 0357
        gbc.setState(0x28ce, 0x4d4d, 0x7810, 0x2d4c, 0x2894, 0x5d61, 0x0, 0x1);
        gbc.writeMem(0x28ce, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x4d4d);
        EXPECT(gbc.pc(), 0x28d0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DC 0358
        gbc.setState(0x26b3, 0x68b2, 0xf560, 0x61c8, 0xaa73, 0xbced, 0x0, 0x1);
        gbc.writeMem(0x26b3, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x68b2);
        EXPECT(gbc.pc(), 0x26b5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DC 0359
        gbc.setState(0x223e, 0xdde2, 0xb150, 0x76a0, 0x63cb, 0x1939, 0x1, 0x1);
        gbc.writeMem(0x223e, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0xdde2);
        EXPECT(gbc.pc(), 0x2240);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DC 035A
        gbc.setState(0x2d77, 0x36ee, 0x4ab0, 0x55bc, 0x15f8, 0x6e16, 0x0, 0x0);
        gbc.writeMem(0x2d77, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x36ee);
        EXPECT(gbc.pc(), 0x2d79);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DC 035B
        gbc.setState(0xe7f2, 0x3476, 0xb000, 0xb625, 0x1ec6, 0x11e3, 0x1, 0x0);
        gbc.writeMem(0xe7f2, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x3476);
        EXPECT(gbc.pc(), 0xe7f4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe7f2), 0xcb);
        EXPECT(gbc.readMem(0xe7f3), 0xdc);
        // CB DC 035C
        gbc.setState(0x175c, 0x594d, 0x2120, 0x1095, 0x78e9, 0x8343, 0x0, 0x1);
        gbc.writeMem(0x175c, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x594d);
        EXPECT(gbc.pc(), 0x175e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DC 035D
        gbc.setState(0x4bec, 0x228f, 0xcad0, 0x1939, 0x16a8, 0xeac4, 0x1, 0x0);
        gbc.writeMem(0x4bec, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x228f);
        EXPECT(gbc.pc(), 0x4bee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DC 035E
        gbc.setState(0xa387, 0x5d8, 0x4f60, 0x45b0, 0x7132, 0x57b9, 0x1, 0x1);
        gbc.writeMem(0xa387, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x5d8);
        EXPECT(gbc.pc(), 0xa389);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa387), 0xcb);
        EXPECT(gbc.readMem(0xa388), 0xdc);
        // CB DC 035F
        gbc.setState(0x1705, 0xfb40, 0x4180, 0x6d61, 0x76b8, 0x1c7f, 0x1, 0x0);
        gbc.writeMem(0x1705, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xfb40);
        EXPECT(gbc.pc(), 0x1707);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DC 0360
        gbc.setState(0x95ce, 0xec33, 0x73b0, 0x1a23, 0xd8b8, 0x6de4, 0x0, 0x1);
        gbc.writeMem(0x95ce, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0xec33);
        EXPECT(gbc.pc(), 0x95d0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x95ce), 0xcb);
        EXPECT(gbc.readMem(0x95cf), 0xdc);
        // CB DC 0361
        gbc.setState(0xa702, 0x3951, 0xf2f0, 0x5b34, 0x67d2, 0xe415, 0x0, 0x1);
        gbc.writeMem(0xa702, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x3951);
        EXPECT(gbc.pc(), 0xa704);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa702), 0xcb);
        EXPECT(gbc.readMem(0xa703), 0xdc);
        // CB DC 0362
        gbc.setState(0x1ce4, 0x3ce3, 0x6810, 0x8fc0, 0x23a1, 0x5fd7, 0x1, 0x0);
        gbc.writeMem(0x1ce4, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x3ce3);
        EXPECT(gbc.pc(), 0x1ce6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DC 0363
        gbc.setState(0x30a0, 0x7ffc, 0x3b60, 0x86c2, 0x3fc6, 0x2b75, 0x1, 0x0);
        gbc.writeMem(0x30a0, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x7ffc);
        EXPECT(gbc.pc(), 0x30a2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DC 0364
        gbc.setState(0x9545, 0x19a1, 0xc3d0, 0x4ec4, 0xde70, 0x72b4, 0x1, 0x0);
        gbc.writeMem(0x9545, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x19a1);
        EXPECT(gbc.pc(), 0x9547);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9545), 0xcb);
        EXPECT(gbc.readMem(0x9546), 0xdc);
        // CB DC 0365
        gbc.setState(0x2f21, 0x852d, 0x78f0, 0x5ad, 0xe0d0, 0x2ffd, 0x0, 0x1);
        gbc.writeMem(0x2f21, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x852d);
        EXPECT(gbc.pc(), 0x2f23);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DC 0366
        gbc.setState(0xee67, 0x1dcd, 0xfb10, 0xe96d, 0x56f9, 0xcaee, 0x0, 0x0);
        gbc.writeMem(0xee67, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x1dcd);
        EXPECT(gbc.pc(), 0xee69);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xee67), 0xcb);
        EXPECT(gbc.readMem(0xee68), 0xdc);
        // CB DC 0367
        gbc.setState(0x8b96, 0x84f0, 0x12b0, 0x6df6, 0xad15, 0xef5a, 0x1, 0x1);
        gbc.writeMem(0x8b96, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x84f0);
        EXPECT(gbc.pc(), 0x8b98);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b96), 0xcb);
        EXPECT(gbc.readMem(0x8b97), 0xdc);
        // CB DC 0368
        gbc.setState(0xa811, 0xb91e, 0x6e50, 0xf0, 0xf91e, 0xa770, 0x0, 0x0);
        gbc.writeMem(0xa811, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0xb91e);
        EXPECT(gbc.pc(), 0xa813);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa811), 0xcb);
        EXPECT(gbc.readMem(0xa812), 0xdc);
        // CB DC 0369
        gbc.setState(0x9fd7, 0x2e04, 0xc980, 0xee13, 0x30f8, 0x2047, 0x0, 0x1);
        gbc.writeMem(0x9fd7, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x2e04);
        EXPECT(gbc.pc(), 0x9fd9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9fd7), 0xcb);
        EXPECT(gbc.readMem(0x9fd8), 0xdc);
        // CB DC 036A
        gbc.setState(0xaa0, 0x8aee, 0x7410, 0x1626, 0x7907, 0x2443, 0x1, 0x1);
        gbc.writeMem(0xaa0, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x8aee);
        EXPECT(gbc.pc(), 0xaa2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DC 036B
        gbc.setState(0x4161, 0x2d52, 0x5bb0, 0x7af0, 0xbfcf, 0xca74, 0x1, 0x1);
        gbc.writeMem(0x4161, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x2d52);
        EXPECT(gbc.pc(), 0x4163);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DC 036C
        gbc.setState(0x4472, 0x1e6b, 0x4700, 0xa1f1, 0x65c0, 0x629, 0x0, 0x1);
        gbc.writeMem(0x4472, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x1e6b);
        EXPECT(gbc.pc(), 0x4474);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DC 036E
        gbc.setState(0xcef4, 0x3b6b, 0x2a90, 0x6462, 0x95fd, 0xf35a, 0x1, 0x0);
        gbc.writeMem(0xcef4, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x3b6b);
        EXPECT(gbc.pc(), 0xcef6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcef4), 0xcb);
        EXPECT(gbc.readMem(0xcef5), 0xdc);
        // CB DC 036F
        gbc.setState(0xab6d, 0x6a56, 0x1780, 0x5ba4, 0xb0ce, 0xe015, 0x0, 0x1);
        gbc.writeMem(0xab6d, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x6a56);
        EXPECT(gbc.pc(), 0xab6f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xab6d), 0xcb);
        EXPECT(gbc.readMem(0xab6e), 0xdc);
        // CB DC 0370
        gbc.setState(0x8bc2, 0x2670, 0x6120, 0xe221, 0x64b1, 0xf878, 0x1, 0x1);
        gbc.writeMem(0x8bc2, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x2670);
        EXPECT(gbc.pc(), 0x8bc4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8bc2), 0xcb);
        EXPECT(gbc.readMem(0x8bc3), 0xdc);
        // CB DC 0371
        gbc.setState(0x263c, 0x30e6, 0x93f0, 0x3736, 0xd77, 0x9e8f, 0x0, 0x1);
        gbc.writeMem(0x263c, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x30e6);
        EXPECT(gbc.pc(), 0x263e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DC 0372
        gbc.setState(0x62d8, 0xec84, 0xab00, 0x2443, 0x816c, 0xaa5d, 0x1, 0x0);
        gbc.writeMem(0x62d8, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xec84);
        EXPECT(gbc.pc(), 0x62da);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DC 0373
        gbc.setState(0x49b5, 0x3c99, 0x99c0, 0x3a62, 0x9d9e, 0x158b, 0x0, 0x1);
        gbc.writeMem(0x49b5, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x3c99);
        EXPECT(gbc.pc(), 0x49b7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DC 0374
        gbc.setState(0x45c8, 0xdba1, 0x5ca0, 0xce95, 0x13d, 0x347b, 0x0, 0x1);
        gbc.writeMem(0x45c8, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0xdba1);
        EXPECT(gbc.pc(), 0x45ca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DC 0375
        gbc.setState(0xbe15, 0xb6c8, 0x1a90, 0x6f13, 0xcf27, 0x58df, 0x0, 0x0);
        gbc.writeMem(0xbe15, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0xb6c8);
        EXPECT(gbc.pc(), 0xbe17);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbe15), 0xcb);
        EXPECT(gbc.readMem(0xbe16), 0xdc);
        // CB DC 0376
        gbc.setState(0x8364, 0xffc0, 0x82c0, 0x5c34, 0x5d05, 0x52fe, 0x1, 0x1);
        gbc.writeMem(0x8364, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0xffc0);
        EXPECT(gbc.pc(), 0x8366);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8364), 0xcb);
        EXPECT(gbc.readMem(0x8365), 0xdc);
        // CB DC 0377
        gbc.setState(0xbdf8, 0xee1f, 0xef0, 0xce10, 0x4058, 0x8a34, 0x1, 0x0);
        gbc.writeMem(0xbdf8, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xee1f);
        EXPECT(gbc.pc(), 0xbdfa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbdf8), 0xcb);
        EXPECT(gbc.readMem(0xbdf9), 0xdc);
        // CB DC 0378
        gbc.setState(0x8941, 0xadd4, 0x98a0, 0xdef3, 0x26cb, 0xbe4f, 0x0, 0x0);
        gbc.writeMem(0x8941, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0xadd4);
        EXPECT(gbc.pc(), 0x8943);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8941), 0xcb);
        EXPECT(gbc.readMem(0x8942), 0xdc);
        // CB DC 0379
        gbc.setState(0x77a1, 0xfdfe, 0x31e0, 0x5d9d, 0x2b40, 0x89a9, 0x0, 0x1);
        gbc.writeMem(0x77a1, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0xfdfe);
        EXPECT(gbc.pc(), 0x77a3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DC 037B
        gbc.setState(0x7d8c, 0xb6c3, 0xb590, 0x9257, 0x95c0, 0xcf42, 0x1, 0x1);
        gbc.writeMem(0x7d8c, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0xb6c3);
        EXPECT(gbc.pc(), 0x7d8e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DC 037C
        gbc.setState(0x4542, 0x762a, 0xd8d0, 0x36f6, 0xa24f, 0x66e1, 0x1, 0x0);
        gbc.writeMem(0x4542, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x762a);
        EXPECT(gbc.pc(), 0x4544);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DC 037D
        gbc.setState(0x6bc7, 0xb3fc, 0x1b60, 0xa160, 0x3b87, 0x8b48, 0x1, 0x1);
        gbc.writeMem(0x6bc7, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0xb3fc);
        EXPECT(gbc.pc(), 0x6bc9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DC 037E
        gbc.setState(0x6384, 0x17ba, 0xab40, 0x5138, 0xc45d, 0xf35e, 0x1, 0x1);
        gbc.writeMem(0x6384, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x17ba);
        EXPECT(gbc.pc(), 0x6386);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DC 037F
        gbc.setState(0x9365, 0x700c, 0xdc00, 0x996c, 0xb282, 0xcf46, 0x1, 0x0);
        gbc.writeMem(0x9365, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x700c);
        EXPECT(gbc.pc(), 0x9367);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9365), 0xcb);
        EXPECT(gbc.readMem(0x9366), 0xdc);
        // CB DC 0380
        gbc.setState(0x832f, 0x90cf, 0x6b90, 0x3b3, 0xf0f1, 0x676b, 0x1, 0x1);
        gbc.writeMem(0x832f, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x90cf);
        EXPECT(gbc.pc(), 0x8331);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x832f), 0xcb);
        EXPECT(gbc.readMem(0x8330), 0xdc);
        // CB DC 0381
        gbc.setState(0x2e58, 0xa92e, 0x2f10, 0xdae6, 0x8a01, 0x1c53, 0x1, 0x0);
        gbc.writeMem(0x2e58, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0xa92e);
        EXPECT(gbc.pc(), 0x2e5a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DC 0382
        gbc.setState(0xc90a, 0x40df, 0x8bb0, 0xc8d8, 0x3a07, 0x753d, 0x0, 0x1);
        gbc.writeMem(0xc90a, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x40df);
        EXPECT(gbc.pc(), 0xc90c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc90a), 0xcb);
        EXPECT(gbc.readMem(0xc90b), 0xdc);
        // CB DC 0383
        gbc.setState(0x50af, 0x6451, 0x4030, 0x58df, 0x4a04, 0x932f, 0x1, 0x1);
        gbc.writeMem(0x50af, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x6451);
        EXPECT(gbc.pc(), 0x50b1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DC 0385
        gbc.setState(0x47cb, 0xf238, 0x8890, 0x2510, 0xa5c6, 0xc5fb, 0x0, 0x0);
        gbc.writeMem(0x47cb, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0xf238);
        EXPECT(gbc.pc(), 0x47cd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DC 0386
        gbc.setState(0x7240, 0x3333, 0xbbd0, 0x74de, 0x88cd, 0xd26f, 0x1, 0x1);
        gbc.writeMem(0x7240, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x3333);
        EXPECT(gbc.pc(), 0x7242);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DC 0387
        gbc.setState(0x4d7d, 0xc48b, 0x16d0, 0xf49, 0xd453, 0xaa7d, 0x1, 0x1);
        gbc.writeMem(0x4d7d, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xc48b);
        EXPECT(gbc.pc(), 0x4d7f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DC 0389
        gbc.setState(0x4b63, 0x2d9c, 0x380, 0x3ba1, 0xd1e, 0xa4d0, 0x1, 0x0);
        gbc.writeMem(0x4b63, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x2d9c);
        EXPECT(gbc.pc(), 0x4b65);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DC 038A
        gbc.setState(0x1275, 0x7cd1, 0x9a10, 0xef15, 0xa78b, 0x6e2b, 0x0, 0x0);
        gbc.writeMem(0x1275, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x7cd1);
        EXPECT(gbc.pc(), 0x1277);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DC 038B
        gbc.setState(0x840e, 0xe3f, 0x7b90, 0x11b4, 0xe541, 0x7cbf, 0x1, 0x1);
        gbc.writeMem(0x840e, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0xe3f);
        EXPECT(gbc.pc(), 0x8410);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x840e), 0xcb);
        EXPECT(gbc.readMem(0x840f), 0xdc);
        // CB DC 038C
        gbc.setState(0x21dd, 0xe27d, 0x2020, 0xfef6, 0xb4d0, 0xb17a, 0x0, 0x0);
        gbc.writeMem(0x21dd, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xe27d);
        EXPECT(gbc.pc(), 0x21df);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DC 038D
        gbc.setState(0x43a7, 0x18db, 0xf390, 0xce86, 0x4867, 0x690d, 0x1, 0x1);
        gbc.writeMem(0x43a7, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x18db);
        EXPECT(gbc.pc(), 0x43a9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DC 038E
        gbc.setState(0x20d1, 0xf332, 0xf930, 0x436b, 0xedeb, 0x9684, 0x1, 0x0);
        gbc.writeMem(0x20d1, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0xf332);
        EXPECT(gbc.pc(), 0x20d3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DC 038F
        gbc.setState(0x7ba3, 0x8721, 0x1580, 0x1314, 0xb364, 0x5583, 0x1, 0x0);
        gbc.writeMem(0x7ba3, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x8721);
        EXPECT(gbc.pc(), 0x7ba5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DC 0390
        gbc.setState(0xea2f, 0xec07, 0x2cd0, 0x9610, 0x53f1, 0xf2fe, 0x0, 0x1);
        gbc.writeMem(0xea2f, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0xec07);
        EXPECT(gbc.pc(), 0xea31);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xea2f), 0xcb);
        EXPECT(gbc.readMem(0xea30), 0xdc);
        // CB DC 0391
        gbc.setState(0xbd13, 0xea70, 0x9240, 0xb493, 0x5c0d, 0x558e, 0x0, 0x0);
        gbc.writeMem(0xbd13, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0xea70);
        EXPECT(gbc.pc(), 0xbd15);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbd13), 0xcb);
        EXPECT(gbc.readMem(0xbd14), 0xdc);
        // CB DC 0392
        gbc.setState(0x9113, 0x954b, 0xb980, 0x42b1, 0xfaaf, 0x10da, 0x0, 0x1);
        gbc.writeMem(0x9113, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x954b);
        EXPECT(gbc.pc(), 0x9115);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9113), 0xcb);
        EXPECT(gbc.readMem(0x9114), 0xdc);
        // CB DC 0393
        gbc.setState(0xaee7, 0xeb0, 0x750, 0xa6d8, 0x6551, 0xda32, 0x1, 0x0);
        gbc.writeMem(0xaee7, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xeb0);
        EXPECT(gbc.pc(), 0xaee9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaee7), 0xcb);
        EXPECT(gbc.readMem(0xaee8), 0xdc);
        // CB DC 0394
        gbc.setState(0xb7ff, 0xa3f7, 0x8ce0, 0x172d, 0x177d, 0xec76, 0x0, 0x0);
        gbc.writeMem(0xb7ff, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0xa3f7);
        EXPECT(gbc.pc(), 0xb801);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb7ff), 0xcb);
        EXPECT(gbc.readMem(0xb800), 0xdc);
        // CB DC 0395
        gbc.setState(0x4bec, 0x1468, 0xc900, 0xfc5a, 0x1336, 0x2548, 0x0, 0x1);
        gbc.writeMem(0x4bec, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x1468);
        EXPECT(gbc.pc(), 0x4bee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DC 0396
        gbc.setState(0x2868, 0x1a3f, 0xea50, 0x1b12, 0xb346, 0x354f, 0x0, 0x0);
        gbc.writeMem(0x2868, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x1a3f);
        EXPECT(gbc.pc(), 0x286a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DC 0397
        gbc.setState(0x9766, 0xcb19, 0xa670, 0xae68, 0xfd40, 0xf3bb, 0x0, 0x1);
        gbc.writeMem(0x9766, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0xcb19);
        EXPECT(gbc.pc(), 0x9768);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9766), 0xcb);
        EXPECT(gbc.readMem(0x9767), 0xdc);
        // CB DC 0398
        gbc.setState(0xe16b, 0xfe52, 0x3ba0, 0x70ef, 0x386c, 0x4f44, 0x0, 0x1);
        gbc.writeMem(0xe16b, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xfe52);
        EXPECT(gbc.pc(), 0xe16d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe16b), 0xcb);
        EXPECT(gbc.readMem(0xe16c), 0xdc);
        // CB DC 0399
        gbc.setState(0xd3ae, 0xdee9, 0xdfd0, 0xd8e0, 0x9814, 0x63d7, 0x0, 0x0);
        gbc.writeMem(0xd3ae, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0xdee9);
        EXPECT(gbc.pc(), 0xd3b0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd3ae), 0xcb);
        EXPECT(gbc.readMem(0xd3af), 0xdc);
        // CB DC 039A
        gbc.setState(0x3910, 0xb528, 0xeae0, 0xa52c, 0x4498, 0x14df, 0x0, 0x1);
        gbc.writeMem(0x3910, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0xb528);
        EXPECT(gbc.pc(), 0x3912);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DC 039B
        gbc.setState(0xba0f, 0x2c7c, 0x82d0, 0x3db7, 0x432d, 0xdfa7, 0x1, 0x0);
        gbc.writeMem(0xba0f, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x2c7c);
        EXPECT(gbc.pc(), 0xba11);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xba0f), 0xcb);
        EXPECT(gbc.readMem(0xba10), 0xdc);
        // CB DC 039C
        gbc.setState(0x2a7f, 0xd04c, 0x5310, 0x3c96, 0xef66, 0x3a72, 0x1, 0x1);
        gbc.writeMem(0x2a7f, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0xd04c);
        EXPECT(gbc.pc(), 0x2a81);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DC 039D
        gbc.setState(0x3c8a, 0x7131, 0x7c0, 0x8a2a, 0x836a, 0xdb34, 0x1, 0x1);
        gbc.writeMem(0x3c8a, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x7131);
        EXPECT(gbc.pc(), 0x3c8c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DC 039F
        gbc.setState(0x271b, 0xb0e6, 0xfe50, 0x3eb4, 0x2ceb, 0x41eb, 0x0, 0x1);
        gbc.writeMem(0x271b, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0xb0e6);
        EXPECT(gbc.pc(), 0x271d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DC 03A0
        gbc.setState(0xa866, 0x8be5, 0x5ce0, 0xfa11, 0x2d3b, 0xba72, 0x1, 0x1);
        gbc.writeMem(0xa866, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x8be5);
        EXPECT(gbc.pc(), 0xa868);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa866), 0xcb);
        EXPECT(gbc.readMem(0xa867), 0xdc);
        // CB DC 03A1
        gbc.setState(0x8f35, 0x66c, 0xe3d0, 0x1fa8, 0x2913, 0x5610, 0x0, 0x1);
        gbc.writeMem(0x8f35, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x66c);
        EXPECT(gbc.pc(), 0x8f37);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8f35), 0xcb);
        EXPECT(gbc.readMem(0x8f36), 0xdc);
        // CB DC 03A2
        gbc.setState(0xa71, 0xd2bd, 0x84f0, 0x4822, 0x5c68, 0xd91e, 0x1, 0x1);
        gbc.writeMem(0xa71, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0xd2bd);
        EXPECT(gbc.pc(), 0xa73);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DC 03A3
        gbc.setState(0x3d0c, 0x23ba, 0xef50, 0x6387, 0x136c, 0x2e0a, 0x1, 0x0);
        gbc.writeMem(0x3d0c, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x23ba);
        EXPECT(gbc.pc(), 0x3d0e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DC 03A4
        gbc.setState(0x1f7a, 0xd184, 0x1500, 0x1cda, 0xa8f2, 0xeb1d, 0x0, 0x0);
        gbc.writeMem(0x1f7a, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0xd184);
        EXPECT(gbc.pc(), 0x1f7c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DC 03A5
        gbc.setState(0xb5db, 0x48b6, 0x1ec0, 0x982c, 0xcba8, 0x374f, 0x0, 0x1);
        gbc.writeMem(0xb5db, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x48b6);
        EXPECT(gbc.pc(), 0xb5dd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb5db), 0xcb);
        EXPECT(gbc.readMem(0xb5dc), 0xdc);
        // CB DC 03A6
        gbc.setState(0xe9cd, 0xa991, 0x2a90, 0xbd68, 0xd38e, 0x6ca8, 0x1, 0x0);
        gbc.writeMem(0xe9cd, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0xa991);
        EXPECT(gbc.pc(), 0xe9cf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe9cd), 0xcb);
        EXPECT(gbc.readMem(0xe9ce), 0xdc);
        // CB DC 03A7
        gbc.setState(0x9c4, 0x932d, 0xb370, 0x8bac, 0x6b1f, 0x7a24, 0x1, 0x1);
        gbc.writeMem(0x9c4, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x932d);
        EXPECT(gbc.pc(), 0x9c6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DC 03A8
        gbc.setState(0xe88e, 0x36d0, 0xc790, 0xa14c, 0xa39a, 0xd5c, 0x0, 0x1);
        gbc.writeMem(0xe88e, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x36d0);
        EXPECT(gbc.pc(), 0xe890);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe88e), 0xcb);
        EXPECT(gbc.readMem(0xe88f), 0xdc);
        // CB DC 03A9
        gbc.setState(0x7948, 0x52b2, 0x6e40, 0xc201, 0xf685, 0xa4b1, 0x0, 0x0);
        gbc.writeMem(0x7948, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x52b2);
        EXPECT(gbc.pc(), 0x794a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DC 03AA
        gbc.setState(0xdb9b, 0x1ded, 0x1830, 0xe0eb, 0x11fe, 0x8a4a, 0x0, 0x0);
        gbc.writeMem(0xdb9b, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x1ded);
        EXPECT(gbc.pc(), 0xdb9d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdb9b), 0xcb);
        EXPECT(gbc.readMem(0xdb9c), 0xdc);
        // CB DC 03AB
        gbc.setState(0xc715, 0x28c2, 0x6f50, 0xad1c, 0x34b2, 0x570b, 0x1, 0x0);
        gbc.writeMem(0xc715, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x28c2);
        EXPECT(gbc.pc(), 0xc717);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc715), 0xcb);
        EXPECT(gbc.readMem(0xc716), 0xdc);
        // CB DC 03AE
        gbc.setState(0x83ed, 0xa825, 0xd1c0, 0xa7d8, 0x5cc4, 0x32d0, 0x1, 0x1);
        gbc.writeMem(0x83ed, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0xa825);
        EXPECT(gbc.pc(), 0x83ef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x83ed), 0xcb);
        EXPECT(gbc.readMem(0x83ee), 0xdc);
        // CB DC 03AF
        gbc.setState(0x6935, 0xd482, 0xfba0, 0xa4fa, 0xc090, 0x5955, 0x0, 0x0);
        gbc.writeMem(0x6935, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0xd482);
        EXPECT(gbc.pc(), 0x6937);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DC 03B0
        gbc.setState(0x5976, 0xebd5, 0xb1f0, 0x9fbf, 0x540e, 0xf05f, 0x0, 0x0);
        gbc.writeMem(0x5976, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0xebd5);
        EXPECT(gbc.pc(), 0x5978);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DC 03B1
        gbc.setState(0xd5c2, 0x8f57, 0xaf10, 0x7c70, 0x511c, 0xc32e, 0x1, 0x1);
        gbc.writeMem(0xd5c2, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x8f57);
        EXPECT(gbc.pc(), 0xd5c4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd5c2), 0xcb);
        EXPECT(gbc.readMem(0xd5c3), 0xdc);
        // CB DC 03B2
        gbc.setState(0x8274, 0x342e, 0x96d0, 0xdad6, 0x31a7, 0xf2e3, 0x1, 0x1);
        gbc.writeMem(0x8274, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x342e);
        EXPECT(gbc.pc(), 0x8276);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8274), 0xcb);
        EXPECT(gbc.readMem(0x8275), 0xdc);
        // CB DC 03B3
        gbc.setState(0x8c5, 0x4332, 0xaa40, 0x493d, 0x28ca, 0x74fe, 0x1, 0x1);
        gbc.writeMem(0x8c5, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x4332);
        EXPECT(gbc.pc(), 0x8c7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DC 03B5
        gbc.setState(0x83b0, 0xeeb5, 0xbc30, 0x6892, 0xb2cf, 0xa80c, 0x0, 0x0);
        gbc.writeMem(0x83b0, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xeeb5);
        EXPECT(gbc.pc(), 0x83b2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x83b0), 0xcb);
        EXPECT(gbc.readMem(0x83b1), 0xdc);
        // CB DC 03B6
        gbc.setState(0x98d6, 0xafe4, 0xe2e0, 0x601c, 0x70dc, 0xbfde, 0x1, 0x1);
        gbc.writeMem(0x98d6, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0xafe4);
        EXPECT(gbc.pc(), 0x98d8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x98d6), 0xcb);
        EXPECT(gbc.readMem(0x98d7), 0xdc);
        // CB DC 03B7
        gbc.setState(0xbfb7, 0xa9f1, 0x6ea0, 0xac23, 0xfac3, 0x9ea6, 0x0, 0x1);
        gbc.writeMem(0xbfb7, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0xa9f1);
        EXPECT(gbc.pc(), 0xbfb9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbfb7), 0xcb);
        EXPECT(gbc.readMem(0xbfb8), 0xdc);
        // CB DC 03B8
        gbc.setState(0x2980, 0x7166, 0x5ed0, 0xa666, 0x133a, 0xbca9, 0x0, 0x1);
        gbc.writeMem(0x2980, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x7166);
        EXPECT(gbc.pc(), 0x2982);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DC 03B9
        gbc.setState(0xe4a3, 0xb3cf, 0xc9f0, 0xf047, 0xa779, 0x5525, 0x1, 0x0);
        gbc.writeMem(0xe4a3, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0xb3cf);
        EXPECT(gbc.pc(), 0xe4a5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe4a3), 0xcb);
        EXPECT(gbc.readMem(0xe4a4), 0xdc);
        // CB DC 03BA
        gbc.setState(0x8328, 0x4639, 0xe560, 0x5fc9, 0xf895, 0xb0d6, 0x0, 0x0);
        gbc.writeMem(0x8328, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x4639);
        EXPECT(gbc.pc(), 0x832a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8328), 0xcb);
        EXPECT(gbc.readMem(0x8329), 0xdc);
        // CB DC 03BB
        gbc.setState(0xb714, 0xd98c, 0x8f20, 0x6616, 0x80e2, 0x4617, 0x1, 0x1);
        gbc.writeMem(0xb714, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0xd98c);
        EXPECT(gbc.pc(), 0xb716);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb714), 0xcb);
        EXPECT(gbc.readMem(0xb715), 0xdc);
        // CB DC 03BC
        gbc.setState(0x6dc0, 0xfd1e, 0xd040, 0xaace, 0xc579, 0x52e5, 0x0, 0x1);
        gbc.writeMem(0x6dc0, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xfd1e);
        EXPECT(gbc.pc(), 0x6dc2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DC 03BD
        gbc.setState(0x811a, 0xce7a, 0xa8e0, 0x2ce1, 0x8035, 0x2610, 0x0, 0x0);
        gbc.writeMem(0x811a, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xce7a);
        EXPECT(gbc.pc(), 0x811c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x811a), 0xcb);
        EXPECT(gbc.readMem(0x811b), 0xdc);
        // CB DC 03BE
        gbc.setState(0x2773, 0x5f62, 0x5d90, 0x7fda, 0x4f80, 0xc775, 0x0, 0x1);
        gbc.writeMem(0x2773, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x5f62);
        EXPECT(gbc.pc(), 0x2775);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DC 03BF
        gbc.setState(0x8b21, 0x67df, 0x1c70, 0x6898, 0xa33, 0xfea6, 0x0, 0x0);
        gbc.writeMem(0x8b21, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x67df);
        EXPECT(gbc.pc(), 0x8b23);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b21), 0xcb);
        EXPECT(gbc.readMem(0x8b22), 0xdc);
        // CB DC 03C0
        gbc.setState(0xaf36, 0xcec, 0xf520, 0x66fd, 0x4750, 0x163, 0x0, 0x0);
        gbc.writeMem(0xaf36, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0xcec);
        EXPECT(gbc.pc(), 0xaf38);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaf36), 0xcb);
        EXPECT(gbc.readMem(0xaf37), 0xdc);
        // CB DC 03C1
        gbc.setState(0xc30f, 0xcbf6, 0xab20, 0xbe03, 0x37e0, 0xa86c, 0x0, 0x1);
        gbc.writeMem(0xc30f, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xcbf6);
        EXPECT(gbc.pc(), 0xc311);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc30f), 0xcb);
        EXPECT(gbc.readMem(0xc310), 0xdc);
        // CB DC 03C2
        gbc.setState(0xa8c1, 0x16dd, 0x6860, 0x5bc5, 0x70a4, 0xa8c1, 0x1, 0x0);
        gbc.writeMem(0xa8c1, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x16dd);
        EXPECT(gbc.pc(), 0xa8c3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa8c1), 0xcb);
        EXPECT(gbc.readMem(0xa8c2), 0xdc);
        // CB DC 03C3
        gbc.setState(0x85f4, 0x42ac, 0x7b90, 0xbd48, 0x7d73, 0xf576, 0x0, 0x1);
        gbc.writeMem(0x85f4, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x42ac);
        EXPECT(gbc.pc(), 0x85f6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x85f4), 0xcb);
        EXPECT(gbc.readMem(0x85f5), 0xdc);
        // CB DC 03C4
        gbc.setState(0x7127, 0x980c, 0x61f0, 0x5dae, 0xaae1, 0xbf0a, 0x1, 0x1);
        gbc.writeMem(0x7127, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x980c);
        EXPECT(gbc.pc(), 0x7129);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DC 03C5
        gbc.setState(0x71fe, 0x43df, 0xd530, 0x2496, 0x797d, 0x948c, 0x1, 0x1);
        gbc.writeMem(0x71fe, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x43df);
        EXPECT(gbc.pc(), 0x7200);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DC 03C6
        gbc.setState(0xeb81, 0xc8dd, 0xd1b0, 0x741d, 0xa312, 0x27e4, 0x1, 0x1);
        gbc.writeMem(0xeb81, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0xc8dd);
        EXPECT(gbc.pc(), 0xeb83);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeb81), 0xcb);
        EXPECT(gbc.readMem(0xeb82), 0xdc);
        // CB DC 03C7
        gbc.setState(0xd97a, 0x1f05, 0xe140, 0x6967, 0x7b9a, 0x8888, 0x0, 0x1);
        gbc.writeMem(0xd97a, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x1f05);
        EXPECT(gbc.pc(), 0xd97c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd97a), 0xcb);
        EXPECT(gbc.readMem(0xd97b), 0xdc);
        // CB DC 03C8
        gbc.setState(0x695a, 0x86f, 0x7010, 0xba87, 0xd12, 0xb492, 0x0, 0x1);
        gbc.writeMem(0x695a, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x86f);
        EXPECT(gbc.pc(), 0x695c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DC 03C9
        gbc.setState(0x3600, 0xb1d3, 0xa9d0, 0x1f42, 0x785a, 0x63a0, 0x1, 0x0);
        gbc.writeMem(0x3600, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xb1d3);
        EXPECT(gbc.pc(), 0x3602);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DC 03CA
        gbc.setState(0x763e, 0x7b7, 0x1900, 0x625, 0x285a, 0xe488, 0x1, 0x0);
        gbc.writeMem(0x763e, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x7b7);
        EXPECT(gbc.pc(), 0x7640);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DC 03CB
        gbc.setState(0xeef1, 0xb89f, 0xc3e0, 0x57c9, 0x68bb, 0xb590, 0x1, 0x0);
        gbc.writeMem(0xeef1, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0xb89f);
        EXPECT(gbc.pc(), 0xeef3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeef1), 0xcb);
        EXPECT(gbc.readMem(0xeef2), 0xdc);
        // CB DC 03CC
        gbc.setState(0xcfc1, 0x5cc3, 0xd820, 0xdfb8, 0x6a2e, 0xec74, 0x0, 0x1);
        gbc.writeMem(0xcfc1, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x5cc3);
        EXPECT(gbc.pc(), 0xcfc3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcfc1), 0xcb);
        EXPECT(gbc.readMem(0xcfc2), 0xdc);
        // CB DC 03CD
        gbc.setState(0x1488, 0xddc3, 0x1a00, 0x77e0, 0xc270, 0xd90d, 0x1, 0x1);
        gbc.writeMem(0x1488, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0xddc3);
        EXPECT(gbc.pc(), 0x148a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DC 03CE
        gbc.setState(0x22f1, 0x9b7f, 0x7ea0, 0x51ad, 0x2273, 0x7dea, 0x1, 0x1);
        gbc.writeMem(0x22f1, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x9b7f);
        EXPECT(gbc.pc(), 0x22f3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DC 03CF
        gbc.setState(0x4413, 0x5842, 0x7620, 0x7ce4, 0xd30d, 0x7a99, 0x1, 0x0);
        gbc.writeMem(0x4413, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x5842);
        EXPECT(gbc.pc(), 0x4415);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DC 03D0
        gbc.setState(0x2c6a, 0x79eb, 0xe210, 0xe7a4, 0x15c5, 0x9440, 0x1, 0x1);
        gbc.writeMem(0x2c6a, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x79eb);
        EXPECT(gbc.pc(), 0x2c6c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DC 03D1
        gbc.setState(0xdad, 0x8415, 0x6840, 0x7bc5, 0xe5e0, 0xadeb, 0x1, 0x1);
        gbc.writeMem(0xdad, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x8415);
        EXPECT(gbc.pc(), 0xdaf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DC 03D2
        gbc.setState(0x8b88, 0x5e81, 0x8510, 0xdf80, 0x4d7, 0x530c, 0x1, 0x1);
        gbc.writeMem(0x8b88, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x5e81);
        EXPECT(gbc.pc(), 0x8b8a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b88), 0xcb);
        EXPECT(gbc.readMem(0x8b89), 0xdc);
        // CB DC 03D3
        gbc.setState(0xd136, 0x308f, 0x1ef0, 0xb2d9, 0x1c6, 0xef7c, 0x0, 0x0);
        gbc.writeMem(0xd136, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x308f);
        EXPECT(gbc.pc(), 0xd138);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd136), 0xcb);
        EXPECT(gbc.readMem(0xd137), 0xdc);
        // CB DC 03D4
        gbc.setState(0x22f0, 0x17f3, 0x8ad0, 0x604, 0x9818, 0x85d0, 0x0, 0x0);
        gbc.writeMem(0x22f0, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x17f3);
        EXPECT(gbc.pc(), 0x22f2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DC 03D5
        gbc.setState(0xaa45, 0x381, 0xd6c0, 0x6c0c, 0xaed8, 0x2e45, 0x1, 0x1);
        gbc.writeMem(0xaa45, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x381);
        EXPECT(gbc.pc(), 0xaa47);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaa45), 0xcb);
        EXPECT(gbc.readMem(0xaa46), 0xdc);
        // CB DC 03D6
        gbc.setState(0xa645, 0x8291, 0x83f0, 0xaaa7, 0x7766, 0xf0a4, 0x1, 0x0);
        gbc.writeMem(0xa645, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x8291);
        EXPECT(gbc.pc(), 0xa647);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa645), 0xcb);
        EXPECT(gbc.readMem(0xa646), 0xdc);
        // CB DC 03D7
        gbc.setState(0x1fb6, 0x2043, 0xe420, 0x26cb, 0xfa5a, 0x4, 0x1, 0x0);
        gbc.writeMem(0x1fb6, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x2043);
        EXPECT(gbc.pc(), 0x1fb8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DC 03D8
        gbc.setState(0xd27e, 0xfac3, 0x1940, 0x4b0e, 0x2bb9, 0x34a4, 0x1, 0x0);
        gbc.writeMem(0xd27e, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0xfac3);
        EXPECT(gbc.pc(), 0xd280);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd27e), 0xcb);
        EXPECT(gbc.readMem(0xd27f), 0xdc);
        // CB DC 03DA
        gbc.setState(0x6fac, 0xe58d, 0x1650, 0xf235, 0x2f5e, 0x161f, 0x0, 0x0);
        gbc.writeMem(0x6fac, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0xe58d);
        EXPECT(gbc.pc(), 0x6fae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DC 03DB
        gbc.setState(0x78ca, 0x4990, 0x6ff0, 0x75f8, 0x59ea, 0xdae4, 0x0, 0x0);
        gbc.writeMem(0x78ca, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x4990);
        EXPECT(gbc.pc(), 0x78cc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DC 03DC
        gbc.setState(0xc07f, 0xad0c, 0x71c0, 0x76a5, 0x9bea, 0xe29f, 0x0, 0x0);
        gbc.writeMem(0xc07f, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0xad0c);
        EXPECT(gbc.pc(), 0xc081);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc07f), 0xcb);
        EXPECT(gbc.readMem(0xc080), 0xdc);
        // CB DC 03DD
        gbc.setState(0xc998, 0xec34, 0xd680, 0x495f, 0x6701, 0x9833, 0x1, 0x0);
        gbc.writeMem(0xc998, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0xec34);
        EXPECT(gbc.pc(), 0xc99a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc998), 0xcb);
        EXPECT(gbc.readMem(0xc999), 0xdc);
        // CB DC 03DE
        gbc.setState(0x5c23, 0xbe2, 0xb750, 0xbfc3, 0x5c1a, 0xbc60, 0x0, 0x1);
        gbc.writeMem(0x5c23, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xbe2);
        EXPECT(gbc.pc(), 0x5c25);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DC 03DF
        gbc.setState(0x5d47, 0x8195, 0x5bc0, 0xb484, 0x1dd5, 0x97af, 0x0, 0x0);
        gbc.writeMem(0x5d47, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x8195);
        EXPECT(gbc.pc(), 0x5d49);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DC 03E0
        gbc.setState(0xe700, 0xc841, 0x54e0, 0x2977, 0xbb2e, 0xeecb, 0x0, 0x0);
        gbc.writeMem(0xe700, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0xc841);
        EXPECT(gbc.pc(), 0xe702);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe700), 0xcb);
        EXPECT(gbc.readMem(0xe701), 0xdc);
        // CB DC 03E1
        gbc.setState(0x6ee2, 0x3d1d, 0x4910, 0x43a2, 0x555, 0xd70a, 0x1, 0x0);
        gbc.writeMem(0x6ee2, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x3d1d);
        EXPECT(gbc.pc(), 0x6ee4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DC 03E2
        gbc.setState(0x258a, 0x8d18, 0xd4c0, 0x86eb, 0x49c0, 0xe1f0, 0x0, 0x0);
        gbc.writeMem(0x258a, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x8d18);
        EXPECT(gbc.pc(), 0x258c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DC 03E3
        gbc.setState(0xa3dd, 0xf0d9, 0x8e80, 0xfc79, 0x21dd, 0x4565, 0x0, 0x1);
        gbc.writeMem(0xa3dd, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0xf0d9);
        EXPECT(gbc.pc(), 0xa3df);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa3dd), 0xcb);
        EXPECT(gbc.readMem(0xa3de), 0xdc);
        // CB DC 03E4
        gbc.setState(0x1098, 0x5548, 0x9f40, 0xe655, 0xf185, 0x130, 0x0, 0x1);
        gbc.writeMem(0x1098, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x5548);
        EXPECT(gbc.pc(), 0x109a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DC 03E5
        gbc.setState(0x9ceb, 0xb1b8, 0x9140, 0xb76d, 0x567d, 0x6d89, 0x1, 0x0);
        gbc.writeMem(0x9ceb, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0xb1b8);
        EXPECT(gbc.pc(), 0x9ced);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9ceb), 0xcb);
        EXPECT(gbc.readMem(0x9cec), 0xdc);
        // CB DC 03E7
        gbc.setState(0x4afb, 0x6edc, 0x9730, 0x2973, 0x77c8, 0xe3f0, 0x0, 0x1);
        gbc.writeMem(0x4afb, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x6edc);
        EXPECT(gbc.pc(), 0x4afd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
    }
}
#endif
