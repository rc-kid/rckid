#include "../gbctests_insns.h"
#if (defined GBCEMU_INSNS_TESTS_ALL) || (defined GBCEMU_INSNS_TESTS_70)
#include "../gbctests.h"

namespace rckid::gbcemu {

    TEST(gbcemu, opcode_70) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // 70 0008
        gbc.setState(0xe23d, 0xd736, 0xdce0, 0x5e1c, 0x6989, 0xccd6, 0x0, 0x1);
        gbc.writeMem(0xccd6, { 0x0 });
        gbc.writeMem(0xe23d, { 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0xd736);
        EXPECT(gbc.pc(), 0xe23e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xccd6), 0x5e);
        EXPECT(gbc.readMem(0xe23d), 0x70);
        // 70 0009
        gbc.setState(0x1f4e, 0x6866, 0x3310, 0x44df, 0x68f1, 0xb08d, 0x1, 0x0);
        gbc.writeMem(0x1f4e, { 0x70 });
        gbc.writeMem(0xb08d, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x6866);
        EXPECT(gbc.pc(), 0x1f4f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb08d), 0x44);
        // 70 000B
        gbc.setState(0xdc14, 0x1be5, 0xdfb0, 0x5d65, 0x25f2, 0xf9a1, 0x0, 0x1);
        gbc.writeMem(0xdc14, { 0x70 });
        gbc.writeMem(0xf9a1, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x1be5);
        EXPECT(gbc.pc(), 0xdc15);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdc14), 0x70);
        EXPECT(gbc.readMem(0xf9a1), 0x5d);
        // 70 000F
        gbc.setState(0x24b2, 0xe7a9, 0x5a30, 0x9f2c, 0xb8f0, 0xa07e, 0x0, 0x1);
        gbc.writeMem(0x24b2, { 0x70 });
        gbc.writeMem(0xa07e, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0xe7a9);
        EXPECT(gbc.pc(), 0x24b3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa07e), 0x9f);
        // 70 0010
        gbc.setState(0x2efb, 0x6666, 0xcc0, 0xed33, 0x7168, 0xbdc4, 0x0, 0x1);
        gbc.writeMem(0x2efb, { 0x70 });
        gbc.writeMem(0xbdc4, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x6666);
        EXPECT(gbc.pc(), 0x2efc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbdc4), 0xed);
        // 70 0011
        gbc.setState(0xaf89, 0x3d53, 0x2a70, 0xb4b, 0x6cee, 0xb771, 0x0, 0x1);
        gbc.writeMem(0xaf89, { 0x70 });
        gbc.writeMem(0xb771, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x3d53);
        EXPECT(gbc.pc(), 0xaf8a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaf89), 0x70);
        EXPECT(gbc.readMem(0xb771), 0xb);
        // 70 0013
        gbc.setState(0x7305, 0xe4ec, 0x4230, 0x2ee2, 0x8cf4, 0xe969, 0x0, 0x1);
        gbc.writeMem(0x7305, { 0x70 });
        gbc.writeMem(0xe969, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0xe4ec);
        EXPECT(gbc.pc(), 0x7306);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe969), 0x2e);
        // 70 0014
        gbc.setState(0x93a2, 0xa975, 0x9320, 0xbb52, 0x6aeb, 0xac09, 0x1, 0x0);
        gbc.writeMem(0x93a2, { 0x70 });
        gbc.writeMem(0xac09, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0xa975);
        EXPECT(gbc.pc(), 0x93a3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x93a2), 0x70);
        EXPECT(gbc.readMem(0xac09), 0xbb);
        // 70 001A
        gbc.setState(0x5824, 0x2e6a, 0xd5a0, 0x5317, 0x7e1e, 0x859c, 0x1, 0x0);
        gbc.writeMem(0x5824, { 0x70 });
        gbc.writeMem(0x859c, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x2e6a);
        EXPECT(gbc.pc(), 0x5825);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x859c), 0x53);
        // 70 001C
        gbc.setState(0x120b, 0xec83, 0xb370, 0xe82e, 0x1842, 0xbc4f, 0x1, 0x0);
        gbc.writeMem(0x120b, { 0x70 });
        gbc.writeMem(0xbc4f, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0xec83);
        EXPECT(gbc.pc(), 0x120c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbc4f), 0xe8);
        // 70 0021
        gbc.setState(0x3af, 0x3c98, 0x5940, 0x954a, 0x3136, 0xac7b, 0x0, 0x1);
        gbc.writeMem(0x3af, { 0x70 });
        gbc.writeMem(0xac7b, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x3c98);
        EXPECT(gbc.pc(), 0x3b0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xac7b), 0x95);
        // 70 0022
        gbc.setState(0x2ab9, 0x80c0, 0x7c60, 0xe0ca, 0x44b6, 0xaab7, 0x1, 0x1);
        gbc.writeMem(0x2ab9, { 0x70 });
        gbc.writeMem(0xaab7, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x80c0);
        EXPECT(gbc.pc(), 0x2aba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaab7), 0xe0);
        // 70 0023
        gbc.setState(0x3bc9, 0xd4f7, 0x9cb0, 0x5e57, 0x1f5f, 0xc3b8, 0x1, 0x1);
        gbc.writeMem(0x3bc9, { 0x70 });
        gbc.writeMem(0xc3b8, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0xd4f7);
        EXPECT(gbc.pc(), 0x3bca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc3b8), 0x5e);
        // 70 0024
        gbc.setState(0xdb82, 0x86d9, 0x84c0, 0x336, 0x55e5, 0xcf9a, 0x0, 0x0);
        gbc.writeMem(0xcf9a, { 0x0 });
        gbc.writeMem(0xdb82, { 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x86d9);
        EXPECT(gbc.pc(), 0xdb83);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcf9a), 0x3);
        EXPECT(gbc.readMem(0xdb82), 0x70);
        // 70 0026
        gbc.setState(0xac16, 0x36bb, 0x26c0, 0x5e84, 0xc1cd, 0xce6f, 0x1, 0x1);
        gbc.writeMem(0xac16, { 0x70 });
        gbc.writeMem(0xce6f, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x36bb);
        EXPECT(gbc.pc(), 0xac17);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xac16), 0x70);
        EXPECT(gbc.readMem(0xce6f), 0x5e);
        // 70 002D
        gbc.setState(0x8a14, 0x5c2e, 0x1c50, 0xe0c8, 0x4592, 0xc86e, 0x1, 0x0);
        gbc.writeMem(0x8a14, { 0x70 });
        gbc.writeMem(0xc86e, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x5c2e);
        EXPECT(gbc.pc(), 0x8a15);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8a14), 0x70);
        EXPECT(gbc.readMem(0xc86e), 0xe0);
        // 70 002F
        gbc.setState(0x141e, 0xf7c9, 0x4000, 0x1c89, 0x3d3f, 0x9b02, 0x1, 0x1);
        gbc.writeMem(0x141e, { 0x70 });
        gbc.writeMem(0x9b02, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xf7c9);
        EXPECT(gbc.pc(), 0x141f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9b02), 0x1c);
        // 70 0032
        gbc.setState(0x4dbb, 0x60e4, 0x5460, 0x3dd9, 0x627c, 0xd6e0, 0x1, 0x0);
        gbc.writeMem(0x4dbb, { 0x70 });
        gbc.writeMem(0xd6e0, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x60e4);
        EXPECT(gbc.pc(), 0x4dbc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd6e0), 0x3d);
        // 70 0036
        gbc.setState(0x23ed, 0x3aa8, 0x7100, 0x752e, 0x2b30, 0xfb72, 0x1, 0x1);
        gbc.writeMem(0x23ed, { 0x70 });
        gbc.writeMem(0xfb72, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x3aa8);
        EXPECT(gbc.pc(), 0x23ee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xfb72), 0x75);
        // 70 0037
        gbc.setState(0xa966, 0xe69, 0x2930, 0x84c1, 0x552c, 0xaf81, 0x1, 0x1);
        gbc.writeMem(0xa966, { 0x70 });
        gbc.writeMem(0xaf81, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0xe69);
        EXPECT(gbc.pc(), 0xa967);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa966), 0x70);
        EXPECT(gbc.readMem(0xaf81), 0x84);
        // 70 0038
        gbc.setState(0x2631, 0x7f6f, 0x8f50, 0xe0ef, 0x5396, 0x8d7c, 0x1, 0x1);
        gbc.writeMem(0x2631, { 0x70 });
        gbc.writeMem(0x8d7c, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x7f6f);
        EXPECT(gbc.pc(), 0x2632);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8d7c), 0xe0);
        // 70 003D
        gbc.setState(0x764b, 0x9c1, 0xd420, 0x8f45, 0x4ea0, 0xfc56, 0x0, 0x0);
        gbc.writeMem(0x764b, { 0x70 });
        gbc.writeMem(0xfc56, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x9c1);
        EXPECT(gbc.pc(), 0x764c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xfc56), 0x8f);
        // 70 0041
        gbc.setState(0xe704, 0x35e1, 0xa9e0, 0x16d3, 0x2a8, 0xb2ca, 0x0, 0x0);
        gbc.writeMem(0xb2ca, { 0x0 });
        gbc.writeMem(0xe704, { 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x35e1);
        EXPECT(gbc.pc(), 0xe705);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb2ca), 0x16);
        EXPECT(gbc.readMem(0xe704), 0x70);
        // 70 0045
        gbc.setState(0x3ebd, 0x91ca, 0xc7a0, 0x3951, 0xc3e, 0x8d15, 0x1, 0x0);
        gbc.writeMem(0x3ebd, { 0x70 });
        gbc.writeMem(0x8d15, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x91ca);
        EXPECT(gbc.pc(), 0x3ebe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d15), 0x39);
        // 70 0049
        gbc.setState(0x2c6f, 0xedf1, 0xa970, 0x8a8e, 0xeab9, 0xb87a, 0x0, 0x0);
        gbc.writeMem(0x2c6f, { 0x70 });
        gbc.writeMem(0xb87a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xedf1);
        EXPECT(gbc.pc(), 0x2c70);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb87a), 0x8a);
        // 70 004A
        gbc.setState(0x6980, 0xa743, 0xa040, 0x103a, 0x6be9, 0x92dc, 0x0, 0x0);
        gbc.writeMem(0x6980, { 0x70 });
        gbc.writeMem(0x92dc, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0xa743);
        EXPECT(gbc.pc(), 0x6981);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x92dc), 0x10);
        // 70 004C
        gbc.setState(0x167d, 0x5f8a, 0x6fc0, 0x7df1, 0xbc5b, 0x922b, 0x0, 0x0);
        gbc.writeMem(0x167d, { 0x70 });
        gbc.writeMem(0x922b, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x5f8a);
        EXPECT(gbc.pc(), 0x167e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x922b), 0x7d);
        // 70 004F
        gbc.setState(0xbfe6, 0x6378, 0x4970, 0xd3ab, 0xff10, 0xa873, 0x0, 0x0);
        gbc.writeMem(0xa873, { 0x0 });
        gbc.writeMem(0xbfe6, { 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x6378);
        EXPECT(gbc.pc(), 0xbfe7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa873), 0xd3);
        EXPECT(gbc.readMem(0xbfe6), 0x70);
        // 70 0051
        gbc.setState(0xc5f6, 0x6a50, 0x1910, 0x4b1e, 0x97f2, 0xd0b1, 0x1, 0x1);
        gbc.writeMem(0xc5f6, { 0x70 });
        gbc.writeMem(0xd0b1, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x6a50);
        EXPECT(gbc.pc(), 0xc5f7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc5f6), 0x70);
        EXPECT(gbc.readMem(0xd0b1), 0x4b);
        // 70 0052
        gbc.setState(0xa526, 0xca9, 0xbd60, 0x47ea, 0xf591, 0xcb96, 0x0, 0x1);
        gbc.writeMem(0xa526, { 0x70 });
        gbc.writeMem(0xcb96, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0xca9);
        EXPECT(gbc.pc(), 0xa527);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa526), 0x70);
        EXPECT(gbc.readMem(0xcb96), 0x47);
        // 70 0054
        gbc.setState(0x1ac2, 0x681a, 0xa720, 0xe2fc, 0xfdc, 0xc50f, 0x0, 0x1);
        gbc.writeMem(0x1ac2, { 0x70 });
        gbc.writeMem(0xc50f, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x681a);
        EXPECT(gbc.pc(), 0x1ac3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc50f), 0xe2);
        // 70 0057
        gbc.setState(0xc577, 0x8607, 0x810, 0x22c, 0x5de5, 0xae4a, 0x0, 0x0);
        gbc.writeMem(0xae4a, { 0x0 });
        gbc.writeMem(0xc577, { 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x8607);
        EXPECT(gbc.pc(), 0xc578);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xae4a), 0x2);
        EXPECT(gbc.readMem(0xc577), 0x70);
        // 70 0059
        gbc.setState(0xd8a1, 0x1d8a, 0xcba0, 0xaa39, 0xed70, 0xd2ee, 0x1, 0x0);
        gbc.writeMem(0xd2ee, { 0x0 });
        gbc.writeMem(0xd8a1, { 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x1d8a);
        EXPECT(gbc.pc(), 0xd8a2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd2ee), 0xaa);
        EXPECT(gbc.readMem(0xd8a1), 0x70);
        // 70 005C
        gbc.setState(0xb8c9, 0xdde1, 0xaaf0, 0xe517, 0x71a5, 0xf128, 0x0, 0x0);
        gbc.writeMem(0xb8c9, { 0x70 });
        gbc.writeMem(0xf128, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xdde1);
        EXPECT(gbc.pc(), 0xb8ca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb8c9), 0x70);
        EXPECT(gbc.readMem(0xf128), 0xe5);
        // 70 0062
        gbc.setState(0xcdf9, 0x2d3e, 0x8560, 0xd67f, 0x8895, 0xe4f1, 0x1, 0x0);
        gbc.writeMem(0xcdf9, { 0x70 });
        gbc.writeMem(0xe4f1, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x2d3e);
        EXPECT(gbc.pc(), 0xcdfa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcdf9), 0x70);
        EXPECT(gbc.readMem(0xe4f1), 0xd6);
        // 70 0063
        gbc.setState(0xb934, 0xdeea, 0x5a0, 0x4fce, 0x3244, 0xf380, 0x1, 0x0);
        gbc.writeMem(0xb934, { 0x70 });
        gbc.writeMem(0xf380, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0xdeea);
        EXPECT(gbc.pc(), 0xb935);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb934), 0x70);
        EXPECT(gbc.readMem(0xf380), 0x4f);
        // 70 0068
        gbc.setState(0x8f03, 0x6c69, 0xa300, 0xf1f8, 0xd8a2, 0xeb87, 0x1, 0x0);
        gbc.writeMem(0x8f03, { 0x70 });
        gbc.writeMem(0xeb87, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x6c69);
        EXPECT(gbc.pc(), 0x8f04);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8f03), 0x70);
        EXPECT(gbc.readMem(0xeb87), 0xf1);
        // 70 0069
        gbc.setState(0x4c0e, 0x6aed, 0x7960, 0x67a7, 0xcf5f, 0x813f, 0x1, 0x1);
        gbc.writeMem(0x4c0e, { 0x70 });
        gbc.writeMem(0x813f, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x6aed);
        EXPECT(gbc.pc(), 0x4c0f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x813f), 0x67);
        // 70 006A
        gbc.setState(0xcfa0, 0xba71, 0x7740, 0x96fa, 0xa8dc, 0xc1ad, 0x0, 0x0);
        gbc.writeMem(0xc1ad, { 0x0 });
        gbc.writeMem(0xcfa0, { 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0xba71);
        EXPECT(gbc.pc(), 0xcfa1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc1ad), 0x96);
        EXPECT(gbc.readMem(0xcfa0), 0x70);
        // 70 006B
        gbc.setState(0xa10f, 0xacaf, 0x2a40, 0x9914, 0xd0ee, 0xde9a, 0x1, 0x1);
        gbc.writeMem(0xa10f, { 0x70 });
        gbc.writeMem(0xde9a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0xacaf);
        EXPECT(gbc.pc(), 0xa110);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa10f), 0x70);
        EXPECT(gbc.readMem(0xde9a), 0x99);
        // 70 006F
        gbc.setState(0x8abd, 0x29ea, 0x6700, 0xea7a, 0x71ed, 0xa222, 0x0, 0x0);
        gbc.writeMem(0x8abd, { 0x70 });
        gbc.writeMem(0xa222, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x29ea);
        EXPECT(gbc.pc(), 0x8abe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8abd), 0x70);
        EXPECT(gbc.readMem(0xa222), 0xea);
        // 70 0073
        gbc.setState(0x9287, 0xa5bd, 0x7db0, 0x58c, 0x53a4, 0xbb8b, 0x0, 0x0);
        gbc.writeMem(0x9287, { 0x70 });
        gbc.writeMem(0xbb8b, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0xa5bd);
        EXPECT(gbc.pc(), 0x9288);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9287), 0x70);
        EXPECT(gbc.readMem(0xbb8b), 0x5);
        // 70 0075
        gbc.setState(0x3e3c, 0x178d, 0x1f10, 0x5ced, 0x688d, 0xc86a, 0x1, 0x0);
        gbc.writeMem(0x3e3c, { 0x70 });
        gbc.writeMem(0xc86a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x178d);
        EXPECT(gbc.pc(), 0x3e3d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc86a), 0x5c);
        // 70 0076
        gbc.setState(0x3103, 0x8b8a, 0xef10, 0x3f07, 0xdc56, 0xfb23, 0x0, 0x1);
        gbc.writeMem(0x3103, { 0x70 });
        gbc.writeMem(0xfb23, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x8b8a);
        EXPECT(gbc.pc(), 0x3104);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xfb23), 0x3f);
        // 70 0079
        gbc.setState(0xf46, 0x39f6, 0xe9b0, 0xbf97, 0x68e4, 0xd4f6, 0x1, 0x1);
        gbc.writeMem(0xf46, { 0x70 });
        gbc.writeMem(0xd4f6, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x39f6);
        EXPECT(gbc.pc(), 0xf47);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd4f6), 0xbf);
        // 70 007B
        gbc.setState(0x3f8c, 0x32ec, 0x9e90, 0x5ebc, 0xbd09, 0xe19d, 0x0, 0x1);
        gbc.writeMem(0x3f8c, { 0x70 });
        gbc.writeMem(0xe19d, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x32ec);
        EXPECT(gbc.pc(), 0x3f8d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe19d), 0x5e);
        // 70 007D
        gbc.setState(0x54a6, 0x50c7, 0x7a30, 0x514d, 0xcb1a, 0x8a8e, 0x0, 0x0);
        gbc.writeMem(0x54a6, { 0x70 });
        gbc.writeMem(0x8a8e, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x50c7);
        EXPECT(gbc.pc(), 0x54a7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8a8e), 0x51);
        // 70 0080
        gbc.setState(0xc5ec, 0x1838, 0xc740, 0xe962, 0x854a, 0x84c4, 0x1, 0x1);
        gbc.writeMem(0x84c4, { 0x0 });
        gbc.writeMem(0xc5ec, { 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x1838);
        EXPECT(gbc.pc(), 0xc5ed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x84c4), 0xe9);
        EXPECT(gbc.readMem(0xc5ec), 0x70);
        // 70 0082
        gbc.setState(0x4982, 0x7163, 0x79f0, 0xf5e8, 0x2a1e, 0xe2e6, 0x0, 0x0);
        gbc.writeMem(0x4982, { 0x70 });
        gbc.writeMem(0xe2e6, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x7163);
        EXPECT(gbc.pc(), 0x4983);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe2e6), 0xf5);
        // 70 0088
        gbc.setState(0xc693, 0x1093, 0x1c70, 0xec2f, 0xd4c2, 0xfd6f, 0x1, 0x0);
        gbc.writeMem(0xc693, { 0x70 });
        gbc.writeMem(0xfd6f, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x1093);
        EXPECT(gbc.pc(), 0xc694);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc693), 0x70);
        EXPECT(gbc.readMem(0xfd6f), 0xec);
        // 70 0089
        gbc.setState(0x2ce9, 0x89ba, 0x6e0, 0xdbd8, 0xc310, 0x935d, 0x1, 0x0);
        gbc.writeMem(0x2ce9, { 0x70 });
        gbc.writeMem(0x935d, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x89ba);
        EXPECT(gbc.pc(), 0x2cea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x935d), 0xdb);
        // 70 008B
        gbc.setState(0xbd3e, 0x1aff, 0xc2a0, 0x3b1a, 0x2be9, 0xecd8, 0x1, 0x1);
        gbc.writeMem(0xbd3e, { 0x70 });
        gbc.writeMem(0xecd8, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x1aff);
        EXPECT(gbc.pc(), 0xbd3f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbd3e), 0x70);
        EXPECT(gbc.readMem(0xecd8), 0x3b);
        // 70 008D
        gbc.setState(0xad76, 0x9a45, 0xbf20, 0x61e, 0x4f54, 0xe16f, 0x0, 0x1);
        gbc.writeMem(0xad76, { 0x70 });
        gbc.writeMem(0xe16f, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x9a45);
        EXPECT(gbc.pc(), 0xad77);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xad76), 0x70);
        EXPECT(gbc.readMem(0xe16f), 0x6);
        // 70 008E
        gbc.setState(0x11fd, 0xbf00, 0x7000, 0xc20d, 0x43d8, 0xb052, 0x0, 0x0);
        gbc.writeMem(0x11fd, { 0x70 });
        gbc.writeMem(0xb052, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0xbf00);
        EXPECT(gbc.pc(), 0x11fe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb052), 0xc2);
        // 70 008F
        gbc.setState(0xd678, 0x63b5, 0xa060, 0x9d8b, 0x5fa0, 0x9a94, 0x0, 0x1);
        gbc.writeMem(0x9a94, { 0x0 });
        gbc.writeMem(0xd678, { 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x63b5);
        EXPECT(gbc.pc(), 0xd679);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9a94), 0x9d);
        EXPECT(gbc.readMem(0xd678), 0x70);
        // 70 0090
        gbc.setState(0xc637, 0xc5a2, 0x3a40, 0x4528, 0xdaea, 0x8eca, 0x1, 0x1);
        gbc.writeMem(0x8eca, { 0x0 });
        gbc.writeMem(0xc637, { 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0xc5a2);
        EXPECT(gbc.pc(), 0xc638);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8eca), 0x45);
        EXPECT(gbc.readMem(0xc637), 0x70);
        // 70 0098
        gbc.setState(0xcbbe, 0xe5ba, 0x3930, 0x23eb, 0xff46, 0xcf94, 0x1, 0x0);
        gbc.writeMem(0xcbbe, { 0x70 });
        gbc.writeMem(0xcf94, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xe5ba);
        EXPECT(gbc.pc(), 0xcbbf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcbbe), 0x70);
        EXPECT(gbc.readMem(0xcf94), 0x23);
        // 70 009A
        gbc.setState(0xe964, 0x2c24, 0x5b50, 0x1f9, 0x99b4, 0xed17, 0x1, 0x0);
        gbc.writeMem(0xe964, { 0x70 });
        gbc.writeMem(0xed17, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x2c24);
        EXPECT(gbc.pc(), 0xe965);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe964), 0x70);
        EXPECT(gbc.readMem(0xed17), 0x1);
        // 70 009B
        gbc.setState(0x5333, 0x8a3e, 0x5750, 0xe512, 0xcf58, 0xb7dd, 0x0, 0x1);
        gbc.writeMem(0x5333, { 0x70 });
        gbc.writeMem(0xb7dd, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x8a3e);
        EXPECT(gbc.pc(), 0x5334);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb7dd), 0xe5);
        // 70 009E
        gbc.setState(0x7cbf, 0x1cf7, 0x8340, 0x6035, 0x4839, 0xad7c, 0x0, 0x1);
        gbc.writeMem(0x7cbf, { 0x70 });
        gbc.writeMem(0xad7c, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x1cf7);
        EXPECT(gbc.pc(), 0x7cc0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xad7c), 0x60);
        // 70 009F
        gbc.setState(0x17a4, 0x75d0, 0x5360, 0xc421, 0x7f3e, 0xa82a, 0x1, 0x0);
        gbc.writeMem(0x17a4, { 0x70 });
        gbc.writeMem(0xa82a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x75d0);
        EXPECT(gbc.pc(), 0x17a5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa82a), 0xc4);
        // 70 00A3
        gbc.setState(0xad28, 0xa681, 0xea90, 0x203c, 0x4dc4, 0xc416, 0x1, 0x1);
        gbc.writeMem(0xad28, { 0x70 });
        gbc.writeMem(0xc416, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xa681);
        EXPECT(gbc.pc(), 0xad29);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xad28), 0x70);
        EXPECT(gbc.readMem(0xc416), 0x20);
        // 70 00A5
        gbc.setState(0x88fb, 0x9e30, 0x67c0, 0x5950, 0x12c6, 0xa276, 0x1, 0x1);
        gbc.writeMem(0x88fb, { 0x70 });
        gbc.writeMem(0xa276, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x9e30);
        EXPECT(gbc.pc(), 0x88fc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x88fb), 0x70);
        EXPECT(gbc.readMem(0xa276), 0x59);
        // 70 00A9
        gbc.setState(0xe848, 0xce08, 0x22f0, 0x696e, 0x5d29, 0xa7ff, 0x0, 0x0);
        gbc.writeMem(0xa7ff, { 0x0 });
        gbc.writeMem(0xe848, { 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0xce08);
        EXPECT(gbc.pc(), 0xe849);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa7ff), 0x69);
        EXPECT(gbc.readMem(0xe848), 0x70);
        // 70 00AD
        gbc.setState(0xbd74, 0xfdb3, 0x8fa0, 0xe41c, 0xb40d, 0xbe44, 0x0, 0x0);
        gbc.writeMem(0xbd74, { 0x70 });
        gbc.writeMem(0xbe44, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xfdb3);
        EXPECT(gbc.pc(), 0xbd75);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbd74), 0x70);
        EXPECT(gbc.readMem(0xbe44), 0xe4);
        // 70 00AE
        gbc.setState(0xcda9, 0x22d1, 0x8a20, 0x340a, 0xe372, 0x8ce8, 0x1, 0x0);
        gbc.writeMem(0x8ce8, { 0x0 });
        gbc.writeMem(0xcda9, { 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x22d1);
        EXPECT(gbc.pc(), 0xcdaa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ce8), 0x34);
        EXPECT(gbc.readMem(0xcda9), 0x70);
        // 70 00B3
        gbc.setState(0xef5a, 0xb9e4, 0xc7b0, 0xc0bf, 0x8668, 0xd6e2, 0x0, 0x0);
        gbc.writeMem(0xd6e2, { 0x0 });
        gbc.writeMem(0xef5a, { 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0xb9e4);
        EXPECT(gbc.pc(), 0xef5b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd6e2), 0xc0);
        EXPECT(gbc.readMem(0xef5a), 0x70);
        // 70 00B4
        gbc.setState(0x2200, 0xf47c, 0x5990, 0x85, 0x5028, 0x2cc, 0x1, 0x0);
        gbc.writeMem(0x2cc, { 0x0 });
        gbc.writeMem(0x2200, { 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0xf47c);
        EXPECT(gbc.pc(), 0x2201);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 70 00B5
        gbc.setState(0x8e74, 0xf4f6, 0x9e50, 0x8304, 0xe71d, 0xbd98, 0x1, 0x0);
        gbc.writeMem(0x8e74, { 0x70 });
        gbc.writeMem(0xbd98, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xf4f6);
        EXPECT(gbc.pc(), 0x8e75);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8e74), 0x70);
        EXPECT(gbc.readMem(0xbd98), 0x83);
        // 70 00B6
        gbc.setState(0x7701, 0xdb99, 0xec90, 0x4744, 0xcde6, 0x9e26, 0x1, 0x1);
        gbc.writeMem(0x7701, { 0x70 });
        gbc.writeMem(0x9e26, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0xdb99);
        EXPECT(gbc.pc(), 0x7702);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9e26), 0x47);
        // 70 00B7
        gbc.setState(0x2bba, 0x6ae9, 0xe5e0, 0xa995, 0x967a, 0xc3fb, 0x1, 0x1);
        gbc.writeMem(0x2bba, { 0x70 });
        gbc.writeMem(0xc3fb, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x6ae9);
        EXPECT(gbc.pc(), 0x2bbb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc3fb), 0xa9);
        // 70 00B9
        gbc.setState(0xee01, 0x6248, 0x2710, 0xf400, 0xac7, 0xe41a, 0x1, 0x0);
        gbc.writeMem(0xe41a, { 0x0 });
        gbc.writeMem(0xee01, { 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x6248);
        EXPECT(gbc.pc(), 0xee02);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe41a), 0xf4);
        EXPECT(gbc.readMem(0xee01), 0x70);
        // 70 00BB
        gbc.setState(0x2839, 0x928e, 0x7ec0, 0xd0de, 0x1715, 0xd7d9, 0x0, 0x1);
        gbc.writeMem(0x2839, { 0x70 });
        gbc.writeMem(0xd7d9, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x928e);
        EXPECT(gbc.pc(), 0x283a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd7d9), 0xd0);
        // 70 00C1
        gbc.setState(0xa0e7, 0xe922, 0x35a0, 0x2553, 0x7037, 0xc89a, 0x0, 0x0);
        gbc.writeMem(0xa0e7, { 0x70 });
        gbc.writeMem(0xc89a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0xe922);
        EXPECT(gbc.pc(), 0xa0e8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa0e7), 0x70);
        EXPECT(gbc.readMem(0xc89a), 0x25);
        // 70 00C3
        gbc.setState(0x2cf7, 0xd906, 0xc80, 0xf499, 0x91a1, 0x9a5b, 0x0, 0x1);
        gbc.writeMem(0x2cf7, { 0x70 });
        gbc.writeMem(0x9a5b, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0xd906);
        EXPECT(gbc.pc(), 0x2cf8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9a5b), 0xf4);
        // 70 00C8
        gbc.setState(0x43c7, 0xc5b8, 0xf250, 0x9861, 0x6bc1, 0xaac9, 0x1, 0x0);
        gbc.writeMem(0x43c7, { 0x70 });
        gbc.writeMem(0xaac9, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0xc5b8);
        EXPECT(gbc.pc(), 0x43c8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaac9), 0x98);
        // 70 00CC
        gbc.setState(0xde68, 0x82d7, 0x9470, 0x28d5, 0x7327, 0xbe77, 0x0, 0x0);
        gbc.writeMem(0xbe77, { 0x0 });
        gbc.writeMem(0xde68, { 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x82d7);
        EXPECT(gbc.pc(), 0xde69);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbe77), 0x28);
        EXPECT(gbc.readMem(0xde68), 0x70);
        // 70 00CD
        gbc.setState(0x54d1, 0x265f, 0x9820, 0xff56, 0xd623, 0xf98e, 0x1, 0x0);
        gbc.writeMem(0x54d1, { 0x70 });
        gbc.writeMem(0xf98e, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x265f);
        EXPECT(gbc.pc(), 0x54d2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf98e), 0xff);
        // 70 00CF
        gbc.setState(0x4be1, 0x2eea, 0xad90, 0xca6e, 0x5fcd, 0xe3c8, 0x0, 0x0);
        gbc.writeMem(0x4be1, { 0x70 });
        gbc.writeMem(0xe3c8, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x2eea);
        EXPECT(gbc.pc(), 0x4be2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe3c8), 0xca);
        // 70 00D0
        gbc.setState(0x7021, 0x1475, 0x560, 0x4991, 0xa6, 0x81a5, 0x1, 0x0);
        gbc.writeMem(0x7021, { 0x70 });
        gbc.writeMem(0x81a5, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x1475);
        EXPECT(gbc.pc(), 0x7022);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x81a5), 0x49);
        // 70 00D3
        gbc.setState(0xce51, 0xa77f, 0xa1c0, 0xf4cf, 0xd942, 0x9843, 0x1, 0x1);
        gbc.writeMem(0x9843, { 0x0 });
        gbc.writeMem(0xce51, { 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xa77f);
        EXPECT(gbc.pc(), 0xce52);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9843), 0xf4);
        EXPECT(gbc.readMem(0xce51), 0x70);
        // 70 00D4
        gbc.setState(0xea09, 0xe0cc, 0x9660, 0x2753, 0x4218, 0x88b4, 0x1, 0x1);
        gbc.writeMem(0x88b4, { 0x0 });
        gbc.writeMem(0xea09, { 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xe0cc);
        EXPECT(gbc.pc(), 0xea0a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x88b4), 0x27);
        EXPECT(gbc.readMem(0xea09), 0x70);
        // 70 00D5
        gbc.setState(0x3599, 0x5bd2, 0x4800, 0x8a6b, 0x65cc, 0x8ac8, 0x1, 0x0);
        gbc.writeMem(0x3599, { 0x70 });
        gbc.writeMem(0x8ac8, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x5bd2);
        EXPECT(gbc.pc(), 0x359a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ac8), 0x8a);
        // 70 00D6
        gbc.setState(0x9d01, 0x4a44, 0x3340, 0x91d5, 0x3440, 0x9b40, 0x1, 0x0);
        gbc.writeMem(0x9b40, { 0x0 });
        gbc.writeMem(0x9d01, { 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x4a44);
        EXPECT(gbc.pc(), 0x9d02);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9b40), 0x91);
        EXPECT(gbc.readMem(0x9d01), 0x70);
        // 70 00DA
        gbc.setState(0x795c, 0x10e, 0x40d0, 0xe921, 0xd8d, 0xcd4d, 0x1, 0x1);
        gbc.writeMem(0x795c, { 0x70 });
        gbc.writeMem(0xcd4d, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x10e);
        EXPECT(gbc.pc(), 0x795d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcd4d), 0xe9);
        // 70 00DB
        gbc.setState(0x7aff, 0xf3ad, 0xb570, 0x66d0, 0x9038, 0xe874, 0x1, 0x0);
        gbc.writeMem(0x7aff, { 0x70 });
        gbc.writeMem(0xe874, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xf3ad);
        EXPECT(gbc.pc(), 0x7b00);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe874), 0x66);
        // 70 00DF
        gbc.setState(0x8f2c, 0x3cc1, 0x32a0, 0x91d3, 0xe824, 0xfb80, 0x0, 0x0);
        gbc.writeMem(0x8f2c, { 0x70 });
        gbc.writeMem(0xfb80, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x3cc1);
        EXPECT(gbc.pc(), 0x8f2d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8f2c), 0x70);
        EXPECT(gbc.readMem(0xfb80), 0x91);
        // 70 00E1
        gbc.setState(0x7989, 0xbc14, 0x5260, 0xfc03, 0xc109, 0xef2e, 0x1, 0x1);
        gbc.writeMem(0x7989, { 0x70 });
        gbc.writeMem(0xef2e, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xbc14);
        EXPECT(gbc.pc(), 0x798a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xef2e), 0xfc);
        // 70 00E3
        gbc.setState(0x7fab, 0x218b, 0xb870, 0xc198, 0xfd68, 0xc477, 0x1, 0x1);
        gbc.writeMem(0x7fab, { 0x70 });
        gbc.writeMem(0xc477, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x218b);
        EXPECT(gbc.pc(), 0x7fac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc477), 0xc1);
        // 70 00E8
        gbc.setState(0x9b0e, 0xb34f, 0xeac0, 0x209d, 0xb1e, 0xb79c, 0x1, 0x0);
        gbc.writeMem(0x9b0e, { 0x70 });
        gbc.writeMem(0xb79c, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0xb34f);
        EXPECT(gbc.pc(), 0x9b0f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9b0e), 0x70);
        EXPECT(gbc.readMem(0xb79c), 0x20);
        // 70 00EB
        gbc.setState(0x36d4, 0x8d57, 0xc170, 0x871, 0x6a59, 0xdf59, 0x0, 0x1);
        gbc.writeMem(0x36d4, { 0x70 });
        gbc.writeMem(0xdf59, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x8d57);
        EXPECT(gbc.pc(), 0x36d5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdf59), 0x8);
        // 70 00EC
        gbc.setState(0xad63, 0x5b29, 0x3aa0, 0xe8b6, 0x6944, 0x8d92, 0x1, 0x1);
        gbc.writeMem(0x8d92, { 0x0 });
        gbc.writeMem(0xad63, { 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x5b29);
        EXPECT(gbc.pc(), 0xad64);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d92), 0xe8);
        EXPECT(gbc.readMem(0xad63), 0x70);
        // 70 00ED
        gbc.setState(0xce2f, 0xdeb6, 0xa820, 0x21e0, 0xcb2e, 0xbc34, 0x0, 0x1);
        gbc.writeMem(0xbc34, { 0x0 });
        gbc.writeMem(0xce2f, { 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xdeb6);
        EXPECT(gbc.pc(), 0xce30);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbc34), 0x21);
        EXPECT(gbc.readMem(0xce2f), 0x70);
        // 70 00EE
        gbc.setState(0x2da4, 0x6ac6, 0xf2b0, 0xec29, 0x2f4, 0xbc82, 0x1, 0x0);
        gbc.writeMem(0x2da4, { 0x70 });
        gbc.writeMem(0xbc82, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x6ac6);
        EXPECT(gbc.pc(), 0x2da5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbc82), 0xec);
        // 70 00F2
        gbc.setState(0xd6d3, 0x314f, 0xdcc0, 0xd6f1, 0x2421, 0xa0d4, 0x1, 0x1);
        gbc.writeMem(0xa0d4, { 0x0 });
        gbc.writeMem(0xd6d3, { 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x314f);
        EXPECT(gbc.pc(), 0xd6d4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa0d4), 0xd6);
        EXPECT(gbc.readMem(0xd6d3), 0x70);
        // 70 00F3
        gbc.setState(0x96ef, 0xb01d, 0x60c0, 0x781f, 0xf9a0, 0xa28a, 0x0, 0x1);
        gbc.writeMem(0x96ef, { 0x70 });
        gbc.writeMem(0xa28a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xb01d);
        EXPECT(gbc.pc(), 0x96f0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x96ef), 0x70);
        EXPECT(gbc.readMem(0xa28a), 0x78);
        // 70 00FE
        gbc.setState(0x7053, 0x89b8, 0x3910, 0xd519, 0x9197, 0xf4ab, 0x1, 0x1);
        gbc.writeMem(0x7053, { 0x70 });
        gbc.writeMem(0xf4ab, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x89b8);
        EXPECT(gbc.pc(), 0x7054);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf4ab), 0xd5);
        // 70 0101
        gbc.setState(0xa149, 0xb289, 0x6e50, 0x7053, 0xc907, 0x8de3, 0x0, 0x0);
        gbc.writeMem(0x8de3, { 0x0 });
        gbc.writeMem(0xa149, { 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xb289);
        EXPECT(gbc.pc(), 0xa14a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8de3), 0x70);
        EXPECT(gbc.readMem(0xa149), 0x70);
        // 70 0102
        gbc.setState(0x7bff, 0x3195, 0xdee0, 0x185c, 0xd31f, 0x975f, 0x0, 0x1);
        gbc.writeMem(0x7bff, { 0x70 });
        gbc.writeMem(0x975f, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x3195);
        EXPECT(gbc.pc(), 0x7c00);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x975f), 0x18);
        // 70 0105
        gbc.setState(0x96f2, 0xf378, 0x8200, 0xb323, 0xb26e, 0xd962, 0x0, 0x0);
        gbc.writeMem(0x96f2, { 0x70 });
        gbc.writeMem(0xd962, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xf378);
        EXPECT(gbc.pc(), 0x96f3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x96f2), 0x70);
        EXPECT(gbc.readMem(0xd962), 0xb3);
        // 70 0109
        gbc.setState(0xc80b, 0x63cf, 0xd170, 0xe1b9, 0xb439, 0xfb29, 0x0, 0x0);
        gbc.writeMem(0xc80b, { 0x70 });
        gbc.writeMem(0xfb29, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x63cf);
        EXPECT(gbc.pc(), 0xc80c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc80b), 0x70);
        EXPECT(gbc.readMem(0xfb29), 0xe1);
        // 70 010A
        gbc.setState(0x44c0, 0x4109, 0xdb00, 0xca7d, 0x192b, 0xb4f7, 0x0, 0x1);
        gbc.writeMem(0x44c0, { 0x70 });
        gbc.writeMem(0xb4f7, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x4109);
        EXPECT(gbc.pc(), 0x44c1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb4f7), 0xca);
        // 70 010B
        gbc.setState(0xa29, 0xc4af, 0x2810, 0x8fba, 0xdf86, 0xfdc8, 0x0, 0x1);
        gbc.writeMem(0xa29, { 0x70 });
        gbc.writeMem(0xfdc8, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0xc4af);
        EXPECT(gbc.pc(), 0xa2a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xfdc8), 0x8f);
        // 70 010C
        gbc.setState(0x71df, 0x6c22, 0x51e0, 0x5b83, 0xbe97, 0xe64f, 0x0, 0x1);
        gbc.writeMem(0x71df, { 0x70 });
        gbc.writeMem(0xe64f, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x6c22);
        EXPECT(gbc.pc(), 0x71e0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe64f), 0x5b);
        // 70 010D
        gbc.setState(0x8974, 0xc9ae, 0xc670, 0x71ea, 0x6b12, 0x9566, 0x0, 0x1);
        gbc.writeMem(0x8974, { 0x70 });
        gbc.writeMem(0x9566, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0xc9ae);
        EXPECT(gbc.pc(), 0x8975);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8974), 0x70);
        EXPECT(gbc.readMem(0x9566), 0x71);
        // 70 010E
        gbc.setState(0x9081, 0x267e, 0xe3c0, 0x34eb, 0x4d59, 0xda8a, 0x1, 0x1);
        gbc.writeMem(0x9081, { 0x70 });
        gbc.writeMem(0xda8a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x267e);
        EXPECT(gbc.pc(), 0x9082);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9081), 0x70);
        EXPECT(gbc.readMem(0xda8a), 0x34);
        // 70 0112
        gbc.setState(0x7f67, 0x7130, 0xa840, 0xa537, 0x4bf4, 0xb68f, 0x1, 0x0);
        gbc.writeMem(0x7f67, { 0x70 });
        gbc.writeMem(0xb68f, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x7130);
        EXPECT(gbc.pc(), 0x7f68);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb68f), 0xa5);
        // 70 0114
        gbc.setState(0xabec, 0xfb86, 0x7540, 0xf6de, 0xc21b, 0xb3c4, 0x0, 0x0);
        gbc.writeMem(0xabec, { 0x70 });
        gbc.writeMem(0xb3c4, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0xfb86);
        EXPECT(gbc.pc(), 0xabed);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xabec), 0x70);
        EXPECT(gbc.readMem(0xb3c4), 0xf6);
        // 70 0117
        gbc.setState(0xbe36, 0x541e, 0x9710, 0x7f8c, 0x21cf, 0x861d, 0x1, 0x0);
        gbc.writeMem(0x861d, { 0x0 });
        gbc.writeMem(0xbe36, { 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x541e);
        EXPECT(gbc.pc(), 0xbe37);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x861d), 0x7f);
        EXPECT(gbc.readMem(0xbe36), 0x70);
        // 70 011B
        gbc.setState(0xaf14, 0xd2c, 0x70, 0x2fe4, 0xeaff, 0x9944, 0x1, 0x1);
        gbc.writeMem(0x9944, { 0x0 });
        gbc.writeMem(0xaf14, { 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xd2c);
        EXPECT(gbc.pc(), 0xaf15);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9944), 0x2f);
        EXPECT(gbc.readMem(0xaf14), 0x70);
        // 70 011E
        gbc.setState(0xc617, 0x7052, 0xbe0, 0x535d, 0x934a, 0xbce9, 0x0, 0x1);
        gbc.writeMem(0xbce9, { 0x0 });
        gbc.writeMem(0xc617, { 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x7052);
        EXPECT(gbc.pc(), 0xc618);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbce9), 0x53);
        EXPECT(gbc.readMem(0xc617), 0x70);
        // 70 011F
        gbc.setState(0xa1a8, 0x27ea, 0xc200, 0x807b, 0x98a2, 0xb856, 0x1, 0x0);
        gbc.writeMem(0xa1a8, { 0x70 });
        gbc.writeMem(0xb856, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x27ea);
        EXPECT(gbc.pc(), 0xa1a9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa1a8), 0x70);
        EXPECT(gbc.readMem(0xb856), 0x80);
        // 70 0121
        gbc.setState(0xc526, 0x1b98, 0x8130, 0x1fd6, 0xe12d, 0xcd6c, 0x0, 0x0);
        gbc.writeMem(0xc526, { 0x70 });
        gbc.writeMem(0xcd6c, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x1b98);
        EXPECT(gbc.pc(), 0xc527);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc526), 0x70);
        EXPECT(gbc.readMem(0xcd6c), 0x1f);
        // 70 0125
        gbc.setState(0x9545, 0x2c5b, 0x9840, 0x11e8, 0x7965, 0x9b62, 0x1, 0x0);
        gbc.writeMem(0x9545, { 0x70 });
        gbc.writeMem(0x9b62, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x2c5b);
        EXPECT(gbc.pc(), 0x9546);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9545), 0x70);
        EXPECT(gbc.readMem(0x9b62), 0x11);
        // 70 0127
        gbc.setState(0xd178, 0x1817, 0x280, 0xa5ba, 0xc488, 0xcf9a, 0x0, 0x1);
        gbc.writeMem(0xcf9a, { 0x0 });
        gbc.writeMem(0xd178, { 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x1817);
        EXPECT(gbc.pc(), 0xd179);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcf9a), 0xa5);
        EXPECT(gbc.readMem(0xd178), 0x70);
        // 70 012A
        gbc.setState(0x6bbd, 0xb5c3, 0x4b40, 0x91d1, 0x8c66, 0x93db, 0x0, 0x1);
        gbc.writeMem(0x6bbd, { 0x70 });
        gbc.writeMem(0x93db, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0xb5c3);
        EXPECT(gbc.pc(), 0x6bbe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x93db), 0x91);
        // 70 012B
        gbc.setState(0x745b, 0x3d50, 0x250, 0x67b1, 0x4d5a, 0x93c4, 0x0, 0x0);
        gbc.writeMem(0x745b, { 0x70 });
        gbc.writeMem(0x93c4, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x3d50);
        EXPECT(gbc.pc(), 0x745c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x93c4), 0x67);
        // 70 012F
        gbc.setState(0x76f9, 0xce7c, 0x6a10, 0xe39f, 0xeaed, 0x8f2e, 0x0, 0x0);
        gbc.writeMem(0x76f9, { 0x70 });
        gbc.writeMem(0x8f2e, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xce7c);
        EXPECT(gbc.pc(), 0x76fa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8f2e), 0xe3);
        // 70 0130
        gbc.setState(0xdfda, 0x5d1a, 0x42e0, 0x61f0, 0xa3cf, 0x85e9, 0x0, 0x0);
        gbc.writeMem(0x85e9, { 0x0 });
        gbc.writeMem(0xdfda, { 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x5d1a);
        EXPECT(gbc.pc(), 0xdfdb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x85e9), 0x61);
        EXPECT(gbc.readMem(0xdfda), 0x70);
        // 70 0133
        gbc.setState(0xd6ff, 0x56a8, 0x9f70, 0xd226, 0x555e, 0x876d, 0x1, 0x1);
        gbc.writeMem(0x876d, { 0x0 });
        gbc.writeMem(0xd6ff, { 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x56a8);
        EXPECT(gbc.pc(), 0xd700);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x876d), 0xd2);
        EXPECT(gbc.readMem(0xd6ff), 0x70);
        // 70 0134
        gbc.setState(0x631, 0xd142, 0xe320, 0xab8d, 0xbbe0, 0xdbd4, 0x1, 0x0);
        gbc.writeMem(0x631, { 0x70 });
        gbc.writeMem(0xdbd4, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xd142);
        EXPECT(gbc.pc(), 0x632);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdbd4), 0xab);
        // 70 0138
        gbc.setState(0xed61, 0x2898, 0x7f60, 0xfad, 0x5572, 0x9788, 0x1, 0x0);
        gbc.writeMem(0x9788, { 0x0 });
        gbc.writeMem(0xed61, { 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x2898);
        EXPECT(gbc.pc(), 0xed62);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9788), 0xf);
        EXPECT(gbc.readMem(0xed61), 0x70);
        // 70 013B
        gbc.setState(0x76fd, 0xab90, 0x6590, 0x473, 0x91b2, 0xb79b, 0x1, 0x0);
        gbc.writeMem(0x76fd, { 0x70 });
        gbc.writeMem(0xb79b, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0xab90);
        EXPECT(gbc.pc(), 0x76fe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb79b), 0x4);
        // 70 013D
        gbc.setState(0x219f, 0xb3fc, 0xf960, 0x4681, 0xaf11, 0x9bed, 0x0, 0x0);
        gbc.writeMem(0x219f, { 0x70 });
        gbc.writeMem(0x9bed, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0xb3fc);
        EXPECT(gbc.pc(), 0x21a0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9bed), 0x46);
        // 70 0141
        gbc.setState(0x5b0a, 0xf3ac, 0x55d0, 0xce17, 0x4b09, 0xbec4, 0x0, 0x1);
        gbc.writeMem(0x5b0a, { 0x70 });
        gbc.writeMem(0xbec4, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0xf3ac);
        EXPECT(gbc.pc(), 0x5b0b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbec4), 0xce);
        // 70 0142
        gbc.setState(0x9b51, 0x9d61, 0x8780, 0xba78, 0xadd7, 0xdc7c, 0x1, 0x1);
        gbc.writeMem(0x9b51, { 0x70 });
        gbc.writeMem(0xdc7c, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x9d61);
        EXPECT(gbc.pc(), 0x9b52);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9b51), 0x70);
        EXPECT(gbc.readMem(0xdc7c), 0xba);
        // 70 0144
        gbc.setState(0xec7e, 0xeb63, 0xa490, 0x385d, 0x620c, 0xe6fa, 0x0, 0x1);
        gbc.writeMem(0xe6fa, { 0x0 });
        gbc.writeMem(0xec7e, { 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xeb63);
        EXPECT(gbc.pc(), 0xec7f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe6fa), 0x38);
        EXPECT(gbc.readMem(0xec7e), 0x70);
        // 70 0145
        gbc.setState(0x157b, 0x3cf3, 0x2df0, 0x3579, 0x2cad, 0xc825, 0x0, 0x1);
        gbc.writeMem(0x157b, { 0x70 });
        gbc.writeMem(0xc825, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x3cf3);
        EXPECT(gbc.pc(), 0x157c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc825), 0x35);
        // 70 0149
        gbc.setState(0x8c3b, 0xe7cb, 0x9b90, 0xca1c, 0x442b, 0xcc37, 0x0, 0x0);
        gbc.writeMem(0x8c3b, { 0x70 });
        gbc.writeMem(0xcc37, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0xe7cb);
        EXPECT(gbc.pc(), 0x8c3c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8c3b), 0x70);
        EXPECT(gbc.readMem(0xcc37), 0xca);
        // 70 014E
        gbc.setState(0xcf1e, 0xbe64, 0xee20, 0x2ab8, 0xde90, 0xf783, 0x1, 0x1);
        gbc.writeMem(0xcf1e, { 0x70 });
        gbc.writeMem(0xf783, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0xbe64);
        EXPECT(gbc.pc(), 0xcf1f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcf1e), 0x70);
        EXPECT(gbc.readMem(0xf783), 0x2a);
        // 70 014F
        gbc.setState(0xd516, 0xb303, 0x7820, 0x2d0b, 0x1823, 0x8c5b, 0x1, 0x1);
        gbc.writeMem(0x8c5b, { 0x0 });
        gbc.writeMem(0xd516, { 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0xb303);
        EXPECT(gbc.pc(), 0xd517);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c5b), 0x2d);
        EXPECT(gbc.readMem(0xd516), 0x70);
        // 70 0151
        gbc.setState(0x500d, 0xaaf4, 0x33f0, 0xfb8a, 0xf272, 0x8605, 0x0, 0x0);
        gbc.writeMem(0x500d, { 0x70 });
        gbc.writeMem(0x8605, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0xaaf4);
        EXPECT(gbc.pc(), 0x500e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8605), 0xfb);
        // 70 0153
        gbc.setState(0x273f, 0x90b0, 0x2570, 0x9c92, 0x65f5, 0xe56b, 0x1, 0x0);
        gbc.writeMem(0x273f, { 0x70 });
        gbc.writeMem(0xe56b, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x90b0);
        EXPECT(gbc.pc(), 0x2740);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe56b), 0x9c);
        // 70 0154
        gbc.setState(0xd3a0, 0x6a7e, 0x9330, 0x5df7, 0xbbae, 0xbfc7, 0x1, 0x1);
        gbc.writeMem(0xbfc7, { 0x0 });
        gbc.writeMem(0xd3a0, { 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x6a7e);
        EXPECT(gbc.pc(), 0xd3a1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbfc7), 0x5d);
        EXPECT(gbc.readMem(0xd3a0), 0x70);
        // 70 0156
        gbc.setState(0xe69c, 0x5d20, 0xe310, 0x223e, 0xca74, 0x8a78, 0x0, 0x1);
        gbc.writeMem(0x8a78, { 0x0 });
        gbc.writeMem(0xe69c, { 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x5d20);
        EXPECT(gbc.pc(), 0xe69d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8a78), 0x22);
        EXPECT(gbc.readMem(0xe69c), 0x70);
        // 70 0157
        gbc.setState(0xd0b4, 0xc033, 0x78a0, 0xab0b, 0x3f6, 0xb62b, 0x1, 0x1);
        gbc.writeMem(0xb62b, { 0x0 });
        gbc.writeMem(0xd0b4, { 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0xc033);
        EXPECT(gbc.pc(), 0xd0b5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb62b), 0xab);
        EXPECT(gbc.readMem(0xd0b4), 0x70);
        // 70 0159
        gbc.setState(0xe8a8, 0x4563, 0xa9c0, 0x158d, 0x4625, 0xad8d, 0x1, 0x1);
        gbc.writeMem(0xad8d, { 0x0 });
        gbc.writeMem(0xe8a8, { 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x4563);
        EXPECT(gbc.pc(), 0xe8a9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xad8d), 0x15);
        EXPECT(gbc.readMem(0xe8a8), 0x70);
        // 70 015A
        gbc.setState(0x6eaf, 0xccee, 0x72c0, 0x5e3c, 0xaf18, 0xc817, 0x1, 0x0);
        gbc.writeMem(0x6eaf, { 0x70 });
        gbc.writeMem(0xc817, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0xccee);
        EXPECT(gbc.pc(), 0x6eb0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc817), 0x5e);
        // 70 015C
        gbc.setState(0x6c9f, 0xf81c, 0x9d10, 0x14e9, 0xeb29, 0x8601, 0x1, 0x1);
        gbc.writeMem(0x6c9f, { 0x70 });
        gbc.writeMem(0x8601, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0xf81c);
        EXPECT(gbc.pc(), 0x6ca0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8601), 0x14);
        // 70 0161
        gbc.setState(0x6b13, 0x5378, 0xf030, 0x1acb, 0x6fc1, 0xf215, 0x1, 0x1);
        gbc.writeMem(0x6b13, { 0x70 });
        gbc.writeMem(0xf215, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x5378);
        EXPECT(gbc.pc(), 0x6b14);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf215), 0x1a);
        // 70 0165
        gbc.setState(0x4fb8, 0x2d28, 0x45c0, 0x8194, 0x230, 0x92c1, 0x1, 0x1);
        gbc.writeMem(0x4fb8, { 0x70 });
        gbc.writeMem(0x92c1, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x2d28);
        EXPECT(gbc.pc(), 0x4fb9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x92c1), 0x81);
        // 70 0167
        gbc.setState(0xc47b, 0xe50a, 0xf2b0, 0x3b35, 0xee69, 0xd312, 0x0, 0x0);
        gbc.writeMem(0xc47b, { 0x70 });
        gbc.writeMem(0xd312, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0xe50a);
        EXPECT(gbc.pc(), 0xc47c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc47b), 0x70);
        EXPECT(gbc.readMem(0xd312), 0x3b);
        // 70 0168
        gbc.setState(0x68c9, 0x7462, 0x6490, 0x7b69, 0x5b0f, 0xf49d, 0x0, 0x1);
        gbc.writeMem(0x68c9, { 0x70 });
        gbc.writeMem(0xf49d, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x7462);
        EXPECT(gbc.pc(), 0x68ca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf49d), 0x7b);
        // 70 016A
        gbc.setState(0x4bf3, 0x9678, 0xba70, 0xa53a, 0x13f0, 0xedd0, 0x1, 0x0);
        gbc.writeMem(0x4bf3, { 0x70 });
        gbc.writeMem(0xedd0, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x9678);
        EXPECT(gbc.pc(), 0x4bf4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xedd0), 0xa5);
        // 70 016B
        gbc.setState(0xb962, 0x6d11, 0x5ad0, 0x17a9, 0x2939, 0xaa8f, 0x0, 0x0);
        gbc.writeMem(0xaa8f, { 0x0 });
        gbc.writeMem(0xb962, { 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x6d11);
        EXPECT(gbc.pc(), 0xb963);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaa8f), 0x17);
        EXPECT(gbc.readMem(0xb962), 0x70);
        // 70 016C
        gbc.setState(0x23b7, 0xbe62, 0x5400, 0x6317, 0xca0, 0xd2f4, 0x0, 0x1);
        gbc.writeMem(0x23b7, { 0x70 });
        gbc.writeMem(0xd2f4, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0xbe62);
        EXPECT(gbc.pc(), 0x23b8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd2f4), 0x63);
        // 70 016E
        gbc.setState(0xe78f, 0xd11a, 0xd380, 0x67b9, 0x9f3b, 0xbe95, 0x1, 0x1);
        gbc.writeMem(0xbe95, { 0x0 });
        gbc.writeMem(0xe78f, { 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0xd11a);
        EXPECT(gbc.pc(), 0xe790);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbe95), 0x67);
        EXPECT(gbc.readMem(0xe78f), 0x70);
        // 70 0170
        gbc.setState(0xb546, 0xab8f, 0xef70, 0x348d, 0x588b, 0xe554, 0x0, 0x0);
        gbc.writeMem(0xb546, { 0x70 });
        gbc.writeMem(0xe554, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0xab8f);
        EXPECT(gbc.pc(), 0xb547);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb546), 0x70);
        EXPECT(gbc.readMem(0xe554), 0x34);
        // 70 0172
        gbc.setState(0xed21, 0xe9de, 0x4740, 0x44b6, 0xfcc, 0xfd59, 0x0, 0x0);
        gbc.writeMem(0xed21, { 0x70 });
        gbc.writeMem(0xfd59, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0xe9de);
        EXPECT(gbc.pc(), 0xed22);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xed21), 0x70);
        EXPECT(gbc.readMem(0xfd59), 0x44);
        // 70 0175
        gbc.setState(0xad, 0xb438, 0x7720, 0xf1f4, 0xa363, 0xb3b0, 0x0, 0x1);
        gbc.writeMem(0xad, { 0x70 });
        gbc.writeMem(0xb3b0, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xb438);
        EXPECT(gbc.pc(), 0xae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb3b0), 0xf1);
        // 70 0177
        gbc.setState(0x44c4, 0xc209, 0xcd00, 0x5866, 0xe2ed, 0xabc1, 0x1, 0x1);
        gbc.writeMem(0x44c4, { 0x70 });
        gbc.writeMem(0xabc1, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0xc209);
        EXPECT(gbc.pc(), 0x44c5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xabc1), 0x58);
        // 70 017A
        gbc.setState(0xd10e, 0xce83, 0xb3f0, 0xb807, 0x74ea, 0xb0c4, 0x0, 0x1);
        gbc.writeMem(0xb0c4, { 0x0 });
        gbc.writeMem(0xd10e, { 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0xce83);
        EXPECT(gbc.pc(), 0xd10f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb0c4), 0xb8);
        EXPECT(gbc.readMem(0xd10e), 0x70);
        // 70 017B
        gbc.setState(0x1f68, 0x1e15, 0x1bd0, 0xaf5e, 0x1593, 0x935c, 0x1, 0x0);
        gbc.writeMem(0x1f68, { 0x70 });
        gbc.writeMem(0x935c, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x1e15);
        EXPECT(gbc.pc(), 0x1f69);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x935c), 0xaf);
        // 70 017D
        gbc.setState(0x10f6, 0x1028, 0x5560, 0x4a74, 0xbfc2, 0xea04, 0x1, 0x1);
        gbc.writeMem(0x10f6, { 0x70 });
        gbc.writeMem(0xea04, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x1028);
        EXPECT(gbc.pc(), 0x10f7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xea04), 0x4a);
        // 70 017F
        gbc.setState(0x8aef, 0x5845, 0xcb90, 0xc72, 0xd489, 0xfc52, 0x1, 0x1);
        gbc.writeMem(0x8aef, { 0x70 });
        gbc.writeMem(0xfc52, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x5845);
        EXPECT(gbc.pc(), 0x8af0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8aef), 0x70);
        EXPECT(gbc.readMem(0xfc52), 0xc);
        // 70 0180
        gbc.setState(0x9c27, 0x1e51, 0xf200, 0xa302, 0xca71, 0xa059, 0x0, 0x1);
        gbc.writeMem(0x9c27, { 0x70 });
        gbc.writeMem(0xa059, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x1e51);
        EXPECT(gbc.pc(), 0x9c28);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9c27), 0x70);
        EXPECT(gbc.readMem(0xa059), 0xa3);
        // 70 0182
        gbc.setState(0x51b, 0x9fe3, 0xa9d0, 0x5e96, 0x71c8, 0x9e54, 0x0, 0x1);
        gbc.writeMem(0x51b, { 0x70 });
        gbc.writeMem(0x9e54, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x9fe3);
        EXPECT(gbc.pc(), 0x51c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9e54), 0x5e);
        // 70 0183
        gbc.setState(0xe60e, 0x6923, 0xc5d0, 0x7cac, 0x9d99, 0x8a94, 0x0, 0x1);
        gbc.writeMem(0x8a94, { 0x0 });
        gbc.writeMem(0xe60e, { 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x6923);
        EXPECT(gbc.pc(), 0xe60f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8a94), 0x7c);
        EXPECT(gbc.readMem(0xe60e), 0x70);
        // 70 0185
        gbc.setState(0x8cf4, 0xde10, 0x5e90, 0x9873, 0x12bc, 0xb9f8, 0x0, 0x0);
        gbc.writeMem(0x8cf4, { 0x70 });
        gbc.writeMem(0xb9f8, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0xde10);
        EXPECT(gbc.pc(), 0x8cf5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8cf4), 0x70);
        EXPECT(gbc.readMem(0xb9f8), 0x98);
        // 70 0186
        gbc.setState(0xce96, 0xc1a8, 0xf480, 0xe13b, 0x4677, 0xda42, 0x0, 0x0);
        gbc.writeMem(0xce96, { 0x70 });
        gbc.writeMem(0xda42, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0xc1a8);
        EXPECT(gbc.pc(), 0xce97);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xce96), 0x70);
        EXPECT(gbc.readMem(0xda42), 0xe1);
        // 70 0187
        gbc.setState(0xaf76, 0x45fc, 0xf50, 0x4cf0, 0xd3ae, 0xe0e4, 0x0, 0x0);
        gbc.writeMem(0xaf76, { 0x70 });
        gbc.writeMem(0xe0e4, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x45fc);
        EXPECT(gbc.pc(), 0xaf77);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaf76), 0x70);
        EXPECT(gbc.readMem(0xe0e4), 0x4c);
        // 70 0189
        gbc.setState(0x2d98, 0xce2e, 0xa190, 0x793b, 0x6680, 0xd622, 0x1, 0x1);
        gbc.writeMem(0x2d98, { 0x70 });
        gbc.writeMem(0xd622, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0xce2e);
        EXPECT(gbc.pc(), 0x2d99);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd622), 0x79);
        // 70 018B
        gbc.setState(0x9a5a, 0x375a, 0x8e10, 0xf6f7, 0xa1b9, 0xc5ad, 0x1, 0x0);
        gbc.writeMem(0x9a5a, { 0x70 });
        gbc.writeMem(0xc5ad, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x375a);
        EXPECT(gbc.pc(), 0x9a5b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9a5a), 0x70);
        EXPECT(gbc.readMem(0xc5ad), 0xf6);
        // 70 018F
        gbc.setState(0x82ab, 0x9113, 0x4f0, 0xd409, 0x31c5, 0x97b5, 0x1, 0x1);
        gbc.writeMem(0x82ab, { 0x70 });
        gbc.writeMem(0x97b5, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x9113);
        EXPECT(gbc.pc(), 0x82ac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x82ab), 0x70);
        EXPECT(gbc.readMem(0x97b5), 0xd4);
        // 70 0190
        gbc.setState(0x406c, 0xb5f2, 0x6960, 0x5e67, 0x30b5, 0xbecb, 0x0, 0x0);
        gbc.writeMem(0x406c, { 0x70 });
        gbc.writeMem(0xbecb, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0xb5f2);
        EXPECT(gbc.pc(), 0x406d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbecb), 0x5e);
        // 70 0191
        gbc.setState(0x118, 0x13f3, 0x1b50, 0x309a, 0xbe59, 0xb20c, 0x0, 0x0);
        gbc.writeMem(0x118, { 0x70 });
        gbc.writeMem(0xb20c, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x13f3);
        EXPECT(gbc.pc(), 0x119);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb20c), 0x30);
        // 70 0195
        gbc.setState(0x8aef, 0x70a5, 0x42a0, 0xa0a8, 0x1370, 0x8e46, 0x1, 0x0);
        gbc.writeMem(0x8aef, { 0x70 });
        gbc.writeMem(0x8e46, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x70a5);
        EXPECT(gbc.pc(), 0x8af0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8aef), 0x70);
        EXPECT(gbc.readMem(0x8e46), 0xa0);
        // 70 0199
        gbc.setState(0x3532, 0xf7c6, 0x4b20, 0xb894, 0x95b3, 0x94ee, 0x1, 0x0);
        gbc.writeMem(0x3532, { 0x70 });
        gbc.writeMem(0x94ee, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0xf7c6);
        EXPECT(gbc.pc(), 0x3533);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x94ee), 0xb8);
        // 70 019B
        gbc.setState(0x8318, 0x632b, 0x8300, 0x769d, 0x13e9, 0xcecb, 0x0, 0x0);
        gbc.writeMem(0x8318, { 0x70 });
        gbc.writeMem(0xcecb, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x632b);
        EXPECT(gbc.pc(), 0x8319);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8318), 0x70);
        EXPECT(gbc.readMem(0xcecb), 0x76);
        // 70 019C
        gbc.setState(0x875a, 0x75e8, 0xa650, 0xecb6, 0x6e25, 0x8a64, 0x1, 0x0);
        gbc.writeMem(0x875a, { 0x70 });
        gbc.writeMem(0x8a64, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x75e8);
        EXPECT(gbc.pc(), 0x875b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x875a), 0x70);
        EXPECT(gbc.readMem(0x8a64), 0xec);
        // 70 019D
        gbc.setState(0x41a6, 0xf643, 0x6100, 0xcedf, 0x51bd, 0x8aa7, 0x0, 0x1);
        gbc.writeMem(0x41a6, { 0x70 });
        gbc.writeMem(0x8aa7, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xf643);
        EXPECT(gbc.pc(), 0x41a7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8aa7), 0xce);
        // 70 019E
        gbc.setState(0x31c6, 0x800b, 0x7e50, 0x5285, 0x351c, 0x8dfa, 0x0, 0x0);
        gbc.writeMem(0x31c6, { 0x70 });
        gbc.writeMem(0x8dfa, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x800b);
        EXPECT(gbc.pc(), 0x31c7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8dfa), 0x52);
        // 70 01A0
        gbc.setState(0x3811, 0xf5d5, 0xdb30, 0x2ec8, 0x2c35, 0xd079, 0x1, 0x1);
        gbc.writeMem(0x3811, { 0x70 });
        gbc.writeMem(0xd079, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xf5d5);
        EXPECT(gbc.pc(), 0x3812);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd079), 0x2e);
        // 70 01A1
        gbc.setState(0x3701, 0x495, 0xbf10, 0xdf65, 0x2349, 0xa82c, 0x0, 0x1);
        gbc.writeMem(0x3701, { 0x70 });
        gbc.writeMem(0xa82c, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x495);
        EXPECT(gbc.pc(), 0x3702);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa82c), 0xdf);
        // 70 01A2
        gbc.setState(0x832d, 0x95e8, 0x39f0, 0x84a8, 0x9acd, 0xf9a6, 0x0, 0x0);
        gbc.writeMem(0x832d, { 0x70 });
        gbc.writeMem(0xf9a6, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x95e8);
        EXPECT(gbc.pc(), 0x832e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x832d), 0x70);
        EXPECT(gbc.readMem(0xf9a6), 0x84);
        // 70 01A3
        gbc.setState(0x3963, 0xee8f, 0x40d0, 0x3ac9, 0x391c, 0xf8a1, 0x1, 0x0);
        gbc.writeMem(0x3963, { 0x70 });
        gbc.writeMem(0xf8a1, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0xee8f);
        EXPECT(gbc.pc(), 0x3964);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf8a1), 0x3a);
        // 70 01A8
        gbc.setState(0x5557, 0xdfe, 0x4f90, 0x745c, 0x9fbc, 0xc787, 0x0, 0x0);
        gbc.writeMem(0x5557, { 0x70 });
        gbc.writeMem(0xc787, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xdfe);
        EXPECT(gbc.pc(), 0x5558);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc787), 0x74);
        // 70 01A9
        gbc.setState(0x695a, 0x73ec, 0x7ca0, 0x393e, 0x3ed1, 0xa7d2, 0x1, 0x0);
        gbc.writeMem(0x695a, { 0x70 });
        gbc.writeMem(0xa7d2, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x73ec);
        EXPECT(gbc.pc(), 0x695b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa7d2), 0x39);
        // 70 01AC
        gbc.setState(0xe654, 0x63d9, 0x78e0, 0xdc6e, 0x615d, 0xf75a, 0x0, 0x1);
        gbc.writeMem(0xe654, { 0x70 });
        gbc.writeMem(0xf75a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x63d9);
        EXPECT(gbc.pc(), 0xe655);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe654), 0x70);
        EXPECT(gbc.readMem(0xf75a), 0xdc);
        // 70 01AE
        gbc.setState(0x81c4, 0x78af, 0x5770, 0x8cb3, 0xb5a4, 0xba4b, 0x1, 0x0);
        gbc.writeMem(0x81c4, { 0x70 });
        gbc.writeMem(0xba4b, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x78af);
        EXPECT(gbc.pc(), 0x81c5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x81c4), 0x70);
        EXPECT(gbc.readMem(0xba4b), 0x8c);
        // 70 01AF
        gbc.setState(0x87d, 0x1ccf, 0xd030, 0x30fb, 0xe0d4, 0x9a52, 0x0, 0x0);
        gbc.writeMem(0x87d, { 0x70 });
        gbc.writeMem(0x9a52, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x1ccf);
        EXPECT(gbc.pc(), 0x87e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9a52), 0x30);
        // 70 01B0
        gbc.setState(0x3174, 0x7ec5, 0xf940, 0xd13c, 0xff30, 0xed78, 0x0, 0x0);
        gbc.writeMem(0x3174, { 0x70 });
        gbc.writeMem(0xed78, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x7ec5);
        EXPECT(gbc.pc(), 0x3175);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xed78), 0xd1);
        // 70 01B2
        gbc.setState(0x6a99, 0x26d3, 0x2470, 0x7db7, 0x254a, 0xe5a5, 0x0, 0x1);
        gbc.writeMem(0x6a99, { 0x70 });
        gbc.writeMem(0xe5a5, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x26d3);
        EXPECT(gbc.pc(), 0x6a9a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe5a5), 0x7d);
        // 70 01B9
        gbc.setState(0x217c, 0x2e28, 0xec30, 0x6113, 0xfc34, 0xd982, 0x0, 0x0);
        gbc.writeMem(0x217c, { 0x70 });
        gbc.writeMem(0xd982, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x2e28);
        EXPECT(gbc.pc(), 0x217d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd982), 0x61);
        // 70 01BA
        gbc.setState(0x9491, 0xd641, 0x67f0, 0x2cff, 0xec2b, 0x848e, 0x0, 0x0);
        gbc.writeMem(0x848e, { 0x0 });
        gbc.writeMem(0x9491, { 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0xd641);
        EXPECT(gbc.pc(), 0x9492);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x848e), 0x2c);
        EXPECT(gbc.readMem(0x9491), 0x70);
        // 70 01BB
        gbc.setState(0x3de6, 0x5fec, 0x5230, 0x1a28, 0x11dc, 0x85a5, 0x1, 0x1);
        gbc.writeMem(0x3de6, { 0x70 });
        gbc.writeMem(0x85a5, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x5fec);
        EXPECT(gbc.pc(), 0x3de7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x85a5), 0x1a);
        // 70 01BE
        gbc.setState(0xeb43, 0x7df3, 0x9070, 0x5842, 0xbcd0, 0x8039, 0x1, 0x1);
        gbc.writeMem(0x8039, { 0x0 });
        gbc.writeMem(0xeb43, { 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x7df3);
        EXPECT(gbc.pc(), 0xeb44);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8039), 0x58);
        EXPECT(gbc.readMem(0xeb43), 0x70);
        // 70 01C2
        gbc.setState(0xb54, 0x5090, 0x45b0, 0x4ebc, 0x5d5c, 0xd9cd, 0x0, 0x0);
        gbc.writeMem(0xb54, { 0x70 });
        gbc.writeMem(0xd9cd, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x5090);
        EXPECT(gbc.pc(), 0xb55);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd9cd), 0x4e);
        // 70 01C3
        gbc.setState(0x6239, 0x4e6a, 0x75c0, 0x2232, 0xe879, 0x9e6a, 0x0, 0x0);
        gbc.writeMem(0x6239, { 0x70 });
        gbc.writeMem(0x9e6a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x4e6a);
        EXPECT(gbc.pc(), 0x623a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9e6a), 0x22);
        // 70 01C4
        gbc.setState(0x3fb7, 0x1e3f, 0x62c0, 0x9f63, 0xbead, 0xc8fb, 0x0, 0x0);
        gbc.writeMem(0x3fb7, { 0x70 });
        gbc.writeMem(0xc8fb, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x1e3f);
        EXPECT(gbc.pc(), 0x3fb8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc8fb), 0x9f);
        // 70 01C5
        gbc.setState(0xb4eb, 0x1269, 0x8770, 0xdbd5, 0xacf2, 0xfb12, 0x0, 0x0);
        gbc.writeMem(0xb4eb, { 0x70 });
        gbc.writeMem(0xfb12, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x1269);
        EXPECT(gbc.pc(), 0xb4ec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb4eb), 0x70);
        EXPECT(gbc.readMem(0xfb12), 0xdb);
        // 70 01C6
        gbc.setState(0x7f08, 0x691a, 0xcb50, 0x6530, 0x51ca, 0xdd9e, 0x1, 0x1);
        gbc.writeMem(0x7f08, { 0x70 });
        gbc.writeMem(0xdd9e, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x691a);
        EXPECT(gbc.pc(), 0x7f09);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdd9e), 0x65);
        // 70 01C8
        gbc.setState(0x8cc, 0xf5a6, 0xb7d0, 0xd36b, 0x83c, 0xbffc, 0x0, 0x1);
        gbc.writeMem(0x8cc, { 0x70 });
        gbc.writeMem(0xbffc, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0xf5a6);
        EXPECT(gbc.pc(), 0x8cd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbffc), 0xd3);
        // 70 01CA
        gbc.setState(0x954a, 0x2171, 0x5ba0, 0x4c90, 0xcc37, 0xf85a, 0x0, 0x1);
        gbc.writeMem(0x954a, { 0x70 });
        gbc.writeMem(0xf85a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x2171);
        EXPECT(gbc.pc(), 0x954b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x954a), 0x70);
        EXPECT(gbc.readMem(0xf85a), 0x4c);
        // 70 01CB
        gbc.setState(0x4894, 0x473d, 0x94c0, 0x4bea, 0x5e1b, 0x8aab, 0x1, 0x1);
        gbc.writeMem(0x4894, { 0x70 });
        gbc.writeMem(0x8aab, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x473d);
        EXPECT(gbc.pc(), 0x4895);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8aab), 0x4b);
        // 70 01CC
        gbc.setState(0x5bc7, 0xf815, 0x42a0, 0x2646, 0xa515, 0xe1bb, 0x1, 0x1);
        gbc.writeMem(0x5bc7, { 0x70 });
        gbc.writeMem(0xe1bb, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0xf815);
        EXPECT(gbc.pc(), 0x5bc8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe1bb), 0x26);
        // 70 01CE
        gbc.setState(0x67c3, 0xe76c, 0x94a0, 0x6369, 0xceaf, 0xf047, 0x1, 0x1);
        gbc.writeMem(0x67c3, { 0x70 });
        gbc.writeMem(0xf047, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0xe76c);
        EXPECT(gbc.pc(), 0x67c4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf047), 0x63);
        // 70 01D0
        gbc.setState(0x3bdd, 0xfde, 0xd190, 0xce4d, 0x4096, 0xe57a, 0x1, 0x0);
        gbc.writeMem(0x3bdd, { 0x70 });
        gbc.writeMem(0xe57a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xfde);
        EXPECT(gbc.pc(), 0x3bde);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe57a), 0xce);
        // 70 01D1
        gbc.setState(0xc8d0, 0xb222, 0x8f60, 0xb924, 0xbce4, 0xb5d6, 0x1, 0x0);
        gbc.writeMem(0xb5d6, { 0x0 });
        gbc.writeMem(0xc8d0, { 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0xb222);
        EXPECT(gbc.pc(), 0xc8d1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb5d6), 0xb9);
        EXPECT(gbc.readMem(0xc8d0), 0x70);
        // 70 01D2
        gbc.setState(0xa482, 0x68dc, 0x8810, 0x4a88, 0x3fcf, 0x8129, 0x1, 0x1);
        gbc.writeMem(0x8129, { 0x0 });
        gbc.writeMem(0xa482, { 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x68dc);
        EXPECT(gbc.pc(), 0xa483);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8129), 0x4a);
        EXPECT(gbc.readMem(0xa482), 0x70);
        // 70 01D6
        gbc.setState(0x608e, 0xa224, 0xa6a0, 0xe2e8, 0x3362, 0xd9dd, 0x0, 0x0);
        gbc.writeMem(0x608e, { 0x70 });
        gbc.writeMem(0xd9dd, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0xa224);
        EXPECT(gbc.pc(), 0x608f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd9dd), 0xe2);
        // 70 01D8
        gbc.setState(0x69de, 0xb929, 0x410, 0x40a9, 0x8a78, 0xbe29, 0x0, 0x0);
        gbc.writeMem(0x69de, { 0x70 });
        gbc.writeMem(0xbe29, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0xb929);
        EXPECT(gbc.pc(), 0x69df);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbe29), 0x40);
        // 70 01DC
        gbc.setState(0x9a91, 0x6ef2, 0x18b0, 0x93b0, 0x1499, 0x9fdb, 0x0, 0x1);
        gbc.writeMem(0x9a91, { 0x70 });
        gbc.writeMem(0x9fdb, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x6ef2);
        EXPECT(gbc.pc(), 0x9a92);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9a91), 0x70);
        EXPECT(gbc.readMem(0x9fdb), 0x93);
        // 70 01DD
        gbc.setState(0xbc5b, 0x783a, 0x1e30, 0x4dd, 0xf609, 0x8dce, 0x1, 0x1);
        gbc.writeMem(0x8dce, { 0x0 });
        gbc.writeMem(0xbc5b, { 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x783a);
        EXPECT(gbc.pc(), 0xbc5c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8dce), 0x4);
        EXPECT(gbc.readMem(0xbc5b), 0x70);
        // 70 01E1
        gbc.setState(0xd44a, 0x62d6, 0x40, 0x6465, 0x3de7, 0xc0ce, 0x1, 0x1);
        gbc.writeMem(0xc0ce, { 0x0 });
        gbc.writeMem(0xd44a, { 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x62d6);
        EXPECT(gbc.pc(), 0xd44b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc0ce), 0x64);
        EXPECT(gbc.readMem(0xd44a), 0x70);
        // 70 01E4
        gbc.setState(0x4180, 0xb35b, 0x8380, 0x75d, 0x8d04, 0xa758, 0x0, 0x0);
        gbc.writeMem(0x4180, { 0x70 });
        gbc.writeMem(0xa758, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0xb35b);
        EXPECT(gbc.pc(), 0x4181);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa758), 0x7);
        // 70 01E7
        gbc.setState(0x47c1, 0xc183, 0xe340, 0x2399, 0x7348, 0xb8d6, 0x1, 0x0);
        gbc.writeMem(0x47c1, { 0x70 });
        gbc.writeMem(0xb8d6, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0xc183);
        EXPECT(gbc.pc(), 0x47c2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb8d6), 0x23);
        // 70 01E8
        gbc.setState(0xcfd2, 0x7c47, 0x62e0, 0xf418, 0xd261, 0x8e6c, 0x0, 0x0);
        gbc.writeMem(0x8e6c, { 0x0 });
        gbc.writeMem(0xcfd2, { 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x7c47);
        EXPECT(gbc.pc(), 0xcfd3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8e6c), 0xf4);
        EXPECT(gbc.readMem(0xcfd2), 0x70);
        // 70 01EC
        gbc.setState(0x7a8a, 0x14cb, 0xab50, 0x781f, 0xe5a, 0xd9a5, 0x1, 0x1);
        gbc.writeMem(0x7a8a, { 0x70 });
        gbc.writeMem(0xd9a5, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x14cb);
        EXPECT(gbc.pc(), 0x7a8b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd9a5), 0x78);
        // 70 01F0
        gbc.setState(0xce53, 0xff13, 0x6360, 0xca4f, 0xd787, 0xb95b, 0x0, 0x1);
        gbc.writeMem(0xb95b, { 0x0 });
        gbc.writeMem(0xce53, { 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0xff13);
        EXPECT(gbc.pc(), 0xce54);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb95b), 0xca);
        EXPECT(gbc.readMem(0xce53), 0x70);
        // 70 01F1
        gbc.setState(0xdd83, 0xa0d6, 0xaad0, 0xc301, 0xea01, 0x890d, 0x1, 0x1);
        gbc.writeMem(0x890d, { 0x0 });
        gbc.writeMem(0xdd83, { 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0xa0d6);
        EXPECT(gbc.pc(), 0xdd84);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x890d), 0xc3);
        EXPECT(gbc.readMem(0xdd83), 0x70);
        // 70 01F8
        gbc.setState(0x12a2, 0x6369, 0x940, 0x5901, 0x28d6, 0xacc8, 0x1, 0x0);
        gbc.writeMem(0x12a2, { 0x70 });
        gbc.writeMem(0xacc8, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x6369);
        EXPECT(gbc.pc(), 0x12a3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xacc8), 0x59);
        // 70 01FD
        gbc.setState(0xb567, 0x16b9, 0x4160, 0x6e46, 0x6baf, 0x8d6c, 0x0, 0x0);
        gbc.writeMem(0x8d6c, { 0x0 });
        gbc.writeMem(0xb567, { 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x16b9);
        EXPECT(gbc.pc(), 0xb568);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d6c), 0x6e);
        EXPECT(gbc.readMem(0xb567), 0x70);
        // 70 01FE
        gbc.setState(0xbaea, 0x38cd, 0x14c0, 0xfa12, 0xc798, 0x9bcf, 0x0, 0x0);
        gbc.writeMem(0x9bcf, { 0x0 });
        gbc.writeMem(0xbaea, { 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x38cd);
        EXPECT(gbc.pc(), 0xbaeb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9bcf), 0xfa);
        EXPECT(gbc.readMem(0xbaea), 0x70);
        // 70 0200
        gbc.setState(0x7aff, 0x27e, 0x6130, 0x2528, 0x219f, 0x85ae, 0x1, 0x1);
        gbc.writeMem(0x7aff, { 0x70 });
        gbc.writeMem(0x85ae, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x27e);
        EXPECT(gbc.pc(), 0x7b00);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x85ae), 0x25);
        // 70 0201
        gbc.setState(0x6126, 0x1f48, 0x49e0, 0x67f8, 0xb477, 0x869b, 0x0, 0x1);
        gbc.writeMem(0x6126, { 0x70 });
        gbc.writeMem(0x869b, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x1f48);
        EXPECT(gbc.pc(), 0x6127);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x869b), 0x67);
        // 70 0202
        gbc.setState(0x2dc4, 0x5311, 0x99d0, 0x33c7, 0x133, 0xa534, 0x1, 0x0);
        gbc.writeMem(0x2dc4, { 0x70 });
        gbc.writeMem(0xa534, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x5311);
        EXPECT(gbc.pc(), 0x2dc5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa534), 0x33);
        // 70 0206
        gbc.setState(0xd0e4, 0x4727, 0x8da0, 0xf558, 0xf73, 0x9309, 0x0, 0x1);
        gbc.writeMem(0x9309, { 0x0 });
        gbc.writeMem(0xd0e4, { 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x4727);
        EXPECT(gbc.pc(), 0xd0e5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9309), 0xf5);
        EXPECT(gbc.readMem(0xd0e4), 0x70);
        // 70 0207
        gbc.setState(0x6131, 0xa442, 0xea40, 0x709, 0x9eb5, 0xb9b5, 0x1, 0x1);
        gbc.writeMem(0x6131, { 0x70 });
        gbc.writeMem(0xb9b5, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0xa442);
        EXPECT(gbc.pc(), 0x6132);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb9b5), 0x7);
        // 70 0208
        gbc.setState(0x9ee, 0x2e01, 0xf9b0, 0xcdc7, 0xd37a, 0x9aa8, 0x0, 0x0);
        gbc.writeMem(0x9ee, { 0x70 });
        gbc.writeMem(0x9aa8, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x2e01);
        EXPECT(gbc.pc(), 0x9ef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9aa8), 0xcd);
        // 70 020C
        gbc.setState(0x7e03, 0x37f6, 0x74a0, 0x80ad, 0x40b7, 0xa833, 0x0, 0x0);
        gbc.writeMem(0x7e03, { 0x70 });
        gbc.writeMem(0xa833, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x37f6);
        EXPECT(gbc.pc(), 0x7e04);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa833), 0x80);
        // 70 020D
        gbc.setState(0x3a2b, 0x3c8e, 0xecd0, 0xe4c8, 0x8a2c, 0xc708, 0x1, 0x1);
        gbc.writeMem(0x3a2b, { 0x70 });
        gbc.writeMem(0xc708, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x3c8e);
        EXPECT(gbc.pc(), 0x3a2c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc708), 0xe4);
        // 70 020F
        gbc.setState(0xd7b8, 0xc18f, 0x9d50, 0x674b, 0xb43a, 0xcadd, 0x1, 0x1);
        gbc.writeMem(0xcadd, { 0x0 });
        gbc.writeMem(0xd7b8, { 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0xc18f);
        EXPECT(gbc.pc(), 0xd7b9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcadd), 0x67);
        EXPECT(gbc.readMem(0xd7b8), 0x70);
        // 70 0210
        gbc.setState(0xc3d4, 0x3df3, 0xff0, 0x78aa, 0xaf07, 0xf932, 0x0, 0x1);
        gbc.writeMem(0xc3d4, { 0x70 });
        gbc.writeMem(0xf932, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x3df3);
        EXPECT(gbc.pc(), 0xc3d5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc3d4), 0x70);
        EXPECT(gbc.readMem(0xf932), 0x78);
        // 70 0211
        gbc.setState(0x172c, 0xa55f, 0xab10, 0xfbbf, 0x3819, 0xfc21, 0x0, 0x1);
        gbc.writeMem(0x172c, { 0x70 });
        gbc.writeMem(0xfc21, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0xa55f);
        EXPECT(gbc.pc(), 0x172d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xfc21), 0xfb);
        // 70 0212
        gbc.setState(0x6a26, 0xcc8a, 0x94c0, 0xe28c, 0xe3ab, 0xd4da, 0x0, 0x1);
        gbc.writeMem(0x6a26, { 0x70 });
        gbc.writeMem(0xd4da, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0xcc8a);
        EXPECT(gbc.pc(), 0x6a27);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd4da), 0xe2);
        // 70 0213
        gbc.setState(0x8226, 0xd0a9, 0x8fa0, 0x17fe, 0xe837, 0xe795, 0x1, 0x1);
        gbc.writeMem(0x8226, { 0x70 });
        gbc.writeMem(0xe795, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0xd0a9);
        EXPECT(gbc.pc(), 0x8227);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8226), 0x70);
        EXPECT(gbc.readMem(0xe795), 0x17);
        // 70 0215
        gbc.setState(0x2a54, 0x912f, 0x69d0, 0xd4a5, 0xe577, 0xda50, 0x1, 0x1);
        gbc.writeMem(0x2a54, { 0x70 });
        gbc.writeMem(0xda50, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x912f);
        EXPECT(gbc.pc(), 0x2a55);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xda50), 0xd4);
        // 70 0216
        gbc.setState(0xd072, 0xb3b1, 0x6d0, 0x4a19, 0xab9b, 0xc35d, 0x0, 0x0);
        gbc.writeMem(0xc35d, { 0x0 });
        gbc.writeMem(0xd072, { 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xb3b1);
        EXPECT(gbc.pc(), 0xd073);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc35d), 0x4a);
        EXPECT(gbc.readMem(0xd072), 0x70);
        // 70 0218
        gbc.setState(0xecd8, 0x3b7b, 0xc330, 0x814c, 0x30b4, 0xfe2e, 0x0, 0x1);
        gbc.writeMem(0xecd8, { 0x70 });
        gbc.writeMem(0xfe2e, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x3b7b);
        EXPECT(gbc.pc(), 0xecd9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xecd8), 0x70);
        EXPECT(gbc.readMem(0xfe2e), 0x81);
        // 70 021E
        gbc.setState(0xca7a, 0x158, 0x55b0, 0x5c2e, 0xb76e, 0xbb5f, 0x1, 0x0);
        gbc.writeMem(0xbb5f, { 0x0 });
        gbc.writeMem(0xca7a, { 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x158);
        EXPECT(gbc.pc(), 0xca7b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbb5f), 0x5c);
        EXPECT(gbc.readMem(0xca7a), 0x70);
        // 70 0220
        gbc.setState(0x6eff, 0xb4a7, 0xe4f0, 0xba3a, 0x7d96, 0x906f, 0x0, 0x0);
        gbc.writeMem(0x6eff, { 0x70 });
        gbc.writeMem(0x906f, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0xb4a7);
        EXPECT(gbc.pc(), 0x6f00);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x906f), 0xba);
        // 70 0221
        gbc.setState(0x4e82, 0x6374, 0x6cc0, 0xfa2b, 0x356, 0xa1dc, 0x0, 0x0);
        gbc.writeMem(0x4e82, { 0x70 });
        gbc.writeMem(0xa1dc, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x6374);
        EXPECT(gbc.pc(), 0x4e83);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa1dc), 0xfa);
        // 70 0222
        gbc.setState(0x418a, 0xa514, 0x9310, 0x9793, 0xc86a, 0xde03, 0x1, 0x0);
        gbc.writeMem(0x418a, { 0x70 });
        gbc.writeMem(0xde03, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0xa514);
        EXPECT(gbc.pc(), 0x418b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xde03), 0x97);
        // 70 0223
        gbc.setState(0x2546, 0xfc9f, 0x77e0, 0xb991, 0xf184, 0xf5ad, 0x0, 0x0);
        gbc.writeMem(0x2546, { 0x70 });
        gbc.writeMem(0xf5ad, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0xfc9f);
        EXPECT(gbc.pc(), 0x2547);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf5ad), 0xb9);
        // 70 0225
        gbc.setState(0x253b, 0x96ab, 0x2c20, 0x8b9, 0xf448, 0x8eb1, 0x1, 0x0);
        gbc.writeMem(0x253b, { 0x70 });
        gbc.writeMem(0x8eb1, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x96ab);
        EXPECT(gbc.pc(), 0x253c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8eb1), 0x8);
        // 70 0229
        gbc.setState(0x980e, 0x75f0, 0xc20, 0x8705, 0x5a80, 0xf290, 0x1, 0x1);
        gbc.writeMem(0x980e, { 0x70 });
        gbc.writeMem(0xf290, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x75f0);
        EXPECT(gbc.pc(), 0x980f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x980e), 0x70);
        EXPECT(gbc.readMem(0xf290), 0x87);
        // 70 022B
        gbc.setState(0x9d8e, 0x2b13, 0xf220, 0x120e, 0x59a7, 0x8404, 0x0, 0x1);
        gbc.writeMem(0x8404, { 0x0 });
        gbc.writeMem(0x9d8e, { 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x2b13);
        EXPECT(gbc.pc(), 0x9d8f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8404), 0x12);
        EXPECT(gbc.readMem(0x9d8e), 0x70);
        // 70 022C
        gbc.setState(0xbb2c, 0x1697, 0xfaa0, 0x375f, 0xef1, 0xbfe2, 0x1, 0x0);
        gbc.writeMem(0xbb2c, { 0x70 });
        gbc.writeMem(0xbfe2, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x1697);
        EXPECT(gbc.pc(), 0xbb2d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbb2c), 0x70);
        EXPECT(gbc.readMem(0xbfe2), 0x37);
        // 70 022D
        gbc.setState(0x82aa, 0x3721, 0x1210, 0x978, 0x3f83, 0xe9bf, 0x0, 0x0);
        gbc.writeMem(0x82aa, { 0x70 });
        gbc.writeMem(0xe9bf, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x3721);
        EXPECT(gbc.pc(), 0x82ab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x82aa), 0x70);
        EXPECT(gbc.readMem(0xe9bf), 0x9);
        // 70 022E
        gbc.setState(0x41c2, 0x3cb6, 0x5740, 0x3cd9, 0x96af, 0x9035, 0x1, 0x0);
        gbc.writeMem(0x41c2, { 0x70 });
        gbc.writeMem(0x9035, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x3cb6);
        EXPECT(gbc.pc(), 0x41c3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9035), 0x3c);
        // 70 0230
        gbc.setState(0xeb00, 0x92ae, 0x7aa0, 0x5ca4, 0x664d, 0xdfc0, 0x0, 0x1);
        gbc.writeMem(0xdfc0, { 0x0 });
        gbc.writeMem(0xeb00, { 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x92ae);
        EXPECT(gbc.pc(), 0xeb01);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdfc0), 0x5c);
        EXPECT(gbc.readMem(0xeb00), 0x70);
        // 70 0232
        gbc.setState(0x4829, 0x14a3, 0x6150, 0x84bf, 0x33cf, 0x8b0a, 0x0, 0x0);
        gbc.writeMem(0x4829, { 0x70 });
        gbc.writeMem(0x8b0a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x14a3);
        EXPECT(gbc.pc(), 0x482a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b0a), 0x84);
        // 70 0234
        gbc.setState(0x1701, 0xd110, 0xe650, 0xce83, 0x6d54, 0xa300, 0x1, 0x1);
        gbc.writeMem(0x1701, { 0x70 });
        gbc.writeMem(0xa300, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0xd110);
        EXPECT(gbc.pc(), 0x1702);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa300), 0xce);
        // 70 0238
        gbc.setState(0x6dc0, 0xe8d, 0x8700, 0x82e3, 0x23e5, 0x87e3, 0x1, 0x0);
        gbc.writeMem(0x6dc0, { 0x70 });
        gbc.writeMem(0x87e3, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xe8d);
        EXPECT(gbc.pc(), 0x6dc1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x87e3), 0x82);
        // 70 023D
        gbc.setState(0xd8bc, 0x40dd, 0xf1d0, 0xfa22, 0x9e82, 0xc868, 0x0, 0x1);
        gbc.writeMem(0xc868, { 0x0 });
        gbc.writeMem(0xd8bc, { 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x40dd);
        EXPECT(gbc.pc(), 0xd8bd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc868), 0xfa);
        EXPECT(gbc.readMem(0xd8bc), 0x70);
        // 70 0241
        gbc.setState(0xb15a, 0xc5d2, 0x4e00, 0xcded, 0xa29d, 0xdaad, 0x0, 0x1);
        gbc.writeMem(0xb15a, { 0x70 });
        gbc.writeMem(0xdaad, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0xc5d2);
        EXPECT(gbc.pc(), 0xb15b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb15a), 0x70);
        EXPECT(gbc.readMem(0xdaad), 0xcd);
        // 70 0242
        gbc.setState(0xb166, 0x6c3f, 0x97a0, 0x6bbe, 0xf76a, 0xa1a1, 0x0, 0x1);
        gbc.writeMem(0xa1a1, { 0x0 });
        gbc.writeMem(0xb166, { 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x6c3f);
        EXPECT(gbc.pc(), 0xb167);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa1a1), 0x6b);
        EXPECT(gbc.readMem(0xb166), 0x70);
        // 70 0245
        gbc.setState(0x4c29, 0x65e3, 0xea10, 0x9842, 0x7abd, 0xc5e7, 0x1, 0x1);
        gbc.writeMem(0x4c29, { 0x70 });
        gbc.writeMem(0xc5e7, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x65e3);
        EXPECT(gbc.pc(), 0x4c2a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc5e7), 0x98);
        // 70 0247
        gbc.setState(0xcc9c, 0x67a0, 0xa240, 0x2d7f, 0xa678, 0xe564, 0x1, 0x0);
        gbc.writeMem(0xcc9c, { 0x70 });
        gbc.writeMem(0xe564, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x67a0);
        EXPECT(gbc.pc(), 0xcc9d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcc9c), 0x70);
        EXPECT(gbc.readMem(0xe564), 0x2d);
        // 70 0249
        gbc.setState(0x63d9, 0x53fa, 0xa310, 0x9dab, 0x8c45, 0x9d8a, 0x1, 0x1);
        gbc.writeMem(0x63d9, { 0x70 });
        gbc.writeMem(0x9d8a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x53fa);
        EXPECT(gbc.pc(), 0x63da);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9d8a), 0x9d);
        // 70 024B
        gbc.setState(0x2452, 0x5e50, 0x5040, 0x8337, 0x2dff, 0xb341, 0x1, 0x0);
        gbc.writeMem(0x2452, { 0x70 });
        gbc.writeMem(0xb341, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x5e50);
        EXPECT(gbc.pc(), 0x2453);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb341), 0x83);
        // 70 024C
        gbc.setState(0xa253, 0x2d2c, 0x8840, 0x76fd, 0xdf8c, 0xb772, 0x1, 0x1);
        gbc.writeMem(0xa253, { 0x70 });
        gbc.writeMem(0xb772, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x2d2c);
        EXPECT(gbc.pc(), 0xa254);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa253), 0x70);
        EXPECT(gbc.readMem(0xb772), 0x76);
        // 70 0250
        gbc.setState(0xc8cf, 0xa67c, 0xc1f0, 0xbd03, 0x7cf5, 0xca64, 0x0, 0x1);
        gbc.writeMem(0xc8cf, { 0x70 });
        gbc.writeMem(0xca64, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0xa67c);
        EXPECT(gbc.pc(), 0xc8d0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc8cf), 0x70);
        EXPECT(gbc.readMem(0xca64), 0xbd);
        // 70 0257
        gbc.setState(0x889f, 0x46c0, 0x2b0, 0xe8d7, 0x3aed, 0xa47d, 0x0, 0x0);
        gbc.writeMem(0x889f, { 0x70 });
        gbc.writeMem(0xa47d, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x46c0);
        EXPECT(gbc.pc(), 0x88a0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x889f), 0x70);
        EXPECT(gbc.readMem(0xa47d), 0xe8);
        // 70 0258
        gbc.setState(0xe716, 0x338f, 0x2e0, 0x6dda, 0xd5ec, 0xb1ce, 0x1, 0x0);
        gbc.writeMem(0xb1ce, { 0x0 });
        gbc.writeMem(0xe716, { 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x338f);
        EXPECT(gbc.pc(), 0xe717);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb1ce), 0x6d);
        EXPECT(gbc.readMem(0xe716), 0x70);
        // 70 0259
        gbc.setState(0x614, 0xef12, 0xbd70, 0x3a01, 0x2423, 0xa887, 0x0, 0x0);
        gbc.writeMem(0x614, { 0x70 });
        gbc.writeMem(0xa887, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xef12);
        EXPECT(gbc.pc(), 0x615);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa887), 0x3a);
        // 70 025A
        gbc.setState(0x16d3, 0xb28d, 0x2210, 0x15f6, 0x70e8, 0xde6d, 0x0, 0x1);
        gbc.writeMem(0x16d3, { 0x70 });
        gbc.writeMem(0xde6d, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0xb28d);
        EXPECT(gbc.pc(), 0x16d4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xde6d), 0x15);
        // 70 025B
        gbc.setState(0x148a, 0x5588, 0x7460, 0xdb0e, 0x9f06, 0xf393, 0x1, 0x0);
        gbc.writeMem(0x148a, { 0x70 });
        gbc.writeMem(0xf393, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x5588);
        EXPECT(gbc.pc(), 0x148b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf393), 0xdb);
        // 70 025C
        gbc.setState(0x2c2, 0x5526, 0xfa0, 0xa234, 0xdb6, 0xfea0, 0x1, 0x0);
        gbc.writeMem(0x2c2, { 0x70 });
        gbc.writeMem(0xfea0, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x5526);
        EXPECT(gbc.pc(), 0x2c3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xfea0), 0xa2);
        // 70 025D
        gbc.setState(0xd050, 0x6675, 0xbaa0, 0xc9eb, 0x9f97, 0xb876, 0x1, 0x1);
        gbc.writeMem(0xb876, { 0x0 });
        gbc.writeMem(0xd050, { 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x6675);
        EXPECT(gbc.pc(), 0xd051);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb876), 0xc9);
        EXPECT(gbc.readMem(0xd050), 0x70);
        // 70 025E
        gbc.setState(0x9791, 0xf89a, 0x9030, 0x6317, 0x3ddd, 0xe14e, 0x0, 0x0);
        gbc.writeMem(0x9791, { 0x70 });
        gbc.writeMem(0xe14e, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0xf89a);
        EXPECT(gbc.pc(), 0x9792);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9791), 0x70);
        EXPECT(gbc.readMem(0xe14e), 0x63);
        // 70 025F
        gbc.setState(0xa2d2, 0x86dd, 0x70c0, 0xc170, 0x275d, 0xbda3, 0x1, 0x1);
        gbc.writeMem(0xa2d2, { 0x70 });
        gbc.writeMem(0xbda3, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x86dd);
        EXPECT(gbc.pc(), 0xa2d3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa2d2), 0x70);
        EXPECT(gbc.readMem(0xbda3), 0xc1);
        // 70 0260
        gbc.setState(0x472a, 0x3a70, 0x1a00, 0xce85, 0x7874, 0xfb04, 0x1, 0x1);
        gbc.writeMem(0x472a, { 0x70 });
        gbc.writeMem(0xfb04, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x3a70);
        EXPECT(gbc.pc(), 0x472b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xfb04), 0xce);
        // 70 0262
        gbc.setState(0xcc79, 0xff21, 0x92f0, 0xa15f, 0xef1, 0x8280, 0x1, 0x1);
        gbc.writeMem(0x8280, { 0x0 });
        gbc.writeMem(0xcc79, { 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0xff21);
        EXPECT(gbc.pc(), 0xcc7a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8280), 0xa1);
        EXPECT(gbc.readMem(0xcc79), 0x70);
        // 70 0263
        gbc.setState(0xab28, 0x3515, 0x7980, 0x77df, 0x7d96, 0xff43, 0x1, 0x1);
        gbc.writeMem(0xab28, { 0x70 });
        gbc.writeMem(0xff43, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x3515);
        EXPECT(gbc.pc(), 0xab29);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xab28), 0x70);
        EXPECT(gbc.readMem(0xff43), 0x77);
        // 70 0264
        gbc.setState(0xe788, 0x9547, 0xde30, 0x1e27, 0xb4e3, 0x8fa1, 0x1, 0x1);
        gbc.writeMem(0x8fa1, { 0x0 });
        gbc.writeMem(0xe788, { 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x9547);
        EXPECT(gbc.pc(), 0xe789);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8fa1), 0x1e);
        EXPECT(gbc.readMem(0xe788), 0x70);
        // 70 0265
        gbc.setState(0x2948, 0xdf74, 0xb4c0, 0x30c3, 0xa187, 0xb2bf, 0x0, 0x1);
        gbc.writeMem(0x2948, { 0x70 });
        gbc.writeMem(0xb2bf, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0xdf74);
        EXPECT(gbc.pc(), 0x2949);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb2bf), 0x30);
        // 70 0266
        gbc.setState(0x38fa, 0xf8b2, 0x2790, 0xaeaa, 0x4e32, 0xa090, 0x0, 0x0);
        gbc.writeMem(0x38fa, { 0x70 });
        gbc.writeMem(0xa090, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0xf8b2);
        EXPECT(gbc.pc(), 0x38fb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa090), 0xae);
        // 70 0267
        gbc.setState(0xd9f, 0xa08c, 0x8380, 0x6c93, 0xa335, 0xfd8e, 0x0, 0x0);
        gbc.writeMem(0xd9f, { 0x70 });
        gbc.writeMem(0xfd8e, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0xa08c);
        EXPECT(gbc.pc(), 0xda0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xfd8e), 0x6c);
        // 70 0268
        gbc.setState(0x3cb8, 0x6df4, 0x9900, 0xda92, 0x4df0, 0xd709, 0x1, 0x0);
        gbc.writeMem(0x3cb8, { 0x70 });
        gbc.writeMem(0xd709, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x6df4);
        EXPECT(gbc.pc(), 0x3cb9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd709), 0xda);
        // 70 026B
        gbc.setState(0xa077, 0x8852, 0xb50, 0x8953, 0x3370, 0xc7a3, 0x1, 0x0);
        gbc.writeMem(0xa077, { 0x70 });
        gbc.writeMem(0xc7a3, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x8852);
        EXPECT(gbc.pc(), 0xa078);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa077), 0x70);
        EXPECT(gbc.readMem(0xc7a3), 0x89);
        // 70 026C
        gbc.setState(0x8e1c, 0xd013, 0xcc90, 0x86, 0xe70, 0xa25c, 0x0, 0x1);
        gbc.writeMem(0x8e1c, { 0x70 });
        gbc.writeMem(0xa25c, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0xd013);
        EXPECT(gbc.pc(), 0x8e1d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8e1c), 0x70);
        EXPECT(gbc.readMem(0xa25c), 0x0);
        // 70 026E
        gbc.setState(0x7f20, 0xa8cd, 0x9cd0, 0xddb2, 0x4110, 0xed26, 0x1, 0x1);
        gbc.writeMem(0x7f20, { 0x70 });
        gbc.writeMem(0xed26, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0xa8cd);
        EXPECT(gbc.pc(), 0x7f21);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xed26), 0xdd);
        // 70 026F
        gbc.setState(0xda42, 0xe0d7, 0xc50, 0x80f7, 0xd4ea, 0xd615, 0x0, 0x0);
        gbc.writeMem(0xd615, { 0x0 });
        gbc.writeMem(0xda42, { 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0xe0d7);
        EXPECT(gbc.pc(), 0xda43);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd615), 0x80);
        EXPECT(gbc.readMem(0xda42), 0x70);
        // 70 0270
        gbc.setState(0xca9e, 0x9e2b, 0x7ce0, 0x440c, 0xa2dc, 0x8d4b, 0x1, 0x1);
        gbc.writeMem(0x8d4b, { 0x0 });
        gbc.writeMem(0xca9e, { 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x9e2b);
        EXPECT(gbc.pc(), 0xca9f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d4b), 0x44);
        EXPECT(gbc.readMem(0xca9e), 0x70);
        // 70 0271
        gbc.setState(0xe172, 0x412c, 0x1690, 0x26b2, 0x1b79, 0xf8c4, 0x1, 0x1);
        gbc.writeMem(0xe172, { 0x70 });
        gbc.writeMem(0xf8c4, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x412c);
        EXPECT(gbc.pc(), 0xe173);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe172), 0x70);
        EXPECT(gbc.readMem(0xf8c4), 0x26);
        // 70 0273
        gbc.setState(0xba9f, 0x272f, 0x9820, 0x5508, 0x761e, 0xb54d, 0x1, 0x0);
        gbc.writeMem(0xb54d, { 0x0 });
        gbc.writeMem(0xba9f, { 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x272f);
        EXPECT(gbc.pc(), 0xbaa0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb54d), 0x55);
        EXPECT(gbc.readMem(0xba9f), 0x70);
        // 70 0274
        gbc.setState(0x9a70, 0x9c0c, 0xc850, 0x27fa, 0x9f60, 0x9b39, 0x0, 0x1);
        gbc.writeMem(0x9a70, { 0x70 });
        gbc.writeMem(0x9b39, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x9c0c);
        EXPECT(gbc.pc(), 0x9a71);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9a70), 0x70);
        EXPECT(gbc.readMem(0x9b39), 0x27);
        // 70 0276
        gbc.setState(0x893b, 0xebd, 0x1b10, 0xde71, 0xc785, 0x9d82, 0x0, 0x0);
        gbc.writeMem(0x893b, { 0x70 });
        gbc.writeMem(0x9d82, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0xebd);
        EXPECT(gbc.pc(), 0x893c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x893b), 0x70);
        EXPECT(gbc.readMem(0x9d82), 0xde);
        // 70 0278
        gbc.setState(0xd9cd, 0x7220, 0x27f0, 0xc505, 0x709, 0x80c5, 0x0, 0x1);
        gbc.writeMem(0x80c5, { 0x0 });
        gbc.writeMem(0xd9cd, { 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x7220);
        EXPECT(gbc.pc(), 0xd9ce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x80c5), 0xc5);
        EXPECT(gbc.readMem(0xd9cd), 0x70);
        // 70 027A
        gbc.setState(0x2804, 0xd8af, 0xe200, 0x968a, 0xd33d, 0xfbbc, 0x0, 0x0);
        gbc.writeMem(0x2804, { 0x70 });
        gbc.writeMem(0xfbbc, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0xd8af);
        EXPECT(gbc.pc(), 0x2805);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xfbbc), 0x96);
        // 70 027B
        gbc.setState(0x6d53, 0xe5c6, 0xe240, 0xa5e4, 0x66e6, 0xa81c, 0x1, 0x0);
        gbc.writeMem(0x6d53, { 0x70 });
        gbc.writeMem(0xa81c, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0xe5c6);
        EXPECT(gbc.pc(), 0x6d54);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa81c), 0xa5);
        // 70 027C
        gbc.setState(0xed07, 0x414a, 0x2840, 0xee4, 0xa44, 0xd1e4, 0x1, 0x1);
        gbc.writeMem(0xd1e4, { 0x0 });
        gbc.writeMem(0xed07, { 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x414a);
        EXPECT(gbc.pc(), 0xed08);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd1e4), 0xe);
        EXPECT(gbc.readMem(0xed07), 0x70);
        // 70 027D
        gbc.setState(0x2915, 0xa005, 0xe330, 0x5506, 0x42a7, 0xb20e, 0x0, 0x1);
        gbc.writeMem(0x2915, { 0x70 });
        gbc.writeMem(0xb20e, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0xa005);
        EXPECT(gbc.pc(), 0x2916);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb20e), 0x55);
        // 70 027E
        gbc.setState(0xd821, 0xa8f7, 0x720, 0xd620, 0xc2f, 0x946f, 0x0, 0x1);
        gbc.writeMem(0x946f, { 0x0 });
        gbc.writeMem(0xd821, { 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0xa8f7);
        EXPECT(gbc.pc(), 0xd822);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x946f), 0xd6);
        EXPECT(gbc.readMem(0xd821), 0x70);
        // 70 0280
        gbc.setState(0x7d4f, 0x4644, 0xf6d0, 0x334f, 0xcb87, 0xcc3a, 0x0, 0x0);
        gbc.writeMem(0x7d4f, { 0x70 });
        gbc.writeMem(0xcc3a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x4644);
        EXPECT(gbc.pc(), 0x7d50);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcc3a), 0x33);
        // 70 0285
        gbc.setState(0x2a3c, 0xc460, 0x1080, 0x9c96, 0xbd24, 0xc083, 0x0, 0x1);
        gbc.writeMem(0x2a3c, { 0x70 });
        gbc.writeMem(0xc083, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0xc460);
        EXPECT(gbc.pc(), 0x2a3d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc083), 0x9c);
        // 70 0288
        gbc.setState(0xd693, 0xadd5, 0xffc0, 0x3d16, 0xf805, 0x92da, 0x1, 0x0);
        gbc.writeMem(0x92da, { 0x0 });
        gbc.writeMem(0xd693, { 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0xadd5);
        EXPECT(gbc.pc(), 0xd694);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x92da), 0x3d);
        EXPECT(gbc.readMem(0xd693), 0x70);
        // 70 028A
        gbc.setState(0x72a2, 0x7a38, 0xc140, 0x2e6e, 0xc5f1, 0xc874, 0x1, 0x0);
        gbc.writeMem(0x72a2, { 0x70 });
        gbc.writeMem(0xc874, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x7a38);
        EXPECT(gbc.pc(), 0x72a3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc874), 0x2e);
        // 70 028B
        gbc.setState(0x2914, 0xe083, 0xf4f0, 0xe65, 0x33d4, 0xeae7, 0x1, 0x1);
        gbc.writeMem(0x2914, { 0x70 });
        gbc.writeMem(0xeae7, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xe083);
        EXPECT(gbc.pc(), 0x2915);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeae7), 0xe);
        // 70 028C
        gbc.setState(0x2648, 0xf107, 0x3720, 0xbf96, 0x9f85, 0xf2df, 0x1, 0x1);
        gbc.writeMem(0x2648, { 0x70 });
        gbc.writeMem(0xf2df, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0xf107);
        EXPECT(gbc.pc(), 0x2649);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf2df), 0xbf);
        // 70 028D
        gbc.setState(0x39d6, 0xdb0d, 0xf9e0, 0x2df7, 0xf6f0, 0xc825, 0x0, 0x0);
        gbc.writeMem(0x39d6, { 0x70 });
        gbc.writeMem(0xc825, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0xdb0d);
        EXPECT(gbc.pc(), 0x39d7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc825), 0x2d);
        // 70 028E
        gbc.setState(0x9596, 0xc96a, 0xb060, 0xd79a, 0xe36e, 0x918c, 0x1, 0x0);
        gbc.writeMem(0x918c, { 0x0 });
        gbc.writeMem(0x9596, { 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0xc96a);
        EXPECT(gbc.pc(), 0x9597);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x918c), 0xd7);
        EXPECT(gbc.readMem(0x9596), 0x70);
        // 70 028F
        gbc.setState(0x6754, 0x1f1, 0x4b40, 0x290e, 0xc7b1, 0xa2a8, 0x0, 0x1);
        gbc.writeMem(0x6754, { 0x70 });
        gbc.writeMem(0xa2a8, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x1f1);
        EXPECT(gbc.pc(), 0x6755);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa2a8), 0x29);
        // 70 0294
        gbc.setState(0x5f84, 0xccf3, 0x8bc0, 0xe49a, 0x4ff4, 0xb595, 0x1, 0x0);
        gbc.writeMem(0x5f84, { 0x70 });
        gbc.writeMem(0xb595, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0xccf3);
        EXPECT(gbc.pc(), 0x5f85);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb595), 0xe4);
        // 70 0295
        gbc.setState(0x64be, 0xc203, 0x6410, 0x833f, 0x2d2a, 0xeb06, 0x0, 0x0);
        gbc.writeMem(0x64be, { 0x70 });
        gbc.writeMem(0xeb06, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0xc203);
        EXPECT(gbc.pc(), 0x64bf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeb06), 0x83);
        // 70 0296
        gbc.setState(0xcc11, 0x2c7, 0xd1f0, 0xda11, 0x5b27, 0xb793, 0x0, 0x0);
        gbc.writeMem(0xb793, { 0x0 });
        gbc.writeMem(0xcc11, { 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x2c7);
        EXPECT(gbc.pc(), 0xcc12);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb793), 0xda);
        EXPECT(gbc.readMem(0xcc11), 0x70);
        // 70 0297
        gbc.setState(0x2a0e, 0x1081, 0xa4c0, 0xc560, 0x9fd, 0xab69, 0x1, 0x1);
        gbc.writeMem(0x2a0e, { 0x70 });
        gbc.writeMem(0xab69, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x1081);
        EXPECT(gbc.pc(), 0x2a0f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xab69), 0xc5);
        // 70 0298
        gbc.setState(0xd096, 0xf8a4, 0x15a0, 0xadaf, 0x92f7, 0xe537, 0x1, 0x1);
        gbc.writeMem(0xd096, { 0x70 });
        gbc.writeMem(0xe537, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0xf8a4);
        EXPECT(gbc.pc(), 0xd097);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd096), 0x70);
        EXPECT(gbc.readMem(0xe537), 0xad);
        // 70 0299
        gbc.setState(0x9774, 0x6a1c, 0x3970, 0x16a5, 0xbf62, 0xda2d, 0x1, 0x0);
        gbc.writeMem(0x9774, { 0x70 });
        gbc.writeMem(0xda2d, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x6a1c);
        EXPECT(gbc.pc(), 0x9775);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9774), 0x70);
        EXPECT(gbc.readMem(0xda2d), 0x16);
        // 70 029C
        gbc.setState(0x92ff, 0x4ea8, 0xf610, 0x7dfa, 0xa001, 0xb54d, 0x0, 0x1);
        gbc.writeMem(0x92ff, { 0x70 });
        gbc.writeMem(0xb54d, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x4ea8);
        EXPECT(gbc.pc(), 0x9300);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x92ff), 0x70);
        EXPECT(gbc.readMem(0xb54d), 0x7d);
        // 70 029D
        gbc.setState(0xa71b, 0xd2b7, 0x23b0, 0xdbe9, 0xbac, 0x8823, 0x0, 0x0);
        gbc.writeMem(0x8823, { 0x0 });
        gbc.writeMem(0xa71b, { 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0xd2b7);
        EXPECT(gbc.pc(), 0xa71c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8823), 0xdb);
        EXPECT(gbc.readMem(0xa71b), 0x70);
        // 70 029F
        gbc.setState(0xacb1, 0xa707, 0x5ef0, 0x5c79, 0x8b6b, 0xa33b, 0x0, 0x0);
        gbc.writeMem(0xa33b, { 0x0 });
        gbc.writeMem(0xacb1, { 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0xa707);
        EXPECT(gbc.pc(), 0xacb2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa33b), 0x5c);
        EXPECT(gbc.readMem(0xacb1), 0x70);
        // 70 02A0
        gbc.setState(0xeef8, 0x349d, 0xe330, 0x817b, 0xe2ae, 0x8dab, 0x0, 0x1);
        gbc.writeMem(0x8dab, { 0x0 });
        gbc.writeMem(0xeef8, { 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x349d);
        EXPECT(gbc.pc(), 0xeef9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8dab), 0x81);
        EXPECT(gbc.readMem(0xeef8), 0x70);
        // 70 02A2
        gbc.setState(0x6d22, 0xee5b, 0x39b0, 0x3807, 0x30f2, 0xda71, 0x1, 0x1);
        gbc.writeMem(0x6d22, { 0x70 });
        gbc.writeMem(0xda71, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xee5b);
        EXPECT(gbc.pc(), 0x6d23);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xda71), 0x38);
        // 70 02A4
        gbc.setState(0x4468, 0xd649, 0x76e0, 0x67a9, 0x3e0a, 0x9891, 0x0, 0x1);
        gbc.writeMem(0x4468, { 0x70 });
        gbc.writeMem(0x9891, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0xd649);
        EXPECT(gbc.pc(), 0x4469);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9891), 0x67);
        // 70 02A5
        gbc.setState(0x2788, 0xa64e, 0x2230, 0xad83, 0xefa0, 0xf804, 0x0, 0x0);
        gbc.writeMem(0x2788, { 0x70 });
        gbc.writeMem(0xf804, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0xa64e);
        EXPECT(gbc.pc(), 0x2789);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf804), 0xad);
        // 70 02A8
        gbc.setState(0x2bda, 0xfb7a, 0x4140, 0x91c1, 0x430f, 0xa1e0, 0x1, 0x1);
        gbc.writeMem(0x2bda, { 0x70 });
        gbc.writeMem(0xa1e0, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0xfb7a);
        EXPECT(gbc.pc(), 0x2bdb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa1e0), 0x91);
        // 70 02A9
        gbc.setState(0xbee2, 0xf658, 0x4a80, 0x595d, 0x5c61, 0xfc24, 0x1, 0x1);
        gbc.writeMem(0xbee2, { 0x70 });
        gbc.writeMem(0xfc24, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0xf658);
        EXPECT(gbc.pc(), 0xbee3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbee2), 0x70);
        EXPECT(gbc.readMem(0xfc24), 0x59);
        // 70 02AA
        gbc.setState(0xc336, 0xc4d0, 0xe270, 0x43a5, 0x598, 0xb7e8, 0x0, 0x0);
        gbc.writeMem(0xb7e8, { 0x0 });
        gbc.writeMem(0xc336, { 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0xc4d0);
        EXPECT(gbc.pc(), 0xc337);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb7e8), 0x43);
        EXPECT(gbc.readMem(0xc336), 0x70);
        // 70 02AB
        gbc.setState(0xedcb, 0xc51, 0x3c50, 0x6c91, 0x9c46, 0xe62c, 0x0, 0x0);
        gbc.writeMem(0xe62c, { 0x0 });
        gbc.writeMem(0xedcb, { 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0xc51);
        EXPECT(gbc.pc(), 0xedcc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe62c), 0x6c);
        EXPECT(gbc.readMem(0xedcb), 0x70);
        // 70 02AC
        gbc.setState(0x1731, 0x6730, 0x5120, 0xb16b, 0xe89f, 0xeb7d, 0x1, 0x1);
        gbc.writeMem(0x1731, { 0x70 });
        gbc.writeMem(0xeb7d, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x6730);
        EXPECT(gbc.pc(), 0x1732);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeb7d), 0xb1);
        // 70 02AD
        gbc.setState(0x68dd, 0x4b2d, 0x24c0, 0x2694, 0x3dca, 0xe8b2, 0x0, 0x0);
        gbc.writeMem(0x68dd, { 0x70 });
        gbc.writeMem(0xe8b2, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x4b2d);
        EXPECT(gbc.pc(), 0x68de);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe8b2), 0x26);
        // 70 02AE
        gbc.setState(0xbbea, 0x8f2a, 0xe980, 0x7424, 0x9e9a, 0xacb2, 0x1, 0x0);
        gbc.writeMem(0xacb2, { 0x0 });
        gbc.writeMem(0xbbea, { 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x8f2a);
        EXPECT(gbc.pc(), 0xbbeb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xacb2), 0x74);
        EXPECT(gbc.readMem(0xbbea), 0x70);
        // 70 02B4
        gbc.setState(0xb5ab, 0x9991, 0x8b60, 0x954b, 0x620f, 0xe3bc, 0x0, 0x1);
        gbc.writeMem(0xb5ab, { 0x70 });
        gbc.writeMem(0xe3bc, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x9991);
        EXPECT(gbc.pc(), 0xb5ac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb5ab), 0x70);
        EXPECT(gbc.readMem(0xe3bc), 0x95);
        // 70 02B5
        gbc.setState(0x564d, 0xa00c, 0x9340, 0x5ff2, 0x4208, 0xe319, 0x1, 0x0);
        gbc.writeMem(0x564d, { 0x70 });
        gbc.writeMem(0xe319, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0xa00c);
        EXPECT(gbc.pc(), 0x564e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe319), 0x5f);
        // 70 02B9
        gbc.setState(0x7d3a, 0xef72, 0x360, 0xbc18, 0x6471, 0x8c7b, 0x1, 0x0);
        gbc.writeMem(0x7d3a, { 0x70 });
        gbc.writeMem(0x8c7b, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0xef72);
        EXPECT(gbc.pc(), 0x7d3b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c7b), 0xbc);
        // 70 02BA
        gbc.setState(0xe3f4, 0x9963, 0x4b30, 0xd476, 0x4618, 0xa3f0, 0x0, 0x0);
        gbc.writeMem(0xa3f0, { 0x0 });
        gbc.writeMem(0xe3f4, { 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x9963);
        EXPECT(gbc.pc(), 0xe3f5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa3f0), 0xd4);
        EXPECT(gbc.readMem(0xe3f4), 0x70);
        // 70 02BB
        gbc.setState(0xfe6, 0xb321, 0x7630, 0x9461, 0x8d85, 0xc041, 0x1, 0x0);
        gbc.writeMem(0xfe6, { 0x70 });
        gbc.writeMem(0xc041, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0xb321);
        EXPECT(gbc.pc(), 0xfe7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc041), 0x94);
        // 70 02BF
        gbc.setState(0x848c, 0x336a, 0x4180, 0x312, 0xd0c1, 0xdb63, 0x0, 0x1);
        gbc.writeMem(0x848c, { 0x70 });
        gbc.writeMem(0xdb63, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x336a);
        EXPECT(gbc.pc(), 0x848d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x848c), 0x70);
        EXPECT(gbc.readMem(0xdb63), 0x3);
        // 70 02C0
        gbc.setState(0xeece, 0xa5ec, 0x9c70, 0xa5f5, 0x7193, 0xd6ec, 0x0, 0x1);
        gbc.writeMem(0xd6ec, { 0x0 });
        gbc.writeMem(0xeece, { 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0xa5ec);
        EXPECT(gbc.pc(), 0xeecf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd6ec), 0xa5);
        EXPECT(gbc.readMem(0xeece), 0x70);
        // 70 02C1
        gbc.setState(0x8b3, 0xccec, 0xab0, 0xb2ee, 0xceec, 0x836e, 0x1, 0x1);
        gbc.writeMem(0x8b3, { 0x70 });
        gbc.writeMem(0x836e, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xccec);
        EXPECT(gbc.pc(), 0x8b4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x836e), 0xb2);
        // 70 02C2
        gbc.setState(0xbd1, 0xe773, 0x7f30, 0x8efb, 0x9408, 0xa956, 0x1, 0x0);
        gbc.writeMem(0xbd1, { 0x70 });
        gbc.writeMem(0xa956, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0xe773);
        EXPECT(gbc.pc(), 0xbd2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa956), 0x8e);
        // 70 02C3
        gbc.setState(0x9cdf, 0x561c, 0xcfa0, 0x1905, 0x80ed, 0xf289, 0x0, 0x0);
        gbc.writeMem(0x9cdf, { 0x70 });
        gbc.writeMem(0xf289, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x561c);
        EXPECT(gbc.pc(), 0x9ce0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9cdf), 0x70);
        EXPECT(gbc.readMem(0xf289), 0x19);
        // 70 02C4
        gbc.setState(0xabb6, 0x3b8c, 0x3720, 0xed8c, 0xa72d, 0xc274, 0x1, 0x1);
        gbc.writeMem(0xabb6, { 0x70 });
        gbc.writeMem(0xc274, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x3b8c);
        EXPECT(gbc.pc(), 0xabb7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xabb6), 0x70);
        EXPECT(gbc.readMem(0xc274), 0xed);
        // 70 02C7
        gbc.setState(0x6221, 0x9f16, 0x96a0, 0x3c6c, 0xab7c, 0xe64a, 0x1, 0x1);
        gbc.writeMem(0x6221, { 0x70 });
        gbc.writeMem(0xe64a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x9f16);
        EXPECT(gbc.pc(), 0x6222);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe64a), 0x3c);
        // 70 02CA
        gbc.setState(0x859c, 0x8f55, 0x7020, 0x12ca, 0xb980, 0xcd10, 0x1, 0x0);
        gbc.writeMem(0x859c, { 0x70 });
        gbc.writeMem(0xcd10, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x8f55);
        EXPECT(gbc.pc(), 0x859d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x859c), 0x70);
        EXPECT(gbc.readMem(0xcd10), 0x12);
        // 70 02CB
        gbc.setState(0x1517, 0x371, 0x1e20, 0xe2b9, 0xb2e8, 0xa876, 0x1, 0x0);
        gbc.writeMem(0x1517, { 0x70 });
        gbc.writeMem(0xa876, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x371);
        EXPECT(gbc.pc(), 0x1518);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa876), 0xe2);
        // 70 02CC
        gbc.setState(0xa1df, 0x8715, 0x5a60, 0xbe2c, 0xdc8b, 0xd4e0, 0x0, 0x0);
        gbc.writeMem(0xa1df, { 0x70 });
        gbc.writeMem(0xd4e0, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x8715);
        EXPECT(gbc.pc(), 0xa1e0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa1df), 0x70);
        EXPECT(gbc.readMem(0xd4e0), 0xbe);
        // 70 02CD
        gbc.setState(0x4e6e, 0x764e, 0xa820, 0x3d7f, 0xf241, 0x930d, 0x1, 0x0);
        gbc.writeMem(0x4e6e, { 0x70 });
        gbc.writeMem(0x930d, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x764e);
        EXPECT(gbc.pc(), 0x4e6f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x930d), 0x3d);
        // 70 02CE
        gbc.setState(0x79ff, 0x2e14, 0x3310, 0xd02b, 0x5889, 0xa2c8, 0x1, 0x1);
        gbc.writeMem(0x79ff, { 0x70 });
        gbc.writeMem(0xa2c8, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x2e14);
        EXPECT(gbc.pc(), 0x7a00);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa2c8), 0xd0);
        // 70 02CF
        gbc.setState(0x8e5, 0xe0b4, 0x37e0, 0x6957, 0x9c67, 0x91d1, 0x0, 0x0);
        gbc.writeMem(0x8e5, { 0x70 });
        gbc.writeMem(0x91d1, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0xe0b4);
        EXPECT(gbc.pc(), 0x8e6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x91d1), 0x69);
        // 70 02D0
        gbc.setState(0x8763, 0xa398, 0x4080, 0x5d2e, 0x6cd4, 0xa95a, 0x1, 0x1);
        gbc.writeMem(0x8763, { 0x70 });
        gbc.writeMem(0xa95a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0xa398);
        EXPECT(gbc.pc(), 0x8764);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8763), 0x70);
        EXPECT(gbc.readMem(0xa95a), 0x5d);
        // 70 02D4
        gbc.setState(0x8144, 0xa4c2, 0x9d30, 0x4068, 0xd951, 0xd92f, 0x1, 0x1);
        gbc.writeMem(0x8144, { 0x70 });
        gbc.writeMem(0xd92f, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xa4c2);
        EXPECT(gbc.pc(), 0x8145);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8144), 0x70);
        EXPECT(gbc.readMem(0xd92f), 0x40);
        // 70 02D6
        gbc.setState(0xe0, 0xefb8, 0x4280, 0xed85, 0xcdca, 0xc47c, 0x0, 0x0);
        gbc.writeMem(0xe0, { 0x70 });
        gbc.writeMem(0xc47c, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xefb8);
        EXPECT(gbc.pc(), 0xe1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc47c), 0xed);
        // 70 02D8
        gbc.setState(0x8aa5, 0x8d55, 0x3170, 0x7b0, 0xa65, 0x81ea, 0x0, 0x1);
        gbc.writeMem(0x81ea, { 0x0 });
        gbc.writeMem(0x8aa5, { 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x8d55);
        EXPECT(gbc.pc(), 0x8aa6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x81ea), 0x7);
        EXPECT(gbc.readMem(0x8aa5), 0x70);
        // 70 02D9
        gbc.setState(0x3f72, 0xe082, 0xc280, 0xd765, 0x8be0, 0xd8ff, 0x0, 0x0);
        gbc.writeMem(0x3f72, { 0x70 });
        gbc.writeMem(0xd8ff, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0xe082);
        EXPECT(gbc.pc(), 0x3f73);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd8ff), 0xd7);
        // 70 02DA
        gbc.setState(0x40e0, 0x92a0, 0x8350, 0xaedd, 0x10fb, 0x8d3b, 0x1, 0x0);
        gbc.writeMem(0x40e0, { 0x70 });
        gbc.writeMem(0x8d3b, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x92a0);
        EXPECT(gbc.pc(), 0x40e1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8d3b), 0xae);
        // 70 02DB
        gbc.setState(0xec93, 0x8ae3, 0xabe0, 0xe244, 0x7ff8, 0xc765, 0x0, 0x1);
        gbc.writeMem(0xc765, { 0x0 });
        gbc.writeMem(0xec93, { 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x8ae3);
        EXPECT(gbc.pc(), 0xec94);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc765), 0xe2);
        EXPECT(gbc.readMem(0xec93), 0x70);
        // 70 02E2
        gbc.setState(0x4d52, 0x249a, 0xef0, 0xa19a, 0x5e41, 0x9e93, 0x0, 0x1);
        gbc.writeMem(0x4d52, { 0x70 });
        gbc.writeMem(0x9e93, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x249a);
        EXPECT(gbc.pc(), 0x4d53);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9e93), 0xa1);
        // 70 02E3
        gbc.setState(0x603f, 0x804, 0xfb80, 0xfef1, 0x338f, 0xb5d8, 0x0, 0x0);
        gbc.writeMem(0x603f, { 0x70 });
        gbc.writeMem(0xb5d8, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x804);
        EXPECT(gbc.pc(), 0x6040);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb5d8), 0xfe);
        // 70 02E4
        gbc.setState(0xb268, 0x4784, 0x7730, 0x508f, 0x7673, 0xf979, 0x0, 0x0);
        gbc.writeMem(0xb268, { 0x70 });
        gbc.writeMem(0xf979, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x4784);
        EXPECT(gbc.pc(), 0xb269);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb268), 0x70);
        EXPECT(gbc.readMem(0xf979), 0x50);
        // 70 02E5
        gbc.setState(0xbcc, 0xebd8, 0xe6e0, 0x6abf, 0x7da8, 0x9ea3, 0x1, 0x1);
        gbc.writeMem(0xbcc, { 0x70 });
        gbc.writeMem(0x9ea3, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0xebd8);
        EXPECT(gbc.pc(), 0xbcd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9ea3), 0x6a);
        // 70 02E9
        gbc.setState(0x2160, 0x9bfb, 0x8d80, 0x8906, 0xdd8d, 0x9f3e, 0x1, 0x1);
        gbc.writeMem(0x2160, { 0x70 });
        gbc.writeMem(0x9f3e, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x9bfb);
        EXPECT(gbc.pc(), 0x2161);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9f3e), 0x89);
        // 70 02EC
        gbc.setState(0x2fc7, 0x152e, 0x11e0, 0x7216, 0x8fec, 0xa6bf, 0x1, 0x0);
        gbc.writeMem(0x2fc7, { 0x70 });
        gbc.writeMem(0xa6bf, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x152e);
        EXPECT(gbc.pc(), 0x2fc8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa6bf), 0x72);
        // 70 02EF
        gbc.setState(0xe0ab, 0xc366, 0x31e0, 0x65c, 0xe348, 0xc98b, 0x0, 0x1);
        gbc.writeMem(0xc98b, { 0x0 });
        gbc.writeMem(0xe0ab, { 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0xc366);
        EXPECT(gbc.pc(), 0xe0ac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc98b), 0x6);
        EXPECT(gbc.readMem(0xe0ab), 0x70);
        // 70 02F1
        gbc.setState(0x1265, 0x3c32, 0x43d0, 0x9760, 0x2a18, 0xbc84, 0x0, 0x0);
        gbc.writeMem(0x1265, { 0x70 });
        gbc.writeMem(0xbc84, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x3c32);
        EXPECT(gbc.pc(), 0x1266);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbc84), 0x97);
        // 70 02F3
        gbc.setState(0x8e78, 0x4fd8, 0x8360, 0x3783, 0x4b2a, 0xaead, 0x1, 0x1);
        gbc.writeMem(0x8e78, { 0x70 });
        gbc.writeMem(0xaead, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x4fd8);
        EXPECT(gbc.pc(), 0x8e79);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8e78), 0x70);
        EXPECT(gbc.readMem(0xaead), 0x37);
        // 70 02F4
        gbc.setState(0xa54f, 0x9cb7, 0xfad0, 0xf35c, 0x55af, 0xf6bd, 0x0, 0x1);
        gbc.writeMem(0xa54f, { 0x70 });
        gbc.writeMem(0xf6bd, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x9cb7);
        EXPECT(gbc.pc(), 0xa550);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa54f), 0x70);
        EXPECT(gbc.readMem(0xf6bd), 0xf3);
        // 70 02F8
        gbc.setState(0x67db, 0x8ffd, 0xf3a0, 0x9a8, 0x3e49, 0xdd41, 0x0, 0x0);
        gbc.writeMem(0x67db, { 0x70 });
        gbc.writeMem(0xdd41, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x8ffd);
        EXPECT(gbc.pc(), 0x67dc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdd41), 0x9);
        // 70 02FB
        gbc.setState(0x1245, 0x780b, 0x50c0, 0xe98e, 0x11fc, 0x8261, 0x0, 0x1);
        gbc.writeMem(0x1245, { 0x70 });
        gbc.writeMem(0x8261, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x780b);
        EXPECT(gbc.pc(), 0x1246);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8261), 0xe9);
        // 70 02FC
        gbc.setState(0x5848, 0xffa7, 0xa4c0, 0x6418, 0xe531, 0xb674, 0x1, 0x1);
        gbc.writeMem(0x5848, { 0x70 });
        gbc.writeMem(0xb674, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xffa7);
        EXPECT(gbc.pc(), 0x5849);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb674), 0x64);
        // 70 0303
        gbc.setState(0xa911, 0xf1e7, 0x1010, 0xa5d0, 0x8722, 0x973e, 0x1, 0x0);
        gbc.writeMem(0x973e, { 0x0 });
        gbc.writeMem(0xa911, { 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0xf1e7);
        EXPECT(gbc.pc(), 0xa912);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x973e), 0xa5);
        EXPECT(gbc.readMem(0xa911), 0x70);
        // 70 0305
        gbc.setState(0x525a, 0x2819, 0xd140, 0xfc52, 0x1c24, 0xabd3, 0x1, 0x1);
        gbc.writeMem(0x525a, { 0x70 });
        gbc.writeMem(0xabd3, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x2819);
        EXPECT(gbc.pc(), 0x525b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xabd3), 0xfc);
        // 70 0308
        gbc.setState(0xd2e7, 0x506d, 0x3220, 0xfa29, 0x441d, 0xabb8, 0x0, 0x0);
        gbc.writeMem(0xabb8, { 0x0 });
        gbc.writeMem(0xd2e7, { 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x506d);
        EXPECT(gbc.pc(), 0xd2e8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xabb8), 0xfa);
        EXPECT(gbc.readMem(0xd2e7), 0x70);
        // 70 030A
        gbc.setState(0x9bf8, 0x9c10, 0x2440, 0xaf89, 0x3007, 0xf24c, 0x0, 0x0);
        gbc.writeMem(0x9bf8, { 0x70 });
        gbc.writeMem(0xf24c, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x9c10);
        EXPECT(gbc.pc(), 0x9bf9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9bf8), 0x70);
        EXPECT(gbc.readMem(0xf24c), 0xaf);
        // 70 030B
        gbc.setState(0xd5b5, 0xe74a, 0xaa40, 0x5ab0, 0xaf8b, 0xd5d7, 0x1, 0x0);
        gbc.writeMem(0xd5b5, { 0x70 });
        gbc.writeMem(0xd5d7, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0xe74a);
        EXPECT(gbc.pc(), 0xd5b6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd5b5), 0x70);
        EXPECT(gbc.readMem(0xd5d7), 0x5a);
        // 70 030E
        gbc.setState(0x9a27, 0x9deb, 0x3720, 0xb154, 0x9e10, 0xf4f0, 0x0, 0x0);
        gbc.writeMem(0x9a27, { 0x70 });
        gbc.writeMem(0xf4f0, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x9deb);
        EXPECT(gbc.pc(), 0x9a28);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9a27), 0x70);
        EXPECT(gbc.readMem(0xf4f0), 0xb1);
        // 70 0312
        gbc.setState(0x9b81, 0x6c8, 0x8ec0, 0x3a47, 0x5013, 0xbb88, 0x1, 0x1);
        gbc.writeMem(0x9b81, { 0x70 });
        gbc.writeMem(0xbb88, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x6c8);
        EXPECT(gbc.pc(), 0x9b82);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9b81), 0x70);
        EXPECT(gbc.readMem(0xbb88), 0x3a);
        // 70 0313
        gbc.setState(0xc596, 0x9e2a, 0x7420, 0x2193, 0x9d28, 0xda27, 0x0, 0x1);
        gbc.writeMem(0xc596, { 0x70 });
        gbc.writeMem(0xda27, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x9e2a);
        EXPECT(gbc.pc(), 0xc597);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc596), 0x70);
        EXPECT(gbc.readMem(0xda27), 0x21);
        // 70 0317
        gbc.setState(0x6061, 0xb699, 0x8b90, 0xd73e, 0x9cff, 0xb20d, 0x0, 0x0);
        gbc.writeMem(0x6061, { 0x70 });
        gbc.writeMem(0xb20d, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0xb699);
        EXPECT(gbc.pc(), 0x6062);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb20d), 0xd7);
        // 70 0318
        gbc.setState(0x90a0, 0x3a1d, 0x8ee0, 0x1905, 0x2a4f, 0xd473, 0x1, 0x1);
        gbc.writeMem(0x90a0, { 0x70 });
        gbc.writeMem(0xd473, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x3a1d);
        EXPECT(gbc.pc(), 0x90a1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x90a0), 0x70);
        EXPECT(gbc.readMem(0xd473), 0x19);
        // 70 031A
        gbc.setState(0x2b72, 0x2f02, 0xb060, 0xcee6, 0xda97, 0xab89, 0x1, 0x1);
        gbc.writeMem(0x2b72, { 0x70 });
        gbc.writeMem(0xab89, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x2f02);
        EXPECT(gbc.pc(), 0x2b73);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xab89), 0xce);
        // 70 031B
        gbc.setState(0x394b, 0xae51, 0xb930, 0xf9fd, 0x77c7, 0xf645, 0x0, 0x0);
        gbc.writeMem(0x394b, { 0x70 });
        gbc.writeMem(0xf645, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0xae51);
        EXPECT(gbc.pc(), 0x394c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf645), 0xf9);
        // 70 031D
        gbc.setState(0x591, 0xda30, 0x2230, 0x79, 0xffd7, 0xa0d5, 0x1, 0x0);
        gbc.writeMem(0x591, { 0x70 });
        gbc.writeMem(0xa0d5, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0xda30);
        EXPECT(gbc.pc(), 0x592);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa0d5), 0x0);
        // 70 031F
        gbc.setState(0x1d70, 0xbce8, 0x8d0, 0xc8fd, 0x2ebd, 0x9541, 0x0, 0x0);
        gbc.writeMem(0x1d70, { 0x70 });
        gbc.writeMem(0x9541, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0xbce8);
        EXPECT(gbc.pc(), 0x1d71);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9541), 0xc8);
        // 70 0320
        gbc.setState(0xac35, 0xc1fc, 0x42d0, 0x3768, 0x1e74, 0xab40, 0x0, 0x1);
        gbc.writeMem(0xab40, { 0x0 });
        gbc.writeMem(0xac35, { 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0xc1fc);
        EXPECT(gbc.pc(), 0xac36);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xab40), 0x37);
        EXPECT(gbc.readMem(0xac35), 0x70);
        // 70 0321
        gbc.setState(0x2c27, 0x3861, 0x6b90, 0x7d94, 0xc7fd, 0xef5c, 0x1, 0x1);
        gbc.writeMem(0x2c27, { 0x70 });
        gbc.writeMem(0xef5c, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x3861);
        EXPECT(gbc.pc(), 0x2c28);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xef5c), 0x7d);
        // 70 0327
        gbc.setState(0x590a, 0xa9a3, 0x7f0, 0xbdb, 0x4fe2, 0xcf06, 0x1, 0x1);
        gbc.writeMem(0x590a, { 0x70 });
        gbc.writeMem(0xcf06, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0xa9a3);
        EXPECT(gbc.pc(), 0x590b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcf06), 0xb);
        // 70 0329
        gbc.setState(0xaf52, 0xdf55, 0x89c0, 0xbebd, 0xe98d, 0x9d0a, 0x0, 0x0);
        gbc.writeMem(0x9d0a, { 0x0 });
        gbc.writeMem(0xaf52, { 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0xdf55);
        EXPECT(gbc.pc(), 0xaf53);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9d0a), 0xbe);
        EXPECT(gbc.readMem(0xaf52), 0x70);
        // 70 032D
        gbc.setState(0x5c22, 0x44d0, 0x2490, 0xa230, 0x3495, 0xcaee, 0x0, 0x1);
        gbc.writeMem(0x5c22, { 0x70 });
        gbc.writeMem(0xcaee, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x44d0);
        EXPECT(gbc.pc(), 0x5c23);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcaee), 0xa2);
        // 70 032F
        gbc.setState(0xb9b0, 0xa00f, 0x6470, 0x1067, 0xd71c, 0xa807, 0x1, 0x0);
        gbc.writeMem(0xa807, { 0x0 });
        gbc.writeMem(0xb9b0, { 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xa00f);
        EXPECT(gbc.pc(), 0xb9b1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa807), 0x10);
        EXPECT(gbc.readMem(0xb9b0), 0x70);
        // 70 0330
        gbc.setState(0xb8f8, 0x965a, 0xef80, 0x8cff, 0xa14, 0x844b, 0x1, 0x0);
        gbc.writeMem(0x844b, { 0x0 });
        gbc.writeMem(0xb8f8, { 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x965a);
        EXPECT(gbc.pc(), 0xb8f9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x844b), 0x8c);
        EXPECT(gbc.readMem(0xb8f8), 0x70);
        // 70 0335
        gbc.setState(0x31d9, 0xae49, 0x1040, 0x384, 0xcee8, 0x82c5, 0x1, 0x0);
        gbc.writeMem(0x31d9, { 0x70 });
        gbc.writeMem(0x82c5, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0xae49);
        EXPECT(gbc.pc(), 0x31da);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x82c5), 0x3);
        // 70 0337
        gbc.setState(0xe36a, 0xff7a, 0x5390, 0xe434, 0x6383, 0xd156, 0x0, 0x1);
        gbc.writeMem(0xd156, { 0x0 });
        gbc.writeMem(0xe36a, { 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0xff7a);
        EXPECT(gbc.pc(), 0xe36b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd156), 0xe4);
        EXPECT(gbc.readMem(0xe36a), 0x70);
        // 70 0339
        gbc.setState(0x7677, 0xcecd, 0xf630, 0xceb5, 0x425f, 0xfbab, 0x1, 0x0);
        gbc.writeMem(0x7677, { 0x70 });
        gbc.writeMem(0xfbab, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xcecd);
        EXPECT(gbc.pc(), 0x7678);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xfbab), 0xce);
        // 70 033C
        gbc.setState(0x459c, 0xe92b, 0x9200, 0x2dcd, 0x7ab5, 0xf8db, 0x0, 0x1);
        gbc.writeMem(0x459c, { 0x70 });
        gbc.writeMem(0xf8db, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0xe92b);
        EXPECT(gbc.pc(), 0x459d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf8db), 0x2d);
        // 70 033D
        gbc.setState(0x4bb5, 0xf324, 0x59e0, 0xaa04, 0xf1dd, 0xb288, 0x1, 0x0);
        gbc.writeMem(0x4bb5, { 0x70 });
        gbc.writeMem(0xb288, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0xf324);
        EXPECT(gbc.pc(), 0x4bb6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb288), 0xaa);
        // 70 033F
        gbc.setState(0x631a, 0x7010, 0xcb80, 0xd111, 0xa0e6, 0xf729, 0x1, 0x1);
        gbc.writeMem(0x631a, { 0x70 });
        gbc.writeMem(0xf729, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x7010);
        EXPECT(gbc.pc(), 0x631b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf729), 0xd1);
        // 70 0343
        gbc.setState(0x1a24, 0xa7b4, 0xa4b0, 0x4e4f, 0xea10, 0xe353, 0x0, 0x0);
        gbc.writeMem(0x1a24, { 0x70 });
        gbc.writeMem(0xe353, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0xa7b4);
        EXPECT(gbc.pc(), 0x1a25);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe353), 0x4e);
        // 70 0345
        gbc.setState(0x2a32, 0xdd36, 0xd540, 0x2aee, 0x719f, 0x8e66, 0x0, 0x1);
        gbc.writeMem(0x2a32, { 0x70 });
        gbc.writeMem(0x8e66, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0xdd36);
        EXPECT(gbc.pc(), 0x2a33);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8e66), 0x2a);
        // 70 0346
        gbc.setState(0xe5a3, 0xf0ca, 0x8550, 0x6363, 0x7148, 0x9908, 0x1, 0x1);
        gbc.writeMem(0x9908, { 0x0 });
        gbc.writeMem(0xe5a3, { 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0xf0ca);
        EXPECT(gbc.pc(), 0xe5a4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9908), 0x63);
        EXPECT(gbc.readMem(0xe5a3), 0x70);
        // 70 0347
        gbc.setState(0xe281, 0x8e74, 0xfa30, 0x5f53, 0xf4b6, 0xd025, 0x1, 0x1);
        gbc.writeMem(0xd025, { 0x0 });
        gbc.writeMem(0xe281, { 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x8e74);
        EXPECT(gbc.pc(), 0xe282);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd025), 0x5f);
        EXPECT(gbc.readMem(0xe281), 0x70);
        // 70 034A
        gbc.setState(0x1e72, 0xf9a1, 0xcd80, 0x8305, 0xbe8c, 0xa86e, 0x0, 0x0);
        gbc.writeMem(0x1e72, { 0x70 });
        gbc.writeMem(0xa86e, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xf9a1);
        EXPECT(gbc.pc(), 0x1e73);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa86e), 0x83);
        // 70 034B
        gbc.setState(0xe57c, 0x35d8, 0xd4c0, 0xed17, 0xd0ba, 0xd9e4, 0x1, 0x1);
        gbc.writeMem(0xd9e4, { 0x0 });
        gbc.writeMem(0xe57c, { 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x35d8);
        EXPECT(gbc.pc(), 0xe57d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd9e4), 0xed);
        EXPECT(gbc.readMem(0xe57c), 0x70);
        // 70 034C
        gbc.setState(0x1866, 0x7e56, 0x1b30, 0xf7a5, 0xc709, 0xabd3, 0x0, 0x1);
        gbc.writeMem(0x1866, { 0x70 });
        gbc.writeMem(0xabd3, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x7e56);
        EXPECT(gbc.pc(), 0x1867);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xabd3), 0xf7);
        // 70 034F
        gbc.setState(0x3c70, 0x3f4, 0xb1b0, 0x8f22, 0x7059, 0xb53a, 0x0, 0x0);
        gbc.writeMem(0x3c70, { 0x70 });
        gbc.writeMem(0xb53a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x3f4);
        EXPECT(gbc.pc(), 0x3c71);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb53a), 0x8f);
        // 70 0351
        gbc.setState(0x4856, 0xb379, 0xf270, 0xb29c, 0x7fbb, 0xac8c, 0x1, 0x0);
        gbc.writeMem(0x4856, { 0x70 });
        gbc.writeMem(0xac8c, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0xb379);
        EXPECT(gbc.pc(), 0x4857);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xac8c), 0xb2);
        // 70 0352
        gbc.setState(0x9d63, 0xc309, 0xe0f0, 0x47b, 0xb46c, 0xc93b, 0x0, 0x0);
        gbc.writeMem(0x9d63, { 0x70 });
        gbc.writeMem(0xc93b, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0xc309);
        EXPECT(gbc.pc(), 0x9d64);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9d63), 0x70);
        EXPECT(gbc.readMem(0xc93b), 0x4);
        // 70 0353
        gbc.setState(0x8f52, 0x2b36, 0x3100, 0x7cbb, 0x256, 0xea2a, 0x0, 0x0);
        gbc.writeMem(0x8f52, { 0x70 });
        gbc.writeMem(0xea2a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x2b36);
        EXPECT(gbc.pc(), 0x8f53);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8f52), 0x70);
        EXPECT(gbc.readMem(0xea2a), 0x7c);
        // 70 0355
        gbc.setState(0x8b92, 0x4687, 0x49f0, 0xa150, 0x2469, 0xb4eb, 0x0, 0x1);
        gbc.writeMem(0x8b92, { 0x70 });
        gbc.writeMem(0xb4eb, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x4687);
        EXPECT(gbc.pc(), 0x8b93);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b92), 0x70);
        EXPECT(gbc.readMem(0xb4eb), 0xa1);
        // 70 0356
        gbc.setState(0x8f31, 0xc3d8, 0xbd20, 0xb3bd, 0x2630, 0xa357, 0x1, 0x1);
        gbc.writeMem(0x8f31, { 0x70 });
        gbc.writeMem(0xa357, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0xc3d8);
        EXPECT(gbc.pc(), 0x8f32);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8f31), 0x70);
        EXPECT(gbc.readMem(0xa357), 0xb3);
        // 70 0359
        gbc.setState(0x4a03, 0xe5fd, 0x9ef0, 0x907c, 0xce9b, 0x8817, 0x0, 0x0);
        gbc.writeMem(0x4a03, { 0x70 });
        gbc.writeMem(0x8817, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0xe5fd);
        EXPECT(gbc.pc(), 0x4a04);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8817), 0x90);
        // 70 035B
        gbc.setState(0x238, 0x6eaa, 0x5e10, 0x2a99, 0xda8d, 0xc041, 0x0, 0x1);
        gbc.writeMem(0x238, { 0x70 });
        gbc.writeMem(0xc041, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x6eaa);
        EXPECT(gbc.pc(), 0x239);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc041), 0x2a);
        // 70 035C
        gbc.setState(0x61f3, 0xe726, 0x7d0, 0xcb07, 0x6630, 0xbf2d, 0x0, 0x1);
        gbc.writeMem(0x61f3, { 0x70 });
        gbc.writeMem(0xbf2d, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0xe726);
        EXPECT(gbc.pc(), 0x61f4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbf2d), 0xcb);
        // 70 035E
        gbc.setState(0x9152, 0x8f3e, 0xfe10, 0xac0b, 0xb391, 0x974d, 0x0, 0x0);
        gbc.writeMem(0x9152, { 0x70 });
        gbc.writeMem(0x974d, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x8f3e);
        EXPECT(gbc.pc(), 0x9153);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9152), 0x70);
        EXPECT(gbc.readMem(0x974d), 0xac);
        // 70 0360
        gbc.setState(0x5561, 0x4612, 0xa5d0, 0x6bc2, 0xca16, 0xe091, 0x1, 0x1);
        gbc.writeMem(0x5561, { 0x70 });
        gbc.writeMem(0xe091, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x4612);
        EXPECT(gbc.pc(), 0x5562);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe091), 0x6b);
        // 70 0361
        gbc.setState(0x1579, 0x3e5c, 0x1bd0, 0x47aa, 0x3865, 0xfc12, 0x0, 0x1);
        gbc.writeMem(0x1579, { 0x70 });
        gbc.writeMem(0xfc12, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x3e5c);
        EXPECT(gbc.pc(), 0x157a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xfc12), 0x47);
        // 70 0366
        gbc.setState(0x3030, 0x8d46, 0xd6a0, 0xc0c7, 0x7ca8, 0x80d1, 0x0, 0x1);
        gbc.writeMem(0x3030, { 0x70 });
        gbc.writeMem(0x80d1, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x8d46);
        EXPECT(gbc.pc(), 0x3031);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x80d1), 0xc0);
        // 70 0367
        gbc.setState(0x2516, 0x8f8, 0x6990, 0x9f4a, 0xe764, 0xcf05, 0x1, 0x1);
        gbc.writeMem(0x2516, { 0x70 });
        gbc.writeMem(0xcf05, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x8f8);
        EXPECT(gbc.pc(), 0x2517);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcf05), 0x9f);
        // 70 0369
        gbc.setState(0xb005, 0x1834, 0x8e00, 0xd2f4, 0x5263, 0x9b8e, 0x1, 0x0);
        gbc.writeMem(0x9b8e, { 0x0 });
        gbc.writeMem(0xb005, { 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x1834);
        EXPECT(gbc.pc(), 0xb006);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9b8e), 0xd2);
        EXPECT(gbc.readMem(0xb005), 0x70);
        // 70 036C
        gbc.setState(0x58f1, 0x904d, 0x3710, 0x4eda, 0xb09, 0x9c30, 0x0, 0x1);
        gbc.writeMem(0x58f1, { 0x70 });
        gbc.writeMem(0x9c30, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x904d);
        EXPECT(gbc.pc(), 0x58f2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9c30), 0x4e);
        // 70 036D
        gbc.setState(0x1e9c, 0x3f11, 0xd5b0, 0x8dc1, 0xd693, 0xd136, 0x1, 0x1);
        gbc.writeMem(0x1e9c, { 0x70 });
        gbc.writeMem(0xd136, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x3f11);
        EXPECT(gbc.pc(), 0x1e9d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd136), 0x8d);
        // 70 036E
        gbc.setState(0x4495, 0xd41c, 0xa30, 0xd074, 0x368b, 0xb432, 0x1, 0x0);
        gbc.writeMem(0x4495, { 0x70 });
        gbc.writeMem(0xb432, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xd41c);
        EXPECT(gbc.pc(), 0x4496);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb432), 0xd0);
        // 70 036F
        gbc.setState(0x1812, 0x1c1b, 0xdf0, 0xcd05, 0xaa51, 0xe0e5, 0x1, 0x0);
        gbc.writeMem(0x1812, { 0x70 });
        gbc.writeMem(0xe0e5, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x1c1b);
        EXPECT(gbc.pc(), 0x1813);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe0e5), 0xcd);
        // 70 0370
        gbc.setState(0xc96, 0x445e, 0x74f0, 0x5e59, 0x46c6, 0xdbf0, 0x1, 0x0);
        gbc.writeMem(0xc96, { 0x70 });
        gbc.writeMem(0xdbf0, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x445e);
        EXPECT(gbc.pc(), 0xc97);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdbf0), 0x5e);
        // 70 0371
        gbc.setState(0x80bd, 0x875f, 0x8e90, 0x1ad3, 0xff51, 0xb9de, 0x1, 0x0);
        gbc.writeMem(0x80bd, { 0x70 });
        gbc.writeMem(0xb9de, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x875f);
        EXPECT(gbc.pc(), 0x80be);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x80bd), 0x70);
        EXPECT(gbc.readMem(0xb9de), 0x1a);
        // 70 0372
        gbc.setState(0x539b, 0xd282, 0x2040, 0x287c, 0xe13e, 0xc30e, 0x0, 0x0);
        gbc.writeMem(0x539b, { 0x70 });
        gbc.writeMem(0xc30e, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0xd282);
        EXPECT(gbc.pc(), 0x539c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc30e), 0x28);
        // 70 0375
        gbc.setState(0xcc3, 0x133, 0x50b0, 0x3b7d, 0x2f27, 0xfde3, 0x1, 0x1);
        gbc.writeMem(0xcc3, { 0x70 });
        gbc.writeMem(0xfde3, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x133);
        EXPECT(gbc.pc(), 0xcc4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xfde3), 0x3b);
        // 70 0377
        gbc.setState(0x5a7b, 0x8193, 0x7830, 0x905, 0xa9dc, 0xb730, 0x0, 0x0);
        gbc.writeMem(0x5a7b, { 0x70 });
        gbc.writeMem(0xb730, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x8193);
        EXPECT(gbc.pc(), 0x5a7c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb730), 0x9);
        // 70 0379
        gbc.setState(0x2476, 0x9209, 0xb2e0, 0x562e, 0xdaa0, 0xa641, 0x1, 0x1);
        gbc.writeMem(0x2476, { 0x70 });
        gbc.writeMem(0xa641, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x9209);
        EXPECT(gbc.pc(), 0x2477);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa641), 0x56);
        // 70 037A
        gbc.setState(0xbbcb, 0xc8f9, 0x6830, 0xb306, 0x67a, 0xefca, 0x1, 0x0);
        gbc.writeMem(0xbbcb, { 0x70 });
        gbc.writeMem(0xefca, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0xc8f9);
        EXPECT(gbc.pc(), 0xbbcc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbbcb), 0x70);
        EXPECT(gbc.readMem(0xefca), 0xb3);
        // 70 037B
        gbc.setState(0x77fb, 0x169d, 0xb40, 0x3d12, 0x3d5d, 0xd598, 0x0, 0x1);
        gbc.writeMem(0x77fb, { 0x70 });
        gbc.writeMem(0xd598, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x169d);
        EXPECT(gbc.pc(), 0x77fc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd598), 0x3d);
        // 70 037C
        gbc.setState(0x3b29, 0x5e8d, 0x54b0, 0x49f, 0x3ce6, 0xfa3a, 0x0, 0x1);
        gbc.writeMem(0x3b29, { 0x70 });
        gbc.writeMem(0xfa3a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x5e8d);
        EXPECT(gbc.pc(), 0x3b2a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xfa3a), 0x4);
        // 70 037D
        gbc.setState(0x4229, 0xd8d8, 0x5290, 0x772c, 0x796a, 0xfc42, 0x0, 0x1);
        gbc.writeMem(0x4229, { 0x70 });
        gbc.writeMem(0xfc42, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0xd8d8);
        EXPECT(gbc.pc(), 0x422a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xfc42), 0x77);
        // 70 037E
        gbc.setState(0x5d63, 0x454e, 0xa800, 0xb058, 0xa4c4, 0xfc16, 0x0, 0x0);
        gbc.writeMem(0x5d63, { 0x70 });
        gbc.writeMem(0xfc16, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x454e);
        EXPECT(gbc.pc(), 0x5d64);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xfc16), 0xb0);
        // 70 037F
        gbc.setState(0x9994, 0xf5c1, 0xed10, 0xeac, 0x581a, 0xb035, 0x0, 0x0);
        gbc.writeMem(0x9994, { 0x70 });
        gbc.writeMem(0xb035, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0xf5c1);
        EXPECT(gbc.pc(), 0x9995);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9994), 0x70);
        EXPECT(gbc.readMem(0xb035), 0xe);
        // 70 0382
        gbc.setState(0x5b50, 0x9e11, 0x3030, 0x4603, 0xe64d, 0xe086, 0x1, 0x0);
        gbc.writeMem(0x5b50, { 0x70 });
        gbc.writeMem(0xe086, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x9e11);
        EXPECT(gbc.pc(), 0x5b51);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe086), 0x46);
        // 70 0384
        gbc.setState(0x8ab8, 0x4fdb, 0x4bc0, 0x8d35, 0x4885, 0xa4be, 0x1, 0x1);
        gbc.writeMem(0x8ab8, { 0x70 });
        gbc.writeMem(0xa4be, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x4fdb);
        EXPECT(gbc.pc(), 0x8ab9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ab8), 0x70);
        EXPECT(gbc.readMem(0xa4be), 0x8d);
        // 70 0386
        gbc.setState(0x62a0, 0xa041, 0x2480, 0x1344, 0x981, 0xa8df, 0x1, 0x0);
        gbc.writeMem(0x62a0, { 0x70 });
        gbc.writeMem(0xa8df, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0xa041);
        EXPECT(gbc.pc(), 0x62a1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa8df), 0x13);
        // 70 0388
        gbc.setState(0x332c, 0xb303, 0xca80, 0x45f8, 0x798e, 0xa5e2, 0x0, 0x0);
        gbc.writeMem(0x332c, { 0x70 });
        gbc.writeMem(0xa5e2, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0xb303);
        EXPECT(gbc.pc(), 0x332d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa5e2), 0x45);
        // 70 0389
        gbc.setState(0x7e5f, 0x29fa, 0xac40, 0x28f8, 0x1364, 0x8065, 0x1, 0x0);
        gbc.writeMem(0x7e5f, { 0x70 });
        gbc.writeMem(0x8065, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x29fa);
        EXPECT(gbc.pc(), 0x7e60);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8065), 0x28);
        // 70 038B
        gbc.setState(0x202f, 0x1f55, 0x22c0, 0x75ea, 0x73e0, 0xff86, 0x0, 0x0);
        gbc.writeMem(0x202f, { 0x70 });
        gbc.writeMem(0xff86, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x1f55);
        EXPECT(gbc.pc(), 0x2030);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff86), 0x75);
        // 70 0392
        gbc.setState(0x2610, 0x61f7, 0xf390, 0x4525, 0x86d4, 0xd50a, 0x1, 0x0);
        gbc.writeMem(0x2610, { 0x70 });
        gbc.writeMem(0xd50a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x61f7);
        EXPECT(gbc.pc(), 0x2611);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd50a), 0x45);
        // 70 0393
        gbc.setState(0xcf96, 0x57bd, 0xc300, 0x21f9, 0x2c81, 0xad52, 0x1, 0x1);
        gbc.writeMem(0xad52, { 0x0 });
        gbc.writeMem(0xcf96, { 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x57bd);
        EXPECT(gbc.pc(), 0xcf97);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xad52), 0x21);
        EXPECT(gbc.readMem(0xcf96), 0x70);
        // 70 0394
        gbc.setState(0xc0f1, 0x379f, 0x97f0, 0xc4f4, 0xbc46, 0xc664, 0x0, 0x1);
        gbc.writeMem(0xc0f1, { 0x70 });
        gbc.writeMem(0xc664, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x379f);
        EXPECT(gbc.pc(), 0xc0f2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc0f1), 0x70);
        EXPECT(gbc.readMem(0xc664), 0xc4);
        // 70 0398
        gbc.setState(0xd5f8, 0x5141, 0xcca0, 0x85b1, 0x4613, 0x80d9, 0x1, 0x0);
        gbc.writeMem(0x80d9, { 0x0 });
        gbc.writeMem(0xd5f8, { 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x5141);
        EXPECT(gbc.pc(), 0xd5f9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x80d9), 0x85);
        EXPECT(gbc.readMem(0xd5f8), 0x70);
        // 70 039A
        gbc.setState(0x2216, 0xf7f1, 0xf080, 0x5697, 0x6095, 0xe542, 0x0, 0x0);
        gbc.writeMem(0x2216, { 0x70 });
        gbc.writeMem(0xe542, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0xf7f1);
        EXPECT(gbc.pc(), 0x2217);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe542), 0x56);
        // 70 039B
        gbc.setState(0xdade, 0x4afe, 0xaf00, 0xb339, 0xe35c, 0xc988, 0x1, 0x1);
        gbc.writeMem(0xc988, { 0x0 });
        gbc.writeMem(0xdade, { 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x4afe);
        EXPECT(gbc.pc(), 0xdadf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc988), 0xb3);
        EXPECT(gbc.readMem(0xdade), 0x70);
        // 70 03A5
        gbc.setState(0x8c78, 0xbf8e, 0xb8e0, 0xf899, 0x6b18, 0xc582, 0x1, 0x0);
        gbc.writeMem(0x8c78, { 0x70 });
        gbc.writeMem(0xc582, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0xbf8e);
        EXPECT(gbc.pc(), 0x8c79);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c78), 0x70);
        EXPECT(gbc.readMem(0xc582), 0xf8);
        // 70 03A6
        gbc.setState(0xe06c, 0x6741, 0x23e0, 0xa956, 0x2756, 0xe5a5, 0x1, 0x1);
        gbc.writeMem(0xe06c, { 0x70 });
        gbc.writeMem(0xe5a5, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x6741);
        EXPECT(gbc.pc(), 0xe06d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe06c), 0x70);
        EXPECT(gbc.readMem(0xe5a5), 0xa9);
        // 70 03A7
        gbc.setState(0x184d, 0xff89, 0x57b0, 0xba6, 0x9a13, 0xeace, 0x1, 0x1);
        gbc.writeMem(0x184d, { 0x70 });
        gbc.writeMem(0xeace, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0xff89);
        EXPECT(gbc.pc(), 0x184e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeace), 0xb);
        // 70 03A8
        gbc.setState(0x9c65, 0x7a2c, 0x6660, 0x6118, 0x2e9a, 0xcc71, 0x1, 0x0);
        gbc.writeMem(0x9c65, { 0x70 });
        gbc.writeMem(0xcc71, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x7a2c);
        EXPECT(gbc.pc(), 0x9c66);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9c65), 0x70);
        EXPECT(gbc.readMem(0xcc71), 0x61);
        // 70 03A9
        gbc.setState(0x3023, 0xfd2d, 0x8ce0, 0xf190, 0x2bda, 0xe8ed, 0x1, 0x0);
        gbc.writeMem(0x3023, { 0x70 });
        gbc.writeMem(0xe8ed, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0xfd2d);
        EXPECT(gbc.pc(), 0x3024);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe8ed), 0xf1);
        // 70 03AA
        gbc.setState(0xdcb9, 0x2ad7, 0xf940, 0x3402, 0x39de, 0xbe87, 0x0, 0x0);
        gbc.writeMem(0xbe87, { 0x0 });
        gbc.writeMem(0xdcb9, { 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x2ad7);
        EXPECT(gbc.pc(), 0xdcba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbe87), 0x34);
        EXPECT(gbc.readMem(0xdcb9), 0x70);
        // 70 03AB
        gbc.setState(0x8c4f, 0x4613, 0x3430, 0x2732, 0xd3b4, 0xc9d4, 0x0, 0x1);
        gbc.writeMem(0x8c4f, { 0x70 });
        gbc.writeMem(0xc9d4, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x4613);
        EXPECT(gbc.pc(), 0x8c50);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8c4f), 0x70);
        EXPECT(gbc.readMem(0xc9d4), 0x27);
        // 70 03AF
        gbc.setState(0x6bbf, 0xc0dc, 0xef70, 0xbd9b, 0xe1c9, 0xd4e1, 0x1, 0x0);
        gbc.writeMem(0x6bbf, { 0x70 });
        gbc.writeMem(0xd4e1, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xc0dc);
        EXPECT(gbc.pc(), 0x6bc0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd4e1), 0xbd);
        // 70 03B2
        gbc.setState(0x7adb, 0x8e8a, 0xd090, 0x5449, 0x6a3, 0xd845, 0x1, 0x1);
        gbc.writeMem(0x7adb, { 0x70 });
        gbc.writeMem(0xd845, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x8e8a);
        EXPECT(gbc.pc(), 0x7adc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd845), 0x54);
        // 70 03B4
        gbc.setState(0x7847, 0xde50, 0x9e00, 0x500a, 0x1555, 0xda59, 0x0, 0x1);
        gbc.writeMem(0x7847, { 0x70 });
        gbc.writeMem(0xda59, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0xde50);
        EXPECT(gbc.pc(), 0x7848);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xda59), 0x50);
        // 70 03B6
        gbc.setState(0xd850, 0xfd28, 0xfdc0, 0x5913, 0x35c, 0x8366, 0x0, 0x1);
        gbc.writeMem(0x8366, { 0x0 });
        gbc.writeMem(0xd850, { 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0xfd28);
        EXPECT(gbc.pc(), 0xd851);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8366), 0x59);
        EXPECT(gbc.readMem(0xd850), 0x70);
        // 70 03B7
        gbc.setState(0xa7e5, 0xb288, 0x8a80, 0x6b14, 0x71af, 0xc7a4, 0x0, 0x0);
        gbc.writeMem(0xa7e5, { 0x70 });
        gbc.writeMem(0xc7a4, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0xb288);
        EXPECT(gbc.pc(), 0xa7e6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa7e5), 0x70);
        EXPECT(gbc.readMem(0xc7a4), 0x6b);
        // 70 03B8
        gbc.setState(0xeccd, 0x7733, 0x3130, 0xab87, 0xe8a, 0xb1f4, 0x1, 0x1);
        gbc.writeMem(0xb1f4, { 0x0 });
        gbc.writeMem(0xeccd, { 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x7733);
        EXPECT(gbc.pc(), 0xecce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb1f4), 0xab);
        EXPECT(gbc.readMem(0xeccd), 0x70);
        // 70 03BA
        gbc.setState(0xd2dd, 0x1767, 0x1e60, 0xd1cf, 0xa535, 0xf69a, 0x0, 0x1);
        gbc.writeMem(0xd2dd, { 0x70 });
        gbc.writeMem(0xf69a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x1767);
        EXPECT(gbc.pc(), 0xd2de);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd2dd), 0x70);
        EXPECT(gbc.readMem(0xf69a), 0xd1);
        // 70 03BF
        gbc.setState(0x645e, 0x9da2, 0x1ac0, 0xda6b, 0xf377, 0xb5fe, 0x1, 0x0);
        gbc.writeMem(0x645e, { 0x70 });
        gbc.writeMem(0xb5fe, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x9da2);
        EXPECT(gbc.pc(), 0x645f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb5fe), 0xda);
        // 70 03C2
        gbc.setState(0x3ed5, 0x2e85, 0x18e0, 0xc464, 0x29d, 0xdca1, 0x0, 0x0);
        gbc.writeMem(0x3ed5, { 0x70 });
        gbc.writeMem(0xdca1, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x2e85);
        EXPECT(gbc.pc(), 0x3ed6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdca1), 0xc4);
        // 70 03C7
        gbc.setState(0x6311, 0xd622, 0xa610, 0x7e3c, 0xd3c3, 0xe0be, 0x1, 0x0);
        gbc.writeMem(0x6311, { 0x70 });
        gbc.writeMem(0xe0be, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0xd622);
        EXPECT(gbc.pc(), 0x6312);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe0be), 0x7e);
        // 70 03C9
        gbc.setState(0xef5b, 0xe3c2, 0x5e20, 0x73dd, 0x86ed, 0x849b, 0x0, 0x0);
        gbc.writeMem(0x849b, { 0x0 });
        gbc.writeMem(0xef5b, { 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0xe3c2);
        EXPECT(gbc.pc(), 0xef5c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x849b), 0x73);
        EXPECT(gbc.readMem(0xef5b), 0x70);
        // 70 03CA
        gbc.setState(0x6bbb, 0x866, 0xa5e0, 0xe07, 0xfe2e, 0xe1e6, 0x1, 0x1);
        gbc.writeMem(0x6bbb, { 0x70 });
        gbc.writeMem(0xe1e6, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x866);
        EXPECT(gbc.pc(), 0x6bbc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe1e6), 0xe);
        // 70 03CC
        gbc.setState(0x11e6, 0x62f1, 0xe3a0, 0xddac, 0xd663, 0x80de, 0x1, 0x1);
        gbc.writeMem(0x11e6, { 0x70 });
        gbc.writeMem(0x80de, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x62f1);
        EXPECT(gbc.pc(), 0x11e7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x80de), 0xdd);
        // 70 03CE
        gbc.setState(0x7b47, 0x4aad, 0x1070, 0x26b9, 0xf32c, 0xd290, 0x1, 0x1);
        gbc.writeMem(0x7b47, { 0x70 });
        gbc.writeMem(0xd290, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x4aad);
        EXPECT(gbc.pc(), 0x7b48);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd290), 0x26);
        // 70 03CF
        gbc.setState(0xe720, 0x9cdf, 0xe900, 0xd5a, 0xa2c3, 0x9b57, 0x0, 0x0);
        gbc.writeMem(0x9b57, { 0x0 });
        gbc.writeMem(0xe720, { 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x9cdf);
        EXPECT(gbc.pc(), 0xe721);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9b57), 0xd);
        EXPECT(gbc.readMem(0xe720), 0x70);
        // 70 03D1
        gbc.setState(0x79f, 0x171, 0x2d10, 0xe963, 0x44b0, 0x8488, 0x1, 0x0);
        gbc.writeMem(0x79f, { 0x70 });
        gbc.writeMem(0x8488, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x171);
        EXPECT(gbc.pc(), 0x7a0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8488), 0xe9);
        // 70 03D2
        gbc.setState(0x18d7, 0xcecf, 0xcd20, 0x9d3e, 0x1ccf, 0xd0f4, 0x1, 0x0);
        gbc.writeMem(0x18d7, { 0x70 });
        gbc.writeMem(0xd0f4, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0xcecf);
        EXPECT(gbc.pc(), 0x18d8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd0f4), 0x9d);
        // 70 03D4
        gbc.setState(0xc113, 0xdef8, 0xfda0, 0xb457, 0x9cb8, 0xa270, 0x1, 0x0);
        gbc.writeMem(0xa270, { 0x0 });
        gbc.writeMem(0xc113, { 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0xdef8);
        EXPECT(gbc.pc(), 0xc114);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa270), 0xb4);
        EXPECT(gbc.readMem(0xc113), 0x70);
        // 70 03D6
        gbc.setState(0xd08a, 0x88be, 0xf440, 0x7dd3, 0xbd36, 0x8aa4, 0x1, 0x1);
        gbc.writeMem(0x8aa4, { 0x0 });
        gbc.writeMem(0xd08a, { 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x88be);
        EXPECT(gbc.pc(), 0xd08b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8aa4), 0x7d);
        EXPECT(gbc.readMem(0xd08a), 0x70);
        // 70 03D7
        gbc.setState(0xaec6, 0xecfe, 0x780, 0xbdc5, 0x64bb, 0xd339, 0x0, 0x1);
        gbc.writeMem(0xaec6, { 0x70 });
        gbc.writeMem(0xd339, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0xecfe);
        EXPECT(gbc.pc(), 0xaec7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaec6), 0x70);
        EXPECT(gbc.readMem(0xd339), 0xbd);
        // 70 03DA
        gbc.setState(0xd3bd, 0xbc08, 0x9780, 0x6502, 0xe092, 0xf87c, 0x0, 0x1);
        gbc.writeMem(0xd3bd, { 0x70 });
        gbc.writeMem(0xf87c, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xbc08);
        EXPECT(gbc.pc(), 0xd3be);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd3bd), 0x70);
        EXPECT(gbc.readMem(0xf87c), 0x65);
        // 70 03DB
        gbc.setState(0x31bd, 0xaedc, 0x1ca0, 0x89c7, 0x891b, 0x8973, 0x1, 0x0);
        gbc.writeMem(0x31bd, { 0x70 });
        gbc.writeMem(0x8973, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0xaedc);
        EXPECT(gbc.pc(), 0x31be);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8973), 0x89);
        // 70 03DC
        gbc.setState(0x87a6, 0x4083, 0xf770, 0x3165, 0x9973, 0xb6df, 0x0, 0x0);
        gbc.writeMem(0x87a6, { 0x70 });
        gbc.writeMem(0xb6df, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x4083);
        EXPECT(gbc.pc(), 0x87a7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x87a6), 0x70);
        EXPECT(gbc.readMem(0xb6df), 0x31);
        // 70 03DE
        gbc.setState(0xed25, 0x4c34, 0xdf50, 0xd384, 0xfe61, 0xdc9e, 0x0, 0x0);
        gbc.writeMem(0xdc9e, { 0x0 });
        gbc.writeMem(0xed25, { 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x4c34);
        EXPECT(gbc.pc(), 0xed26);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdc9e), 0xd3);
        EXPECT(gbc.readMem(0xed25), 0x70);
        // 70 03DF
        gbc.setState(0xd699, 0x968e, 0xcbc0, 0xbcda, 0x71f, 0xdb52, 0x0, 0x1);
        gbc.writeMem(0xd699, { 0x70 });
        gbc.writeMem(0xdb52, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x968e);
        EXPECT(gbc.pc(), 0xd69a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd699), 0x70);
        EXPECT(gbc.readMem(0xdb52), 0xbc);
        // 70 03E0
        gbc.setState(0x83e2, 0xefe4, 0xaf20, 0x88ee, 0x575d, 0xf0de, 0x1, 0x1);
        gbc.writeMem(0x83e2, { 0x70 });
        gbc.writeMem(0xf0de, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0xefe4);
        EXPECT(gbc.pc(), 0x83e3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x83e2), 0x70);
        EXPECT(gbc.readMem(0xf0de), 0x88);
        // 70 03E1
        gbc.setState(0xb2d2, 0x784b, 0xc4f0, 0x2b35, 0x657a, 0xcddd, 0x0, 0x1);
        gbc.writeMem(0xb2d2, { 0x70 });
        gbc.writeMem(0xcddd, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x784b);
        EXPECT(gbc.pc(), 0xb2d3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb2d2), 0x70);
        EXPECT(gbc.readMem(0xcddd), 0x2b);
        // 70 03E2
        gbc.setState(0xbd8a, 0x5df4, 0x1230, 0x589, 0xc1ad, 0xfd67, 0x0, 0x0);
        gbc.writeMem(0xbd8a, { 0x70 });
        gbc.writeMem(0xfd67, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x5df4);
        EXPECT(gbc.pc(), 0xbd8b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbd8a), 0x70);
        EXPECT(gbc.readMem(0xfd67), 0x5);
        // 70 03E3
        gbc.setState(0x74ae, 0x37e4, 0xa490, 0x9025, 0x7e63, 0xa300, 0x0, 0x0);
        gbc.writeMem(0x74ae, { 0x70 });
        gbc.writeMem(0xa300, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x37e4);
        EXPECT(gbc.pc(), 0x74af);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa300), 0x90);
        // 70 03E6
        gbc.setState(0x7538, 0x6c75, 0xc860, 0x6e85, 0xe4be, 0x9f4e, 0x0, 0x1);
        gbc.writeMem(0x7538, { 0x70 });
        gbc.writeMem(0x9f4e, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x6c75);
        EXPECT(gbc.pc(), 0x7539);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9f4e), 0x6e);
        // 70 03E7
        gbc.setState(0x90d8, 0x6baf, 0x6e00, 0x1c30, 0xe10b, 0xd94f, 0x0, 0x0);
        gbc.writeMem(0x90d8, { 0x70 });
        gbc.writeMem(0xd94f, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x6baf);
        EXPECT(gbc.pc(), 0x90d9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x90d8), 0x70);
        EXPECT(gbc.readMem(0xd94f), 0x1c);
    }
}
#endif
