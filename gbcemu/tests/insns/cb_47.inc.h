    TEST(gbcemu, opcode_cb_47) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB 47 0000
        gbc.setState(0xea01, 0x8dce, 0x3e00, 0x7bd7, 0x5e92, 0x760b, 0x1, 0x0);
        gbc.writeMem(0xea01, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x8dce, gbc.sp());
        EXPECT(0xea03, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea01));
        EXPECT(0x47, gbc.readMem(0xea02));
        // CB 47 0001
        gbc.setState(0xe4bb, 0x234b, 0xa640, 0xacd9, 0xf2cd, 0x7c43, 0x1, 0x0);
        gbc.writeMem(0xe4bb, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x234b, gbc.sp());
        EXPECT(0xe4bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe4bb));
        EXPECT(0x47, gbc.readMem(0xe4bc));
        // CB 47 0002
        gbc.setState(0xe365, 0xd406, 0xa980, 0xe5f6, 0x7340, 0x4969, 0x0, 0x0);
        gbc.writeMem(0xe365, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xd406, gbc.sp());
        EXPECT(0xe367, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe365));
        EXPECT(0x47, gbc.readMem(0xe366));
        // CB 47 0003
        gbc.setState(0xb694, 0x124f, 0xeae0, 0xe37c, 0x37aa, 0x3b98, 0x1, 0x0);
        gbc.writeMem(0xb694, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x124f, gbc.sp());
        EXPECT(0xb696, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb694));
        EXPECT(0x47, gbc.readMem(0xb695));
        // CB 47 0004
        gbc.setState(0xbc86, 0xc799, 0xec50, 0x8def, 0x94ed, 0xf93a, 0x0, 0x1);
        gbc.writeMem(0xbc86, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xc799, gbc.sp());
        EXPECT(0xbc88, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc86));
        EXPECT(0x47, gbc.readMem(0xbc87));
        // CB 47 0005
        gbc.setState(0xab9b, 0xc413, 0x5730, 0x8d35, 0xc854, 0xf44a, 0x1, 0x0);
        gbc.writeMem(0xab9b, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xc413, gbc.sp());
        EXPECT(0xab9d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab9b));
        EXPECT(0x47, gbc.readMem(0xab9c));
        // CB 47 0006
        gbc.setState(0x89ae, 0x7815, 0x8690, 0xd69, 0xa8ad, 0x5f1d, 0x0, 0x1);
        gbc.writeMem(0x89ae, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x7815, gbc.sp());
        EXPECT(0x89b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x89ae));
        EXPECT(0x47, gbc.readMem(0x89af));
        // CB 47 0007
        gbc.setState(0x6df8, 0xa14b, 0x2630, 0xa318, 0xd9cb, 0x82ea, 0x1, 0x0);
        gbc.writeMem(0x6df8, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xa14b, gbc.sp());
        EXPECT(0x6dfa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 47 0008
        gbc.setState(0x50b3, 0x4527, 0x6bf0, 0x9bd4, 0xc0f8, 0x894b, 0x1, 0x0);
        gbc.writeMem(0x50b3, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x4527, gbc.sp());
        EXPECT(0x50b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 47 0009
        gbc.setState(0x8e7d, 0x5c37, 0xccd0, 0x2ef4, 0x2c44, 0x1698, 0x1, 0x1);
        gbc.writeMem(0x8e7d, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x5c37, gbc.sp());
        EXPECT(0x8e7f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e7d));
        EXPECT(0x47, gbc.readMem(0x8e7e));
        // CB 47 000A
        gbc.setState(0x5360, 0x254b, 0x3f60, 0xf49, 0xaaf9, 0xd029, 0x1, 0x0);
        gbc.writeMem(0x5360, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x254b, gbc.sp());
        EXPECT(0x5362, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 47 000B
        gbc.setState(0x9b95, 0xc2d6, 0x1200, 0x5756, 0xdca, 0x23a2, 0x0, 0x0);
        gbc.writeMem(0x9b95, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xc2d6, gbc.sp());
        EXPECT(0x9b97, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b95));
        EXPECT(0x47, gbc.readMem(0x9b96));
        // CB 47 000C
        gbc.setState(0xb0d6, 0xd8db, 0xd7b0, 0x17e9, 0x1615, 0xd4dc, 0x1, 0x0);
        gbc.writeMem(0xb0d6, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xd8db, gbc.sp());
        EXPECT(0xb0d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb0d6));
        EXPECT(0x47, gbc.readMem(0xb0d7));
        // CB 47 000D
        gbc.setState(0x505f, 0x67ab, 0x73e0, 0xc44e, 0x8821, 0xbc4d, 0x0, 0x1);
        gbc.writeMem(0x505f, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x67ab, gbc.sp());
        EXPECT(0x5061, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 47 000E
        gbc.setState(0x8d4b, 0x39d4, 0x1490, 0x4991, 0xe02b, 0x3ceb, 0x0, 0x1);
        gbc.writeMem(0x8d4b, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x39d4, gbc.sp());
        EXPECT(0x8d4d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d4b));
        EXPECT(0x47, gbc.readMem(0x8d4c));
        // CB 47 000F
        gbc.setState(0xb071, 0x86e8, 0xa080, 0xc571, 0xbf11, 0x2429, 0x0, 0x0);
        gbc.writeMem(0xb071, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x86e8, gbc.sp());
        EXPECT(0xb073, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb071));
        EXPECT(0x47, gbc.readMem(0xb072));
        // CB 47 0010
        gbc.setState(0x5ae7, 0x5ffc, 0x63d0, 0xebf6, 0xb15c, 0xdd02, 0x1, 0x0);
        gbc.writeMem(0x5ae7, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x5ffc, gbc.sp());
        EXPECT(0x5ae9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 47 0011
        gbc.setState(0xd498, 0x3081, 0x6cf0, 0xb626, 0x97ca, 0x354e, 0x1, 0x1);
        gbc.writeMem(0xd498, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x3081, gbc.sp());
        EXPECT(0xd49a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd498));
        EXPECT(0x47, gbc.readMem(0xd499));
        // CB 47 0012
        gbc.setState(0x3d97, 0x9a22, 0xf0f0, 0x1dbb, 0x1c28, 0x6936, 0x0, 0x0);
        gbc.writeMem(0x3d97, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x9a22, gbc.sp());
        EXPECT(0x3d99, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 47 0013
        gbc.setState(0xece9, 0x6be9, 0x54c0, 0xf4cf, 0x751b, 0x1ef6, 0x0, 0x0);
        gbc.writeMem(0xece9, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x6be9, gbc.sp());
        EXPECT(0xeceb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xece9));
        EXPECT(0x47, gbc.readMem(0xecea));
        // CB 47 0014
        gbc.setState(0xa974, 0xd807, 0xde80, 0xa406, 0x5f4, 0x6eff, 0x0, 0x0);
        gbc.writeMem(0xa974, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xd807, gbc.sp());
        EXPECT(0xa976, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa974));
        EXPECT(0x47, gbc.readMem(0xa975));
        // CB 47 0015
        gbc.setState(0x689a, 0x80d, 0x8fb0, 0xe243, 0xfd00, 0x331e, 0x0, 0x0);
        gbc.writeMem(0x689a, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x80d, gbc.sp());
        EXPECT(0x689c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 47 0017
        gbc.setState(0x2c96, 0x3894, 0x50c0, 0x9989, 0xdf5e, 0xe6, 0x1, 0x0);
        gbc.writeMem(0x2c96, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x3894, gbc.sp());
        EXPECT(0x2c98, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 47 0018
        gbc.setState(0x2ef7, 0xa493, 0xcbc0, 0xa684, 0xd155, 0x5999, 0x1, 0x0);
        gbc.writeMem(0x2ef7, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xa493, gbc.sp());
        EXPECT(0x2ef9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 47 0019
        gbc.setState(0x2c30, 0xdfc6, 0xaa10, 0xdf05, 0xa179, 0x70ee, 0x0, 0x1);
        gbc.writeMem(0x2c30, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xdfc6, gbc.sp());
        EXPECT(0x2c32, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 47 001B
        gbc.setState(0x75a9, 0x22b5, 0x9640, 0x9fa0, 0x6335, 0xdd1e, 0x0, 0x0);
        gbc.writeMem(0x75a9, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x22b5, gbc.sp());
        EXPECT(0x75ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 47 001C
        gbc.setState(0x4c46, 0xf542, 0x4c40, 0x7efa, 0x72e4, 0xa786, 0x1, 0x0);
        gbc.writeMem(0x4c46, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xf542, gbc.sp());
        EXPECT(0x4c48, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 47 001E
        gbc.setState(0xddef, 0x3d1e, 0xf990, 0x8b78, 0x8481, 0xb59d, 0x0, 0x1);
        gbc.writeMem(0xddef, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x3d1e, gbc.sp());
        EXPECT(0xddf1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xddef));
        EXPECT(0x47, gbc.readMem(0xddf0));
        // CB 47 001F
        gbc.setState(0xc626, 0x3028, 0x36a0, 0xfb4d, 0x2042, 0xcd10, 0x0, 0x0);
        gbc.writeMem(0xc626, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x3028, gbc.sp());
        EXPECT(0xc628, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc626));
        EXPECT(0x47, gbc.readMem(0xc627));
        // CB 47 0020
        gbc.setState(0xdd0c, 0x18e8, 0xbc10, 0x12e4, 0xe533, 0x69dc, 0x0, 0x0);
        gbc.writeMem(0xdd0c, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x18e8, gbc.sp());
        EXPECT(0xdd0e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd0c));
        EXPECT(0x47, gbc.readMem(0xdd0d));
        // CB 47 0021
        gbc.setState(0xd7b6, 0xe460, 0xf8f0, 0x3095, 0x85c9, 0x2a99, 0x1, 0x0);
        gbc.writeMem(0xd7b6, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xe460, gbc.sp());
        EXPECT(0xd7b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd7b6));
        EXPECT(0x47, gbc.readMem(0xd7b7));
        // CB 47 0022
        gbc.setState(0xdae0, 0x4cb4, 0x8410, 0x1399, 0xc801, 0xd38a, 0x0, 0x0);
        gbc.writeMem(0xdae0, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x4cb4, gbc.sp());
        EXPECT(0xdae2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdae0));
        EXPECT(0x47, gbc.readMem(0xdae1));
        // CB 47 0023
        gbc.setState(0x6dae, 0xba5b, 0xf550, 0x43ee, 0xc7ca, 0x7a7e, 0x0, 0x0);
        gbc.writeMem(0x6dae, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xba5b, gbc.sp());
        EXPECT(0x6db0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 47 0024
        gbc.setState(0xca5c, 0xf062, 0x7080, 0x9958, 0xca11, 0xa5ee, 0x1, 0x1);
        gbc.writeMem(0xca5c, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xf062, gbc.sp());
        EXPECT(0xca5e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca5c));
        EXPECT(0x47, gbc.readMem(0xca5d));
        // CB 47 0025
        gbc.setState(0x8885, 0x7300, 0x3250, 0x1082, 0x9afd, 0x68fa, 0x0, 0x1);
        gbc.writeMem(0x8885, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x7300, gbc.sp());
        EXPECT(0x8887, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8885));
        EXPECT(0x47, gbc.readMem(0x8886));
        // CB 47 0026
        gbc.setState(0x8a09, 0x15b1, 0xa210, 0x21f5, 0xcba6, 0xa1b6, 0x0, 0x0);
        gbc.writeMem(0x8a09, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x15b1, gbc.sp());
        EXPECT(0x8a0b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a09));
        EXPECT(0x47, gbc.readMem(0x8a0a));
        // CB 47 0027
        gbc.setState(0x45e, 0xf712, 0xe810, 0xe17c, 0x252c, 0x286f, 0x0, 0x0);
        gbc.writeMem(0x45e, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xf712, gbc.sp());
        EXPECT(0x460, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 47 0029
        gbc.setState(0x86f6, 0xa2cb, 0x42e0, 0x8b25, 0xcd02, 0x89bf, 0x0, 0x0);
        gbc.writeMem(0x86f6, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xa2cb, gbc.sp());
        EXPECT(0x86f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x86f6));
        EXPECT(0x47, gbc.readMem(0x86f7));
        // CB 47 002A
        gbc.setState(0x6707, 0xf9ec, 0xb270, 0x6edf, 0x403a, 0xd7da, 0x1, 0x1);
        gbc.writeMem(0x6707, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xf9ec, gbc.sp());
        EXPECT(0x6709, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 47 002B
        gbc.setState(0x6d7e, 0x8c3c, 0xd930, 0x1911, 0xaa68, 0x814f, 0x0, 0x1);
        gbc.writeMem(0x6d7e, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x8c3c, gbc.sp());
        EXPECT(0x6d80, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 47 002C
        gbc.setState(0x1e08, 0x8015, 0x5bb0, 0xbb11, 0x8084, 0x1778, 0x0, 0x1);
        gbc.writeMem(0x1e08, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x8015, gbc.sp());
        EXPECT(0x1e0a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 47 002D
        gbc.setState(0xc3a0, 0x487f, 0xb5b0, 0x7462, 0x7c81, 0x700b, 0x0, 0x1);
        gbc.writeMem(0xc3a0, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x487f, gbc.sp());
        EXPECT(0xc3a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc3a0));
        EXPECT(0x47, gbc.readMem(0xc3a1));
        // CB 47 002F
        gbc.setState(0x51a, 0x9043, 0x7730, 0x9479, 0x33bb, 0x98b2, 0x1, 0x1);
        gbc.writeMem(0x51a, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x9043, gbc.sp());
        EXPECT(0x51c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 47 0030
        gbc.setState(0x7dbd, 0xd175, 0xd480, 0xdd3, 0xb858, 0x5f98, 0x0, 0x1);
        gbc.writeMem(0x7dbd, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xd175, gbc.sp());
        EXPECT(0x7dbf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 47 0031
        gbc.setState(0xd9ec, 0x2425, 0x6110, 0xe15e, 0xe203, 0xadb8, 0x1, 0x1);
        gbc.writeMem(0xd9ec, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x2425, gbc.sp());
        EXPECT(0xd9ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd9ec));
        EXPECT(0x47, gbc.readMem(0xd9ed));
        // CB 47 0032
        gbc.setState(0xbda8, 0x4c3, 0x7200, 0x303f, 0xc592, 0xf28b, 0x0, 0x1);
        gbc.writeMem(0xbda8, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x4c3, gbc.sp());
        EXPECT(0xbdaa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbda8));
        EXPECT(0x47, gbc.readMem(0xbda9));
        // CB 47 0033
        gbc.setState(0x63be, 0x56e5, 0x3ec0, 0x2085, 0xfcc, 0x707c, 0x1, 0x1);
        gbc.writeMem(0x63be, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x56e5, gbc.sp());
        EXPECT(0x63c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 47 0034
        gbc.setState(0x4715, 0x5566, 0x2000, 0xbfaf, 0x5eea, 0xdb94, 0x0, 0x0);
        gbc.writeMem(0x4715, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x5566, gbc.sp());
        EXPECT(0x4717, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 47 0035
        gbc.setState(0xad1b, 0x182a, 0x6b60, 0xf68, 0x91a4, 0x5363, 0x1, 0x0);
        gbc.writeMem(0xad1b, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x182a, gbc.sp());
        EXPECT(0xad1d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad1b));
        EXPECT(0x47, gbc.readMem(0xad1c));
        // CB 47 0036
        gbc.setState(0xbef6, 0xf8b4, 0xa470, 0xba46, 0xcf5a, 0xdd9b, 0x1, 0x1);
        gbc.writeMem(0xbef6, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xf8b4, gbc.sp());
        EXPECT(0xbef8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbef6));
        EXPECT(0x47, gbc.readMem(0xbef7));
        // CB 47 0037
        gbc.setState(0xd5c3, 0xd6c5, 0x1270, 0x603f, 0xa2d5, 0x16a4, 0x0, 0x0);
        gbc.writeMem(0xd5c3, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xd6c5, gbc.sp());
        EXPECT(0xd5c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd5c3));
        EXPECT(0x47, gbc.readMem(0xd5c4));
        // CB 47 0038
        gbc.setState(0xb22a, 0x94e9, 0x7b0, 0x5fce, 0xfe62, 0xdc51, 0x0, 0x0);
        gbc.writeMem(0xb22a, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x94e9, gbc.sp());
        EXPECT(0xb22c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb22a));
        EXPECT(0x47, gbc.readMem(0xb22b));
        // CB 47 0039
        gbc.setState(0x8736, 0x83ec, 0x43d0, 0xe67c, 0xacb2, 0xe288, 0x0, 0x1);
        gbc.writeMem(0x8736, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x83ec, gbc.sp());
        EXPECT(0x8738, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8736));
        EXPECT(0x47, gbc.readMem(0x8737));
        // CB 47 003A
        gbc.setState(0x5fe3, 0x5aa8, 0xe100, 0x3358, 0xa1fb, 0x1c26, 0x1, 0x1);
        gbc.writeMem(0x5fe3, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x5aa8, gbc.sp());
        EXPECT(0x5fe5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 47 003B
        gbc.setState(0x64b, 0x1ec1, 0x2490, 0x9b1d, 0x5215, 0xc95d, 0x1, 0x0);
        gbc.writeMem(0x64b, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x1ec1, gbc.sp());
        EXPECT(0x64d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 47 003C
        gbc.setState(0x8c1b, 0x7f11, 0xaa70, 0x28a3, 0x2616, 0xfa11, 0x1, 0x0);
        gbc.writeMem(0x8c1b, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x7f11, gbc.sp());
        EXPECT(0x8c1d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c1b));
        EXPECT(0x47, gbc.readMem(0x8c1c));
        // CB 47 003D
        gbc.setState(0x42c3, 0x11ce, 0x8810, 0x3244, 0x701b, 0x4b90, 0x1, 0x0);
        gbc.writeMem(0x42c3, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x11ce, gbc.sp());
        EXPECT(0x42c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 47 003E
        gbc.setState(0x86c0, 0x5099, 0x5a60, 0x4523, 0xdbe3, 0x3d4f, 0x0, 0x1);
        gbc.writeMem(0x86c0, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x5099, gbc.sp());
        EXPECT(0x86c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x86c0));
        EXPECT(0x47, gbc.readMem(0x86c1));
        // CB 47 003F
        gbc.setState(0xc44f, 0x2417, 0xf950, 0x1c03, 0x315e, 0x2f32, 0x1, 0x0);
        gbc.writeMem(0xc44f, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x2417, gbc.sp());
        EXPECT(0xc451, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc44f));
        EXPECT(0x47, gbc.readMem(0xc450));
        // CB 47 0041
        gbc.setState(0x4a7, 0xf73a, 0x39a0, 0xa0ce, 0xa878, 0x8b81, 0x1, 0x1);
        gbc.writeMem(0x4a7, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xf73a, gbc.sp());
        EXPECT(0x4a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 47 0042
        gbc.setState(0xee7e, 0x2f36, 0x29d0, 0xf292, 0xdc88, 0xc688, 0x1, 0x1);
        gbc.writeMem(0xee7e, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x2f36, gbc.sp());
        EXPECT(0xee80, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee7e));
        EXPECT(0x47, gbc.readMem(0xee7f));
        // CB 47 0043
        gbc.setState(0x3ad, 0xc5ae, 0x1350, 0x3233, 0x4e7a, 0x80e5, 0x1, 0x1);
        gbc.writeMem(0x3ad, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xc5ae, gbc.sp());
        EXPECT(0x3af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 47 0044
        gbc.setState(0xb8c0, 0xd89, 0xba10, 0xced4, 0x9c96, 0xf55a, 0x0, 0x1);
        gbc.writeMem(0xb8c0, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xd89, gbc.sp());
        EXPECT(0xb8c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb8c0));
        EXPECT(0x47, gbc.readMem(0xb8c1));
        // CB 47 0045
        gbc.setState(0xcb8d, 0x4abc, 0x7f50, 0x9a25, 0x2c3b, 0x64a7, 0x0, 0x0);
        gbc.writeMem(0xcb8d, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x4abc, gbc.sp());
        EXPECT(0xcb8f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb8d));
        EXPECT(0x47, gbc.readMem(0xcb8e));
        // CB 47 0046
        gbc.setState(0x615c, 0x28e7, 0x2640, 0xfab1, 0x586d, 0xe6ea, 0x1, 0x0);
        gbc.writeMem(0x615c, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x28e7, gbc.sp());
        EXPECT(0x615e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 47 0047
        gbc.setState(0x85ee, 0x4970, 0x4f50, 0x2b4c, 0xd3c7, 0x967b, 0x1, 0x1);
        gbc.writeMem(0x85ee, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x4970, gbc.sp());
        EXPECT(0x85f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x85ee));
        EXPECT(0x47, gbc.readMem(0x85ef));
        // CB 47 0048
        gbc.setState(0xc9c6, 0xb2b2, 0xc500, 0x5c7, 0xdd0c, 0x114c, 0x0, 0x1);
        gbc.writeMem(0xc9c6, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xb2b2, gbc.sp());
        EXPECT(0xc9c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc9c6));
        EXPECT(0x47, gbc.readMem(0xc9c7));
        // CB 47 0049
        gbc.setState(0x20fb, 0xc40, 0x49b0, 0x4e3, 0xedd4, 0x1565, 0x1, 0x0);
        gbc.writeMem(0x20fb, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xc40, gbc.sp());
        EXPECT(0x20fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 47 004A
        gbc.setState(0x2680, 0xee2a, 0xe6e0, 0xe51a, 0x593f, 0x72cb, 0x0, 0x0);
        gbc.writeMem(0x2680, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xee2a, gbc.sp());
        EXPECT(0x2682, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 47 004B
        gbc.setState(0xaf5f, 0xc035, 0x9380, 0x6a98, 0xfec0, 0x6cca, 0x0, 0x1);
        gbc.writeMem(0xaf5f, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xc035, gbc.sp());
        EXPECT(0xaf61, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf5f));
        EXPECT(0x47, gbc.readMem(0xaf60));
        // CB 47 004C
        gbc.setState(0xc838, 0x508, 0xb9d0, 0xb74f, 0xcf76, 0x7da6, 0x0, 0x0);
        gbc.writeMem(0xc838, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x508, gbc.sp());
        EXPECT(0xc83a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc838));
        EXPECT(0x47, gbc.readMem(0xc839));
        // CB 47 004D
        gbc.setState(0x69f0, 0x8af4, 0x2b30, 0x1d45, 0x2bc1, 0x4f72, 0x0, 0x1);
        gbc.writeMem(0x69f0, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x8af4, gbc.sp());
        EXPECT(0x69f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 47 004E
        gbc.setState(0xd1ea, 0xb203, 0x5530, 0x5f3, 0x7a1f, 0x3f1c, 0x0, 0x1);
        gbc.writeMem(0xd1ea, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xb203, gbc.sp());
        EXPECT(0xd1ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd1ea));
        EXPECT(0x47, gbc.readMem(0xd1eb));
        // CB 47 004F
        gbc.setState(0xd7a4, 0x42c, 0x2630, 0x6a61, 0xae4b, 0x4ee1, 0x0, 0x0);
        gbc.writeMem(0xd7a4, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x42c, gbc.sp());
        EXPECT(0xd7a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd7a4));
        EXPECT(0x47, gbc.readMem(0xd7a5));
        // CB 47 0050
        gbc.setState(0xc8df, 0xe4f, 0xe3d0, 0x5d06, 0x357c, 0x8e28, 0x0, 0x1);
        gbc.writeMem(0xc8df, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xe4f, gbc.sp());
        EXPECT(0xc8e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc8df));
        EXPECT(0x47, gbc.readMem(0xc8e0));
        // CB 47 0052
        gbc.setState(0x8fa0, 0xa45f, 0x4850, 0x5a4b, 0x28f0, 0xa174, 0x1, 0x1);
        gbc.writeMem(0x8fa0, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xa45f, gbc.sp());
        EXPECT(0x8fa2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8fa0));
        EXPECT(0x47, gbc.readMem(0x8fa1));
        // CB 47 0055
        gbc.setState(0x3212, 0xabba, 0x8260, 0xa813, 0xcfb5, 0x5918, 0x0, 0x1);
        gbc.writeMem(0x3212, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xabba, gbc.sp());
        EXPECT(0x3214, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 47 0056
        gbc.setState(0x9a70, 0xa318, 0xbc0, 0x9238, 0xa910, 0x8efd, 0x1, 0x1);
        gbc.writeMem(0x9a70, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xa318, gbc.sp());
        EXPECT(0x9a72, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a70));
        EXPECT(0x47, gbc.readMem(0x9a71));
        // CB 47 0057
        gbc.setState(0xd06c, 0x24f9, 0xbea0, 0x692a, 0x7977, 0x8f57, 0x1, 0x1);
        gbc.writeMem(0xd06c, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x24f9, gbc.sp());
        EXPECT(0xd06e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd06c));
        EXPECT(0x47, gbc.readMem(0xd06d));
        // CB 47 0058
        gbc.setState(0x88f2, 0xf0d0, 0xb110, 0x7b44, 0xd4e2, 0x41bd, 0x0, 0x0);
        gbc.writeMem(0x88f2, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xf0d0, gbc.sp());
        EXPECT(0x88f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x88f2));
        EXPECT(0x47, gbc.readMem(0x88f3));
        // CB 47 0059
        gbc.setState(0x79d0, 0x694c, 0x1130, 0xd486, 0x586a, 0xebd, 0x0, 0x1);
        gbc.writeMem(0x79d0, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x694c, gbc.sp());
        EXPECT(0x79d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 47 005A
        gbc.setState(0x6874, 0x7446, 0xf810, 0x8848, 0xd061, 0xeeb4, 0x0, 0x0);
        gbc.writeMem(0x6874, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x7446, gbc.sp());
        EXPECT(0x6876, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 47 005B
        gbc.setState(0xa69, 0x9d79, 0xe9b0, 0x940, 0xeb, 0x1a1b, 0x1, 0x1);
        gbc.writeMem(0xa69, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x9d79, gbc.sp());
        EXPECT(0xa6b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 47 005C
        gbc.setState(0xcdd4, 0x88ba, 0xa070, 0xefc1, 0xbc64, 0xd841, 0x0, 0x1);
        gbc.writeMem(0xcdd4, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x88ba, gbc.sp());
        EXPECT(0xcdd6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcdd4));
        EXPECT(0x47, gbc.readMem(0xcdd5));
        // CB 47 005D
        gbc.setState(0x11b2, 0x9386, 0x2d0, 0x8d1f, 0xd8e6, 0xb4e5, 0x0, 0x1);
        gbc.writeMem(0x11b2, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x9386, gbc.sp());
        EXPECT(0x11b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 47 005E
        gbc.setState(0x1106, 0xc38c, 0xfb70, 0xe12d, 0x8aa6, 0x7cb8, 0x1, 0x1);
        gbc.writeMem(0x1106, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xc38c, gbc.sp());
        EXPECT(0x1108, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 47 005F
        gbc.setState(0xa857, 0x7742, 0x9b0, 0x8fc3, 0x3f30, 0x10b3, 0x1, 0x1);
        gbc.writeMem(0xa857, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x7742, gbc.sp());
        EXPECT(0xa859, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa857));
        EXPECT(0x47, gbc.readMem(0xa858));
        // CB 47 0060
        gbc.setState(0x1dd2, 0xb0f8, 0x9600, 0xf283, 0xc725, 0xd675, 0x1, 0x1);
        gbc.writeMem(0x1dd2, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xb0f8, gbc.sp());
        EXPECT(0x1dd4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 47 0061
        gbc.setState(0x402b, 0xec87, 0xc150, 0x47e6, 0xa740, 0x8216, 0x1, 0x1);
        gbc.writeMem(0x402b, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xec87, gbc.sp());
        EXPECT(0x402d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 47 0062
        gbc.setState(0x1490, 0xb0c8, 0x2290, 0xca1e, 0x93e1, 0xa197, 0x1, 0x0);
        gbc.writeMem(0x1490, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xb0c8, gbc.sp());
        EXPECT(0x1492, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 47 0063
        gbc.setState(0x14d3, 0x5c06, 0xa610, 0xc586, 0x152e, 0xf98c, 0x1, 0x0);
        gbc.writeMem(0x14d3, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x5c06, gbc.sp());
        EXPECT(0x14d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 47 0064
        gbc.setState(0x1944, 0x7bbb, 0x67a0, 0x6e07, 0xf4a3, 0x1406, 0x0, 0x0);
        gbc.writeMem(0x1944, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x7bbb, gbc.sp());
        EXPECT(0x1946, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 47 0065
        gbc.setState(0xe2b1, 0x449b, 0x8cc0, 0xb073, 0x478d, 0xb6b4, 0x1, 0x0);
        gbc.writeMem(0xe2b1, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x449b, gbc.sp());
        EXPECT(0xe2b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe2b1));
        EXPECT(0x47, gbc.readMem(0xe2b2));
        // CB 47 0066
        gbc.setState(0xc3bd, 0xb889, 0xc610, 0x1cca, 0xbc24, 0xfecf, 0x0, 0x1);
        gbc.writeMem(0xc3bd, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xb889, gbc.sp());
        EXPECT(0xc3bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc3bd));
        EXPECT(0x47, gbc.readMem(0xc3be));
        // CB 47 0067
        gbc.setState(0x6163, 0x29c4, 0xffa0, 0x901e, 0x62bc, 0xb5b0, 0x0, 0x0);
        gbc.writeMem(0x6163, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x29c4, gbc.sp());
        EXPECT(0x6165, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 47 0068
        gbc.setState(0x3179, 0x76f9, 0xb400, 0x1ff0, 0x2ed5, 0x9270, 0x1, 0x0);
        gbc.writeMem(0x3179, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x76f9, gbc.sp());
        EXPECT(0x317b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 47 0069
        gbc.setState(0xa7e7, 0xab43, 0x97e0, 0x3950, 0x4b07, 0x4c39, 0x0, 0x0);
        gbc.writeMem(0xa7e7, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xab43, gbc.sp());
        EXPECT(0xa7e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa7e7));
        EXPECT(0x47, gbc.readMem(0xa7e8));
        // CB 47 006A
        gbc.setState(0x3319, 0x9ba0, 0x3690, 0xa187, 0x2b, 0x89ab, 0x0, 0x1);
        gbc.writeMem(0x3319, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x9ba0, gbc.sp());
        EXPECT(0x331b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 47 006B
        gbc.setState(0x9633, 0xd49c, 0x9a60, 0x7056, 0xf7b, 0x8e9f, 0x0, 0x1);
        gbc.writeMem(0x9633, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xd49c, gbc.sp());
        EXPECT(0x9635, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9633));
        EXPECT(0x47, gbc.readMem(0x9634));
        // CB 47 006C
        gbc.setState(0xef13, 0x8bae, 0xbfc0, 0xedf2, 0x8933, 0xb3a0, 0x1, 0x1);
        gbc.writeMem(0xef13, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x8bae, gbc.sp());
        EXPECT(0xef15, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef13));
        EXPECT(0x47, gbc.readMem(0xef14));
        // CB 47 006D
        gbc.setState(0x367a, 0xd1c, 0x6fe0, 0x406d, 0xed98, 0x5c97, 0x0, 0x1);
        gbc.writeMem(0x367a, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xd1c, gbc.sp());
        EXPECT(0x367c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 47 006E
        gbc.setState(0x95a0, 0xf9b9, 0x52a0, 0x89c3, 0x3057, 0x548b, 0x0, 0x1);
        gbc.writeMem(0x95a0, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xf9b9, gbc.sp());
        EXPECT(0x95a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x95a0));
        EXPECT(0x47, gbc.readMem(0x95a1));
        // CB 47 006F
        gbc.setState(0xe03f, 0x976, 0xb140, 0x21ea, 0x2153, 0x6e03, 0x1, 0x0);
        gbc.writeMem(0xe03f, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x976, gbc.sp());
        EXPECT(0xe041, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe03f));
        EXPECT(0x47, gbc.readMem(0xe040));
        // CB 47 0070
        gbc.setState(0x518d, 0x2ce5, 0xb010, 0x9e5e, 0x7563, 0x7ff5, 0x1, 0x1);
        gbc.writeMem(0x518d, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x2ce5, gbc.sp());
        EXPECT(0x518f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 47 0071
        gbc.setState(0x4f97, 0x8309, 0x8450, 0x7b62, 0xadcd, 0xcf77, 0x1, 0x1);
        gbc.writeMem(0x4f97, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x8309, gbc.sp());
        EXPECT(0x4f99, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 47 0072
        gbc.setState(0x8a42, 0xf62f, 0xbcb0, 0x18b4, 0xc21, 0xb7ef, 0x1, 0x0);
        gbc.writeMem(0x8a42, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xf62f, gbc.sp());
        EXPECT(0x8a44, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a42));
        EXPECT(0x47, gbc.readMem(0x8a43));
        // CB 47 0073
        gbc.setState(0xe02d, 0x5688, 0xfc40, 0xb331, 0x7911, 0xb781, 0x0, 0x1);
        gbc.writeMem(0xe02d, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x5688, gbc.sp());
        EXPECT(0xe02f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe02d));
        EXPECT(0x47, gbc.readMem(0xe02e));
        // CB 47 0074
        gbc.setState(0xd288, 0x675a, 0xff80, 0xf91d, 0x379d, 0x9727, 0x0, 0x0);
        gbc.writeMem(0xd288, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x675a, gbc.sp());
        EXPECT(0xd28a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd288));
        EXPECT(0x47, gbc.readMem(0xd289));
        // CB 47 0075
        gbc.setState(0x59c3, 0xd18a, 0x6220, 0x8352, 0xb2d2, 0x6f3a, 0x1, 0x0);
        gbc.writeMem(0x59c3, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xd18a, gbc.sp());
        EXPECT(0x59c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 47 0076
        gbc.setState(0xc7d, 0x8f18, 0x3160, 0xb2e3, 0x98d2, 0xdb29, 0x0, 0x0);
        gbc.writeMem(0xc7d, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x8f18, gbc.sp());
        EXPECT(0xc7f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 47 0077
        gbc.setState(0x3c42, 0xbfa7, 0x82d0, 0x8bf4, 0xfc89, 0xfd30, 0x0, 0x0);
        gbc.writeMem(0x3c42, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xbfa7, gbc.sp());
        EXPECT(0x3c44, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 47 0078
        gbc.setState(0xb253, 0x2515, 0x7020, 0x587f, 0xa288, 0xdd2d, 0x1, 0x1);
        gbc.writeMem(0xb253, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x2515, gbc.sp());
        EXPECT(0xb255, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb253));
        EXPECT(0x47, gbc.readMem(0xb254));
        // CB 47 0079
        gbc.setState(0xe75d, 0x4ef6, 0x9f50, 0x477f, 0x986, 0xb6d6, 0x0, 0x1);
        gbc.writeMem(0xe75d, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x4ef6, gbc.sp());
        EXPECT(0xe75f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe75d));
        EXPECT(0x47, gbc.readMem(0xe75e));
        // CB 47 007A
        gbc.setState(0x55c5, 0x643b, 0x16f0, 0x6534, 0x3772, 0x49da, 0x1, 0x0);
        gbc.writeMem(0x55c5, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x643b, gbc.sp());
        EXPECT(0x55c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 47 007B
        gbc.setState(0x1b1c, 0xa22f, 0x8d60, 0xbe76, 0xa24e, 0xf386, 0x1, 0x1);
        gbc.writeMem(0x1b1c, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xa22f, gbc.sp());
        EXPECT(0x1b1e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 47 007C
        gbc.setState(0x3b0c, 0xc39d, 0x32e0, 0xa3f, 0x4ed3, 0x3139, 0x1, 0x1);
        gbc.writeMem(0x3b0c, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xc39d, gbc.sp());
        EXPECT(0x3b0e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 47 007D
        gbc.setState(0xdd96, 0x7861, 0x17f0, 0xa67d, 0xd2f4, 0x27ce, 0x0, 0x1);
        gbc.writeMem(0xdd96, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x7861, gbc.sp());
        EXPECT(0xdd98, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd96));
        EXPECT(0x47, gbc.readMem(0xdd97));
        // CB 47 007E
        gbc.setState(0xdb04, 0xb59a, 0x8120, 0x1a45, 0xe905, 0x1163, 0x0, 0x0);
        gbc.writeMem(0xdb04, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xb59a, gbc.sp());
        EXPECT(0xdb06, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb04));
        EXPECT(0x47, gbc.readMem(0xdb05));
        // CB 47 007F
        gbc.setState(0x9294, 0x83bb, 0x7790, 0x8b79, 0xb527, 0x6723, 0x1, 0x1);
        gbc.writeMem(0x9294, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x83bb, gbc.sp());
        EXPECT(0x9296, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9294));
        EXPECT(0x47, gbc.readMem(0x9295));
        // CB 47 0080
        gbc.setState(0x34df, 0xe8c, 0x8280, 0xc202, 0x3694, 0xdc4d, 0x0, 0x0);
        gbc.writeMem(0x34df, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xe8c, gbc.sp());
        EXPECT(0x34e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 47 0081
        gbc.setState(0x4443, 0x8011, 0xf220, 0x220c, 0x682c, 0xacb4, 0x1, 0x0);
        gbc.writeMem(0x4443, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x8011, gbc.sp());
        EXPECT(0x4445, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 47 0082
        gbc.setState(0x27c9, 0x1b37, 0xfd20, 0x36fb, 0xde5b, 0xc041, 0x0, 0x1);
        gbc.writeMem(0x27c9, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x1b37, gbc.sp());
        EXPECT(0x27cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 47 0083
        gbc.setState(0x9e13, 0x6e7d, 0x8640, 0x343b, 0xb5d6, 0x21fa, 0x0, 0x1);
        gbc.writeMem(0x9e13, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x6e7d, gbc.sp());
        EXPECT(0x9e15, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e13));
        EXPECT(0x47, gbc.readMem(0x9e14));
        // CB 47 0084
        gbc.setState(0x60d8, 0xf10f, 0xdd80, 0x68b8, 0x3753, 0xc6b7, 0x1, 0x0);
        gbc.writeMem(0x60d8, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xf10f, gbc.sp());
        EXPECT(0x60da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 47 0085
        gbc.setState(0xaf37, 0xf2be, 0x1a90, 0xdf64, 0x89a, 0xa169, 0x0, 0x0);
        gbc.writeMem(0xaf37, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xf2be, gbc.sp());
        EXPECT(0xaf39, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf37));
        EXPECT(0x47, gbc.readMem(0xaf38));
        // CB 47 0086
        gbc.setState(0xe365, 0x9b67, 0x760, 0x58c8, 0x1dbe, 0x2034, 0x1, 0x0);
        gbc.writeMem(0xe365, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x9b67, gbc.sp());
        EXPECT(0xe367, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe365));
        EXPECT(0x47, gbc.readMem(0xe366));
        // CB 47 0087
        gbc.setState(0x7fc9, 0x1afe, 0xe090, 0xf37c, 0x75ee, 0xbf7a, 0x1, 0x0);
        gbc.writeMem(0x7fc9, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x1afe, gbc.sp());
        EXPECT(0x7fcb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 47 0088
        gbc.setState(0x14a, 0xfe4e, 0xc330, 0xca91, 0x6751, 0x3554, 0x1, 0x1);
        gbc.writeMem(0x14a, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xfe4e, gbc.sp());
        EXPECT(0x14c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 47 0089
        gbc.setState(0xef31, 0xbc43, 0xafe0, 0x2df6, 0xbf6f, 0x6d99, 0x0, 0x1);
        gbc.writeMem(0xef31, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xbc43, gbc.sp());
        EXPECT(0xef33, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef31));
        EXPECT(0x47, gbc.readMem(0xef32));
        // CB 47 008A
        gbc.setState(0xbd4f, 0x80d9, 0x10a0, 0xe9b7, 0x607d, 0xedf2, 0x1, 0x1);
        gbc.writeMem(0xbd4f, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x80d9, gbc.sp());
        EXPECT(0xbd51, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd4f));
        EXPECT(0x47, gbc.readMem(0xbd50));
        // CB 47 008B
        gbc.setState(0x68a6, 0x712b, 0x10, 0xbac4, 0x68de, 0xa52c, 0x0, 0x0);
        gbc.writeMem(0x68a6, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x712b, gbc.sp());
        EXPECT(0x68a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 47 008C
        gbc.setState(0xa17a, 0xfe7f, 0x4d70, 0xc262, 0xe4bf, 0xc816, 0x1, 0x1);
        gbc.writeMem(0xa17a, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xfe7f, gbc.sp());
        EXPECT(0xa17c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa17a));
        EXPECT(0x47, gbc.readMem(0xa17b));
        // CB 47 008D
        gbc.setState(0x4c85, 0x7ff, 0x3330, 0x9ecb, 0x824b, 0xce12, 0x0, 0x0);
        gbc.writeMem(0x4c85, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x7ff, gbc.sp());
        EXPECT(0x4c87, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 47 008E
        gbc.setState(0x4cac, 0xad8d, 0xb980, 0x7fb2, 0x71a1, 0xbc2d, 0x0, 0x1);
        gbc.writeMem(0x4cac, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xad8d, gbc.sp());
        EXPECT(0x4cae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 47 008F
        gbc.setState(0x2b15, 0x2898, 0x7d10, 0x5e94, 0x3b8f, 0x6e9e, 0x0, 0x1);
        gbc.writeMem(0x2b15, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x2898, gbc.sp());
        EXPECT(0x2b17, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 47 0090
        gbc.setState(0xcfb0, 0x7608, 0x9710, 0x3e4e, 0xb689, 0xcd55, 0x1, 0x0);
        gbc.writeMem(0xcfb0, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x7608, gbc.sp());
        EXPECT(0xcfb2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcfb0));
        EXPECT(0x47, gbc.readMem(0xcfb1));
        // CB 47 0091
        gbc.setState(0x8921, 0xca63, 0x4d50, 0x2fdf, 0xb1d5, 0xf88b, 0x1, 0x1);
        gbc.writeMem(0x8921, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xca63, gbc.sp());
        EXPECT(0x8923, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8921));
        EXPECT(0x47, gbc.readMem(0x8922));
        // CB 47 0092
        gbc.setState(0xd8a2, 0x9950, 0x6170, 0x5aed, 0x41aa, 0xe167, 0x0, 0x1);
        gbc.writeMem(0xd8a2, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x9950, gbc.sp());
        EXPECT(0xd8a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd8a2));
        EXPECT(0x47, gbc.readMem(0xd8a3));
        // CB 47 0093
        gbc.setState(0xdd7d, 0x8e41, 0xc120, 0x9d22, 0xa47b, 0x2b63, 0x1, 0x1);
        gbc.writeMem(0xdd7d, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x8e41, gbc.sp());
        EXPECT(0xdd7f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd7d));
        EXPECT(0x47, gbc.readMem(0xdd7e));
        // CB 47 0094
        gbc.setState(0x851e, 0xd1c, 0x330, 0x8b3a, 0x7405, 0x7f99, 0x0, 0x0);
        gbc.writeMem(0x851e, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xd1c, gbc.sp());
        EXPECT(0x8520, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x851e));
        EXPECT(0x47, gbc.readMem(0x851f));
        // CB 47 0095
        gbc.setState(0xea35, 0xbbad, 0x15a0, 0xc59f, 0xe85c, 0x4904, 0x0, 0x1);
        gbc.writeMem(0xea35, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xbbad, gbc.sp());
        EXPECT(0xea37, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea35));
        EXPECT(0x47, gbc.readMem(0xea36));
        // CB 47 0096
        gbc.setState(0x9661, 0x60eb, 0x8a10, 0x7ec9, 0x8d27, 0xb63, 0x0, 0x1);
        gbc.writeMem(0x9661, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x60eb, gbc.sp());
        EXPECT(0x9663, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9661));
        EXPECT(0x47, gbc.readMem(0x9662));
        // CB 47 0097
        gbc.setState(0x2227, 0x27f3, 0x2450, 0xaeae, 0xa494, 0xe650, 0x1, 0x0);
        gbc.writeMem(0x2227, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x27f3, gbc.sp());
        EXPECT(0x2229, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 47 0098
        gbc.setState(0xa115, 0xa123, 0x5c00, 0x266a, 0xe20f, 0x5404, 0x1, 0x1);
        gbc.writeMem(0xa115, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xa123, gbc.sp());
        EXPECT(0xa117, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa115));
        EXPECT(0x47, gbc.readMem(0xa116));
        // CB 47 0099
        gbc.setState(0xe185, 0x62da, 0xc5c0, 0xf03e, 0x29d, 0xae42, 0x0, 0x0);
        gbc.writeMem(0xe185, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x62da, gbc.sp());
        EXPECT(0xe187, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe185));
        EXPECT(0x47, gbc.readMem(0xe186));
        // CB 47 009A
        gbc.setState(0x1dc4, 0xc212, 0x78c0, 0x5c48, 0x665e, 0xb597, 0x0, 0x1);
        gbc.writeMem(0x1dc4, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xc212, gbc.sp());
        EXPECT(0x1dc6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 47 009B
        gbc.setState(0x4e67, 0xca6, 0x9450, 0x5ad8, 0x25a9, 0xc802, 0x0, 0x1);
        gbc.writeMem(0x4e67, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xca6, gbc.sp());
        EXPECT(0x4e69, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 47 009C
        gbc.setState(0xc359, 0x4c4b, 0xc780, 0x46, 0x17fc, 0xff28, 0x1, 0x0);
        gbc.writeMem(0xc359, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x4c4b, gbc.sp());
        EXPECT(0xc35b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc359));
        EXPECT(0x47, gbc.readMem(0xc35a));
        // CB 47 009D
        gbc.setState(0xdaed, 0x6e7c, 0x3ca0, 0xd8ed, 0xe33c, 0x7725, 0x1, 0x0);
        gbc.writeMem(0xdaed, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x6e7c, gbc.sp());
        EXPECT(0xdaef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdaed));
        EXPECT(0x47, gbc.readMem(0xdaee));
        // CB 47 009E
        gbc.setState(0x7532, 0x1ab0, 0xbef0, 0xae15, 0xf68e, 0xa9cb, 0x0, 0x0);
        gbc.writeMem(0x7532, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x1ab0, gbc.sp());
        EXPECT(0x7534, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 47 009F
        gbc.setState(0x35cf, 0xfa4, 0x2e60, 0x20dc, 0x1347, 0x9a44, 0x1, 0x0);
        gbc.writeMem(0x35cf, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xfa4, gbc.sp());
        EXPECT(0x35d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 47 00A0
        gbc.setState(0x56bf, 0xabf1, 0xbd0, 0x9052, 0xe39d, 0xd1d, 0x1, 0x0);
        gbc.writeMem(0x56bf, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xabf1, gbc.sp());
        EXPECT(0x56c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 47 00A1
        gbc.setState(0x48b3, 0x582a, 0x4220, 0x7750, 0x84e8, 0x6e66, 0x1, 0x1);
        gbc.writeMem(0x48b3, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x582a, gbc.sp());
        EXPECT(0x48b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 47 00A2
        gbc.setState(0x3a95, 0x629e, 0x9f0, 0xf868, 0xcd83, 0x1bc0, 0x0, 0x1);
        gbc.writeMem(0x3a95, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x629e, gbc.sp());
        EXPECT(0x3a97, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 47 00A3
        gbc.setState(0x54c0, 0x800f, 0x1380, 0x88f, 0x629c, 0xc766, 0x0, 0x1);
        gbc.writeMem(0x54c0, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x800f, gbc.sp());
        EXPECT(0x54c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 47 00A4
        gbc.setState(0x996f, 0xf147, 0x7e90, 0x4a4a, 0xe63e, 0x1863, 0x0, 0x0);
        gbc.writeMem(0x996f, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xf147, gbc.sp());
        EXPECT(0x9971, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x996f));
        EXPECT(0x47, gbc.readMem(0x9970));
        // CB 47 00A5
        gbc.setState(0xb032, 0x3d8e, 0x21c0, 0xd12d, 0x7429, 0x5827, 0x0, 0x0);
        gbc.writeMem(0xb032, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x3d8e, gbc.sp());
        EXPECT(0xb034, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb032));
        EXPECT(0x47, gbc.readMem(0xb033));
        // CB 47 00A6
        gbc.setState(0x1f81, 0x3bc8, 0xd530, 0xd748, 0xe44f, 0x3332, 0x0, 0x1);
        gbc.writeMem(0x1f81, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x3bc8, gbc.sp());
        EXPECT(0x1f83, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 47 00A7
        gbc.setState(0x9c17, 0xb729, 0x9610, 0x7fc, 0x6c1a, 0x67b6, 0x1, 0x0);
        gbc.writeMem(0x9c17, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xb729, gbc.sp());
        EXPECT(0x9c19, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c17));
        EXPECT(0x47, gbc.readMem(0x9c18));
        // CB 47 00A8
        gbc.setState(0x7e5, 0x26d2, 0x1890, 0x24d4, 0x7c0, 0x818a, 0x1, 0x1);
        gbc.writeMem(0x7e5, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x26d2, gbc.sp());
        EXPECT(0x7e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 47 00A9
        gbc.setState(0x1da6, 0x88de, 0xb840, 0x9542, 0x4d95, 0x3bc, 0x0, 0x0);
        gbc.writeMem(0x1da6, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x88de, gbc.sp());
        EXPECT(0x1da8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 47 00AA
        gbc.setState(0x44f8, 0x8c13, 0x2880, 0x535e, 0x578, 0x43cd, 0x0, 0x1);
        gbc.writeMem(0x44f8, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x8c13, gbc.sp());
        EXPECT(0x44fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 47 00AB
        gbc.setState(0xe4be, 0xfcd9, 0xf870, 0xe954, 0x30c7, 0x6f4, 0x0, 0x0);
        gbc.writeMem(0xe4be, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xfcd9, gbc.sp());
        EXPECT(0xe4c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe4be));
        EXPECT(0x47, gbc.readMem(0xe4bf));
        // CB 47 00AC
        gbc.setState(0xd804, 0x4eb4, 0xacb0, 0x96c0, 0xdb3d, 0xa007, 0x0, 0x1);
        gbc.writeMem(0xd804, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x4eb4, gbc.sp());
        EXPECT(0xd806, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd804));
        EXPECT(0x47, gbc.readMem(0xd805));
        // CB 47 00AD
        gbc.setState(0x2927, 0xd62d, 0xa640, 0xff22, 0xe5ae, 0x7ca5, 0x1, 0x0);
        gbc.writeMem(0x2927, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xd62d, gbc.sp());
        EXPECT(0x2929, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 47 00AE
        gbc.setState(0x1bbe, 0x17b7, 0x52a0, 0x33b7, 0x219c, 0x92d7, 0x1, 0x0);
        gbc.writeMem(0x1bbe, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x17b7, gbc.sp());
        EXPECT(0x1bc0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 47 00AF
        gbc.setState(0xd04e, 0x1309, 0x4f30, 0x692, 0xec4f, 0xa9e5, 0x1, 0x0);
        gbc.writeMem(0xd04e, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x1309, gbc.sp());
        EXPECT(0xd050, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd04e));
        EXPECT(0x47, gbc.readMem(0xd04f));
        // CB 47 00B0
        gbc.setState(0x41a8, 0x206d, 0x540, 0x972a, 0x47ee, 0x43b0, 0x0, 0x1);
        gbc.writeMem(0x41a8, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x206d, gbc.sp());
        EXPECT(0x41aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 47 00B1
        gbc.setState(0x4c22, 0xa3ca, 0x5ab0, 0xffd7, 0x3fd, 0x7381, 0x0, 0x1);
        gbc.writeMem(0x4c22, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xa3ca, gbc.sp());
        EXPECT(0x4c24, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 47 00B2
        gbc.setState(0x76fb, 0x2f98, 0x14d0, 0x52d8, 0x9aa2, 0xf981, 0x1, 0x0);
        gbc.writeMem(0x76fb, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x2f98, gbc.sp());
        EXPECT(0x76fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 47 00B3
        gbc.setState(0x78f3, 0xbd6f, 0xf9f0, 0x60ee, 0x4376, 0x7de4, 0x1, 0x1);
        gbc.writeMem(0x78f3, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xbd6f, gbc.sp());
        EXPECT(0x78f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 47 00B4
        gbc.setState(0xa516, 0xa73f, 0xb130, 0xf332, 0x222d, 0x4ea4, 0x0, 0x0);
        gbc.writeMem(0xa516, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xa73f, gbc.sp());
        EXPECT(0xa518, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa516));
        EXPECT(0x47, gbc.readMem(0xa517));
        // CB 47 00B5
        gbc.setState(0x5428, 0x342, 0xc00, 0x5b72, 0x3061, 0x9f1d, 0x0, 0x0);
        gbc.writeMem(0x5428, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x342, gbc.sp());
        EXPECT(0x542a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 47 00B6
        gbc.setState(0xd152, 0x441c, 0x7bf0, 0xcc6e, 0x72e, 0xce91, 0x1, 0x1);
        gbc.writeMem(0xd152, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x441c, gbc.sp());
        EXPECT(0xd154, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd152));
        EXPECT(0x47, gbc.readMem(0xd153));
        // CB 47 00B8
        gbc.setState(0x610c, 0x2ffa, 0x6010, 0x2aa1, 0xb052, 0x87ba, 0x0, 0x0);
        gbc.writeMem(0x610c, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x2ffa, gbc.sp());
        EXPECT(0x610e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 47 00B9
        gbc.setState(0x15fe, 0xe15b, 0x7d0, 0xad0c, 0x9d25, 0x8da7, 0x0, 0x0);
        gbc.writeMem(0x15fe, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xe15b, gbc.sp());
        EXPECT(0x1600, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 47 00BB
        gbc.setState(0xc7f2, 0x9a64, 0x310, 0x8079, 0x4a10, 0x1b92, 0x0, 0x1);
        gbc.writeMem(0xc7f2, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x9a64, gbc.sp());
        EXPECT(0xc7f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc7f2));
        EXPECT(0x47, gbc.readMem(0xc7f3));
        // CB 47 00BC
        gbc.setState(0x9db2, 0x44a, 0xa1c0, 0x6018, 0xd151, 0x3dc4, 0x0, 0x0);
        gbc.writeMem(0x9db2, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x44a, gbc.sp());
        EXPECT(0x9db4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9db2));
        EXPECT(0x47, gbc.readMem(0x9db3));
        // CB 47 00BD
        gbc.setState(0xdf06, 0x17e8, 0x1860, 0x6c90, 0x7434, 0xb35a, 0x1, 0x0);
        gbc.writeMem(0xdf06, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x17e8, gbc.sp());
        EXPECT(0xdf08, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf06));
        EXPECT(0x47, gbc.readMem(0xdf07));
        // CB 47 00BE
        gbc.setState(0x149d, 0x1bfe, 0x35e0, 0xa77f, 0xe92a, 0x5722, 0x1, 0x1);
        gbc.writeMem(0x149d, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x1bfe, gbc.sp());
        EXPECT(0x149f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 47 00BF
        gbc.setState(0x315d, 0x931c, 0xaaa0, 0x48a1, 0x36f7, 0x912c, 0x0, 0x1);
        gbc.writeMem(0x315d, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x931c, gbc.sp());
        EXPECT(0x315f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 47 00C0
        gbc.setState(0xd855, 0x252c, 0xebf0, 0x1651, 0x8b49, 0x37af, 0x0, 0x1);
        gbc.writeMem(0xd855, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x252c, gbc.sp());
        EXPECT(0xd857, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd855));
        EXPECT(0x47, gbc.readMem(0xd856));
        // CB 47 00C1
        gbc.setState(0x20d, 0xf577, 0x5050, 0xe379, 0x80df, 0x9697, 0x0, 0x0);
        gbc.writeMem(0x20d, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xf577, gbc.sp());
        EXPECT(0x20f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 47 00C2
        gbc.setState(0x9dd0, 0xae18, 0x7fa0, 0xc6bc, 0xa013, 0x9994, 0x1, 0x0);
        gbc.writeMem(0x9dd0, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xae18, gbc.sp());
        EXPECT(0x9dd2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9dd0));
        EXPECT(0x47, gbc.readMem(0x9dd1));
        // CB 47 00C3
        gbc.setState(0x1a27, 0xefc4, 0x4400, 0x95d1, 0xe84e, 0x1731, 0x1, 0x1);
        gbc.writeMem(0x1a27, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xefc4, gbc.sp());
        EXPECT(0x1a29, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 47 00C4
        gbc.setState(0xc468, 0x3115, 0xab60, 0xcdf2, 0xbe70, 0x982, 0x0, 0x0);
        gbc.writeMem(0xc468, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x3115, gbc.sp());
        EXPECT(0xc46a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc468));
        EXPECT(0x47, gbc.readMem(0xc469));
        // CB 47 00C5
        gbc.setState(0x3c2e, 0x8097, 0xab10, 0xc1b5, 0x2b2b, 0xd82, 0x0, 0x0);
        gbc.writeMem(0x3c2e, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x8097, gbc.sp());
        EXPECT(0x3c30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 47 00C7
        gbc.setState(0x4efd, 0x8bee, 0x4b60, 0xd1f4, 0xaf1c, 0xf671, 0x0, 0x1);
        gbc.writeMem(0x4efd, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x8bee, gbc.sp());
        EXPECT(0x4eff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 47 00C8
        gbc.setState(0x2e62, 0xc01d, 0xaa50, 0x7282, 0xee99, 0xb1aa, 0x1, 0x0);
        gbc.writeMem(0x2e62, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xc01d, gbc.sp());
        EXPECT(0x2e64, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 47 00C9
        gbc.setState(0xec0e, 0x863e, 0xfdd0, 0xdf75, 0x54dd, 0xa993, 0x0, 0x0);
        gbc.writeMem(0xec0e, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x863e, gbc.sp());
        EXPECT(0xec10, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec0e));
        EXPECT(0x47, gbc.readMem(0xec0f));
        // CB 47 00CA
        gbc.setState(0x6abd, 0xa115, 0xa640, 0x467b, 0x307d, 0x421, 0x1, 0x0);
        gbc.writeMem(0x6abd, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xa115, gbc.sp());
        EXPECT(0x6abf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 47 00CB
        gbc.setState(0xc0f1, 0xdff3, 0x18a0, 0xeb1a, 0xb33, 0xf172, 0x0, 0x1);
        gbc.writeMem(0xc0f1, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xdff3, gbc.sp());
        EXPECT(0xc0f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc0f1));
        EXPECT(0x47, gbc.readMem(0xc0f2));
        // CB 47 00CC
        gbc.setState(0x691b, 0xd918, 0x2980, 0x1096, 0x85ab, 0x8a85, 0x1, 0x1);
        gbc.writeMem(0x691b, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xd918, gbc.sp());
        EXPECT(0x691d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 47 00CD
        gbc.setState(0xec78, 0x8853, 0x7d90, 0xd2bb, 0xe160, 0x4109, 0x1, 0x1);
        gbc.writeMem(0xec78, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x8853, gbc.sp());
        EXPECT(0xec7a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec78));
        EXPECT(0x47, gbc.readMem(0xec79));
        // CB 47 00CE
        gbc.setState(0x871b, 0xf071, 0x8d50, 0xf31d, 0x7ee1, 0x263, 0x1, 0x1);
        gbc.writeMem(0x871b, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xf071, gbc.sp());
        EXPECT(0x871d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x871b));
        EXPECT(0x47, gbc.readMem(0x871c));
        // CB 47 00D0
        gbc.setState(0xc0e, 0x3bdf, 0x8200, 0xbfdf, 0x5ed7, 0x7af6, 0x1, 0x0);
        gbc.writeMem(0xc0e, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x3bdf, gbc.sp());
        EXPECT(0xc10, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 47 00D1
        gbc.setState(0x9ea8, 0xf475, 0xdee0, 0xadad, 0xc381, 0xaed3, 0x0, 0x0);
        gbc.writeMem(0x9ea8, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xf475, gbc.sp());
        EXPECT(0x9eaa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ea8));
        EXPECT(0x47, gbc.readMem(0x9ea9));
        // CB 47 00D2
        gbc.setState(0xe18d, 0x298f, 0x83e0, 0x6e71, 0xad78, 0x6e5a, 0x1, 0x1);
        gbc.writeMem(0xe18d, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x298f, gbc.sp());
        EXPECT(0xe18f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe18d));
        EXPECT(0x47, gbc.readMem(0xe18e));
        // CB 47 00D3
        gbc.setState(0x2d1e, 0x661, 0xa3b0, 0xac9a, 0x86c2, 0x3efc, 0x0, 0x1);
        gbc.writeMem(0x2d1e, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x661, gbc.sp());
        EXPECT(0x2d20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 47 00D4
        gbc.setState(0xa801, 0x58ea, 0xd700, 0x3e09, 0xdd26, 0xa724, 0x1, 0x1);
        gbc.writeMem(0xa801, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x58ea, gbc.sp());
        EXPECT(0xa803, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa801));
        EXPECT(0x47, gbc.readMem(0xa802));
        // CB 47 00D5
        gbc.setState(0x671b, 0xdc46, 0xf810, 0x84e1, 0x59e9, 0x64cd, 0x0, 0x1);
        gbc.writeMem(0x671b, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xdc46, gbc.sp());
        EXPECT(0x671d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 47 00D6
        gbc.setState(0xa00c, 0x437c, 0x1f00, 0x8b3f, 0x2a77, 0x49f1, 0x0, 0x1);
        gbc.writeMem(0xa00c, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x437c, gbc.sp());
        EXPECT(0xa00e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa00c));
        EXPECT(0x47, gbc.readMem(0xa00d));
        // CB 47 00D7
        gbc.setState(0xaba, 0x2e70, 0x28a0, 0x77c0, 0x53e6, 0x1339, 0x1, 0x0);
        gbc.writeMem(0xaba, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x2e70, gbc.sp());
        EXPECT(0xabc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 47 00D8
        gbc.setState(0x4ad3, 0x5b45, 0xfae0, 0x8cf4, 0x68d9, 0x989c, 0x0, 0x0);
        gbc.writeMem(0x4ad3, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x5b45, gbc.sp());
        EXPECT(0x4ad5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 47 00D9
        gbc.setState(0x1274, 0x4a5e, 0xaed0, 0xd284, 0xeec3, 0xf51b, 0x0, 0x1);
        gbc.writeMem(0x1274, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x4a5e, gbc.sp());
        EXPECT(0x1276, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 47 00DA
        gbc.setState(0x595b, 0x7c48, 0xccf0, 0xa876, 0x921, 0xc038, 0x1, 0x1);
        gbc.writeMem(0x595b, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x7c48, gbc.sp());
        EXPECT(0x595d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 47 00DB
        gbc.setState(0x8d4, 0xd128, 0x2390, 0xcf20, 0xb0be, 0x337c, 0x0, 0x0);
        gbc.writeMem(0x8d4, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xd128, gbc.sp());
        EXPECT(0x8d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 47 00DC
        gbc.setState(0xa6aa, 0xe88a, 0x5920, 0xc5d7, 0xf874, 0x685, 0x0, 0x1);
        gbc.writeMem(0xa6aa, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xe88a, gbc.sp());
        EXPECT(0xa6ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa6aa));
        EXPECT(0x47, gbc.readMem(0xa6ab));
        // CB 47 00DD
        gbc.setState(0xcb3f, 0x34ae, 0xe4c0, 0x6640, 0x17ff, 0xceaf, 0x0, 0x1);
        gbc.writeMem(0xcb3f, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x34ae, gbc.sp());
        EXPECT(0xcb41, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb3f));
        EXPECT(0x47, gbc.readMem(0xcb40));
        // CB 47 00DE
        gbc.setState(0x4ee9, 0x8af2, 0xce40, 0x7366, 0x3428, 0x49ce, 0x0, 0x1);
        gbc.writeMem(0x4ee9, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x8af2, gbc.sp());
        EXPECT(0x4eeb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 47 00DF
        gbc.setState(0x5cf0, 0x5bd0, 0xffa0, 0xc1a8, 0x1f6c, 0x795e, 0x1, 0x0);
        gbc.writeMem(0x5cf0, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x5bd0, gbc.sp());
        EXPECT(0x5cf2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 47 00E0
        gbc.setState(0x948c, 0x3bb5, 0xec10, 0xed70, 0xdb54, 0x407, 0x1, 0x0);
        gbc.writeMem(0x948c, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x3bb5, gbc.sp());
        EXPECT(0x948e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x948c));
        EXPECT(0x47, gbc.readMem(0x948d));
        // CB 47 00E1
        gbc.setState(0x77a9, 0xf76, 0xc360, 0xca7b, 0xdaac, 0xde07, 0x0, 0x0);
        gbc.writeMem(0x77a9, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xf76, gbc.sp());
        EXPECT(0x77ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 47 00E2
        gbc.setState(0x4064, 0xee7a, 0x93a0, 0x77d2, 0x1a29, 0xb0b1, 0x1, 0x1);
        gbc.writeMem(0x4064, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xee7a, gbc.sp());
        EXPECT(0x4066, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 47 00E3
        gbc.setState(0x207c, 0x61b, 0x4120, 0x8f6a, 0xc19a, 0x6af0, 0x0, 0x1);
        gbc.writeMem(0x207c, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x61b, gbc.sp());
        EXPECT(0x207e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 47 00E4
        gbc.setState(0xc428, 0x2e1a, 0xc350, 0x746d, 0x67a3, 0xd94b, 0x0, 0x1);
        gbc.writeMem(0xc428, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x2e1a, gbc.sp());
        EXPECT(0xc42a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc428));
        EXPECT(0x47, gbc.readMem(0xc429));
        // CB 47 00E6
        gbc.setState(0x2571, 0x4e35, 0xe220, 0x3b08, 0x1a79, 0x9f58, 0x1, 0x1);
        gbc.writeMem(0x2571, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x4e35, gbc.sp());
        EXPECT(0x2573, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 47 00E8
        gbc.setState(0x3920, 0x6fbc, 0xd440, 0x877b, 0xc883, 0xe447, 0x1, 0x0);
        gbc.writeMem(0x3920, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x6fbc, gbc.sp());
        EXPECT(0x3922, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 47 00E9
        gbc.setState(0x3078, 0x43f6, 0x3750, 0xdb1a, 0xdb15, 0x2f9c, 0x1, 0x1);
        gbc.writeMem(0x3078, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x43f6, gbc.sp());
        EXPECT(0x307a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 47 00EC
        gbc.setState(0x5300, 0x7eed, 0x3f80, 0xcf11, 0xc403, 0x9caa, 0x1, 0x0);
        gbc.writeMem(0x5300, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x7eed, gbc.sp());
        EXPECT(0x5302, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 47 00ED
        gbc.setState(0x9e78, 0xf404, 0xc5e0, 0x5003, 0x1281, 0xfa7c, 0x1, 0x1);
        gbc.writeMem(0x9e78, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xf404, gbc.sp());
        EXPECT(0x9e7a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e78));
        EXPECT(0x47, gbc.readMem(0x9e79));
        // CB 47 00EE
        gbc.setState(0x228b, 0x32e4, 0x6df0, 0xe23f, 0x4a81, 0x288, 0x1, 0x1);
        gbc.writeMem(0x228b, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x32e4, gbc.sp());
        EXPECT(0x228d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 47 00EF
        gbc.setState(0xcbb2, 0xea73, 0xc980, 0x3d6e, 0x76f5, 0x4965, 0x0, 0x0);
        gbc.writeMem(0xcbb2, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xea73, gbc.sp());
        EXPECT(0xcbb4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcbb2));
        EXPECT(0x47, gbc.readMem(0xcbb3));
        // CB 47 00F0
        gbc.setState(0xe227, 0x130e, 0xb5d0, 0xbe3a, 0x5884, 0x33ac, 0x0, 0x0);
        gbc.writeMem(0xe227, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x130e, gbc.sp());
        EXPECT(0xe229, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe227));
        EXPECT(0x47, gbc.readMem(0xe228));
        // CB 47 00F1
        gbc.setState(0x50ee, 0xd3fa, 0x90, 0x2114, 0xd654, 0x6401, 0x1, 0x1);
        gbc.writeMem(0x50ee, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xd3fa, gbc.sp());
        EXPECT(0x50f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 47 00F2
        gbc.setState(0x3fa7, 0xb76e, 0xe030, 0x4fbb, 0x8a38, 0xeefd, 0x0, 0x0);
        gbc.writeMem(0x3fa7, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xb76e, gbc.sp());
        EXPECT(0x3fa9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 47 00F3
        gbc.setState(0xaa6d, 0x98d5, 0xe370, 0x5fc7, 0x65f9, 0xf96e, 0x1, 0x0);
        gbc.writeMem(0xaa6d, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x98d5, gbc.sp());
        EXPECT(0xaa6f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa6d));
        EXPECT(0x47, gbc.readMem(0xaa6e));
        // CB 47 00F4
        gbc.setState(0x5756, 0x683f, 0xb7c0, 0xc227, 0x7ec4, 0x89e, 0x1, 0x0);
        gbc.writeMem(0x5756, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x683f, gbc.sp());
        EXPECT(0x5758, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 47 00F5
        gbc.setState(0x7aeb, 0x43df, 0xf870, 0x2ce0, 0x996f, 0x4c8c, 0x1, 0x0);
        gbc.writeMem(0x7aeb, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x43df, gbc.sp());
        EXPECT(0x7aed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 47 00F6
        gbc.setState(0x2de8, 0xd0f4, 0x53f0, 0x4193, 0x4db6, 0x4ef6, 0x0, 0x1);
        gbc.writeMem(0x2de8, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xd0f4, gbc.sp());
        EXPECT(0x2dea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 47 00F7
        gbc.setState(0x1e33, 0x4455, 0xe8b0, 0x5fff, 0x501d, 0xb027, 0x0, 0x1);
        gbc.writeMem(0x1e33, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x4455, gbc.sp());
        EXPECT(0x1e35, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 47 00F8
        gbc.setState(0x97c7, 0x202f, 0x4f20, 0xbe3a, 0xf571, 0xe853, 0x0, 0x1);
        gbc.writeMem(0x97c7, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x202f, gbc.sp());
        EXPECT(0x97c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x97c7));
        EXPECT(0x47, gbc.readMem(0x97c8));
        // CB 47 00FA
        gbc.setState(0x270e, 0x9672, 0xe6e0, 0x3b9a, 0x9861, 0xb7de, 0x1, 0x1);
        gbc.writeMem(0x270e, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x9672, gbc.sp());
        EXPECT(0x2710, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 47 00FB
        gbc.setState(0x7a69, 0x90ae, 0x3ee0, 0x9b5b, 0x704e, 0x81c9, 0x1, 0x0);
        gbc.writeMem(0x7a69, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x90ae, gbc.sp());
        EXPECT(0x7a6b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 47 00FC
        gbc.setState(0xa3cb, 0x608e, 0xdc50, 0xda0b, 0x4b72, 0x8b41, 0x0, 0x0);
        gbc.writeMem(0xa3cb, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x608e, gbc.sp());
        EXPECT(0xa3cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa3cb));
        EXPECT(0x47, gbc.readMem(0xa3cc));
        // CB 47 00FE
        gbc.setState(0x1177, 0x8081, 0x6000, 0x6074, 0x40cb, 0x4929, 0x1, 0x1);
        gbc.writeMem(0x1177, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x8081, gbc.sp());
        EXPECT(0x1179, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 47 00FF
        gbc.setState(0x9da0, 0x4045, 0xe4e0, 0x80ce, 0x1ff0, 0x4036, 0x1, 0x0);
        gbc.writeMem(0x9da0, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x4045, gbc.sp());
        EXPECT(0x9da2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9da0));
        EXPECT(0x47, gbc.readMem(0x9da1));
        // CB 47 0100
        gbc.setState(0xcf20, 0xec9, 0x2c20, 0xc4bf, 0xa1f, 0x66c6, 0x1, 0x0);
        gbc.writeMem(0xcf20, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xec9, gbc.sp());
        EXPECT(0xcf22, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf20));
        EXPECT(0x47, gbc.readMem(0xcf21));
        // CB 47 0101
        gbc.setState(0xa947, 0xa0ee, 0xbe40, 0xc043, 0x690b, 0x8b45, 0x1, 0x0);
        gbc.writeMem(0xa947, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xa0ee, gbc.sp());
        EXPECT(0xa949, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa947));
        EXPECT(0x47, gbc.readMem(0xa948));
        // CB 47 0102
        gbc.setState(0x197c, 0xd06a, 0x3690, 0x432e, 0x2eca, 0x8b68, 0x0, 0x1);
        gbc.writeMem(0x197c, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xd06a, gbc.sp());
        EXPECT(0x197e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 47 0103
        gbc.setState(0x4657, 0x8331, 0x8320, 0xd94a, 0x1921, 0xe985, 0x0, 0x1);
        gbc.writeMem(0x4657, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x8331, gbc.sp());
        EXPECT(0x4659, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 47 0104
        gbc.setState(0x243d, 0x459e, 0x3890, 0x5ec0, 0x9578, 0x7225, 0x1, 0x1);
        gbc.writeMem(0x243d, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x459e, gbc.sp());
        EXPECT(0x243f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 47 0105
        gbc.setState(0xc448, 0x854c, 0xb900, 0x3a21, 0xc3f3, 0x1e43, 0x0, 0x0);
        gbc.writeMem(0xc448, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x854c, gbc.sp());
        EXPECT(0xc44a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc448));
        EXPECT(0x47, gbc.readMem(0xc449));
        // CB 47 0106
        gbc.setState(0xd758, 0xb33c, 0xb4d0, 0x1190, 0xc5d5, 0x1472, 0x1, 0x0);
        gbc.writeMem(0xd758, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xb33c, gbc.sp());
        EXPECT(0xd75a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd758));
        EXPECT(0x47, gbc.readMem(0xd759));
        // CB 47 0107
        gbc.setState(0xc12a, 0x9bdc, 0x1b20, 0xef49, 0x1f4, 0xa6f9, 0x0, 0x0);
        gbc.writeMem(0xc12a, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x9bdc, gbc.sp());
        EXPECT(0xc12c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc12a));
        EXPECT(0x47, gbc.readMem(0xc12b));
        // CB 47 0108
        gbc.setState(0x188e, 0xe7c1, 0x4a90, 0x81b7, 0x82cf, 0x2e0f, 0x0, 0x1);
        gbc.writeMem(0x188e, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xe7c1, gbc.sp());
        EXPECT(0x1890, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 47 0109
        gbc.setState(0x7ca0, 0xea22, 0xeb00, 0x78fa, 0xf887, 0x43d0, 0x1, 0x1);
        gbc.writeMem(0x7ca0, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xea22, gbc.sp());
        EXPECT(0x7ca2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 47 010A
        gbc.setState(0xec76, 0x6676, 0x9680, 0x4bfe, 0xfb15, 0xa70, 0x1, 0x1);
        gbc.writeMem(0xec76, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x6676, gbc.sp());
        EXPECT(0xec78, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec76));
        EXPECT(0x47, gbc.readMem(0xec77));
        // CB 47 010B
        gbc.setState(0x1fb2, 0x1c2b, 0xe3a0, 0xe6f5, 0xd90b, 0x34d3, 0x1, 0x1);
        gbc.writeMem(0x1fb2, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x1c2b, gbc.sp());
        EXPECT(0x1fb4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 47 010C
        gbc.setState(0x62ed, 0x3e56, 0x28b0, 0x9cfa, 0x1304, 0xb5f6, 0x1, 0x1);
        gbc.writeMem(0x62ed, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x3e56, gbc.sp());
        EXPECT(0x62ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 47 010D
        gbc.setState(0x54e2, 0x611b, 0xb250, 0x8a9f, 0x3aa3, 0x37e9, 0x0, 0x0);
        gbc.writeMem(0x54e2, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x611b, gbc.sp());
        EXPECT(0x54e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 47 010E
        gbc.setState(0x267, 0xd4e1, 0x5090, 0x59db, 0x9d0, 0xda3b, 0x1, 0x1);
        gbc.writeMem(0x267, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xd4e1, gbc.sp());
        EXPECT(0x269, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 47 010F
        gbc.setState(0x5905, 0x434, 0xea80, 0xf40a, 0x1de1, 0xbb14, 0x1, 0x0);
        gbc.writeMem(0x5905, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x434, gbc.sp());
        EXPECT(0x5907, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 47 0111
        gbc.setState(0x5584, 0xc242, 0xd970, 0xe342, 0x2d1a, 0x43e5, 0x1, 0x1);
        gbc.writeMem(0x5584, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xc242, gbc.sp());
        EXPECT(0x5586, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 47 0112
        gbc.setState(0x24f5, 0x8fa3, 0x81f0, 0xa887, 0xe05e, 0xae66, 0x0, 0x0);
        gbc.writeMem(0x24f5, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x8fa3, gbc.sp());
        EXPECT(0x24f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 47 0113
        gbc.setState(0x7da8, 0x6795, 0x8760, 0x9a37, 0xd68, 0x22ca, 0x1, 0x1);
        gbc.writeMem(0x7da8, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x6795, gbc.sp());
        EXPECT(0x7daa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 47 0114
        gbc.setState(0xe04f, 0x7f1c, 0xb780, 0x8c06, 0xe1a9, 0x9c13, 0x0, 0x0);
        gbc.writeMem(0xe04f, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x7f1c, gbc.sp());
        EXPECT(0xe051, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe04f));
        EXPECT(0x47, gbc.readMem(0xe050));
        // CB 47 0115
        gbc.setState(0xdf2b, 0xa33, 0x34b0, 0xf1ee, 0x875d, 0xf3ef, 0x1, 0x0);
        gbc.writeMem(0xdf2b, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xa33, gbc.sp());
        EXPECT(0xdf2d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf2b));
        EXPECT(0x47, gbc.readMem(0xdf2c));
        // CB 47 0116
        gbc.setState(0x74f5, 0x16b4, 0x4510, 0xbbda, 0x6814, 0xd8e, 0x1, 0x0);
        gbc.writeMem(0x74f5, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x16b4, gbc.sp());
        EXPECT(0x74f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 47 0117
        gbc.setState(0x13d0, 0xb711, 0x7b50, 0x4c64, 0xe556, 0xfebf, 0x0, 0x0);
        gbc.writeMem(0x13d0, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xb711, gbc.sp());
        EXPECT(0x13d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 47 0118
        gbc.setState(0xa7e2, 0xa83c, 0x440, 0x1644, 0x543e, 0xd62d, 0x0, 0x0);
        gbc.writeMem(0xa7e2, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xa83c, gbc.sp());
        EXPECT(0xa7e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa7e2));
        EXPECT(0x47, gbc.readMem(0xa7e3));
        // CB 47 0119
        gbc.setState(0xc99a, 0x6c3a, 0xf360, 0x516e, 0xd513, 0x6094, 0x1, 0x0);
        gbc.writeMem(0xc99a, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x6c3a, gbc.sp());
        EXPECT(0xc99c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc99a));
        EXPECT(0x47, gbc.readMem(0xc99b));
        // CB 47 011A
        gbc.setState(0x425d, 0xbe66, 0x69b0, 0x18ad, 0xe0c2, 0xfa6a, 0x1, 0x1);
        gbc.writeMem(0x425d, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xbe66, gbc.sp());
        EXPECT(0x425f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 47 011B
        gbc.setState(0x2cd2, 0x6e2, 0xcb30, 0xf632, 0xe902, 0x291d, 0x0, 0x1);
        gbc.writeMem(0x2cd2, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x6e2, gbc.sp());
        EXPECT(0x2cd4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 47 011C
        gbc.setState(0xadb1, 0xe232, 0x7670, 0x6441, 0xc99f, 0x17fd, 0x1, 0x1);
        gbc.writeMem(0xadb1, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xe232, gbc.sp());
        EXPECT(0xadb3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xadb1));
        EXPECT(0x47, gbc.readMem(0xadb2));
        // CB 47 011F
        gbc.setState(0x3bbe, 0x5ba7, 0x3ce0, 0xb818, 0xb093, 0xee79, 0x0, 0x1);
        gbc.writeMem(0x3bbe, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x5ba7, gbc.sp());
        EXPECT(0x3bc0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 47 0120
        gbc.setState(0x68b9, 0xff49, 0x7c40, 0xdb45, 0x476d, 0x2085, 0x0, 0x0);
        gbc.writeMem(0x68b9, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xff49, gbc.sp());
        EXPECT(0x68bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 47 0121
        gbc.setState(0x9ab2, 0x414f, 0x5420, 0x12a8, 0xae18, 0xe6da, 0x0, 0x0);
        gbc.writeMem(0x9ab2, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x414f, gbc.sp());
        EXPECT(0x9ab4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ab2));
        EXPECT(0x47, gbc.readMem(0x9ab3));
        // CB 47 0122
        gbc.setState(0xd02d, 0x2860, 0x8a70, 0x8106, 0xd71b, 0xb499, 0x0, 0x0);
        gbc.writeMem(0xd02d, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x2860, gbc.sp());
        EXPECT(0xd02f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd02d));
        EXPECT(0x47, gbc.readMem(0xd02e));
        // CB 47 0123
        gbc.setState(0x9f5d, 0x1ed9, 0x2780, 0xaab1, 0xd70e, 0x6fb4, 0x1, 0x1);
        gbc.writeMem(0x9f5d, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x1ed9, gbc.sp());
        EXPECT(0x9f5f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f5d));
        EXPECT(0x47, gbc.readMem(0x9f5e));
        // CB 47 0124
        gbc.setState(0xa269, 0x1f8d, 0x980, 0x8250, 0x8c21, 0x6555, 0x0, 0x1);
        gbc.writeMem(0xa269, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x1f8d, gbc.sp());
        EXPECT(0xa26b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa269));
        EXPECT(0x47, gbc.readMem(0xa26a));
        // CB 47 0125
        gbc.setState(0x32a3, 0x14bb, 0xab00, 0x8f83, 0xd9b6, 0xcd24, 0x0, 0x1);
        gbc.writeMem(0x32a3, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x14bb, gbc.sp());
        EXPECT(0x32a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 47 0126
        gbc.setState(0xad8a, 0xcc24, 0x7830, 0x9ed1, 0xd12c, 0x7b68, 0x0, 0x1);
        gbc.writeMem(0xad8a, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xcc24, gbc.sp());
        EXPECT(0xad8c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad8a));
        EXPECT(0x47, gbc.readMem(0xad8b));
        // CB 47 0127
        gbc.setState(0x9f44, 0x590e, 0xb170, 0x5c66, 0xb720, 0x7745, 0x1, 0x0);
        gbc.writeMem(0x9f44, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x590e, gbc.sp());
        EXPECT(0x9f46, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f44));
        EXPECT(0x47, gbc.readMem(0x9f45));
        // CB 47 0128
        gbc.setState(0x76c3, 0x733a, 0xda20, 0x9d93, 0x26d0, 0x7a02, 0x1, 0x1);
        gbc.writeMem(0x76c3, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x733a, gbc.sp());
        EXPECT(0x76c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 47 0129
        gbc.setState(0x6b38, 0x403a, 0x1170, 0xb2cb, 0x34e2, 0xd143, 0x0, 0x0);
        gbc.writeMem(0x6b38, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x403a, gbc.sp());
        EXPECT(0x6b3a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 47 012A
        gbc.setState(0x1a19, 0x8d9c, 0x8e80, 0x583, 0x1dd, 0x8a47, 0x1, 0x1);
        gbc.writeMem(0x1a19, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x8d9c, gbc.sp());
        EXPECT(0x1a1b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 47 012B
        gbc.setState(0x9108, 0x443a, 0x3c70, 0x48bd, 0x5feb, 0x5c3d, 0x0, 0x1);
        gbc.writeMem(0x9108, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x443a, gbc.sp());
        EXPECT(0x910a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9108));
        EXPECT(0x47, gbc.readMem(0x9109));
        // CB 47 012D
        gbc.setState(0xe80f, 0x3673, 0xdaa0, 0x6c84, 0x17d8, 0xfa3a, 0x0, 0x1);
        gbc.writeMem(0xe80f, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x3673, gbc.sp());
        EXPECT(0xe811, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe80f));
        EXPECT(0x47, gbc.readMem(0xe810));
        // CB 47 012F
        gbc.setState(0xb1d3, 0x1611, 0xf570, 0xac88, 0x76c3, 0xb917, 0x1, 0x0);
        gbc.writeMem(0xb1d3, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x1611, gbc.sp());
        EXPECT(0xb1d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb1d3));
        EXPECT(0x47, gbc.readMem(0xb1d4));
        // CB 47 0130
        gbc.setState(0xce44, 0xf015, 0x9840, 0x3989, 0x74c2, 0xa25, 0x0, 0x0);
        gbc.writeMem(0xce44, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xf015, gbc.sp());
        EXPECT(0xce46, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce44));
        EXPECT(0x47, gbc.readMem(0xce45));
        // CB 47 0131
        gbc.setState(0xaaf0, 0xc081, 0xd1e0, 0xa23d, 0x4e44, 0xeda8, 0x0, 0x1);
        gbc.writeMem(0xaaf0, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xc081, gbc.sp());
        EXPECT(0xaaf2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaaf0));
        EXPECT(0x47, gbc.readMem(0xaaf1));
        // CB 47 0132
        gbc.setState(0xe8bb, 0x54b8, 0xde20, 0xa9df, 0x37dc, 0xe4bf, 0x0, 0x0);
        gbc.writeMem(0xe8bb, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x54b8, gbc.sp());
        EXPECT(0xe8bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe8bb));
        EXPECT(0x47, gbc.readMem(0xe8bc));
        // CB 47 0133
        gbc.setState(0x67f8, 0x2a69, 0x55a0, 0x930a, 0x62b5, 0x46c6, 0x1, 0x0);
        gbc.writeMem(0x67f8, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x2a69, gbc.sp());
        EXPECT(0x67fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 47 0134
        gbc.setState(0x2e25, 0x8069, 0x7230, 0x2298, 0x969b, 0xf3cc, 0x0, 0x0);
        gbc.writeMem(0x2e25, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x8069, gbc.sp());
        EXPECT(0x2e27, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 47 0135
        gbc.setState(0x5569, 0xfc41, 0xf0f0, 0x6b47, 0xaa4e, 0x62f4, 0x0, 0x0);
        gbc.writeMem(0x5569, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xfc41, gbc.sp());
        EXPECT(0x556b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 47 0136
        gbc.setState(0x211d, 0xadc8, 0x1f20, 0x5e81, 0x6d78, 0xf180, 0x0, 0x0);
        gbc.writeMem(0x211d, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xadc8, gbc.sp());
        EXPECT(0x211f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 47 0137
        gbc.setState(0x758c, 0x9d70, 0x3df0, 0xd736, 0xc7fe, 0xe0e7, 0x1, 0x0);
        gbc.writeMem(0x758c, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x9d70, gbc.sp());
        EXPECT(0x758e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 47 0138
        gbc.setState(0xcf19, 0xf18b, 0xfba0, 0x688d, 0x21c9, 0xcd4f, 0x0, 0x0);
        gbc.writeMem(0xcf19, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xf18b, gbc.sp());
        EXPECT(0xcf1b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf19));
        EXPECT(0x47, gbc.readMem(0xcf1a));
        // CB 47 0139
        gbc.setState(0x4dca, 0x6bb1, 0x6000, 0xb9e7, 0xda25, 0xffe4, 0x1, 0x1);
        gbc.writeMem(0x4dca, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x6bb1, gbc.sp());
        EXPECT(0x4dcc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 47 013A
        gbc.setState(0xc5ce, 0x79b8, 0x31e0, 0x8769, 0x97bb, 0x22ca, 0x0, 0x0);
        gbc.writeMem(0xc5ce, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x79b8, gbc.sp());
        EXPECT(0xc5d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc5ce));
        EXPECT(0x47, gbc.readMem(0xc5cf));
        // CB 47 013B
        gbc.setState(0xc171, 0x3083, 0xa6d0, 0x6751, 0x2c66, 0x3664, 0x0, 0x0);
        gbc.writeMem(0xc171, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x3083, gbc.sp());
        EXPECT(0xc173, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc171));
        EXPECT(0x47, gbc.readMem(0xc172));
        // CB 47 013C
        gbc.setState(0x117, 0xb334, 0x5a30, 0xa2f0, 0x375c, 0xe8be, 0x0, 0x0);
        gbc.writeMem(0x117, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xb334, gbc.sp());
        EXPECT(0x119, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 47 013D
        gbc.setState(0x86f6, 0x5a48, 0xf900, 0xa18, 0xbd3c, 0x84c6, 0x0, 0x0);
        gbc.writeMem(0x86f6, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x5a48, gbc.sp());
        EXPECT(0x86f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x86f6));
        EXPECT(0x47, gbc.readMem(0x86f7));
        // CB 47 013E
        gbc.setState(0x3eb, 0xcc26, 0xc450, 0xf47e, 0xa85a, 0x6022, 0x1, 0x0);
        gbc.writeMem(0x3eb, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xcc26, gbc.sp());
        EXPECT(0x3ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 47 013F
        gbc.setState(0x4517, 0xb5d, 0xdfa0, 0x758e, 0xb55a, 0xe0bd, 0x1, 0x0);
        gbc.writeMem(0x4517, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xb5d, gbc.sp());
        EXPECT(0x4519, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 47 0140
        gbc.setState(0x1b60, 0x4b49, 0xf610, 0x271a, 0xa7d0, 0x91c2, 0x1, 0x0);
        gbc.writeMem(0x1b60, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x4b49, gbc.sp());
        EXPECT(0x1b62, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 47 0141
        gbc.setState(0xae77, 0x54a9, 0x2ae0, 0x2d7c, 0x38d2, 0x874a, 0x0, 0x1);
        gbc.writeMem(0xae77, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x54a9, gbc.sp());
        EXPECT(0xae79, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae77));
        EXPECT(0x47, gbc.readMem(0xae78));
        // CB 47 0142
        gbc.setState(0x3a9b, 0x23b3, 0xa280, 0x4f8a, 0x818c, 0xa4ad, 0x0, 0x0);
        gbc.writeMem(0x3a9b, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x23b3, gbc.sp());
        EXPECT(0x3a9d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 47 0143
        gbc.setState(0x5570, 0xbaf8, 0x3f30, 0x514a, 0x5029, 0xb6f, 0x0, 0x0);
        gbc.writeMem(0x5570, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xbaf8, gbc.sp());
        EXPECT(0x5572, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 47 0144
        gbc.setState(0x13df, 0x2b98, 0x16f0, 0xa35f, 0x8a15, 0xfe2d, 0x0, 0x0);
        gbc.writeMem(0x13df, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x2b98, gbc.sp());
        EXPECT(0x13e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 47 0145
        gbc.setState(0xd74f, 0x352e, 0xd530, 0x8c7e, 0xfa47, 0x4a2, 0x0, 0x1);
        gbc.writeMem(0xd74f, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x352e, gbc.sp());
        EXPECT(0xd751, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd74f));
        EXPECT(0x47, gbc.readMem(0xd750));
        // CB 47 0146
        gbc.setState(0x4646, 0x5fa7, 0x57c0, 0xcc13, 0x1495, 0xf664, 0x1, 0x1);
        gbc.writeMem(0x4646, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x5fa7, gbc.sp());
        EXPECT(0x4648, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 47 0147
        gbc.setState(0xb373, 0x16eb, 0xc960, 0x631a, 0x5214, 0x3039, 0x0, 0x1);
        gbc.writeMem(0xb373, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x16eb, gbc.sp());
        EXPECT(0xb375, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb373));
        EXPECT(0x47, gbc.readMem(0xb374));
        // CB 47 0148
        gbc.setState(0x44af, 0x5c1a, 0xf180, 0x736b, 0xf4a8, 0xda1e, 0x1, 0x0);
        gbc.writeMem(0x44af, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x5c1a, gbc.sp());
        EXPECT(0x44b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 47 0149
        gbc.setState(0x3a1a, 0xa959, 0x6020, 0x1c81, 0x9430, 0x417, 0x1, 0x1);
        gbc.writeMem(0x3a1a, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xa959, gbc.sp());
        EXPECT(0x3a1c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 47 014C
        gbc.setState(0x178d, 0x2c7c, 0xe060, 0x29d6, 0xb0e8, 0x5eba, 0x0, 0x0);
        gbc.writeMem(0x178d, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x2c7c, gbc.sp());
        EXPECT(0x178f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 47 014D
        gbc.setState(0x2dea, 0xfbfc, 0x5a40, 0x9b29, 0xaee8, 0x8e17, 0x1, 0x0);
        gbc.writeMem(0x2dea, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xfbfc, gbc.sp());
        EXPECT(0x2dec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 47 014E
        gbc.setState(0x7f54, 0x5a7, 0x5ce0, 0x8023, 0x87c, 0x8444, 0x1, 0x0);
        gbc.writeMem(0x7f54, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x5a7, gbc.sp());
        EXPECT(0x7f56, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 47 014F
        gbc.setState(0xd11, 0xf92a, 0x8730, 0xad6d, 0xbdbf, 0x9737, 0x1, 0x0);
        gbc.writeMem(0xd11, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xf92a, gbc.sp());
        EXPECT(0xd13, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 47 0150
        gbc.setState(0x4c5, 0x7a39, 0x9ce0, 0xf48d, 0x837f, 0xfb2b, 0x1, 0x1);
        gbc.writeMem(0x4c5, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x7a39, gbc.sp());
        EXPECT(0x4c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 47 0151
        gbc.setState(0x9086, 0xb526, 0x1850, 0x859b, 0x831a, 0x7488, 0x0, 0x1);
        gbc.writeMem(0x9086, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xb526, gbc.sp());
        EXPECT(0x9088, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9086));
        EXPECT(0x47, gbc.readMem(0x9087));
        // CB 47 0152
        gbc.setState(0xea16, 0xc598, 0x19f0, 0xc526, 0xf366, 0xb348, 0x1, 0x1);
        gbc.writeMem(0xea16, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xc598, gbc.sp());
        EXPECT(0xea18, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea16));
        EXPECT(0x47, gbc.readMem(0xea17));
        // CB 47 0153
        gbc.setState(0x2204, 0x510e, 0xd430, 0x758f, 0xf069, 0xc5fc, 0x0, 0x1);
        gbc.writeMem(0x2204, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x510e, gbc.sp());
        EXPECT(0x2206, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 47 0154
        gbc.setState(0x99ee, 0x321a, 0x5d80, 0x220, 0x9392, 0x2ef5, 0x0, 0x1);
        gbc.writeMem(0x99ee, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x321a, gbc.sp());
        EXPECT(0x99f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x99ee));
        EXPECT(0x47, gbc.readMem(0x99ef));
        // CB 47 0155
        gbc.setState(0x4539, 0xb503, 0xb1f0, 0x9190, 0x3c24, 0x24df, 0x1, 0x1);
        gbc.writeMem(0x4539, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xb503, gbc.sp());
        EXPECT(0x453b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 47 0156
        gbc.setState(0x5690, 0xa63, 0xce60, 0x7b0e, 0x419d, 0x8b0, 0x0, 0x0);
        gbc.writeMem(0x5690, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xa63, gbc.sp());
        EXPECT(0x5692, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 47 0157
        gbc.setState(0x96d1, 0x2450, 0x1aa0, 0x652, 0x5e1f, 0x530b, 0x1, 0x0);
        gbc.writeMem(0x96d1, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x2450, gbc.sp());
        EXPECT(0x96d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x96d1));
        EXPECT(0x47, gbc.readMem(0x96d2));
        // CB 47 0158
        gbc.setState(0x17b3, 0x5d80, 0xa9c0, 0xfa1e, 0xf07, 0x4794, 0x1, 0x1);
        gbc.writeMem(0x17b3, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x5d80, gbc.sp());
        EXPECT(0x17b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 47 0159
        gbc.setState(0x5882, 0x8b38, 0x19e0, 0x3365, 0x87f0, 0x3c7a, 0x1, 0x1);
        gbc.writeMem(0x5882, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x8b38, gbc.sp());
        EXPECT(0x5884, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 47 015B
        gbc.setState(0xefc9, 0x7d07, 0xeff0, 0x7fa9, 0xd1e3, 0xb1fa, 0x0, 0x0);
        gbc.writeMem(0xefc9, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x7d07, gbc.sp());
        EXPECT(0xefcb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xefc9));
        EXPECT(0x47, gbc.readMem(0xefca));
        // CB 47 015C
        gbc.setState(0xa76c, 0x4012, 0xa450, 0x1d9d, 0xe2e0, 0xfa28, 0x0, 0x0);
        gbc.writeMem(0xa76c, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x4012, gbc.sp());
        EXPECT(0xa76e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa76c));
        EXPECT(0x47, gbc.readMem(0xa76d));
        // CB 47 015D
        gbc.setState(0xd5e4, 0x42ef, 0xd720, 0xc45d, 0x6d7e, 0x7ef, 0x1, 0x0);
        gbc.writeMem(0xd5e4, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x42ef, gbc.sp());
        EXPECT(0xd5e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd5e4));
        EXPECT(0x47, gbc.readMem(0xd5e5));
        // CB 47 015E
        gbc.setState(0x81b6, 0x6402, 0x8da0, 0x35c5, 0x8329, 0x75f7, 0x1, 0x0);
        gbc.writeMem(0x81b6, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x6402, gbc.sp());
        EXPECT(0x81b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x81b6));
        EXPECT(0x47, gbc.readMem(0x81b7));
        // CB 47 015F
        gbc.setState(0x9cb, 0xc4ae, 0x3680, 0x648f, 0x69bd, 0x2c37, 0x0, 0x0);
        gbc.writeMem(0x9cb, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xc4ae, gbc.sp());
        EXPECT(0x9cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 47 0160
        gbc.setState(0x8811, 0xb96, 0x5d10, 0xdacd, 0x7d9e, 0xafbf, 0x0, 0x0);
        gbc.writeMem(0x8811, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xb96, gbc.sp());
        EXPECT(0x8813, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8811));
        EXPECT(0x47, gbc.readMem(0x8812));
        // CB 47 0161
        gbc.setState(0x54c3, 0x4272, 0x13b0, 0x8e3f, 0x4fe5, 0x18b8, 0x1, 0x0);
        gbc.writeMem(0x54c3, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x4272, gbc.sp());
        EXPECT(0x54c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 47 0162
        gbc.setState(0xb12f, 0xca53, 0x4620, 0xcda2, 0x98d2, 0x555b, 0x1, 0x1);
        gbc.writeMem(0xb12f, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xca53, gbc.sp());
        EXPECT(0xb131, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb12f));
        EXPECT(0x47, gbc.readMem(0xb130));
        // CB 47 0163
        gbc.setState(0x3627, 0x93a, 0xf230, 0xa9c2, 0x7673, 0x8500, 0x0, 0x1);
        gbc.writeMem(0x3627, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x93a, gbc.sp());
        EXPECT(0x3629, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 47 0164
        gbc.setState(0x3a8f, 0xc472, 0xa60, 0xa09b, 0x2580, 0xc867, 0x1, 0x0);
        gbc.writeMem(0x3a8f, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xc472, gbc.sp());
        EXPECT(0x3a91, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 47 0165
        gbc.setState(0x11d1, 0x5a1f, 0x4aa0, 0x1afa, 0x58e9, 0xa497, 0x1, 0x0);
        gbc.writeMem(0x11d1, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x5a1f, gbc.sp());
        EXPECT(0x11d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 47 0166
        gbc.setState(0x44f1, 0x3568, 0x6080, 0xa4ea, 0x16e1, 0xf48b, 0x0, 0x0);
        gbc.writeMem(0x44f1, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x3568, gbc.sp());
        EXPECT(0x44f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 47 0167
        gbc.setState(0x2ba4, 0x5bcb, 0xbba0, 0x910b, 0x6bbb, 0x6616, 0x1, 0x1);
        gbc.writeMem(0x2ba4, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x5bcb, gbc.sp());
        EXPECT(0x2ba6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 47 0168
        gbc.setState(0x914a, 0xd370, 0xbb20, 0x5ac2, 0x6629, 0x4155, 0x0, 0x1);
        gbc.writeMem(0x914a, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xd370, gbc.sp());
        EXPECT(0x914c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x914a));
        EXPECT(0x47, gbc.readMem(0x914b));
        // CB 47 0169
        gbc.setState(0xc047, 0x8b30, 0xf180, 0xe7f2, 0x80e6, 0xf1c8, 0x0, 0x0);
        gbc.writeMem(0xc047, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x8b30, gbc.sp());
        EXPECT(0xc049, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc047));
        EXPECT(0x47, gbc.readMem(0xc048));
        // CB 47 016A
        gbc.setState(0x7df8, 0xa534, 0x5960, 0x81a6, 0x3e81, 0x5809, 0x1, 0x1);
        gbc.writeMem(0x7df8, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xa534, gbc.sp());
        EXPECT(0x7dfa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 47 016B
        gbc.setState(0xca, 0x1d58, 0x52e0, 0x1604, 0xa2fa, 0x1063, 0x1, 0x1);
        gbc.writeMem(0xca, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x1d58, gbc.sp());
        EXPECT(0xcc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 47 016C
        gbc.setState(0xc034, 0xa6e0, 0x29a0, 0x8357, 0x86e9, 0xaa94, 0x0, 0x1);
        gbc.writeMem(0xc034, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xa6e0, gbc.sp());
        EXPECT(0xc036, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc034));
        EXPECT(0x47, gbc.readMem(0xc035));
        // CB 47 016D
        gbc.setState(0xb97b, 0xb32, 0xfcd0, 0xd28e, 0xc0d4, 0x3b8e, 0x1, 0x1);
        gbc.writeMem(0xb97b, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xb32, gbc.sp());
        EXPECT(0xb97d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb97b));
        EXPECT(0x47, gbc.readMem(0xb97c));
        // CB 47 016E
        gbc.setState(0x797d, 0x7b2c, 0xe760, 0xd4df, 0xbbe9, 0x1b86, 0x0, 0x0);
        gbc.writeMem(0x797d, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x7b2c, gbc.sp());
        EXPECT(0x797f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 47 016F
        gbc.setState(0x40d7, 0x18d3, 0x9b70, 0x802b, 0x11b0, 0x920f, 0x0, 0x1);
        gbc.writeMem(0x40d7, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x18d3, gbc.sp());
        EXPECT(0x40d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 47 0170
        gbc.setState(0x692b, 0x24f, 0xae40, 0x390a, 0x27d9, 0x7987, 0x0, 0x0);
        gbc.writeMem(0x692b, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x24f, gbc.sp());
        EXPECT(0x692d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 47 0171
        gbc.setState(0x7df6, 0x4a22, 0x6a30, 0xe706, 0xc749, 0xa1e0, 0x1, 0x0);
        gbc.writeMem(0x7df6, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x4a22, gbc.sp());
        EXPECT(0x7df8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 47 0172
        gbc.setState(0x9b5e, 0xfed5, 0xb5d0, 0xa818, 0xba0b, 0x75c2, 0x0, 0x1);
        gbc.writeMem(0x9b5e, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xfed5, gbc.sp());
        EXPECT(0x9b60, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b5e));
        EXPECT(0x47, gbc.readMem(0x9b5f));
        // CB 47 0173
        gbc.setState(0x8156, 0xe1ae, 0x75e0, 0x4501, 0xdc4, 0xe46c, 0x0, 0x1);
        gbc.writeMem(0x8156, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xe1ae, gbc.sp());
        EXPECT(0x8158, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8156));
        EXPECT(0x47, gbc.readMem(0x8157));
        // CB 47 0174
        gbc.setState(0x715c, 0xd094, 0xdf50, 0xe336, 0xc082, 0xc8d5, 0x0, 0x0);
        gbc.writeMem(0x715c, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xd094, gbc.sp());
        EXPECT(0x715e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 47 0175
        gbc.setState(0xb131, 0x1eea, 0x4f40, 0xf33d, 0x5c2b, 0x40ec, 0x1, 0x0);
        gbc.writeMem(0xb131, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x1eea, gbc.sp());
        EXPECT(0xb133, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb131));
        EXPECT(0x47, gbc.readMem(0xb132));
        // CB 47 0176
        gbc.setState(0x9cef, 0xd44e, 0x5c50, 0x3c77, 0x309f, 0x67b4, 0x0, 0x0);
        gbc.writeMem(0x9cef, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xd44e, gbc.sp());
        EXPECT(0x9cf1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9cef));
        EXPECT(0x47, gbc.readMem(0x9cf0));
        // CB 47 0177
        gbc.setState(0xc668, 0xe465, 0xdb10, 0xa00a, 0x7fa3, 0x9c0d, 0x1, 0x1);
        gbc.writeMem(0xc668, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xe465, gbc.sp());
        EXPECT(0xc66a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc668));
        EXPECT(0x47, gbc.readMem(0xc669));
        // CB 47 0178
        gbc.setState(0x47fd, 0x925f, 0xbf80, 0x949d, 0xad61, 0xe689, 0x1, 0x1);
        gbc.writeMem(0x47fd, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x925f, gbc.sp());
        EXPECT(0x47ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 47 0179
        gbc.setState(0x9898, 0x3195, 0x17f0, 0x3150, 0x2bdf, 0xbdc3, 0x1, 0x1);
        gbc.writeMem(0x9898, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x3195, gbc.sp());
        EXPECT(0x989a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9898));
        EXPECT(0x47, gbc.readMem(0x9899));
        // CB 47 017A
        gbc.setState(0x1f80, 0x4fd2, 0xa780, 0xea64, 0x5362, 0xcddc, 0x0, 0x1);
        gbc.writeMem(0x1f80, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x4fd2, gbc.sp());
        EXPECT(0x1f82, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 47 017B
        gbc.setState(0x1d11, 0x5d66, 0x5fd0, 0x2611, 0xcd57, 0xfcd6, 0x0, 0x1);
        gbc.writeMem(0x1d11, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x5d66, gbc.sp());
        EXPECT(0x1d13, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 47 017C
        gbc.setState(0x1a91, 0x24c1, 0x42c0, 0xb7d3, 0xdb9b, 0xa786, 0x0, 0x0);
        gbc.writeMem(0x1a91, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x24c1, gbc.sp());
        EXPECT(0x1a93, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 47 017D
        gbc.setState(0xb02e, 0x8c0d, 0x8e50, 0xe34b, 0x1c4, 0xf6f, 0x0, 0x0);
        gbc.writeMem(0xb02e, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x8c0d, gbc.sp());
        EXPECT(0xb030, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb02e));
        EXPECT(0x47, gbc.readMem(0xb02f));
        // CB 47 017E
        gbc.setState(0xcb8a, 0x74f3, 0xdeb0, 0x882, 0x1a84, 0xb9b1, 0x0, 0x1);
        gbc.writeMem(0xcb8a, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x74f3, gbc.sp());
        EXPECT(0xcb8c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb8a));
        EXPECT(0x47, gbc.readMem(0xcb8b));
        // CB 47 017F
        gbc.setState(0x14b8, 0x2f9b, 0x1400, 0xa9a9, 0x9351, 0xd95c, 0x0, 0x0);
        gbc.writeMem(0x14b8, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x2f9b, gbc.sp());
        EXPECT(0x14ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 47 0180
        gbc.setState(0x68e4, 0x957e, 0x9f20, 0x8b1c, 0x7af0, 0xc3f9, 0x0, 0x0);
        gbc.writeMem(0x68e4, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x957e, gbc.sp());
        EXPECT(0x68e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 47 0181
        gbc.setState(0xbecf, 0x6987, 0x7c00, 0x14a2, 0x9a27, 0x3a9e, 0x1, 0x1);
        gbc.writeMem(0xbecf, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x6987, gbc.sp());
        EXPECT(0xbed1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbecf));
        EXPECT(0x47, gbc.readMem(0xbed0));
        // CB 47 0182
        gbc.setState(0x2328, 0x476, 0xa330, 0xdf83, 0xf15c, 0x9ca1, 0x0, 0x0);
        gbc.writeMem(0x2328, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x476, gbc.sp());
        EXPECT(0x232a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 47 0183
        gbc.setState(0x5b93, 0xb2c, 0x18c0, 0xbbb2, 0xabea, 0xd51d, 0x0, 0x1);
        gbc.writeMem(0x5b93, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xb2c, gbc.sp());
        EXPECT(0x5b95, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 47 0184
        gbc.setState(0x9874, 0x8f76, 0x8c20, 0xa07d, 0xab0e, 0x379, 0x0, 0x1);
        gbc.writeMem(0x9874, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x8f76, gbc.sp());
        EXPECT(0x9876, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9874));
        EXPECT(0x47, gbc.readMem(0x9875));
        // CB 47 0185
        gbc.setState(0x5860, 0x9c1c, 0x32f0, 0x1886, 0xa919, 0xf1f8, 0x0, 0x0);
        gbc.writeMem(0x5860, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x9c1c, gbc.sp());
        EXPECT(0x5862, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 47 0186
        gbc.setState(0xd446, 0x2f14, 0x3b10, 0xd11a, 0xf5bc, 0xd21e, 0x1, 0x1);
        gbc.writeMem(0xd446, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x2f14, gbc.sp());
        EXPECT(0xd448, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd446));
        EXPECT(0x47, gbc.readMem(0xd447));
        // CB 47 0187
        gbc.setState(0x6fcc, 0xd7e7, 0x9740, 0x91c, 0x1325, 0xfb7c, 0x0, 0x0);
        gbc.writeMem(0x6fcc, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xd7e7, gbc.sp());
        EXPECT(0x6fce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 47 0188
        gbc.setState(0x7972, 0x6174, 0x5190, 0x4158, 0x1e15, 0x4d18, 0x1, 0x0);
        gbc.writeMem(0x7972, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x6174, gbc.sp());
        EXPECT(0x7974, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 47 0189
        gbc.setState(0x4410, 0x6ae5, 0xd6b0, 0x3920, 0x1672, 0x23d6, 0x0, 0x1);
        gbc.writeMem(0x4410, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x6ae5, gbc.sp());
        EXPECT(0x4412, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 47 018A
        gbc.setState(0x1785, 0x6fb6, 0x7b20, 0x3bd2, 0x38bb, 0x4fc6, 0x1, 0x1);
        gbc.writeMem(0x1785, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x6fb6, gbc.sp());
        EXPECT(0x1787, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 47 018B
        gbc.setState(0x5809, 0xe329, 0xc690, 0xc894, 0x7b21, 0x2633, 0x1, 0x1);
        gbc.writeMem(0x5809, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xe329, gbc.sp());
        EXPECT(0x580b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 47 018C
        gbc.setState(0x889b, 0xe44c, 0x5da0, 0x7db8, 0x89c6, 0xfdd9, 0x0, 0x1);
        gbc.writeMem(0x889b, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xe44c, gbc.sp());
        EXPECT(0x889d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x889b));
        EXPECT(0x47, gbc.readMem(0x889c));
        // CB 47 018D
        gbc.setState(0xa3fa, 0x4990, 0x1ad0, 0xfad4, 0x5bce, 0x3f4c, 0x0, 0x0);
        gbc.writeMem(0xa3fa, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x4990, gbc.sp());
        EXPECT(0xa3fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa3fa));
        EXPECT(0x47, gbc.readMem(0xa3fb));
        // CB 47 018E
        gbc.setState(0xb6b4, 0x8ed9, 0xb070, 0xb37d, 0xceda, 0xf243, 0x1, 0x0);
        gbc.writeMem(0xb6b4, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x8ed9, gbc.sp());
        EXPECT(0xb6b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb6b4));
        EXPECT(0x47, gbc.readMem(0xb6b5));
        // CB 47 018F
        gbc.setState(0xc405, 0x3c98, 0x1650, 0x165d, 0x1d1f, 0xa6ee, 0x0, 0x0);
        gbc.writeMem(0xc405, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x3c98, gbc.sp());
        EXPECT(0xc407, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc405));
        EXPECT(0x47, gbc.readMem(0xc406));
        // CB 47 0190
        gbc.setState(0x481b, 0x63b8, 0x6510, 0x76be, 0x8ef3, 0x3a55, 0x1, 0x0);
        gbc.writeMem(0x481b, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x63b8, gbc.sp());
        EXPECT(0x481d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 47 0191
        gbc.setState(0x93f5, 0xb469, 0xa590, 0xc6aa, 0x77e7, 0x651a, 0x1, 0x1);
        gbc.writeMem(0x93f5, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xb469, gbc.sp());
        EXPECT(0x93f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x93f5));
        EXPECT(0x47, gbc.readMem(0x93f6));
        // CB 47 0192
        gbc.setState(0x7370, 0x229e, 0x9b80, 0x7f52, 0xc7cd, 0xa6de, 0x0, 0x0);
        gbc.writeMem(0x7370, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x229e, gbc.sp());
        EXPECT(0x7372, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 47 0193
        gbc.setState(0x49f0, 0xe96a, 0xd0b0, 0x12ae, 0xb151, 0xcba3, 0x1, 0x1);
        gbc.writeMem(0x49f0, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xe96a, gbc.sp());
        EXPECT(0x49f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 47 0194
        gbc.setState(0x2522, 0x9a55, 0xdca0, 0xc48c, 0x3944, 0x3cb6, 0x1, 0x0);
        gbc.writeMem(0x2522, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x9a55, gbc.sp());
        EXPECT(0x2524, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 47 0195
        gbc.setState(0x6405, 0xd1c1, 0xb550, 0xe79d, 0x353f, 0x6692, 0x0, 0x0);
        gbc.writeMem(0x6405, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xd1c1, gbc.sp());
        EXPECT(0x6407, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 47 0196
        gbc.setState(0xe9f6, 0xa9cb, 0xac60, 0xaa87, 0xc7a4, 0x15b3, 0x1, 0x1);
        gbc.writeMem(0xe9f6, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xa9cb, gbc.sp());
        EXPECT(0xe9f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe9f6));
        EXPECT(0x47, gbc.readMem(0xe9f7));
        // CB 47 0197
        gbc.setState(0xb404, 0x2c8e, 0x6970, 0xdba, 0x56a3, 0x4b57, 0x1, 0x0);
        gbc.writeMem(0xb404, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x2c8e, gbc.sp());
        EXPECT(0xb406, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb404));
        EXPECT(0x47, gbc.readMem(0xb405));
        // CB 47 0198
        gbc.setState(0xea3c, 0x3a09, 0xb7d0, 0xf921, 0x796, 0xf7a5, 0x0, 0x1);
        gbc.writeMem(0xea3c, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x3a09, gbc.sp());
        EXPECT(0xea3e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea3c));
        EXPECT(0x47, gbc.readMem(0xea3d));
        // CB 47 0199
        gbc.setState(0x711c, 0xdf27, 0x1030, 0x8772, 0xc541, 0xad4a, 0x1, 0x0);
        gbc.writeMem(0x711c, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xdf27, gbc.sp());
        EXPECT(0x711e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 47 019A
        gbc.setState(0x4f36, 0x5594, 0x5c90, 0xb37, 0x47a1, 0x5b9b, 0x1, 0x1);
        gbc.writeMem(0x4f36, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x5594, gbc.sp());
        EXPECT(0x4f38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 47 019B
        gbc.setState(0x1869, 0x2369, 0x5b80, 0xeedb, 0xe12d, 0x12eb, 0x1, 0x0);
        gbc.writeMem(0x1869, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x2369, gbc.sp());
        EXPECT(0x186b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 47 019C
        gbc.setState(0x1584, 0x6b80, 0xe770, 0xfebc, 0x50ea, 0xf40f, 0x1, 0x0);
        gbc.writeMem(0x1584, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x6b80, gbc.sp());
        EXPECT(0x1586, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 47 019D
        gbc.setState(0x3646, 0x9a8f, 0x6b20, 0x43be, 0x6897, 0x3e2a, 0x0, 0x0);
        gbc.writeMem(0x3646, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x9a8f, gbc.sp());
        EXPECT(0x3648, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 47 019E
        gbc.setState(0x34c6, 0xc4da, 0x38f0, 0x2077, 0x8664, 0x737a, 0x1, 0x1);
        gbc.writeMem(0x34c6, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xc4da, gbc.sp());
        EXPECT(0x34c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 47 019F
        gbc.setState(0xe6b, 0x161e, 0xb900, 0x4c02, 0xdefa, 0xdb3e, 0x0, 0x1);
        gbc.writeMem(0xe6b, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x161e, gbc.sp());
        EXPECT(0xe6d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 47 01A0
        gbc.setState(0x1008, 0x9adb, 0xea10, 0x7ab6, 0xe649, 0x7474, 0x0, 0x1);
        gbc.writeMem(0x1008, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x9adb, gbc.sp());
        EXPECT(0x100a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 47 01A1
        gbc.setState(0x1e78, 0x3e3, 0x2410, 0xb1d7, 0x1d59, 0x55e5, 0x1, 0x0);
        gbc.writeMem(0x1e78, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x3e3, gbc.sp());
        EXPECT(0x1e7a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 47 01A2
        gbc.setState(0x99b7, 0x9881, 0x79f0, 0xe2b, 0xa5a2, 0x6642, 0x1, 0x0);
        gbc.writeMem(0x99b7, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x9881, gbc.sp());
        EXPECT(0x99b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x99b7));
        EXPECT(0x47, gbc.readMem(0x99b8));
        // CB 47 01A3
        gbc.setState(0x23c3, 0x64cd, 0x3140, 0x24f7, 0x26c3, 0x1eba, 0x0, 0x1);
        gbc.writeMem(0x23c3, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x64cd, gbc.sp());
        EXPECT(0x23c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 47 01A4
        gbc.setState(0xa2a2, 0xe445, 0xd010, 0x708a, 0xf089, 0x695b, 0x1, 0x0);
        gbc.writeMem(0xa2a2, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xe445, gbc.sp());
        EXPECT(0xa2a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa2a2));
        EXPECT(0x47, gbc.readMem(0xa2a3));
        // CB 47 01A5
        gbc.setState(0x5d6f, 0x267c, 0x3b40, 0xbaf2, 0x8b22, 0x621e, 0x0, 0x1);
        gbc.writeMem(0x5d6f, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x267c, gbc.sp());
        EXPECT(0x5d71, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 47 01A7
        gbc.setState(0x8a97, 0xde85, 0x2b80, 0x5390, 0x16a5, 0xddf4, 0x0, 0x0);
        gbc.writeMem(0x8a97, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xde85, gbc.sp());
        EXPECT(0x8a99, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a97));
        EXPECT(0x47, gbc.readMem(0x8a98));
        // CB 47 01A8
        gbc.setState(0x4e3, 0xb2f9, 0x3130, 0xc6b7, 0x1a1, 0x1dd2, 0x0, 0x0);
        gbc.writeMem(0x4e3, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xb2f9, gbc.sp());
        EXPECT(0x4e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 47 01A9
        gbc.setState(0x3199, 0x21f4, 0xf7d0, 0x50c1, 0x9173, 0x2d75, 0x0, 0x0);
        gbc.writeMem(0x3199, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x21f4, gbc.sp());
        EXPECT(0x319b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 47 01AA
        gbc.setState(0x79de, 0xa90c, 0x4da0, 0xa625, 0x2b97, 0xfa7e, 0x0, 0x1);
        gbc.writeMem(0x79de, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xa90c, gbc.sp());
        EXPECT(0x79e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 47 01AB
        gbc.setState(0x9a94, 0x2dae, 0x4b00, 0x7205, 0x53ce, 0x216f, 0x1, 0x0);
        gbc.writeMem(0x9a94, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x2dae, gbc.sp());
        EXPECT(0x9a96, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a94));
        EXPECT(0x47, gbc.readMem(0x9a95));
        // CB 47 01AC
        gbc.setState(0x21a1, 0xb2fe, 0x5d60, 0x92f6, 0x53ce, 0xe50b, 0x0, 0x1);
        gbc.writeMem(0x21a1, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xb2fe, gbc.sp());
        EXPECT(0x21a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 47 01AD
        gbc.setState(0x3690, 0xa013, 0xf7e0, 0xe480, 0x80b2, 0xd80d, 0x0, 0x0);
        gbc.writeMem(0x3690, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xa013, gbc.sp());
        EXPECT(0x3692, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 47 01AE
        gbc.setState(0x1843, 0x96ca, 0xde50, 0xd00c, 0x70dc, 0x1a2f, 0x0, 0x1);
        gbc.writeMem(0x1843, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x96ca, gbc.sp());
        EXPECT(0x1845, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 47 01AF
        gbc.setState(0xcfee, 0x9a90, 0xe90, 0xf831, 0x8365, 0xc7f1, 0x1, 0x1);
        gbc.writeMem(0xcfee, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x9a90, gbc.sp());
        EXPECT(0xcff0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcfee));
        EXPECT(0x47, gbc.readMem(0xcfef));
        // CB 47 01B1
        gbc.setState(0x36c8, 0xa549, 0x61b0, 0xc38b, 0x517a, 0xfa9b, 0x0, 0x0);
        gbc.writeMem(0x36c8, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xa549, gbc.sp());
        EXPECT(0x36ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 47 01B3
        gbc.setState(0x9f0b, 0x2c25, 0x3520, 0x94c3, 0xc4ab, 0xe2ad, 0x1, 0x0);
        gbc.writeMem(0x9f0b, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x2c25, gbc.sp());
        EXPECT(0x9f0d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f0b));
        EXPECT(0x47, gbc.readMem(0x9f0c));
        // CB 47 01B4
        gbc.setState(0x96ed, 0x1277, 0xf400, 0x242e, 0x2d3, 0x801d, 0x0, 0x1);
        gbc.writeMem(0x96ed, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x1277, gbc.sp());
        EXPECT(0x96ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x96ed));
        EXPECT(0x47, gbc.readMem(0x96ee));
        // CB 47 01B5
        gbc.setState(0xcbca, 0x1bbd, 0x9420, 0x5859, 0x19d1, 0xe995, 0x1, 0x1);
        gbc.writeMem(0xcbca, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x1bbd, gbc.sp());
        EXPECT(0xcbcc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcbca));
        EXPECT(0x47, gbc.readMem(0xcbcb));
        // CB 47 01B6
        gbc.setState(0xdc46, 0xb262, 0x5fb0, 0xa922, 0x7323, 0x3d26, 0x1, 0x1);
        gbc.writeMem(0xdc46, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xb262, gbc.sp());
        EXPECT(0xdc48, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc46));
        EXPECT(0x47, gbc.readMem(0xdc47));
        // CB 47 01B8
        gbc.setState(0xccf0, 0x815c, 0xea40, 0x2b00, 0x1936, 0xb9a, 0x0, 0x0);
        gbc.writeMem(0xccf0, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x815c, gbc.sp());
        EXPECT(0xccf2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xccf0));
        EXPECT(0x47, gbc.readMem(0xccf1));
        // CB 47 01B9
        gbc.setState(0x3103, 0x8704, 0xbfc0, 0x774a, 0xfcd1, 0xa0de, 0x1, 0x0);
        gbc.writeMem(0x3103, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x8704, gbc.sp());
        EXPECT(0x3105, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 47 01BB
        gbc.setState(0x3d4, 0xf45b, 0xb3b0, 0x9bdd, 0xf786, 0xdcb5, 0x1, 0x0);
        gbc.writeMem(0x3d4, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xf45b, gbc.sp());
        EXPECT(0x3d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 47 01BC
        gbc.setState(0x8cd2, 0xab49, 0x4cb0, 0x4869, 0x221, 0x82cb, 0x1, 0x0);
        gbc.writeMem(0x8cd2, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xab49, gbc.sp());
        EXPECT(0x8cd4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8cd2));
        EXPECT(0x47, gbc.readMem(0x8cd3));
        // CB 47 01BD
        gbc.setState(0x5b9f, 0xc0d0, 0x6b30, 0x8a0d, 0xc254, 0x6e44, 0x1, 0x1);
        gbc.writeMem(0x5b9f, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xc0d0, gbc.sp());
        EXPECT(0x5ba1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 47 01BE
        gbc.setState(0x1baf, 0x999d, 0xcf0, 0x9a67, 0x3904, 0x9560, 0x0, 0x1);
        gbc.writeMem(0x1baf, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x999d, gbc.sp());
        EXPECT(0x1bb1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 47 01BF
        gbc.setState(0xd3ad, 0x548f, 0x17e0, 0x5c41, 0x7af2, 0x3edc, 0x0, 0x0);
        gbc.writeMem(0xd3ad, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x548f, gbc.sp());
        EXPECT(0xd3af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd3ad));
        EXPECT(0x47, gbc.readMem(0xd3ae));
        // CB 47 01C0
        gbc.setState(0xe9a3, 0x21da, 0xe350, 0x3d4f, 0x308d, 0xffab, 0x0, 0x1);
        gbc.writeMem(0xe9a3, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x21da, gbc.sp());
        EXPECT(0xe9a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe9a3));
        EXPECT(0x47, gbc.readMem(0xe9a4));
        // CB 47 01C1
        gbc.setState(0x1e28, 0xc61f, 0xfa70, 0x1b03, 0xf709, 0xaa33, 0x0, 0x0);
        gbc.writeMem(0x1e28, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xc61f, gbc.sp());
        EXPECT(0x1e2a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 47 01C2
        gbc.setState(0xa568, 0xc8fa, 0x83c0, 0xc098, 0x9fb5, 0x9312, 0x0, 0x1);
        gbc.writeMem(0xa568, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xc8fa, gbc.sp());
        EXPECT(0xa56a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa568));
        EXPECT(0x47, gbc.readMem(0xa569));
        // CB 47 01C3
        gbc.setState(0xe790, 0xf21d, 0xb300, 0x617c, 0x76d, 0x1f50, 0x0, 0x0);
        gbc.writeMem(0xe790, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xf21d, gbc.sp());
        EXPECT(0xe792, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe790));
        EXPECT(0x47, gbc.readMem(0xe791));
        // CB 47 01C4
        gbc.setState(0x8faa, 0x5eb8, 0x2230, 0xc693, 0x3f0c, 0x470b, 0x0, 0x0);
        gbc.writeMem(0x8faa, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x5eb8, gbc.sp());
        EXPECT(0x8fac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8faa));
        EXPECT(0x47, gbc.readMem(0x8fab));
        // CB 47 01C5
        gbc.setState(0x205f, 0x7141, 0xc640, 0xfc15, 0x2f62, 0x34b4, 0x0, 0x1);
        gbc.writeMem(0x205f, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x7141, gbc.sp());
        EXPECT(0x2061, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 47 01C6
        gbc.setState(0x5031, 0x6a76, 0x500, 0xbdb5, 0x55d0, 0x8ab0, 0x0, 0x1);
        gbc.writeMem(0x5031, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x6a76, gbc.sp());
        EXPECT(0x5033, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 47 01C7
        gbc.setState(0xc2c8, 0x83b3, 0x4450, 0xc211, 0x38d, 0x76b1, 0x0, 0x0);
        gbc.writeMem(0xc2c8, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x83b3, gbc.sp());
        EXPECT(0xc2ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc2c8));
        EXPECT(0x47, gbc.readMem(0xc2c9));
        // CB 47 01C8
        gbc.setState(0x8b59, 0xc5d0, 0x1e40, 0x4325, 0xd2c9, 0x67dc, 0x0, 0x0);
        gbc.writeMem(0x8b59, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xc5d0, gbc.sp());
        EXPECT(0x8b5b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b59));
        EXPECT(0x47, gbc.readMem(0x8b5a));
        // CB 47 01C9
        gbc.setState(0xe4c, 0xc255, 0xe5c0, 0x1cf2, 0x1ebf, 0xa59f, 0x0, 0x1);
        gbc.writeMem(0xe4c, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xc255, gbc.sp());
        EXPECT(0xe4e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 47 01CB
        gbc.setState(0xc29, 0x8011, 0x2e60, 0xce8e, 0xe773, 0x9500, 0x1, 0x0);
        gbc.writeMem(0xc29, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x8011, gbc.sp());
        EXPECT(0xc2b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 47 01CC
        gbc.setState(0xe8d8, 0x1734, 0x4900, 0x5e5f, 0xbfd2, 0x91ad, 0x0, 0x1);
        gbc.writeMem(0xe8d8, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x1734, gbc.sp());
        EXPECT(0xe8da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe8d8));
        EXPECT(0x47, gbc.readMem(0xe8d9));
        // CB 47 01CD
        gbc.setState(0x76d, 0x6090, 0x460, 0xbf0, 0x1b0, 0x98eb, 0x0, 0x1);
        gbc.writeMem(0x76d, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x6090, gbc.sp());
        EXPECT(0x76f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 47 01CE
        gbc.setState(0x536c, 0xf5df, 0x45e0, 0x8595, 0x7b31, 0x8e80, 0x0, 0x0);
        gbc.writeMem(0x536c, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xf5df, gbc.sp());
        EXPECT(0x536e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 47 01CF
        gbc.setState(0x1ac5, 0x837f, 0x2e30, 0x6934, 0xe10f, 0x9393, 0x1, 0x1);
        gbc.writeMem(0x1ac5, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x837f, gbc.sp());
        EXPECT(0x1ac7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 47 01D0
        gbc.setState(0xc39e, 0x5188, 0x9340, 0xcf04, 0x43b0, 0x8de7, 0x1, 0x0);
        gbc.writeMem(0xc39e, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x5188, gbc.sp());
        EXPECT(0xc3a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc39e));
        EXPECT(0x47, gbc.readMem(0xc39f));
        // CB 47 01D1
        gbc.setState(0x6031, 0x7b7d, 0x2690, 0xb997, 0x1afa, 0x67c2, 0x0, 0x0);
        gbc.writeMem(0x6031, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x7b7d, gbc.sp());
        EXPECT(0x6033, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 47 01D2
        gbc.setState(0x376, 0x4faf, 0xe440, 0x3170, 0x526c, 0x1b26, 0x0, 0x0);
        gbc.writeMem(0x376, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x4faf, gbc.sp());
        EXPECT(0x378, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 47 01D3
        gbc.setState(0xd9f4, 0x48be, 0x7d80, 0xf3be, 0xcca1, 0x3d0c, 0x0, 0x1);
        gbc.writeMem(0xd9f4, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x48be, gbc.sp());
        EXPECT(0xd9f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd9f4));
        EXPECT(0x47, gbc.readMem(0xd9f5));
        // CB 47 01D4
        gbc.setState(0xb03, 0x8e58, 0x3830, 0x9158, 0x60c2, 0xa782, 0x0, 0x0);
        gbc.writeMem(0xb03, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x8e58, gbc.sp());
        EXPECT(0xb05, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 47 01D5
        gbc.setState(0x5171, 0x2957, 0x57e0, 0xfba1, 0xa9b3, 0x7c6e, 0x0, 0x1);
        gbc.writeMem(0x5171, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x2957, gbc.sp());
        EXPECT(0x5173, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 47 01D6
        gbc.setState(0xaac3, 0xdc22, 0xe390, 0x24c7, 0xdb95, 0xc8a0, 0x1, 0x0);
        gbc.writeMem(0xaac3, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xdc22, gbc.sp());
        EXPECT(0xaac5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaac3));
        EXPECT(0x47, gbc.readMem(0xaac4));
        // CB 47 01D7
        gbc.setState(0x31b2, 0x5200, 0x78b0, 0xf4, 0xd953, 0x27d8, 0x0, 0x0);
        gbc.writeMem(0x31b2, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x5200, gbc.sp());
        EXPECT(0x31b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 47 01D8
        gbc.setState(0x7076, 0x9d97, 0xe1a0, 0xcb45, 0xc2af, 0x9cd0, 0x1, 0x0);
        gbc.writeMem(0x7076, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x9d97, gbc.sp());
        EXPECT(0x7078, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 47 01D9
        gbc.setState(0x2b80, 0x87c5, 0x5fb0, 0xa8bb, 0x8631, 0xa362, 0x1, 0x1);
        gbc.writeMem(0x2b80, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x87c5, gbc.sp());
        EXPECT(0x2b82, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 47 01DA
        gbc.setState(0x1cd8, 0xf7a9, 0xf4f0, 0x39a9, 0x2d2e, 0xe18, 0x0, 0x0);
        gbc.writeMem(0x1cd8, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xf7a9, gbc.sp());
        EXPECT(0x1cda, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 47 01DB
        gbc.setState(0x13b9, 0x1607, 0x5100, 0x2c74, 0x8ecb, 0xa1bf, 0x0, 0x0);
        gbc.writeMem(0x13b9, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x1607, gbc.sp());
        EXPECT(0x13bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 47 01DC
        gbc.setState(0x77fa, 0x1620, 0x3700, 0xc1fb, 0xe8ce, 0xd7af, 0x1, 0x1);
        gbc.writeMem(0x77fa, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x1620, gbc.sp());
        EXPECT(0x77fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 47 01DD
        gbc.setState(0x96c6, 0xc38e, 0x6d70, 0x9e46, 0x305e, 0x82d8, 0x0, 0x0);
        gbc.writeMem(0x96c6, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xc38e, gbc.sp());
        EXPECT(0x96c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x96c6));
        EXPECT(0x47, gbc.readMem(0x96c7));
        // CB 47 01DE
        gbc.setState(0xdc6c, 0xed76, 0x6170, 0x426, 0x70fa, 0xdbc3, 0x1, 0x1);
        gbc.writeMem(0xdc6c, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xed76, gbc.sp());
        EXPECT(0xdc6e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc6c));
        EXPECT(0x47, gbc.readMem(0xdc6d));
        // CB 47 01DF
        gbc.setState(0xe70f, 0x413e, 0x2810, 0x7364, 0x9df3, 0xfdbf, 0x1, 0x0);
        gbc.writeMem(0xe70f, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x413e, gbc.sp());
        EXPECT(0xe711, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe70f));
        EXPECT(0x47, gbc.readMem(0xe710));
        // CB 47 01E0
        gbc.setState(0x19d1, 0x9d5e, 0x7c50, 0x9028, 0xfabd, 0xa611, 0x1, 0x1);
        gbc.writeMem(0x19d1, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x9d5e, gbc.sp());
        EXPECT(0x19d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 47 01E1
        gbc.setState(0xc5ab, 0xf15, 0xe10, 0x2a47, 0xa1a4, 0xb43e, 0x1, 0x0);
        gbc.writeMem(0xc5ab, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xf15, gbc.sp());
        EXPECT(0xc5ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc5ab));
        EXPECT(0x47, gbc.readMem(0xc5ac));
        // CB 47 01E2
        gbc.setState(0x242c, 0x7250, 0x3b30, 0xe9cb, 0x969f, 0x420, 0x1, 0x1);
        gbc.writeMem(0x242c, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x7250, gbc.sp());
        EXPECT(0x242e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 47 01E3
        gbc.setState(0xa440, 0x8621, 0x6240, 0xfa0, 0xc1d1, 0xc37e, 0x0, 0x1);
        gbc.writeMem(0xa440, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x8621, gbc.sp());
        EXPECT(0xa442, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa440));
        EXPECT(0x47, gbc.readMem(0xa441));
        // CB 47 01E4
        gbc.setState(0x9bc5, 0xcab1, 0x5da0, 0x3d0c, 0x1bc4, 0x2938, 0x1, 0x0);
        gbc.writeMem(0x9bc5, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xcab1, gbc.sp());
        EXPECT(0x9bc7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9bc5));
        EXPECT(0x47, gbc.readMem(0x9bc6));
        // CB 47 01E5
        gbc.setState(0xe117, 0x8b7, 0xbb50, 0x786f, 0xa5e3, 0x955b, 0x0, 0x1);
        gbc.writeMem(0xe117, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x8b7, gbc.sp());
        EXPECT(0xe119, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe117));
        EXPECT(0x47, gbc.readMem(0xe118));
        // CB 47 01E7
        gbc.setState(0x73f0, 0x525d, 0x96a0, 0x35e9, 0xf525, 0x9700, 0x1, 0x1);
        gbc.writeMem(0x73f0, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x525d, gbc.sp());
        EXPECT(0x73f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 47 01E9
        gbc.setState(0x5487, 0xa2c8, 0xc1e0, 0xe986, 0xcf2a, 0xb21e, 0x0, 0x0);
        gbc.writeMem(0x5487, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xa2c8, gbc.sp());
        EXPECT(0x5489, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 47 01EA
        gbc.setState(0x5063, 0x491b, 0x1750, 0xc25, 0x731f, 0x1473, 0x1, 0x0);
        gbc.writeMem(0x5063, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x491b, gbc.sp());
        EXPECT(0x5065, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 47 01EB
        gbc.setState(0xb59b, 0xc8df, 0xef0, 0x88ec, 0xce16, 0xc1f, 0x0, 0x1);
        gbc.writeMem(0xb59b, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xc8df, gbc.sp());
        EXPECT(0xb59d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb59b));
        EXPECT(0x47, gbc.readMem(0xb59c));
        // CB 47 01EC
        gbc.setState(0x129f, 0xa3b8, 0xc410, 0x8cd0, 0x1674, 0xfe67, 0x0, 0x1);
        gbc.writeMem(0x129f, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xa3b8, gbc.sp());
        EXPECT(0x12a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 47 01ED
        gbc.setState(0x5c94, 0x16a, 0x5730, 0xc031, 0xe8a7, 0xf29b, 0x0, 0x1);
        gbc.writeMem(0x5c94, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x16a, gbc.sp());
        EXPECT(0x5c96, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 47 01EE
        gbc.setState(0x6afd, 0xc231, 0x5180, 0x5546, 0x5286, 0x41cb, 0x1, 0x0);
        gbc.writeMem(0x6afd, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xc231, gbc.sp());
        EXPECT(0x6aff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 47 01EF
        gbc.setState(0x8cd7, 0xcb26, 0xfe50, 0x7934, 0xbb1b, 0x83f2, 0x1, 0x0);
        gbc.writeMem(0x8cd7, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xcb26, gbc.sp());
        EXPECT(0x8cd9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8cd7));
        EXPECT(0x47, gbc.readMem(0x8cd8));
        // CB 47 01F1
        gbc.setState(0x6a34, 0x43a7, 0xfd70, 0xd343, 0x725d, 0x77d0, 0x0, 0x1);
        gbc.writeMem(0x6a34, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x43a7, gbc.sp());
        EXPECT(0x6a36, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 47 01F2
        gbc.setState(0x51dc, 0xb069, 0xc140, 0xe8b7, 0xfd8d, 0xa8c6, 0x1, 0x1);
        gbc.writeMem(0x51dc, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xb069, gbc.sp());
        EXPECT(0x51de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 47 01F3
        gbc.setState(0x3443, 0xc5ad, 0x8090, 0xff5b, 0x474b, 0x4672, 0x1, 0x0);
        gbc.writeMem(0x3443, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xc5ad, gbc.sp());
        EXPECT(0x3445, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 47 01F5
        gbc.setState(0x4cfc, 0xd549, 0xb1a0, 0x50aa, 0xb22e, 0xa389, 0x1, 0x1);
        gbc.writeMem(0x4cfc, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xd549, gbc.sp());
        EXPECT(0x4cfe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 47 01F6
        gbc.setState(0x1203, 0xc35d, 0x68b0, 0x25b4, 0x9989, 0xc4a6, 0x0, 0x0);
        gbc.writeMem(0x1203, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xc35d, gbc.sp());
        EXPECT(0x1205, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 47 01F7
        gbc.setState(0x9dff, 0xa9a7, 0xfaf0, 0x3a9, 0x6c5b, 0x724f, 0x0, 0x0);
        gbc.writeMem(0x9dff, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xa9a7, gbc.sp());
        EXPECT(0x9e01, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9dff));
        EXPECT(0x47, gbc.readMem(0x9e00));
        // CB 47 01F8
        gbc.setState(0xb238, 0x422e, 0x6a60, 0x9a49, 0x9d01, 0xa116, 0x0, 0x0);
        gbc.writeMem(0xb238, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x422e, gbc.sp());
        EXPECT(0xb23a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb238));
        EXPECT(0x47, gbc.readMem(0xb239));
        // CB 47 01F9
        gbc.setState(0x8aad, 0x47b3, 0xd6d0, 0x7ef9, 0x73db, 0x8f56, 0x1, 0x0);
        gbc.writeMem(0x8aad, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x47b3, gbc.sp());
        EXPECT(0x8aaf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8aad));
        EXPECT(0x47, gbc.readMem(0x8aae));
        // CB 47 01FA
        gbc.setState(0xaecd, 0xcc61, 0xfb70, 0x7a73, 0xfcb5, 0xf80b, 0x1, 0x1);
        gbc.writeMem(0xaecd, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xcc61, gbc.sp());
        EXPECT(0xaecf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaecd));
        EXPECT(0x47, gbc.readMem(0xaece));
        // CB 47 01FB
        gbc.setState(0xbf56, 0xfa08, 0x3cc0, 0xab6f, 0x5e7a, 0xf105, 0x1, 0x1);
        gbc.writeMem(0xbf56, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xfa08, gbc.sp());
        EXPECT(0xbf58, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf56));
        EXPECT(0x47, gbc.readMem(0xbf57));
        // CB 47 01FC
        gbc.setState(0x573f, 0xc024, 0x3350, 0xe3f0, 0x69bc, 0xbb45, 0x0, 0x0);
        gbc.writeMem(0x573f, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xc024, gbc.sp());
        EXPECT(0x5741, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 47 01FD
        gbc.setState(0x8de2, 0xc4e, 0x5ca0, 0x3624, 0xa391, 0xe8f3, 0x1, 0x1);
        gbc.writeMem(0x8de2, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xc4e, gbc.sp());
        EXPECT(0x8de4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8de2));
        EXPECT(0x47, gbc.readMem(0x8de3));
        // CB 47 01FE
        gbc.setState(0xeae7, 0x94b, 0xd10, 0x6d9f, 0x151a, 0x1d58, 0x1, 0x0);
        gbc.writeMem(0xeae7, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x94b, gbc.sp());
        EXPECT(0xeae9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeae7));
        EXPECT(0x47, gbc.readMem(0xeae8));
        // CB 47 01FF
        gbc.setState(0x832c, 0x6353, 0x4fc0, 0x728e, 0x1cfd, 0x980b, 0x0, 0x1);
        gbc.writeMem(0x832c, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x6353, gbc.sp());
        EXPECT(0x832e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x832c));
        EXPECT(0x47, gbc.readMem(0x832d));
        // CB 47 0200
        gbc.setState(0x9840, 0xc422, 0x7aa0, 0xec6, 0xc72e, 0xf015, 0x1, 0x0);
        gbc.writeMem(0x9840, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xc422, gbc.sp());
        EXPECT(0x9842, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9840));
        EXPECT(0x47, gbc.readMem(0x9841));
        // CB 47 0201
        gbc.setState(0xd4ad, 0x18a6, 0x8270, 0xe2e3, 0x202f, 0x2ca7, 0x0, 0x1);
        gbc.writeMem(0xd4ad, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x18a6, gbc.sp());
        EXPECT(0xd4af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd4ad));
        EXPECT(0x47, gbc.readMem(0xd4ae));
        // CB 47 0202
        gbc.setState(0x171e, 0x3875, 0x5bc0, 0x70ab, 0x87b6, 0x1ac6, 0x1, 0x0);
        gbc.writeMem(0x171e, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x3875, gbc.sp());
        EXPECT(0x1720, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 47 0203
        gbc.setState(0x858d, 0x852, 0x3c70, 0x99c7, 0xa997, 0xf27d, 0x0, 0x1);
        gbc.writeMem(0x858d, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x852, gbc.sp());
        EXPECT(0x858f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x858d));
        EXPECT(0x47, gbc.readMem(0x858e));
        // CB 47 0204
        gbc.setState(0x77d8, 0x5f5, 0xd220, 0xf763, 0x6fa3, 0xc9de, 0x0, 0x0);
        gbc.writeMem(0x77d8, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x5f5, gbc.sp());
        EXPECT(0x77da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 47 0205
        gbc.setState(0x77f6, 0x1b0c, 0xc7e0, 0x63e, 0x837, 0x89f9, 0x1, 0x1);
        gbc.writeMem(0x77f6, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x1b0c, gbc.sp());
        EXPECT(0x77f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 47 0206
        gbc.setState(0x21bc, 0xdc88, 0x9760, 0x85a9, 0x4218, 0x8aa0, 0x0, 0x0);
        gbc.writeMem(0x21bc, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xdc88, gbc.sp());
        EXPECT(0x21be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 47 0207
        gbc.setState(0x6af, 0x9602, 0x9e80, 0xcbc1, 0xf927, 0xd650, 0x1, 0x0);
        gbc.writeMem(0x6af, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x9602, gbc.sp());
        EXPECT(0x6b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 47 0208
        gbc.setState(0xbe9c, 0x45e8, 0xa40, 0xfb2a, 0x3677, 0xd2f9, 0x1, 0x0);
        gbc.writeMem(0xbe9c, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x45e8, gbc.sp());
        EXPECT(0xbe9e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe9c));
        EXPECT(0x47, gbc.readMem(0xbe9d));
        // CB 47 020A
        gbc.setState(0xd420, 0x53a0, 0xd210, 0x866b, 0x6c30, 0x8112, 0x0, 0x0);
        gbc.writeMem(0xd420, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x53a0, gbc.sp());
        EXPECT(0xd422, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd420));
        EXPECT(0x47, gbc.readMem(0xd421));
        // CB 47 020B
        gbc.setState(0x25e4, 0x3d93, 0x6d90, 0x5326, 0xea85, 0x5686, 0x1, 0x0);
        gbc.writeMem(0x25e4, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x3d93, gbc.sp());
        EXPECT(0x25e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 47 020C
        gbc.setState(0x8a4b, 0xf34c, 0xb5b0, 0xb479, 0xb1a4, 0xdf6b, 0x1, 0x0);
        gbc.writeMem(0x8a4b, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xf34c, gbc.sp());
        EXPECT(0x8a4d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a4b));
        EXPECT(0x47, gbc.readMem(0x8a4c));
        // CB 47 020D
        gbc.setState(0xb510, 0x464e, 0x92d0, 0x131, 0xf207, 0xb5bf, 0x0, 0x0);
        gbc.writeMem(0xb510, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x464e, gbc.sp());
        EXPECT(0xb512, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb510));
        EXPECT(0x47, gbc.readMem(0xb511));
        // CB 47 020E
        gbc.setState(0xac8c, 0x2ecd, 0x1a30, 0x3b8a, 0x4e44, 0xab89, 0x0, 0x1);
        gbc.writeMem(0xac8c, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x2ecd, gbc.sp());
        EXPECT(0xac8e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac8c));
        EXPECT(0x47, gbc.readMem(0xac8d));
        // CB 47 020F
        gbc.setState(0x1987, 0x75d2, 0xe8c0, 0xf5e2, 0x458b, 0xfc45, 0x1, 0x0);
        gbc.writeMem(0x1987, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x75d2, gbc.sp());
        EXPECT(0x1989, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 47 0211
        gbc.setState(0x9712, 0xac75, 0x8690, 0x2c73, 0xb762, 0xef3b, 0x1, 0x1);
        gbc.writeMem(0x9712, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xac75, gbc.sp());
        EXPECT(0x9714, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9712));
        EXPECT(0x47, gbc.readMem(0x9713));
        // CB 47 0212
        gbc.setState(0xc05a, 0x8999, 0xa1c0, 0x720a, 0xd7bd, 0xba0a, 0x1, 0x1);
        gbc.writeMem(0xc05a, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x8999, gbc.sp());
        EXPECT(0xc05c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc05a));
        EXPECT(0x47, gbc.readMem(0xc05b));
        // CB 47 0213
        gbc.setState(0x8c72, 0xf254, 0x93b0, 0xd3c2, 0x2df2, 0xc116, 0x0, 0x0);
        gbc.writeMem(0x8c72, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xf254, gbc.sp());
        EXPECT(0x8c74, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c72));
        EXPECT(0x47, gbc.readMem(0x8c73));
        // CB 47 0214
        gbc.setState(0x1224, 0x103b, 0xf310, 0xfb9f, 0xedf4, 0x6c9f, 0x0, 0x1);
        gbc.writeMem(0x1224, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x103b, gbc.sp());
        EXPECT(0x1226, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 47 0215
        gbc.setState(0xb1ae, 0x5091, 0x3a80, 0x3b1e, 0xd579, 0x3da5, 0x1, 0x0);
        gbc.writeMem(0xb1ae, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x5091, gbc.sp());
        EXPECT(0xb1b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb1ae));
        EXPECT(0x47, gbc.readMem(0xb1af));
        // CB 47 0216
        gbc.setState(0x4928, 0x8c95, 0x85f0, 0x1bd3, 0xd049, 0xc261, 0x0, 0x0);
        gbc.writeMem(0x4928, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x8c95, gbc.sp());
        EXPECT(0x492a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 47 0217
        gbc.setState(0x941a, 0x44e, 0xde10, 0x6bd, 0xfa06, 0xf4a3, 0x1, 0x1);
        gbc.writeMem(0x941a, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x44e, gbc.sp());
        EXPECT(0x941c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x941a));
        EXPECT(0x47, gbc.readMem(0x941b));
        // CB 47 0218
        gbc.setState(0xe980, 0x4524, 0x38a0, 0xbbb5, 0x3de5, 0x7019, 0x1, 0x0);
        gbc.writeMem(0xe980, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x4524, gbc.sp());
        EXPECT(0xe982, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe980));
        EXPECT(0x47, gbc.readMem(0xe981));
        // CB 47 0219
        gbc.setState(0xdf81, 0x367, 0xf110, 0xa2d2, 0x6f73, 0x5005, 0x0, 0x0);
        gbc.writeMem(0xdf81, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x367, gbc.sp());
        EXPECT(0xdf83, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf81));
        EXPECT(0x47, gbc.readMem(0xdf82));
        // CB 47 021A
        gbc.setState(0xa6c5, 0x82be, 0xaeb0, 0xe80e, 0x1218, 0x416d, 0x0, 0x1);
        gbc.writeMem(0xa6c5, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x82be, gbc.sp());
        EXPECT(0xa6c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa6c5));
        EXPECT(0x47, gbc.readMem(0xa6c6));
        // CB 47 021B
        gbc.setState(0x81d5, 0x371d, 0xfcf0, 0x3bf3, 0x72c5, 0xa8ae, 0x1, 0x1);
        gbc.writeMem(0x81d5, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x371d, gbc.sp());
        EXPECT(0x81d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x81d5));
        EXPECT(0x47, gbc.readMem(0x81d6));
        // CB 47 021C
        gbc.setState(0xb75c, 0x91b1, 0xfa0, 0x176, 0x22c3, 0x9a2a, 0x0, 0x0);
        gbc.writeMem(0xb75c, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x91b1, gbc.sp());
        EXPECT(0xb75e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb75c));
        EXPECT(0x47, gbc.readMem(0xb75d));
        // CB 47 021E
        gbc.setState(0x5e42, 0x4dc1, 0x2a10, 0xfdc8, 0x618c, 0x8532, 0x1, 0x0);
        gbc.writeMem(0x5e42, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x4dc1, gbc.sp());
        EXPECT(0x5e44, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 47 021F
        gbc.setState(0xc885, 0x103a, 0x6550, 0x8b9d, 0x7c86, 0x2add, 0x0, 0x0);
        gbc.writeMem(0xc885, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x103a, gbc.sp());
        EXPECT(0xc887, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc885));
        EXPECT(0x47, gbc.readMem(0xc886));
        // CB 47 0220
        gbc.setState(0x8142, 0x32fb, 0xdb50, 0x8a29, 0x4986, 0xce11, 0x1, 0x0);
        gbc.writeMem(0x8142, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x32fb, gbc.sp());
        EXPECT(0x8144, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8142));
        EXPECT(0x47, gbc.readMem(0x8143));
        // CB 47 0221
        gbc.setState(0xad10, 0x2399, 0xca70, 0xc12a, 0xc0c6, 0x86a4, 0x0, 0x1);
        gbc.writeMem(0xad10, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x2399, gbc.sp());
        EXPECT(0xad12, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad10));
        EXPECT(0x47, gbc.readMem(0xad11));
        // CB 47 0222
        gbc.setState(0x40ca, 0x1c14, 0x8180, 0xc567, 0x3fc2, 0x3d2c, 0x1, 0x1);
        gbc.writeMem(0x40ca, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x1c14, gbc.sp());
        EXPECT(0x40cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 47 0223
        gbc.setState(0x2698, 0x42f0, 0x47b0, 0x9db0, 0x9dc, 0x1a2c, 0x1, 0x1);
        gbc.writeMem(0x2698, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x42f0, gbc.sp());
        EXPECT(0x269a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 47 0224
        gbc.setState(0x4831, 0x7cab, 0xd540, 0x1260, 0x8cef, 0x4f18, 0x0, 0x0);
        gbc.writeMem(0x4831, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x7cab, gbc.sp());
        EXPECT(0x4833, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 47 0225
        gbc.setState(0x447c, 0x9d15, 0x88c0, 0xf0ca, 0x1894, 0xb559, 0x0, 0x1);
        gbc.writeMem(0x447c, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x9d15, gbc.sp());
        EXPECT(0x447e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 47 0227
        gbc.setState(0x2146, 0xa11b, 0xb20, 0xfcdd, 0x4bd5, 0xae34, 0x1, 0x0);
        gbc.writeMem(0x2146, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xa11b, gbc.sp());
        EXPECT(0x2148, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 47 0228
        gbc.setState(0x4b5e, 0x70ea, 0x1000, 0xe108, 0xfed7, 0xbf63, 0x1, 0x1);
        gbc.writeMem(0x4b5e, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x70ea, gbc.sp());
        EXPECT(0x4b60, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 47 0229
        gbc.setState(0x82a, 0x7e6, 0x94d0, 0x1072, 0xcdbf, 0xb142, 0x1, 0x1);
        gbc.writeMem(0x82a, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x7e6, gbc.sp());
        EXPECT(0x82c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 47 022A
        gbc.setState(0x58f1, 0xb267, 0xf0, 0xcea7, 0x79d9, 0x1e53, 0x1, 0x0);
        gbc.writeMem(0x58f1, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xb267, gbc.sp());
        EXPECT(0x58f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 47 022B
        gbc.setState(0x69a1, 0xd77a, 0xe750, 0x6f5f, 0x6c0c, 0x59b, 0x1, 0x0);
        gbc.writeMem(0x69a1, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xd77a, gbc.sp());
        EXPECT(0x69a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 47 022C
        gbc.setState(0x3cc8, 0xc8c2, 0xd940, 0x669f, 0xbfef, 0xfda4, 0x1, 0x0);
        gbc.writeMem(0x3cc8, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xc8c2, gbc.sp());
        EXPECT(0x3cca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 47 022D
        gbc.setState(0x1088, 0xd074, 0x2b0, 0xe8fe, 0x7195, 0xf3d2, 0x1, 0x0);
        gbc.writeMem(0x1088, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xd074, gbc.sp());
        EXPECT(0x108a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 47 022E
        gbc.setState(0x7b61, 0x16a1, 0x7be0, 0xed57, 0x8064, 0xf463, 0x1, 0x1);
        gbc.writeMem(0x7b61, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x16a1, gbc.sp());
        EXPECT(0x7b63, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 47 022F
        gbc.setState(0xcbf, 0x5b60, 0x5da0, 0x5add, 0x238, 0xdb70, 0x0, 0x0);
        gbc.writeMem(0xcbf, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x5b60, gbc.sp());
        EXPECT(0xcc1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 47 0230
        gbc.setState(0xe4b5, 0x493d, 0xc5e0, 0x71a, 0xdc26, 0x7743, 0x0, 0x0);
        gbc.writeMem(0xe4b5, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x493d, gbc.sp());
        EXPECT(0xe4b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe4b5));
        EXPECT(0x47, gbc.readMem(0xe4b6));
        // CB 47 0231
        gbc.setState(0xe10d, 0xc145, 0x3a30, 0xbfd, 0x13cf, 0x7620, 0x1, 0x1);
        gbc.writeMem(0xe10d, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xc145, gbc.sp());
        EXPECT(0xe10f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe10d));
        EXPECT(0x47, gbc.readMem(0xe10e));
        // CB 47 0232
        gbc.setState(0x7099, 0x72be, 0xd180, 0x8a6c, 0x72f, 0x2fe6, 0x0, 0x1);
        gbc.writeMem(0x7099, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x72be, gbc.sp());
        EXPECT(0x709b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 47 0233
        gbc.setState(0xa2f3, 0x936f, 0x7480, 0x5345, 0x5201, 0x7273, 0x0, 0x1);
        gbc.writeMem(0xa2f3, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x936f, gbc.sp());
        EXPECT(0xa2f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa2f3));
        EXPECT(0x47, gbc.readMem(0xa2f4));
        // CB 47 0234
        gbc.setState(0xdd79, 0x8895, 0xea70, 0x288a, 0x5a3, 0x339f, 0x1, 0x0);
        gbc.writeMem(0xdd79, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x8895, gbc.sp());
        EXPECT(0xdd7b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd79));
        EXPECT(0x47, gbc.readMem(0xdd7a));
        // CB 47 0235
        gbc.setState(0x2762, 0x2950, 0x4bd0, 0x33b4, 0x527c, 0xc3cd, 0x1, 0x0);
        gbc.writeMem(0x2762, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x2950, gbc.sp());
        EXPECT(0x2764, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 47 0236
        gbc.setState(0x840d, 0x5992, 0x1fe0, 0xed41, 0xfd36, 0x72f0, 0x0, 0x1);
        gbc.writeMem(0x840d, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x5992, gbc.sp());
        EXPECT(0x840f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x840d));
        EXPECT(0x47, gbc.readMem(0x840e));
        // CB 47 0237
        gbc.setState(0x5c28, 0xa945, 0x58f0, 0x363d, 0x4c72, 0x550a, 0x1, 0x1);
        gbc.writeMem(0x5c28, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xa945, gbc.sp());
        EXPECT(0x5c2a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 47 0238
        gbc.setState(0x7da3, 0x7e30, 0x4050, 0xe612, 0x5237, 0x2b16, 0x0, 0x0);
        gbc.writeMem(0x7da3, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x7e30, gbc.sp());
        EXPECT(0x7da5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 47 0239
        gbc.setState(0x9e6f, 0x7d5a, 0x6230, 0x7fba, 0x3ad3, 0x3c36, 0x0, 0x1);
        gbc.writeMem(0x9e6f, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x7d5a, gbc.sp());
        EXPECT(0x9e71, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e6f));
        EXPECT(0x47, gbc.readMem(0x9e70));
        // CB 47 023A
        gbc.setState(0x30bb, 0x6211, 0x89c0, 0x7c, 0x8e0b, 0x8196, 0x0, 0x1);
        gbc.writeMem(0x30bb, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x6211, gbc.sp());
        EXPECT(0x30bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 47 023B
        gbc.setState(0x65df, 0x58af, 0x3fc0, 0xdc0b, 0x1908, 0xd0c8, 0x1, 0x0);
        gbc.writeMem(0x65df, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x58af, gbc.sp());
        EXPECT(0x65e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 47 023C
        gbc.setState(0x7898, 0x2dfe, 0xca0, 0x573e, 0x5cc5, 0xf7c3, 0x0, 0x1);
        gbc.writeMem(0x7898, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x2dfe, gbc.sp());
        EXPECT(0x789a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 47 023D
        gbc.setState(0xefd8, 0x3d19, 0xbaf0, 0x2316, 0xd310, 0x1ba7, 0x1, 0x0);
        gbc.writeMem(0xefd8, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x3d19, gbc.sp());
        EXPECT(0xefda, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xefd8));
        EXPECT(0x47, gbc.readMem(0xefd9));
        // CB 47 023E
        gbc.setState(0xc817, 0xa98, 0x5450, 0x5c3c, 0xb8c2, 0x3cf, 0x0, 0x1);
        gbc.writeMem(0xc817, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xa98, gbc.sp());
        EXPECT(0xc819, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc817));
        EXPECT(0x47, gbc.readMem(0xc818));
        // CB 47 023F
        gbc.setState(0x7125, 0x90e0, 0xc690, 0xaf2c, 0x6ee3, 0x52e7, 0x1, 0x0);
        gbc.writeMem(0x7125, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x90e0, gbc.sp());
        EXPECT(0x7127, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 47 0240
        gbc.setState(0x7ed7, 0xec1a, 0x2360, 0xa6ae, 0x583d, 0x4cd6, 0x1, 0x0);
        gbc.writeMem(0x7ed7, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xec1a, gbc.sp());
        EXPECT(0x7ed9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 47 0241
        gbc.setState(0xba32, 0xd705, 0xd180, 0xca14, 0x6f79, 0x3c, 0x0, 0x1);
        gbc.writeMem(0xba32, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xd705, gbc.sp());
        EXPECT(0xba34, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba32));
        EXPECT(0x47, gbc.readMem(0xba33));
        // CB 47 0242
        gbc.setState(0x27c8, 0x6a6, 0x8b90, 0xb855, 0x246, 0xc05b, 0x0, 0x1);
        gbc.writeMem(0x27c8, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x6a6, gbc.sp());
        EXPECT(0x27ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 47 0243
        gbc.setState(0x47c2, 0xe2a9, 0xdb10, 0xf6e1, 0x6531, 0xbab4, 0x1, 0x0);
        gbc.writeMem(0x47c2, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xe2a9, gbc.sp());
        EXPECT(0x47c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 47 0244
        gbc.setState(0x4479, 0x17a, 0x8360, 0xcbd4, 0x4b8c, 0x5ea7, 0x0, 0x0);
        gbc.writeMem(0x4479, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x17a, gbc.sp());
        EXPECT(0x447b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 47 0245
        gbc.setState(0xd13f, 0xc038, 0xa910, 0xb510, 0xe0c9, 0x774d, 0x0, 0x1);
        gbc.writeMem(0xd13f, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xc038, gbc.sp());
        EXPECT(0xd141, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd13f));
        EXPECT(0x47, gbc.readMem(0xd140));
        // CB 47 0246
        gbc.setState(0x8dbd, 0x959, 0x950, 0x60dc, 0xa03d, 0xc3d, 0x0, 0x1);
        gbc.writeMem(0x8dbd, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x959, gbc.sp());
        EXPECT(0x8dbf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8dbd));
        EXPECT(0x47, gbc.readMem(0x8dbe));
        // CB 47 0247
        gbc.setState(0xfdd, 0x3336, 0x2f60, 0xc3e8, 0xc845, 0x25a5, 0x1, 0x1);
        gbc.writeMem(0xfdd, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x3336, gbc.sp());
        EXPECT(0xfdf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 47 0248
        gbc.setState(0x47ff, 0xb59a, 0x7b80, 0x8bc0, 0xba3d, 0xf12c, 0x0, 0x1);
        gbc.writeMem(0x47ff, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xb59a, gbc.sp());
        EXPECT(0x4801, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 47 0249
        gbc.setState(0xb64d, 0xfcc9, 0xd360, 0xa4c6, 0x93cd, 0x726, 0x0, 0x0);
        gbc.writeMem(0xb64d, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xfcc9, gbc.sp());
        EXPECT(0xb64f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb64d));
        EXPECT(0x47, gbc.readMem(0xb64e));
        // CB 47 024A
        gbc.setState(0x4296, 0xb484, 0x17e0, 0x26e6, 0x8beb, 0xf4b6, 0x1, 0x0);
        gbc.writeMem(0x4296, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xb484, gbc.sp());
        EXPECT(0x4298, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 47 024B
        gbc.setState(0x6a9c, 0xf53d, 0x7420, 0x2f49, 0xb82d, 0xe3a4, 0x1, 0x0);
        gbc.writeMem(0x6a9c, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xf53d, gbc.sp());
        EXPECT(0x6a9e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 47 024C
        gbc.setState(0xe59b, 0x74e5, 0x12b0, 0xbaeb, 0x3a04, 0xfeb, 0x0, 0x1);
        gbc.writeMem(0xe59b, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x74e5, gbc.sp());
        EXPECT(0xe59d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe59b));
        EXPECT(0x47, gbc.readMem(0xe59c));
        // CB 47 024D
        gbc.setState(0x973d, 0x4924, 0xb670, 0x9fa1, 0x5ccd, 0x525b, 0x0, 0x1);
        gbc.writeMem(0x973d, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x4924, gbc.sp());
        EXPECT(0x973f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x973d));
        EXPECT(0x47, gbc.readMem(0x973e));
        // CB 47 024E
        gbc.setState(0xe46e, 0x9e49, 0xdfc0, 0xb701, 0x62e3, 0x6079, 0x0, 0x0);
        gbc.writeMem(0xe46e, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x9e49, gbc.sp());
        EXPECT(0xe470, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe46e));
        EXPECT(0x47, gbc.readMem(0xe46f));
        // CB 47 024F
        gbc.setState(0x2210, 0xa396, 0xad60, 0x2758, 0x1a0, 0x4f7f, 0x0, 0x1);
        gbc.writeMem(0x2210, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xa396, gbc.sp());
        EXPECT(0x2212, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 47 0250
        gbc.setState(0x6dcc, 0x83ae, 0x4630, 0xe3c1, 0x962c, 0x6131, 0x1, 0x1);
        gbc.writeMem(0x6dcc, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x83ae, gbc.sp());
        EXPECT(0x6dce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 47 0251
        gbc.setState(0xeb89, 0xe16a, 0x81d0, 0xe3ff, 0xb7b, 0xf40c, 0x0, 0x1);
        gbc.writeMem(0xeb89, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xe16a, gbc.sp());
        EXPECT(0xeb8b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb89));
        EXPECT(0x47, gbc.readMem(0xeb8a));
        // CB 47 0252
        gbc.setState(0x4519, 0x9314, 0xd730, 0xb4cf, 0x2b25, 0x88f9, 0x0, 0x0);
        gbc.writeMem(0x4519, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x9314, gbc.sp());
        EXPECT(0x451b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 47 0254
        gbc.setState(0x9f20, 0x44a2, 0x25b0, 0x8f86, 0x4a0a, 0xea68, 0x1, 0x0);
        gbc.writeMem(0x9f20, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x44a2, gbc.sp());
        EXPECT(0x9f22, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f20));
        EXPECT(0x47, gbc.readMem(0x9f21));
        // CB 47 0255
        gbc.setState(0xe06a, 0x76e4, 0xd3a0, 0xe6ca, 0xfdac, 0x2b84, 0x1, 0x0);
        gbc.writeMem(0xe06a, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x76e4, gbc.sp());
        EXPECT(0xe06c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe06a));
        EXPECT(0x47, gbc.readMem(0xe06b));
        // CB 47 0256
        gbc.setState(0x94bb, 0x71a5, 0xdc90, 0x88a9, 0x212a, 0x8d45, 0x0, 0x1);
        gbc.writeMem(0x94bb, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x71a5, gbc.sp());
        EXPECT(0x94bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x94bb));
        EXPECT(0x47, gbc.readMem(0x94bc));
        // CB 47 0258
        gbc.setState(0xa196, 0xe5b5, 0x830, 0xef13, 0x632b, 0x5360, 0x0, 0x1);
        gbc.writeMem(0xa196, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xe5b5, gbc.sp());
        EXPECT(0xa198, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa196));
        EXPECT(0x47, gbc.readMem(0xa197));
        // CB 47 0259
        gbc.setState(0x781c, 0x5e26, 0x9b40, 0xb7a2, 0xabe9, 0xe61a, 0x0, 0x1);
        gbc.writeMem(0x781c, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x5e26, gbc.sp());
        EXPECT(0x781e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 47 025A
        gbc.setState(0x4b85, 0x73c6, 0xf2e0, 0xb036, 0xffb5, 0x2195, 0x0, 0x1);
        gbc.writeMem(0x4b85, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x73c6, gbc.sp());
        EXPECT(0x4b87, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 47 025B
        gbc.setState(0x4fc2, 0xbdc5, 0x6cd0, 0xb2b4, 0x4b2f, 0x481, 0x0, 0x0);
        gbc.writeMem(0x4fc2, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xbdc5, gbc.sp());
        EXPECT(0x4fc4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 47 025C
        gbc.setState(0x43e1, 0xc858, 0xeca0, 0x9938, 0x9140, 0xe146, 0x0, 0x0);
        gbc.writeMem(0x43e1, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xc858, gbc.sp());
        EXPECT(0x43e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 47 025D
        gbc.setState(0x211b, 0x789b, 0x4560, 0x18f6, 0x7679, 0xe2b3, 0x0, 0x1);
        gbc.writeMem(0x211b, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x789b, gbc.sp());
        EXPECT(0x211d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 47 025E
        gbc.setState(0xc44e, 0x969b, 0xcfe0, 0x8c31, 0x42b, 0x4625, 0x1, 0x1);
        gbc.writeMem(0xc44e, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x969b, gbc.sp());
        EXPECT(0xc450, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc44e));
        EXPECT(0x47, gbc.readMem(0xc44f));
        // CB 47 025F
        gbc.setState(0x5c54, 0x4fa2, 0x2be0, 0xce3c, 0xe1de, 0x2d58, 0x1, 0x0);
        gbc.writeMem(0x5c54, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x4fa2, gbc.sp());
        EXPECT(0x5c56, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 47 0260
        gbc.setState(0xa143, 0x7f62, 0x5540, 0xaa8, 0x2f5, 0xae60, 0x0, 0x0);
        gbc.writeMem(0xa143, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x7f62, gbc.sp());
        EXPECT(0xa145, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa143));
        EXPECT(0x47, gbc.readMem(0xa144));
        // CB 47 0261
        gbc.setState(0x55c3, 0xbff1, 0xb520, 0x1796, 0xffba, 0x5fb8, 0x0, 0x0);
        gbc.writeMem(0x55c3, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xbff1, gbc.sp());
        EXPECT(0x55c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 47 0262
        gbc.setState(0x45cb, 0x4a9e, 0x4a70, 0xa3bd, 0xbac2, 0x3766, 0x1, 0x1);
        gbc.writeMem(0x45cb, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x4a9e, gbc.sp());
        EXPECT(0x45cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 47 0264
        gbc.setState(0xeb2e, 0x292, 0x1ba0, 0xd795, 0x5fd6, 0x8e0a, 0x1, 0x1);
        gbc.writeMem(0xeb2e, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x292, gbc.sp());
        EXPECT(0xeb30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb2e));
        EXPECT(0x47, gbc.readMem(0xeb2f));
        // CB 47 0265
        gbc.setState(0xbd6, 0xfe54, 0x8d30, 0xe824, 0xdab6, 0x8fe0, 0x1, 0x0);
        gbc.writeMem(0xbd6, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xfe54, gbc.sp());
        EXPECT(0xbd8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 47 0266
        gbc.setState(0x6081, 0xe211, 0xe40, 0xd462, 0x5d49, 0x42c8, 0x0, 0x1);
        gbc.writeMem(0x6081, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xe211, gbc.sp());
        EXPECT(0x6083, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 47 0268
        gbc.setState(0x27a5, 0xc1c5, 0x12c0, 0xed82, 0xc07e, 0xf24a, 0x1, 0x1);
        gbc.writeMem(0x27a5, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xc1c5, gbc.sp());
        EXPECT(0x27a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 47 0269
        gbc.setState(0x28f9, 0x316, 0xb8c0, 0x739f, 0xe5d7, 0x6fc6, 0x1, 0x0);
        gbc.writeMem(0x28f9, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x316, gbc.sp());
        EXPECT(0x28fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 47 026A
        gbc.setState(0x299d, 0x3bec, 0xd130, 0xde00, 0x6f6a, 0x5f3a, 0x1, 0x1);
        gbc.writeMem(0x299d, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x3bec, gbc.sp());
        EXPECT(0x299f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 47 026B
        gbc.setState(0x770c, 0xeefa, 0x69d0, 0xedc9, 0x443a, 0x544f, 0x0, 0x1);
        gbc.writeMem(0x770c, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xeefa, gbc.sp());
        EXPECT(0x770e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 47 026C
        gbc.setState(0xbf88, 0xcc86, 0xf7d0, 0x9e2e, 0xf645, 0x93eb, 0x1, 0x0);
        gbc.writeMem(0xbf88, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xcc86, gbc.sp());
        EXPECT(0xbf8a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf88));
        EXPECT(0x47, gbc.readMem(0xbf89));
        // CB 47 026D
        gbc.setState(0xdd12, 0x6598, 0x2830, 0x4018, 0xf1f1, 0x4878, 0x0, 0x1);
        gbc.writeMem(0xdd12, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x6598, gbc.sp());
        EXPECT(0xdd14, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd12));
        EXPECT(0x47, gbc.readMem(0xdd13));
        // CB 47 026E
        gbc.setState(0x45c5, 0x2efe, 0x3370, 0x9181, 0x2052, 0xd58b, 0x0, 0x0);
        gbc.writeMem(0x45c5, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x2efe, gbc.sp());
        EXPECT(0x45c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 47 026F
        gbc.setState(0x7521, 0x305f, 0x6790, 0x3e97, 0x8054, 0xfc63, 0x1, 0x0);
        gbc.writeMem(0x7521, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x305f, gbc.sp());
        EXPECT(0x7523, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 47 0270
        gbc.setState(0x5ea0, 0xc605, 0xf7c0, 0xa193, 0xd64a, 0xc1d4, 0x1, 0x1);
        gbc.writeMem(0x5ea0, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xc605, gbc.sp());
        EXPECT(0x5ea2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 47 0271
        gbc.setState(0x2ec1, 0x43de, 0xa710, 0x5e57, 0xb20e, 0x367b, 0x0, 0x0);
        gbc.writeMem(0x2ec1, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x43de, gbc.sp());
        EXPECT(0x2ec3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 47 0272
        gbc.setState(0xd3e8, 0xad55, 0x6560, 0xee9d, 0x89c5, 0x75a5, 0x0, 0x0);
        gbc.writeMem(0xd3e8, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xad55, gbc.sp());
        EXPECT(0xd3ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd3e8));
        EXPECT(0x47, gbc.readMem(0xd3e9));
        // CB 47 0273
        gbc.setState(0xad65, 0x291f, 0x7d90, 0xb95a, 0xbafd, 0xeefc, 0x0, 0x1);
        gbc.writeMem(0xad65, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x291f, gbc.sp());
        EXPECT(0xad67, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad65));
        EXPECT(0x47, gbc.readMem(0xad66));
        // CB 47 0274
        gbc.setState(0x9330, 0x94ce, 0x6360, 0x7a72, 0x90e7, 0x5306, 0x1, 0x0);
        gbc.writeMem(0x9330, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x94ce, gbc.sp());
        EXPECT(0x9332, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9330));
        EXPECT(0x47, gbc.readMem(0x9331));
        // CB 47 0275
        gbc.setState(0x39a0, 0xd838, 0x26b0, 0x18b1, 0xfdd8, 0x172d, 0x1, 0x1);
        gbc.writeMem(0x39a0, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xd838, gbc.sp());
        EXPECT(0x39a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 47 0276
        gbc.setState(0x999a, 0x37d0, 0x3ce0, 0x8a29, 0x4c23, 0xb643, 0x1, 0x1);
        gbc.writeMem(0x999a, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x37d0, gbc.sp());
        EXPECT(0x999c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x999a));
        EXPECT(0x47, gbc.readMem(0x999b));
        // CB 47 0277
        gbc.setState(0x52ab, 0x610b, 0xb2b0, 0x2465, 0x1d24, 0x2614, 0x0, 0x0);
        gbc.writeMem(0x52ab, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x610b, gbc.sp());
        EXPECT(0x52ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 47 0278
        gbc.setState(0x44f7, 0x6887, 0xf250, 0x5ce4, 0x53ee, 0xacdb, 0x0, 0x0);
        gbc.writeMem(0x44f7, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x6887, gbc.sp());
        EXPECT(0x44f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 47 0279
        gbc.setState(0x4e60, 0xcd13, 0x2d80, 0x359f, 0x3db6, 0x64e3, 0x1, 0x1);
        gbc.writeMem(0x4e60, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xcd13, gbc.sp());
        EXPECT(0x4e62, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 47 027A
        gbc.setState(0xe9f3, 0x95fe, 0x6290, 0xbfa5, 0x434f, 0xf65, 0x0, 0x1);
        gbc.writeMem(0xe9f3, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x95fe, gbc.sp());
        EXPECT(0xe9f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe9f3));
        EXPECT(0x47, gbc.readMem(0xe9f4));
        // CB 47 027B
        gbc.setState(0x51c7, 0x4a4d, 0x8000, 0x28d6, 0x3d1f, 0x7e93, 0x1, 0x1);
        gbc.writeMem(0x51c7, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x4a4d, gbc.sp());
        EXPECT(0x51c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 47 027C
        gbc.setState(0x3414, 0xf068, 0x47b0, 0x6d42, 0x8529, 0x3bf2, 0x0, 0x0);
        gbc.writeMem(0x3414, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xf068, gbc.sp());
        EXPECT(0x3416, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 47 027D
        gbc.setState(0xaae5, 0xd9de, 0xc4d0, 0x695e, 0x97, 0x6465, 0x0, 0x0);
        gbc.writeMem(0xaae5, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xd9de, gbc.sp());
        EXPECT(0xaae7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaae5));
        EXPECT(0x47, gbc.readMem(0xaae6));
        // CB 47 027E
        gbc.setState(0x2808, 0xe113, 0x55e0, 0xee81, 0xe083, 0xaa91, 0x0, 0x0);
        gbc.writeMem(0x2808, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xe113, gbc.sp());
        EXPECT(0x280a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 47 027F
        gbc.setState(0x8813, 0x54db, 0x630, 0xf562, 0xa599, 0x2a0d, 0x1, 0x1);
        gbc.writeMem(0x8813, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x54db, gbc.sp());
        EXPECT(0x8815, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8813));
        EXPECT(0x47, gbc.readMem(0x8814));
        // CB 47 0280
        gbc.setState(0xe867, 0xf62d, 0x86e0, 0x9292, 0x7e04, 0x2c8e, 0x0, 0x1);
        gbc.writeMem(0xe867, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xf62d, gbc.sp());
        EXPECT(0xe869, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe867));
        EXPECT(0x47, gbc.readMem(0xe868));
        // CB 47 0281
        gbc.setState(0x4ba5, 0x9c53, 0x55b0, 0xc4f4, 0xba68, 0xf2c0, 0x0, 0x0);
        gbc.writeMem(0x4ba5, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x9c53, gbc.sp());
        EXPECT(0x4ba7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 47 0282
        gbc.setState(0x30e3, 0x9473, 0xec00, 0x7739, 0x9ec4, 0xfdd3, 0x1, 0x0);
        gbc.writeMem(0x30e3, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x9473, gbc.sp());
        EXPECT(0x30e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 47 0283
        gbc.setState(0x85fc, 0xe456, 0x7050, 0x71f3, 0xa423, 0x4c5b, 0x1, 0x0);
        gbc.writeMem(0x85fc, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xe456, gbc.sp());
        EXPECT(0x85fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x85fc));
        EXPECT(0x47, gbc.readMem(0x85fd));
        // CB 47 0284
        gbc.setState(0xde8, 0x8b3a, 0xa8b0, 0x8548, 0x88ca, 0xc84f, 0x1, 0x1);
        gbc.writeMem(0xde8, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x8b3a, gbc.sp());
        EXPECT(0xdea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 47 0285
        gbc.setState(0xb8d3, 0xd1e9, 0x1a0, 0xa704, 0x5e0d, 0x7fa6, 0x1, 0x0);
        gbc.writeMem(0xb8d3, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xd1e9, gbc.sp());
        EXPECT(0xb8d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb8d3));
        EXPECT(0x47, gbc.readMem(0xb8d4));
        // CB 47 0286
        gbc.setState(0x607c, 0x5cf8, 0x480, 0x1e29, 0x2fb7, 0xa92, 0x0, 0x1);
        gbc.writeMem(0x607c, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x5cf8, gbc.sp());
        EXPECT(0x607e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 47 0287
        gbc.setState(0xaed8, 0x554, 0xa080, 0x86f1, 0xd29a, 0xf18c, 0x0, 0x0);
        gbc.writeMem(0xaed8, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x554, gbc.sp());
        EXPECT(0xaeda, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaed8));
        EXPECT(0x47, gbc.readMem(0xaed9));
        // CB 47 0288
        gbc.setState(0x2e0b, 0x2243, 0x4b20, 0x9682, 0x5f2a, 0x3f3c, 0x1, 0x0);
        gbc.writeMem(0x2e0b, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x2243, gbc.sp());
        EXPECT(0x2e0d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 47 0289
        gbc.setState(0x5a87, 0x218f, 0x3cb0, 0x5efc, 0x58e0, 0xe0cf, 0x0, 0x0);
        gbc.writeMem(0x5a87, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x218f, gbc.sp());
        EXPECT(0x5a89, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 47 028A
        gbc.setState(0x8cfd, 0x5279, 0x1010, 0x169b, 0x3597, 0x9d3, 0x0, 0x1);
        gbc.writeMem(0x8cfd, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x5279, gbc.sp());
        EXPECT(0x8cff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8cfd));
        EXPECT(0x47, gbc.readMem(0x8cfe));
        // CB 47 028B
        gbc.setState(0x4387, 0x8e8, 0x7c50, 0x5140, 0x1fc3, 0x91ed, 0x0, 0x0);
        gbc.writeMem(0x4387, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x8e8, gbc.sp());
        EXPECT(0x4389, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 47 028C
        gbc.setState(0x7181, 0x1437, 0x1460, 0xcdfb, 0x68c8, 0x4869, 0x1, 0x0);
        gbc.writeMem(0x7181, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x1437, gbc.sp());
        EXPECT(0x7183, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 47 028D
        gbc.setState(0x99b0, 0x94f7, 0xc760, 0x47ea, 0xc886, 0xf5c3, 0x0, 0x0);
        gbc.writeMem(0x99b0, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x94f7, gbc.sp());
        EXPECT(0x99b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x99b0));
        EXPECT(0x47, gbc.readMem(0x99b1));
        // CB 47 028E
        gbc.setState(0xa418, 0x24fb, 0xdce0, 0xe42a, 0x25c0, 0x4005, 0x0, 0x1);
        gbc.writeMem(0xa418, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x24fb, gbc.sp());
        EXPECT(0xa41a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa418));
        EXPECT(0x47, gbc.readMem(0xa419));
        // CB 47 028F
        gbc.setState(0x1adf, 0x4a7f, 0x4f0, 0xc1ec, 0xf90d, 0x1137, 0x1, 0x1);
        gbc.writeMem(0x1adf, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x4a7f, gbc.sp());
        EXPECT(0x1ae1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 47 0290
        gbc.setState(0x1760, 0xd093, 0xfc00, 0xe096, 0x7600, 0xd638, 0x0, 0x0);
        gbc.writeMem(0x1760, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xd093, gbc.sp());
        EXPECT(0x1762, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 47 0291
        gbc.setState(0x20d6, 0x6bda, 0x1ff0, 0xa45b, 0x394e, 0xd6d6, 0x1, 0x1);
        gbc.writeMem(0x20d6, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x6bda, gbc.sp());
        EXPECT(0x20d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 47 0292
        gbc.setState(0x7285, 0x5b24, 0xe1b0, 0x6897, 0x5043, 0x9cc9, 0x0, 0x0);
        gbc.writeMem(0x7285, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x5b24, gbc.sp());
        EXPECT(0x7287, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 47 0293
        gbc.setState(0xe809, 0x8756, 0xc910, 0x2105, 0xbee9, 0x15a, 0x0, 0x0);
        gbc.writeMem(0xe809, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x8756, gbc.sp());
        EXPECT(0xe80b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe809));
        EXPECT(0x47, gbc.readMem(0xe80a));
        // CB 47 0294
        gbc.setState(0xae8c, 0x726f, 0x6fa0, 0xa908, 0x154f, 0x4058, 0x0, 0x1);
        gbc.writeMem(0xae8c, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x726f, gbc.sp());
        EXPECT(0xae8e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae8c));
        EXPECT(0x47, gbc.readMem(0xae8d));
        // CB 47 0295
        gbc.setState(0xc173, 0x96d2, 0x94d0, 0xd52c, 0x6cc8, 0x4676, 0x1, 0x0);
        gbc.writeMem(0xc173, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x96d2, gbc.sp());
        EXPECT(0xc175, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc173));
        EXPECT(0x47, gbc.readMem(0xc174));
        // CB 47 0296
        gbc.setState(0x3c52, 0x8b35, 0xf830, 0x53a7, 0xd58b, 0x8226, 0x0, 0x0);
        gbc.writeMem(0x3c52, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x8b35, gbc.sp());
        EXPECT(0x3c54, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 47 0297
        gbc.setState(0x27ec, 0xfe2e, 0xfbd0, 0xb364, 0xc55b, 0xa65b, 0x0, 0x1);
        gbc.writeMem(0x27ec, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xfe2e, gbc.sp());
        EXPECT(0x27ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 47 0298
        gbc.setState(0xafce, 0x371f, 0xee10, 0xab06, 0xc859, 0xb9fa, 0x0, 0x0);
        gbc.writeMem(0xafce, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x371f, gbc.sp());
        EXPECT(0xafd0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xafce));
        EXPECT(0x47, gbc.readMem(0xafcf));
        // CB 47 0299
        gbc.setState(0x62e7, 0x5515, 0x2040, 0x8936, 0x9957, 0xef1, 0x0, 0x0);
        gbc.writeMem(0x62e7, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x5515, gbc.sp());
        EXPECT(0x62e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 47 029B
        gbc.setState(0x298c, 0xb4dc, 0x7fd0, 0x6ec9, 0xba90, 0xd00f, 0x1, 0x1);
        gbc.writeMem(0x298c, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xb4dc, gbc.sp());
        EXPECT(0x298e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 47 029C
        gbc.setState(0x3e4d, 0x9005, 0xac50, 0x9dfa, 0x6b74, 0xcce3, 0x1, 0x1);
        gbc.writeMem(0x3e4d, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x9005, gbc.sp());
        EXPECT(0x3e4f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 47 029D
        gbc.setState(0x6535, 0xd8bd, 0x81e0, 0x5d99, 0x27bc, 0x4376, 0x0, 0x0);
        gbc.writeMem(0x6535, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xd8bd, gbc.sp());
        EXPECT(0x6537, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 47 029E
        gbc.setState(0x9210, 0xcc7f, 0x6170, 0xd727, 0x5b75, 0xbe, 0x0, 0x1);
        gbc.writeMem(0x9210, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xcc7f, gbc.sp());
        EXPECT(0x9212, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9210));
        EXPECT(0x47, gbc.readMem(0x9211));
        // CB 47 029F
        gbc.setState(0xa576, 0xeacd, 0x8d00, 0xe5b0, 0x8191, 0x21c3, 0x0, 0x1);
        gbc.writeMem(0xa576, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xeacd, gbc.sp());
        EXPECT(0xa578, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa576));
        EXPECT(0x47, gbc.readMem(0xa577));
        // CB 47 02A0
        gbc.setState(0xbbc7, 0x97b1, 0x8540, 0xb79d, 0x9d91, 0xd2c0, 0x0, 0x1);
        gbc.writeMem(0xbbc7, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x97b1, gbc.sp());
        EXPECT(0xbbc9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbbc7));
        EXPECT(0x47, gbc.readMem(0xbbc8));
        // CB 47 02A1
        gbc.setState(0x2540, 0xdc92, 0x9670, 0x4924, 0xcfa, 0x73e0, 0x1, 0x0);
        gbc.writeMem(0x2540, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xdc92, gbc.sp());
        EXPECT(0x2542, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 47 02A3
        gbc.setState(0x77a5, 0x3b14, 0xcea0, 0x69aa, 0x40ba, 0xa197, 0x0, 0x1);
        gbc.writeMem(0x77a5, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x3b14, gbc.sp());
        EXPECT(0x77a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 47 02A4
        gbc.setState(0xb026, 0x39fc, 0xfe60, 0x5f16, 0xef37, 0xba68, 0x0, 0x1);
        gbc.writeMem(0xb026, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x39fc, gbc.sp());
        EXPECT(0xb028, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb026));
        EXPECT(0x47, gbc.readMem(0xb027));
        // CB 47 02A5
        gbc.setState(0x8d71, 0xdab3, 0x8c50, 0x1c8f, 0x3712, 0x569d, 0x0, 0x0);
        gbc.writeMem(0x8d71, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xdab3, gbc.sp());
        EXPECT(0x8d73, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d71));
        EXPECT(0x47, gbc.readMem(0x8d72));
        // CB 47 02A6
        gbc.setState(0x86a, 0x310, 0xa60, 0x69d8, 0x1e03, 0xa41b, 0x1, 0x1);
        gbc.writeMem(0x86a, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x310, gbc.sp());
        EXPECT(0x86c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 47 02A7
        gbc.setState(0xc6cf, 0xc17f, 0x6970, 0x8f7, 0x5923, 0xdb95, 0x1, 0x0);
        gbc.writeMem(0xc6cf, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xc17f, gbc.sp());
        EXPECT(0xc6d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc6cf));
        EXPECT(0x47, gbc.readMem(0xc6d0));
        // CB 47 02A8
        gbc.setState(0xd6b4, 0xfc4e, 0xe7d0, 0x2a1b, 0xc614, 0xd3a9, 0x1, 0x1);
        gbc.writeMem(0xd6b4, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xfc4e, gbc.sp());
        EXPECT(0xd6b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd6b4));
        EXPECT(0x47, gbc.readMem(0xd6b5));
        // CB 47 02A9
        gbc.setState(0x600a, 0x36f0, 0x5570, 0x25bb, 0xc6fd, 0x763e, 0x0, 0x0);
        gbc.writeMem(0x600a, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x36f0, gbc.sp());
        EXPECT(0x600c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 47 02AA
        gbc.setState(0x84f3, 0xc584, 0x1600, 0xe00, 0x4541, 0xb42e, 0x1, 0x0);
        gbc.writeMem(0x84f3, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xc584, gbc.sp());
        EXPECT(0x84f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x84f3));
        EXPECT(0x47, gbc.readMem(0x84f4));
        // CB 47 02AB
        gbc.setState(0x7c41, 0x3460, 0xdf90, 0xcf04, 0xe63f, 0xed7b, 0x0, 0x0);
        gbc.writeMem(0x7c41, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x3460, gbc.sp());
        EXPECT(0x7c43, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 47 02AC
        gbc.setState(0xbc6, 0x3b6d, 0xe8f0, 0xd1f1, 0x6549, 0x834e, 0x0, 0x0);
        gbc.writeMem(0xbc6, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x3b6d, gbc.sp());
        EXPECT(0xbc8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 47 02AE
        gbc.setState(0x704b, 0x1f0c, 0x66e0, 0x3e40, 0xe8db, 0xa318, 0x1, 0x0);
        gbc.writeMem(0x704b, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x1f0c, gbc.sp());
        EXPECT(0x704d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 47 02AF
        gbc.setState(0xacc9, 0xa2ea, 0x6e60, 0x6b37, 0x357d, 0x8794, 0x0, 0x1);
        gbc.writeMem(0xacc9, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xa2ea, gbc.sp());
        EXPECT(0xaccb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xacc9));
        EXPECT(0x47, gbc.readMem(0xacca));
        // CB 47 02B0
        gbc.setState(0xe61e, 0x638a, 0xda30, 0x4c57, 0xdb53, 0xc867, 0x0, 0x0);
        gbc.writeMem(0xe61e, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x638a, gbc.sp());
        EXPECT(0xe620, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe61e));
        EXPECT(0x47, gbc.readMem(0xe61f));
        // CB 47 02B1
        gbc.setState(0x3c3f, 0x15cb, 0xcf40, 0x56e6, 0xa705, 0x83b2, 0x1, 0x1);
        gbc.writeMem(0x3c3f, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x15cb, gbc.sp());
        EXPECT(0x3c41, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 47 02B2
        gbc.setState(0xa343, 0xc41b, 0xb230, 0xa936, 0x4fe3, 0x9d18, 0x0, 0x0);
        gbc.writeMem(0xa343, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xc41b, gbc.sp());
        EXPECT(0xa345, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa343));
        EXPECT(0x47, gbc.readMem(0xa344));
        // CB 47 02B3
        gbc.setState(0xe57f, 0x2b4e, 0x5b0, 0xd765, 0x7281, 0xadfc, 0x0, 0x0);
        gbc.writeMem(0xe57f, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x2b4e, gbc.sp());
        EXPECT(0xe581, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe57f));
        EXPECT(0x47, gbc.readMem(0xe580));
        // CB 47 02B4
        gbc.setState(0x162b, 0x7965, 0xdab0, 0xacc6, 0xa6bf, 0x5cb9, 0x1, 0x0);
        gbc.writeMem(0x162b, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x7965, gbc.sp());
        EXPECT(0x162d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 47 02B5
        gbc.setState(0x9ff4, 0xeaac, 0x79d0, 0xd06d, 0xb013, 0x4e39, 0x0, 0x0);
        gbc.writeMem(0x9ff4, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xeaac, gbc.sp());
        EXPECT(0x9ff6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ff4));
        EXPECT(0x47, gbc.readMem(0x9ff5));
        // CB 47 02B6
        gbc.setState(0x7b86, 0x44ab, 0xc8f0, 0x928e, 0x4f85, 0x2c4c, 0x1, 0x1);
        gbc.writeMem(0x7b86, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x44ab, gbc.sp());
        EXPECT(0x7b88, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 47 02B7
        gbc.setState(0xa7d1, 0xd7d8, 0xe180, 0xeec4, 0x3f65, 0x1516, 0x1, 0x1);
        gbc.writeMem(0xa7d1, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xd7d8, gbc.sp());
        EXPECT(0xa7d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa7d1));
        EXPECT(0x47, gbc.readMem(0xa7d2));
        // CB 47 02B8
        gbc.setState(0x1f83, 0xbc75, 0xa700, 0x2492, 0x2770, 0x8a0f, 0x0, 0x1);
        gbc.writeMem(0x1f83, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xbc75, gbc.sp());
        EXPECT(0x1f85, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 47 02B9
        gbc.setState(0xc6e6, 0x17f4, 0x64a0, 0x8c95, 0xada3, 0x44b7, 0x0, 0x0);
        gbc.writeMem(0xc6e6, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x17f4, gbc.sp());
        EXPECT(0xc6e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc6e6));
        EXPECT(0x47, gbc.readMem(0xc6e7));
        // CB 47 02BA
        gbc.setState(0x72e0, 0xf35b, 0x6fb0, 0x253b, 0xdecb, 0x7845, 0x0, 0x1);
        gbc.writeMem(0x72e0, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xf35b, gbc.sp());
        EXPECT(0x72e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 47 02BB
        gbc.setState(0x454, 0x6279, 0x7920, 0x19c5, 0xec19, 0x1b90, 0x1, 0x0);
        gbc.writeMem(0x454, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x6279, gbc.sp());
        EXPECT(0x456, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 47 02BC
        gbc.setState(0x745d, 0x53ba, 0x45c0, 0x1b8c, 0xd186, 0xee58, 0x1, 0x1);
        gbc.writeMem(0x745d, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x53ba, gbc.sp());
        EXPECT(0x745f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 47 02BD
        gbc.setState(0x9cec, 0x633e, 0xc0f0, 0x2bb2, 0x4e2e, 0x45d, 0x1, 0x1);
        gbc.writeMem(0x9cec, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x633e, gbc.sp());
        EXPECT(0x9cee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9cec));
        EXPECT(0x47, gbc.readMem(0x9ced));
        // CB 47 02BE
        gbc.setState(0x2d8, 0x2742, 0x7680, 0x514e, 0x8378, 0xb021, 0x0, 0x1);
        gbc.writeMem(0x2d8, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x2742, gbc.sp());
        EXPECT(0x2da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 47 02BF
        gbc.setState(0xa51d, 0x744e, 0x75b0, 0xa8b1, 0x4869, 0x6b14, 0x1, 0x1);
        gbc.writeMem(0xa51d, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x744e, gbc.sp());
        EXPECT(0xa51f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa51d));
        EXPECT(0x47, gbc.readMem(0xa51e));
        // CB 47 02C0
        gbc.setState(0xee3b, 0x7a4e, 0x2480, 0xfb27, 0xd397, 0x9501, 0x1, 0x1);
        gbc.writeMem(0xee3b, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x7a4e, gbc.sp());
        EXPECT(0xee3d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee3b));
        EXPECT(0x47, gbc.readMem(0xee3c));
        // CB 47 02C1
        gbc.setState(0x2530, 0x1cbd, 0x40c0, 0x82e1, 0x87f6, 0x61f1, 0x0, 0x1);
        gbc.writeMem(0x2530, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x1cbd, gbc.sp());
        EXPECT(0x2532, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 47 02C2
        gbc.setState(0xa1be, 0x598c, 0xa200, 0xdea2, 0x2bc1, 0x2d7b, 0x0, 0x1);
        gbc.writeMem(0xa1be, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x598c, gbc.sp());
        EXPECT(0xa1c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa1be));
        EXPECT(0x47, gbc.readMem(0xa1bf));
        // CB 47 02C3
        gbc.setState(0xa6a9, 0x864c, 0xeab0, 0xd2e6, 0x36ed, 0xde51, 0x1, 0x1);
        gbc.writeMem(0xa6a9, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x864c, gbc.sp());
        EXPECT(0xa6ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa6a9));
        EXPECT(0x47, gbc.readMem(0xa6aa));
        // CB 47 02C4
        gbc.setState(0xb80e, 0x80e0, 0x34d0, 0xd07f, 0xa6d6, 0x6ab8, 0x0, 0x1);
        gbc.writeMem(0xb80e, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x80e0, gbc.sp());
        EXPECT(0xb810, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb80e));
        EXPECT(0x47, gbc.readMem(0xb80f));
        // CB 47 02C5
        gbc.setState(0xcdda, 0xb227, 0x11a0, 0xd37f, 0xc8eb, 0x8b32, 0x0, 0x1);
        gbc.writeMem(0xcdda, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xb227, gbc.sp());
        EXPECT(0xcddc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcdda));
        EXPECT(0x47, gbc.readMem(0xcddb));
        // CB 47 02C6
        gbc.setState(0x61a9, 0xffd6, 0xdda0, 0x9e7a, 0xd035, 0xa1c5, 0x0, 0x0);
        gbc.writeMem(0x61a9, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xffd6, gbc.sp());
        EXPECT(0x61ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 47 02C7
        gbc.setState(0x9310, 0x5279, 0xa9a0, 0x49a6, 0x9ab2, 0x5dd4, 0x0, 0x0);
        gbc.writeMem(0x9310, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x5279, gbc.sp());
        EXPECT(0x9312, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9310));
        EXPECT(0x47, gbc.readMem(0x9311));
        // CB 47 02C8
        gbc.setState(0x7834, 0x43f, 0xfe50, 0x98f2, 0x8e84, 0xed3b, 0x0, 0x0);
        gbc.writeMem(0x7834, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x43f, gbc.sp());
        EXPECT(0x7836, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 47 02C9
        gbc.setState(0xe974, 0x6e9b, 0x44c0, 0xe9a0, 0xc70f, 0x4f02, 0x0, 0x0);
        gbc.writeMem(0xe974, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x6e9b, gbc.sp());
        EXPECT(0xe976, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe974));
        EXPECT(0x47, gbc.readMem(0xe975));
        // CB 47 02CA
        gbc.setState(0xe684, 0xf15f, 0xdf00, 0x107, 0x23cd, 0x923f, 0x0, 0x1);
        gbc.writeMem(0xe684, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xf15f, gbc.sp());
        EXPECT(0xe686, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe684));
        EXPECT(0x47, gbc.readMem(0xe685));
        // CB 47 02CB
        gbc.setState(0xb1a, 0x6c02, 0x9ba0, 0xcb98, 0x4f79, 0x53aa, 0x1, 0x0);
        gbc.writeMem(0xb1a, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x6c02, gbc.sp());
        EXPECT(0xb1c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 47 02CC
        gbc.setState(0x510b, 0x144b, 0xdb10, 0x26d, 0xfeb9, 0x9eaf, 0x0, 0x0);
        gbc.writeMem(0x510b, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x144b, gbc.sp());
        EXPECT(0x510d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 47 02CD
        gbc.setState(0x75dc, 0x26b6, 0x6660, 0x65cd, 0x5d5b, 0x41d5, 0x1, 0x1);
        gbc.writeMem(0x75dc, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x26b6, gbc.sp());
        EXPECT(0x75de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 47 02CE
        gbc.setState(0xcdae, 0xdfcf, 0x4020, 0x8bfb, 0x5ca5, 0x9fc8, 0x0, 0x1);
        gbc.writeMem(0xcdae, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xdfcf, gbc.sp());
        EXPECT(0xcdb0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcdae));
        EXPECT(0x47, gbc.readMem(0xcdaf));
        // CB 47 02CF
        gbc.setState(0x8ada, 0xc6f8, 0xc670, 0x2344, 0x6cf6, 0x60ab, 0x1, 0x0);
        gbc.writeMem(0x8ada, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xc6f8, gbc.sp());
        EXPECT(0x8adc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ada));
        EXPECT(0x47, gbc.readMem(0x8adb));
        // CB 47 02D0
        gbc.setState(0xa714, 0x68bc, 0xeb70, 0x3e19, 0xd085, 0x7df9, 0x1, 0x0);
        gbc.writeMem(0xa714, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x68bc, gbc.sp());
        EXPECT(0xa716, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa714));
        EXPECT(0x47, gbc.readMem(0xa715));
        // CB 47 02D1
        gbc.setState(0xa132, 0x649d, 0x20c0, 0x9320, 0x5297, 0xb3c9, 0x0, 0x1);
        gbc.writeMem(0xa132, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x649d, gbc.sp());
        EXPECT(0xa134, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa132));
        EXPECT(0x47, gbc.readMem(0xa133));
        // CB 47 02D2
        gbc.setState(0xa674, 0xb437, 0x4f20, 0x74dc, 0xa095, 0x3461, 0x0, 0x0);
        gbc.writeMem(0xa674, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xb437, gbc.sp());
        EXPECT(0xa676, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa674));
        EXPECT(0x47, gbc.readMem(0xa675));
        // CB 47 02D3
        gbc.setState(0xb5d2, 0xc903, 0x5620, 0x27bb, 0x30e4, 0x1117, 0x0, 0x0);
        gbc.writeMem(0xb5d2, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xc903, gbc.sp());
        EXPECT(0xb5d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb5d2));
        EXPECT(0x47, gbc.readMem(0xb5d3));
        // CB 47 02D4
        gbc.setState(0x508e, 0x81bb, 0x5290, 0xc5cc, 0x118a, 0xaefa, 0x0, 0x1);
        gbc.writeMem(0x508e, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x81bb, gbc.sp());
        EXPECT(0x5090, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 47 02D5
        gbc.setState(0x3ed7, 0x9c13, 0x2a60, 0xfc47, 0xb6b4, 0xf8ac, 0x1, 0x1);
        gbc.writeMem(0x3ed7, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x9c13, gbc.sp());
        EXPECT(0x3ed9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 47 02D6
        gbc.setState(0x5cb1, 0x26ce, 0xe800, 0x9474, 0x3e65, 0x8f54, 0x0, 0x0);
        gbc.writeMem(0x5cb1, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x26ce, gbc.sp());
        EXPECT(0x5cb3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 47 02D8
        gbc.setState(0x9c96, 0x8d1b, 0xb470, 0xeacc, 0x30b1, 0x22af, 0x0, 0x0);
        gbc.writeMem(0x9c96, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x8d1b, gbc.sp());
        EXPECT(0x9c98, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c96));
        EXPECT(0x47, gbc.readMem(0x9c97));
        // CB 47 02D9
        gbc.setState(0x4515, 0x266a, 0xe420, 0x3aca, 0xb14f, 0x5c25, 0x1, 0x0);
        gbc.writeMem(0x4515, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x266a, gbc.sp());
        EXPECT(0x4517, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 47 02DC
        gbc.setState(0x68ae, 0x1034, 0xf800, 0xfc3f, 0x5d9b, 0x6543, 0x1, 0x1);
        gbc.writeMem(0x68ae, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x1034, gbc.sp());
        EXPECT(0x68b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 47 02DD
        gbc.setState(0xb20d, 0x3387, 0xdfa0, 0x21c5, 0x7d99, 0x10ba, 0x1, 0x1);
        gbc.writeMem(0xb20d, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x3387, gbc.sp());
        EXPECT(0xb20f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb20d));
        EXPECT(0x47, gbc.readMem(0xb20e));
        // CB 47 02DE
        gbc.setState(0xe9b3, 0x1344, 0x5580, 0x3a16, 0xfacc, 0x62e9, 0x1, 0x0);
        gbc.writeMem(0xe9b3, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x1344, gbc.sp());
        EXPECT(0xe9b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe9b3));
        EXPECT(0x47, gbc.readMem(0xe9b4));
        // CB 47 02DF
        gbc.setState(0xc32f, 0x3bbc, 0x2910, 0x664e, 0x2c31, 0xfb09, 0x1, 0x1);
        gbc.writeMem(0xc32f, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x3bbc, gbc.sp());
        EXPECT(0xc331, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc32f));
        EXPECT(0x47, gbc.readMem(0xc330));
        // CB 47 02E0
        gbc.setState(0x8ce3, 0xeef6, 0x4e80, 0x149a, 0x7628, 0x9b9d, 0x0, 0x0);
        gbc.writeMem(0x8ce3, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xeef6, gbc.sp());
        EXPECT(0x8ce5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ce3));
        EXPECT(0x47, gbc.readMem(0x8ce4));
        // CB 47 02E2
        gbc.setState(0x3d1d, 0x6a37, 0x6960, 0xcee8, 0xb034, 0xdf45, 0x1, 0x0);
        gbc.writeMem(0x3d1d, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x6a37, gbc.sp());
        EXPECT(0x3d1f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 47 02E3
        gbc.setState(0x6620, 0x53ae, 0xad80, 0xf1e4, 0x6684, 0x31de, 0x1, 0x0);
        gbc.writeMem(0x6620, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x53ae, gbc.sp());
        EXPECT(0x6622, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 47 02E4
        gbc.setState(0x2eb1, 0xed5c, 0xe4b0, 0x4281, 0xea09, 0xfc71, 0x1, 0x1);
        gbc.writeMem(0x2eb1, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xed5c, gbc.sp());
        EXPECT(0x2eb3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 47 02E5
        gbc.setState(0xcbea, 0x6669, 0x6ff0, 0x228a, 0x7a9d, 0x4d09, 0x0, 0x1);
        gbc.writeMem(0xcbea, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x6669, gbc.sp());
        EXPECT(0xcbec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcbea));
        EXPECT(0x47, gbc.readMem(0xcbeb));
        // CB 47 02E6
        gbc.setState(0x892f, 0x9c97, 0x9bf0, 0xbde2, 0xab7a, 0x9930, 0x0, 0x0);
        gbc.writeMem(0x892f, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x9c97, gbc.sp());
        EXPECT(0x8931, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x892f));
        EXPECT(0x47, gbc.readMem(0x8930));
        // CB 47 02E7
        gbc.setState(0x1e5, 0xdd92, 0xaa50, 0x6fb9, 0x8d82, 0xa471, 0x0, 0x0);
        gbc.writeMem(0x1e5, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xdd92, gbc.sp());
        EXPECT(0x1e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 47 02E8
        gbc.setState(0x5dad, 0x9e83, 0x7b0, 0xc5da, 0x8edc, 0x9820, 0x0, 0x1);
        gbc.writeMem(0x5dad, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x9e83, gbc.sp());
        EXPECT(0x5daf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 47 02E9
        gbc.setState(0x5060, 0x7b46, 0x88c0, 0x9b9b, 0xeb10, 0x19c0, 0x1, 0x0);
        gbc.writeMem(0x5060, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x7b46, gbc.sp());
        EXPECT(0x5062, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 47 02EA
        gbc.setState(0xed20, 0xb7e4, 0xd420, 0xf61d, 0x4daf, 0xbde5, 0x0, 0x1);
        gbc.writeMem(0xed20, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xb7e4, gbc.sp());
        EXPECT(0xed22, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed20));
        EXPECT(0x47, gbc.readMem(0xed21));
        // CB 47 02EB
        gbc.setState(0xc845, 0xe4b8, 0xff20, 0x7905, 0x7d, 0x8b62, 0x1, 0x1);
        gbc.writeMem(0xc845, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xe4b8, gbc.sp());
        EXPECT(0xc847, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc845));
        EXPECT(0x47, gbc.readMem(0xc846));
        // CB 47 02ED
        gbc.setState(0x2d6e, 0x6011, 0xe4b0, 0xf040, 0xa3d5, 0x42df, 0x0, 0x1);
        gbc.writeMem(0x2d6e, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x6011, gbc.sp());
        EXPECT(0x2d70, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 47 02EE
        gbc.setState(0xd031, 0x3a40, 0x6ff0, 0x5ae7, 0xfdaa, 0x7852, 0x1, 0x0);
        gbc.writeMem(0xd031, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x3a40, gbc.sp());
        EXPECT(0xd033, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd031));
        EXPECT(0x47, gbc.readMem(0xd032));
        // CB 47 02EF
        gbc.setState(0xc2f8, 0xee4f, 0x66b0, 0x30db, 0x3740, 0x8f62, 0x0, 0x0);
        gbc.writeMem(0xc2f8, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xee4f, gbc.sp());
        EXPECT(0xc2fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc2f8));
        EXPECT(0x47, gbc.readMem(0xc2f9));
        // CB 47 02F0
        gbc.setState(0x7588, 0xdf3e, 0x1250, 0xd99b, 0xd170, 0x14a6, 0x0, 0x0);
        gbc.writeMem(0x7588, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xdf3e, gbc.sp());
        EXPECT(0x758a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 47 02F1
        gbc.setState(0x7a5f, 0x733d, 0x4ec0, 0x5304, 0x3e7b, 0xa3c7, 0x0, 0x0);
        gbc.writeMem(0x7a5f, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x733d, gbc.sp());
        EXPECT(0x7a61, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 47 02F2
        gbc.setState(0xdbde, 0x4f5d, 0x4f40, 0x3752, 0xf3a4, 0xb07f, 0x1, 0x0);
        gbc.writeMem(0xdbde, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x4f5d, gbc.sp());
        EXPECT(0xdbe0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdbde));
        EXPECT(0x47, gbc.readMem(0xdbdf));
        // CB 47 02F3
        gbc.setState(0x7819, 0x83fe, 0xad00, 0x406, 0x9315, 0xc539, 0x1, 0x1);
        gbc.writeMem(0x7819, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x83fe, gbc.sp());
        EXPECT(0x781b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 47 02F4
        gbc.setState(0x4853, 0x44a5, 0xb590, 0xf21f, 0x2338, 0xca8, 0x0, 0x1);
        gbc.writeMem(0x4853, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x44a5, gbc.sp());
        EXPECT(0x4855, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 47 02F5
        gbc.setState(0x7c27, 0x9126, 0x72e0, 0x5b60, 0xb4ae, 0x96fc, 0x0, 0x1);
        gbc.writeMem(0x7c27, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x9126, gbc.sp());
        EXPECT(0x7c29, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 47 02F6
        gbc.setState(0x3c36, 0x8b47, 0xcf90, 0x6d5d, 0xab0e, 0x6dbf, 0x1, 0x0);
        gbc.writeMem(0x3c36, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x8b47, gbc.sp());
        EXPECT(0x3c38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 47 02F7
        gbc.setState(0x80cd, 0x5821, 0xac20, 0xa93c, 0x8322, 0xedb4, 0x0, 0x1);
        gbc.writeMem(0x80cd, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x5821, gbc.sp());
        EXPECT(0x80cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x80cd));
        EXPECT(0x47, gbc.readMem(0x80ce));
        // CB 47 02F8
        gbc.setState(0xc002, 0x7758, 0x52b0, 0x4e39, 0xeaa1, 0x6f99, 0x0, 0x0);
        gbc.writeMem(0xc002, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x7758, gbc.sp());
        EXPECT(0xc004, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc002));
        EXPECT(0x47, gbc.readMem(0xc003));
        // CB 47 02F9
        gbc.setState(0x5d, 0x1de9, 0x2240, 0xe322, 0xc3a0, 0x36ce, 0x0, 0x1);
        gbc.writeMem(0x5d, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x1de9, gbc.sp());
        EXPECT(0x5f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 47 02FA
        gbc.setState(0xb3d8, 0xe81, 0xf1d0, 0x8479, 0x23c7, 0xdc47, 0x1, 0x1);
        gbc.writeMem(0xb3d8, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xe81, gbc.sp());
        EXPECT(0xb3da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb3d8));
        EXPECT(0x47, gbc.readMem(0xb3d9));
        // CB 47 02FB
        gbc.setState(0xdc23, 0x2302, 0xce20, 0xc36d, 0x9c2c, 0xb19e, 0x0, 0x1);
        gbc.writeMem(0xdc23, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x2302, gbc.sp());
        EXPECT(0xdc25, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc23));
        EXPECT(0x47, gbc.readMem(0xdc24));
        // CB 47 02FC
        gbc.setState(0xed07, 0xb582, 0x1fe0, 0x902b, 0x176, 0x2a57, 0x1, 0x0);
        gbc.writeMem(0xed07, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xb582, gbc.sp());
        EXPECT(0xed09, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed07));
        EXPECT(0x47, gbc.readMem(0xed08));
        // CB 47 02FD
        gbc.setState(0x440b, 0x6d4e, 0x5930, 0x13db, 0x9135, 0x4359, 0x1, 0x0);
        gbc.writeMem(0x440b, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x6d4e, gbc.sp());
        EXPECT(0x440d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 47 02FE
        gbc.setState(0x13ea, 0x27d1, 0x2250, 0xf55f, 0xa3e7, 0x5b80, 0x0, 0x0);
        gbc.writeMem(0x13ea, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x27d1, gbc.sp());
        EXPECT(0x13ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 47 02FF
        gbc.setState(0x7379, 0x9bb4, 0x28b0, 0x240a, 0x793d, 0x5a2, 0x1, 0x0);
        gbc.writeMem(0x7379, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x9bb4, gbc.sp());
        EXPECT(0x737b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 47 0300
        gbc.setState(0x8ac3, 0x22c4, 0x5590, 0x8122, 0x505, 0xe201, 0x1, 0x1);
        gbc.writeMem(0x8ac3, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x22c4, gbc.sp());
        EXPECT(0x8ac5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ac3));
        EXPECT(0x47, gbc.readMem(0x8ac4));
        // CB 47 0301
        gbc.setState(0xd1a1, 0x6752, 0x9cc0, 0x766b, 0x81bf, 0xaf5f, 0x0, 0x0);
        gbc.writeMem(0xd1a1, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x6752, gbc.sp());
        EXPECT(0xd1a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd1a1));
        EXPECT(0x47, gbc.readMem(0xd1a2));
        // CB 47 0302
        gbc.setState(0x2c2d, 0x6105, 0xb550, 0xb01e, 0xf248, 0xc172, 0x1, 0x1);
        gbc.writeMem(0x2c2d, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x6105, gbc.sp());
        EXPECT(0x2c2f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 47 0303
        gbc.setState(0x7df9, 0xa671, 0xcf60, 0x98ad, 0xefa5, 0x7b78, 0x1, 0x1);
        gbc.writeMem(0x7df9, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xa671, gbc.sp());
        EXPECT(0x7dfb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 47 0304
        gbc.setState(0x8866, 0x9198, 0x8f90, 0x4f40, 0x64f1, 0x79c9, 0x1, 0x1);
        gbc.writeMem(0x8866, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x9198, gbc.sp());
        EXPECT(0x8868, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8866));
        EXPECT(0x47, gbc.readMem(0x8867));
        // CB 47 0305
        gbc.setState(0x504a, 0xa445, 0xd810, 0x6888, 0xc1c0, 0xbd44, 0x1, 0x1);
        gbc.writeMem(0x504a, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xa445, gbc.sp());
        EXPECT(0x504c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 47 0306
        gbc.setState(0x4d1f, 0xa74e, 0xe8b0, 0x429b, 0x1656, 0x40cf, 0x0, 0x0);
        gbc.writeMem(0x4d1f, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xa74e, gbc.sp());
        EXPECT(0x4d21, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 47 0307
        gbc.setState(0x5ce6, 0xbe39, 0xdb40, 0xca87, 0xa899, 0x3adf, 0x1, 0x0);
        gbc.writeMem(0x5ce6, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xbe39, gbc.sp());
        EXPECT(0x5ce8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 47 0308
        gbc.setState(0xcccc, 0x1741, 0xd320, 0xfe5d, 0x4fc6, 0x25f6, 0x1, 0x0);
        gbc.writeMem(0xcccc, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x1741, gbc.sp());
        EXPECT(0xccce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcccc));
        EXPECT(0x47, gbc.readMem(0xcccd));
        // CB 47 0309
        gbc.setState(0x35a9, 0x5eaf, 0x83f0, 0x536f, 0xcfff, 0x4c91, 0x1, 0x0);
        gbc.writeMem(0x35a9, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x5eaf, gbc.sp());
        EXPECT(0x35ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 47 030B
        gbc.setState(0x8270, 0x2ccf, 0x62c0, 0xe508, 0xe7f7, 0xb22f, 0x0, 0x0);
        gbc.writeMem(0x8270, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x2ccf, gbc.sp());
        EXPECT(0x8272, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8270));
        EXPECT(0x47, gbc.readMem(0x8271));
        // CB 47 030C
        gbc.setState(0x72a6, 0x5ab2, 0xddd0, 0x1a1f, 0xe527, 0xe372, 0x1, 0x0);
        gbc.writeMem(0x72a6, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x5ab2, gbc.sp());
        EXPECT(0x72a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 47 030D
        gbc.setState(0x9a, 0xb891, 0x74f0, 0x8842, 0xa92, 0x82c6, 0x0, 0x1);
        gbc.writeMem(0x9a, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xb891, gbc.sp());
        EXPECT(0x9c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 47 030E
        gbc.setState(0x8a2e, 0xb675, 0x5fb0, 0x6f, 0xc5de, 0x990c, 0x1, 0x0);
        gbc.writeMem(0x8a2e, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xb675, gbc.sp());
        EXPECT(0x8a30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a2e));
        EXPECT(0x47, gbc.readMem(0x8a2f));
        // CB 47 030F
        gbc.setState(0x254b, 0x7a2c, 0xff60, 0x6be6, 0xeae3, 0xaa14, 0x1, 0x1);
        gbc.writeMem(0x254b, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x7a2c, gbc.sp());
        EXPECT(0x254d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 47 0310
        gbc.setState(0x4774, 0xaa1c, 0xe720, 0x6eb3, 0x9d87, 0xef6a, 0x1, 0x0);
        gbc.writeMem(0x4774, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xaa1c, gbc.sp());
        EXPECT(0x4776, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 47 0311
        gbc.setState(0xbfdf, 0x5689, 0x2310, 0x6671, 0xfaa0, 0x8454, 0x0, 0x0);
        gbc.writeMem(0xbfdf, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x5689, gbc.sp());
        EXPECT(0xbfe1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbfdf));
        EXPECT(0x47, gbc.readMem(0xbfe0));
        // CB 47 0312
        gbc.setState(0x906f, 0xd923, 0x19e0, 0xc197, 0x914b, 0x94a3, 0x0, 0x0);
        gbc.writeMem(0x906f, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xd923, gbc.sp());
        EXPECT(0x9071, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x906f));
        EXPECT(0x47, gbc.readMem(0x9070));
        // CB 47 0313
        gbc.setState(0xb97a, 0x9103, 0xa440, 0x491f, 0x122c, 0x8519, 0x0, 0x1);
        gbc.writeMem(0xb97a, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x9103, gbc.sp());
        EXPECT(0xb97c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb97a));
        EXPECT(0x47, gbc.readMem(0xb97b));
        // CB 47 0314
        gbc.setState(0x19e4, 0x7c16, 0x1ed0, 0x1d43, 0x3f42, 0xc736, 0x1, 0x1);
        gbc.writeMem(0x19e4, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x7c16, gbc.sp());
        EXPECT(0x19e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 47 0316
        gbc.setState(0xbbb1, 0x65eb, 0x4a70, 0x68cc, 0x8f32, 0x9f2, 0x1, 0x0);
        gbc.writeMem(0xbbb1, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x65eb, gbc.sp());
        EXPECT(0xbbb3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbbb1));
        EXPECT(0x47, gbc.readMem(0xbbb2));
        // CB 47 0317
        gbc.setState(0x2230, 0xfeb4, 0x4eb0, 0x6faf, 0x253a, 0xa98e, 0x1, 0x0);
        gbc.writeMem(0x2230, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xfeb4, gbc.sp());
        EXPECT(0x2232, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 47 0318
        gbc.setState(0x33ca, 0xa03b, 0xe460, 0x497f, 0xcd2b, 0x28d1, 0x1, 0x0);
        gbc.writeMem(0x33ca, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xa03b, gbc.sp());
        EXPECT(0x33cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 47 0319
        gbc.setState(0xeed0, 0xac72, 0x8420, 0x6634, 0x9d9e, 0x55a1, 0x1, 0x1);
        gbc.writeMem(0xeed0, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xac72, gbc.sp());
        EXPECT(0xeed2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeed0));
        EXPECT(0x47, gbc.readMem(0xeed1));
        // CB 47 031A
        gbc.setState(0x35b2, 0x2e33, 0x4f20, 0x4188, 0x34ab, 0xa596, 0x1, 0x1);
        gbc.writeMem(0x35b2, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x2e33, gbc.sp());
        EXPECT(0x35b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 47 031B
        gbc.setState(0x1d0e, 0x7c73, 0xa0, 0x8e0d, 0x439a, 0x6603, 0x1, 0x1);
        gbc.writeMem(0x1d0e, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x7c73, gbc.sp());
        EXPECT(0x1d10, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 47 031C
        gbc.setState(0xb6d0, 0x5019, 0xc3d0, 0x9261, 0xc2a3, 0x88b7, 0x0, 0x1);
        gbc.writeMem(0xb6d0, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x5019, gbc.sp());
        EXPECT(0xb6d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb6d0));
        EXPECT(0x47, gbc.readMem(0xb6d1));
        // CB 47 031D
        gbc.setState(0x7309, 0xe677, 0x2640, 0xcf92, 0xdab0, 0x71d5, 0x1, 0x0);
        gbc.writeMem(0x7309, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xe677, gbc.sp());
        EXPECT(0x730b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 47 031E
        gbc.setState(0x6f5b, 0xae15, 0x7110, 0x1201, 0xc038, 0x178, 0x1, 0x1);
        gbc.writeMem(0x6f5b, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xae15, gbc.sp());
        EXPECT(0x6f5d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 47 031F
        gbc.setState(0x81b, 0x4abd, 0xad60, 0x5068, 0x7056, 0x9703, 0x1, 0x0);
        gbc.writeMem(0x81b, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x4abd, gbc.sp());
        EXPECT(0x81d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 47 0320
        gbc.setState(0x72bf, 0x790a, 0x3190, 0x4f7f, 0xe4ac, 0xcff1, 0x1, 0x0);
        gbc.writeMem(0x72bf, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x790a, gbc.sp());
        EXPECT(0x72c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 47 0321
        gbc.setState(0x4652, 0xaca1, 0x9f30, 0x148e, 0x56dd, 0x4523, 0x1, 0x1);
        gbc.writeMem(0x4652, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xaca1, gbc.sp());
        EXPECT(0x4654, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 47 0322
        gbc.setState(0xb022, 0x67fb, 0xf770, 0xc3b, 0xeddd, 0xf2fa, 0x1, 0x1);
        gbc.writeMem(0xb022, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x67fb, gbc.sp());
        EXPECT(0xb024, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb022));
        EXPECT(0x47, gbc.readMem(0xb023));
        // CB 47 0323
        gbc.setState(0xe58e, 0x3df3, 0x5390, 0x30ad, 0xcfb4, 0x9192, 0x1, 0x1);
        gbc.writeMem(0xe58e, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x3df3, gbc.sp());
        EXPECT(0xe590, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe58e));
        EXPECT(0x47, gbc.readMem(0xe58f));
        // CB 47 0324
        gbc.setState(0x5bc7, 0x330b, 0xec40, 0x42fc, 0xc213, 0x99a9, 0x1, 0x1);
        gbc.writeMem(0x5bc7, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x330b, gbc.sp());
        EXPECT(0x5bc9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 47 0325
        gbc.setState(0x5cd, 0x3549, 0xd750, 0x259b, 0xf536, 0xe373, 0x1, 0x1);
        gbc.writeMem(0x5cd, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x3549, gbc.sp());
        EXPECT(0x5cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 47 0326
        gbc.setState(0xf0d, 0xbaab, 0xba20, 0xe620, 0x46bd, 0x375b, 0x1, 0x0);
        gbc.writeMem(0xf0d, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xbaab, gbc.sp());
        EXPECT(0xf0f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 47 0327
        gbc.setState(0xd3bb, 0x8359, 0xa8d0, 0xde25, 0xc140, 0x96f5, 0x1, 0x0);
        gbc.writeMem(0xd3bb, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x8359, gbc.sp());
        EXPECT(0xd3bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd3bb));
        EXPECT(0x47, gbc.readMem(0xd3bc));
        // CB 47 0328
        gbc.setState(0x8757, 0x587e, 0xea60, 0xc287, 0xd84a, 0x83de, 0x1, 0x1);
        gbc.writeMem(0x8757, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x587e, gbc.sp());
        EXPECT(0x8759, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8757));
        EXPECT(0x47, gbc.readMem(0x8758));
        // CB 47 0329
        gbc.setState(0x3ef9, 0xc1d, 0x9830, 0x54c1, 0xdace, 0xc458, 0x0, 0x1);
        gbc.writeMem(0x3ef9, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xc1d, gbc.sp());
        EXPECT(0x3efb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 47 032A
        gbc.setState(0x8e96, 0x13c7, 0x6b70, 0x5ed1, 0x367b, 0xfe1c, 0x1, 0x1);
        gbc.writeMem(0x8e96, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x13c7, gbc.sp());
        EXPECT(0x8e98, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e96));
        EXPECT(0x47, gbc.readMem(0x8e97));
        // CB 47 032B
        gbc.setState(0xee9e, 0x8849, 0x6e0, 0xda17, 0x6194, 0x71d7, 0x0, 0x0);
        gbc.writeMem(0xee9e, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x8849, gbc.sp());
        EXPECT(0xeea0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee9e));
        EXPECT(0x47, gbc.readMem(0xee9f));
        // CB 47 032C
        gbc.setState(0x1c84, 0x81eb, 0x20d0, 0x3527, 0x9f33, 0x9dbc, 0x1, 0x1);
        gbc.writeMem(0x1c84, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x81eb, gbc.sp());
        EXPECT(0x1c86, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 47 032D
        gbc.setState(0x203a, 0x9181, 0x7e40, 0x9e87, 0xa58e, 0x1fb5, 0x0, 0x1);
        gbc.writeMem(0x203a, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x9181, gbc.sp());
        EXPECT(0x203c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 47 032F
        gbc.setState(0x16ad, 0x3233, 0x550, 0x102d, 0x637d, 0x71b5, 0x1, 0x0);
        gbc.writeMem(0x16ad, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x3233, gbc.sp());
        EXPECT(0x16af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 47 0330
        gbc.setState(0x1ea6, 0xa623, 0xb010, 0x400b, 0x6d7c, 0xf0d3, 0x1, 0x0);
        gbc.writeMem(0x1ea6, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xa623, gbc.sp());
        EXPECT(0x1ea8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 47 0331
        gbc.setState(0xa720, 0x2f49, 0x1c70, 0x7530, 0xd989, 0xbf2f, 0x1, 0x0);
        gbc.writeMem(0xa720, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x2f49, gbc.sp());
        EXPECT(0xa722, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa720));
        EXPECT(0x47, gbc.readMem(0xa721));
        // CB 47 0332
        gbc.setState(0x8080, 0x65de, 0xdf30, 0xfd75, 0xb1ad, 0xca4f, 0x0, 0x1);
        gbc.writeMem(0x8080, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x65de, gbc.sp());
        EXPECT(0x8082, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8080));
        EXPECT(0x47, gbc.readMem(0x8081));
        // CB 47 0333
        gbc.setState(0x6e40, 0xe320, 0xc7a0, 0xb443, 0x22b5, 0x9098, 0x0, 0x1);
        gbc.writeMem(0x6e40, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xe320, gbc.sp());
        EXPECT(0x6e42, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 47 0335
        gbc.setState(0xc598, 0xc4d4, 0x1310, 0x7320, 0xadce, 0xda85, 0x1, 0x0);
        gbc.writeMem(0xc598, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xc4d4, gbc.sp());
        EXPECT(0xc59a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc598));
        EXPECT(0x47, gbc.readMem(0xc599));
        // CB 47 0336
        gbc.setState(0x263b, 0xb7d0, 0x5360, 0x338a, 0x2484, 0xb637, 0x1, 0x0);
        gbc.writeMem(0x263b, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xb7d0, gbc.sp());
        EXPECT(0x263d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 47 0337
        gbc.setState(0xd510, 0x148, 0x9e10, 0x22f8, 0x44a6, 0x6cf1, 0x0, 0x1);
        gbc.writeMem(0xd510, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x148, gbc.sp());
        EXPECT(0xd512, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd510));
        EXPECT(0x47, gbc.readMem(0xd511));
        // CB 47 0338
        gbc.setState(0xd139, 0xb144, 0xa860, 0x9abd, 0xd898, 0x8402, 0x0, 0x1);
        gbc.writeMem(0xd139, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xb144, gbc.sp());
        EXPECT(0xd13b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd139));
        EXPECT(0x47, gbc.readMem(0xd13a));
        // CB 47 0339
        gbc.setState(0x60ef, 0x7c32, 0xef20, 0x6c77, 0x7296, 0x45dd, 0x0, 0x0);
        gbc.writeMem(0x60ef, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x7c32, gbc.sp());
        EXPECT(0x60f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 47 033A
        gbc.setState(0xdf22, 0xd63e, 0x87a0, 0xaf74, 0xd038, 0x7416, 0x0, 0x1);
        gbc.writeMem(0xdf22, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xd63e, gbc.sp());
        EXPECT(0xdf24, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf22));
        EXPECT(0x47, gbc.readMem(0xdf23));
        // CB 47 033C
        gbc.setState(0xf92, 0x131b, 0xa2c0, 0x50fa, 0xaf2b, 0xc3cb, 0x1, 0x1);
        gbc.writeMem(0xf92, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x131b, gbc.sp());
        EXPECT(0xf94, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 47 033D
        gbc.setState(0x30ad, 0x314f, 0xc8d0, 0x68bd, 0x5d2, 0xccd7, 0x1, 0x0);
        gbc.writeMem(0x30ad, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x314f, gbc.sp());
        EXPECT(0x30af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 47 033E
        gbc.setState(0x7823, 0xa106, 0x85f0, 0xfce3, 0xf926, 0x5fe, 0x1, 0x1);
        gbc.writeMem(0x7823, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xa106, gbc.sp());
        EXPECT(0x7825, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 47 033F
        gbc.setState(0x1ab9, 0xf0ce, 0xcc60, 0x5516, 0x442a, 0x3a27, 0x0, 0x0);
        gbc.writeMem(0x1ab9, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xf0ce, gbc.sp());
        EXPECT(0x1abb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 47 0340
        gbc.setState(0x33f0, 0x2ef5, 0xdfb0, 0x8fa9, 0xf731, 0xfc78, 0x0, 0x1);
        gbc.writeMem(0x33f0, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x2ef5, gbc.sp());
        EXPECT(0x33f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 47 0341
        gbc.setState(0xaa5e, 0xb28c, 0x8f80, 0x8263, 0x587e, 0x8340, 0x0, 0x1);
        gbc.writeMem(0xaa5e, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xb28c, gbc.sp());
        EXPECT(0xaa60, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa5e));
        EXPECT(0x47, gbc.readMem(0xaa5f));
        // CB 47 0342
        gbc.setState(0x5858, 0xe3c8, 0x8290, 0xad0f, 0xcd43, 0xa6b1, 0x1, 0x0);
        gbc.writeMem(0x5858, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xe3c8, gbc.sp());
        EXPECT(0x585a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 47 0343
        gbc.setState(0x55e7, 0xce2b, 0xad60, 0xdb5d, 0xf97a, 0x8f8c, 0x1, 0x0);
        gbc.writeMem(0x55e7, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xce2b, gbc.sp());
        EXPECT(0x55e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 47 0344
        gbc.setState(0x345, 0x3ff3, 0x1990, 0x64b7, 0xbfb1, 0x3f6a, 0x1, 0x1);
        gbc.writeMem(0x345, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x3ff3, gbc.sp());
        EXPECT(0x347, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 47 0345
        gbc.setState(0x42ae, 0x654c, 0xf040, 0x14ba, 0x13bd, 0x2716, 0x0, 0x0);
        gbc.writeMem(0x42ae, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x654c, gbc.sp());
        EXPECT(0x42b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 47 0346
        gbc.setState(0xe8e9, 0x1bae, 0xc9c0, 0x485c, 0x3e49, 0x509f, 0x1, 0x0);
        gbc.writeMem(0xe8e9, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x1bae, gbc.sp());
        EXPECT(0xe8eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe8e9));
        EXPECT(0x47, gbc.readMem(0xe8ea));
        // CB 47 0348
        gbc.setState(0x6e75, 0xe7a8, 0x5530, 0x48d1, 0x452f, 0x8f3f, 0x1, 0x0);
        gbc.writeMem(0x6e75, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xe7a8, gbc.sp());
        EXPECT(0x6e77, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 47 034A
        gbc.setState(0xee31, 0xf1a1, 0x4cb0, 0x289e, 0x1596, 0xb9ab, 0x1, 0x1);
        gbc.writeMem(0xee31, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xf1a1, gbc.sp());
        EXPECT(0xee33, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee31));
        EXPECT(0x47, gbc.readMem(0xee32));
        // CB 47 034B
        gbc.setState(0x3ade, 0x9cbb, 0xa3c0, 0xdabb, 0xa676, 0x3d9b, 0x1, 0x0);
        gbc.writeMem(0x3ade, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x9cbb, gbc.sp());
        EXPECT(0x3ae0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 47 034C
        gbc.setState(0x3c1, 0x4da9, 0x97f0, 0xf6ce, 0x73fa, 0xdb34, 0x1, 0x1);
        gbc.writeMem(0x3c1, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x4da9, gbc.sp());
        EXPECT(0x3c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 47 034D
        gbc.setState(0x5fc5, 0xe48d, 0x3140, 0x92a2, 0x2f92, 0x9d4e, 0x1, 0x1);
        gbc.writeMem(0x5fc5, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xe48d, gbc.sp());
        EXPECT(0x5fc7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 47 034E
        gbc.setState(0x4e04, 0x7741, 0x7b20, 0x5d9, 0x4542, 0xe977, 0x1, 0x0);
        gbc.writeMem(0x4e04, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x7741, gbc.sp());
        EXPECT(0x4e06, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 47 034F
        gbc.setState(0x4b4, 0xc3dc, 0x3c10, 0x953, 0xbea3, 0x194b, 0x0, 0x1);
        gbc.writeMem(0x4b4, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xc3dc, gbc.sp());
        EXPECT(0x4b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 47 0350
        gbc.setState(0x5bd8, 0x9acc, 0x6b90, 0x7e1f, 0x5c50, 0x173a, 0x0, 0x1);
        gbc.writeMem(0x5bd8, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x9acc, gbc.sp());
        EXPECT(0x5bda, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 47 0351
        gbc.setState(0x9aff, 0x7bf9, 0xb6e0, 0x11bd, 0x668d, 0xf1cf, 0x0, 0x0);
        gbc.writeMem(0x9aff, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x7bf9, gbc.sp());
        EXPECT(0x9b01, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9aff));
        EXPECT(0x47, gbc.readMem(0x9b00));
        // CB 47 0352
        gbc.setState(0xaf68, 0xcbba, 0x9880, 0x50a, 0x3262, 0xaf5d, 0x0, 0x1);
        gbc.writeMem(0xaf68, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xcbba, gbc.sp());
        EXPECT(0xaf6a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf68));
        EXPECT(0x47, gbc.readMem(0xaf69));
        // CB 47 0353
        gbc.setState(0xa759, 0xec3, 0x36e0, 0x699a, 0x4f67, 0xc96a, 0x1, 0x0);
        gbc.writeMem(0xa759, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xec3, gbc.sp());
        EXPECT(0xa75b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa759));
        EXPECT(0x47, gbc.readMem(0xa75a));
        // CB 47 0354
        gbc.setState(0xcc15, 0x2c4f, 0xf1a0, 0x781, 0xf93b, 0xe2ee, 0x1, 0x1);
        gbc.writeMem(0xcc15, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x2c4f, gbc.sp());
        EXPECT(0xcc17, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc15));
        EXPECT(0x47, gbc.readMem(0xcc16));
        // CB 47 0355
        gbc.setState(0x8a60, 0xfd7b, 0xca0, 0xfd53, 0x981a, 0xc8b3, 0x0, 0x1);
        gbc.writeMem(0x8a60, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xfd7b, gbc.sp());
        EXPECT(0x8a62, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a60));
        EXPECT(0x47, gbc.readMem(0x8a61));
        // CB 47 0356
        gbc.setState(0x9272, 0x177d, 0xbf80, 0x6ac3, 0x2fa4, 0xd826, 0x0, 0x1);
        gbc.writeMem(0x9272, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x177d, gbc.sp());
        EXPECT(0x9274, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9272));
        EXPECT(0x47, gbc.readMem(0x9273));
        // CB 47 0357
        gbc.setState(0x3444, 0x463b, 0xd5b0, 0x117d, 0xa1ae, 0xc8c2, 0x1, 0x0);
        gbc.writeMem(0x3444, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x463b, gbc.sp());
        EXPECT(0x3446, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 47 0358
        gbc.setState(0xb58b, 0xe683, 0x7f90, 0xb639, 0x6cf1, 0x9516, 0x0, 0x0);
        gbc.writeMem(0xb58b, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xe683, gbc.sp());
        EXPECT(0xb58d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb58b));
        EXPECT(0x47, gbc.readMem(0xb58c));
        // CB 47 0359
        gbc.setState(0xdf94, 0x8965, 0x6c50, 0x698d, 0x2b47, 0xd599, 0x1, 0x0);
        gbc.writeMem(0xdf94, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x8965, gbc.sp());
        EXPECT(0xdf96, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf94));
        EXPECT(0x47, gbc.readMem(0xdf95));
        // CB 47 035A
        gbc.setState(0xd6fa, 0xa375, 0xf450, 0x1d6a, 0x765b, 0xb94e, 0x1, 0x0);
        gbc.writeMem(0xd6fa, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xa375, gbc.sp());
        EXPECT(0xd6fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd6fa));
        EXPECT(0x47, gbc.readMem(0xd6fb));
        // CB 47 035B
        gbc.setState(0x58d, 0xf631, 0xd610, 0xe418, 0x8ce9, 0xca1a, 0x1, 0x1);
        gbc.writeMem(0x58d, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xf631, gbc.sp());
        EXPECT(0x58f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 47 035C
        gbc.setState(0x1c4d, 0xe85, 0xae70, 0x30c6, 0x5569, 0x2500, 0x1, 0x1);
        gbc.writeMem(0x1c4d, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xe85, gbc.sp());
        EXPECT(0x1c4f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 47 035D
        gbc.setState(0xdd6b, 0xabc1, 0x7500, 0x9312, 0x31ca, 0xc435, 0x1, 0x1);
        gbc.writeMem(0xdd6b, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xabc1, gbc.sp());
        EXPECT(0xdd6d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd6b));
        EXPECT(0x47, gbc.readMem(0xdd6c));
        // CB 47 035E
        gbc.setState(0x27a5, 0xdab6, 0x74b0, 0x14e8, 0x52f8, 0xaa18, 0x1, 0x1);
        gbc.writeMem(0x27a5, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xdab6, gbc.sp());
        EXPECT(0x27a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 47 035F
        gbc.setState(0xd2d4, 0x4c47, 0x7a10, 0xe2f2, 0x1bce, 0xeeb6, 0x0, 0x1);
        gbc.writeMem(0xd2d4, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x4c47, gbc.sp());
        EXPECT(0xd2d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd2d4));
        EXPECT(0x47, gbc.readMem(0xd2d5));
        // CB 47 0360
        gbc.setState(0x96fb, 0xfe13, 0xb370, 0x82cd, 0x3192, 0x11c2, 0x0, 0x1);
        gbc.writeMem(0x96fb, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xfe13, gbc.sp());
        EXPECT(0x96fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x96fb));
        EXPECT(0x47, gbc.readMem(0x96fc));
        // CB 47 0361
        gbc.setState(0x7012, 0x15e7, 0x1fd0, 0xad41, 0xa454, 0xd68e, 0x1, 0x1);
        gbc.writeMem(0x7012, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x15e7, gbc.sp());
        EXPECT(0x7014, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 47 0362
        gbc.setState(0x82e9, 0x9e01, 0xd90, 0x5d40, 0xaa0d, 0x954c, 0x1, 0x1);
        gbc.writeMem(0x82e9, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x9e01, gbc.sp());
        EXPECT(0x82eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x82e9));
        EXPECT(0x47, gbc.readMem(0x82ea));
        // CB 47 0363
        gbc.setState(0x3059, 0xdf4a, 0xffe0, 0xeb2f, 0xafa, 0x620e, 0x0, 0x0);
        gbc.writeMem(0x3059, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xdf4a, gbc.sp());
        EXPECT(0x305b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 47 0364
        gbc.setState(0xbada, 0x7d81, 0xa930, 0x9b5e, 0x6318, 0x5761, 0x0, 0x1);
        gbc.writeMem(0xbada, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x7d81, gbc.sp());
        EXPECT(0xbadc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbada));
        EXPECT(0x47, gbc.readMem(0xbadb));
        // CB 47 0365
        gbc.setState(0x2b09, 0x5c2e, 0x4150, 0x1fa9, 0xd2d9, 0x86f0, 0x1, 0x0);
        gbc.writeMem(0x2b09, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x5c2e, gbc.sp());
        EXPECT(0x2b0b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 47 0366
        gbc.setState(0xb04a, 0xd65b, 0x2b30, 0xd822, 0xcf8, 0x9d8f, 0x0, 0x0);
        gbc.writeMem(0xb04a, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xd65b, gbc.sp());
        EXPECT(0xb04c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb04a));
        EXPECT(0x47, gbc.readMem(0xb04b));
        // CB 47 0367
        gbc.setState(0x6811, 0x4640, 0x7a80, 0x9f3e, 0xcf3f, 0x4432, 0x0, 0x0);
        gbc.writeMem(0x6811, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x4640, gbc.sp());
        EXPECT(0x6813, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 47 0368
        gbc.setState(0x4b58, 0x3359, 0x5e80, 0xc97, 0x7fb1, 0x9928, 0x1, 0x0);
        gbc.writeMem(0x4b58, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x3359, gbc.sp());
        EXPECT(0x4b5a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 47 0369
        gbc.setState(0xa064, 0x5751, 0x4b00, 0x4680, 0xb59, 0x8d88, 0x1, 0x0);
        gbc.writeMem(0xa064, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x5751, gbc.sp());
        EXPECT(0xa066, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa064));
        EXPECT(0x47, gbc.readMem(0xa065));
        // CB 47 036A
        gbc.setState(0xa709, 0xf232, 0x11f0, 0xfef8, 0x7e1b, 0xef7d, 0x0, 0x1);
        gbc.writeMem(0xa709, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xf232, gbc.sp());
        EXPECT(0xa70b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa709));
        EXPECT(0x47, gbc.readMem(0xa70a));
        // CB 47 036B
        gbc.setState(0xdf94, 0xe61a, 0xe4c0, 0xb4da, 0xabd2, 0x4be8, 0x0, 0x0);
        gbc.writeMem(0xdf94, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xe61a, gbc.sp());
        EXPECT(0xdf96, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf94));
        EXPECT(0x47, gbc.readMem(0xdf95));
        // CB 47 036C
        gbc.setState(0x8844, 0xb19c, 0x2f40, 0xe7c0, 0x107c, 0x2f0a, 0x0, 0x0);
        gbc.writeMem(0x8844, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xb19c, gbc.sp());
        EXPECT(0x8846, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8844));
        EXPECT(0x47, gbc.readMem(0x8845));
        // CB 47 036D
        gbc.setState(0x4772, 0x7d5e, 0xbb80, 0x82f9, 0x190f, 0x17a6, 0x0, 0x0);
        gbc.writeMem(0x4772, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x7d5e, gbc.sp());
        EXPECT(0x4774, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 47 036E
        gbc.setState(0xef22, 0xad3, 0x8730, 0xbd34, 0x3531, 0x73bf, 0x0, 0x1);
        gbc.writeMem(0xef22, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xad3, gbc.sp());
        EXPECT(0xef24, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef22));
        EXPECT(0x47, gbc.readMem(0xef23));
        // CB 47 036F
        gbc.setState(0x9ed7, 0x843c, 0x3a0, 0xe8e6, 0x3ab4, 0x343a, 0x1, 0x1);
        gbc.writeMem(0x9ed7, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x843c, gbc.sp());
        EXPECT(0x9ed9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ed7));
        EXPECT(0x47, gbc.readMem(0x9ed8));
        // CB 47 0370
        gbc.setState(0x6176, 0x6ec7, 0xcca0, 0x4b84, 0x5097, 0xf3cb, 0x0, 0x1);
        gbc.writeMem(0x6176, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x6ec7, gbc.sp());
        EXPECT(0x6178, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 47 0371
        gbc.setState(0xd426, 0x1fa8, 0xf3e0, 0xfae7, 0xcb0a, 0x9861, 0x0, 0x0);
        gbc.writeMem(0xd426, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x1fa8, gbc.sp());
        EXPECT(0xd428, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd426));
        EXPECT(0x47, gbc.readMem(0xd427));
        // CB 47 0372
        gbc.setState(0x9ff3, 0x4516, 0x6270, 0x88e8, 0xae30, 0xa8dc, 0x1, 0x0);
        gbc.writeMem(0x9ff3, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x4516, gbc.sp());
        EXPECT(0x9ff5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ff3));
        EXPECT(0x47, gbc.readMem(0x9ff4));
        // CB 47 0373
        gbc.setState(0x2f79, 0x81ac, 0xaec0, 0xd040, 0xf001, 0x6326, 0x1, 0x1);
        gbc.writeMem(0x2f79, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x81ac, gbc.sp());
        EXPECT(0x2f7b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 47 0374
        gbc.setState(0x4fe7, 0x3bea, 0xbc10, 0x14b4, 0xec9, 0x797c, 0x1, 0x1);
        gbc.writeMem(0x4fe7, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x3bea, gbc.sp());
        EXPECT(0x4fe9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 47 0376
        gbc.setState(0xbb0e, 0x9fda, 0xe1a0, 0xfdc4, 0x7668, 0xe6f9, 0x1, 0x1);
        gbc.writeMem(0xbb0e, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x9fda, gbc.sp());
        EXPECT(0xbb10, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb0e));
        EXPECT(0x47, gbc.readMem(0xbb0f));
        // CB 47 0377
        gbc.setState(0xde0a, 0xa427, 0xf000, 0x768f, 0xd859, 0x52b2, 0x0, 0x0);
        gbc.writeMem(0xde0a, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xa427, gbc.sp());
        EXPECT(0xde0c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde0a));
        EXPECT(0x47, gbc.readMem(0xde0b));
        // CB 47 0378
        gbc.setState(0xe0c0, 0x9cf0, 0xd230, 0xdae0, 0xba65, 0x10be, 0x0, 0x1);
        gbc.writeMem(0xe0c0, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x9cf0, gbc.sp());
        EXPECT(0xe0c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe0c0));
        EXPECT(0x47, gbc.readMem(0xe0c1));
        // CB 47 0379
        gbc.setState(0x494b, 0x8c25, 0xcb00, 0x48a6, 0x99c5, 0x73cd, 0x1, 0x0);
        gbc.writeMem(0x494b, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x8c25, gbc.sp());
        EXPECT(0x494d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 47 037A
        gbc.setState(0x5b19, 0x7c55, 0xa610, 0xea78, 0xf949, 0x91da, 0x0, 0x0);
        gbc.writeMem(0x5b19, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x7c55, gbc.sp());
        EXPECT(0x5b1b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 47 037B
        gbc.setState(0x869, 0x5f16, 0x9440, 0x43ce, 0x8783, 0xcf8b, 0x0, 0x1);
        gbc.writeMem(0x869, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x5f16, gbc.sp());
        EXPECT(0x86b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 47 037D
        gbc.setState(0x614, 0x6e1d, 0xb680, 0x3962, 0xa4f5, 0x7175, 0x0, 0x0);
        gbc.writeMem(0x614, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x6e1d, gbc.sp());
        EXPECT(0x616, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 47 037E
        gbc.setState(0x4724, 0xfc22, 0x3df0, 0x45c, 0x1ac, 0xb8a6, 0x1, 0x0);
        gbc.writeMem(0x4724, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xfc22, gbc.sp());
        EXPECT(0x4726, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 47 037F
        gbc.setState(0xa03d, 0x79b3, 0x4660, 0x683f, 0x2699, 0xc594, 0x1, 0x1);
        gbc.writeMem(0xa03d, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x79b3, gbc.sp());
        EXPECT(0xa03f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa03d));
        EXPECT(0x47, gbc.readMem(0xa03e));
        // CB 47 0380
        gbc.setState(0x1f51, 0x583b, 0x7510, 0x937a, 0xf0c9, 0xe675, 0x1, 0x0);
        gbc.writeMem(0x1f51, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x583b, gbc.sp());
        EXPECT(0x1f53, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 47 0381
        gbc.setState(0x7cb4, 0x884c, 0xae30, 0xb2a2, 0x3296, 0x5d08, 0x1, 0x0);
        gbc.writeMem(0x7cb4, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x884c, gbc.sp());
        EXPECT(0x7cb6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 47 0383
        gbc.setState(0x67b5, 0xcecc, 0xf970, 0x870b, 0x51f, 0xdcb7, 0x1, 0x1);
        gbc.writeMem(0x67b5, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xcecc, gbc.sp());
        EXPECT(0x67b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 47 0384
        gbc.setState(0x1b5d, 0xbdfd, 0x4010, 0xce56, 0x8035, 0x53da, 0x0, 0x0);
        gbc.writeMem(0x1b5d, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xbdfd, gbc.sp());
        EXPECT(0x1b5f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 47 0385
        gbc.setState(0xac5f, 0x6651, 0xa50, 0xccea, 0x8890, 0xfaef, 0x0, 0x1);
        gbc.writeMem(0xac5f, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x6651, gbc.sp());
        EXPECT(0xac61, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac5f));
        EXPECT(0x47, gbc.readMem(0xac60));
        // CB 47 0386
        gbc.setState(0xa95e, 0x7c97, 0x4350, 0xe909, 0x7b5d, 0x296e, 0x1, 0x1);
        gbc.writeMem(0xa95e, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x7c97, gbc.sp());
        EXPECT(0xa960, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa95e));
        EXPECT(0x47, gbc.readMem(0xa95f));
        // CB 47 0387
        gbc.setState(0x79e6, 0x641b, 0xbf10, 0x6f95, 0x934d, 0x9352, 0x0, 0x0);
        gbc.writeMem(0x79e6, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x641b, gbc.sp());
        EXPECT(0x79e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 47 0388
        gbc.setState(0xe3da, 0xad3c, 0xb420, 0xd560, 0xda9b, 0xb990, 0x0, 0x1);
        gbc.writeMem(0xe3da, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xad3c, gbc.sp());
        EXPECT(0xe3dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe3da));
        EXPECT(0x47, gbc.readMem(0xe3db));
        // CB 47 0389
        gbc.setState(0xbfb5, 0xc679, 0x86a0, 0x4dc8, 0x6455, 0x84b6, 0x0, 0x0);
        gbc.writeMem(0xbfb5, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xc679, gbc.sp());
        EXPECT(0xbfb7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbfb5));
        EXPECT(0x47, gbc.readMem(0xbfb6));
        // CB 47 038A
        gbc.setState(0x998e, 0x5024, 0xc590, 0x3522, 0x66f1, 0x4fd8, 0x0, 0x1);
        gbc.writeMem(0x998e, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x5024, gbc.sp());
        EXPECT(0x9990, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x998e));
        EXPECT(0x47, gbc.readMem(0x998f));
        // CB 47 038B
        gbc.setState(0x94b, 0xd3ed, 0x46b0, 0xfe74, 0xc2a8, 0xf03e, 0x1, 0x1);
        gbc.writeMem(0x94b, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xd3ed, gbc.sp());
        EXPECT(0x94d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 47 038C
        gbc.setState(0x759f, 0xc918, 0x6370, 0x4762, 0x6f0, 0xb798, 0x0, 0x0);
        gbc.writeMem(0x759f, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xc918, gbc.sp());
        EXPECT(0x75a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 47 038D
        gbc.setState(0x2a31, 0xaa66, 0xedc0, 0xfdcf, 0xeea4, 0xce9c, 0x0, 0x1);
        gbc.writeMem(0x2a31, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xaa66, gbc.sp());
        EXPECT(0x2a33, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 47 038E
        gbc.setState(0x9fce, 0x6225, 0x1800, 0xdb3a, 0x6acf, 0xaf62, 0x0, 0x0);
        gbc.writeMem(0x9fce, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x6225, gbc.sp());
        EXPECT(0x9fd0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9fce));
        EXPECT(0x47, gbc.readMem(0x9fcf));
        // CB 47 038F
        gbc.setState(0x6c3a, 0xcccf, 0x6f40, 0xab29, 0x7d13, 0xd18d, 0x0, 0x1);
        gbc.writeMem(0x6c3a, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xcccf, gbc.sp());
        EXPECT(0x6c3c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 47 0390
        gbc.setState(0x1953, 0x89ac, 0x1110, 0xbfd2, 0xca0c, 0xba5f, 0x0, 0x1);
        gbc.writeMem(0x1953, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x89ac, gbc.sp());
        EXPECT(0x1955, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 47 0391
        gbc.setState(0x63d6, 0x9f65, 0x7e60, 0x2554, 0xf606, 0x9146, 0x1, 0x0);
        gbc.writeMem(0x63d6, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x9f65, gbc.sp());
        EXPECT(0x63d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 47 0392
        gbc.setState(0x1f84, 0x8803, 0xdd80, 0x2b70, 0xb965, 0x9451, 0x1, 0x0);
        gbc.writeMem(0x1f84, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x8803, gbc.sp());
        EXPECT(0x1f86, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 47 0393
        gbc.setState(0xac5f, 0x23fb, 0x3a40, 0x500, 0xbda8, 0x1b7b, 0x1, 0x0);
        gbc.writeMem(0xac5f, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x23fb, gbc.sp());
        EXPECT(0xac61, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac5f));
        EXPECT(0x47, gbc.readMem(0xac60));
        // CB 47 0394
        gbc.setState(0xc104, 0xca3b, 0xbb50, 0x339f, 0x7eb1, 0xd852, 0x1, 0x1);
        gbc.writeMem(0xc104, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xca3b, gbc.sp());
        EXPECT(0xc106, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc104));
        EXPECT(0x47, gbc.readMem(0xc105));
        // CB 47 0395
        gbc.setState(0x885d, 0x220f, 0x90a0, 0x28c4, 0x9c86, 0x8386, 0x0, 0x0);
        gbc.writeMem(0x885d, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x220f, gbc.sp());
        EXPECT(0x885f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x885d));
        EXPECT(0x47, gbc.readMem(0x885e));
        // CB 47 0396
        gbc.setState(0x766e, 0x9780, 0xc400, 0x3dd3, 0xa28c, 0x83d3, 0x0, 0x0);
        gbc.writeMem(0x766e, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x9780, gbc.sp());
        EXPECT(0x7670, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 47 0397
        gbc.setState(0x644b, 0x4fa1, 0xb640, 0x17a8, 0xfc1, 0x1292, 0x1, 0x1);
        gbc.writeMem(0x644b, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x4fa1, gbc.sp());
        EXPECT(0x644d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 47 0398
        gbc.setState(0xa1e2, 0x70b2, 0x4c20, 0xbd13, 0xe0d8, 0x7430, 0x1, 0x1);
        gbc.writeMem(0xa1e2, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x70b2, gbc.sp());
        EXPECT(0xa1e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa1e2));
        EXPECT(0x47, gbc.readMem(0xa1e3));
        // CB 47 0399
        gbc.setState(0xdf7d, 0xd154, 0x9480, 0x4f84, 0xd965, 0x5697, 0x0, 0x1);
        gbc.writeMem(0xdf7d, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xd154, gbc.sp());
        EXPECT(0xdf7f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf7d));
        EXPECT(0x47, gbc.readMem(0xdf7e));
        // CB 47 039A
        gbc.setState(0xbb0f, 0x1b22, 0x36d0, 0x3422, 0x1d0a, 0x58da, 0x1, 0x1);
        gbc.writeMem(0xbb0f, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x1b22, gbc.sp());
        EXPECT(0xbb11, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb0f));
        EXPECT(0x47, gbc.readMem(0xbb10));
        // CB 47 039B
        gbc.setState(0x270c, 0xddcf, 0x9570, 0x2f4c, 0x9292, 0x8e6f, 0x1, 0x0);
        gbc.writeMem(0x270c, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xddcf, gbc.sp());
        EXPECT(0x270e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 47 039C
        gbc.setState(0x7541, 0x7847, 0xc790, 0xe0d3, 0xb9b8, 0x9424, 0x0, 0x0);
        gbc.writeMem(0x7541, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x7847, gbc.sp());
        EXPECT(0x7543, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 47 039D
        gbc.setState(0x9a45, 0x8c62, 0x6700, 0xc03f, 0x3783, 0x4ced, 0x0, 0x0);
        gbc.writeMem(0x9a45, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x8c62, gbc.sp());
        EXPECT(0x9a47, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a45));
        EXPECT(0x47, gbc.readMem(0x9a46));
        // CB 47 039E
        gbc.setState(0x3c97, 0x6cd4, 0x9730, 0x15c5, 0xf3f8, 0x89e9, 0x0, 0x1);
        gbc.writeMem(0x3c97, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x6cd4, gbc.sp());
        EXPECT(0x3c99, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 47 039F
        gbc.setState(0xdbf9, 0x99dd, 0xf240, 0x15ec, 0x9976, 0xee12, 0x1, 0x1);
        gbc.writeMem(0xdbf9, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x99dd, gbc.sp());
        EXPECT(0xdbfb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdbf9));
        EXPECT(0x47, gbc.readMem(0xdbfa));
        // CB 47 03A0
        gbc.setState(0xc328, 0xb563, 0x42d0, 0x28e9, 0xdc2d, 0xfcb4, 0x1, 0x0);
        gbc.writeMem(0xc328, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xb563, gbc.sp());
        EXPECT(0xc32a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc328));
        EXPECT(0x47, gbc.readMem(0xc329));
        // CB 47 03A1
        gbc.setState(0x8470, 0xf8b6, 0x3490, 0xb487, 0x1cc7, 0x6400, 0x0, 0x1);
        gbc.writeMem(0x8470, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xf8b6, gbc.sp());
        EXPECT(0x8472, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8470));
        EXPECT(0x47, gbc.readMem(0x8471));
        // CB 47 03A2
        gbc.setState(0x5041, 0x31f, 0x1bf0, 0xd35c, 0xd227, 0xc461, 0x1, 0x1);
        gbc.writeMem(0x5041, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x31f, gbc.sp());
        EXPECT(0x5043, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 47 03A3
        gbc.setState(0x8528, 0x41dd, 0x9d90, 0xa988, 0x6c1b, 0x788, 0x0, 0x0);
        gbc.writeMem(0x8528, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x41dd, gbc.sp());
        EXPECT(0x852a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8528));
        EXPECT(0x47, gbc.readMem(0x8529));
        // CB 47 03A4
        gbc.setState(0xe3bd, 0x1880, 0x310, 0x5a4d, 0xb302, 0xf0b4, 0x0, 0x0);
        gbc.writeMem(0xe3bd, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x1880, gbc.sp());
        EXPECT(0xe3bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe3bd));
        EXPECT(0x47, gbc.readMem(0xe3be));
        // CB 47 03A5
        gbc.setState(0x6445, 0x63b0, 0x8e90, 0xd667, 0x3cf4, 0xff0c, 0x0, 0x0);
        gbc.writeMem(0x6445, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x63b0, gbc.sp());
        EXPECT(0x6447, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 47 03A6
        gbc.setState(0x17cb, 0x8804, 0x25b0, 0xab3b, 0xa25d, 0xfd75, 0x1, 0x1);
        gbc.writeMem(0x17cb, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x8804, gbc.sp());
        EXPECT(0x17cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 47 03A7
        gbc.setState(0xe0c1, 0xf5f4, 0x17c0, 0x133c, 0xd84e, 0x3829, 0x0, 0x1);
        gbc.writeMem(0xe0c1, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xf5f4, gbc.sp());
        EXPECT(0xe0c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe0c1));
        EXPECT(0x47, gbc.readMem(0xe0c2));
        // CB 47 03A8
        gbc.setState(0xb5f1, 0xdeb6, 0x5bc0, 0xa550, 0x18e7, 0x93e8, 0x1, 0x1);
        gbc.writeMem(0xb5f1, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xdeb6, gbc.sp());
        EXPECT(0xb5f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb5f1));
        EXPECT(0x47, gbc.readMem(0xb5f2));
        // CB 47 03A9
        gbc.setState(0xb8ac, 0x9367, 0xb110, 0x4e75, 0x929f, 0x53da, 0x0, 0x0);
        gbc.writeMem(0xb8ac, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x9367, gbc.sp());
        EXPECT(0xb8ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb8ac));
        EXPECT(0x47, gbc.readMem(0xb8ad));
        // CB 47 03AA
        gbc.setState(0xdd03, 0xc9d2, 0x620, 0xdc69, 0x4742, 0xa7cd, 0x0, 0x0);
        gbc.writeMem(0xdd03, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xc9d2, gbc.sp());
        EXPECT(0xdd05, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd03));
        EXPECT(0x47, gbc.readMem(0xdd04));
        // CB 47 03AB
        gbc.setState(0x2d64, 0x382, 0xf090, 0xc6a7, 0xc353, 0x5157, 0x0, 0x0);
        gbc.writeMem(0x2d64, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x382, gbc.sp());
        EXPECT(0x2d66, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 47 03AC
        gbc.setState(0x3e8e, 0x199, 0x24d0, 0x847a, 0xe73, 0x8d9e, 0x1, 0x1);
        gbc.writeMem(0x3e8e, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x199, gbc.sp());
        EXPECT(0x3e90, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 47 03AD
        gbc.setState(0xb34d, 0x8528, 0x34c0, 0x9046, 0xf10b, 0x39fb, 0x0, 0x0);
        gbc.writeMem(0xb34d, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x8528, gbc.sp());
        EXPECT(0xb34f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb34d));
        EXPECT(0x47, gbc.readMem(0xb34e));
        // CB 47 03AE
        gbc.setState(0xd1df, 0x22b, 0x29e0, 0xdd17, 0x460d, 0x6e86, 0x1, 0x0);
        gbc.writeMem(0xd1df, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x22b, gbc.sp());
        EXPECT(0xd1e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd1df));
        EXPECT(0x47, gbc.readMem(0xd1e0));
        // CB 47 03AF
        gbc.setState(0x925d, 0xb874, 0x8820, 0x150a, 0xb178, 0x2f4, 0x1, 0x0);
        gbc.writeMem(0x925d, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xb874, gbc.sp());
        EXPECT(0x925f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x925d));
        EXPECT(0x47, gbc.readMem(0x925e));
        // CB 47 03B0
        gbc.setState(0x148a, 0xc849, 0x8540, 0x7362, 0x2774, 0x2945, 0x0, 0x1);
        gbc.writeMem(0x148a, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xc849, gbc.sp());
        EXPECT(0x148c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 47 03B1
        gbc.setState(0x4214, 0x6b73, 0x8dc0, 0x72fb, 0x469d, 0xf59b, 0x1, 0x1);
        gbc.writeMem(0x4214, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x6b73, gbc.sp());
        EXPECT(0x4216, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 47 03B2
        gbc.setState(0xb25a, 0x5d6, 0xf400, 0xc072, 0xe3e, 0xb550, 0x1, 0x1);
        gbc.writeMem(0xb25a, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x5d6, gbc.sp());
        EXPECT(0xb25c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb25a));
        EXPECT(0x47, gbc.readMem(0xb25b));
        // CB 47 03B4
        gbc.setState(0xb9bb, 0x2cb1, 0xa050, 0xfb0c, 0xf273, 0x2655, 0x1, 0x0);
        gbc.writeMem(0xb9bb, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x2cb1, gbc.sp());
        EXPECT(0xb9bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb9bb));
        EXPECT(0x47, gbc.readMem(0xb9bc));
        // CB 47 03B5
        gbc.setState(0xdea5, 0x7778, 0xa190, 0x1d73, 0x2e38, 0x9c15, 0x1, 0x1);
        gbc.writeMem(0xdea5, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x7778, gbc.sp());
        EXPECT(0xdea7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdea5));
        EXPECT(0x47, gbc.readMem(0xdea6));
        // CB 47 03B6
        gbc.setState(0xc3c9, 0x7bbc, 0x7100, 0x5e63, 0xfae8, 0x3a34, 0x0, 0x1);
        gbc.writeMem(0xc3c9, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x7bbc, gbc.sp());
        EXPECT(0xc3cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc3c9));
        EXPECT(0x47, gbc.readMem(0xc3ca));
        // CB 47 03B7
        gbc.setState(0xa8fa, 0x1758, 0x69f0, 0x965, 0x56c2, 0xf05e, 0x0, 0x1);
        gbc.writeMem(0xa8fa, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x1758, gbc.sp());
        EXPECT(0xa8fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa8fa));
        EXPECT(0x47, gbc.readMem(0xa8fb));
        // CB 47 03B8
        gbc.setState(0x1105, 0xff3a, 0x5090, 0xc85b, 0x218d, 0x6c20, 0x1, 0x0);
        gbc.writeMem(0x1105, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xff3a, gbc.sp());
        EXPECT(0x1107, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 47 03B9
        gbc.setState(0x4d10, 0xe8d0, 0xdf10, 0x8cc0, 0x3367, 0x5fd3, 0x0, 0x0);
        gbc.writeMem(0x4d10, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xe8d0, gbc.sp());
        EXPECT(0x4d12, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 47 03BA
        gbc.setState(0xee75, 0xd259, 0xb960, 0xcf32, 0x8f4d, 0x29ce, 0x1, 0x0);
        gbc.writeMem(0xee75, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xd259, gbc.sp());
        EXPECT(0xee77, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee75));
        EXPECT(0x47, gbc.readMem(0xee76));
        // CB 47 03BB
        gbc.setState(0x475d, 0x5a9c, 0xb8b0, 0xc8e8, 0x5781, 0xf454, 0x0, 0x1);
        gbc.writeMem(0x475d, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x5a9c, gbc.sp());
        EXPECT(0x475f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 47 03BC
        gbc.setState(0x3189, 0x710f, 0x8810, 0x766a, 0x74e3, 0xfcbe, 0x1, 0x0);
        gbc.writeMem(0x3189, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x710f, gbc.sp());
        EXPECT(0x318b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 47 03BD
        gbc.setState(0x2b40, 0x3800, 0x8e10, 0x426, 0x72b8, 0xa918, 0x0, 0x0);
        gbc.writeMem(0x2b40, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x3800, gbc.sp());
        EXPECT(0x2b42, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 47 03BE
        gbc.setState(0x551f, 0x9516, 0x64c0, 0x7ddb, 0x62f1, 0x885a, 0x1, 0x0);
        gbc.writeMem(0x551f, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x9516, gbc.sp());
        EXPECT(0x5521, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 47 03BF
        gbc.setState(0x6ac8, 0x26c4, 0x4e90, 0xe2c2, 0xdf7, 0x9034, 0x1, 0x0);
        gbc.writeMem(0x6ac8, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x26c4, gbc.sp());
        EXPECT(0x6aca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 47 03C0
        gbc.setState(0x373e, 0xedc0, 0x83d0, 0x33b9, 0x6bf7, 0x490e, 0x1, 0x1);
        gbc.writeMem(0x373e, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xedc0, gbc.sp());
        EXPECT(0x3740, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 47 03C1
        gbc.setState(0xc79f, 0xa50d, 0x4cb0, 0x6737, 0x17a, 0x9d53, 0x1, 0x1);
        gbc.writeMem(0xc79f, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xa50d, gbc.sp());
        EXPECT(0xc7a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc79f));
        EXPECT(0x47, gbc.readMem(0xc7a0));
        // CB 47 03C3
        gbc.setState(0x7cd7, 0x13e0, 0xc810, 0xa0eb, 0x334, 0x1c86, 0x0, 0x1);
        gbc.writeMem(0x7cd7, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x13e0, gbc.sp());
        EXPECT(0x7cd9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 47 03C5
        gbc.setState(0xed2e, 0xd255, 0x12b0, 0x13ad, 0x51f4, 0xb829, 0x0, 0x0);
        gbc.writeMem(0xed2e, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xd255, gbc.sp());
        EXPECT(0xed30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed2e));
        EXPECT(0x47, gbc.readMem(0xed2f));
        // CB 47 03C6
        gbc.setState(0x1bb0, 0xaf0, 0xde80, 0x89f3, 0xc07f, 0x3617, 0x1, 0x1);
        gbc.writeMem(0x1bb0, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xaf0, gbc.sp());
        EXPECT(0x1bb2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 47 03C7
        gbc.setState(0x8f24, 0x6ce0, 0xdf40, 0x6b8b, 0x734e, 0xb1f, 0x1, 0x0);
        gbc.writeMem(0x8f24, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x6ce0, gbc.sp());
        EXPECT(0x8f26, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f24));
        EXPECT(0x47, gbc.readMem(0x8f25));
        // CB 47 03C8
        gbc.setState(0x52cc, 0x5d02, 0x3580, 0x7a1b, 0x9e91, 0x7157, 0x1, 0x0);
        gbc.writeMem(0x52cc, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x5d02, gbc.sp());
        EXPECT(0x52ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 47 03C9
        gbc.setState(0xad7e, 0xc43c, 0xba30, 0x2b3d, 0xe8dc, 0x9771, 0x1, 0x1);
        gbc.writeMem(0xad7e, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xc43c, gbc.sp());
        EXPECT(0xad80, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad7e));
        EXPECT(0x47, gbc.readMem(0xad7f));
        // CB 47 03CB
        gbc.setState(0xded8, 0xfb5d, 0x4fd0, 0x39bd, 0x6bf0, 0x4ae9, 0x0, 0x1);
        gbc.writeMem(0xded8, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xfb5d, gbc.sp());
        EXPECT(0xdeda, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xded8));
        EXPECT(0x47, gbc.readMem(0xded9));
        // CB 47 03CC
        gbc.setState(0x5dd1, 0xecb5, 0x9410, 0x8529, 0x9487, 0x9f65, 0x1, 0x1);
        gbc.writeMem(0x5dd1, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xecb5, gbc.sp());
        EXPECT(0x5dd3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 47 03CE
        gbc.setState(0x31c1, 0xae7c, 0x2930, 0x9d8f, 0x8a1b, 0x68ec, 0x0, 0x1);
        gbc.writeMem(0x31c1, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xae7c, gbc.sp());
        EXPECT(0x31c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 47 03CF
        gbc.setState(0x7105, 0xc9c8, 0x44a0, 0xf912, 0x8e0f, 0xfe90, 0x1, 0x0);
        gbc.writeMem(0x7105, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xc9c8, gbc.sp());
        EXPECT(0x7107, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 47 03D0
        gbc.setState(0x500b, 0xed15, 0x9a00, 0x5ef6, 0x79a8, 0x20f4, 0x1, 0x0);
        gbc.writeMem(0x500b, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xed15, gbc.sp());
        EXPECT(0x500d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 47 03D2
        gbc.setState(0xcf0d, 0xe4f8, 0xde80, 0xad6a, 0x9c51, 0x7195, 0x0, 0x0);
        gbc.writeMem(0xcf0d, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xe4f8, gbc.sp());
        EXPECT(0xcf0f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf0d));
        EXPECT(0x47, gbc.readMem(0xcf0e));
        // CB 47 03D3
        gbc.setState(0xb9dd, 0x11dd, 0x1760, 0xa477, 0x9795, 0xd73d, 0x1, 0x1);
        gbc.writeMem(0xb9dd, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x11dd, gbc.sp());
        EXPECT(0xb9df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb9dd));
        EXPECT(0x47, gbc.readMem(0xb9de));
        // CB 47 03D4
        gbc.setState(0x2b58, 0xdf7e, 0x83b0, 0xa1a5, 0xe897, 0x8f83, 0x0, 0x1);
        gbc.writeMem(0x2b58, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xdf7e, gbc.sp());
        EXPECT(0x2b5a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 47 03D6
        gbc.setState(0x6ef0, 0x767, 0x6d10, 0x9e33, 0x74c5, 0x9797, 0x1, 0x1);
        gbc.writeMem(0x6ef0, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x767, gbc.sp());
        EXPECT(0x6ef2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 47 03D7
        gbc.setState(0x734d, 0x9e31, 0x3700, 0x40ab, 0x689e, 0x8915, 0x0, 0x0);
        gbc.writeMem(0x734d, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x9e31, gbc.sp());
        EXPECT(0x734f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 47 03D8
        gbc.setState(0xb3ae, 0xb519, 0xea20, 0x21eb, 0xf655, 0x4c15, 0x1, 0x1);
        gbc.writeMem(0xb3ae, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xb519, gbc.sp());
        EXPECT(0xb3b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb3ae));
        EXPECT(0x47, gbc.readMem(0xb3af));
        // CB 47 03D9
        gbc.setState(0x2265, 0x77a3, 0xcf90, 0xa776, 0xd17, 0xd759, 0x1, 0x1);
        gbc.writeMem(0x2265, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x77a3, gbc.sp());
        EXPECT(0x2267, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 47 03DA
        gbc.setState(0x3084, 0x98aa, 0xa210, 0x6720, 0xbef5, 0x1473, 0x0, 0x0);
        gbc.writeMem(0x3084, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x98aa, gbc.sp());
        EXPECT(0x3086, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 47 03DB
        gbc.setState(0x3d0c, 0x9036, 0xb750, 0x8460, 0x5368, 0x69f3, 0x0, 0x1);
        gbc.writeMem(0x3d0c, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x9036, gbc.sp());
        EXPECT(0x3d0e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 47 03DC
        gbc.setState(0xb9b0, 0xdda6, 0x44d0, 0xdfc0, 0xf3f8, 0x10ac, 0x1, 0x1);
        gbc.writeMem(0xb9b0, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xdda6, gbc.sp());
        EXPECT(0xb9b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb9b0));
        EXPECT(0x47, gbc.readMem(0xb9b1));
        // CB 47 03DD
        gbc.setState(0xd76, 0xdcaf, 0xa7d0, 0x6af2, 0xda74, 0x454f, 0x1, 0x0);
        gbc.writeMem(0xd76, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xdcaf, gbc.sp());
        EXPECT(0xd78, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 47 03DE
        gbc.setState(0xc9e7, 0xe5fa, 0xe2e0, 0xd0d8, 0x5cd1, 0x6f15, 0x1, 0x0);
        gbc.writeMem(0xc9e7, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xe5fa, gbc.sp());
        EXPECT(0xc9e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc9e7));
        EXPECT(0x47, gbc.readMem(0xc9e8));
        // CB 47 03DF
        gbc.setState(0xd9f9, 0x8c72, 0x940, 0xf80f, 0xe0a2, 0x4cfc, 0x1, 0x0);
        gbc.writeMem(0xd9f9, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x8c72, gbc.sp());
        EXPECT(0xd9fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd9f9));
        EXPECT(0x47, gbc.readMem(0xd9fa));
        // CB 47 03E0
        gbc.setState(0x5f65, 0xd1a, 0x600, 0xd831, 0x73d8, 0x969, 0x1, 0x0);
        gbc.writeMem(0x5f65, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xd1a, gbc.sp());
        EXPECT(0x5f67, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 47 03E1
        gbc.setState(0xa814, 0x8e28, 0x3d70, 0xc769, 0xdef3, 0x8d8c, 0x1, 0x0);
        gbc.writeMem(0xa814, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x8e28, gbc.sp());
        EXPECT(0xa816, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa814));
        EXPECT(0x47, gbc.readMem(0xa815));
        // CB 47 03E2
        gbc.setState(0x1733, 0x800a, 0x3120, 0xc0ab, 0x3063, 0xe818, 0x1, 0x0);
        gbc.writeMem(0x1733, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x800a, gbc.sp());
        EXPECT(0x1735, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 47 03E3
        gbc.setState(0x3220, 0x2599, 0x64a0, 0x482, 0x2654, 0x9e4f, 0x0, 0x0);
        gbc.writeMem(0x3220, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x2599, gbc.sp());
        EXPECT(0x3222, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 47 03E4
        gbc.setState(0x3246, 0xa19d, 0x1a20, 0xc4ea, 0x80d3, 0x1513, 0x1, 0x1);
        gbc.writeMem(0x3246, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xa19d, gbc.sp());
        EXPECT(0x3248, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 47 03E5
        gbc.setState(0x709, 0x1c20, 0x5200, 0xf5f2, 0x2970, 0xc449, 0x0, 0x0);
        gbc.writeMem(0x709, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x1c20, gbc.sp());
        EXPECT(0x70b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 47 03E6
        gbc.setState(0x36ce, 0x2916, 0x1890, 0x8198, 0xd9bc, 0xcd3c, 0x0, 0x1);
        gbc.writeMem(0x36ce, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x2916, gbc.sp());
        EXPECT(0x36d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 47 03E7
        gbc.setState(0xaa24, 0x703c, 0x30, 0x84f6, 0x6b90, 0x3eaa, 0x1, 0x1);
        gbc.writeMem(0xaa24, { 0xcb, 0x47 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x703c, gbc.sp());
        EXPECT(0xaa26, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa24));
        EXPECT(0x47, gbc.readMem(0xaa25));
    }
