#include "../gbctests_insns.h"
#if (defined GBCEMU_INSNS_TESTS_ALL) || (defined GBCEMU_INSNS_TESTS_58)
#include "../gbctests.h"

namespace rckid::gbcemu {

    TEST(gbcemu, opcode_58) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // 58 0000
        gbc.setState(0xb36b, 0x4b96, 0x97b0, 0xfb05, 0xcc38, 0x5ca1, 0x1, 0x1);
        gbc.writeMem(0xb36b, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x4b96);
        EXPECT(gbc.pc(), 0xb36c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb36b), 0x58);
        // 58 0001
        gbc.setState(0x36da, 0xb73, 0x1830, 0xd3db, 0xe08a, 0x9b5, 0x0, 0x1);
        gbc.writeMem(0x36da, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0xb73);
        EXPECT(gbc.pc(), 0x36db);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 58 0003
        gbc.setState(0xd362, 0x2433, 0x44f0, 0x153, 0xea05, 0x9d05, 0x0, 0x0);
        gbc.writeMem(0xd362, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x2433);
        EXPECT(gbc.pc(), 0xd363);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd362), 0x58);
        // 58 0004
        gbc.setState(0x1564, 0xbbcc, 0x7800, 0x98e5, 0xe67c, 0x5fe9, 0x0, 0x1);
        gbc.writeMem(0x1564, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0xbbcc);
        EXPECT(gbc.pc(), 0x1565);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 58 0005
        gbc.setState(0x9345, 0x3cdd, 0x4fa0, 0x358a, 0x1f9f, 0xee5a, 0x1, 0x0);
        gbc.writeMem(0x9345, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x3cdd);
        EXPECT(gbc.pc(), 0x9346);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9345), 0x58);
        // 58 0006
        gbc.setState(0x1315, 0x3b50, 0xb00, 0x6a86, 0x8a1e, 0xcd2a, 0x0, 0x1);
        gbc.writeMem(0x1315, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x3b50);
        EXPECT(gbc.pc(), 0x1316);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 58 0007
        gbc.setState(0x9821, 0x5d5b, 0x6f00, 0xa4e4, 0xca58, 0x450d, 0x0, 0x1);
        gbc.writeMem(0x9821, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x5d5b);
        EXPECT(gbc.pc(), 0x9822);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9821), 0x58);
        // 58 0008
        gbc.setState(0xd3ee, 0xe381, 0x9120, 0xa36c, 0x126a, 0x60cd, 0x1, 0x0);
        gbc.writeMem(0xd3ee, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0xe381);
        EXPECT(gbc.pc(), 0xd3ef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd3ee), 0x58);
        // 58 0009
        gbc.setState(0xebbc, 0x9403, 0x3b10, 0x4474, 0x6d82, 0x561f, 0x1, 0x0);
        gbc.writeMem(0xebbc, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x9403);
        EXPECT(gbc.pc(), 0xebbd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xebbc), 0x58);
        // 58 000A
        gbc.setState(0xdaf4, 0x1383, 0xb180, 0x458, 0x924f, 0x1805, 0x0, 0x1);
        gbc.writeMem(0xdaf4, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x1383);
        EXPECT(gbc.pc(), 0xdaf5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdaf4), 0x58);
        // 58 000B
        gbc.setState(0xb8c3, 0xbc57, 0x8820, 0x4e2a, 0xc538, 0xc15d, 0x0, 0x0);
        gbc.writeMem(0xb8c3, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xbc57);
        EXPECT(gbc.pc(), 0xb8c4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb8c3), 0x58);
        // 58 000C
        gbc.setState(0xccfe, 0x1629, 0x87b0, 0x4e47, 0xf3bc, 0xf404, 0x1, 0x1);
        gbc.writeMem(0xccfe, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x1629);
        EXPECT(gbc.pc(), 0xccff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xccfe), 0x58);
        // 58 000D
        gbc.setState(0x508d, 0xbc51, 0x7340, 0xbacc, 0x640c, 0x3b26, 0x1, 0x0);
        gbc.writeMem(0x508d, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0xbc51);
        EXPECT(gbc.pc(), 0x508e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 58 000E
        gbc.setState(0x7371, 0x2ce5, 0x1600, 0x5ab8, 0x8a57, 0x7d89, 0x1, 0x1);
        gbc.writeMem(0x7371, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x2ce5);
        EXPECT(gbc.pc(), 0x7372);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 58 000F
        gbc.setState(0x6da, 0x286, 0xc6d0, 0xccdb, 0xb2e7, 0xe6da, 0x0, 0x0);
        gbc.writeMem(0x6da, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x286);
        EXPECT(gbc.pc(), 0x6db);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 58 0010
        gbc.setState(0xe490, 0x7ba4, 0xb650, 0xf92b, 0xc14b, 0xddcc, 0x1, 0x1);
        gbc.writeMem(0xe490, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x7ba4);
        EXPECT(gbc.pc(), 0xe491);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe490), 0x58);
        // 58 0011
        gbc.setState(0xd109, 0x27fb, 0x9050, 0x99b8, 0xad75, 0xaaf2, 0x1, 0x0);
        gbc.writeMem(0xd109, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x27fb);
        EXPECT(gbc.pc(), 0xd10a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd109), 0x58);
        // 58 0012
        gbc.setState(0x8d78, 0xb49f, 0x3480, 0xfadb, 0xc547, 0x3ccd, 0x1, 0x1);
        gbc.writeMem(0x8d78, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0xb49f);
        EXPECT(gbc.pc(), 0x8d79);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d78), 0x58);
        // 58 0013
        gbc.setState(0x1d98, 0x3c81, 0x8310, 0xb99e, 0x7b5b, 0x767c, 0x1, 0x1);
        gbc.writeMem(0x1d98, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x3c81);
        EXPECT(gbc.pc(), 0x1d99);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 58 0014
        gbc.setState(0x3511, 0x79bd, 0x56a0, 0xf0b3, 0xc659, 0x5574, 0x0, 0x0);
        gbc.writeMem(0x3511, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x79bd);
        EXPECT(gbc.pc(), 0x3512);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 58 0015
        gbc.setState(0xcef8, 0x51d7, 0x9a0, 0x77ac, 0x8336, 0x589f, 0x0, 0x1);
        gbc.writeMem(0xcef8, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x51d7);
        EXPECT(gbc.pc(), 0xcef9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcef8), 0x58);
        // 58 0016
        gbc.setState(0x911d, 0x49a5, 0x7ba0, 0x27fa, 0xcd0d, 0x7455, 0x1, 0x0);
        gbc.writeMem(0x911d, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x49a5);
        EXPECT(gbc.pc(), 0x911e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x911d), 0x58);
        // 58 0017
        gbc.setState(0x638, 0xa43b, 0xaa90, 0x610f, 0x8ed9, 0xb2ed, 0x1, 0x1);
        gbc.writeMem(0x638, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0xa43b);
        EXPECT(gbc.pc(), 0x639);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 58 0018
        gbc.setState(0xc8b8, 0xf53c, 0x95b0, 0xe8f7, 0xe807, 0xc24c, 0x1, 0x0);
        gbc.writeMem(0xc8b8, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0xf53c);
        EXPECT(gbc.pc(), 0xc8b9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc8b8), 0x58);
        // 58 0019
        gbc.setState(0x9890, 0xd37f, 0x7330, 0xcf77, 0x2fb8, 0x341a, 0x0, 0x1);
        gbc.writeMem(0x9890, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0xd37f);
        EXPECT(gbc.pc(), 0x9891);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9890), 0x58);
        // 58 001A
        gbc.setState(0xb26b, 0x31cb, 0x4c50, 0x93e4, 0x5fcb, 0xdd90, 0x1, 0x0);
        gbc.writeMem(0xb26b, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x31cb);
        EXPECT(gbc.pc(), 0xb26c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb26b), 0x58);
        // 58 001B
        gbc.setState(0xd6e0, 0xc98e, 0x75c0, 0x6600, 0x9d3d, 0xfa09, 0x0, 0x0);
        gbc.writeMem(0xd6e0, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0xc98e);
        EXPECT(gbc.pc(), 0xd6e1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd6e0), 0x58);
        // 58 001C
        gbc.setState(0xdda9, 0x1a45, 0xff60, 0xfb97, 0xdb75, 0x845b, 0x0, 0x1);
        gbc.writeMem(0xdda9, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x1a45);
        EXPECT(gbc.pc(), 0xddaa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdda9), 0x58);
        // 58 001D
        gbc.setState(0x30ed, 0xd237, 0x6c60, 0x3cdc, 0x7d6d, 0xe0ce, 0x1, 0x0);
        gbc.writeMem(0x30ed, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0xd237);
        EXPECT(gbc.pc(), 0x30ee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 58 001E
        gbc.setState(0xbc64, 0xae33, 0x4430, 0x3e97, 0x7550, 0xece7, 0x1, 0x1);
        gbc.writeMem(0xbc64, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xae33);
        EXPECT(gbc.pc(), 0xbc65);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbc64), 0x58);
        // 58 001F
        gbc.setState(0x1f82, 0xcc92, 0xb450, 0x53d4, 0x585e, 0x62da, 0x1, 0x0);
        gbc.writeMem(0x1f82, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0xcc92);
        EXPECT(gbc.pc(), 0x1f83);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 58 0020
        gbc.setState(0xac1b, 0x8b36, 0x71b0, 0x33f2, 0xfbe5, 0x495c, 0x0, 0x1);
        gbc.writeMem(0xac1b, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x8b36);
        EXPECT(gbc.pc(), 0xac1c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xac1b), 0x58);
        // 58 0021
        gbc.setState(0x1aaa, 0x86a9, 0x68c0, 0xb30f, 0x9746, 0xc115, 0x1, 0x1);
        gbc.writeMem(0x1aaa, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x86a9);
        EXPECT(gbc.pc(), 0x1aab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 58 0022
        gbc.setState(0xf9a, 0x6da5, 0x2400, 0xe706, 0x1a4b, 0x39f7, 0x1, 0x1);
        gbc.writeMem(0xf9a, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x6da5);
        EXPECT(gbc.pc(), 0xf9b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 58 0023
        gbc.setState(0xa30a, 0x1ded, 0x79c0, 0x2552, 0xed3c, 0x6bf3, 0x0, 0x0);
        gbc.writeMem(0xa30a, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x1ded);
        EXPECT(gbc.pc(), 0xa30b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa30a), 0x58);
        // 58 0025
        gbc.setState(0xc00d, 0x5b19, 0x2e00, 0xc04e, 0xbbe0, 0x99c1, 0x1, 0x0);
        gbc.writeMem(0xc00d, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x5b19);
        EXPECT(gbc.pc(), 0xc00e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc00d), 0x58);
        // 58 0026
        gbc.setState(0x7167, 0xce13, 0xf560, 0xf658, 0xbc8a, 0x2564, 0x0, 0x1);
        gbc.writeMem(0x7167, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0xce13);
        EXPECT(gbc.pc(), 0x7168);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 58 0027
        gbc.setState(0x9287, 0x955b, 0xd230, 0xa407, 0x77f0, 0x49a5, 0x1, 0x0);
        gbc.writeMem(0x9287, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x955b);
        EXPECT(gbc.pc(), 0x9288);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9287), 0x58);
        // 58 0028
        gbc.setState(0x73e5, 0x732a, 0x2fb0, 0xf3c3, 0x9258, 0xe6a0, 0x0, 0x1);
        gbc.writeMem(0x73e5, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x732a);
        EXPECT(gbc.pc(), 0x73e6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 58 0029
        gbc.setState(0xb506, 0x232d, 0x5c80, 0x3075, 0x7490, 0xc3d, 0x0, 0x0);
        gbc.writeMem(0xb506, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x232d);
        EXPECT(gbc.pc(), 0xb507);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb506), 0x58);
        // 58 002A
        gbc.setState(0x55cb, 0x94f9, 0xcb50, 0xc0f4, 0x96ff, 0x8496, 0x0, 0x1);
        gbc.writeMem(0x55cb, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x94f9);
        EXPECT(gbc.pc(), 0x55cc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 58 002B
        gbc.setState(0xedc4, 0x809b, 0xefb0, 0xdb5b, 0x6087, 0xb532, 0x0, 0x0);
        gbc.writeMem(0xedc4, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x809b);
        EXPECT(gbc.pc(), 0xedc5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xedc4), 0x58);
        // 58 002C
        gbc.setState(0x4d6e, 0x8af7, 0x2090, 0xf5c3, 0x7dca, 0x1b08, 0x0, 0x0);
        gbc.writeMem(0x4d6e, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x8af7);
        EXPECT(gbc.pc(), 0x4d6f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 58 002D
        gbc.setState(0x577, 0xe09d, 0x7c0, 0xc0d5, 0x23ec, 0x8385, 0x1, 0x1);
        gbc.writeMem(0x577, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0xe09d);
        EXPECT(gbc.pc(), 0x578);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 58 002E
        gbc.setState(0x14c, 0x65cf, 0x2a70, 0xc7cb, 0x40eb, 0x3820, 0x1, 0x0);
        gbc.writeMem(0x14c, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x65cf);
        EXPECT(gbc.pc(), 0x14d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 58 002F
        gbc.setState(0x1a22, 0x62ad, 0x7050, 0xea55, 0xf084, 0x670a, 0x1, 0x1);
        gbc.writeMem(0x1a22, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x62ad);
        EXPECT(gbc.pc(), 0x1a23);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 58 0030
        gbc.setState(0xd352, 0x903a, 0x9760, 0x9167, 0x509a, 0xb2c, 0x0, 0x1);
        gbc.writeMem(0xd352, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x903a);
        EXPECT(gbc.pc(), 0xd353);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd352), 0x58);
        // 58 0031
        gbc.setState(0x8b, 0xd277, 0x4630, 0xa19c, 0x870b, 0x3776, 0x1, 0x1);
        gbc.writeMem(0x8b, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0xd277);
        EXPECT(gbc.pc(), 0x8c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 58 0032
        gbc.setState(0x5edb, 0xc4ba, 0x7ca0, 0x27c2, 0x296e, 0xc9e7, 0x0, 0x1);
        gbc.writeMem(0x5edb, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xc4ba);
        EXPECT(gbc.pc(), 0x5edc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 58 0033
        gbc.setState(0xd052, 0x5448, 0x5b00, 0xdb8a, 0x3bcd, 0xee49, 0x0, 0x0);
        gbc.writeMem(0xd052, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x5448);
        EXPECT(gbc.pc(), 0xd053);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd052), 0x58);
        // 58 0034
        gbc.setState(0xaaef, 0xf283, 0x6520, 0x1299, 0x3c83, 0x7700, 0x0, 0x0);
        gbc.writeMem(0xaaef, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0xf283);
        EXPECT(gbc.pc(), 0xaaf0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaaef), 0x58);
        // 58 0035
        gbc.setState(0xa200, 0x6ebe, 0x2f80, 0x555, 0xeb4d, 0x5279, 0x0, 0x1);
        gbc.writeMem(0xa200, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x6ebe);
        EXPECT(gbc.pc(), 0xa201);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa200), 0x58);
        // 58 0037
        gbc.setState(0x3f4b, 0x7d49, 0xac10, 0xa04d, 0xd095, 0x12bb, 0x1, 0x0);
        gbc.writeMem(0x3f4b, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x7d49);
        EXPECT(gbc.pc(), 0x3f4c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 58 0038
        gbc.setState(0xae1c, 0x82fa, 0x660, 0x82e1, 0xe79f, 0x9ecf, 0x0, 0x1);
        gbc.writeMem(0xae1c, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x82fa);
        EXPECT(gbc.pc(), 0xae1d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xae1c), 0x58);
        // 58 0039
        gbc.setState(0x8fe2, 0x25b4, 0xbb40, 0x3ab, 0x355e, 0xe9ac, 0x1, 0x0);
        gbc.writeMem(0x8fe2, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x25b4);
        EXPECT(gbc.pc(), 0x8fe3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8fe2), 0x58);
        // 58 003A
        gbc.setState(0x3948, 0xca39, 0x4ed0, 0xd340, 0xb478, 0xa146, 0x0, 0x1);
        gbc.writeMem(0x3948, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0xca39);
        EXPECT(gbc.pc(), 0x3949);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 58 003B
        gbc.setState(0xe498, 0x290a, 0x3dc0, 0x9f76, 0x565a, 0x52e3, 0x1, 0x0);
        gbc.writeMem(0xe498, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x290a);
        EXPECT(gbc.pc(), 0xe499);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe498), 0x58);
        // 58 003C
        gbc.setState(0xaa98, 0x1da7, 0xeef0, 0x720a, 0x6d12, 0xaecc, 0x1, 0x0);
        gbc.writeMem(0xaa98, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x1da7);
        EXPECT(gbc.pc(), 0xaa99);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaa98), 0x58);
        // 58 003D
        gbc.setState(0xc828, 0x63c2, 0xe4d0, 0x3db6, 0xf7b7, 0x9264, 0x0, 0x0);
        gbc.writeMem(0xc828, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x63c2);
        EXPECT(gbc.pc(), 0xc829);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc828), 0x58);
        // 58 003E
        gbc.setState(0x2402, 0xd2a4, 0xc460, 0x21e7, 0x54ac, 0xc2aa, 0x0, 0x0);
        gbc.writeMem(0x2402, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0xd2a4);
        EXPECT(gbc.pc(), 0x2403);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 58 003F
        gbc.setState(0x919b, 0x92d5, 0xb870, 0xe37c, 0x8852, 0x6c7b, 0x0, 0x0);
        gbc.writeMem(0x919b, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x92d5);
        EXPECT(gbc.pc(), 0x919c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x919b), 0x58);
        // 58 0040
        gbc.setState(0x5528, 0xcff1, 0x1f70, 0x65df, 0x32ff, 0x9956, 0x1, 0x1);
        gbc.writeMem(0x5528, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0xcff1);
        EXPECT(gbc.pc(), 0x5529);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 58 0041
        gbc.setState(0x10c9, 0x1bda, 0x5e80, 0xd68a, 0x9094, 0x2f88, 0x0, 0x0);
        gbc.writeMem(0x10c9, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x1bda);
        EXPECT(gbc.pc(), 0x10ca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 58 0042
        gbc.setState(0xbbf7, 0xb3c2, 0x8bd0, 0x149b, 0x2faa, 0xa33b, 0x0, 0x0);
        gbc.writeMem(0xbbf7, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0xb3c2);
        EXPECT(gbc.pc(), 0xbbf8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbbf7), 0x58);
        // 58 0043
        gbc.setState(0x43d7, 0xdd02, 0x1300, 0x1985, 0xd7d1, 0xbc04, 0x1, 0x0);
        gbc.writeMem(0x43d7, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0xdd02);
        EXPECT(gbc.pc(), 0x43d8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 58 0044
        gbc.setState(0x351e, 0x6117, 0xd1b0, 0x7aa, 0x336c, 0xc7fe, 0x0, 0x1);
        gbc.writeMem(0x351e, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x6117);
        EXPECT(gbc.pc(), 0x351f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 58 0045
        gbc.setState(0x3a78, 0xc724, 0x8330, 0x7830, 0x427b, 0x744, 0x1, 0x0);
        gbc.writeMem(0x3a78, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xc724);
        EXPECT(gbc.pc(), 0x3a79);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 58 0046
        gbc.setState(0x10, 0x556f, 0x1c30, 0x3ccc, 0x463d, 0xa094, 0x1, 0x0);
        gbc.writeMem(0x10, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x556f);
        EXPECT(gbc.pc(), 0x11);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 58 0047
        gbc.setState(0xabfc, 0x22e9, 0xb10, 0x783f, 0x56ff, 0x9d2b, 0x0, 0x0);
        gbc.writeMem(0xabfc, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x22e9);
        EXPECT(gbc.pc(), 0xabfd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xabfc), 0x58);
        // 58 0048
        gbc.setState(0x6bac, 0x3955, 0xaf10, 0xbc2c, 0xe5f4, 0x2c9e, 0x1, 0x1);
        gbc.writeMem(0x6bac, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x3955);
        EXPECT(gbc.pc(), 0x6bad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 58 0049
        gbc.setState(0xde6c, 0xe86f, 0x7760, 0x1ef7, 0x60ed, 0x2832, 0x1, 0x1);
        gbc.writeMem(0xde6c, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xe86f);
        EXPECT(gbc.pc(), 0xde6d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xde6c), 0x58);
        // 58 004A
        gbc.setState(0xe9f8, 0x1195, 0x4470, 0xe1cb, 0xd5ff, 0x6902, 0x0, 0x0);
        gbc.writeMem(0xe9f8, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x1195);
        EXPECT(gbc.pc(), 0xe9f9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe9f8), 0x58);
        // 58 004B
        gbc.setState(0x7c37, 0xf6f, 0x2e90, 0xaff2, 0x1c17, 0xe3c6, 0x1, 0x1);
        gbc.writeMem(0x7c37, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0xf6f);
        EXPECT(gbc.pc(), 0x7c38);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 58 004C
        gbc.setState(0x63b9, 0x2d87, 0x120, 0x7adf, 0x5d87, 0x19f9, 0x1, 0x0);
        gbc.writeMem(0x63b9, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x2d87);
        EXPECT(gbc.pc(), 0x63ba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 58 004D
        gbc.setState(0x89a1, 0xb3b6, 0x8c30, 0x28ea, 0xfb21, 0x28b, 0x1, 0x1);
        gbc.writeMem(0x89a1, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0xb3b6);
        EXPECT(gbc.pc(), 0x89a2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x89a1), 0x58);
        // 58 004E
        gbc.setState(0x3554, 0xd08c, 0x920, 0xfd7d, 0xfaa2, 0x50e7, 0x0, 0x0);
        gbc.writeMem(0x3554, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xd08c);
        EXPECT(gbc.pc(), 0x3555);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 58 004F
        gbc.setState(0xba78, 0x3c4d, 0x2f00, 0xed44, 0x8c9a, 0xaa0b, 0x0, 0x0);
        gbc.writeMem(0xba78, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x3c4d);
        EXPECT(gbc.pc(), 0xba79);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xba78), 0x58);
        // 58 0050
        gbc.setState(0x96d0, 0xf6b7, 0x2ab0, 0x3897, 0x9a5c, 0xa934, 0x0, 0x1);
        gbc.writeMem(0x96d0, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xf6b7);
        EXPECT(gbc.pc(), 0x96d1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x96d0), 0x58);
        // 58 0051
        gbc.setState(0xde3f, 0xc302, 0xf980, 0x3f9, 0x7bd1, 0xf39f, 0x1, 0x0);
        gbc.writeMem(0xde3f, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0xc302);
        EXPECT(gbc.pc(), 0xde40);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xde3f), 0x58);
        // 58 0052
        gbc.setState(0x5f2c, 0xfcae, 0xfb20, 0xffc2, 0x4f49, 0x82b8, 0x0, 0x1);
        gbc.writeMem(0x5f2c, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0xfcae);
        EXPECT(gbc.pc(), 0x5f2d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 58 0053
        gbc.setState(0x57cd, 0x5e98, 0x520, 0x1744, 0x96c7, 0xc55f, 0x0, 0x0);
        gbc.writeMem(0x57cd, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x5e98);
        EXPECT(gbc.pc(), 0x57ce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 58 0054
        gbc.setState(0x7db8, 0x76a1, 0x4730, 0x7fd, 0x53ae, 0x26d5, 0x0, 0x1);
        gbc.writeMem(0x7db8, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x76a1);
        EXPECT(gbc.pc(), 0x7db9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 58 0055
        gbc.setState(0xa95d, 0x38e5, 0x9aa0, 0xc4e0, 0x9fd9, 0x5c5d, 0x0, 0x1);
        gbc.writeMem(0xa95d, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x38e5);
        EXPECT(gbc.pc(), 0xa95e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa95d), 0x58);
        // 58 0056
        gbc.setState(0xe28c, 0xb0ff, 0x45d0, 0x705d, 0xe80, 0xcdde, 0x0, 0x0);
        gbc.writeMem(0xe28c, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0xb0ff);
        EXPECT(gbc.pc(), 0xe28d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe28c), 0x58);
        // 58 0057
        gbc.setState(0x612c, 0xf85b, 0xde40, 0xe8c1, 0x6c57, 0xf821, 0x1, 0x0);
        gbc.writeMem(0x612c, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0xf85b);
        EXPECT(gbc.pc(), 0x612d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 58 0058
        gbc.setState(0x7431, 0x7052, 0x4530, 0xe70c, 0x4666, 0x96dc, 0x0, 0x1);
        gbc.writeMem(0x7431, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x7052);
        EXPECT(gbc.pc(), 0x7432);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 58 0059
        gbc.setState(0x38ab, 0xdaca, 0x7d70, 0x1259, 0x1b2d, 0x717c, 0x1, 0x1);
        gbc.writeMem(0x38ab, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xdaca);
        EXPECT(gbc.pc(), 0x38ac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 58 005A
        gbc.setState(0x9a2b, 0xb698, 0x6520, 0xb288, 0x4e4d, 0xd892, 0x0, 0x1);
        gbc.writeMem(0x9a2b, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0xb698);
        EXPECT(gbc.pc(), 0x9a2c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9a2b), 0x58);
        // 58 005B
        gbc.setState(0x82bd, 0x1621, 0x72e0, 0xf080, 0x1755, 0xa4c3, 0x0, 0x1);
        gbc.writeMem(0x82bd, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x1621);
        EXPECT(gbc.pc(), 0x82be);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x82bd), 0x58);
        // 58 005C
        gbc.setState(0xbd3a, 0xc45, 0xef0, 0x7615, 0x4cc8, 0xea07, 0x0, 0x1);
        gbc.writeMem(0xbd3a, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xc45);
        EXPECT(gbc.pc(), 0xbd3b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbd3a), 0x58);
        // 58 005D
        gbc.setState(0xa8cc, 0x7890, 0x7fb0, 0xe930, 0x78f9, 0x8558, 0x0, 0x0);
        gbc.writeMem(0xa8cc, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x7890);
        EXPECT(gbc.pc(), 0xa8cd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa8cc), 0x58);
        // 58 005E
        gbc.setState(0xc74b, 0x17df, 0x6090, 0x5159, 0x3c48, 0x6f95, 0x0, 0x1);
        gbc.writeMem(0xc74b, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x17df);
        EXPECT(gbc.pc(), 0xc74c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc74b), 0x58);
        // 58 005F
        gbc.setState(0xec37, 0x9e60, 0x2d80, 0x833, 0x69a9, 0xa1ed, 0x1, 0x1);
        gbc.writeMem(0xec37, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x9e60);
        EXPECT(gbc.pc(), 0xec38);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xec37), 0x58);
        // 58 0060
        gbc.setState(0x24da, 0x8d6c, 0x590, 0x505d, 0x456e, 0x106d, 0x1, 0x0);
        gbc.writeMem(0x24da, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x8d6c);
        EXPECT(gbc.pc(), 0x24db);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 58 0061
        gbc.setState(0xe278, 0x9568, 0xa7a0, 0x69f4, 0x6984, 0x54b6, 0x1, 0x1);
        gbc.writeMem(0xe278, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x9568);
        EXPECT(gbc.pc(), 0xe279);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe278), 0x58);
        // 58 0062
        gbc.setState(0x4c8, 0xe4a2, 0x67e0, 0x5378, 0x7571, 0x832e, 0x1, 0x1);
        gbc.writeMem(0x4c8, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xe4a2);
        EXPECT(gbc.pc(), 0x4c9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 58 0063
        gbc.setState(0xa1b9, 0xac5f, 0xffc0, 0x61b2, 0x5a1a, 0x157c, 0x1, 0x1);
        gbc.writeMem(0xa1b9, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xac5f);
        EXPECT(gbc.pc(), 0xa1ba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa1b9), 0x58);
        // 58 0064
        gbc.setState(0xe7bc, 0x8099, 0x3040, 0xe50b, 0xe12, 0xb71f, 0x1, 0x1);
        gbc.writeMem(0xe7bc, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x8099);
        EXPECT(gbc.pc(), 0xe7bd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe7bc), 0x58);
        // 58 0065
        gbc.setState(0xbed5, 0x8082, 0x9c20, 0xe077, 0xff99, 0x9016, 0x1, 0x1);
        gbc.writeMem(0xbed5, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x8082);
        EXPECT(gbc.pc(), 0xbed6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbed5), 0x58);
        // 58 0066
        gbc.setState(0x5469, 0xa9ba, 0x99d0, 0xe2f6, 0x3f20, 0x49db, 0x1, 0x1);
        gbc.writeMem(0x5469, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0xa9ba);
        EXPECT(gbc.pc(), 0x546a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 58 0067
        gbc.setState(0x39ec, 0xe0da, 0x5b50, 0xc5fc, 0x3c6f, 0x94f9, 0x1, 0x0);
        gbc.writeMem(0x39ec, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xe0da);
        EXPECT(gbc.pc(), 0x39ed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 58 0068
        gbc.setState(0x473b, 0x511b, 0x2980, 0xf4e2, 0xbe38, 0x9fc5, 0x1, 0x0);
        gbc.writeMem(0x473b, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x511b);
        EXPECT(gbc.pc(), 0x473c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 58 0069
        gbc.setState(0x55ce, 0x83f7, 0x2b80, 0x242d, 0x2a72, 0xa69a, 0x0, 0x1);
        gbc.writeMem(0x55ce, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x83f7);
        EXPECT(gbc.pc(), 0x55cf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 58 006A
        gbc.setState(0xc335, 0xdbdb, 0x1ea0, 0x9b32, 0xfaaf, 0xf342, 0x1, 0x0);
        gbc.writeMem(0xc335, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0xdbdb);
        EXPECT(gbc.pc(), 0xc336);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc335), 0x58);
        // 58 006B
        gbc.setState(0xe137, 0xe6d3, 0x8840, 0x7eb2, 0x5c9b, 0x9ece, 0x0, 0x1);
        gbc.writeMem(0xe137, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0xe6d3);
        EXPECT(gbc.pc(), 0xe138);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe137), 0x58);
        // 58 006C
        gbc.setState(0x6169, 0xe8f6, 0x1150, 0xd9f1, 0x9784, 0x7a2b, 0x0, 0x0);
        gbc.writeMem(0x6169, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0xe8f6);
        EXPECT(gbc.pc(), 0x616a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 58 006D
        gbc.setState(0x471c, 0xdae7, 0x5e70, 0x4f6e, 0x1f7, 0x1114, 0x0, 0x1);
        gbc.writeMem(0x471c, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0xdae7);
        EXPECT(gbc.pc(), 0x471d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 58 006E
        gbc.setState(0xa1e3, 0x6ed3, 0x16a0, 0xea46, 0x637, 0x5ee3, 0x0, 0x1);
        gbc.writeMem(0xa1e3, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x6ed3);
        EXPECT(gbc.pc(), 0xa1e4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa1e3), 0x58);
        // 58 006F
        gbc.setState(0xa77, 0x3d4c, 0x6d50, 0x595b, 0x4c0f, 0x5181, 0x1, 0x1);
        gbc.writeMem(0xa77, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x3d4c);
        EXPECT(gbc.pc(), 0xa78);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 58 0070
        gbc.setState(0x4f26, 0x7fc0, 0x2900, 0x513b, 0x96a6, 0x7978, 0x0, 0x1);
        gbc.writeMem(0x4f26, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x7fc0);
        EXPECT(gbc.pc(), 0x4f27);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 58 0071
        gbc.setState(0xb46d, 0xde02, 0x5f90, 0xcf46, 0x3c1a, 0x80e0, 0x1, 0x1);
        gbc.writeMem(0xb46d, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0xde02);
        EXPECT(gbc.pc(), 0xb46e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb46d), 0x58);
        // 58 0072
        gbc.setState(0x3428, 0xbda3, 0x5170, 0xb65, 0x7332, 0x8007, 0x0, 0x0);
        gbc.writeMem(0x3428, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xbda3);
        EXPECT(gbc.pc(), 0x3429);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 58 0073
        gbc.setState(0x4f8f, 0x6801, 0x70, 0xcc2d, 0x8098, 0xb803, 0x1, 0x0);
        gbc.writeMem(0x4f8f, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x6801);
        EXPECT(gbc.pc(), 0x4f90);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 58 0074
        gbc.setState(0x3a26, 0xebf4, 0xa390, 0xde92, 0xfb6c, 0xe002, 0x0, 0x0);
        gbc.writeMem(0x3a26, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xebf4);
        EXPECT(gbc.pc(), 0x3a27);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 58 0075
        gbc.setState(0xef90, 0xf461, 0x5ba0, 0x277b, 0xbeb4, 0xe789, 0x0, 0x0);
        gbc.writeMem(0xef90, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0xf461);
        EXPECT(gbc.pc(), 0xef91);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xef90), 0x58);
        // 58 0076
        gbc.setState(0x4e6e, 0x8723, 0xa780, 0x803, 0xc798, 0xdd91, 0x1, 0x1);
        gbc.writeMem(0x4e6e, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x8723);
        EXPECT(gbc.pc(), 0x4e6f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 58 0077
        gbc.setState(0x81f8, 0x669c, 0xd270, 0x90c3, 0xb395, 0x9a20, 0x0, 0x0);
        gbc.writeMem(0x81f8, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x669c);
        EXPECT(gbc.pc(), 0x81f9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x81f8), 0x58);
        // 58 0078
        gbc.setState(0x39f8, 0x71b7, 0x4200, 0xe212, 0xa65d, 0x2d2a, 0x1, 0x1);
        gbc.writeMem(0x39f8, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x71b7);
        EXPECT(gbc.pc(), 0x39f9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 58 0079
        gbc.setState(0x237e, 0xa231, 0xc610, 0x798c, 0x2bf, 0x50b9, 0x0, 0x0);
        gbc.writeMem(0x237e, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0xa231);
        EXPECT(gbc.pc(), 0x237f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 58 007B
        gbc.setState(0x8599, 0x8928, 0x64c0, 0x5040, 0xfc1, 0xf205, 0x1, 0x1);
        gbc.writeMem(0x8599, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x8928);
        EXPECT(gbc.pc(), 0x859a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8599), 0x58);
        // 58 007C
        gbc.setState(0x74f8, 0x8f04, 0xccb0, 0x80c, 0x7cef, 0x79d2, 0x0, 0x1);
        gbc.writeMem(0x74f8, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x8f04);
        EXPECT(gbc.pc(), 0x74f9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 58 007D
        gbc.setState(0x4cf9, 0x36c9, 0x17b0, 0x627e, 0xe2f4, 0x9b5a, 0x0, 0x0);
        gbc.writeMem(0x4cf9, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x36c9);
        EXPECT(gbc.pc(), 0x4cfa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 58 007E
        gbc.setState(0x4d, 0xaab3, 0x2490, 0x40eb, 0xbe6e, 0x5da3, 0x1, 0x1);
        gbc.writeMem(0x4d, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0xaab3);
        EXPECT(gbc.pc(), 0x4e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 58 007F
        gbc.setState(0xc2c3, 0x5ec, 0x6710, 0x72b4, 0x1d71, 0x1ff2, 0x1, 0x1);
        gbc.writeMem(0xc2c3, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x5ec);
        EXPECT(gbc.pc(), 0xc2c4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc2c3), 0x58);
        // 58 0080
        gbc.setState(0x990e, 0xf237, 0xf880, 0x57b8, 0x19ea, 0x9b9d, 0x0, 0x0);
        gbc.writeMem(0x990e, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0xf237);
        EXPECT(gbc.pc(), 0x990f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x990e), 0x58);
        // 58 0081
        gbc.setState(0x421d, 0xb29, 0x41c0, 0xebb2, 0x87f6, 0x2b87, 0x1, 0x1);
        gbc.writeMem(0x421d, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xb29);
        EXPECT(gbc.pc(), 0x421e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 58 0082
        gbc.setState(0xec42, 0x5758, 0x350, 0x1a5d, 0x6b09, 0x1da8, 0x0, 0x0);
        gbc.writeMem(0xec42, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x5758);
        EXPECT(gbc.pc(), 0xec43);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xec42), 0x58);
        // 58 0083
        gbc.setState(0x44ab, 0x68e3, 0xcec0, 0x3aed, 0x59a5, 0x16d9, 0x1, 0x1);
        gbc.writeMem(0x44ab, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x68e3);
        EXPECT(gbc.pc(), 0x44ac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 58 0084
        gbc.setState(0x478f, 0xebd7, 0xcde0, 0x1327, 0x5b9d, 0xae31, 0x1, 0x0);
        gbc.writeMem(0x478f, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xebd7);
        EXPECT(gbc.pc(), 0x4790);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 58 0085
        gbc.setState(0x1dcb, 0x4d5b, 0x7370, 0x2317, 0x92bd, 0x1819, 0x1, 0x0);
        gbc.writeMem(0x1dcb, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x4d5b);
        EXPECT(gbc.pc(), 0x1dcc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 58 0086
        gbc.setState(0x182c, 0x4c3c, 0x55a0, 0x5125, 0xf366, 0xe2f3, 0x0, 0x0);
        gbc.writeMem(0x182c, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x4c3c);
        EXPECT(gbc.pc(), 0x182d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 58 0087
        gbc.setState(0xfc5, 0xb697, 0xe620, 0x35fc, 0x7ac8, 0x8af0, 0x1, 0x0);
        gbc.writeMem(0xfc5, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0xb697);
        EXPECT(gbc.pc(), 0xfc6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 58 0088
        gbc.setState(0x281f, 0x9124, 0xbf10, 0x9178, 0x3eba, 0xcda7, 0x1, 0x0);
        gbc.writeMem(0x281f, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x9124);
        EXPECT(gbc.pc(), 0x2820);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 58 0089
        gbc.setState(0xe5ce, 0x2cf2, 0xf200, 0x3957, 0x7196, 0x6190, 0x0, 0x0);
        gbc.writeMem(0xe5ce, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x2cf2);
        EXPECT(gbc.pc(), 0xe5cf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe5ce), 0x58);
        // 58 008A
        gbc.setState(0x2a85, 0xb264, 0xffb0, 0x9e26, 0xdeac, 0xdbd9, 0x0, 0x0);
        gbc.writeMem(0x2a85, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0xb264);
        EXPECT(gbc.pc(), 0x2a86);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 58 008B
        gbc.setState(0x673d, 0x60d4, 0xa440, 0xe142, 0xbdf, 0x56ac, 0x0, 0x1);
        gbc.writeMem(0x673d, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x60d4);
        EXPECT(gbc.pc(), 0x673e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 58 008C
        gbc.setState(0x71b0, 0x176b, 0x9d70, 0x1b23, 0x519, 0x1320, 0x0, 0x1);
        gbc.writeMem(0x71b0, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x176b);
        EXPECT(gbc.pc(), 0x71b1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 58 008E
        gbc.setState(0xd25e, 0x4cbc, 0xf570, 0x7791, 0x53b5, 0x6ab9, 0x0, 0x1);
        gbc.writeMem(0xd25e, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x4cbc);
        EXPECT(gbc.pc(), 0xd25f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd25e), 0x58);
        // 58 008F
        gbc.setState(0x539c, 0x67, 0x79e0, 0x989a, 0x1e71, 0xc468, 0x0, 0x0);
        gbc.writeMem(0x539c, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x67);
        EXPECT(gbc.pc(), 0x539d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 58 0090
        gbc.setState(0x3304, 0x5e81, 0xa990, 0x50df, 0x2e1f, 0xef7b, 0x0, 0x1);
        gbc.writeMem(0x3304, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x5e81);
        EXPECT(gbc.pc(), 0x3305);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 58 0091
        gbc.setState(0x693e, 0xfd76, 0x49b0, 0x15e5, 0xa7af, 0xa5f0, 0x0, 0x0);
        gbc.writeMem(0x693e, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0xfd76);
        EXPECT(gbc.pc(), 0x693f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 58 0093
        gbc.setState(0xb679, 0xfa0f, 0xd1f0, 0x7c42, 0x1a10, 0xf6c8, 0x1, 0x1);
        gbc.writeMem(0xb679, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0xfa0f);
        EXPECT(gbc.pc(), 0xb67a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb679), 0x58);
        // 58 0094
        gbc.setState(0x16d0, 0x26e3, 0x8130, 0xa6fa, 0x5e72, 0x997c, 0x0, 0x1);
        gbc.writeMem(0x16d0, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x26e3);
        EXPECT(gbc.pc(), 0x16d1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 58 0095
        gbc.setState(0xafcb, 0x3eac, 0x1b90, 0xb689, 0x7fa5, 0xc2bf, 0x1, 0x0);
        gbc.writeMem(0xafcb, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x3eac);
        EXPECT(gbc.pc(), 0xafcc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xafcb), 0x58);
        // 58 0096
        gbc.setState(0x8b6f, 0xacc9, 0xb0d0, 0x356c, 0x8ae7, 0x28f5, 0x1, 0x1);
        gbc.writeMem(0x8b6f, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0xacc9);
        EXPECT(gbc.pc(), 0x8b70);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b6f), 0x58);
        // 58 0097
        gbc.setState(0x7746, 0xad63, 0x62f0, 0xa56, 0xd1d8, 0xb3e9, 0x0, 0x0);
        gbc.writeMem(0x7746, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0xad63);
        EXPECT(gbc.pc(), 0x7747);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 58 0098
        gbc.setState(0x40c8, 0xcd82, 0x38b0, 0x67b0, 0xb954, 0xb1a8, 0x0, 0x1);
        gbc.writeMem(0x40c8, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0xcd82);
        EXPECT(gbc.pc(), 0x40c9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 58 0099
        gbc.setState(0x7709, 0xfeec, 0xc8e0, 0x62cf, 0xee31, 0xc120, 0x0, 0x1);
        gbc.writeMem(0x7709, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0xfeec);
        EXPECT(gbc.pc(), 0x770a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 58 009A
        gbc.setState(0xc444, 0xfcb3, 0xf770, 0xada4, 0x2b69, 0x665c, 0x0, 0x0);
        gbc.writeMem(0xc444, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0xfcb3);
        EXPECT(gbc.pc(), 0xc445);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc444), 0x58);
        // 58 009B
        gbc.setState(0xee31, 0x4d65, 0x4980, 0x8da4, 0xec9, 0x251b, 0x0, 0x0);
        gbc.writeMem(0xee31, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x4d65);
        EXPECT(gbc.pc(), 0xee32);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xee31), 0x58);
        // 58 009C
        gbc.setState(0x5176, 0xf89d, 0xb880, 0xf582, 0x65a9, 0xef21, 0x1, 0x1);
        gbc.writeMem(0x5176, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0xf89d);
        EXPECT(gbc.pc(), 0x5177);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 58 009D
        gbc.setState(0xef90, 0xe9f6, 0xdbb0, 0x36ba, 0xdccd, 0xc4c3, 0x0, 0x0);
        gbc.writeMem(0xef90, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xe9f6);
        EXPECT(gbc.pc(), 0xef91);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xef90), 0x58);
        // 58 009E
        gbc.setState(0x1c37, 0xd8b7, 0xbdb0, 0x3276, 0x2672, 0x5af2, 0x0, 0x0);
        gbc.writeMem(0x1c37, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0xd8b7);
        EXPECT(gbc.pc(), 0x1c38);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 58 009F
        gbc.setState(0xaac, 0xc5f, 0xeef0, 0xc0dd, 0x75c9, 0x4917, 0x1, 0x1);
        gbc.writeMem(0xaac, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0xc5f);
        EXPECT(gbc.pc(), 0xaad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 58 00A0
        gbc.setState(0x165, 0xa906, 0xaa10, 0xc564, 0x89a0, 0x1315, 0x1, 0x1);
        gbc.writeMem(0x165, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0xa906);
        EXPECT(gbc.pc(), 0x166);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 58 00A1
        gbc.setState(0x5744, 0xa00c, 0xb710, 0xfe1c, 0xde14, 0x9313, 0x1, 0x1);
        gbc.writeMem(0x5744, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0xa00c);
        EXPECT(gbc.pc(), 0x5745);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 58 00A2
        gbc.setState(0x9a09, 0xb3e9, 0x6b20, 0x4954, 0xe388, 0x31ea, 0x0, 0x1);
        gbc.writeMem(0x9a09, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0xb3e9);
        EXPECT(gbc.pc(), 0x9a0a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9a09), 0x58);
        // 58 00A3
        gbc.setState(0x7bbe, 0xf8c0, 0xb1a0, 0xd482, 0xbda8, 0x861e, 0x1, 0x1);
        gbc.writeMem(0x7bbe, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0xf8c0);
        EXPECT(gbc.pc(), 0x7bbf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 58 00A4
        gbc.setState(0x82c, 0xa5dc, 0xc650, 0xda06, 0xe96a, 0xe90c, 0x0, 0x0);
        gbc.writeMem(0x82c, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xa5dc);
        EXPECT(gbc.pc(), 0x82d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 58 00A5
        gbc.setState(0x4f5c, 0xacf8, 0x15a0, 0x2186, 0x7dab, 0xdeff, 0x1, 0x0);
        gbc.writeMem(0x4f5c, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0xacf8);
        EXPECT(gbc.pc(), 0x4f5d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 58 00A6
        gbc.setState(0x7ac7, 0xd740, 0x3e0, 0xe86a, 0x1de7, 0xe303, 0x1, 0x0);
        gbc.writeMem(0x7ac7, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0xd740);
        EXPECT(gbc.pc(), 0x7ac8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 58 00A7
        gbc.setState(0x4e0, 0x689b, 0x6690, 0x8820, 0x54f, 0x39c7, 0x1, 0x0);
        gbc.writeMem(0x4e0, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x689b);
        EXPECT(gbc.pc(), 0x4e1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 58 00A8
        gbc.setState(0x29c4, 0xac46, 0xb010, 0x2404, 0xf5be, 0x72d5, 0x0, 0x1);
        gbc.writeMem(0x29c4, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0xac46);
        EXPECT(gbc.pc(), 0x29c5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 58 00A9
        gbc.setState(0x3157, 0xcd2f, 0x89d0, 0xc20c, 0xd628, 0xfc8, 0x1, 0x0);
        gbc.writeMem(0x3157, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0xcd2f);
        EXPECT(gbc.pc(), 0x3158);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 58 00AA
        gbc.setState(0x68e6, 0x6c1c, 0xb5c0, 0xf704, 0x8b67, 0x938f, 0x0, 0x0);
        gbc.writeMem(0x68e6, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x6c1c);
        EXPECT(gbc.pc(), 0x68e7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 58 00AB
        gbc.setState(0xde03, 0x86dd, 0xb930, 0x1305, 0xc9bd, 0x4bec, 0x0, 0x1);
        gbc.writeMem(0xde03, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x86dd);
        EXPECT(gbc.pc(), 0xde04);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xde03), 0x58);
        // 58 00AC
        gbc.setState(0x11a7, 0x6f67, 0xfef0, 0x26c1, 0xca7d, 0xf1e9, 0x0, 0x0);
        gbc.writeMem(0x11a7, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x6f67);
        EXPECT(gbc.pc(), 0x11a8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 58 00AD
        gbc.setState(0x6f72, 0xf0cf, 0xf770, 0xf7fc, 0xdc0a, 0x4459, 0x1, 0x0);
        gbc.writeMem(0x6f72, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0xf0cf);
        EXPECT(gbc.pc(), 0x6f73);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 58 00AE
        gbc.setState(0x2f73, 0x4305, 0x2e50, 0x5019, 0x71e0, 0x702f, 0x1, 0x0);
        gbc.writeMem(0x2f73, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x4305);
        EXPECT(gbc.pc(), 0x2f74);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 58 00AF
        gbc.setState(0xeec0, 0x94e2, 0x73f0, 0x4c24, 0xb4ac, 0xf790, 0x0, 0x1);
        gbc.writeMem(0xeec0, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x94e2);
        EXPECT(gbc.pc(), 0xeec1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeec0), 0x58);
        // 58 00B0
        gbc.setState(0x5eb9, 0x926d, 0x1fd0, 0x8cc7, 0x3641, 0x1b2, 0x0, 0x1);
        gbc.writeMem(0x5eb9, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x926d);
        EXPECT(gbc.pc(), 0x5eba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 58 00B1
        gbc.setState(0x4188, 0x9c9, 0xf810, 0x979b, 0xf21f, 0x8ba5, 0x0, 0x0);
        gbc.writeMem(0x4188, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x9c9);
        EXPECT(gbc.pc(), 0x4189);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 58 00B2
        gbc.setState(0x6100, 0xcfa1, 0x40, 0x78b9, 0xfe9, 0x31d0, 0x0, 0x0);
        gbc.writeMem(0x6100, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0xcfa1);
        EXPECT(gbc.pc(), 0x6101);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 58 00B3
        gbc.setState(0x37d9, 0xb7db, 0x9f70, 0x3ea2, 0xfcfe, 0x26d3, 0x0, 0x1);
        gbc.writeMem(0x37d9, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0xb7db);
        EXPECT(gbc.pc(), 0x37da);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 58 00B4
        gbc.setState(0x5a91, 0xaa0d, 0x4710, 0x12, 0xa26c, 0x292d, 0x0, 0x1);
        gbc.writeMem(0x5a91, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0xaa0d);
        EXPECT(gbc.pc(), 0x5a92);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 58 00B5
        gbc.setState(0x4af, 0xb982, 0x850, 0xcd5c, 0xedc0, 0xcae0, 0x1, 0x1);
        gbc.writeMem(0x4af, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0xb982);
        EXPECT(gbc.pc(), 0x4b0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 58 00B6
        gbc.setState(0x1a61, 0x866e, 0x67d0, 0xc3bc, 0xf6b8, 0x15ea, 0x1, 0x1);
        gbc.writeMem(0x1a61, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x866e);
        EXPECT(gbc.pc(), 0x1a62);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 58 00B7
        gbc.setState(0xdf68, 0xb139, 0x5d30, 0x6ffa, 0xed75, 0x5ccc, 0x1, 0x0);
        gbc.writeMem(0xdf68, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0xb139);
        EXPECT(gbc.pc(), 0xdf69);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdf68), 0x58);
        // 58 00B8
        gbc.setState(0x44e9, 0x22bb, 0xae70, 0xb3d8, 0x6fc1, 0x9e94, 0x1, 0x1);
        gbc.writeMem(0x44e9, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x22bb);
        EXPECT(gbc.pc(), 0x44ea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 58 00B9
        gbc.setState(0x6e25, 0x7ab3, 0xde80, 0x17b0, 0x7d44, 0x71e1, 0x1, 0x0);
        gbc.writeMem(0x6e25, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x7ab3);
        EXPECT(gbc.pc(), 0x6e26);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 58 00BA
        gbc.setState(0xdaa1, 0x360, 0xf500, 0x3558, 0xcaf3, 0x4e1b, 0x1, 0x0);
        gbc.writeMem(0xdaa1, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x360);
        EXPECT(gbc.pc(), 0xdaa2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdaa1), 0x58);
        // 58 00BB
        gbc.setState(0x5339, 0x8e4f, 0xd170, 0x5846, 0x1cac, 0x9ef8, 0x1, 0x0);
        gbc.writeMem(0x5339, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x8e4f);
        EXPECT(gbc.pc(), 0x533a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 58 00BC
        gbc.setState(0xe7d5, 0xa8ed, 0xe270, 0xdd1d, 0x1505, 0x8f5c, 0x0, 0x0);
        gbc.writeMem(0xe7d5, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0xa8ed);
        EXPECT(gbc.pc(), 0xe7d6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe7d5), 0x58);
        // 58 00BD
        gbc.setState(0x850b, 0xc021, 0x5090, 0x4eab, 0x47f9, 0x7cac, 0x1, 0x1);
        gbc.writeMem(0x850b, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0xc021);
        EXPECT(gbc.pc(), 0x850c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x850b), 0x58);
        // 58 00BE
        gbc.setState(0x718e, 0x8172, 0xd090, 0xaec, 0x130a, 0x6da1, 0x0, 0x1);
        gbc.writeMem(0x718e, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x8172);
        EXPECT(gbc.pc(), 0x718f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 58 00BF
        gbc.setState(0x955f, 0x1f51, 0x99b0, 0x1c12, 0x57af, 0xe447, 0x1, 0x0);
        gbc.writeMem(0x955f, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x1f51);
        EXPECT(gbc.pc(), 0x9560);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x955f), 0x58);
        // 58 00C0
        gbc.setState(0x836f, 0x98bf, 0xef70, 0x35d0, 0xac60, 0xa4b0, 0x0, 0x0);
        gbc.writeMem(0x836f, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x98bf);
        EXPECT(gbc.pc(), 0x8370);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x836f), 0x58);
        // 58 00C1
        gbc.setState(0xd0f, 0x45d, 0x8000, 0xdae3, 0xa5bb, 0xfa2a, 0x1, 0x0);
        gbc.writeMem(0xd0f, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x45d);
        EXPECT(gbc.pc(), 0xd10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 58 00C2
        gbc.setState(0x97e9, 0x5835, 0x19a0, 0x561a, 0xa51f, 0x296f, 0x0, 0x0);
        gbc.writeMem(0x97e9, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x5835);
        EXPECT(gbc.pc(), 0x97ea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x97e9), 0x58);
        // 58 00C3
        gbc.setState(0x3ebe, 0x914b, 0xad80, 0xaef9, 0x517c, 0x1d51, 0x1, 0x1);
        gbc.writeMem(0x3ebe, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x914b);
        EXPECT(gbc.pc(), 0x3ebf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 58 00C5
        gbc.setState(0x8b3f, 0xf416, 0xe0, 0xf16f, 0x183b, 0x704c, 0x0, 0x0);
        gbc.writeMem(0x8b3f, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0xf416);
        EXPECT(gbc.pc(), 0x8b40);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8b3f), 0x58);
        // 58 00C6
        gbc.setState(0x43af, 0x6c5e, 0x6be0, 0x9037, 0x3ed9, 0xf1a, 0x0, 0x1);
        gbc.writeMem(0x43af, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x6c5e);
        EXPECT(gbc.pc(), 0x43b0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 58 00C7
        gbc.setState(0xb7e2, 0xee70, 0xce10, 0xd987, 0x77d1, 0x7839, 0x1, 0x0);
        gbc.writeMem(0xb7e2, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0xee70);
        EXPECT(gbc.pc(), 0xb7e3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb7e2), 0x58);
        // 58 00C8
        gbc.setState(0x41c7, 0x579f, 0xa2f0, 0x6105, 0x40ca, 0xfe21, 0x1, 0x0);
        gbc.writeMem(0x41c7, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x579f);
        EXPECT(gbc.pc(), 0x41c8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 58 00C9
        gbc.setState(0xd797, 0x6a42, 0x6d20, 0xf7b8, 0x5e82, 0xed0a, 0x1, 0x1);
        gbc.writeMem(0xd797, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x6a42);
        EXPECT(gbc.pc(), 0xd798);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd797), 0x58);
        // 58 00CA
        gbc.setState(0x951f, 0x6127, 0xb500, 0x9add, 0x4f60, 0xef32, 0x1, 0x0);
        gbc.writeMem(0x951f, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x6127);
        EXPECT(gbc.pc(), 0x9520);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x951f), 0x58);
        // 58 00CB
        gbc.setState(0xdd4c, 0xe5a8, 0xdcf0, 0xf070, 0x6f1, 0xd534, 0x0, 0x1);
        gbc.writeMem(0xdd4c, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xe5a8);
        EXPECT(gbc.pc(), 0xdd4d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdd4c), 0x58);
        // 58 00CC
        gbc.setState(0x1279, 0x5570, 0x51f0, 0x9959, 0x5ecd, 0xd106, 0x0, 0x0);
        gbc.writeMem(0x1279, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x5570);
        EXPECT(gbc.pc(), 0x127a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 58 00CD
        gbc.setState(0xd751, 0xf41, 0xd440, 0xd358, 0x70e1, 0xe125, 0x0, 0x1);
        gbc.writeMem(0xd751, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0xf41);
        EXPECT(gbc.pc(), 0xd752);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd751), 0x58);
        // 58 00CE
        gbc.setState(0x8171, 0x2cbc, 0x7810, 0x8d54, 0x1d69, 0x30d8, 0x1, 0x0);
        gbc.writeMem(0x8171, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x2cbc);
        EXPECT(gbc.pc(), 0x8172);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8171), 0x58);
        // 58 00CF
        gbc.setState(0x6763, 0xb34f, 0x9500, 0xc617, 0x929c, 0xe479, 0x0, 0x0);
        gbc.writeMem(0x6763, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xb34f);
        EXPECT(gbc.pc(), 0x6764);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 58 00D0
        gbc.setState(0x7374, 0x8772, 0x42c0, 0x3135, 0xca7b, 0x948b, 0x0, 0x1);
        gbc.writeMem(0x7374, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x8772);
        EXPECT(gbc.pc(), 0x7375);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 58 00D1
        gbc.setState(0x102, 0xbf88, 0x3950, 0x26e8, 0xcff9, 0x5e3c, 0x0, 0x1);
        gbc.writeMem(0x102, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xbf88);
        EXPECT(gbc.pc(), 0x103);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 58 00D2
        gbc.setState(0xbddb, 0x725, 0x9dd0, 0x85a3, 0xf647, 0x6c87, 0x1, 0x0);
        gbc.writeMem(0xbddb, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x725);
        EXPECT(gbc.pc(), 0xbddc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbddb), 0x58);
        // 58 00D3
        gbc.setState(0x3eef, 0xedd, 0xd4b0, 0x7c97, 0xe1a3, 0x19db, 0x1, 0x0);
        gbc.writeMem(0x3eef, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0xedd);
        EXPECT(gbc.pc(), 0x3ef0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 58 00D4
        gbc.setState(0x6106, 0xd190, 0xa7c0, 0xb5cf, 0xeecf, 0xc756, 0x0, 0x1);
        gbc.writeMem(0x6106, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0xd190);
        EXPECT(gbc.pc(), 0x6107);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 58 00D6
        gbc.setState(0x2ef1, 0x2762, 0xfb60, 0x362f, 0x1b22, 0xf431, 0x1, 0x0);
        gbc.writeMem(0x2ef1, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x2762);
        EXPECT(gbc.pc(), 0x2ef2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 58 00D7
        gbc.setState(0x1b70, 0xcc92, 0xc9d0, 0x73e4, 0xe0, 0x91dc, 0x0, 0x0);
        gbc.writeMem(0x1b70, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0xcc92);
        EXPECT(gbc.pc(), 0x1b71);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 58 00D8
        gbc.setState(0xb045, 0xf476, 0x7f30, 0x4145, 0xbbb0, 0x2451, 0x1, 0x0);
        gbc.writeMem(0xb045, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xf476);
        EXPECT(gbc.pc(), 0xb046);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb045), 0x58);
        // 58 00D9
        gbc.setState(0xc8f3, 0xc009, 0x8960, 0x589e, 0x5313, 0x2c30, 0x0, 0x1);
        gbc.writeMem(0xc8f3, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0xc009);
        EXPECT(gbc.pc(), 0xc8f4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc8f3), 0x58);
        // 58 00DA
        gbc.setState(0xc20f, 0xe29f, 0xdb80, 0xbc5d, 0xf035, 0x45fa, 0x0, 0x0);
        gbc.writeMem(0xc20f, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xe29f);
        EXPECT(gbc.pc(), 0xc210);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc20f), 0x58);
        // 58 00DB
        gbc.setState(0x3017, 0x4144, 0xcef0, 0x761f, 0xa5bf, 0x6fdc, 0x0, 0x1);
        gbc.writeMem(0x3017, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x4144);
        EXPECT(gbc.pc(), 0x3018);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 58 00DC
        gbc.setState(0xe723, 0x1ce3, 0x21e0, 0x44b6, 0x7271, 0xf5ff, 0x0, 0x0);
        gbc.writeMem(0xe723, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x1ce3);
        EXPECT(gbc.pc(), 0xe724);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe723), 0x58);
        // 58 00DD
        gbc.setState(0x8777, 0x22a, 0x97b0, 0x2d85, 0x50f, 0xbc32, 0x0, 0x0);
        gbc.writeMem(0x8777, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x22a);
        EXPECT(gbc.pc(), 0x8778);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8777), 0x58);
        // 58 00DE
        gbc.setState(0xbf0d, 0x2c70, 0xede0, 0xb781, 0x442a, 0x5d95, 0x1, 0x0);
        gbc.writeMem(0xbf0d, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x2c70);
        EXPECT(gbc.pc(), 0xbf0e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbf0d), 0x58);
        // 58 00DF
        gbc.setState(0x99a7, 0xf2a7, 0xeb90, 0x8520, 0x1b33, 0x144f, 0x0, 0x0);
        gbc.writeMem(0x99a7, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0xf2a7);
        EXPECT(gbc.pc(), 0x99a8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x99a7), 0x58);
        // 58 00E0
        gbc.setState(0x2510, 0xcfb9, 0xde60, 0x4321, 0x4295, 0xddbe, 0x0, 0x1);
        gbc.writeMem(0x2510, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0xcfb9);
        EXPECT(gbc.pc(), 0x2511);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 58 00E1
        gbc.setState(0x2e4f, 0x584b, 0xa90, 0xeaf4, 0x6fed, 0xac86, 0x1, 0x1);
        gbc.writeMem(0x2e4f, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x584b);
        EXPECT(gbc.pc(), 0x2e50);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 58 00E2
        gbc.setState(0x2597, 0x279b, 0xb040, 0x7455, 0x4edf, 0x952f, 0x1, 0x1);
        gbc.writeMem(0x2597, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x279b);
        EXPECT(gbc.pc(), 0x2598);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 58 00E3
        gbc.setState(0x8177, 0xe306, 0xa760, 0x4d47, 0x66bb, 0x9a6e, 0x0, 0x0);
        gbc.writeMem(0x8177, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xe306);
        EXPECT(gbc.pc(), 0x8178);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8177), 0x58);
        // 58 00E5
        gbc.setState(0xce20, 0x2266, 0x4df0, 0x6c5d, 0x1761, 0x79c7, 0x1, 0x0);
        gbc.writeMem(0xce20, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x2266);
        EXPECT(gbc.pc(), 0xce21);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xce20), 0x58);
        // 58 00E6
        gbc.setState(0x95d9, 0x6741, 0x3810, 0x87f1, 0xa549, 0x6a6a, 0x0, 0x1);
        gbc.writeMem(0x95d9, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x6741);
        EXPECT(gbc.pc(), 0x95da);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x95d9), 0x58);
        // 58 00E7
        gbc.setState(0x1a2, 0x1481, 0xfc60, 0xb62b, 0x646d, 0x1913, 0x1, 0x1);
        gbc.writeMem(0x1a2, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x1481);
        EXPECT(gbc.pc(), 0x1a3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 58 00E8
        gbc.setState(0xd538, 0x6158, 0x38b0, 0x5b75, 0xd0a0, 0xd476, 0x0, 0x0);
        gbc.writeMem(0xd538, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x6158);
        EXPECT(gbc.pc(), 0xd539);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd538), 0x58);
        // 58 00E9
        gbc.setState(0x1034, 0x8830, 0x1b80, 0x39bb, 0xb6a2, 0x2a, 0x0, 0x0);
        gbc.writeMem(0x1034, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x8830);
        EXPECT(gbc.pc(), 0x1035);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 58 00EA
        gbc.setState(0x33fe, 0x4762, 0xd580, 0x9025, 0x2838, 0xb79e, 0x1, 0x1);
        gbc.writeMem(0x33fe, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x4762);
        EXPECT(gbc.pc(), 0x33ff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 58 00EB
        gbc.setState(0x88f8, 0xeb6, 0x4f30, 0x6da5, 0xd5fc, 0x3013, 0x1, 0x1);
        gbc.writeMem(0x88f8, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0xeb6);
        EXPECT(gbc.pc(), 0x88f9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x88f8), 0x58);
        // 58 00EC
        gbc.setState(0x7216, 0xcf7, 0x7260, 0xa840, 0x7229, 0xef6a, 0x0, 0x1);
        gbc.writeMem(0x7216, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xcf7);
        EXPECT(gbc.pc(), 0x7217);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 58 00ED
        gbc.setState(0x8cb4, 0x7c7d, 0xc3a0, 0x41a0, 0xbdd9, 0xc8d, 0x0, 0x1);
        gbc.writeMem(0x8cb4, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x7c7d);
        EXPECT(gbc.pc(), 0x8cb5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8cb4), 0x58);
        // 58 00EE
        gbc.setState(0x85b6, 0x282a, 0x6220, 0x6db6, 0x733e, 0x51d7, 0x0, 0x0);
        gbc.writeMem(0x85b6, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x282a);
        EXPECT(gbc.pc(), 0x85b7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x85b6), 0x58);
        // 58 00EF
        gbc.setState(0x4cdb, 0xb40f, 0x5f0, 0x16b8, 0x238c, 0x6c11, 0x1, 0x0);
        gbc.writeMem(0x4cdb, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0xb40f);
        EXPECT(gbc.pc(), 0x4cdc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 58 00F0
        gbc.setState(0x9351, 0x17b4, 0xef00, 0x43fd, 0xfe59, 0x464f, 0x1, 0x1);
        gbc.writeMem(0x9351, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x17b4);
        EXPECT(gbc.pc(), 0x9352);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9351), 0x58);
        // 58 00F1
        gbc.setState(0xe4c1, 0x5ead, 0x52e0, 0xdb02, 0xc6e2, 0xb828, 0x1, 0x0);
        gbc.writeMem(0xe4c1, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x5ead);
        EXPECT(gbc.pc(), 0xe4c2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe4c1), 0x58);
        // 58 00F2
        gbc.setState(0x1663, 0x9385, 0x9e60, 0x15c, 0x763e, 0x779, 0x1, 0x1);
        gbc.writeMem(0x1663, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x9385);
        EXPECT(gbc.pc(), 0x1664);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 58 00F3
        gbc.setState(0x4340, 0x5b9f, 0x4b90, 0xbe48, 0x73a, 0x464e, 0x0, 0x1);
        gbc.writeMem(0x4340, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x5b9f);
        EXPECT(gbc.pc(), 0x4341);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 58 00F4
        gbc.setState(0x9326, 0xad11, 0x3df0, 0xb77a, 0x6cdb, 0x3963, 0x0, 0x1);
        gbc.writeMem(0x9326, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0xad11);
        EXPECT(gbc.pc(), 0x9327);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9326), 0x58);
        // 58 00F5
        gbc.setState(0x6aed, 0x2f31, 0x20, 0xa20c, 0xcd6a, 0xce20, 0x0, 0x0);
        gbc.writeMem(0x6aed, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x2f31);
        EXPECT(gbc.pc(), 0x6aee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 58 00F6
        gbc.setState(0x6534, 0xa36b, 0xd70, 0xccf0, 0xfb60, 0xf15f, 0x1, 0x1);
        gbc.writeMem(0x6534, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0xa36b);
        EXPECT(gbc.pc(), 0x6535);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 58 00F7
        gbc.setState(0x593d, 0x7075, 0x3c50, 0x8fdb, 0x1574, 0x1755, 0x0, 0x1);
        gbc.writeMem(0x593d, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x7075);
        EXPECT(gbc.pc(), 0x593e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 58 00F8
        gbc.setState(0x7536, 0x924, 0x5430, 0x6109, 0xd36d, 0xc36f, 0x1, 0x1);
        gbc.writeMem(0x7536, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x924);
        EXPECT(gbc.pc(), 0x7537);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 58 00FA
        gbc.setState(0x8329, 0x95a3, 0xd060, 0xd66c, 0x2f3f, 0xbc7e, 0x1, 0x0);
        gbc.writeMem(0x8329, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x95a3);
        EXPECT(gbc.pc(), 0x832a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8329), 0x58);
        // 58 00FB
        gbc.setState(0x2dd9, 0x7a29, 0x4310, 0x505d, 0x199f, 0x3cac, 0x1, 0x1);
        gbc.writeMem(0x2dd9, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x7a29);
        EXPECT(gbc.pc(), 0x2dda);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 58 00FD
        gbc.setState(0xd7c0, 0x551d, 0x3570, 0x3d6e, 0xd59a, 0x19df, 0x0, 0x1);
        gbc.writeMem(0xd7c0, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x551d);
        EXPECT(gbc.pc(), 0xd7c1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd7c0), 0x58);
        // 58 00FE
        gbc.setState(0x493e, 0x9cd0, 0xedf0, 0xb127, 0x21c7, 0x9b0, 0x1, 0x0);
        gbc.writeMem(0x493e, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x9cd0);
        EXPECT(gbc.pc(), 0x493f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 58 00FF
        gbc.setState(0x1f1c, 0x7010, 0x6cc0, 0x4b8e, 0x6816, 0x6460, 0x0, 0x0);
        gbc.writeMem(0x1f1c, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x7010);
        EXPECT(gbc.pc(), 0x1f1d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 58 0100
        gbc.setState(0x8a2d, 0x89a2, 0xedf0, 0xd252, 0x66c6, 0xf03e, 0x0, 0x0);
        gbc.writeMem(0x8a2d, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x89a2);
        EXPECT(gbc.pc(), 0x8a2e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8a2d), 0x58);
        // 58 0101
        gbc.setState(0x77c2, 0x6f66, 0xe680, 0x262d, 0xdbf6, 0xc908, 0x1, 0x1);
        gbc.writeMem(0x77c2, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x6f66);
        EXPECT(gbc.pc(), 0x77c3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 58 0102
        gbc.setState(0xec2, 0xd31, 0x57f0, 0xf1b0, 0xa508, 0xa362, 0x1, 0x1);
        gbc.writeMem(0xec2, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xd31);
        EXPECT(gbc.pc(), 0xec3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 58 0103
        gbc.setState(0xee96, 0x475c, 0xf7a0, 0x6c5b, 0x696e, 0xba78, 0x1, 0x1);
        gbc.writeMem(0xee96, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x475c);
        EXPECT(gbc.pc(), 0xee97);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xee96), 0x58);
        // 58 0104
        gbc.setState(0xdf28, 0xcab4, 0x8df0, 0x367a, 0xe339, 0x7876, 0x0, 0x0);
        gbc.writeMem(0xdf28, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0xcab4);
        EXPECT(gbc.pc(), 0xdf29);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdf28), 0x58);
        // 58 0105
        gbc.setState(0xb4f6, 0xc68d, 0x8c90, 0x79ba, 0x31d6, 0x6db9, 0x1, 0x0);
        gbc.writeMem(0xb4f6, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0xc68d);
        EXPECT(gbc.pc(), 0xb4f7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb4f6), 0x58);
        // 58 0106
        gbc.setState(0x83c8, 0x77b3, 0xc360, 0x9a92, 0xcc6e, 0x270e, 0x0, 0x0);
        gbc.writeMem(0x83c8, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x77b3);
        EXPECT(gbc.pc(), 0x83c9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x83c8), 0x58);
        // 58 0107
        gbc.setState(0xac54, 0x218f, 0xb130, 0xd5a9, 0x4cf3, 0xc217, 0x0, 0x1);
        gbc.writeMem(0xac54, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x218f);
        EXPECT(gbc.pc(), 0xac55);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xac54), 0x58);
        // 58 0108
        gbc.setState(0x2256, 0x1634, 0xba90, 0x8b8d, 0x23b, 0xc46b, 0x1, 0x0);
        gbc.writeMem(0x2256, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x1634);
        EXPECT(gbc.pc(), 0x2257);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 58 0109
        gbc.setState(0x163b, 0x41b8, 0x65a0, 0xd498, 0xb90b, 0xb885, 0x0, 0x1);
        gbc.writeMem(0x163b, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x41b8);
        EXPECT(gbc.pc(), 0x163c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 58 010B
        gbc.setState(0x5413, 0x59a4, 0xebf0, 0x31b8, 0x630f, 0x7f43, 0x0, 0x0);
        gbc.writeMem(0x5413, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x59a4);
        EXPECT(gbc.pc(), 0x5414);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 58 010C
        gbc.setState(0x431c, 0x5f1b, 0xde50, 0x1ad1, 0x97f5, 0x4eb1, 0x0, 0x1);
        gbc.writeMem(0x431c, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x5f1b);
        EXPECT(gbc.pc(), 0x431d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 58 010D
        gbc.setState(0x6ac8, 0xd661, 0x1a10, 0xbf8f, 0x23cb, 0xe7c5, 0x0, 0x1);
        gbc.writeMem(0x6ac8, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0xd661);
        EXPECT(gbc.pc(), 0x6ac9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 58 010E
        gbc.setState(0x4660, 0x8ffb, 0xe0, 0x7cca, 0x97a8, 0x3633, 0x0, 0x1);
        gbc.writeMem(0x4660, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x8ffb);
        EXPECT(gbc.pc(), 0x4661);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 58 010F
        gbc.setState(0x5c82, 0x96e3, 0x7e30, 0x673f, 0xfd86, 0x18df, 0x1, 0x0);
        gbc.writeMem(0x5c82, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x96e3);
        EXPECT(gbc.pc(), 0x5c83);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 58 0110
        gbc.setState(0x9409, 0x2ce7, 0x7180, 0xa5d6, 0x4416, 0x2341, 0x0, 0x1);
        gbc.writeMem(0x9409, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x2ce7);
        EXPECT(gbc.pc(), 0x940a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9409), 0x58);
        // 58 0111
        gbc.setState(0x4e5e, 0x4992, 0x6bf0, 0x2252, 0x9755, 0xfb18, 0x0, 0x1);
        gbc.writeMem(0x4e5e, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x4992);
        EXPECT(gbc.pc(), 0x4e5f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 58 0112
        gbc.setState(0xfd9, 0xf657, 0xf100, 0xee52, 0x88d8, 0x1985, 0x0, 0x1);
        gbc.writeMem(0xfd9, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0xf657);
        EXPECT(gbc.pc(), 0xfda);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 58 0113
        gbc.setState(0xa10f, 0xcf69, 0x1a60, 0x9cb8, 0x1f6e, 0x9ab4, 0x1, 0x1);
        gbc.writeMem(0xa10f, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xcf69);
        EXPECT(gbc.pc(), 0xa110);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa10f), 0x58);
        // 58 0114
        gbc.setState(0xa49e, 0xc322, 0x2530, 0x2d48, 0x4a6d, 0xc826, 0x1, 0x1);
        gbc.writeMem(0xa49e, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0xc322);
        EXPECT(gbc.pc(), 0xa49f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa49e), 0x58);
        // 58 0115
        gbc.setState(0x3b10, 0x412d, 0xd560, 0xd7f0, 0x7dca, 0xdb1c, 0x1, 0x0);
        gbc.writeMem(0x3b10, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x412d);
        EXPECT(gbc.pc(), 0x3b11);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 58 0116
        gbc.setState(0xf7a, 0x35a4, 0x53d0, 0x13cb, 0xba9d, 0x2704, 0x0, 0x0);
        gbc.writeMem(0xf7a, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x35a4);
        EXPECT(gbc.pc(), 0xf7b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 58 0117
        gbc.setState(0x333a, 0x7f5, 0xe900, 0x6f8f, 0xb743, 0x2599, 0x1, 0x1);
        gbc.writeMem(0x333a, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x7f5);
        EXPECT(gbc.pc(), 0x333b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 58 0118
        gbc.setState(0xa3ac, 0xd935, 0xc500, 0xd52d, 0x8c83, 0x433c, 0x0, 0x1);
        gbc.writeMem(0xa3ac, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xd935);
        EXPECT(gbc.pc(), 0xa3ad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa3ac), 0x58);
        // 58 0119
        gbc.setState(0x4123, 0xa25, 0x4350, 0xf3f3, 0xe494, 0xedef, 0x1, 0x0);
        gbc.writeMem(0x4123, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0xa25);
        EXPECT(gbc.pc(), 0x4124);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 58 011A
        gbc.setState(0xb774, 0x12d6, 0x6800, 0x7632, 0x26d5, 0x3bad, 0x1, 0x1);
        gbc.writeMem(0xb774, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x12d6);
        EXPECT(gbc.pc(), 0xb775);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb774), 0x58);
        // 58 011B
        gbc.setState(0xbbe0, 0x8f4c, 0x7870, 0x388e, 0x3f0f, 0x5aa8, 0x0, 0x1);
        gbc.writeMem(0xbbe0, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x8f4c);
        EXPECT(gbc.pc(), 0xbbe1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbbe0), 0x58);
        // 58 011C
        gbc.setState(0xde05, 0x8d70, 0x2ae0, 0x88a6, 0xf49e, 0xb4bb, 0x1, 0x0);
        gbc.writeMem(0xde05, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x8d70);
        EXPECT(gbc.pc(), 0xde06);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xde05), 0x58);
        // 58 011D
        gbc.setState(0x9d12, 0x21e4, 0x4790, 0xaf25, 0xbe0b, 0x71f5, 0x0, 0x0);
        gbc.writeMem(0x9d12, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x21e4);
        EXPECT(gbc.pc(), 0x9d13);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9d12), 0x58);
        // 58 011E
        gbc.setState(0x6820, 0xba86, 0x15a0, 0xd470, 0xc14d, 0x2a49, 0x1, 0x0);
        gbc.writeMem(0x6820, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xba86);
        EXPECT(gbc.pc(), 0x6821);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 58 011F
        gbc.setState(0x9cbf, 0x745e, 0x7bb0, 0xdd1f, 0x2205, 0xb43e, 0x1, 0x0);
        gbc.writeMem(0x9cbf, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x745e);
        EXPECT(gbc.pc(), 0x9cc0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9cbf), 0x58);
        // 58 0120
        gbc.setState(0x78a3, 0xb8f7, 0x51b0, 0xb57, 0x401f, 0x7881, 0x1, 0x0);
        gbc.writeMem(0x78a3, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0xb8f7);
        EXPECT(gbc.pc(), 0x78a4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 58 0121
        gbc.setState(0x71eb, 0x45d8, 0x6960, 0x5db3, 0x796c, 0xce3b, 0x1, 0x1);
        gbc.writeMem(0x71eb, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x45d8);
        EXPECT(gbc.pc(), 0x71ec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 58 0122
        gbc.setState(0xa682, 0x70f7, 0x39d0, 0xfd4d, 0x8a4e, 0x8b37, 0x1, 0x0);
        gbc.writeMem(0xa682, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x70f7);
        EXPECT(gbc.pc(), 0xa683);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa682), 0x58);
        // 58 0123
        gbc.setState(0x4ad3, 0x527a, 0xbb70, 0x366c, 0x30a, 0x5f42, 0x0, 0x0);
        gbc.writeMem(0x4ad3, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x527a);
        EXPECT(gbc.pc(), 0x4ad4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 58 0124
        gbc.setState(0x6011, 0x882e, 0xdde0, 0xc9e0, 0x25f9, 0x3f1d, 0x1, 0x0);
        gbc.writeMem(0x6011, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x882e);
        EXPECT(gbc.pc(), 0x6012);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 58 0125
        gbc.setState(0x7f5a, 0x47bd, 0x810, 0x41e4, 0x67b, 0xdf68, 0x0, 0x1);
        gbc.writeMem(0x7f5a, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x47bd);
        EXPECT(gbc.pc(), 0x7f5b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 58 0126
        gbc.setState(0x3584, 0xe9d7, 0xa910, 0xbedd, 0xa3d8, 0x486f, 0x1, 0x1);
        gbc.writeMem(0x3584, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0xe9d7);
        EXPECT(gbc.pc(), 0x3585);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 58 0127
        gbc.setState(0x9639, 0xb4e8, 0xe360, 0x81e1, 0xc581, 0x9d2b, 0x1, 0x1);
        gbc.writeMem(0x9639, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0xb4e8);
        EXPECT(gbc.pc(), 0x963a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9639), 0x58);
        // 58 0128
        gbc.setState(0xcdac, 0x96f5, 0xdec0, 0x6d54, 0x4f4a, 0x2ffb, 0x1, 0x1);
        gbc.writeMem(0xcdac, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x96f5);
        EXPECT(gbc.pc(), 0xcdad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcdac), 0x58);
        // 58 0129
        gbc.setState(0x2f27, 0xb894, 0xa680, 0x7a71, 0xb427, 0xf742, 0x0, 0x1);
        gbc.writeMem(0x2f27, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0xb894);
        EXPECT(gbc.pc(), 0x2f28);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 58 012A
        gbc.setState(0x6b83, 0x77a5, 0x1000, 0x5063, 0xcb69, 0x75c2, 0x0, 0x0);
        gbc.writeMem(0x6b83, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x77a5);
        EXPECT(gbc.pc(), 0x6b84);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 58 012B
        gbc.setState(0xbdfa, 0x9258, 0xbe10, 0xc310, 0xa19c, 0x5795, 0x1, 0x0);
        gbc.writeMem(0xbdfa, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x9258);
        EXPECT(gbc.pc(), 0xbdfb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbdfa), 0x58);
        // 58 012C
        gbc.setState(0x41b8, 0xd174, 0x8cf0, 0xc43a, 0xe80b, 0xa4f3, 0x1, 0x0);
        gbc.writeMem(0x41b8, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0xd174);
        EXPECT(gbc.pc(), 0x41b9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 58 012D
        gbc.setState(0x683f, 0x7cd6, 0xad50, 0xa41e, 0xc953, 0x303, 0x0, 0x1);
        gbc.writeMem(0x683f, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x7cd6);
        EXPECT(gbc.pc(), 0x6840);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 58 012E
        gbc.setState(0x5311, 0xb2fd, 0x2ea0, 0xd602, 0xb095, 0xf521, 0x0, 0x0);
        gbc.writeMem(0x5311, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0xb2fd);
        EXPECT(gbc.pc(), 0x5312);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 58 012F
        gbc.setState(0x21b6, 0x4557, 0x2890, 0x959b, 0x8017, 0xeb13, 0x1, 0x0);
        gbc.writeMem(0x21b6, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x4557);
        EXPECT(gbc.pc(), 0x21b7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 58 0130
        gbc.setState(0x2054, 0x360a, 0xbc90, 0x2c38, 0x80d0, 0x13fd, 0x1, 0x1);
        gbc.writeMem(0x2054, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x360a);
        EXPECT(gbc.pc(), 0x2055);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 58 0131
        gbc.setState(0x6ca4, 0xd820, 0x5800, 0xfa28, 0x77ad, 0xd31, 0x0, 0x0);
        gbc.writeMem(0x6ca4, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xd820);
        EXPECT(gbc.pc(), 0x6ca5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 58 0132
        gbc.setState(0x9806, 0x119d, 0x47d0, 0xbc88, 0x1aa9, 0xc5b3, 0x0, 0x0);
        gbc.writeMem(0x9806, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x119d);
        EXPECT(gbc.pc(), 0x9807);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9806), 0x58);
        // 58 0134
        gbc.setState(0xd42e, 0xfb19, 0x2fe0, 0x8992, 0x989a, 0x7d92, 0x0, 0x1);
        gbc.writeMem(0xd42e, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0xfb19);
        EXPECT(gbc.pc(), 0xd42f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd42e), 0x58);
        // 58 0135
        gbc.setState(0xddbd, 0x7091, 0xa5c0, 0xd284, 0xc501, 0x654f, 0x0, 0x1);
        gbc.writeMem(0xddbd, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x7091);
        EXPECT(gbc.pc(), 0xddbe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xddbd), 0x58);
        // 58 0136
        gbc.setState(0x8695, 0xf88b, 0x3f0, 0x7583, 0x54d8, 0xc796, 0x1, 0x0);
        gbc.writeMem(0x8695, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0xf88b);
        EXPECT(gbc.pc(), 0x8696);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8695), 0x58);
        // 58 0137
        gbc.setState(0x76d0, 0x5690, 0xd6b0, 0x4a66, 0xf5d, 0xcacb, 0x1, 0x1);
        gbc.writeMem(0x76d0, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x5690);
        EXPECT(gbc.pc(), 0x76d1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 58 0138
        gbc.setState(0x2387, 0x9dec, 0xb7b0, 0x80a2, 0x6371, 0x11c8, 0x1, 0x0);
        gbc.writeMem(0x2387, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x9dec);
        EXPECT(gbc.pc(), 0x2388);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 58 013A
        gbc.setState(0x1b1, 0xa1e7, 0xb490, 0x300a, 0x6fe6, 0x9e97, 0x0, 0x1);
        gbc.writeMem(0x1b1, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0xa1e7);
        EXPECT(gbc.pc(), 0x1b2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 58 013B
        gbc.setState(0x1b1f, 0x192f, 0x2e60, 0xaea0, 0xde60, 0xa8c6, 0x0, 0x0);
        gbc.writeMem(0x1b1f, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x192f);
        EXPECT(gbc.pc(), 0x1b20);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 58 013C
        gbc.setState(0xd7f3, 0xc47c, 0x65a0, 0xeede, 0x80a1, 0xb960, 0x1, 0x1);
        gbc.writeMem(0xd7f3, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xc47c);
        EXPECT(gbc.pc(), 0xd7f4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd7f3), 0x58);
        // 58 013D
        gbc.setState(0x9090, 0xdc40, 0x8950, 0x3d9, 0x7564, 0x6ea7, 0x0, 0x1);
        gbc.writeMem(0x9090, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xdc40);
        EXPECT(gbc.pc(), 0x9091);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9090), 0x58);
        // 58 013E
        gbc.setState(0xec70, 0x7f39, 0xfc90, 0xd799, 0xa13f, 0x4ce4, 0x0, 0x1);
        gbc.writeMem(0xec70, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x7f39);
        EXPECT(gbc.pc(), 0xec71);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xec70), 0x58);
        // 58 013F
        gbc.setState(0xc233, 0x29c6, 0x7680, 0x5f28, 0x24fa, 0xc95d, 0x0, 0x0);
        gbc.writeMem(0xc233, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x29c6);
        EXPECT(gbc.pc(), 0xc234);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc233), 0x58);
        // 58 0140
        gbc.setState(0xb110, 0x89a6, 0x8df0, 0x1a96, 0xe468, 0xc281, 0x0, 0x1);
        gbc.writeMem(0xb110, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x89a6);
        EXPECT(gbc.pc(), 0xb111);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb110), 0x58);
        // 58 0141
        gbc.setState(0x5aed, 0xbc5, 0x1730, 0x9c4f, 0x8529, 0x78fc, 0x0, 0x1);
        gbc.writeMem(0x5aed, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0xbc5);
        EXPECT(gbc.pc(), 0x5aee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 58 0142
        gbc.setState(0x281c, 0x3b7f, 0x2f50, 0x266a, 0x5d59, 0x6ea7, 0x0, 0x1);
        gbc.writeMem(0x281c, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x3b7f);
        EXPECT(gbc.pc(), 0x281d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 58 0143
        gbc.setState(0xdd03, 0x6846, 0x4790, 0xcebe, 0x7b65, 0x6641, 0x1, 0x0);
        gbc.writeMem(0xdd03, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x6846);
        EXPECT(gbc.pc(), 0xdd04);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdd03), 0x58);
        // 58 0144
        gbc.setState(0x56f4, 0x2a2a, 0x8640, 0x769c, 0x322b, 0x2b38, 0x1, 0x0);
        gbc.writeMem(0x56f4, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x2a2a);
        EXPECT(gbc.pc(), 0x56f5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 58 0145
        gbc.setState(0x6091, 0xf95d, 0x9820, 0x35f7, 0x749b, 0x8465, 0x0, 0x0);
        gbc.writeMem(0x6091, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0xf95d);
        EXPECT(gbc.pc(), 0x6092);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 58 0146
        gbc.setState(0x6553, 0xbac8, 0xe2a0, 0xc31c, 0x4e6, 0xd924, 0x0, 0x0);
        gbc.writeMem(0x6553, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0xbac8);
        EXPECT(gbc.pc(), 0x6554);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 58 0147
        gbc.setState(0xdbbb, 0x258f, 0xda50, 0xc775, 0xb423, 0x41f1, 0x0, 0x1);
        gbc.writeMem(0xdbbb, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x258f);
        EXPECT(gbc.pc(), 0xdbbc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdbbb), 0x58);
        // 58 0148
        gbc.setState(0xae8f, 0x8d, 0x44e0, 0xcf04, 0x2c90, 0x2d9b, 0x0, 0x1);
        gbc.writeMem(0xae8f, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x8d);
        EXPECT(gbc.pc(), 0xae90);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xae8f), 0x58);
        // 58 0149
        gbc.setState(0xc720, 0x8ed1, 0xe530, 0xd284, 0x81e1, 0xbe83, 0x0, 0x1);
        gbc.writeMem(0xc720, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x8ed1);
        EXPECT(gbc.pc(), 0xc721);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc720), 0x58);
        // 58 014A
        gbc.setState(0x6ca6, 0x20e3, 0x67e0, 0xc304, 0xc265, 0x7d19, 0x0, 0x1);
        gbc.writeMem(0x6ca6, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x20e3);
        EXPECT(gbc.pc(), 0x6ca7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 58 014B
        gbc.setState(0x72a1, 0x4907, 0x8d0, 0x4372, 0xc059, 0xc96f, 0x0, 0x0);
        gbc.writeMem(0x72a1, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x4907);
        EXPECT(gbc.pc(), 0x72a2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 58 014C
        gbc.setState(0x83da, 0xba4b, 0xfb60, 0xdc5a, 0xf47d, 0x1346, 0x0, 0x1);
        gbc.writeMem(0x83da, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0xba4b);
        EXPECT(gbc.pc(), 0x83db);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x83da), 0x58);
        // 58 014D
        gbc.setState(0xe33a, 0x9824, 0x4c50, 0xe8fc, 0x6703, 0x2e4c, 0x1, 0x0);
        gbc.writeMem(0xe33a, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x9824);
        EXPECT(gbc.pc(), 0xe33b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe33a), 0x58);
        // 58 014E
        gbc.setState(0x604d, 0xa03e, 0xb670, 0xbb19, 0xab65, 0x84f3, 0x0, 0x0);
        gbc.writeMem(0x604d, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0xa03e);
        EXPECT(gbc.pc(), 0x604e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 58 0150
        gbc.setState(0x90b2, 0xd46a, 0x410, 0x345d, 0x53a8, 0x50fb, 0x1, 0x0);
        gbc.writeMem(0x90b2, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0xd46a);
        EXPECT(gbc.pc(), 0x90b3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x90b2), 0x58);
        // 58 0151
        gbc.setState(0xcb6f, 0x21a5, 0x6470, 0x7b7f, 0xe5c9, 0xe0a6, 0x1, 0x0);
        gbc.writeMem(0xcb6f, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x21a5);
        EXPECT(gbc.pc(), 0xcb70);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcb6f), 0x58);
        // 58 0152
        gbc.setState(0x3326, 0x3e87, 0xc9b0, 0xebaa, 0xf0c8, 0xcb7d, 0x0, 0x1);
        gbc.writeMem(0x3326, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x3e87);
        EXPECT(gbc.pc(), 0x3327);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 58 0153
        gbc.setState(0xc93f, 0x6190, 0xbab0, 0x6a05, 0x8a73, 0x96f4, 0x1, 0x0);
        gbc.writeMem(0xc93f, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x6190);
        EXPECT(gbc.pc(), 0xc940);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc93f), 0x58);
        // 58 0154
        gbc.setState(0x1c70, 0xca2d, 0xd8c0, 0x8187, 0x9e08, 0x7a3e, 0x0, 0x0);
        gbc.writeMem(0x1c70, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0xca2d);
        EXPECT(gbc.pc(), 0x1c71);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 58 0156
        gbc.setState(0x7168, 0x1407, 0xc950, 0x86ef, 0x5f86, 0x5d0d, 0x1, 0x1);
        gbc.writeMem(0x7168, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x1407);
        EXPECT(gbc.pc(), 0x7169);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 58 0157
        gbc.setState(0xcc3b, 0x2799, 0x8180, 0x4fdf, 0xead6, 0x3a60, 0x1, 0x1);
        gbc.writeMem(0xcc3b, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x2799);
        EXPECT(gbc.pc(), 0xcc3c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcc3b), 0x58);
        // 58 0158
        gbc.setState(0x2d43, 0x4b8b, 0x66f0, 0x1b2f, 0x1ef1, 0xd5eb, 0x1, 0x1);
        gbc.writeMem(0x2d43, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x4b8b);
        EXPECT(gbc.pc(), 0x2d44);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 58 0159
        gbc.setState(0x9233, 0xed09, 0xf1b0, 0x81f1, 0x63e2, 0xa3c, 0x0, 0x0);
        gbc.writeMem(0x9233, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xed09);
        EXPECT(gbc.pc(), 0x9234);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9233), 0x58);
        // 58 015A
        gbc.setState(0xae67, 0xf01b, 0x9420, 0x3a20, 0xf41c, 0xe34a, 0x0, 0x0);
        gbc.writeMem(0xae67, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xf01b);
        EXPECT(gbc.pc(), 0xae68);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xae67), 0x58);
        // 58 015B
        gbc.setState(0x4ea0, 0x15b7, 0x8920, 0xdfa2, 0xc44c, 0xbaac, 0x1, 0x1);
        gbc.writeMem(0x4ea0, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x15b7);
        EXPECT(gbc.pc(), 0x4ea1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 58 015C
        gbc.setState(0x7c85, 0x7b67, 0x1520, 0x287e, 0x8b7b, 0xa457, 0x0, 0x0);
        gbc.writeMem(0x7c85, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x7b67);
        EXPECT(gbc.pc(), 0x7c86);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 58 015D
        gbc.setState(0x52c8, 0x446f, 0x5890, 0x5c6e, 0x53f4, 0x5f, 0x0, 0x0);
        gbc.writeMem(0x52c8, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x446f);
        EXPECT(gbc.pc(), 0x52c9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 58 015E
        gbc.setState(0xec5, 0x6488, 0xd9a0, 0x4c58, 0x1ded, 0x11c, 0x1, 0x1);
        gbc.writeMem(0xec5, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x6488);
        EXPECT(gbc.pc(), 0xec6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 58 015F
        gbc.setState(0xa633, 0x6562, 0xd890, 0x1da0, 0xf692, 0x15, 0x1, 0x1);
        gbc.writeMem(0xa633, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x6562);
        EXPECT(gbc.pc(), 0xa634);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa633), 0x58);
        // 58 0160
        gbc.setState(0x2d35, 0xdbdb, 0x4e40, 0x96c9, 0xb8, 0xd930, 0x1, 0x0);
        gbc.writeMem(0x2d35, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0xdbdb);
        EXPECT(gbc.pc(), 0x2d36);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 58 0161
        gbc.setState(0x9e58, 0xfe81, 0x80b0, 0x7bc1, 0x133b, 0x6206, 0x0, 0x0);
        gbc.writeMem(0x9e58, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0xfe81);
        EXPECT(gbc.pc(), 0x9e59);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9e58), 0x58);
        // 58 0162
        gbc.setState(0x1f45, 0x434f, 0xf590, 0x3972, 0x4226, 0x7071, 0x0, 0x0);
        gbc.writeMem(0x1f45, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x434f);
        EXPECT(gbc.pc(), 0x1f46);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 58 0163
        gbc.setState(0x3fc0, 0x842e, 0xe5c0, 0xb40f, 0x28a4, 0xe48d, 0x1, 0x0);
        gbc.writeMem(0x3fc0, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x842e);
        EXPECT(gbc.pc(), 0x3fc1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 58 0164
        gbc.setState(0xa087, 0xd37c, 0x8620, 0x5838, 0xbd59, 0x9f2a, 0x0, 0x1);
        gbc.writeMem(0xa087, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xd37c);
        EXPECT(gbc.pc(), 0xa088);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa087), 0x58);
        // 58 0165
        gbc.setState(0xc945, 0x55a3, 0xd900, 0x1bff, 0x6822, 0x4e39, 0x0, 0x1);
        gbc.writeMem(0xc945, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x55a3);
        EXPECT(gbc.pc(), 0xc946);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc945), 0x58);
        // 58 0166
        gbc.setState(0x4bd4, 0x5800, 0xfd60, 0x5bfb, 0xb2d5, 0xdf5, 0x0, 0x0);
        gbc.writeMem(0x4bd4, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x5800);
        EXPECT(gbc.pc(), 0x4bd5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 58 0167
        gbc.setState(0xe76d, 0x90a9, 0x29f0, 0x4b3, 0x619e, 0xa635, 0x0, 0x1);
        gbc.writeMem(0xe76d, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x90a9);
        EXPECT(gbc.pc(), 0xe76e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe76d), 0x58);
        // 58 0168
        gbc.setState(0xee24, 0x6793, 0xb710, 0x8839, 0xb6c2, 0xfab7, 0x0, 0x1);
        gbc.writeMem(0xee24, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x6793);
        EXPECT(gbc.pc(), 0xee25);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xee24), 0x58);
        // 58 016A
        gbc.setState(0x3a27, 0x923f, 0x3a90, 0x8f04, 0xa399, 0x59c9, 0x0, 0x0);
        gbc.writeMem(0x3a27, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x923f);
        EXPECT(gbc.pc(), 0x3a28);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 58 016B
        gbc.setState(0x46f6, 0xaff0, 0x38e0, 0xd0cf, 0x6d83, 0x6cfc, 0x1, 0x1);
        gbc.writeMem(0x46f6, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0xaff0);
        EXPECT(gbc.pc(), 0x46f7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 58 016C
        gbc.setState(0x7584, 0xdb93, 0x78b0, 0xdc3b, 0x5c73, 0xb2c6, 0x1, 0x1);
        gbc.writeMem(0x7584, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0xdb93);
        EXPECT(gbc.pc(), 0x7585);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 58 016D
        gbc.setState(0x98d9, 0xf50c, 0x5710, 0xabf, 0x6fc, 0x4834, 0x0, 0x1);
        gbc.writeMem(0x98d9, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xf50c);
        EXPECT(gbc.pc(), 0x98da);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x98d9), 0x58);
        // 58 016E
        gbc.setState(0xa9ab, 0xa3f3, 0x30f0, 0xacb1, 0x2997, 0xe238, 0x1, 0x1);
        gbc.writeMem(0xa9ab, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0xa3f3);
        EXPECT(gbc.pc(), 0xa9ac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa9ab), 0x58);
        // 58 016F
        gbc.setState(0x6df9, 0xa035, 0x39c0, 0xc12b, 0x8fb, 0xa677, 0x0, 0x0);
        gbc.writeMem(0x6df9, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xa035);
        EXPECT(gbc.pc(), 0x6dfa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 58 0170
        gbc.setState(0x9340, 0x729, 0xc000, 0xb2c7, 0xad16, 0x6a9e, 0x1, 0x1);
        gbc.writeMem(0x9340, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x729);
        EXPECT(gbc.pc(), 0x9341);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9340), 0x58);
        // 58 0171
        gbc.setState(0x5fca, 0x9a4a, 0x5730, 0x2904, 0xe6b1, 0x1aea, 0x0, 0x0);
        gbc.writeMem(0x5fca, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x9a4a);
        EXPECT(gbc.pc(), 0x5fcb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 58 0172
        gbc.setState(0xbe4, 0xde8b, 0xb970, 0x245d, 0xaa7b, 0x50a6, 0x0, 0x1);
        gbc.writeMem(0xbe4, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0xde8b);
        EXPECT(gbc.pc(), 0xbe5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 58 0174
        gbc.setState(0xa3bb, 0xcbd6, 0x9560, 0xe7b4, 0xdf9b, 0xd219, 0x1, 0x1);
        gbc.writeMem(0xa3bb, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0xcbd6);
        EXPECT(gbc.pc(), 0xa3bc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa3bb), 0x58);
        // 58 0175
        gbc.setState(0x9742, 0xeb1d, 0x6b60, 0xee, 0x8a18, 0xd874, 0x0, 0x1);
        gbc.writeMem(0x9742, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xeb1d);
        EXPECT(gbc.pc(), 0x9743);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9742), 0x58);
        // 58 0176
        gbc.setState(0xec49, 0xc867, 0xb1e0, 0x5c07, 0xcd2e, 0x3b79, 0x1, 0x0);
        gbc.writeMem(0xec49, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xc867);
        EXPECT(gbc.pc(), 0xec4a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xec49), 0x58);
        // 58 0177
        gbc.setState(0x47da, 0x36a0, 0x9bf0, 0x1c04, 0x73c, 0x4fb3, 0x1, 0x0);
        gbc.writeMem(0x47da, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x36a0);
        EXPECT(gbc.pc(), 0x47db);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 58 0178
        gbc.setState(0x928b, 0xa715, 0x2c00, 0xe712, 0xeaef, 0x226d, 0x1, 0x0);
        gbc.writeMem(0x928b, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0xa715);
        EXPECT(gbc.pc(), 0x928c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x928b), 0x58);
        // 58 0179
        gbc.setState(0xe66e, 0x4707, 0x83e0, 0x1359, 0xd2a0, 0xf88e, 0x0, 0x0);
        gbc.writeMem(0xe66e, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x4707);
        EXPECT(gbc.pc(), 0xe66f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe66e), 0x58);
        // 58 017A
        gbc.setState(0xb009, 0xd349, 0x3c30, 0xb109, 0xe322, 0x7d41, 0x0, 0x0);
        gbc.writeMem(0xb009, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0xd349);
        EXPECT(gbc.pc(), 0xb00a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb009), 0x58);
        // 58 017B
        gbc.setState(0xa61f, 0x78f8, 0xd9d0, 0xefe, 0xdf12, 0xece5, 0x0, 0x0);
        gbc.writeMem(0xa61f, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x78f8);
        EXPECT(gbc.pc(), 0xa620);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa61f), 0x58);
        // 58 017C
        gbc.setState(0xc9b0, 0x37d, 0x4e80, 0x4c17, 0xbdb3, 0x47db, 0x1, 0x1);
        gbc.writeMem(0xc9b0, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x37d);
        EXPECT(gbc.pc(), 0xc9b1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc9b0), 0x58);
        // 58 017D
        gbc.setState(0x5adb, 0xa725, 0x8010, 0xb1fa, 0xa993, 0x915f, 0x0, 0x1);
        gbc.writeMem(0x5adb, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0xa725);
        EXPECT(gbc.pc(), 0x5adc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 58 017E
        gbc.setState(0xab18, 0xf176, 0xfd30, 0xd640, 0x6d, 0xe1b1, 0x1, 0x0);
        gbc.writeMem(0xab18, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0xf176);
        EXPECT(gbc.pc(), 0xab19);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xab18), 0x58);
        // 58 017F
        gbc.setState(0x6737, 0x1768, 0x6140, 0x156e, 0xfd13, 0x8442, 0x1, 0x0);
        gbc.writeMem(0x6737, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x1768);
        EXPECT(gbc.pc(), 0x6738);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 58 0180
        gbc.setState(0xc5b1, 0xe10d, 0x40, 0x8527, 0x12ae, 0xe699, 0x1, 0x1);
        gbc.writeMem(0xc5b1, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0xe10d);
        EXPECT(gbc.pc(), 0xc5b2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc5b1), 0x58);
        // 58 0181
        gbc.setState(0xe2ad, 0xdfe, 0xb6a0, 0xa64b, 0xd9ac, 0x68cc, 0x0, 0x1);
        gbc.writeMem(0xe2ad, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0xdfe);
        EXPECT(gbc.pc(), 0xe2ae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe2ad), 0x58);
        // 58 0182
        gbc.setState(0xe5e4, 0xacd4, 0x2a00, 0x6467, 0x82f9, 0x9b90, 0x0, 0x1);
        gbc.writeMem(0xe5e4, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0xacd4);
        EXPECT(gbc.pc(), 0xe5e5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe5e4), 0x58);
        // 58 0183
        gbc.setState(0x2a8c, 0x3904, 0x7180, 0x1606, 0xcd23, 0x729, 0x1, 0x0);
        gbc.writeMem(0x2a8c, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x3904);
        EXPECT(gbc.pc(), 0x2a8d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 58 0184
        gbc.setState(0x195a, 0xc807, 0x68f0, 0xc5e9, 0xdb9d, 0x43c2, 0x1, 0x1);
        gbc.writeMem(0x195a, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0xc807);
        EXPECT(gbc.pc(), 0x195b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 58 0185
        gbc.setState(0x6de6, 0xeeb4, 0xd0e0, 0x163d, 0xb011, 0x52d4, 0x0, 0x1);
        gbc.writeMem(0x6de6, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xeeb4);
        EXPECT(gbc.pc(), 0x6de7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 58 0186
        gbc.setState(0x2f8d, 0x3348, 0xbc90, 0xf0de, 0x1745, 0x8fc7, 0x1, 0x0);
        gbc.writeMem(0x2f8d, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x3348);
        EXPECT(gbc.pc(), 0x2f8e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 58 0187
        gbc.setState(0x89d9, 0xe232, 0x9e00, 0xfad0, 0xf924, 0x9b35, 0x1, 0x1);
        gbc.writeMem(0x89d9, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0xe232);
        EXPECT(gbc.pc(), 0x89da);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x89d9), 0x58);
        // 58 0188
        gbc.setState(0xdb84, 0x3d9a, 0x30c0, 0x9aad, 0xd85b, 0x41c9, 0x0, 0x1);
        gbc.writeMem(0xdb84, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x3d9a);
        EXPECT(gbc.pc(), 0xdb85);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdb84), 0x58);
        // 58 0189
        gbc.setState(0xc924, 0x2b32, 0x86b0, 0x71c0, 0xd327, 0x7547, 0x0, 0x1);
        gbc.writeMem(0xc924, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x2b32);
        EXPECT(gbc.pc(), 0xc925);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc924), 0x58);
        // 58 018A
        gbc.setState(0x7550, 0x5809, 0x410, 0xc6f9, 0xde62, 0xa2a3, 0x1, 0x0);
        gbc.writeMem(0x7550, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x5809);
        EXPECT(gbc.pc(), 0x7551);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 58 018B
        gbc.setState(0x6df6, 0x5ff2, 0xea40, 0xbbc0, 0xb55, 0xa01, 0x1, 0x1);
        gbc.writeMem(0x6df6, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x5ff2);
        EXPECT(gbc.pc(), 0x6df7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 58 018C
        gbc.setState(0x727a, 0x305, 0x3820, 0x106a, 0x42e3, 0xb1eb, 0x0, 0x0);
        gbc.writeMem(0x727a, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x305);
        EXPECT(gbc.pc(), 0x727b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 58 018D
        gbc.setState(0x240, 0xf749, 0x79a0, 0x8eef, 0x77dc, 0x288f, 0x0, 0x0);
        gbc.writeMem(0x240, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xf749);
        EXPECT(gbc.pc(), 0x241);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 58 018E
        gbc.setState(0x1845, 0x1654, 0xb890, 0xc670, 0x6d82, 0xd451, 0x0, 0x0);
        gbc.writeMem(0x1845, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x1654);
        EXPECT(gbc.pc(), 0x1846);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 58 018F
        gbc.setState(0xe7b8, 0x3f2f, 0x3990, 0x6cfd, 0x5b93, 0x5023, 0x1, 0x1);
        gbc.writeMem(0xe7b8, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x3f2f);
        EXPECT(gbc.pc(), 0xe7b9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe7b8), 0x58);
        // 58 0190
        gbc.setState(0x14fd, 0xffce, 0x5fe0, 0xd3d5, 0xfa6c, 0xf232, 0x0, 0x0);
        gbc.writeMem(0x14fd, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xffce);
        EXPECT(gbc.pc(), 0x14fe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 58 0191
        gbc.setState(0x3e37, 0xe31b, 0xbd50, 0x1e88, 0xb62d, 0x9121, 0x0, 0x1);
        gbc.writeMem(0x3e37, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0xe31b);
        EXPECT(gbc.pc(), 0x3e38);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 58 0192
        gbc.setState(0x4d33, 0x3f97, 0x9750, 0x30f4, 0xaa31, 0xcdce, 0x0, 0x1);
        gbc.writeMem(0x4d33, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x3f97);
        EXPECT(gbc.pc(), 0x4d34);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 58 0194
        gbc.setState(0x4301, 0x479e, 0x1bc0, 0xf47a, 0x4524, 0xe717, 0x1, 0x0);
        gbc.writeMem(0x4301, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x479e);
        EXPECT(gbc.pc(), 0x4302);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 58 0195
        gbc.setState(0xac57, 0xef15, 0xeca0, 0xe374, 0x14dc, 0x889a, 0x0, 0x1);
        gbc.writeMem(0xac57, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0xef15);
        EXPECT(gbc.pc(), 0xac58);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xac57), 0x58);
        // 58 0196
        gbc.setState(0xbe81, 0x84bf, 0x7a30, 0x8f6e, 0x4d7, 0x1472, 0x1, 0x1);
        gbc.writeMem(0xbe81, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x84bf);
        EXPECT(gbc.pc(), 0xbe82);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbe81), 0x58);
        // 58 0197
        gbc.setState(0x71d, 0x263f, 0x2160, 0x20e7, 0x2a05, 0xa880, 0x0, 0x0);
        gbc.writeMem(0x71d, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x263f);
        EXPECT(gbc.pc(), 0x71e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 58 0198
        gbc.setState(0x1157, 0xd535, 0x8380, 0xd09a, 0xc1ef, 0x2a67, 0x1, 0x0);
        gbc.writeMem(0x1157, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0xd535);
        EXPECT(gbc.pc(), 0x1158);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 58 0199
        gbc.setState(0x74dd, 0x184b, 0xc2a0, 0x8582, 0xbbd8, 0xf759, 0x0, 0x0);
        gbc.writeMem(0x74dd, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x184b);
        EXPECT(gbc.pc(), 0x74de);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 58 019A
        gbc.setState(0x5058, 0x8ac2, 0x8330, 0xf31b, 0xa0c3, 0x3d45, 0x0, 0x0);
        gbc.writeMem(0x5058, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x8ac2);
        EXPECT(gbc.pc(), 0x5059);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 58 019B
        gbc.setState(0x10fa, 0xc127, 0x110, 0xbfba, 0xaaab, 0xae3e, 0x1, 0x0);
        gbc.writeMem(0x10fa, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0xc127);
        EXPECT(gbc.pc(), 0x10fb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 58 019C
        gbc.setState(0xb701, 0xf21e, 0xd100, 0xd37f, 0xb089, 0x49e1, 0x0, 0x0);
        gbc.writeMem(0xb701, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xf21e);
        EXPECT(gbc.pc(), 0xb702);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb701), 0x58);
        // 58 019D
        gbc.setState(0x1299, 0x20a4, 0xaad0, 0x34e4, 0xef99, 0x6656, 0x1, 0x1);
        gbc.writeMem(0x1299, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x20a4);
        EXPECT(gbc.pc(), 0x129a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 58 019E
        gbc.setState(0x50c2, 0x374, 0x75d0, 0xcdf7, 0x8f2a, 0x23af, 0x1, 0x0);
        gbc.writeMem(0x50c2, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x374);
        EXPECT(gbc.pc(), 0x50c3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 58 019F
        gbc.setState(0x77fc, 0xf1e4, 0xb5f0, 0xdfb2, 0x347e, 0x1113, 0x0, 0x0);
        gbc.writeMem(0x77fc, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0xf1e4);
        EXPECT(gbc.pc(), 0x77fd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 58 01A0
        gbc.setState(0x1240, 0x9cd0, 0x7050, 0x9b7, 0xa54a, 0xf5a0, 0x1, 0x1);
        gbc.writeMem(0x1240, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x9cd0);
        EXPECT(gbc.pc(), 0x1241);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 58 01A1
        gbc.setState(0x5ef2, 0xd2be, 0xd680, 0x4a5f, 0x7308, 0x765, 0x0, 0x1);
        gbc.writeMem(0x5ef2, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0xd2be);
        EXPECT(gbc.pc(), 0x5ef3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 58 01A2
        gbc.setState(0xb7ed, 0xd46d, 0xf8f0, 0x89d9, 0xcbb1, 0x310a, 0x0, 0x0);
        gbc.writeMem(0xb7ed, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0xd46d);
        EXPECT(gbc.pc(), 0xb7ee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb7ed), 0x58);
        // 58 01A3
        gbc.setState(0x9470, 0x2ee0, 0x4830, 0x6ea7, 0x7ad0, 0xcce8, 0x0, 0x0);
        gbc.writeMem(0x9470, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x2ee0);
        EXPECT(gbc.pc(), 0x9471);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9470), 0x58);
        // 58 01A4
        gbc.setState(0x2a39, 0x7fa1, 0x97d0, 0xb26d, 0xf634, 0xe06a, 0x1, 0x1);
        gbc.writeMem(0x2a39, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x7fa1);
        EXPECT(gbc.pc(), 0x2a3a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 58 01A5
        gbc.setState(0x8ea3, 0x1f28, 0x9030, 0xb536, 0xf07a, 0xb7e5, 0x0, 0x1);
        gbc.writeMem(0x8ea3, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x1f28);
        EXPECT(gbc.pc(), 0x8ea4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8ea3), 0x58);
        // 58 01A6
        gbc.setState(0x38d1, 0xd311, 0xca10, 0x3f5b, 0xb58, 0xf8ed, 0x1, 0x1);
        gbc.writeMem(0x38d1, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0xd311);
        EXPECT(gbc.pc(), 0x38d2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 58 01A7
        gbc.setState(0xd6a6, 0x364e, 0xccc0, 0x14c1, 0x6521, 0xd0b0, 0x0, 0x1);
        gbc.writeMem(0xd6a6, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x364e);
        EXPECT(gbc.pc(), 0xd6a7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd6a6), 0x58);
        // 58 01A8
        gbc.setState(0xd856, 0xca59, 0x4710, 0xc69, 0xae6a, 0x522a, 0x0, 0x1);
        gbc.writeMem(0xd856, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xca59);
        EXPECT(gbc.pc(), 0xd857);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd856), 0x58);
        // 58 01A9
        gbc.setState(0x30e3, 0xc842, 0x5130, 0xaa21, 0x57b1, 0x4870, 0x0, 0x1);
        gbc.writeMem(0x30e3, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0xc842);
        EXPECT(gbc.pc(), 0x30e4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 58 01AA
        gbc.setState(0x199e, 0x40e8, 0x68b0, 0xa0a2, 0x293e, 0x8421, 0x1, 0x1);
        gbc.writeMem(0x199e, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x40e8);
        EXPECT(gbc.pc(), 0x199f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 58 01AB
        gbc.setState(0x6429, 0x1d24, 0x7e70, 0xbce1, 0xba7c, 0x7f7d, 0x0, 0x1);
        gbc.writeMem(0x6429, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x1d24);
        EXPECT(gbc.pc(), 0x642a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 58 01AC
        gbc.setState(0xa9bd, 0xe0f4, 0xfab0, 0xd8d8, 0xd994, 0x980f, 0x1, 0x0);
        gbc.writeMem(0xa9bd, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0xe0f4);
        EXPECT(gbc.pc(), 0xa9be);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa9bd), 0x58);
        // 58 01AD
        gbc.setState(0x1fee, 0x42df, 0xe2a0, 0x772f, 0x6860, 0xec31, 0x0, 0x0);
        gbc.writeMem(0x1fee, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x42df);
        EXPECT(gbc.pc(), 0x1fef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 58 01AE
        gbc.setState(0xddbc, 0x785b, 0xe0f0, 0x60be, 0xae17, 0xd626, 0x0, 0x1);
        gbc.writeMem(0xddbc, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x785b);
        EXPECT(gbc.pc(), 0xddbd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xddbc), 0x58);
        // 58 01AF
        gbc.setState(0xe29b, 0x40e2, 0x33f0, 0x2e9c, 0xd273, 0x1654, 0x0, 0x0);
        gbc.writeMem(0xe29b, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x40e2);
        EXPECT(gbc.pc(), 0xe29c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe29b), 0x58);
        // 58 01B0
        gbc.setState(0xda66, 0x108c, 0x4ba0, 0x41d, 0x2f7a, 0x67f8, 0x0, 0x0);
        gbc.writeMem(0xda66, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x108c);
        EXPECT(gbc.pc(), 0xda67);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xda66), 0x58);
        // 58 01B1
        gbc.setState(0xdd61, 0x4483, 0x7030, 0x95a0, 0x9d41, 0x4d33, 0x1, 0x0);
        gbc.writeMem(0xdd61, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x4483);
        EXPECT(gbc.pc(), 0xdd62);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdd61), 0x58);
        // 58 01B2
        gbc.setState(0x9575, 0x71bc, 0x68e0, 0x1a78, 0xec89, 0x5da5, 0x1, 0x1);
        gbc.writeMem(0x9575, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x71bc);
        EXPECT(gbc.pc(), 0x9576);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9575), 0x58);
        // 58 01B3
        gbc.setState(0xae81, 0x4343, 0x84e0, 0x6896, 0x8c85, 0xe8bf, 0x1, 0x1);
        gbc.writeMem(0xae81, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x4343);
        EXPECT(gbc.pc(), 0xae82);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xae81), 0x58);
        // 58 01B4
        gbc.setState(0xe310, 0xfbdc, 0x6640, 0x36d9, 0x3ad1, 0x7ccb, 0x1, 0x1);
        gbc.writeMem(0xe310, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0xfbdc);
        EXPECT(gbc.pc(), 0xe311);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe310), 0x58);
        // 58 01B5
        gbc.setState(0xf, 0x971a, 0x3c20, 0xf4d8, 0x9f95, 0x84f3, 0x0, 0x1);
        gbc.writeMem(0xf, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x971a);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 58 01B6
        gbc.setState(0x85c4, 0xb70c, 0xbc30, 0x8713, 0xea96, 0x8b55, 0x1, 0x0);
        gbc.writeMem(0x85c4, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0xb70c);
        EXPECT(gbc.pc(), 0x85c5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x85c4), 0x58);
        // 58 01B7
        gbc.setState(0x3a3b, 0x404f, 0x1100, 0x2798, 0xd67b, 0xb894, 0x1, 0x0);
        gbc.writeMem(0x3a3b, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x404f);
        EXPECT(gbc.pc(), 0x3a3c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 58 01B8
        gbc.setState(0xace5, 0x97a3, 0x7c70, 0xab06, 0x4807, 0xdd65, 0x0, 0x0);
        gbc.writeMem(0xace5, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x97a3);
        EXPECT(gbc.pc(), 0xace6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xace5), 0x58);
        // 58 01B9
        gbc.setState(0xab80, 0xc433, 0xa980, 0x1cc1, 0x22e4, 0x7d70, 0x1, 0x1);
        gbc.writeMem(0xab80, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0xc433);
        EXPECT(gbc.pc(), 0xab81);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xab80), 0x58);
        // 58 01BA
        gbc.setState(0xefd4, 0x69f9, 0xe440, 0x1d1d, 0x5288, 0x5f58, 0x1, 0x1);
        gbc.writeMem(0xefd4, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x69f9);
        EXPECT(gbc.pc(), 0xefd5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xefd4), 0x58);
        // 58 01BB
        gbc.setState(0x3e4f, 0x8816, 0x5030, 0xdafc, 0xfa9f, 0x25a7, 0x1, 0x1);
        gbc.writeMem(0x3e4f, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x8816);
        EXPECT(gbc.pc(), 0x3e50);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 58 01BC
        gbc.setState(0xb29c, 0xbff, 0xd640, 0x4c74, 0xe72, 0xb78d, 0x1, 0x0);
        gbc.writeMem(0xb29c, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0xbff);
        EXPECT(gbc.pc(), 0xb29d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb29c), 0x58);
        // 58 01BD
        gbc.setState(0xaf41, 0x759f, 0xcb0, 0x7c36, 0x6ffd, 0xee28, 0x0, 0x1);
        gbc.writeMem(0xaf41, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x759f);
        EXPECT(gbc.pc(), 0xaf42);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaf41), 0x58);
        // 58 01BE
        gbc.setState(0x84cd, 0xcad, 0x1b00, 0x220b, 0x27db, 0xb0e3, 0x0, 0x1);
        gbc.writeMem(0x84cd, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xcad);
        EXPECT(gbc.pc(), 0x84ce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x84cd), 0x58);
        // 58 01BF
        gbc.setState(0x628e, 0x282, 0xe820, 0xe809, 0x6734, 0xd158, 0x1, 0x1);
        gbc.writeMem(0x628e, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x282);
        EXPECT(gbc.pc(), 0x628f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 58 01C0
        gbc.setState(0x4273, 0xa7f6, 0x97b0, 0xd391, 0x7f7c, 0xf99e, 0x0, 0x1);
        gbc.writeMem(0x4273, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0xa7f6);
        EXPECT(gbc.pc(), 0x4274);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 58 01C1
        gbc.setState(0x8677, 0xa794, 0xc770, 0x10c4, 0x6d98, 0x5762, 0x1, 0x0);
        gbc.writeMem(0x8677, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xa794);
        EXPECT(gbc.pc(), 0x8678);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8677), 0x58);
        // 58 01C2
        gbc.setState(0x7a82, 0x5436, 0x6a10, 0x292c, 0x32ef, 0xa30f, 0x0, 0x1);
        gbc.writeMem(0x7a82, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x5436);
        EXPECT(gbc.pc(), 0x7a83);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 58 01C3
        gbc.setState(0xbd57, 0xe139, 0xed10, 0x45da, 0x7c5b, 0x8345, 0x0, 0x0);
        gbc.writeMem(0xbd57, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0xe139);
        EXPECT(gbc.pc(), 0xbd58);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbd57), 0x58);
        // 58 01C4
        gbc.setState(0x21d4, 0xe2f4, 0xb9a0, 0xf0c8, 0x5dc7, 0xbeb, 0x0, 0x1);
        gbc.writeMem(0x21d4, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0xe2f4);
        EXPECT(gbc.pc(), 0x21d5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 58 01C5
        gbc.setState(0x3356, 0x94b0, 0xeec0, 0x7707, 0xe0bd, 0x5fa0, 0x1, 0x1);
        gbc.writeMem(0x3356, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x94b0);
        EXPECT(gbc.pc(), 0x3357);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 58 01C6
        gbc.setState(0xbb07, 0x2432, 0xac0, 0x47f4, 0x55fe, 0xc821, 0x1, 0x0);
        gbc.writeMem(0xbb07, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x2432);
        EXPECT(gbc.pc(), 0xbb08);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbb07), 0x58);
        // 58 01C7
        gbc.setState(0x8a26, 0xfa8c, 0x39c0, 0xbd04, 0xb879, 0x8a46, 0x1, 0x0);
        gbc.writeMem(0x8a26, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0xfa8c);
        EXPECT(gbc.pc(), 0x8a27);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8a26), 0x58);
        // 58 01C8
        gbc.setState(0xaca8, 0x521, 0x8880, 0x27c7, 0x64fe, 0x8c16, 0x1, 0x0);
        gbc.writeMem(0xaca8, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x521);
        EXPECT(gbc.pc(), 0xaca9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaca8), 0x58);
        // 58 01C9
        gbc.setState(0x8b5d, 0x6f4a, 0x69d0, 0x29eb, 0xe59c, 0xef66, 0x0, 0x1);
        gbc.writeMem(0x8b5d, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x6f4a);
        EXPECT(gbc.pc(), 0x8b5e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b5d), 0x58);
        // 58 01CA
        gbc.setState(0x2156, 0x2553, 0x6a10, 0x246e, 0x657d, 0xe1e2, 0x0, 0x1);
        gbc.writeMem(0x2156, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x2553);
        EXPECT(gbc.pc(), 0x2157);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 58 01CB
        gbc.setState(0x5ee7, 0x90c2, 0x8880, 0x68c4, 0x11f7, 0xcaec, 0x0, 0x0);
        gbc.writeMem(0x5ee7, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x90c2);
        EXPECT(gbc.pc(), 0x5ee8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 58 01CC
        gbc.setState(0x485f, 0xc5c1, 0x1780, 0x18e8, 0xc81f, 0x8fdd, 0x1, 0x0);
        gbc.writeMem(0x485f, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0xc5c1);
        EXPECT(gbc.pc(), 0x4860);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 58 01CD
        gbc.setState(0x3d8f, 0x2747, 0xbf50, 0x46e4, 0xc47b, 0x7df0, 0x0, 0x0);
        gbc.writeMem(0x3d8f, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x2747);
        EXPECT(gbc.pc(), 0x3d90);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 58 01CE
        gbc.setState(0x2036, 0x43f8, 0xb550, 0x50d7, 0x7302, 0x4666, 0x0, 0x0);
        gbc.writeMem(0x2036, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x43f8);
        EXPECT(gbc.pc(), 0x2037);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 58 01CF
        gbc.setState(0x9cd7, 0xdffb, 0x3990, 0xa5c2, 0x45fc, 0xc1be, 0x0, 0x1);
        gbc.writeMem(0x9cd7, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0xdffb);
        EXPECT(gbc.pc(), 0x9cd8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9cd7), 0x58);
        // 58 01D0
        gbc.setState(0x6652, 0xaf7c, 0xa320, 0xf53b, 0x373d, 0x41d5, 0x1, 0x1);
        gbc.writeMem(0x6652, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0xaf7c);
        EXPECT(gbc.pc(), 0x6653);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 58 01D1
        gbc.setState(0x59f7, 0xd848, 0x9270, 0x96b0, 0x89c1, 0xfb1d, 0x1, 0x1);
        gbc.writeMem(0x59f7, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0xd848);
        EXPECT(gbc.pc(), 0x59f8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 58 01D2
        gbc.setState(0xdb6b, 0xc3dc, 0xdf90, 0x2039, 0x9c8d, 0xa586, 0x1, 0x0);
        gbc.writeMem(0xdb6b, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0xc3dc);
        EXPECT(gbc.pc(), 0xdb6c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdb6b), 0x58);
        // 58 01D3
        gbc.setState(0x6004, 0xa769, 0xe6e0, 0xe415, 0x9c11, 0x3e6c, 0x0, 0x0);
        gbc.writeMem(0x6004, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xa769);
        EXPECT(gbc.pc(), 0x6005);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 58 01D4
        gbc.setState(0x3b40, 0x4a0d, 0x76d0, 0xb137, 0x4053, 0x2db3, 0x0, 0x1);
        gbc.writeMem(0x3b40, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x4a0d);
        EXPECT(gbc.pc(), 0x3b41);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 58 01D5
        gbc.setState(0x3267, 0x4090, 0xb890, 0xda56, 0x441b, 0xb13d, 0x1, 0x0);
        gbc.writeMem(0x3267, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x4090);
        EXPECT(gbc.pc(), 0x3268);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 58 01D6
        gbc.setState(0x58e8, 0xcb0c, 0xed10, 0x7d9f, 0xae5d, 0xd029, 0x1, 0x0);
        gbc.writeMem(0x58e8, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0xcb0c);
        EXPECT(gbc.pc(), 0x58e9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 58 01D9
        gbc.setState(0x3270, 0x97e1, 0x9270, 0xa55d, 0x8089, 0x3539, 0x0, 0x0);
        gbc.writeMem(0x3270, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x97e1);
        EXPECT(gbc.pc(), 0x3271);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 58 01DB
        gbc.setState(0x36bf, 0x4c3d, 0x4310, 0x4288, 0xaeb0, 0x4af0, 0x0, 0x1);
        gbc.writeMem(0x36bf, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x4c3d);
        EXPECT(gbc.pc(), 0x36c0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 58 01DC
        gbc.setState(0xd069, 0x6eec, 0x7670, 0x9fdd, 0x10dd, 0xa53f, 0x0, 0x1);
        gbc.writeMem(0xd069, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x6eec);
        EXPECT(gbc.pc(), 0xd06a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd069), 0x58);
        // 58 01DD
        gbc.setState(0x5fa0, 0xb98f, 0xdbe0, 0xd2f8, 0xa1eb, 0x3672, 0x0, 0x0);
        gbc.writeMem(0x5fa0, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0xb98f);
        EXPECT(gbc.pc(), 0x5fa1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 58 01DE
        gbc.setState(0x45bc, 0xe1bc, 0x3370, 0x2e8d, 0xd1f5, 0x2722, 0x0, 0x1);
        gbc.writeMem(0x45bc, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0xe1bc);
        EXPECT(gbc.pc(), 0x45bd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 58 01DF
        gbc.setState(0x8114, 0xcc44, 0xb3d0, 0x6242, 0x1bbc, 0xd2f2, 0x0, 0x0);
        gbc.writeMem(0x8114, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0xcc44);
        EXPECT(gbc.pc(), 0x8115);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8114), 0x58);
        // 58 01E0
        gbc.setState(0x1306, 0xf9f, 0xcb20, 0xad28, 0xe036, 0x9dd7, 0x1, 0x0);
        gbc.writeMem(0x1306, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0xf9f);
        EXPECT(gbc.pc(), 0x1307);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 58 01E1
        gbc.setState(0x1346, 0x5536, 0xbc00, 0x5070, 0x8b29, 0x8d24, 0x1, 0x1);
        gbc.writeMem(0x1346, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x5536);
        EXPECT(gbc.pc(), 0x1347);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 58 01E3
        gbc.setState(0x857f, 0x8e7b, 0x88a0, 0x318a, 0xe1be, 0xc105, 0x0, 0x1);
        gbc.writeMem(0x857f, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x8e7b);
        EXPECT(gbc.pc(), 0x8580);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x857f), 0x58);
        // 58 01E4
        gbc.setState(0x643b, 0x8f86, 0xd880, 0xe1bf, 0x5e, 0x142d, 0x1, 0x1);
        gbc.writeMem(0x643b, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x8f86);
        EXPECT(gbc.pc(), 0x643c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 58 01E5
        gbc.setState(0x92c8, 0xc9b3, 0x6740, 0x5380, 0xf569, 0x770f, 0x0, 0x1);
        gbc.writeMem(0x92c8, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0xc9b3);
        EXPECT(gbc.pc(), 0x92c9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x92c8), 0x58);
        // 58 01E7
        gbc.setState(0x53f7, 0x3952, 0xbc60, 0x289b, 0x2d, 0x69f5, 0x1, 0x0);
        gbc.writeMem(0x53f7, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x3952);
        EXPECT(gbc.pc(), 0x53f8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 58 01E8
        gbc.setState(0x6caa, 0xc3ec, 0xd760, 0x7181, 0x8993, 0xcdf9, 0x0, 0x1);
        gbc.writeMem(0x6caa, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xc3ec);
        EXPECT(gbc.pc(), 0x6cab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 58 01E9
        gbc.setState(0xca3f, 0xa726, 0xf7c0, 0x6880, 0x1a6c, 0x8ab, 0x1, 0x0);
        gbc.writeMem(0xca3f, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xa726);
        EXPECT(gbc.pc(), 0xca40);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xca3f), 0x58);
        // 58 01EA
        gbc.setState(0x3371, 0x5f11, 0xa150, 0xc61, 0x5e58, 0x6b73, 0x1, 0x1);
        gbc.writeMem(0x3371, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x5f11);
        EXPECT(gbc.pc(), 0x3372);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 58 01EB
        gbc.setState(0xba95, 0xa99e, 0x97c0, 0x7b85, 0x1f90, 0xcbec, 0x0, 0x0);
        gbc.writeMem(0xba95, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0xa99e);
        EXPECT(gbc.pc(), 0xba96);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xba95), 0x58);
        // 58 01EC
        gbc.setState(0xbeb3, 0x1c41, 0x5590, 0xf68c, 0x8669, 0x7a22, 0x0, 0x1);
        gbc.writeMem(0xbeb3, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x1c41);
        EXPECT(gbc.pc(), 0xbeb4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbeb3), 0x58);
        // 58 01ED
        gbc.setState(0x4b47, 0x471a, 0xe300, 0x70cc, 0x8213, 0xecd3, 0x0, 0x0);
        gbc.writeMem(0x4b47, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x471a);
        EXPECT(gbc.pc(), 0x4b48);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 58 01EF
        gbc.setState(0x7697, 0x716b, 0x2630, 0x7bef, 0xb767, 0x535e, 0x0, 0x0);
        gbc.writeMem(0x7697, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x716b);
        EXPECT(gbc.pc(), 0x7698);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 58 01F0
        gbc.setState(0x928, 0x9a4c, 0xe2a0, 0x2619, 0x1f0f, 0x5d85, 0x1, 0x0);
        gbc.writeMem(0x928, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x9a4c);
        EXPECT(gbc.pc(), 0x929);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 58 01F1
        gbc.setState(0xac76, 0x5329, 0xc5a0, 0x7358, 0xbb48, 0x94e2, 0x0, 0x1);
        gbc.writeMem(0xac76, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x5329);
        EXPECT(gbc.pc(), 0xac77);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xac76), 0x58);
        // 58 01F2
        gbc.setState(0x140f, 0xbf02, 0x3530, 0x4f22, 0x6c8b, 0xc962, 0x0, 0x1);
        gbc.writeMem(0x140f, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xbf02);
        EXPECT(gbc.pc(), 0x1410);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 58 01F3
        gbc.setState(0x9719, 0xa955, 0xbf80, 0x5173, 0x3545, 0x598, 0x1, 0x1);
        gbc.writeMem(0x9719, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xa955);
        EXPECT(gbc.pc(), 0x971a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9719), 0x58);
        // 58 01F4
        gbc.setState(0x6d45, 0xf893, 0x26f0, 0xdd98, 0x309b, 0xa6a7, 0x0, 0x0);
        gbc.writeMem(0x6d45, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xf893);
        EXPECT(gbc.pc(), 0x6d46);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 58 01F5
        gbc.setState(0x1fa3, 0xcc21, 0x3160, 0xdbdc, 0xc9c, 0xe9fd, 0x0, 0x1);
        gbc.writeMem(0x1fa3, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xcc21);
        EXPECT(gbc.pc(), 0x1fa4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 58 01F6
        gbc.setState(0x51ce, 0x7b2c, 0xdc30, 0xe81a, 0xa37b, 0xfcb1, 0x0, 0x1);
        gbc.writeMem(0x51ce, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x7b2c);
        EXPECT(gbc.pc(), 0x51cf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 58 01F7
        gbc.setState(0x2b2e, 0xaebd, 0x3db0, 0xfef8, 0x9c38, 0x6405, 0x1, 0x0);
        gbc.writeMem(0x2b2e, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0xaebd);
        EXPECT(gbc.pc(), 0x2b2f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 58 01F8
        gbc.setState(0x7a88, 0x2ef9, 0xdc40, 0x6e8e, 0x40a, 0x1e40, 0x1, 0x0);
        gbc.writeMem(0x7a88, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x2ef9);
        EXPECT(gbc.pc(), 0x7a89);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 58 01F9
        gbc.setState(0xb2d1, 0x8c2f, 0xa10, 0x8f79, 0x1128, 0x1eaf, 0x0, 0x1);
        gbc.writeMem(0xb2d1, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x8c2f);
        EXPECT(gbc.pc(), 0xb2d2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb2d1), 0x58);
        // 58 01FA
        gbc.setState(0x464f, 0x67fd, 0x53b0, 0x84d8, 0x7434, 0xda44, 0x0, 0x1);
        gbc.writeMem(0x464f, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x67fd);
        EXPECT(gbc.pc(), 0x4650);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 58 01FB
        gbc.setState(0xcfd1, 0x6aa9, 0xf5f0, 0x7778, 0xc511, 0xdb81, 0x0, 0x1);
        gbc.writeMem(0xcfd1, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x6aa9);
        EXPECT(gbc.pc(), 0xcfd2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcfd1), 0x58);
        // 58 01FC
        gbc.setState(0xd4a2, 0xc125, 0xfb50, 0xbd50, 0xb323, 0xb5a8, 0x0, 0x0);
        gbc.writeMem(0xd4a2, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0xc125);
        EXPECT(gbc.pc(), 0xd4a3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd4a2), 0x58);
        // 58 01FD
        gbc.setState(0x3d52, 0x7faf, 0xaca0, 0xfff4, 0xd6c9, 0x29e4, 0x1, 0x0);
        gbc.writeMem(0x3d52, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x7faf);
        EXPECT(gbc.pc(), 0x3d53);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 58 01FE
        gbc.setState(0x2bcf, 0x19af, 0x6550, 0x4a54, 0x266b, 0xe658, 0x1, 0x1);
        gbc.writeMem(0x2bcf, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x19af);
        EXPECT(gbc.pc(), 0x2bd0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 58 01FF
        gbc.setState(0x36f7, 0xb3aa, 0x67d0, 0xf5ad, 0xa88e, 0x4ebd, 0x1, 0x0);
        gbc.writeMem(0x36f7, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0xb3aa);
        EXPECT(gbc.pc(), 0x36f8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 58 0200
        gbc.setState(0xd6ae, 0x324c, 0xfa50, 0x8e73, 0x2d72, 0xed66, 0x0, 0x1);
        gbc.writeMem(0xd6ae, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x324c);
        EXPECT(gbc.pc(), 0xd6af);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd6ae), 0x58);
        // 58 0201
        gbc.setState(0x94e7, 0x56cc, 0xadc0, 0xa835, 0x3765, 0xac22, 0x1, 0x1);
        gbc.writeMem(0x94e7, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x56cc);
        EXPECT(gbc.pc(), 0x94e8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x94e7), 0x58);
        // 58 0202
        gbc.setState(0x542a, 0xde21, 0xd290, 0xc0ed, 0x1dc7, 0x4310, 0x1, 0x0);
        gbc.writeMem(0x542a, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xde21);
        EXPECT(gbc.pc(), 0x542b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 58 0203
        gbc.setState(0xb034, 0xad74, 0xaba0, 0x9da3, 0x6534, 0x26ad, 0x1, 0x1);
        gbc.writeMem(0xb034, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0xad74);
        EXPECT(gbc.pc(), 0xb035);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb034), 0x58);
        // 58 0204
        gbc.setState(0x8011, 0x7782, 0x9c40, 0xdc6a, 0xc50f, 0xa9b, 0x1, 0x0);
        gbc.writeMem(0x8011, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x7782);
        EXPECT(gbc.pc(), 0x8012);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8011), 0x58);
        // 58 0205
        gbc.setState(0x36aa, 0xce8, 0x4400, 0x1857, 0x9a66, 0xb70f, 0x0, 0x1);
        gbc.writeMem(0x36aa, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0xce8);
        EXPECT(gbc.pc(), 0x36ab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 58 0206
        gbc.setState(0x1b32, 0x25b4, 0x4160, 0xce8d, 0xb9d8, 0x500b, 0x1, 0x1);
        gbc.writeMem(0x1b32, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x25b4);
        EXPECT(gbc.pc(), 0x1b33);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 58 0207
        gbc.setState(0x9d6a, 0xe5c3, 0x6be0, 0x3dae, 0x2704, 0x348c, 0x1, 0x0);
        gbc.writeMem(0x9d6a, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0xe5c3);
        EXPECT(gbc.pc(), 0x9d6b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9d6a), 0x58);
        // 58 0208
        gbc.setState(0xa25f, 0x8a92, 0xc480, 0xef7a, 0xca6, 0x5aa9, 0x1, 0x0);
        gbc.writeMem(0xa25f, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x8a92);
        EXPECT(gbc.pc(), 0xa260);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa25f), 0x58);
        // 58 0209
        gbc.setState(0xbcad, 0x95e4, 0x4120, 0x5d6, 0xe7ef, 0xa93c, 0x0, 0x0);
        gbc.writeMem(0xbcad, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x95e4);
        EXPECT(gbc.pc(), 0xbcae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbcad), 0x58);
        // 58 020A
        gbc.setState(0x6746, 0xf65c, 0x4310, 0x6ed, 0x8f40, 0x1e75, 0x1, 0x0);
        gbc.writeMem(0x6746, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xf65c);
        EXPECT(gbc.pc(), 0x6747);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 58 020B
        gbc.setState(0x5cef, 0x4fa9, 0x2cf0, 0xb9c9, 0x44c2, 0x3e57, 0x1, 0x1);
        gbc.writeMem(0x5cef, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x4fa9);
        EXPECT(gbc.pc(), 0x5cf0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 58 020E
        gbc.setState(0x4c31, 0xc2c2, 0xce80, 0x4a5f, 0x745a, 0xb50e, 0x0, 0x0);
        gbc.writeMem(0x4c31, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0xc2c2);
        EXPECT(gbc.pc(), 0x4c32);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 58 020F
        gbc.setState(0x2e3b, 0xdb1a, 0xf360, 0x3cb2, 0x151a, 0x636f, 0x1, 0x0);
        gbc.writeMem(0x2e3b, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0xdb1a);
        EXPECT(gbc.pc(), 0x2e3c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 58 0210
        gbc.setState(0x2307, 0x169a, 0x8240, 0xdaea, 0x2f9d, 0x645c, 0x1, 0x1);
        gbc.writeMem(0x2307, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x169a);
        EXPECT(gbc.pc(), 0x2308);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 58 0211
        gbc.setState(0xaa96, 0x1653, 0xd8d0, 0xec3a, 0x31b5, 0x6eca, 0x1, 0x0);
        gbc.writeMem(0xaa96, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x1653);
        EXPECT(gbc.pc(), 0xaa97);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaa96), 0x58);
        // 58 0212
        gbc.setState(0x8ce8, 0xd49d, 0x3910, 0x699e, 0x3574, 0x3c77, 0x0, 0x0);
        gbc.writeMem(0x8ce8, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xd49d);
        EXPECT(gbc.pc(), 0x8ce9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8ce8), 0x58);
        // 58 0213
        gbc.setState(0x23f9, 0x680b, 0x8e00, 0x5988, 0x39fc, 0xcfb2, 0x1, 0x0);
        gbc.writeMem(0x23f9, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x680b);
        EXPECT(gbc.pc(), 0x23fa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 58 0215
        gbc.setState(0x7772, 0x81ce, 0xe7b0, 0x9dcc, 0xdcb2, 0xd2b, 0x0, 0x0);
        gbc.writeMem(0x7772, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x81ce);
        EXPECT(gbc.pc(), 0x7773);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 58 0216
        gbc.setState(0x443, 0xa7c, 0xcf50, 0xc00a, 0xb7c8, 0xc2c1, 0x1, 0x0);
        gbc.writeMem(0x443, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0xa7c);
        EXPECT(gbc.pc(), 0x444);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 58 0217
        gbc.setState(0xb51b, 0x539b, 0x5660, 0x6d30, 0x5cbc, 0x3f9a, 0x0, 0x1);
        gbc.writeMem(0xb51b, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x539b);
        EXPECT(gbc.pc(), 0xb51c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb51b), 0x58);
        // 58 0218
        gbc.setState(0x19b4, 0xf541, 0x6e50, 0xb67, 0xad3f, 0x427f, 0x0, 0x0);
        gbc.writeMem(0x19b4, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xf541);
        EXPECT(gbc.pc(), 0x19b5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 58 0219
        gbc.setState(0x4ef6, 0x5be5, 0x6320, 0x5941, 0x85ef, 0xfc85, 0x0, 0x0);
        gbc.writeMem(0x4ef6, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x5be5);
        EXPECT(gbc.pc(), 0x4ef7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 58 021A
        gbc.setState(0x5e15, 0x2e82, 0x8710, 0x5ac4, 0x8960, 0x2138, 0x1, 0x1);
        gbc.writeMem(0x5e15, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x2e82);
        EXPECT(gbc.pc(), 0x5e16);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 58 021C
        gbc.setState(0x58a9, 0x9442, 0x8d60, 0x6675, 0x1f5f, 0xfc49, 0x1, 0x1);
        gbc.writeMem(0x58a9, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x9442);
        EXPECT(gbc.pc(), 0x58aa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 58 021D
        gbc.setState(0x9d6f, 0xbf58, 0x5280, 0xe1c9, 0x6dce, 0xa4ca, 0x0, 0x0);
        gbc.writeMem(0x9d6f, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0xbf58);
        EXPECT(gbc.pc(), 0x9d70);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9d6f), 0x58);
        // 58 0220
        gbc.setState(0xa7e3, 0xd99, 0x4ae0, 0x1033, 0xb54d, 0xed3f, 0x0, 0x1);
        gbc.writeMem(0xa7e3, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xd99);
        EXPECT(gbc.pc(), 0xa7e4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa7e3), 0x58);
        // 58 0221
        gbc.setState(0xb879, 0x57cf, 0xc950, 0x1561, 0x2465, 0xb5a1, 0x1, 0x1);
        gbc.writeMem(0xb879, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x57cf);
        EXPECT(gbc.pc(), 0xb87a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb879), 0x58);
        // 58 0222
        gbc.setState(0x3b71, 0xc030, 0xba10, 0xd977, 0xb20b, 0xb368, 0x1, 0x1);
        gbc.writeMem(0x3b71, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0xc030);
        EXPECT(gbc.pc(), 0x3b72);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 58 0223
        gbc.setState(0x6de0, 0x2772, 0xfe60, 0x5b24, 0xbfb6, 0x3742, 0x0, 0x0);
        gbc.writeMem(0x6de0, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x2772);
        EXPECT(gbc.pc(), 0x6de1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 58 0224
        gbc.setState(0x7379, 0x68ff, 0x5f90, 0xb3c, 0x3102, 0xfc31, 0x1, 0x1);
        gbc.writeMem(0x7379, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x68ff);
        EXPECT(gbc.pc(), 0x737a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 58 0225
        gbc.setState(0x116b, 0x8c62, 0xf580, 0xbd, 0x1390, 0xfe1d, 0x0, 0x0);
        gbc.writeMem(0x116b, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x8c62);
        EXPECT(gbc.pc(), 0x116c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 58 0226
        gbc.setState(0xd576, 0x1560, 0xb9b0, 0x4941, 0x59d5, 0x43a6, 0x0, 0x0);
        gbc.writeMem(0xd576, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x1560);
        EXPECT(gbc.pc(), 0xd577);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd576), 0x58);
        // 58 0227
        gbc.setState(0x7ea9, 0xd3fa, 0x8130, 0x4b2a, 0xb997, 0x79c5, 0x1, 0x1);
        gbc.writeMem(0x7ea9, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0xd3fa);
        EXPECT(gbc.pc(), 0x7eaa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 58 0228
        gbc.setState(0x48f1, 0xb34a, 0xb030, 0xf316, 0x8fd9, 0xafbf, 0x1, 0x1);
        gbc.writeMem(0x48f1, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0xb34a);
        EXPECT(gbc.pc(), 0x48f2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 58 0229
        gbc.setState(0x5c15, 0x2920, 0x5b10, 0xeed8, 0x1ce6, 0xb4e2, 0x0, 0x1);
        gbc.writeMem(0x5c15, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x2920);
        EXPECT(gbc.pc(), 0x5c16);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 58 022A
        gbc.setState(0x8139, 0xbbbc, 0x3b60, 0xc4ce, 0x7414, 0x8952, 0x1, 0x0);
        gbc.writeMem(0x8139, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0xbbbc);
        EXPECT(gbc.pc(), 0x813a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8139), 0x58);
        // 58 022B
        gbc.setState(0x602, 0xbcad, 0xbec0, 0xb126, 0x7d98, 0xbaf7, 0x1, 0x0);
        gbc.writeMem(0x602, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0xbcad);
        EXPECT(gbc.pc(), 0x603);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 58 022C
        gbc.setState(0xbcf8, 0x1b30, 0xf250, 0x129b, 0x5d00, 0x2ce2, 0x0, 0x0);
        gbc.writeMem(0xbcf8, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x1b30);
        EXPECT(gbc.pc(), 0xbcf9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbcf8), 0x58);
        // 58 022E
        gbc.setState(0x9c44, 0xb335, 0x1010, 0x978, 0x27a4, 0xd4d0, 0x1, 0x1);
        gbc.writeMem(0x9c44, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0xb335);
        EXPECT(gbc.pc(), 0x9c45);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9c44), 0x58);
        // 58 022F
        gbc.setState(0xe25b, 0xd2a9, 0x7ad0, 0xce66, 0xe2, 0xb00d, 0x0, 0x1);
        gbc.writeMem(0xe25b, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0xd2a9);
        EXPECT(gbc.pc(), 0xe25c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe25b), 0x58);
        // 58 0230
        gbc.setState(0x20e3, 0xda90, 0x98c0, 0x34d, 0x6c36, 0x6978, 0x0, 0x0);
        gbc.writeMem(0x20e3, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0xda90);
        EXPECT(gbc.pc(), 0x20e4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 58 0231
        gbc.setState(0x12d5, 0xd16c, 0xf090, 0x9799, 0x2745, 0x8bf3, 0x1, 0x0);
        gbc.writeMem(0x12d5, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0xd16c);
        EXPECT(gbc.pc(), 0x12d6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 58 0232
        gbc.setState(0xcd8f, 0x1f92, 0x42c0, 0x3928, 0x8a29, 0xa7df, 0x1, 0x0);
        gbc.writeMem(0xcd8f, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x1f92);
        EXPECT(gbc.pc(), 0xcd90);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcd8f), 0x58);
        // 58 0233
        gbc.setState(0x9776, 0x7eb2, 0x20, 0x66f2, 0x691e, 0x2996, 0x0, 0x1);
        gbc.writeMem(0x9776, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x7eb2);
        EXPECT(gbc.pc(), 0x9777);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9776), 0x58);
        // 58 0234
        gbc.setState(0x6456, 0x431a, 0x420, 0x5b97, 0x59f9, 0xee19, 0x1, 0x0);
        gbc.writeMem(0x6456, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x431a);
        EXPECT(gbc.pc(), 0x6457);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 58 0235
        gbc.setState(0x534, 0xc984, 0xcc20, 0x1609, 0xf22e, 0xb411, 0x1, 0x1);
        gbc.writeMem(0x534, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0xc984);
        EXPECT(gbc.pc(), 0x535);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 58 0236
        gbc.setState(0x6779, 0xf046, 0xbd10, 0x50c2, 0x58fc, 0xbb9e, 0x1, 0x0);
        gbc.writeMem(0x6779, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0xf046);
        EXPECT(gbc.pc(), 0x677a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 58 0237
        gbc.setState(0xef9b, 0x8da3, 0x630, 0x6ac0, 0x74b1, 0x6bfb, 0x0, 0x0);
        gbc.writeMem(0xef9b, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x8da3);
        EXPECT(gbc.pc(), 0xef9c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xef9b), 0x58);
        // 58 0238
        gbc.setState(0xda94, 0x662d, 0x1960, 0x50d3, 0xded4, 0x1df9, 0x1, 0x0);
        gbc.writeMem(0xda94, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x662d);
        EXPECT(gbc.pc(), 0xda95);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xda94), 0x58);
        // 58 0239
        gbc.setState(0x803b, 0x7158, 0x400, 0x4aa9, 0x5a01, 0xe6aa, 0x0, 0x1);
        gbc.writeMem(0x803b, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x7158);
        EXPECT(gbc.pc(), 0x803c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x803b), 0x58);
        // 58 023A
        gbc.setState(0x6ac, 0x1658, 0xc5e0, 0x6bd9, 0xe0aa, 0x5c11, 0x1, 0x1);
        gbc.writeMem(0x6ac, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x1658);
        EXPECT(gbc.pc(), 0x6ad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 58 023B
        gbc.setState(0x709b, 0x7b63, 0xab10, 0x6545, 0xa38, 0xc6f5, 0x1, 0x0);
        gbc.writeMem(0x709b, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x7b63);
        EXPECT(gbc.pc(), 0x709c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 58 023C
        gbc.setState(0xab62, 0x77b1, 0x46a0, 0x69bc, 0x855b, 0xadca, 0x1, 0x0);
        gbc.writeMem(0xab62, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x77b1);
        EXPECT(gbc.pc(), 0xab63);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xab62), 0x58);
        // 58 023D
        gbc.setState(0xb6d5, 0x2baf, 0x5320, 0xfe44, 0x6d9b, 0x91d1, 0x1, 0x0);
        gbc.writeMem(0xb6d5, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x2baf);
        EXPECT(gbc.pc(), 0xb6d6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb6d5), 0x58);
        // 58 023E
        gbc.setState(0x7d91, 0x887e, 0xae50, 0x17e0, 0x1e03, 0x6d12, 0x1, 0x1);
        gbc.writeMem(0x7d91, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x887e);
        EXPECT(gbc.pc(), 0x7d92);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 58 023F
        gbc.setState(0xb564, 0xa293, 0xae80, 0x9f81, 0x1439, 0x701b, 0x0, 0x0);
        gbc.writeMem(0xb564, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0xa293);
        EXPECT(gbc.pc(), 0xb565);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb564), 0x58);
        // 58 0240
        gbc.setState(0x6b1f, 0x6d60, 0x42f0, 0x458a, 0x1d3e, 0xfa4a, 0x0, 0x1);
        gbc.writeMem(0x6b1f, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x6d60);
        EXPECT(gbc.pc(), 0x6b20);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 58 0241
        gbc.setState(0x9050, 0x316f, 0x5a30, 0xcb82, 0x320d, 0xe37, 0x1, 0x1);
        gbc.writeMem(0x9050, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x316f);
        EXPECT(gbc.pc(), 0x9051);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9050), 0x58);
        // 58 0242
        gbc.setState(0x281, 0xbdc2, 0xc010, 0x8c57, 0x5c05, 0xd873, 0x0, 0x1);
        gbc.writeMem(0x281, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0xbdc2);
        EXPECT(gbc.pc(), 0x282);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 58 0243
        gbc.setState(0x238, 0x4a8, 0x76d0, 0xf431, 0xf9bd, 0x4c73, 0x0, 0x0);
        gbc.writeMem(0x238, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x4a8);
        EXPECT(gbc.pc(), 0x239);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 58 0244
        gbc.setState(0x6d9, 0x93b4, 0xacf0, 0x4ec8, 0x60d0, 0x31fb, 0x0, 0x0);
        gbc.writeMem(0x6d9, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x93b4);
        EXPECT(gbc.pc(), 0x6da);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 58 0245
        gbc.setState(0x71e0, 0x494f, 0x3820, 0x1c52, 0xedd8, 0x2bd1, 0x0, 0x0);
        gbc.writeMem(0x71e0, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x494f);
        EXPECT(gbc.pc(), 0x71e1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 58 0246
        gbc.setState(0x56b7, 0x56bf, 0xd560, 0x2356, 0x7fbd, 0xac5c, 0x0, 0x0);
        gbc.writeMem(0x56b7, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x56bf);
        EXPECT(gbc.pc(), 0x56b8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 58 0247
        gbc.setState(0x3324, 0xedb3, 0x6d60, 0xa745, 0x8331, 0xe653, 0x0, 0x0);
        gbc.writeMem(0x3324, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0xedb3);
        EXPECT(gbc.pc(), 0x3325);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 58 0248
        gbc.setState(0x207c, 0xe3da, 0x4490, 0x9806, 0x1aa5, 0x46bc, 0x0, 0x0);
        gbc.writeMem(0x207c, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0xe3da);
        EXPECT(gbc.pc(), 0x207d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 58 0249
        gbc.setState(0x965, 0xcf7e, 0x37b0, 0x4aa6, 0x8060, 0xd2f5, 0x0, 0x1);
        gbc.writeMem(0x965, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0xcf7e);
        EXPECT(gbc.pc(), 0x966);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 58 024A
        gbc.setState(0x6d6f, 0xc19b, 0x4340, 0x5a33, 0x128e, 0x3e13, 0x1, 0x1);
        gbc.writeMem(0x6d6f, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0xc19b);
        EXPECT(gbc.pc(), 0x6d70);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 58 024B
        gbc.setState(0x594c, 0x9290, 0xf550, 0x13ac, 0xfc85, 0xaeba, 0x0, 0x0);
        gbc.writeMem(0x594c, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x9290);
        EXPECT(gbc.pc(), 0x594d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 58 024C
        gbc.setState(0xab7f, 0x1f5a, 0x3890, 0x51e0, 0x7496, 0x539f, 0x1, 0x0);
        gbc.writeMem(0xab7f, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x1f5a);
        EXPECT(gbc.pc(), 0xab80);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xab7f), 0x58);
        // 58 024D
        gbc.setState(0xed7c, 0xa699, 0x5dd0, 0xbc57, 0xe71f, 0xa97e, 0x0, 0x0);
        gbc.writeMem(0xed7c, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0xa699);
        EXPECT(gbc.pc(), 0xed7d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xed7c), 0x58);
        // 58 024E
        gbc.setState(0x4aba, 0xfa2b, 0x3f90, 0xa61, 0x5834, 0x53f6, 0x1, 0x0);
        gbc.writeMem(0x4aba, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0xfa2b);
        EXPECT(gbc.pc(), 0x4abb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 58 024F
        gbc.setState(0x37ca, 0xef3c, 0x4790, 0xd10e, 0x87f, 0x767a, 0x1, 0x0);
        gbc.writeMem(0x37ca, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xef3c);
        EXPECT(gbc.pc(), 0x37cb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 58 0250
        gbc.setState(0x29f0, 0x74a2, 0xc360, 0xe25, 0x628c, 0x7dc, 0x1, 0x0);
        gbc.writeMem(0x29f0, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x74a2);
        EXPECT(gbc.pc(), 0x29f1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 58 0251
        gbc.setState(0x322a, 0x6a5a, 0x4db0, 0x342f, 0xc065, 0x2bf8, 0x1, 0x1);
        gbc.writeMem(0x322a, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x6a5a);
        EXPECT(gbc.pc(), 0x322b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 58 0252
        gbc.setState(0xe582, 0x4db9, 0x8f20, 0xf3d2, 0x4288, 0x1ff5, 0x1, 0x0);
        gbc.writeMem(0xe582, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x4db9);
        EXPECT(gbc.pc(), 0xe583);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe582), 0x58);
        // 58 0253
        gbc.setState(0x787a, 0xf341, 0x310, 0x5b7d, 0x80cc, 0xc0ba, 0x0, 0x1);
        gbc.writeMem(0x787a, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0xf341);
        EXPECT(gbc.pc(), 0x787b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 58 0254
        gbc.setState(0xc51c, 0x495f, 0xa20, 0xcf25, 0xb96a, 0xb606, 0x0, 0x0);
        gbc.writeMem(0xc51c, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x495f);
        EXPECT(gbc.pc(), 0xc51d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc51c), 0x58);
        // 58 0255
        gbc.setState(0x3ac1, 0xeabf, 0x9650, 0x1b65, 0xad66, 0x13f, 0x0, 0x0);
        gbc.writeMem(0x3ac1, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xeabf);
        EXPECT(gbc.pc(), 0x3ac2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 58 0256
        gbc.setState(0xcc80, 0x95be, 0x7a50, 0x9c16, 0x1f18, 0x6d44, 0x0, 0x0);
        gbc.writeMem(0xcc80, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x95be);
        EXPECT(gbc.pc(), 0xcc81);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcc80), 0x58);
        // 58 0257
        gbc.setState(0x5f9e, 0xee8f, 0x1ad0, 0xa8d1, 0xed62, 0xc4d, 0x1, 0x0);
        gbc.writeMem(0x5f9e, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0xee8f);
        EXPECT(gbc.pc(), 0x5f9f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 58 0258
        gbc.setState(0xa6ab, 0x1e29, 0x3390, 0xdaf0, 0x37cc, 0x46c4, 0x1, 0x0);
        gbc.writeMem(0xa6ab, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x1e29);
        EXPECT(gbc.pc(), 0xa6ac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa6ab), 0x58);
        // 58 0259
        gbc.setState(0x190e, 0x38e8, 0x4c30, 0x5139, 0x5e9e, 0xca80, 0x1, 0x0);
        gbc.writeMem(0x190e, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x38e8);
        EXPECT(gbc.pc(), 0x190f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 58 025A
        gbc.setState(0xa838, 0x402f, 0xa2f0, 0x2d84, 0xb7dd, 0xdc39, 0x1, 0x0);
        gbc.writeMem(0xa838, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x402f);
        EXPECT(gbc.pc(), 0xa839);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa838), 0x58);
        // 58 025B
        gbc.setState(0xb2fc, 0xb405, 0x1ee0, 0x764a, 0xbb4b, 0xd91f, 0x0, 0x1);
        gbc.writeMem(0xb2fc, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0xb405);
        EXPECT(gbc.pc(), 0xb2fd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb2fc), 0x58);
        // 58 025C
        gbc.setState(0xd329, 0x5fc8, 0x7090, 0xae7a, 0xd4c9, 0xdaef, 0x0, 0x1);
        gbc.writeMem(0xd329, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x5fc8);
        EXPECT(gbc.pc(), 0xd32a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd329), 0x58);
        // 58 025D
        gbc.setState(0xbded, 0x9685, 0xa970, 0x7b20, 0xdc7f, 0x5f03, 0x0, 0x0);
        gbc.writeMem(0xbded, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x9685);
        EXPECT(gbc.pc(), 0xbdee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbded), 0x58);
        // 58 025E
        gbc.setState(0xd4cb, 0x108, 0x55b0, 0xb12a, 0x672, 0x91a8, 0x0, 0x0);
        gbc.writeMem(0xd4cb, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x108);
        EXPECT(gbc.pc(), 0xd4cc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd4cb), 0x58);
        // 58 025F
        gbc.setState(0x5c53, 0x793, 0xba10, 0xeb94, 0x5a8c, 0x1f9c, 0x1, 0x0);
        gbc.writeMem(0x5c53, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x793);
        EXPECT(gbc.pc(), 0x5c54);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 58 0260
        gbc.setState(0x2ac9, 0xe318, 0x7320, 0xdec6, 0xb269, 0x9fc, 0x1, 0x0);
        gbc.writeMem(0x2ac9, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0xe318);
        EXPECT(gbc.pc(), 0x2aca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 58 0261
        gbc.setState(0xa477, 0xa667, 0xe160, 0xf22c, 0x1855, 0xa8f5, 0x0, 0x0);
        gbc.writeMem(0xa477, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0xa667);
        EXPECT(gbc.pc(), 0xa478);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa477), 0x58);
        // 58 0262
        gbc.setState(0xde2a, 0x1cec, 0xe0f0, 0xa797, 0x5d6c, 0xc58e, 0x0, 0x1);
        gbc.writeMem(0xde2a, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x1cec);
        EXPECT(gbc.pc(), 0xde2b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xde2a), 0x58);
        // 58 0263
        gbc.setState(0x4ec2, 0x8c36, 0x7980, 0x4c89, 0x32d6, 0xcd59, 0x1, 0x0);
        gbc.writeMem(0x4ec2, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x8c36);
        EXPECT(gbc.pc(), 0x4ec3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 58 0264
        gbc.setState(0x24e0, 0x6b17, 0x8cd0, 0x89b3, 0x5912, 0x9ac9, 0x0, 0x1);
        gbc.writeMem(0x24e0, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x6b17);
        EXPECT(gbc.pc(), 0x24e1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 58 0265
        gbc.setState(0x97e2, 0xd4fc, 0x5a10, 0xb4dd, 0xf321, 0x7c6b, 0x0, 0x1);
        gbc.writeMem(0x97e2, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0xd4fc);
        EXPECT(gbc.pc(), 0x97e3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x97e2), 0x58);
        // 58 0266
        gbc.setState(0xd184, 0xfc03, 0x6be0, 0x54de, 0xa8dc, 0xf694, 0x0, 0x0);
        gbc.writeMem(0xd184, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xfc03);
        EXPECT(gbc.pc(), 0xd185);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd184), 0x58);
        // 58 0267
        gbc.setState(0x22bd, 0x2857, 0xc470, 0x7411, 0xe054, 0x35f9, 0x1, 0x0);
        gbc.writeMem(0x22bd, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x2857);
        EXPECT(gbc.pc(), 0x22be);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 58 0268
        gbc.setState(0xaa96, 0x6288, 0x40a0, 0xf0d5, 0x64a3, 0xa069, 0x0, 0x0);
        gbc.writeMem(0xaa96, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x6288);
        EXPECT(gbc.pc(), 0xaa97);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaa96), 0x58);
        // 58 0269
        gbc.setState(0x1a2d, 0x6c25, 0x7d70, 0x90d3, 0xfeb8, 0xebb3, 0x1, 0x1);
        gbc.writeMem(0x1a2d, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x6c25);
        EXPECT(gbc.pc(), 0x1a2e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 58 026A
        gbc.setState(0x4098, 0xde0a, 0x6030, 0x8e0e, 0xf31a, 0x276d, 0x0, 0x1);
        gbc.writeMem(0x4098, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0xde0a);
        EXPECT(gbc.pc(), 0x4099);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 58 026B
        gbc.setState(0x1c05, 0xbfcd, 0xf7c0, 0xd21f, 0x3da6, 0x39ad, 0x0, 0x0);
        gbc.writeMem(0x1c05, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0xbfcd);
        EXPECT(gbc.pc(), 0x1c06);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 58 026C
        gbc.setState(0x58c4, 0x64ef, 0xe70, 0xc983, 0xa038, 0x4e03, 0x1, 0x1);
        gbc.writeMem(0x58c4, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x64ef);
        EXPECT(gbc.pc(), 0x58c5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 58 026D
        gbc.setState(0xe65e, 0xfbcf, 0xedd0, 0x9b4, 0xfaa8, 0x19dd, 0x0, 0x1);
        gbc.writeMem(0xe65e, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0xfbcf);
        EXPECT(gbc.pc(), 0xe65f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe65e), 0x58);
        // 58 026E
        gbc.setState(0x8ec8, 0xb2fb, 0xfba0, 0x3de6, 0xe0e0, 0x8046, 0x0, 0x0);
        gbc.writeMem(0x8ec8, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0xb2fb);
        EXPECT(gbc.pc(), 0x8ec9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ec8), 0x58);
        // 58 026F
        gbc.setState(0x193f, 0xae3d, 0xb8c0, 0xd713, 0xb223, 0x341f, 0x1, 0x1);
        gbc.writeMem(0x193f, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0xae3d);
        EXPECT(gbc.pc(), 0x1940);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 58 0270
        gbc.setState(0xe557, 0xde65, 0x31b0, 0x8e3d, 0x279f, 0xc128, 0x1, 0x1);
        gbc.writeMem(0xe557, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xde65);
        EXPECT(gbc.pc(), 0xe558);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe557), 0x58);
        // 58 0271
        gbc.setState(0x530e, 0xb0fd, 0xbc50, 0xe5fc, 0xb758, 0x493f, 0x0, 0x0);
        gbc.writeMem(0x530e, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xb0fd);
        EXPECT(gbc.pc(), 0x530f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 58 0272
        gbc.setState(0xc7f, 0xfe1c, 0x61a0, 0x5a95, 0xdb20, 0x8bd0, 0x1, 0x1);
        gbc.writeMem(0xc7f, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0xfe1c);
        EXPECT(gbc.pc(), 0xc80);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 58 0273
        gbc.setState(0xe002, 0xca00, 0x41d0, 0x25b3, 0x3637, 0xff01, 0x1, 0x0);
        gbc.writeMem(0xe002, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0xca00);
        EXPECT(gbc.pc(), 0xe003);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe002), 0x58);
        // 58 0274
        gbc.setState(0xbccb, 0x3990, 0xb90, 0xb4a1, 0x8e6c, 0x8855, 0x1, 0x0);
        gbc.writeMem(0xbccb, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x3990);
        EXPECT(gbc.pc(), 0xbccc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbccb), 0x58);
        // 58 0275
        gbc.setState(0x9ace, 0x9b4e, 0x2e0, 0x8b4f, 0xa3b5, 0x305f, 0x1, 0x0);
        gbc.writeMem(0x9ace, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x9b4e);
        EXPECT(gbc.pc(), 0x9acf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9ace), 0x58);
        // 58 0276
        gbc.setState(0x8628, 0x5d49, 0x7340, 0x2d46, 0xafc8, 0x92ec, 0x1, 0x1);
        gbc.writeMem(0x8628, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x5d49);
        EXPECT(gbc.pc(), 0x8629);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8628), 0x58);
        // 58 0277
        gbc.setState(0x721a, 0x6137, 0x4250, 0x7052, 0x227e, 0x27a3, 0x1, 0x0);
        gbc.writeMem(0x721a, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x6137);
        EXPECT(gbc.pc(), 0x721b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 58 0278
        gbc.setState(0xa4af, 0x79c6, 0x6920, 0xcb33, 0x9949, 0x151, 0x0, 0x0);
        gbc.writeMem(0xa4af, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x79c6);
        EXPECT(gbc.pc(), 0xa4b0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa4af), 0x58);
        // 58 0279
        gbc.setState(0x6fc7, 0x40ee, 0x3200, 0x36bc, 0x8354, 0xa4ab, 0x0, 0x1);
        gbc.writeMem(0x6fc7, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x40ee);
        EXPECT(gbc.pc(), 0x6fc8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 58 027A
        gbc.setState(0xdb91, 0xef4d, 0x57b0, 0x9d19, 0x73d3, 0x47d8, 0x1, 0x1);
        gbc.writeMem(0xdb91, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0xef4d);
        EXPECT(gbc.pc(), 0xdb92);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdb91), 0x58);
        // 58 027B
        gbc.setState(0x41fd, 0x5418, 0x94b0, 0xcd8c, 0x9d3e, 0x1ecc, 0x0, 0x0);
        gbc.writeMem(0x41fd, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x5418);
        EXPECT(gbc.pc(), 0x41fe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 58 027C
        gbc.setState(0xc5c7, 0x241b, 0xd4e0, 0x4102, 0xb593, 0xc080, 0x1, 0x1);
        gbc.writeMem(0xc5c7, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x241b);
        EXPECT(gbc.pc(), 0xc5c8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc5c7), 0x58);
        // 58 027D
        gbc.setState(0x396e, 0x5b88, 0xa5c0, 0xcaa0, 0x330d, 0x4ff0, 0x1, 0x0);
        gbc.writeMem(0x396e, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x5b88);
        EXPECT(gbc.pc(), 0x396f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 58 027E
        gbc.setState(0x9150, 0x7129, 0x8170, 0x9e37, 0x4165, 0x8845, 0x1, 0x0);
        gbc.writeMem(0x9150, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x7129);
        EXPECT(gbc.pc(), 0x9151);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9150), 0x58);
        // 58 027F
        gbc.setState(0x362b, 0xed1c, 0x51f0, 0x6a1f, 0x50d1, 0x233d, 0x1, 0x1);
        gbc.writeMem(0x362b, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0xed1c);
        EXPECT(gbc.pc(), 0x362c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 58 0280
        gbc.setState(0x7664, 0x986b, 0xdf30, 0x4321, 0xb1ac, 0xb92, 0x0, 0x0);
        gbc.writeMem(0x7664, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x986b);
        EXPECT(gbc.pc(), 0x7665);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 58 0281
        gbc.setState(0x3893, 0x240b, 0x39c0, 0x9f83, 0xd9e3, 0x4a46, 0x1, 0x1);
        gbc.writeMem(0x3893, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x240b);
        EXPECT(gbc.pc(), 0x3894);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 58 0282
        gbc.setState(0x6cac, 0xdb3f, 0xc50, 0xbf27, 0x6a3a, 0x1106, 0x0, 0x0);
        gbc.writeMem(0x6cac, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0xdb3f);
        EXPECT(gbc.pc(), 0x6cad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 58 0283
        gbc.setState(0x3e39, 0xc7e3, 0x9e70, 0xa6d1, 0x5476, 0x3e4d, 0x1, 0x1);
        gbc.writeMem(0x3e39, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0xc7e3);
        EXPECT(gbc.pc(), 0x3e3a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 58 0285
        gbc.setState(0x6c02, 0x83b5, 0x8130, 0xfb02, 0xc650, 0x6178, 0x0, 0x0);
        gbc.writeMem(0x6c02, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x83b5);
        EXPECT(gbc.pc(), 0x6c03);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 58 0286
        gbc.setState(0xb000, 0x7aa0, 0xdf60, 0xf6a3, 0x68ac, 0x2e7f, 0x0, 0x1);
        gbc.writeMem(0xb000, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x7aa0);
        EXPECT(gbc.pc(), 0xb001);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb000), 0x58);
        // 58 0287
        gbc.setState(0x4d82, 0x68ad, 0x8810, 0x6296, 0xb675, 0x5fd9, 0x0, 0x0);
        gbc.writeMem(0x4d82, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x68ad);
        EXPECT(gbc.pc(), 0x4d83);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 58 0288
        gbc.setState(0x8a89, 0xce4, 0xcd10, 0x2bb9, 0x526, 0x7706, 0x1, 0x1);
        gbc.writeMem(0x8a89, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0xce4);
        EXPECT(gbc.pc(), 0x8a8a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8a89), 0x58);
        // 58 0289
        gbc.setState(0xca7f, 0x4b21, 0xa470, 0xeb45, 0x1ee5, 0xc90c, 0x0, 0x1);
        gbc.writeMem(0xca7f, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x4b21);
        EXPECT(gbc.pc(), 0xca80);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xca7f), 0x58);
        // 58 028A
        gbc.setState(0xc018, 0x1d7c, 0x8d20, 0xfd7b, 0xc4ad, 0xb12b, 0x0, 0x0);
        gbc.writeMem(0xc018, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x1d7c);
        EXPECT(gbc.pc(), 0xc019);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc018), 0x58);
        // 58 028B
        gbc.setState(0x8681, 0x4430, 0xdfe0, 0x347f, 0x523f, 0xcf0, 0x1, 0x0);
        gbc.writeMem(0x8681, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x4430);
        EXPECT(gbc.pc(), 0x8682);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8681), 0x58);
        // 58 028C
        gbc.setState(0x4016, 0xa64c, 0x89e0, 0xbbc0, 0x8deb, 0x2300, 0x0, 0x0);
        gbc.writeMem(0x4016, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0xa64c);
        EXPECT(gbc.pc(), 0x4017);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 58 028D
        gbc.setState(0xf0a, 0xe70d, 0x5440, 0xecd7, 0xaf12, 0xfcc9, 0x0, 0x0);
        gbc.writeMem(0xf0a, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0xe70d);
        EXPECT(gbc.pc(), 0xf0b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 58 028E
        gbc.setState(0x4dd1, 0x90ac, 0x7990, 0x42f, 0xe13c, 0xd03a, 0x1, 0x0);
        gbc.writeMem(0x4dd1, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x90ac);
        EXPECT(gbc.pc(), 0x4dd2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 58 028F
        gbc.setState(0x34d1, 0x87a7, 0xa9f0, 0x1d48, 0x6d7f, 0x9b90, 0x0, 0x1);
        gbc.writeMem(0x34d1, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x87a7);
        EXPECT(gbc.pc(), 0x34d2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 58 0290
        gbc.setState(0xd02c, 0xe1ee, 0x2c70, 0x2a66, 0x88e8, 0x76eb, 0x1, 0x1);
        gbc.writeMem(0xd02c, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0xe1ee);
        EXPECT(gbc.pc(), 0xd02d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd02c), 0x58);
        // 58 0291
        gbc.setState(0xa849, 0x5a3d, 0xacb0, 0xbc8b, 0x7fc5, 0xe6d, 0x0, 0x1);
        gbc.writeMem(0xa849, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x5a3d);
        EXPECT(gbc.pc(), 0xa84a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa849), 0x58);
        // 58 0292
        gbc.setState(0xea1f, 0x186b, 0x9940, 0xa2bb, 0x1913, 0xbed2, 0x1, 0x0);
        gbc.writeMem(0xea1f, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x186b);
        EXPECT(gbc.pc(), 0xea20);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xea1f), 0x58);
        // 58 0293
        gbc.setState(0xd4cd, 0x3812, 0xca0, 0x3700, 0x1ff2, 0x8f63, 0x1, 0x0);
        gbc.writeMem(0xd4cd, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x3812);
        EXPECT(gbc.pc(), 0xd4ce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd4cd), 0x58);
        // 58 0294
        gbc.setState(0xaa2b, 0xea1, 0x5c30, 0x2466, 0x405b, 0x83ce, 0x1, 0x1);
        gbc.writeMem(0xaa2b, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0xea1);
        EXPECT(gbc.pc(), 0xaa2c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaa2b), 0x58);
        // 58 0295
        gbc.setState(0x9e64, 0x4200, 0x98f0, 0xbb8b, 0x6a89, 0x60fd, 0x1, 0x1);
        gbc.writeMem(0x9e64, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x4200);
        EXPECT(gbc.pc(), 0x9e65);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9e64), 0x58);
        // 58 0297
        gbc.setState(0x6cb2, 0x14dc, 0xea90, 0x47e, 0xdef, 0x1057, 0x0, 0x0);
        gbc.writeMem(0x6cb2, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x14dc);
        EXPECT(gbc.pc(), 0x6cb3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 58 0298
        gbc.setState(0x8da, 0x6bed, 0xd9d0, 0xd6de, 0xdf7b, 0x8af4, 0x1, 0x0);
        gbc.writeMem(0x8da, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x6bed);
        EXPECT(gbc.pc(), 0x8db);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 58 0299
        gbc.setState(0xc46, 0x9abc, 0x2e80, 0x5d55, 0xe969, 0xd7a1, 0x0, 0x1);
        gbc.writeMem(0xc46, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x9abc);
        EXPECT(gbc.pc(), 0xc47);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 58 029A
        gbc.setState(0x770a, 0x4868, 0x92c0, 0xbdd, 0xe935, 0x695, 0x0, 0x1);
        gbc.writeMem(0x770a, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x4868);
        EXPECT(gbc.pc(), 0x770b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 58 029B
        gbc.setState(0x2d5, 0xafc2, 0x3500, 0x48af, 0xbb6a, 0x10, 0x1, 0x0);
        gbc.writeMem(0x2d5, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xafc2);
        EXPECT(gbc.pc(), 0x2d6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 58 029C
        gbc.setState(0x5711, 0x23d2, 0x7320, 0xf901, 0xdcbb, 0xd1d1, 0x1, 0x1);
        gbc.writeMem(0x5711, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x23d2);
        EXPECT(gbc.pc(), 0x5712);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 58 029D
        gbc.setState(0x3720, 0x43ed, 0x30c0, 0x3999, 0xc09a, 0x3bce, 0x0, 0x1);
        gbc.writeMem(0x3720, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x43ed);
        EXPECT(gbc.pc(), 0x3721);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 58 029E
        gbc.setState(0xe53f, 0xc61b, 0x30, 0x6da1, 0x5691, 0x51ae, 0x0, 0x1);
        gbc.writeMem(0xe53f, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0xc61b);
        EXPECT(gbc.pc(), 0xe540);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe53f), 0x58);
        // 58 029F
        gbc.setState(0x574, 0xa788, 0x1680, 0x58c2, 0xe21b, 0x6b65, 0x1, 0x0);
        gbc.writeMem(0x574, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0xa788);
        EXPECT(gbc.pc(), 0x575);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 58 02A0
        gbc.setState(0x6990, 0xbe2d, 0xca40, 0x964f, 0x2c49, 0x30a, 0x1, 0x0);
        gbc.writeMem(0x6990, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0xbe2d);
        EXPECT(gbc.pc(), 0x6991);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 58 02A1
        gbc.setState(0x833, 0xe04f, 0x6ac0, 0xee42, 0x4988, 0xc348, 0x1, 0x1);
        gbc.writeMem(0x833, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0xe04f);
        EXPECT(gbc.pc(), 0x834);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 58 02A2
        gbc.setState(0x240, 0x4ee6, 0xea40, 0xd82f, 0x5be6, 0x5276, 0x0, 0x0);
        gbc.writeMem(0x240, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x4ee6);
        EXPECT(gbc.pc(), 0x241);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 58 02A3
        gbc.setState(0xc621, 0xbb4e, 0x2960, 0x6171, 0x531c, 0x3efc, 0x1, 0x0);
        gbc.writeMem(0xc621, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0xbb4e);
        EXPECT(gbc.pc(), 0xc622);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc621), 0x58);
        // 58 02A4
        gbc.setState(0x77da, 0xf4e8, 0x44a0, 0x3f5b, 0x6048, 0xea50, 0x1, 0x0);
        gbc.writeMem(0x77da, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0xf4e8);
        EXPECT(gbc.pc(), 0x77db);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 58 02A5
        gbc.setState(0x2ab8, 0x5f08, 0xdcb0, 0xc0e7, 0x164c, 0x3e31, 0x1, 0x0);
        gbc.writeMem(0x2ab8, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x5f08);
        EXPECT(gbc.pc(), 0x2ab9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 58 02A6
        gbc.setState(0x2b35, 0x802d, 0xf5d0, 0x4b11, 0x8557, 0x3b01, 0x0, 0x0);
        gbc.writeMem(0x2b35, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x802d);
        EXPECT(gbc.pc(), 0x2b36);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 58 02A7
        gbc.setState(0x7542, 0x18d7, 0xb490, 0xc14d, 0xabde, 0x33fa, 0x1, 0x0);
        gbc.writeMem(0x7542, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x18d7);
        EXPECT(gbc.pc(), 0x7543);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 58 02A8
        gbc.setState(0xc849, 0x2819, 0xa580, 0x71b7, 0x85a3, 0xd294, 0x0, 0x0);
        gbc.writeMem(0xc849, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x2819);
        EXPECT(gbc.pc(), 0xc84a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc849), 0x58);
        // 58 02A9
        gbc.setState(0xa5ec, 0x1967, 0x3be0, 0xe899, 0x331f, 0x2cfd, 0x0, 0x0);
        gbc.writeMem(0xa5ec, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x1967);
        EXPECT(gbc.pc(), 0xa5ed);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa5ec), 0x58);
        // 58 02AA
        gbc.setState(0x7877, 0x3c9b, 0x79a0, 0x49fa, 0xcb7c, 0x1add, 0x1, 0x0);
        gbc.writeMem(0x7877, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x3c9b);
        EXPECT(gbc.pc(), 0x7878);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 58 02AB
        gbc.setState(0x29ca, 0x1827, 0xa370, 0x722d, 0xb84b, 0xf118, 0x1, 0x1);
        gbc.writeMem(0x29ca, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x1827);
        EXPECT(gbc.pc(), 0x29cb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 58 02AC
        gbc.setState(0x5777, 0x3bca, 0x62f0, 0x683a, 0x36ab, 0x4fc8, 0x0, 0x0);
        gbc.writeMem(0x5777, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x3bca);
        EXPECT(gbc.pc(), 0x5778);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 58 02AD
        gbc.setState(0x17d3, 0x22b0, 0x8550, 0x3205, 0x1e3f, 0xdbb3, 0x0, 0x0);
        gbc.writeMem(0x17d3, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x22b0);
        EXPECT(gbc.pc(), 0x17d4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 58 02AE
        gbc.setState(0xc1b, 0x3b6e, 0x4de0, 0x6a3b, 0xe4db, 0x8599, 0x0, 0x1);
        gbc.writeMem(0xc1b, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x3b6e);
        EXPECT(gbc.pc(), 0xc1c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 58 02AF
        gbc.setState(0x35d8, 0xf24b, 0xeae0, 0x9d78, 0x3772, 0xbfc1, 0x1, 0x0);
        gbc.writeMem(0x35d8, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0xf24b);
        EXPECT(gbc.pc(), 0x35d9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 58 02B0
        gbc.setState(0x1c64, 0x5915, 0x6970, 0xd12a, 0x7d12, 0x7689, 0x0, 0x1);
        gbc.writeMem(0x1c64, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x5915);
        EXPECT(gbc.pc(), 0x1c65);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 58 02B2
        gbc.setState(0x2fe1, 0xdee, 0x7b60, 0xcef0, 0x4315, 0x3e3b, 0x1, 0x1);
        gbc.writeMem(0x2fe1, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0xdee);
        EXPECT(gbc.pc(), 0x2fe2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 58 02B3
        gbc.setState(0xce13, 0x2f8, 0xd1b0, 0x8275, 0xb4da, 0x51d3, 0x0, 0x1);
        gbc.writeMem(0xce13, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x2f8);
        EXPECT(gbc.pc(), 0xce14);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xce13), 0x58);
        // 58 02B4
        gbc.setState(0xef6a, 0xfa69, 0x72d0, 0xb36, 0xf0ac, 0x8e7d, 0x0, 0x0);
        gbc.writeMem(0xef6a, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xfa69);
        EXPECT(gbc.pc(), 0xef6b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xef6a), 0x58);
        // 58 02B5
        gbc.setState(0x138d, 0x9b80, 0xcff0, 0xcdec, 0x57b4, 0x4ed5, 0x0, 0x1);
        gbc.writeMem(0x138d, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x9b80);
        EXPECT(gbc.pc(), 0x138e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 58 02B6
        gbc.setState(0xecee, 0xd9f5, 0x200, 0x40ca, 0xdb9d, 0x577e, 0x1, 0x1);
        gbc.writeMem(0xecee, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0xd9f5);
        EXPECT(gbc.pc(), 0xecef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xecee), 0x58);
        // 58 02B7
        gbc.setState(0x2b68, 0xc126, 0xfc50, 0xc853, 0x4d9f, 0xf3e1, 0x1, 0x1);
        gbc.writeMem(0x2b68, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xc126);
        EXPECT(gbc.pc(), 0x2b69);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 58 02B8
        gbc.setState(0x11b8, 0xeb42, 0x1790, 0xc9e4, 0x48d8, 0x120d, 0x1, 0x0);
        gbc.writeMem(0x11b8, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0xeb42);
        EXPECT(gbc.pc(), 0x11b9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 58 02B9
        gbc.setState(0x9248, 0xc146, 0x7960, 0xbbc, 0x3636, 0x1cb8, 0x0, 0x0);
        gbc.writeMem(0x9248, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0xc146);
        EXPECT(gbc.pc(), 0x9249);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9248), 0x58);
        // 58 02BA
        gbc.setState(0x14d2, 0xb365, 0x9910, 0xe095, 0xbf77, 0xd82c, 0x0, 0x1);
        gbc.writeMem(0x14d2, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0xb365);
        EXPECT(gbc.pc(), 0x14d3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 58 02BB
        gbc.setState(0x40f1, 0xba4a, 0xeca0, 0xb2ea, 0x169b, 0x1fb, 0x0, 0x0);
        gbc.writeMem(0x40f1, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0xba4a);
        EXPECT(gbc.pc(), 0x40f2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 58 02BC
        gbc.setState(0x5f66, 0x9b3a, 0xb770, 0xb1e4, 0x4989, 0x2e0d, 0x0, 0x1);
        gbc.writeMem(0x5f66, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x9b3a);
        EXPECT(gbc.pc(), 0x5f67);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 58 02BD
        gbc.setState(0xca41, 0xc469, 0xb670, 0xd1be, 0xbd09, 0xb0dd, 0x1, 0x1);
        gbc.writeMem(0xca41, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0xc469);
        EXPECT(gbc.pc(), 0xca42);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xca41), 0x58);
        // 58 02BE
        gbc.setState(0x5109, 0x243f, 0x50d0, 0xfdb9, 0xea31, 0x51f6, 0x1, 0x1);
        gbc.writeMem(0x5109, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x243f);
        EXPECT(gbc.pc(), 0x510a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 58 02BF
        gbc.setState(0x75d9, 0x3265, 0xdef0, 0x4a57, 0xe5ee, 0x44e2, 0x1, 0x1);
        gbc.writeMem(0x75d9, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x3265);
        EXPECT(gbc.pc(), 0x75da);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 58 02C0
        gbc.setState(0xdcfe, 0x2e9d, 0xaa60, 0xa94f, 0x397f, 0x16e9, 0x1, 0x0);
        gbc.writeMem(0xdcfe, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x2e9d);
        EXPECT(gbc.pc(), 0xdcff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdcfe), 0x58);
        // 58 02C1
        gbc.setState(0x124b, 0xcb91, 0xf290, 0xafa1, 0x1ba5, 0x6561, 0x1, 0x1);
        gbc.writeMem(0x124b, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0xcb91);
        EXPECT(gbc.pc(), 0x124c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 58 02C2
        gbc.setState(0x4975, 0xd8b5, 0xfe80, 0x7b9e, 0xb586, 0x6ae9, 0x0, 0x1);
        gbc.writeMem(0x4975, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0xd8b5);
        EXPECT(gbc.pc(), 0x4976);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 58 02C3
        gbc.setState(0xbe97, 0x8b8, 0xed70, 0x3934, 0xd556, 0x8aaa, 0x0, 0x0);
        gbc.writeMem(0xbe97, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x8b8);
        EXPECT(gbc.pc(), 0xbe98);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbe97), 0x58);
        // 58 02C4
        gbc.setState(0x82cd, 0xe901, 0xb370, 0x19a3, 0xf860, 0xec0d, 0x0, 0x0);
        gbc.writeMem(0x82cd, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0xe901);
        EXPECT(gbc.pc(), 0x82ce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x82cd), 0x58);
        // 58 02C5
        gbc.setState(0xcba1, 0xbeb, 0xbf50, 0x12c5, 0xe625, 0xfe11, 0x1, 0x0);
        gbc.writeMem(0xcba1, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0xbeb);
        EXPECT(gbc.pc(), 0xcba2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcba1), 0x58);
        // 58 02C6
        gbc.setState(0x9b96, 0x4bb9, 0xc7f0, 0xbf99, 0xfc96, 0xfe13, 0x1, 0x0);
        gbc.writeMem(0x9b96, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x4bb9);
        EXPECT(gbc.pc(), 0x9b97);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9b96), 0x58);
        // 58 02C7
        gbc.setState(0x3e46, 0x49ad, 0xcd40, 0xa067, 0x1fce, 0x6f2f, 0x1, 0x0);
        gbc.writeMem(0x3e46, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x49ad);
        EXPECT(gbc.pc(), 0x3e47);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 58 02C8
        gbc.setState(0x2e24, 0xec6f, 0x7f40, 0x4f68, 0x372, 0x9f5, 0x0, 0x1);
        gbc.writeMem(0x2e24, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0xec6f);
        EXPECT(gbc.pc(), 0x2e25);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 58 02C9
        gbc.setState(0x662b, 0xba09, 0x1310, 0x9c2c, 0xcb66, 0x5dc3, 0x1, 0x1);
        gbc.writeMem(0x662b, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xba09);
        EXPECT(gbc.pc(), 0x662c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 58 02CA
        gbc.setState(0xd48e, 0x3762, 0x7160, 0x5af3, 0x87bf, 0xe76e, 0x0, 0x0);
        gbc.writeMem(0xd48e, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x3762);
        EXPECT(gbc.pc(), 0xd48f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd48e), 0x58);
        // 58 02CB
        gbc.setState(0xb3ec, 0xa7cb, 0xd690, 0x89dd, 0x65b5, 0x8dc6, 0x0, 0x0);
        gbc.writeMem(0xb3ec, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0xa7cb);
        EXPECT(gbc.pc(), 0xb3ed);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb3ec), 0x58);
        // 58 02CC
        gbc.setState(0x6352, 0xadc8, 0x7760, 0x316c, 0x4f9e, 0xb7c8, 0x0, 0x0);
        gbc.writeMem(0x6352, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0xadc8);
        EXPECT(gbc.pc(), 0x6353);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 58 02CD
        gbc.setState(0x5a89, 0x360c, 0xfbc0, 0xaf03, 0xe81, 0x5195, 0x0, 0x1);
        gbc.writeMem(0x5a89, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x360c);
        EXPECT(gbc.pc(), 0x5a8a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 58 02CE
        gbc.setState(0x13f4, 0x951f, 0x4390, 0x96bc, 0x4b44, 0x26e4, 0x0, 0x1);
        gbc.writeMem(0x13f4, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x951f);
        EXPECT(gbc.pc(), 0x13f5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 58 02CF
        gbc.setState(0x733, 0xc8be, 0xe4d0, 0xc6e6, 0x76b5, 0x9aa3, 0x0, 0x0);
        gbc.writeMem(0x733, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0xc8be);
        EXPECT(gbc.pc(), 0x734);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 58 02D0
        gbc.setState(0x2aa9, 0xea04, 0xb020, 0xf3a7, 0x2d03, 0x7563, 0x1, 0x1);
        gbc.writeMem(0x2aa9, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0xea04);
        EXPECT(gbc.pc(), 0x2aaa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 58 02D1
        gbc.setState(0x6956, 0x4af8, 0xe7d0, 0xd93e, 0xbb8, 0xa57b, 0x1, 0x0);
        gbc.writeMem(0x6956, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x4af8);
        EXPECT(gbc.pc(), 0x6957);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 58 02D2
        gbc.setState(0xa7a1, 0x105e, 0xda90, 0xbfab, 0x58e9, 0xaf3c, 0x0, 0x1);
        gbc.writeMem(0xa7a1, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x105e);
        EXPECT(gbc.pc(), 0xa7a2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa7a1), 0x58);
        // 58 02D3
        gbc.setState(0x51c2, 0x4650, 0xdd90, 0x82b4, 0x2f59, 0x840, 0x0, 0x1);
        gbc.writeMem(0x51c2, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x4650);
        EXPECT(gbc.pc(), 0x51c3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 58 02D4
        gbc.setState(0xdb33, 0x1d1c, 0xa850, 0x4b1c, 0x7338, 0x84b7, 0x0, 0x1);
        gbc.writeMem(0xdb33, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x1d1c);
        EXPECT(gbc.pc(), 0xdb34);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdb33), 0x58);
        // 58 02D5
        gbc.setState(0xba9d, 0x1944, 0x4f50, 0x77, 0x967a, 0x7d2e, 0x0, 0x1);
        gbc.writeMem(0xba9d, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x1944);
        EXPECT(gbc.pc(), 0xba9e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xba9d), 0x58);
        // 58 02D6
        gbc.setState(0x6af2, 0x3c79, 0xe2a0, 0xfd2a, 0xfee3, 0xdc97, 0x1, 0x1);
        gbc.writeMem(0x6af2, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x3c79);
        EXPECT(gbc.pc(), 0x6af3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 58 02D7
        gbc.setState(0xb2bb, 0x275a, 0x5080, 0x90d8, 0x3d5a, 0x8a7, 0x1, 0x0);
        gbc.writeMem(0xb2bb, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x275a);
        EXPECT(gbc.pc(), 0xb2bc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb2bb), 0x58);
        // 58 02D8
        gbc.setState(0x586b, 0xce8d, 0xe810, 0x9855, 0x7f9, 0x74c9, 0x0, 0x0);
        gbc.writeMem(0x586b, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0xce8d);
        EXPECT(gbc.pc(), 0x586c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 58 02D9
        gbc.setState(0x8ffb, 0xd505, 0x3020, 0xf535, 0x8203, 0x87a6, 0x1, 0x0);
        gbc.writeMem(0x8ffb, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0xd505);
        EXPECT(gbc.pc(), 0x8ffc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ffb), 0x58);
        // 58 02DA
        gbc.setState(0xb18, 0xbe7b, 0x1590, 0x9738, 0x8ee, 0x785, 0x1, 0x1);
        gbc.writeMem(0xb18, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0xbe7b);
        EXPECT(gbc.pc(), 0xb19);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 58 02DB
        gbc.setState(0x1b, 0xda2e, 0xb150, 0xda45, 0xf46e, 0xb398, 0x0, 0x1);
        gbc.writeMem(0x1b, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xda2e);
        EXPECT(gbc.pc(), 0x1c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 58 02DC
        gbc.setState(0x1047, 0xa10a, 0xee0, 0xa07b, 0xdbe2, 0xf0c8, 0x1, 0x0);
        gbc.writeMem(0x1047, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0xa10a);
        EXPECT(gbc.pc(), 0x1048);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 58 02DD
        gbc.setState(0x5483, 0xcdaf, 0x5300, 0xcc9c, 0x4ce, 0x368e, 0x0, 0x0);
        gbc.writeMem(0x5483, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0xcdaf);
        EXPECT(gbc.pc(), 0x5484);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 58 02DE
        gbc.setState(0x48cc, 0xeca4, 0xdb60, 0xb702, 0x7df8, 0xc161, 0x1, 0x1);
        gbc.writeMem(0x48cc, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0xeca4);
        EXPECT(gbc.pc(), 0x48cd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 58 02DF
        gbc.setState(0x185b, 0x3194, 0xf840, 0xccca, 0x3b1, 0x16d5, 0x1, 0x1);
        gbc.writeMem(0x185b, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x3194);
        EXPECT(gbc.pc(), 0x185c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 58 02E0
        gbc.setState(0xb0a7, 0x381a, 0xc640, 0x834e, 0x485b, 0x259a, 0x0, 0x0);
        gbc.writeMem(0xb0a7, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x381a);
        EXPECT(gbc.pc(), 0xb0a8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb0a7), 0x58);
        // 58 02E1
        gbc.setState(0xcb7b, 0xabbd, 0xf7f0, 0xabc5, 0xa66d, 0xcb8f, 0x1, 0x1);
        gbc.writeMem(0xcb7b, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xabbd);
        EXPECT(gbc.pc(), 0xcb7c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcb7b), 0x58);
        // 58 02E2
        gbc.setState(0x33b7, 0x43e5, 0x5170, 0xbcc9, 0xc87f, 0x4825, 0x0, 0x0);
        gbc.writeMem(0x33b7, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x43e5);
        EXPECT(gbc.pc(), 0x33b8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 58 02E3
        gbc.setState(0xc9b7, 0x955e, 0x58b0, 0xcc24, 0x7ab1, 0xa9e5, 0x1, 0x0);
        gbc.writeMem(0xc9b7, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x955e);
        EXPECT(gbc.pc(), 0xc9b8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc9b7), 0x58);
        // 58 02E4
        gbc.setState(0x50fb, 0x6bc, 0x7130, 0x8353, 0x6c96, 0x777b, 0x0, 0x0);
        gbc.writeMem(0x50fb, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x6bc);
        EXPECT(gbc.pc(), 0x50fc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 58 02E5
        gbc.setState(0x9238, 0x379f, 0x8890, 0x20b6, 0xf8c2, 0x2313, 0x0, 0x0);
        gbc.writeMem(0x9238, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x379f);
        EXPECT(gbc.pc(), 0x9239);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9238), 0x58);
        // 58 02E6
        gbc.setState(0x6789, 0xa512, 0x5010, 0x5a54, 0x53a8, 0x2f45, 0x0, 0x0);
        gbc.writeMem(0x6789, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0xa512);
        EXPECT(gbc.pc(), 0x678a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 58 02E7
        gbc.setState(0x5597, 0xabc5, 0x75b0, 0x3feb, 0x7560, 0x3bd5, 0x1, 0x1);
        gbc.writeMem(0x5597, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0xabc5);
        EXPECT(gbc.pc(), 0x5598);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 58 02E8
        gbc.setState(0xdeb6, 0x9c81, 0x7370, 0xac50, 0xc3d5, 0x4371, 0x0, 0x0);
        gbc.writeMem(0xdeb6, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x9c81);
        EXPECT(gbc.pc(), 0xdeb7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdeb6), 0x58);
        // 58 02E9
        gbc.setState(0x39be, 0xdafa, 0x2c60, 0x6443, 0xe3c3, 0x9cae, 0x0, 0x1);
        gbc.writeMem(0x39be, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0xdafa);
        EXPECT(gbc.pc(), 0x39bf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 58 02EA
        gbc.setState(0xdc05, 0xebb7, 0x8550, 0x40f6, 0xa125, 0x5cd6, 0x0, 0x0);
        gbc.writeMem(0xdc05, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0xebb7);
        EXPECT(gbc.pc(), 0xdc06);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdc05), 0x58);
        // 58 02EB
        gbc.setState(0x88, 0x51f8, 0x6d00, 0x90e4, 0x8795, 0xb43e, 0x0, 0x0);
        gbc.writeMem(0x88, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x51f8);
        EXPECT(gbc.pc(), 0x89);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 58 02EC
        gbc.setState(0xe451, 0x96c5, 0x12d0, 0xccea, 0x4554, 0x2331, 0x1, 0x0);
        gbc.writeMem(0xe451, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x96c5);
        EXPECT(gbc.pc(), 0xe452);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe451), 0x58);
        // 58 02ED
        gbc.setState(0x8456, 0x98f8, 0x7cb0, 0xcea8, 0x20f0, 0x5f5e, 0x1, 0x0);
        gbc.writeMem(0x8456, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x98f8);
        EXPECT(gbc.pc(), 0x8457);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8456), 0x58);
        // 58 02EF
        gbc.setState(0x851, 0xc536, 0x5280, 0x1e42, 0x69ca, 0x8582, 0x1, 0x1);
        gbc.writeMem(0x851, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0xc536);
        EXPECT(gbc.pc(), 0x852);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 58 02F0
        gbc.setState(0x14aa, 0x9863, 0x6210, 0x7337, 0x6d72, 0x27f2, 0x1, 0x0);
        gbc.writeMem(0x14aa, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x9863);
        EXPECT(gbc.pc(), 0x14ab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 58 02F1
        gbc.setState(0x24fe, 0x43db, 0x77f0, 0x3005, 0x607d, 0x7935, 0x1, 0x1);
        gbc.writeMem(0x24fe, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x43db);
        EXPECT(gbc.pc(), 0x24ff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 58 02F2
        gbc.setState(0x81de, 0x5b31, 0xae50, 0xb90c, 0x2de4, 0xc0dd, 0x0, 0x0);
        gbc.writeMem(0x81de, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x5b31);
        EXPECT(gbc.pc(), 0x81df);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x81de), 0x58);
        // 58 02F3
        gbc.setState(0x6a20, 0xf8f3, 0xe880, 0xc848, 0x235b, 0xcc6f, 0x1, 0x0);
        gbc.writeMem(0x6a20, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0xf8f3);
        EXPECT(gbc.pc(), 0x6a21);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 58 02F4
        gbc.setState(0x9e1e, 0x80fb, 0xb640, 0x24f1, 0x13f4, 0xf0ea, 0x0, 0x1);
        gbc.writeMem(0x9e1e, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x80fb);
        EXPECT(gbc.pc(), 0x9e1f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9e1e), 0x58);
        // 58 02F5
        gbc.setState(0xda05, 0x79ab, 0xebc0, 0x2cf7, 0x2353, 0xf481, 0x0, 0x1);
        gbc.writeMem(0xda05, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x79ab);
        EXPECT(gbc.pc(), 0xda06);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xda05), 0x58);
        // 58 02F6
        gbc.setState(0xced7, 0x8d42, 0xd5e0, 0xae86, 0x85ea, 0x85f7, 0x0, 0x1);
        gbc.writeMem(0xced7, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x8d42);
        EXPECT(gbc.pc(), 0xced8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xced7), 0x58);
        // 58 02F7
        gbc.setState(0x2e26, 0x6b1e, 0x9640, 0xee32, 0x5af9, 0x7c1, 0x1, 0x0);
        gbc.writeMem(0x2e26, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x6b1e);
        EXPECT(gbc.pc(), 0x2e27);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 58 02F8
        gbc.setState(0x3671, 0x277e, 0x8e40, 0x6b16, 0x77b, 0x89b4, 0x0, 0x1);
        gbc.writeMem(0x3671, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x277e);
        EXPECT(gbc.pc(), 0x3672);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 58 02F9
        gbc.setState(0x83c4, 0xdbfe, 0x72c0, 0xad66, 0x577a, 0x279f, 0x1, 0x0);
        gbc.writeMem(0x83c4, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0xdbfe);
        EXPECT(gbc.pc(), 0x83c5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x83c4), 0x58);
        // 58 02FA
        gbc.setState(0x6d79, 0xd93d, 0x54c0, 0xbe37, 0x93d0, 0x9556, 0x1, 0x1);
        gbc.writeMem(0x6d79, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0xd93d);
        EXPECT(gbc.pc(), 0x6d7a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 58 02FB
        gbc.setState(0x21d0, 0x1530, 0xefd0, 0x9dfe, 0x394f, 0xe921, 0x0, 0x1);
        gbc.writeMem(0x21d0, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x1530);
        EXPECT(gbc.pc(), 0x21d1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 58 02FC
        gbc.setState(0x668d, 0x6944, 0x7fa0, 0x81fa, 0xec00, 0x2f87, 0x1, 0x0);
        gbc.writeMem(0x668d, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x6944);
        EXPECT(gbc.pc(), 0x668e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 58 02FE
        gbc.setState(0x1d8c, 0x5fb6, 0x1930, 0xaaff, 0x1583, 0xad9c, 0x1, 0x0);
        gbc.writeMem(0x1d8c, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x5fb6);
        EXPECT(gbc.pc(), 0x1d8d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 58 02FF
        gbc.setState(0xeaf, 0xadef, 0x68a0, 0xd32b, 0x82c9, 0x40dc, 0x0, 0x1);
        gbc.writeMem(0xeaf, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0xadef);
        EXPECT(gbc.pc(), 0xeb0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 58 0300
        gbc.setState(0xadb3, 0x176e, 0x5b30, 0x15a, 0x4526, 0x6630, 0x0, 0x0);
        gbc.writeMem(0xadb3, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x176e);
        EXPECT(gbc.pc(), 0xadb4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xadb3), 0x58);
        // 58 0301
        gbc.setState(0x59f0, 0x15cd, 0xced0, 0xeefa, 0x39d9, 0xfebd, 0x0, 0x0);
        gbc.writeMem(0x59f0, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x15cd);
        EXPECT(gbc.pc(), 0x59f1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 58 0302
        gbc.setState(0x80aa, 0xb4b6, 0x41d0, 0x6941, 0x5a1d, 0xb95b, 0x1, 0x0);
        gbc.writeMem(0x80aa, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0xb4b6);
        EXPECT(gbc.pc(), 0x80ab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x80aa), 0x58);
        // 58 0303
        gbc.setState(0x9d70, 0xaabd, 0x4ed0, 0x4210, 0x5a20, 0xd1c9, 0x0, 0x1);
        gbc.writeMem(0x9d70, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0xaabd);
        EXPECT(gbc.pc(), 0x9d71);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9d70), 0x58);
        // 58 0304
        gbc.setState(0xe487, 0x4f9c, 0xb1d0, 0x66cf, 0xc25, 0x717b, 0x0, 0x1);
        gbc.writeMem(0xe487, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x4f9c);
        EXPECT(gbc.pc(), 0xe488);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe487), 0x58);
        // 58 0305
        gbc.setState(0x3f79, 0xe881, 0x82c0, 0xaea8, 0xd512, 0x103f, 0x1, 0x0);
        gbc.writeMem(0x3f79, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xe881);
        EXPECT(gbc.pc(), 0x3f7a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 58 0306
        gbc.setState(0x8f01, 0xbe9b, 0x87b0, 0x6f43, 0xdb6d, 0xf938, 0x1, 0x0);
        gbc.writeMem(0x8f01, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0xbe9b);
        EXPECT(gbc.pc(), 0x8f02);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8f01), 0x58);
        // 58 0307
        gbc.setState(0xa630, 0xb528, 0x62d0, 0x2853, 0xbc89, 0x4c9b, 0x0, 0x1);
        gbc.writeMem(0xa630, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0xb528);
        EXPECT(gbc.pc(), 0xa631);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa630), 0x58);
        // 58 0308
        gbc.setState(0x242, 0x7886, 0x2900, 0xd3b5, 0xe65b, 0xcb1c, 0x1, 0x0);
        gbc.writeMem(0x242, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x7886);
        EXPECT(gbc.pc(), 0x243);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 58 0309
        gbc.setState(0x8eea, 0xdd10, 0x49d0, 0x1eb6, 0x8dec, 0xc4b1, 0x1, 0x1);
        gbc.writeMem(0x8eea, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0xdd10);
        EXPECT(gbc.pc(), 0x8eeb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8eea), 0x58);
        // 58 030A
        gbc.setState(0x9e1, 0x15e6, 0x20f0, 0xb714, 0x4306, 0xc771, 0x1, 0x1);
        gbc.writeMem(0x9e1, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x15e6);
        EXPECT(gbc.pc(), 0x9e2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 58 030B
        gbc.setState(0xd875, 0xc7a5, 0x5c10, 0x12ee, 0xbe8a, 0x877, 0x1, 0x0);
        gbc.writeMem(0xd875, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xc7a5);
        EXPECT(gbc.pc(), 0xd876);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd875), 0x58);
        // 58 030C
        gbc.setState(0x6cbc, 0x3bf2, 0x4c0, 0x76e3, 0xa07, 0x25a3, 0x0, 0x0);
        gbc.writeMem(0x6cbc, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x3bf2);
        EXPECT(gbc.pc(), 0x6cbd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 58 030D
        gbc.setState(0x2441, 0x1bd1, 0x1ea0, 0x7ddc, 0x4be8, 0x13d3, 0x1, 0x1);
        gbc.writeMem(0x2441, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x1bd1);
        EXPECT(gbc.pc(), 0x2442);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 58 030E
        gbc.setState(0x7764, 0xc8bb, 0x3970, 0x534f, 0x4cac, 0xc23b, 0x1, 0x0);
        gbc.writeMem(0x7764, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0xc8bb);
        EXPECT(gbc.pc(), 0x7765);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 58 0310
        gbc.setState(0x3a46, 0xe77d, 0xcd70, 0xbf34, 0x7afe, 0x5e61, 0x1, 0x1);
        gbc.writeMem(0x3a46, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0xe77d);
        EXPECT(gbc.pc(), 0x3a47);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 58 0311
        gbc.setState(0x98ff, 0xd10d, 0x21d0, 0xc646, 0x363f, 0xaad8, 0x0, 0x1);
        gbc.writeMem(0x98ff, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0xd10d);
        EXPECT(gbc.pc(), 0x9900);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x98ff), 0x58);
        // 58 0313
        gbc.setState(0xf45, 0x2b2e, 0xaa90, 0x72fd, 0xc0dd, 0xcb77, 0x1, 0x1);
        gbc.writeMem(0xf45, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x2b2e);
        EXPECT(gbc.pc(), 0xf46);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 58 0315
        gbc.setState(0xec22, 0x4599, 0xd5f0, 0x5341, 0x4660, 0x31e8, 0x0, 0x0);
        gbc.writeMem(0xec22, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x4599);
        EXPECT(gbc.pc(), 0xec23);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xec22), 0x58);
        // 58 0316
        gbc.setState(0xcb78, 0x3440, 0xadd0, 0x8cdf, 0xb0ad, 0x29f5, 0x0, 0x1);
        gbc.writeMem(0xcb78, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x3440);
        EXPECT(gbc.pc(), 0xcb79);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcb78), 0x58);
        // 58 0317
        gbc.setState(0xa21d, 0x6a48, 0xa850, 0x2b89, 0x3202, 0x72ef, 0x1, 0x0);
        gbc.writeMem(0xa21d, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x6a48);
        EXPECT(gbc.pc(), 0xa21e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa21d), 0x58);
        // 58 0318
        gbc.setState(0x9850, 0xe924, 0x26c0, 0xe7d9, 0xf6b5, 0x7d72, 0x0, 0x0);
        gbc.writeMem(0x9850, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0xe924);
        EXPECT(gbc.pc(), 0x9851);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9850), 0x58);
        // 58 0319
        gbc.setState(0x7822, 0x5585, 0x4c60, 0x68ce, 0x3c7f, 0x59f4, 0x0, 0x0);
        gbc.writeMem(0x7822, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x5585);
        EXPECT(gbc.pc(), 0x7823);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 58 031A
        gbc.setState(0xedc7, 0x483e, 0xf060, 0x9bcb, 0x28f3, 0x58ca, 0x1, 0x1);
        gbc.writeMem(0xedc7, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x483e);
        EXPECT(gbc.pc(), 0xedc8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xedc7), 0x58);
        // 58 031B
        gbc.setState(0x2804, 0xbb21, 0x8920, 0xfc28, 0x1d59, 0x1e7c, 0x0, 0x1);
        gbc.writeMem(0x2804, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xbb21);
        EXPECT(gbc.pc(), 0x2805);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 58 031C
        gbc.setState(0x7223, 0x22f2, 0x9d80, 0x6c8f, 0xffd9, 0x2e2a, 0x0, 0x0);
        gbc.writeMem(0x7223, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x22f2);
        EXPECT(gbc.pc(), 0x7224);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 58 031D
        gbc.setState(0x607f, 0x9b8e, 0x3b40, 0x5e43, 0x4979, 0x1e81, 0x0, 0x1);
        gbc.writeMem(0x607f, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x9b8e);
        EXPECT(gbc.pc(), 0x6080);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 58 031E
        gbc.setState(0x651c, 0x5c5e, 0x83a0, 0xa78f, 0x507b, 0x594, 0x1, 0x1);
        gbc.writeMem(0x651c, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x5c5e);
        EXPECT(gbc.pc(), 0x651d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 58 031F
        gbc.setState(0x4b2e, 0xdbd2, 0xe020, 0x62e2, 0xea8e, 0xaa6d, 0x1, 0x1);
        gbc.writeMem(0x4b2e, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0xdbd2);
        EXPECT(gbc.pc(), 0x4b2f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 58 0320
        gbc.setState(0xe785, 0xa6a, 0xa4b0, 0x430e, 0x4e9f, 0xbd5b, 0x0, 0x1);
        gbc.writeMem(0xe785, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0xa6a);
        EXPECT(gbc.pc(), 0xe786);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe785), 0x58);
        // 58 0321
        gbc.setState(0xd857, 0x636d, 0x4020, 0x868e, 0xe62b, 0x7c65, 0x0, 0x1);
        gbc.writeMem(0xd857, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x636d);
        EXPECT(gbc.pc(), 0xd858);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd857), 0x58);
        // 58 0322
        gbc.setState(0x8cea, 0x4a8f, 0xd8e0, 0x4bf3, 0x2a59, 0x59ce, 0x0, 0x0);
        gbc.writeMem(0x8cea, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x4a8f);
        EXPECT(gbc.pc(), 0x8ceb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8cea), 0x58);
        // 58 0323
        gbc.setState(0x25e0, 0x2531, 0xe7c0, 0x8205, 0xf15, 0x2bfc, 0x1, 0x0);
        gbc.writeMem(0x25e0, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x2531);
        EXPECT(gbc.pc(), 0x25e1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 58 0324
        gbc.setState(0xbce5, 0x6061, 0xc70, 0x36df, 0x389b, 0x21aa, 0x1, 0x1);
        gbc.writeMem(0xbce5, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x6061);
        EXPECT(gbc.pc(), 0xbce6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbce5), 0x58);
        // 58 0325
        gbc.setState(0xb7a7, 0xd277, 0x3570, 0x1222, 0xa54, 0x4691, 0x0, 0x1);
        gbc.writeMem(0xb7a7, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0xd277);
        EXPECT(gbc.pc(), 0xb7a8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb7a7), 0x58);
        // 58 0326
        gbc.setState(0xabb9, 0x11a7, 0xa240, 0x7e57, 0xbd8c, 0xc69e, 0x1, 0x0);
        gbc.writeMem(0xabb9, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x11a7);
        EXPECT(gbc.pc(), 0xabba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xabb9), 0x58);
        // 58 0327
        gbc.setState(0x4a8f, 0x9e20, 0x4810, 0x6acf, 0x389e, 0x9097, 0x1, 0x1);
        gbc.writeMem(0x4a8f, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x9e20);
        EXPECT(gbc.pc(), 0x4a90);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 58 0328
        gbc.setState(0x2666, 0xb900, 0x21e0, 0x653e, 0xa42e, 0xbb92, 0x0, 0x0);
        gbc.writeMem(0x2666, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0xb900);
        EXPECT(gbc.pc(), 0x2667);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 58 0329
        gbc.setState(0xe97c, 0xcf25, 0x3fe0, 0x6d11, 0x8619, 0x55, 0x1, 0x0);
        gbc.writeMem(0xe97c, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0xcf25);
        EXPECT(gbc.pc(), 0xe97d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe97c), 0x58);
        // 58 032A
        gbc.setState(0x99ad, 0x2dce, 0xab50, 0xaeb9, 0x4792, 0x8184, 0x1, 0x1);
        gbc.writeMem(0x99ad, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x2dce);
        EXPECT(gbc.pc(), 0x99ae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x99ad), 0x58);
        // 58 032B
        gbc.setState(0x6c60, 0x5245, 0xf70, 0x13a3, 0x28dd, 0xa3a5, 0x1, 0x1);
        gbc.writeMem(0x6c60, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x5245);
        EXPECT(gbc.pc(), 0x6c61);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 58 032C
        gbc.setState(0xe07c, 0x5bdc, 0xc1f0, 0xeeea, 0xb5dc, 0xae27, 0x0, 0x0);
        gbc.writeMem(0xe07c, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x5bdc);
        EXPECT(gbc.pc(), 0xe07d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe07c), 0x58);
        // 58 032D
        gbc.setState(0x7c9d, 0xf926, 0x7c40, 0xcc67, 0xf07a, 0x617d, 0x1, 0x0);
        gbc.writeMem(0x7c9d, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xf926);
        EXPECT(gbc.pc(), 0x7c9e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 58 032F
        gbc.setState(0xbc15, 0x8cf5, 0x1f00, 0x8754, 0xdd0a, 0xbe27, 0x0, 0x1);
        gbc.writeMem(0xbc15, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x8cf5);
        EXPECT(gbc.pc(), 0xbc16);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbc15), 0x58);
        // 58 0330
        gbc.setState(0xa996, 0x3f9f, 0x3400, 0xdf4d, 0xfeb, 0x211d, 0x0, 0x1);
        gbc.writeMem(0xa996, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x3f9f);
        EXPECT(gbc.pc(), 0xa997);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa996), 0x58);
        // 58 0331
        gbc.setState(0x8f09, 0x528e, 0x4530, 0x8302, 0xdadd, 0x63be, 0x0, 0x0);
        gbc.writeMem(0x8f09, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x528e);
        EXPECT(gbc.pc(), 0x8f0a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8f09), 0x58);
        // 58 0332
        gbc.setState(0x40c0, 0xa644, 0x5480, 0x4c35, 0x881d, 0xd89e, 0x1, 0x1);
        gbc.writeMem(0x40c0, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0xa644);
        EXPECT(gbc.pc(), 0x40c1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 58 0333
        gbc.setState(0xa95f, 0xdeee, 0x65f0, 0xe9c6, 0xbe00, 0x1796, 0x1, 0x0);
        gbc.writeMem(0xa95f, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0xdeee);
        EXPECT(gbc.pc(), 0xa960);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa95f), 0x58);
        // 58 0334
        gbc.setState(0x5f9a, 0x15e1, 0xd810, 0xd601, 0x9af2, 0xc21c, 0x1, 0x1);
        gbc.writeMem(0x5f9a, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x15e1);
        EXPECT(gbc.pc(), 0x5f9b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 58 0335
        gbc.setState(0xda95, 0xa026, 0x5f0, 0x3d62, 0xf481, 0xea7c, 0x0, 0x1);
        gbc.writeMem(0xda95, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xa026);
        EXPECT(gbc.pc(), 0xda96);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xda95), 0x58);
        // 58 0336
        gbc.setState(0x9b14, 0x4c98, 0x980, 0xb6e4, 0xadad, 0xd189, 0x0, 0x0);
        gbc.writeMem(0x9b14, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x4c98);
        EXPECT(gbc.pc(), 0x9b15);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9b14), 0x58);
        // 58 0337
        gbc.setState(0x9b1, 0xffd5, 0x80e0, 0x11d0, 0x2ee9, 0x69d6, 0x1, 0x0);
        gbc.writeMem(0x9b1, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0xffd5);
        EXPECT(gbc.pc(), 0x9b2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 58 0338
        gbc.setState(0x12d4, 0x4fb5, 0xde80, 0x7680, 0x74c1, 0x2f13, 0x1, 0x1);
        gbc.writeMem(0x12d4, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x4fb5);
        EXPECT(gbc.pc(), 0x12d5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 58 0339
        gbc.setState(0x74b, 0x38aa, 0x84a0, 0xa649, 0xecc4, 0xea5, 0x1, 0x1);
        gbc.writeMem(0x74b, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x38aa);
        EXPECT(gbc.pc(), 0x74c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 58 033A
        gbc.setState(0x6d06, 0xa010, 0x9760, 0x392d, 0x3b83, 0x5b31, 0x0, 0x1);
        gbc.writeMem(0x6d06, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xa010);
        EXPECT(gbc.pc(), 0x6d07);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 58 033B
        gbc.setState(0x1963, 0x28, 0x75d0, 0xfc2, 0xa1c1, 0x7587, 0x0, 0x1);
        gbc.writeMem(0x1963, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x28);
        EXPECT(gbc.pc(), 0x1964);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 58 033C
        gbc.setState(0x1822, 0xff57, 0x6160, 0x5868, 0x169, 0x8e07, 0x1, 0x0);
        gbc.writeMem(0x1822, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xff57);
        EXPECT(gbc.pc(), 0x1823);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 58 033D
        gbc.setState(0x6c80, 0xf27e, 0x2de0, 0xeb1a, 0x5784, 0xc4ce, 0x0, 0x1);
        gbc.writeMem(0x6c80, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0xf27e);
        EXPECT(gbc.pc(), 0x6c81);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 58 033E
        gbc.setState(0x64f7, 0x1bdf, 0x3cc0, 0xee1, 0xbfe4, 0x7ab0, 0x1, 0x0);
        gbc.writeMem(0x64f7, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x1bdf);
        EXPECT(gbc.pc(), 0x64f8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 58 033F
        gbc.setState(0x26e9, 0x6a99, 0x1ee0, 0x5dd1, 0x82ec, 0x8f04, 0x1, 0x1);
        gbc.writeMem(0x26e9, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x6a99);
        EXPECT(gbc.pc(), 0x26ea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 58 0340
        gbc.setState(0x5681, 0xb46b, 0x1010, 0xc910, 0x9fef, 0x22c, 0x0, 0x1);
        gbc.writeMem(0x5681, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0xb46b);
        EXPECT(gbc.pc(), 0x5682);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 58 0341
        gbc.setState(0xb2ad, 0x20ed, 0xb4c0, 0xab8e, 0x97a2, 0x2066, 0x1, 0x1);
        gbc.writeMem(0xb2ad, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x20ed);
        EXPECT(gbc.pc(), 0xb2ae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb2ad), 0x58);
        // 58 0342
        gbc.setState(0xdb30, 0x10df, 0xe730, 0xf2a3, 0xc44b, 0x4bc4, 0x0, 0x0);
        gbc.writeMem(0xdb30, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x10df);
        EXPECT(gbc.pc(), 0xdb31);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdb30), 0x58);
        // 58 0343
        gbc.setState(0xae46, 0x5ff7, 0x5fd0, 0x8a74, 0xe105, 0x7366, 0x0, 0x0);
        gbc.writeMem(0xae46, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x5ff7);
        EXPECT(gbc.pc(), 0xae47);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xae46), 0x58);
        // 58 0344
        gbc.setState(0x558c, 0x715c, 0xb260, 0xc8c5, 0xf748, 0x7f1, 0x1, 0x0);
        gbc.writeMem(0x558c, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x715c);
        EXPECT(gbc.pc(), 0x558d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 58 0345
        gbc.setState(0x5d7d, 0x3fad, 0x8d30, 0x47cc, 0x3edd, 0x3267, 0x1, 0x0);
        gbc.writeMem(0x5d7d, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x3fad);
        EXPECT(gbc.pc(), 0x5d7e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 58 0346
        gbc.setState(0xcffd, 0xa3df, 0xd090, 0xa36f, 0xe05, 0x8756, 0x0, 0x1);
        gbc.writeMem(0xcffd, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0xa3df);
        EXPECT(gbc.pc(), 0xcffe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcffd), 0x58);
        // 58 0347
        gbc.setState(0x78fe, 0xdcae, 0xa6a0, 0xb512, 0x60dc, 0xcc3b, 0x0, 0x1);
        gbc.writeMem(0x78fe, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0xdcae);
        EXPECT(gbc.pc(), 0x78ff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 58 0348
        gbc.setState(0x3dcc, 0x122f, 0x31a0, 0x6006, 0x4b13, 0x741, 0x1, 0x0);
        gbc.writeMem(0x3dcc, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x122f);
        EXPECT(gbc.pc(), 0x3dcd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 58 0349
        gbc.setState(0x572d, 0xab94, 0x6620, 0x93e9, 0x1217, 0xd7a8, 0x1, 0x0);
        gbc.writeMem(0x572d, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0xab94);
        EXPECT(gbc.pc(), 0x572e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 58 034A
        gbc.setState(0x64f4, 0x58a3, 0xab10, 0xaad0, 0xf7b, 0x6f3, 0x0, 0x0);
        gbc.writeMem(0x64f4, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x58a3);
        EXPECT(gbc.pc(), 0x64f5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 58 034B
        gbc.setState(0x7d39, 0x5036, 0x78f0, 0xfeba, 0x4fe9, 0xbf13, 0x0, 0x0);
        gbc.writeMem(0x7d39, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x5036);
        EXPECT(gbc.pc(), 0x7d3a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 58 034C
        gbc.setState(0x4f82, 0xb909, 0x24a0, 0x8fcd, 0x20f9, 0xf3f1, 0x0, 0x1);
        gbc.writeMem(0x4f82, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0xb909);
        EXPECT(gbc.pc(), 0x4f83);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 58 034D
        gbc.setState(0x5f64, 0x2a95, 0xfaf0, 0x4ad9, 0xd79f, 0x4a3f, 0x0, 0x0);
        gbc.writeMem(0x5f64, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x2a95);
        EXPECT(gbc.pc(), 0x5f65);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 58 034E
        gbc.setState(0xaaa3, 0xf557, 0x75d0, 0x5742, 0x2f4, 0x934e, 0x0, 0x0);
        gbc.writeMem(0xaaa3, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0xf557);
        EXPECT(gbc.pc(), 0xaaa4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaaa3), 0x58);
        // 58 034F
        gbc.setState(0x5e6f, 0x7c6f, 0x30b0, 0x5922, 0x4c65, 0x55e2, 0x0, 0x0);
        gbc.writeMem(0x5e6f, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x7c6f);
        EXPECT(gbc.pc(), 0x5e70);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 58 0351
        gbc.setState(0xbb8f, 0x2d69, 0xcb80, 0xce9b, 0xa580, 0x5915, 0x1, 0x1);
        gbc.writeMem(0xbb8f, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x2d69);
        EXPECT(gbc.pc(), 0xbb90);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbb8f), 0x58);
        // 58 0353
        gbc.setState(0x5a6e, 0x8982, 0xe260, 0x67a7, 0x5986, 0xbeac, 0x0, 0x0);
        gbc.writeMem(0x5a6e, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x8982);
        EXPECT(gbc.pc(), 0x5a6f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 58 0354
        gbc.setState(0xaf1, 0x2443, 0x1a70, 0x6be5, 0xbeb9, 0xb264, 0x1, 0x1);
        gbc.writeMem(0xaf1, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x2443);
        EXPECT(gbc.pc(), 0xaf2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 58 0355
        gbc.setState(0x6eab, 0xf7b3, 0xfde0, 0x1bc3, 0x5477, 0x135c, 0x1, 0x0);
        gbc.writeMem(0x6eab, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0xf7b3);
        EXPECT(gbc.pc(), 0x6eac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 58 0357
        gbc.setState(0x7cfe, 0xd574, 0x160, 0xff5, 0xb9e1, 0xe72d, 0x1, 0x1);
        gbc.writeMem(0x7cfe, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0xd574);
        EXPECT(gbc.pc(), 0x7cff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 58 0358
        gbc.setState(0x6cd1, 0xff0a, 0x8400, 0xea60, 0xf2d4, 0x9086, 0x0, 0x1);
        gbc.writeMem(0x6cd1, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0xff0a);
        EXPECT(gbc.pc(), 0x6cd2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 58 0359
        gbc.setState(0xe6ff, 0x20bc, 0xdf20, 0xc919, 0xa0d3, 0x1615, 0x1, 0x0);
        gbc.writeMem(0xe6ff, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x20bc);
        EXPECT(gbc.pc(), 0xe700);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe6ff), 0x58);
        // 58 035A
        gbc.setState(0x6173, 0xb231, 0x8ca0, 0x8f5b, 0x9796, 0xeb5, 0x1, 0x1);
        gbc.writeMem(0x6173, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0xb231);
        EXPECT(gbc.pc(), 0x6174);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 58 035B
        gbc.setState(0x3848, 0xf5b, 0xfc20, 0x65b2, 0x22ce, 0xfd24, 0x1, 0x1);
        gbc.writeMem(0x3848, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0xf5b);
        EXPECT(gbc.pc(), 0x3849);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 58 035C
        gbc.setState(0x3291, 0xe451, 0xe880, 0x81cc, 0x9c09, 0x268d, 0x0, 0x0);
        gbc.writeMem(0x3291, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0xe451);
        EXPECT(gbc.pc(), 0x3292);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 58 035D
        gbc.setState(0x50a7, 0xfb48, 0x44f0, 0xfe5f, 0xa822, 0xdfa3, 0x1, 0x0);
        gbc.writeMem(0x50a7, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0xfb48);
        EXPECT(gbc.pc(), 0x50a8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 58 035E
        gbc.setState(0xc079, 0x52a3, 0xab30, 0x902e, 0xcfaa, 0x36a7, 0x1, 0x1);
        gbc.writeMem(0xc079, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x52a3);
        EXPECT(gbc.pc(), 0xc07a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc079), 0x58);
        // 58 0360
        gbc.setState(0xbcca, 0xfb23, 0x81a0, 0x507c, 0xfa74, 0x91af, 0x1, 0x0);
        gbc.writeMem(0xbcca, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0xfb23);
        EXPECT(gbc.pc(), 0xbccb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbcca), 0x58);
        // 58 0361
        gbc.setState(0xd242, 0xc2f5, 0xec10, 0xdb70, 0x92fd, 0xd945, 0x0, 0x0);
        gbc.writeMem(0xd242, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0xc2f5);
        EXPECT(gbc.pc(), 0xd243);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd242), 0x58);
        // 58 0362
        gbc.setState(0xdb85, 0xabec, 0x4010, 0xf1e3, 0x83e1, 0xbcc9, 0x0, 0x0);
        gbc.writeMem(0xdb85, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0xabec);
        EXPECT(gbc.pc(), 0xdb86);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdb85), 0x58);
        // 58 0363
        gbc.setState(0x76d2, 0x7579, 0x8530, 0x94df, 0x4084, 0x18a7, 0x1, 0x0);
        gbc.writeMem(0x76d2, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x7579);
        EXPECT(gbc.pc(), 0x76d3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 58 0364
        gbc.setState(0xccd8, 0x4354, 0x7450, 0x735f, 0xac43, 0xa01a, 0x0, 0x1);
        gbc.writeMem(0xccd8, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x4354);
        EXPECT(gbc.pc(), 0xccd9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xccd8), 0x58);
        // 58 0365
        gbc.setState(0x4a1c, 0xd2aa, 0x850, 0x37fc, 0x694d, 0x472d, 0x0, 0x0);
        gbc.writeMem(0x4a1c, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0xd2aa);
        EXPECT(gbc.pc(), 0x4a1d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 58 0366
        gbc.setState(0x604, 0x6b13, 0x270, 0x95bb, 0xb277, 0x5069, 0x0, 0x1);
        gbc.writeMem(0x604, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x6b13);
        EXPECT(gbc.pc(), 0x605);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 58 0367
        gbc.setState(0x874c, 0x4bb9, 0xd850, 0x3a95, 0x3533, 0x1c9b, 0x1, 0x0);
        gbc.writeMem(0x874c, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x4bb9);
        EXPECT(gbc.pc(), 0x874d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x874c), 0x58);
        // 58 0368
        gbc.setState(0x1a33, 0xf4b1, 0x37f0, 0xa785, 0xf1b6, 0x1be6, 0x1, 0x0);
        gbc.writeMem(0x1a33, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xf4b1);
        EXPECT(gbc.pc(), 0x1a34);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 58 0369
        gbc.setState(0xbf49, 0x7cff, 0x4a40, 0x52a, 0xd6d5, 0x1fc7, 0x0, 0x0);
        gbc.writeMem(0xbf49, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x7cff);
        EXPECT(gbc.pc(), 0xbf4a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbf49), 0x58);
        // 58 036A
        gbc.setState(0x7572, 0xa446, 0x7e60, 0xb235, 0x45e3, 0xbea5, 0x0, 0x0);
        gbc.writeMem(0x7572, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xa446);
        EXPECT(gbc.pc(), 0x7573);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 58 036B
        gbc.setState(0x1d80, 0xa667, 0xeb10, 0x4506, 0x8c1f, 0xda10, 0x1, 0x1);
        gbc.writeMem(0x1d80, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xa667);
        EXPECT(gbc.pc(), 0x1d81);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 58 036C
        gbc.setState(0x2e3f, 0x975a, 0x3a40, 0xa933, 0xcc5, 0x7bf2, 0x1, 0x1);
        gbc.writeMem(0x2e3f, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x975a);
        EXPECT(gbc.pc(), 0x2e40);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 58 036D
        gbc.setState(0x9dae, 0x628a, 0x9080, 0xda6f, 0x7970, 0x4398, 0x0, 0x0);
        gbc.writeMem(0x9dae, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x628a);
        EXPECT(gbc.pc(), 0x9daf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9dae), 0x58);
        // 58 036E
        gbc.setState(0x7945, 0xb10f, 0x5a30, 0xa313, 0xb079, 0x93ec, 0x0, 0x1);
        gbc.writeMem(0x7945, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0xb10f);
        EXPECT(gbc.pc(), 0x7946);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 58 036F
        gbc.setState(0x64e6, 0xf6ef, 0x18f0, 0x5e66, 0xb05b, 0x1721, 0x1, 0x0);
        gbc.writeMem(0x64e6, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0xf6ef);
        EXPECT(gbc.pc(), 0x64e7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 58 0370
        gbc.setState(0x820c, 0xae9c, 0x61b0, 0x8212, 0xe05, 0x2241, 0x0, 0x0);
        gbc.writeMem(0x820c, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0xae9c);
        EXPECT(gbc.pc(), 0x820d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x820c), 0x58);
        // 58 0371
        gbc.setState(0x35b1, 0xd098, 0xb00, 0xb555, 0x26dd, 0x447b, 0x1, 0x0);
        gbc.writeMem(0x35b1, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0xd098);
        EXPECT(gbc.pc(), 0x35b2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 58 0372
        gbc.setState(0x1f4c, 0xdf85, 0x77a0, 0xa60c, 0x9b65, 0x649b, 0x1, 0x1);
        gbc.writeMem(0x1f4c, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0xdf85);
        EXPECT(gbc.pc(), 0x1f4d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 58 0373
        gbc.setState(0x140c, 0xc18a, 0x8ab0, 0x561, 0x79da, 0x6b71, 0x0, 0x0);
        gbc.writeMem(0x140c, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xc18a);
        EXPECT(gbc.pc(), 0x140d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 58 0374
        gbc.setState(0xc5be, 0xeeff, 0x5d90, 0xae5f, 0xec7, 0xf38a, 0x1, 0x0);
        gbc.writeMem(0xc5be, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xeeff);
        EXPECT(gbc.pc(), 0xc5bf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc5be), 0x58);
        // 58 0375
        gbc.setState(0xe262, 0xf4b1, 0xa1a0, 0x35d9, 0xacda, 0x6452, 0x0, 0x1);
        gbc.writeMem(0xe262, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0xf4b1);
        EXPECT(gbc.pc(), 0xe263);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe262), 0x58);
        // 58 0376
        gbc.setState(0x6980, 0xd30c, 0x30c0, 0x1d5d, 0x9291, 0xa25b, 0x1, 0x0);
        gbc.writeMem(0x6980, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0xd30c);
        EXPECT(gbc.pc(), 0x6981);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 58 0377
        gbc.setState(0x3a01, 0x67da, 0x2450, 0xc2b6, 0x8428, 0x62fa, 0x0, 0x0);
        gbc.writeMem(0x3a01, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x67da);
        EXPECT(gbc.pc(), 0x3a02);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 58 0378
        gbc.setState(0xd5da, 0xea89, 0xaee0, 0x91df, 0x52e6, 0x2c25, 0x1, 0x1);
        gbc.writeMem(0xd5da, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0xea89);
        EXPECT(gbc.pc(), 0xd5db);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd5da), 0x58);
        // 58 0379
        gbc.setState(0x456c, 0x44fb, 0xe900, 0x266d, 0xc689, 0x10ce, 0x0, 0x1);
        gbc.writeMem(0x456c, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x44fb);
        EXPECT(gbc.pc(), 0x456d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 58 037A
        gbc.setState(0x5368, 0xdc91, 0x3cc0, 0xf247, 0xdf4f, 0x17b1, 0x1, 0x1);
        gbc.writeMem(0x5368, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0xdc91);
        EXPECT(gbc.pc(), 0x5369);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 58 037B
        gbc.setState(0xab3, 0x158c, 0x2750, 0xe2e4, 0xaa4f, 0x2c98, 0x0, 0x1);
        gbc.writeMem(0xab3, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x158c);
        EXPECT(gbc.pc(), 0xab4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 58 037C
        gbc.setState(0x4d6e, 0x45e7, 0xa550, 0x1f3a, 0x71e2, 0xc569, 0x1, 0x1);
        gbc.writeMem(0x4d6e, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x45e7);
        EXPECT(gbc.pc(), 0x4d6f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 58 037F
        gbc.setState(0xa4d9, 0x9210, 0x1f90, 0xc5a6, 0xaa7e, 0x18d3, 0x1, 0x1);
        gbc.writeMem(0xa4d9, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x9210);
        EXPECT(gbc.pc(), 0xa4da);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa4d9), 0x58);
        // 58 0380
        gbc.setState(0x85d9, 0xb0e3, 0x3930, 0x53db, 0xf241, 0x975a, 0x0, 0x0);
        gbc.writeMem(0x85d9, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0xb0e3);
        EXPECT(gbc.pc(), 0x85da);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x85d9), 0x58);
        // 58 0381
        gbc.setState(0x334d, 0x869f, 0xb390, 0x2c7d, 0x2b6e, 0x3d71, 0x1, 0x1);
        gbc.writeMem(0x334d, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x869f);
        EXPECT(gbc.pc(), 0x334e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 58 0382
        gbc.setState(0x1123, 0x6a3d, 0xeca0, 0xab7e, 0xe5ea, 0xef68, 0x1, 0x0);
        gbc.writeMem(0x1123, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x6a3d);
        EXPECT(gbc.pc(), 0x1124);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 58 0383
        gbc.setState(0x30e6, 0x2f4a, 0x6400, 0x2a27, 0x3e01, 0xf1d3, 0x1, 0x1);
        gbc.writeMem(0x30e6, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x2f4a);
        EXPECT(gbc.pc(), 0x30e7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 58 0385
        gbc.setState(0x7343, 0xc191, 0x9770, 0x2649, 0xcc11, 0xdb45, 0x0, 0x0);
        gbc.writeMem(0x7343, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0xc191);
        EXPECT(gbc.pc(), 0x7344);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 58 0386
        gbc.setState(0xeb12, 0xc75, 0x7ff0, 0x2e5f, 0x5163, 0xdd89, 0x1, 0x0);
        gbc.writeMem(0xeb12, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0xc75);
        EXPECT(gbc.pc(), 0xeb13);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeb12), 0x58);
        // 58 0387
        gbc.setState(0xc082, 0xa5b3, 0xabc0, 0x6e8a, 0xb837, 0x5754, 0x1, 0x1);
        gbc.writeMem(0xc082, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0xa5b3);
        EXPECT(gbc.pc(), 0xc083);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc082), 0x58);
        // 58 0388
        gbc.setState(0x12e5, 0x2028, 0xc540, 0x83ec, 0x68b0, 0xdb94, 0x1, 0x1);
        gbc.writeMem(0x12e5, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x2028);
        EXPECT(gbc.pc(), 0x12e6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 58 038A
        gbc.setState(0xbed7, 0xe159, 0xb340, 0xc17e, 0x9598, 0xcbfb, 0x1, 0x0);
        gbc.writeMem(0xbed7, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0xe159);
        EXPECT(gbc.pc(), 0xbed8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbed7), 0x58);
        // 58 038C
        gbc.setState(0xa0d3, 0x3f09, 0x99f0, 0x64ec, 0x9db7, 0x9700, 0x0, 0x1);
        gbc.writeMem(0xa0d3, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x3f09);
        EXPECT(gbc.pc(), 0xa0d4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa0d3), 0x58);
        // 58 038D
        gbc.setState(0xc552, 0xa21e, 0x8800, 0x9b43, 0x5884, 0x324f, 0x0, 0x1);
        gbc.writeMem(0xc552, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0xa21e);
        EXPECT(gbc.pc(), 0xc553);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc552), 0x58);
        // 58 038E
        gbc.setState(0xa9a8, 0x445d, 0x2170, 0xd07a, 0x9b49, 0x878f, 0x1, 0x0);
        gbc.writeMem(0xa9a8, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x445d);
        EXPECT(gbc.pc(), 0xa9a9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa9a8), 0x58);
        // 58 038F
        gbc.setState(0xc2a2, 0xa383, 0xdb60, 0x371e, 0x68c7, 0x3f8, 0x0, 0x0);
        gbc.writeMem(0xc2a2, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0xa383);
        EXPECT(gbc.pc(), 0xc2a3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc2a2), 0x58);
        // 58 0390
        gbc.setState(0x7541, 0x38ff, 0x5560, 0x1037, 0x9a7d, 0x8fb1, 0x1, 0x1);
        gbc.writeMem(0x7541, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x38ff);
        EXPECT(gbc.pc(), 0x7542);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 58 0392
        gbc.setState(0x117c, 0xc541, 0x9570, 0xfc56, 0x49fc, 0x895, 0x1, 0x1);
        gbc.writeMem(0x117c, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0xc541);
        EXPECT(gbc.pc(), 0x117d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 58 0393
        gbc.setState(0x24cb, 0x3284, 0x4150, 0x8d88, 0x416c, 0x4872, 0x0, 0x1);
        gbc.writeMem(0x24cb, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x3284);
        EXPECT(gbc.pc(), 0x24cc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 58 0394
        gbc.setState(0x7231, 0x2d9, 0x6500, 0xef0a, 0x4c22, 0x24c2, 0x1, 0x0);
        gbc.writeMem(0x7231, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x2d9);
        EXPECT(gbc.pc(), 0x7232);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 58 0395
        gbc.setState(0x2a24, 0x9741, 0xbaa0, 0x813b, 0xcb4e, 0x9d88, 0x1, 0x0);
        gbc.writeMem(0x2a24, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x9741);
        EXPECT(gbc.pc(), 0x2a25);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 58 0396
        gbc.setState(0x188d, 0xd482, 0x3410, 0x45d6, 0xca35, 0x82a3, 0x1, 0x1);
        gbc.writeMem(0x188d, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0xd482);
        EXPECT(gbc.pc(), 0x188e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 58 0397
        gbc.setState(0x43cb, 0xb6fd, 0xc4a0, 0xdd6c, 0xe8ed, 0xba68, 0x1, 0x0);
        gbc.writeMem(0x43cb, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0xb6fd);
        EXPECT(gbc.pc(), 0x43cc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 58 0398
        gbc.setState(0x5a14, 0x5b0f, 0x36e0, 0x2de6, 0xd0c2, 0x8e1d, 0x1, 0x0);
        gbc.writeMem(0x5a14, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x5b0f);
        EXPECT(gbc.pc(), 0x5a15);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 58 0399
        gbc.setState(0x8f6, 0xf91, 0x33e0, 0xb6fd, 0x9140, 0x7ddf, 0x0, 0x1);
        gbc.writeMem(0x8f6, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0xf91);
        EXPECT(gbc.pc(), 0x8f7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 58 039A
        gbc.setState(0x3a35, 0x8410, 0xb9b0, 0x568c, 0x5857, 0xb05a, 0x0, 0x0);
        gbc.writeMem(0x3a35, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x8410);
        EXPECT(gbc.pc(), 0x3a36);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 58 039B
        gbc.setState(0x498b, 0x26ce, 0xb0d0, 0xa2ee, 0x3c10, 0xa46, 0x0, 0x0);
        gbc.writeMem(0x498b, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x26ce);
        EXPECT(gbc.pc(), 0x498c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 58 039C
        gbc.setState(0x90ea, 0xc5d0, 0x3850, 0xd29b, 0xdc77, 0x1ad2, 0x1, 0x1);
        gbc.writeMem(0x90ea, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0xc5d0);
        EXPECT(gbc.pc(), 0x90eb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x90ea), 0x58);
        // 58 039D
        gbc.setState(0x2eb0, 0x5c7e, 0x6f0, 0x93f1, 0x5c28, 0xc84, 0x0, 0x1);
        gbc.writeMem(0x2eb0, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x5c7e);
        EXPECT(gbc.pc(), 0x2eb1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 58 039E
        gbc.setState(0x93e9, 0x7f60, 0xa590, 0x5db0, 0x8df8, 0x83d2, 0x1, 0x1);
        gbc.writeMem(0x93e9, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x7f60);
        EXPECT(gbc.pc(), 0x93ea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x93e9), 0x58);
        // 58 039F
        gbc.setState(0x523f, 0x787f, 0x5fc0, 0x193d, 0x237c, 0x397d, 0x1, 0x1);
        gbc.writeMem(0x523f, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x787f);
        EXPECT(gbc.pc(), 0x5240);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 58 03A0
        gbc.setState(0x8db0, 0x4a71, 0x7b0, 0xd388, 0x4f7a, 0x66fe, 0x1, 0x0);
        gbc.writeMem(0x8db0, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x4a71);
        EXPECT(gbc.pc(), 0x8db1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8db0), 0x58);
        // 58 03A1
        gbc.setState(0xc4e3, 0x2675, 0x84c0, 0x362c, 0xfbcc, 0x24ff, 0x1, 0x1);
        gbc.writeMem(0xc4e3, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x2675);
        EXPECT(gbc.pc(), 0xc4e4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc4e3), 0x58);
        // 58 03A2
        gbc.setState(0x6d91, 0x5f1b, 0x33c0, 0x1579, 0x807c, 0x1474, 0x0, 0x1);
        gbc.writeMem(0x6d91, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x5f1b);
        EXPECT(gbc.pc(), 0x6d92);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 58 03A3
        gbc.setState(0x69df, 0x655, 0x76e0, 0x99e5, 0x2bb0, 0x36ba, 0x0, 0x1);
        gbc.writeMem(0x69df, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x655);
        EXPECT(gbc.pc(), 0x69e0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 58 03A4
        gbc.setState(0x1eb6, 0xe590, 0x910, 0xcfdb, 0xdde6, 0xcacc, 0x1, 0x1);
        gbc.writeMem(0x1eb6, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0xe590);
        EXPECT(gbc.pc(), 0x1eb7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 58 03A5
        gbc.setState(0x246a, 0x6862, 0x54f0, 0x5265, 0x80d4, 0x67d, 0x0, 0x0);
        gbc.writeMem(0x246a, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x6862);
        EXPECT(gbc.pc(), 0x246b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 58 03A7
        gbc.setState(0x77f7, 0xbbed, 0x4540, 0xcce, 0x5909, 0xf118, 0x1, 0x0);
        gbc.writeMem(0x77f7, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xbbed);
        EXPECT(gbc.pc(), 0x77f8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 58 03A9
        gbc.setState(0x91b4, 0x8982, 0x9170, 0x4efa, 0x6b8b, 0x7c31, 0x0, 0x1);
        gbc.writeMem(0x91b4, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x8982);
        EXPECT(gbc.pc(), 0x91b5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x91b4), 0x58);
        // 58 03AB
        gbc.setState(0xdb3d, 0x3c03, 0x8d30, 0x648, 0x6933, 0xa8f1, 0x0, 0x1);
        gbc.writeMem(0xdb3d, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x3c03);
        EXPECT(gbc.pc(), 0xdb3e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdb3d), 0x58);
        // 58 03AC
        gbc.setState(0xba, 0x757d, 0x3e60, 0x84ad, 0x95f5, 0xa34f, 0x1, 0x1);
        gbc.writeMem(0xba, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x757d);
        EXPECT(gbc.pc(), 0xbb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 58 03AD
        gbc.setState(0xcd90, 0x653f, 0x95b0, 0x28fb, 0xcf5f, 0x6c00, 0x0, 0x1);
        gbc.writeMem(0xcd90, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x653f);
        EXPECT(gbc.pc(), 0xcd91);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcd90), 0x58);
        // 58 03AE
        gbc.setState(0x6f9f, 0x5b54, 0x6140, 0xbdfc, 0x9527, 0x2fb3, 0x1, 0x0);
        gbc.writeMem(0x6f9f, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x5b54);
        EXPECT(gbc.pc(), 0x6fa0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 58 03AF
        gbc.setState(0x7dac, 0x438b, 0xa410, 0x651a, 0x2de9, 0xb94e, 0x1, 0x1);
        gbc.writeMem(0x7dac, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x438b);
        EXPECT(gbc.pc(), 0x7dad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 58 03B0
        gbc.setState(0x6d3b, 0xf14e, 0x4db0, 0xa4e6, 0x72e9, 0x6fe7, 0x1, 0x1);
        gbc.writeMem(0x6d3b, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xf14e);
        EXPECT(gbc.pc(), 0x6d3c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 58 03B1
        gbc.setState(0x9265, 0x6a0f, 0x8de0, 0xc4aa, 0xc270, 0x489c, 0x0, 0x0);
        gbc.writeMem(0x9265, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x6a0f);
        EXPECT(gbc.pc(), 0x9266);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9265), 0x58);
        // 58 03B2
        gbc.setState(0x463d, 0x963e, 0x7540, 0xf5de, 0xf64, 0xf52b, 0x1, 0x1);
        gbc.writeMem(0x463d, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x963e);
        EXPECT(gbc.pc(), 0x463e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 58 03B3
        gbc.setState(0x9564, 0x6bbb, 0xc000, 0x83be, 0xd460, 0xd585, 0x1, 0x1);
        gbc.writeMem(0x9564, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x6bbb);
        EXPECT(gbc.pc(), 0x9565);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9564), 0x58);
        // 58 03B4
        gbc.setState(0x60d5, 0x5d15, 0x7090, 0xe5f0, 0x6c38, 0x3051, 0x1, 0x1);
        gbc.writeMem(0x60d5, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x5d15);
        EXPECT(gbc.pc(), 0x60d6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 58 03B5
        gbc.setState(0x4f1f, 0x18f7, 0x720, 0x497d, 0x96a7, 0x1e1b, 0x0, 0x0);
        gbc.writeMem(0x4f1f, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x18f7);
        EXPECT(gbc.pc(), 0x4f20);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 58 03B7
        gbc.setState(0xaa93, 0x5170, 0x4100, 0xd365, 0xae99, 0x3dda, 0x0, 0x0);
        gbc.writeMem(0xaa93, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x5170);
        EXPECT(gbc.pc(), 0xaa94);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaa93), 0x58);
        // 58 03B8
        gbc.setState(0xb0aa, 0xf7a7, 0x4170, 0xb0bc, 0x7d3c, 0x78c4, 0x1, 0x1);
        gbc.writeMem(0xb0aa, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0xf7a7);
        EXPECT(gbc.pc(), 0xb0ab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb0aa), 0x58);
        // 58 03B9
        gbc.setState(0x3ae3, 0x2700, 0xde50, 0x7e15, 0x1d61, 0x19f4, 0x0, 0x1);
        gbc.writeMem(0x3ae3, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x2700);
        EXPECT(gbc.pc(), 0x3ae4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 58 03BA
        gbc.setState(0xa8f7, 0x3a18, 0x3520, 0x9fbc, 0xdfc2, 0x56d8, 0x0, 0x0);
        gbc.writeMem(0xa8f7, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x3a18);
        EXPECT(gbc.pc(), 0xa8f8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa8f7), 0x58);
        // 58 03BB
        gbc.setState(0xc63b, 0x64f1, 0x1f0, 0xf5b8, 0x9e54, 0x33cc, 0x0, 0x1);
        gbc.writeMem(0xc63b, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x64f1);
        EXPECT(gbc.pc(), 0xc63c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc63b), 0x58);
        // 58 03BC
        gbc.setState(0x82ba, 0xc, 0x50f0, 0x681c, 0x4822, 0x55a1, 0x1, 0x1);
        gbc.writeMem(0x82ba, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0xc);
        EXPECT(gbc.pc(), 0x82bb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x82ba), 0x58);
        // 58 03BD
        gbc.setState(0x4777, 0xcf24, 0xa010, 0x5ec7, 0x2757, 0x186b, 0x1, 0x0);
        gbc.writeMem(0x4777, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0xcf24);
        EXPECT(gbc.pc(), 0x4778);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 58 03BE
        gbc.setState(0xd0d, 0xaf08, 0x6230, 0x24fa, 0xe25c, 0x3567, 0x1, 0x0);
        gbc.writeMem(0xd0d, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0xaf08);
        EXPECT(gbc.pc(), 0xd0e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 58 03BF
        gbc.setState(0x7489, 0x77e9, 0x2c30, 0x1c97, 0x9f64, 0xe0b0, 0x0, 0x1);
        gbc.writeMem(0x7489, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x77e9);
        EXPECT(gbc.pc(), 0x748a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 58 03C0
        gbc.setState(0x5c22, 0xd25d, 0x3d80, 0x6973, 0xdc06, 0x24e9, 0x0, 0x1);
        gbc.writeMem(0x5c22, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0xd25d);
        EXPECT(gbc.pc(), 0x5c23);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 58 03C1
        gbc.setState(0x2bf1, 0x2e36, 0xb440, 0x7812, 0x1736, 0xf9fc, 0x1, 0x0);
        gbc.writeMem(0x2bf1, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x2e36);
        EXPECT(gbc.pc(), 0x2bf2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 58 03C2
        gbc.setState(0x3ee1, 0x9b53, 0x4e80, 0x8eb7, 0xc58c, 0x12b9, 0x1, 0x1);
        gbc.writeMem(0x3ee1, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x9b53);
        EXPECT(gbc.pc(), 0x3ee2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 58 03C3
        gbc.setState(0x2030, 0xca3d, 0x8170, 0xf0c8, 0x731a, 0xd4d5, 0x0, 0x1);
        gbc.writeMem(0x2030, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0xca3d);
        EXPECT(gbc.pc(), 0x2031);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 58 03C4
        gbc.setState(0xd501, 0x402, 0xec10, 0x68eb, 0xe13f, 0x711c, 0x1, 0x1);
        gbc.writeMem(0xd501, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x402);
        EXPECT(gbc.pc(), 0xd502);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd501), 0x58);
        // 58 03C5
        gbc.setState(0x5156, 0xa8a8, 0xb540, 0x563e, 0x68e8, 0x229d, 0x1, 0x0);
        gbc.writeMem(0x5156, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0xa8a8);
        EXPECT(gbc.pc(), 0x5157);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 58 03C6
        gbc.setState(0x6268, 0x2f0d, 0xbe10, 0x296a, 0x7ff2, 0xf8f0, 0x1, 0x0);
        gbc.writeMem(0x6268, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x2f0d);
        EXPECT(gbc.pc(), 0x6269);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 58 03C7
        gbc.setState(0xe3e8, 0xe761, 0xc920, 0xf301, 0xfb13, 0x14e8, 0x0, 0x1);
        gbc.writeMem(0xe3e8, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0xe761);
        EXPECT(gbc.pc(), 0xe3e9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe3e8), 0x58);
        // 58 03C8
        gbc.setState(0x37c8, 0xe514, 0x5750, 0xb4c3, 0xb478, 0xe2b9, 0x0, 0x1);
        gbc.writeMem(0x37c8, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0xe514);
        EXPECT(gbc.pc(), 0x37c9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 58 03C9
        gbc.setState(0xabae, 0x53c5, 0x3e20, 0x8a1e, 0x3375, 0x9839, 0x1, 0x0);
        gbc.writeMem(0xabae, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x53c5);
        EXPECT(gbc.pc(), 0xabaf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xabae), 0x58);
        // 58 03CB
        gbc.setState(0x5154, 0xe223, 0xc220, 0x23a1, 0x65bd, 0x8a95, 0x0, 0x1);
        gbc.writeMem(0x5154, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0xe223);
        EXPECT(gbc.pc(), 0x5155);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 58 03CC
        gbc.setState(0xe0b4, 0xcbb7, 0x1990, 0x585e, 0x80c8, 0x6366, 0x1, 0x1);
        gbc.writeMem(0xe0b4, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0xcbb7);
        EXPECT(gbc.pc(), 0xe0b5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe0b4), 0x58);
        // 58 03CD
        gbc.setState(0xbd1f, 0x5054, 0xe650, 0xb73f, 0xe6ca, 0x53bd, 0x1, 0x1);
        gbc.writeMem(0xbd1f, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x5054);
        EXPECT(gbc.pc(), 0xbd20);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbd1f), 0x58);
        // 58 03CE
        gbc.setState(0xd4fb, 0x7221, 0xaf80, 0x201d, 0x437a, 0x7163, 0x0, 0x1);
        gbc.writeMem(0xd4fb, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x7221);
        EXPECT(gbc.pc(), 0xd4fc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd4fb), 0x58);
        // 58 03CF
        gbc.setState(0x83, 0x94e4, 0x29f0, 0xc1e6, 0xb97, 0xdf7c, 0x1, 0x0);
        gbc.writeMem(0x83, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x94e4);
        EXPECT(gbc.pc(), 0x84);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 58 03D0
        gbc.setState(0x51d, 0x5f6e, 0xf820, 0xb738, 0x3311, 0xdcb6, 0x1, 0x0);
        gbc.writeMem(0x51d, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x5f6e);
        EXPECT(gbc.pc(), 0x51e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 58 03D1
        gbc.setState(0x785, 0x9221, 0x2900, 0xd4fc, 0xd647, 0x1eb8, 0x0, 0x1);
        gbc.writeMem(0x785, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x9221);
        EXPECT(gbc.pc(), 0x786);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 58 03D2
        gbc.setState(0x32e2, 0xb7b7, 0x790, 0xd2b2, 0x71d7, 0x4663, 0x1, 0x0);
        gbc.writeMem(0x32e2, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0xb7b7);
        EXPECT(gbc.pc(), 0x32e3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 58 03D3
        gbc.setState(0xfd8, 0x899f, 0xe50, 0xb4a4, 0xdb69, 0x5105, 0x0, 0x1);
        gbc.writeMem(0xfd8, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x899f);
        EXPECT(gbc.pc(), 0xfd9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 58 03D4
        gbc.setState(0xac27, 0xd8c5, 0x6ca0, 0xb565, 0xa37a, 0xc9a, 0x0, 0x1);
        gbc.writeMem(0xac27, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0xd8c5);
        EXPECT(gbc.pc(), 0xac28);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xac27), 0x58);
        // 58 03D5
        gbc.setState(0x9979, 0x1fa0, 0xd060, 0x95ea, 0xd13b, 0x9e6e, 0x1, 0x1);
        gbc.writeMem(0x9979, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x1fa0);
        EXPECT(gbc.pc(), 0x997a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9979), 0x58);
        // 58 03D6
        gbc.setState(0x4095, 0x4df5, 0xcdf0, 0x9808, 0x3674, 0x336f, 0x1, 0x1);
        gbc.writeMem(0x4095, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x4df5);
        EXPECT(gbc.pc(), 0x4096);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 58 03D7
        gbc.setState(0xbe31, 0xaa2a, 0xc2e0, 0xaf9f, 0xe244, 0x7d89, 0x0, 0x1);
        gbc.writeMem(0xbe31, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0xaa2a);
        EXPECT(gbc.pc(), 0xbe32);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbe31), 0x58);
        // 58 03D8
        gbc.setState(0x9217, 0xab4, 0x79e0, 0xd1b6, 0xb24c, 0xb78b, 0x1, 0x1);
        gbc.writeMem(0x9217, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0xab4);
        EXPECT(gbc.pc(), 0x9218);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9217), 0x58);
        // 58 03D9
        gbc.setState(0x1e79, 0x99eb, 0x9970, 0xaf16, 0x23e1, 0xd948, 0x1, 0x1);
        gbc.writeMem(0x1e79, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x99eb);
        EXPECT(gbc.pc(), 0x1e7a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 58 03DA
        gbc.setState(0x7b2f, 0xfdc9, 0x3570, 0x8751, 0x54b8, 0x69db, 0x1, 0x0);
        gbc.writeMem(0x7b2f, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0xfdc9);
        EXPECT(gbc.pc(), 0x7b30);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 58 03DB
        gbc.setState(0x224b, 0xa4a8, 0x18e0, 0xd248, 0x8d78, 0x3c7c, 0x1, 0x1);
        gbc.writeMem(0x224b, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xa4a8);
        EXPECT(gbc.pc(), 0x224c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 58 03DC
        gbc.setState(0xb8aa, 0xd310, 0x7790, 0xbb4, 0x20dc, 0xdec2, 0x1, 0x0);
        gbc.writeMem(0xb8aa, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0xd310);
        EXPECT(gbc.pc(), 0xb8ab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb8aa), 0x58);
        // 58 03DD
        gbc.setState(0x6f48, 0x2b39, 0x2dc0, 0x4b15, 0x5aed, 0xee43, 0x0, 0x1);
        gbc.writeMem(0x6f48, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x2b39);
        EXPECT(gbc.pc(), 0x6f49);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 58 03DE
        gbc.setState(0xb664, 0xeccf, 0x36e0, 0x229, 0x983a, 0x741c, 0x1, 0x0);
        gbc.writeMem(0xb664, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0xeccf);
        EXPECT(gbc.pc(), 0xb665);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb664), 0x58);
        // 58 03DF
        gbc.setState(0x939d, 0x9122, 0xe850, 0xb506, 0xb472, 0x63ef, 0x0, 0x0);
        gbc.writeMem(0x939d, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x9122);
        EXPECT(gbc.pc(), 0x939e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x939d), 0x58);
        // 58 03E0
        gbc.setState(0x684e, 0x3f87, 0xfc10, 0x3dda, 0xc843, 0xd5a1, 0x0, 0x0);
        gbc.writeMem(0x684e, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x3f87);
        EXPECT(gbc.pc(), 0x684f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 58 03E1
        gbc.setState(0xe901, 0x1806, 0xc520, 0x6344, 0xc05f, 0x1d59, 0x1, 0x0);
        gbc.writeMem(0xe901, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x1806);
        EXPECT(gbc.pc(), 0xe902);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe901), 0x58);
        // 58 03E2
        gbc.setState(0x33fa, 0x60e6, 0xde10, 0x6460, 0xf0bf, 0xa09f, 0x1, 0x1);
        gbc.writeMem(0x33fa, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x60e6);
        EXPECT(gbc.pc(), 0x33fb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 58 03E3
        gbc.setState(0x6f7e, 0xebde, 0x2fa0, 0x45a2, 0xef, 0x38db, 0x0, 0x0);
        gbc.writeMem(0x6f7e, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0xebde);
        EXPECT(gbc.pc(), 0x6f7f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 58 03E4
        gbc.setState(0xa571, 0x99d9, 0xf5d0, 0xd237, 0x3ab9, 0xc25d, 0x1, 0x0);
        gbc.writeMem(0xa571, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x99d9);
        EXPECT(gbc.pc(), 0xa572);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa571), 0x58);
        // 58 03E5
        gbc.setState(0xb9cd, 0x2f89, 0x30e0, 0x3f24, 0x7076, 0x3617, 0x1, 0x0);
        gbc.writeMem(0xb9cd, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x2f89);
        EXPECT(gbc.pc(), 0xb9ce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb9cd), 0x58);
        // 58 03E6
        gbc.setState(0xb3e7, 0x1bb0, 0x4230, 0xb509, 0x58c8, 0x9261, 0x1, 0x1);
        gbc.writeMem(0xb3e7, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x1bb0);
        EXPECT(gbc.pc(), 0xb3e8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb3e7), 0x58);
        // 58 03E7
        gbc.setState(0x8860, 0xb9e2, 0x95e0, 0x10f3, 0xdfb, 0xc755, 0x1, 0x1);
        gbc.writeMem(0x8860, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0xb9e2);
        EXPECT(gbc.pc(), 0x8861);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8860), 0x58);
    }
}
#endif
